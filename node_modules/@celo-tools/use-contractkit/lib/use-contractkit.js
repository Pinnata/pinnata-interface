"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.useContractKitInternal = exports.useContractKit = void 0;
var react_1 = require("react");
var contract_kit_provider_1 = require("./contract-kit-provider");
var use_contract_kit_methods_1 = require("./use-contract-kit-methods");
var useContractKit = function () {
    var _a = react_1.useContext(contract_kit_provider_1.ContractKitContext)[0], dapp = _a.dapp, connector = _a.connector, connectorInitError = _a.connectorInitError, address = _a.address, network = _a.network;
    var _b = use_contract_kit_methods_1.useContractKitMethods(), destroy = _b.destroy, updateNetwork = _b.updateNetwork, connect = _b.connect, getConnectedKit = _b.getConnectedKit, performActions = _b.performActions;
    return {
        address: address,
        dapp: dapp,
        network: network,
        updateNetwork: updateNetwork,
        kit: connector.kit,
        walletType: connector.type,
        account: connector.account,
        initialised: connector.initialised,
        performActions: performActions,
        getConnectedKit: getConnectedKit,
        connect: connect,
        destroy: destroy,
        initError: connectorInitError,
    };
};
exports.useContractKit = useContractKit;
/**
 * useContractKit with internal methods exposed. Package use only.
 */
var useContractKitInternal = function () {
    var initConnector = use_contract_kit_methods_1.useContractKitMethods().initConnector;
    var _a = react_1.useContext(contract_kit_provider_1.ContractKitContext)[0], pendingActionCount = _a.pendingActionCount, connectionCallback = _a.connectionCallback;
    return __assign(__assign({}, exports.useContractKit()), { connectionCallback: connectionCallback, initConnector: initConnector, pendingActionCount: pendingActionCount });
};
exports.useContractKitInternal = useContractKitInternal;
//# sourceMappingURL=use-contractkit.js.map