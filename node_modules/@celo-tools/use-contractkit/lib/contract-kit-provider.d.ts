/// <reference types="react-modal" />
import React, { ReactNode } from 'react';
import { Actions, ActionsMap, ReducerState } from './contract-kit-reducer';
import { ActionModalProps, ConnectModalProps } from './modals';
import { Dapp, Network } from './types';
declare type Dispatcher = <Type extends Actions['type'], Payload extends ActionsMap[Type]>(type: Type, ...payload: Payload extends undefined ? [undefined?] : [Payload]) => void;
declare type ContractKitContextInterface = readonly [ReducerState, Dispatcher];
export declare const ContractKitContext: React.Context<ContractKitContextInterface>;
export declare const ContractKitProvider: React.FC<ContractKitProviderProps>;
interface ContractKitProviderProps {
    children: ReactNode;
    dapp: Dapp;
    networks?: Network[];
    connectModal?: ConnectModalProps;
    actionModal?: {
        reactModalProps?: Partial<ReactModal.Props>;
        render?: (props: ActionModalProps) => ReactNode;
    };
}
export {};
//# sourceMappingURL=contract-kit-provider.d.ts.map