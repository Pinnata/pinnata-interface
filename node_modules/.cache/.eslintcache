[{"/Users/kylescott/src/nomspace-interface/src/index.tsx":"1","/Users/kylescott/src/nomspace-interface/src/serviceWorker.ts":"2","/Users/kylescott/src/nomspace-interface/src/App.tsx":"3","/Users/kylescott/src/nomspace-interface/src/state/index.ts":"4","/Users/kylescott/src/nomspace-interface/src/theme/index.ts":"5","/Users/kylescott/src/nomspace-interface/src/components/ConnectWallet.tsx":"6","/Users/kylescott/src/nomspace-interface/src/components/Logo.tsx":"7","/Users/kylescott/src/nomspace-interface/src/state/global/index.ts":"8","/Users/kylescott/src/nomspace-interface/src/utils/address.ts":"9","/Users/kylescott/src/nomspace-interface/src/hooks/useBreakpoint.ts":"10","/Users/kylescott/src/nomspace-interface/src/icons/LogoIcon.tsx":"11","/Users/kylescott/src/nomspace-interface/src/components/QRNameModal.tsx":"12","/Users/kylescott/src/nomspace-interface/src/config.ts":"13","/Users/kylescott/src/nomspace-interface/src/utils/toastTx.tsx":"14","/Users/kylescott/src/nomspace-interface/src/components/BlockText.tsx":"15","/Users/kylescott/src/nomspace-interface/src/hooks/useAsyncState.ts":"16","/Users/kylescott/src/nomspace-interface/src/components/BlockscoutTxLink.tsx":"17","/Users/kylescott/src/nomspace-interface/src/components/TokenInfo.tsx":"18","/Users/kylescott/src/nomspace-interface/src/utils/token.ts":"19","/Users/kylescott/src/nomspace-interface/src/hooks/useERC.ts":"20","/Users/kylescott/src/nomspace-interface/src/components/DahliaTokenInfo.tsx":"21","/Users/kylescott/src/nomspace-interface/src/utils/number.ts":"22","/Users/kylescott/src/nomspace-interface/src/utils/eth.ts":"23","/Users/kylescott/src/nomspace-interface/src/hooks/useSafeBox.ts":"24","/Users/kylescott/src/nomspace-interface/src/components/TokenAmountInfo.tsx":"25","/Users/kylescott/src/nomspace-interface/src/components/SimpleTable.tsx":"26","/Users/kylescott/src/nomspace-interface/src/components/Container.tsx":"27","/Users/kylescott/src/nomspace-interface/src/components/PoolIcon.tsx":"28","/Users/kylescott/src/nomspace-interface/src/components/FarmInfo.tsx":"29","/Users/kylescott/src/nomspace-interface/src/components/TokenBorrowInfo.tsx":"30","/Users/kylescott/src/nomspace-interface/src/pages/Earn/Supply/index.tsx":"31","/Users/kylescott/src/nomspace-interface/src/pages/Earn/Withdraw/index.tsx":"32","/Users/kylescott/src/nomspace-interface/src/components/TokenInputForm.tsx":"33","/Users/kylescott/src/nomspace-interface/src/hooks/useERCmulti.ts":"34","/Users/kylescott/src/nomspace-interface/src/components/TokenSlider.tsx":"35","/Users/kylescott/src/nomspace-interface/src/components/BoxTokenAmountInfo.tsx":"36","/Users/kylescott/src/nomspace-interface/src/pages/NavBar/NavBarMain.js":"37","/Users/kylescott/src/nomspace-interface/src/pages/NavBar/NavBarStyles.ts":"38","/Users/kylescott/src/nomspace-interface/src/pages/NavBar/NavBarHome.tsx":"39","/Users/kylescott/src/nomspace-interface/src/data/NavigationData.tsx":"40","/Users/kylescott/src/nomspace-interface/src/pages/Home/Home.tsx":"41","/Users/kylescott/src/nomspace-interface/src/pages/Home/HomeStyles.ts":"42","/Users/kylescott/src/nomspace-interface/src/data/HomeData.tsx":"43","/Users/kylescott/src/nomspace-interface/src/pages/Earn/Earn.tsx":"44","/Users/kylescott/src/nomspace-interface/src/pages/Earn/EarnEntry.tsx":"45","/Users/kylescott/src/nomspace-interface/src/pages/Earn/EarnStyles.ts":"46","/Users/kylescott/src/nomspace-interface/src/pages/NavBar/NavBarSecondary.tsx":"47","/Users/kylescott/src/nomspace-interface/src/pages/Position/Position.tsx":"48","/Users/kylescott/src/nomspace-interface/src/pages/Position/PositionEntry.tsx":"49","/Users/kylescott/src/nomspace-interface/src/pages/Farm/Farm.tsx":"50","/Users/kylescott/src/nomspace-interface/src/pages/Farm/FarmEntry.tsx":"51","/Users/kylescott/src/nomspace-interface/src/pages/Farm/FarmPoolStyles.tsx":"52","/Users/kylescott/src/nomspace-interface/src/pages/Footer/Footer.tsx":"53","/Users/kylescott/src/nomspace-interface/src/pages/Footer/FooterStyles.tsx":"54","/Users/kylescott/src/nomspace-interface/src/components/MainPages.tsx":"55","/Users/kylescott/src/nomspace-interface/src/pages/Farm/newFarm/NewFarm.tsx":"56","/Users/kylescott/src/nomspace-interface/src/pages/Farm/newFarm/supply.tsx":"57","/Users/kylescott/src/nomspace-interface/src/pages/Farm/newFarm/borrow.tsx":"58","/Users/kylescott/src/nomspace-interface/src/pages/Farm/newFarm/confirm.tsx":"59","/Users/kylescott/src/nomspace-interface/src/pages/Position/Add/add.tsx":"60","/Users/kylescott/src/nomspace-interface/src/pages/Position/Add/supply.tsx":"61","/Users/kylescott/src/nomspace-interface/src/pages/Position/Add/borrow.tsx":"62","/Users/kylescott/src/nomspace-interface/src/pages/Position/Add/confirm.tsx":"63","/Users/kylescott/src/nomspace-interface/src/pages/Position/Remove/remove.tsx":"64","/Users/kylescott/src/nomspace-interface/src/pages/Position/Remove/removeTokens.tsx":"65","/Users/kylescott/src/nomspace-interface/src/pages/Position/Remove/payback.tsx":"66","/Users/kylescott/src/nomspace-interface/src/pages/Position/Remove/confirm.tsx":"67","/Users/kylescott/src/nomspace-interface/src/utils/rates.ts":"68","/Users/kylescott/src/nomspace-interface/src/components/Header.tsx":"69","/Users/kylescott/src/nomspace-interface/src/components/StyledLink.tsx":"70","/Users/kylescott/src/dahlia-interface/src/index.tsx":"71","/Users/kylescott/src/dahlia-interface/src/serviceWorker.ts":"72","/Users/kylescott/src/dahlia-interface/src/App.tsx":"73","/Users/kylescott/src/dahlia-interface/src/state/index.ts":"74","/Users/kylescott/src/dahlia-interface/src/theme/index.ts":"75","/Users/kylescott/src/dahlia-interface/src/pages/NavBar/NavBarMain.js":"76","/Users/kylescott/src/dahlia-interface/src/pages/NavBar/NavBarSecondary.tsx":"77","/Users/kylescott/src/dahlia-interface/src/pages/NavBar/NavBarHome.tsx":"78","/Users/kylescott/src/dahlia-interface/src/pages/Position/Position.tsx":"79","/Users/kylescott/src/dahlia-interface/src/pages/Farm/Farm.tsx":"80","/Users/kylescott/src/dahlia-interface/src/pages/Farm/newFarm/NewFarm.tsx":"81","/Users/kylescott/src/dahlia-interface/src/pages/Home/Home.tsx":"82","/Users/kylescott/src/dahlia-interface/src/pages/Position/Add/add.tsx":"83","/Users/kylescott/src/dahlia-interface/src/pages/Position/Remove/remove.tsx":"84","/Users/kylescott/src/dahlia-interface/src/pages/Earn/Earn.tsx":"85","/Users/kylescott/src/dahlia-interface/src/pages/NavBar/NavBarStyles.ts":"86","/Users/kylescott/src/dahlia-interface/src/components/ConnectWallet.tsx":"87","/Users/kylescott/src/dahlia-interface/src/pages/Earn/Supply/index.tsx":"88","/Users/kylescott/src/dahlia-interface/src/config.ts":"89","/Users/kylescott/src/dahlia-interface/src/pages/Earn/Withdraw/index.tsx":"90","/Users/kylescott/src/dahlia-interface/src/pages/Home/HomeStyles.ts":"91","/Users/kylescott/src/dahlia-interface/src/hooks/useAsyncState.ts":"92","/Users/kylescott/src/dahlia-interface/src/utils/token.ts":"93","/Users/kylescott/src/dahlia-interface/src/components/MainPages.tsx":"94","/Users/kylescott/src/dahlia-interface/src/components/SimpleTable.tsx":"95","/Users/kylescott/src/dahlia-interface/src/pages/Farm/newFarm/supply.tsx":"96","/Users/kylescott/src/dahlia-interface/src/pages/Farm/newFarm/confirm.tsx":"97","/Users/kylescott/src/dahlia-interface/src/pages/Position/PositionEntry.tsx":"98","/Users/kylescott/src/dahlia-interface/src/pages/Farm/FarmEntry.tsx":"99","/Users/kylescott/src/dahlia-interface/src/pages/Farm/newFarm/borrow.tsx":"100","/Users/kylescott/src/dahlia-interface/src/pages/Position/Add/borrow.tsx":"101","/Users/kylescott/src/dahlia-interface/src/pages/Position/Add/supply.tsx":"102","/Users/kylescott/src/dahlia-interface/src/pages/Position/Add/confirm.tsx":"103","/Users/kylescott/src/dahlia-interface/src/pages/Position/Remove/confirm.tsx":"104","/Users/kylescott/src/dahlia-interface/src/pages/Earn/EarnEntry.tsx":"105","/Users/kylescott/src/dahlia-interface/src/pages/Position/Remove/payback.tsx":"106","/Users/kylescott/src/dahlia-interface/src/pages/Position/Remove/removeTokens.tsx":"107","/Users/kylescott/src/dahlia-interface/src/data/HomeData.tsx":"108","/Users/kylescott/src/dahlia-interface/src/data/NavigationData.tsx":"109","/Users/kylescott/src/dahlia-interface/src/state/global/index.ts":"110","/Users/kylescott/src/dahlia-interface/src/utils/address.ts":"111","/Users/kylescott/src/dahlia-interface/src/utils/eth.ts":"112","/Users/kylescott/src/dahlia-interface/src/hooks/useSafeBox.ts":"113","/Users/kylescott/src/dahlia-interface/src/hooks/useERC.ts":"114","/Users/kylescott/src/dahlia-interface/src/utils/number.ts":"115","/Users/kylescott/src/dahlia-interface/src/utils/toastTx.tsx":"116","/Users/kylescott/src/dahlia-interface/src/components/TokenBorrowInfo.tsx":"117","/Users/kylescott/src/dahlia-interface/src/components/TokenInfo.tsx":"118","/Users/kylescott/src/dahlia-interface/src/components/BlockscoutTxLink.tsx":"119","/Users/kylescott/src/dahlia-interface/src/hooks/useERCmulti.ts":"120","/Users/kylescott/src/dahlia-interface/src/components/TokenAmountInfo.tsx":"121","/Users/kylescott/src/dahlia-interface/src/components/BlockText.tsx":"122","/Users/kylescott/src/dahlia-interface/src/components/TokenSlider.tsx":"123","/Users/kylescott/src/dahlia-interface/src/components/TokenInputForm.tsx":"124","/Users/kylescott/src/dahlia-interface/src/components/FarmInfo.tsx":"125","/Users/kylescott/src/dahlia-interface/src/components/DahliaTokenInfo.tsx":"126","/Users/kylescott/src/dahlia-interface/src/components/PoolIcon.tsx":"127","/Users/kylescott/src/dahlia-interface/src/components/Header.tsx":"128","/Users/kylescott/src/dahlia-interface/src/components/StyledLink.tsx":"129","/Users/kylescott/src/dahlia-interface/src/components/Logo.tsx":"130","/Users/kylescott/src/dahlia-interface/src/components/Footer.tsx":"131","/Users/kylescott/src/dahlia-interface/src/components/BoxTokenAmountInfo.tsx":"132"},{"size":1549,"mtime":1631222989437,"results":"133","hashOfConfig":"134"},{"size":5332,"mtime":1630362958138,"results":"135","hashOfConfig":"134"},{"size":2574,"mtime":1631225836551,"results":"136","hashOfConfig":"134"},{"size":368,"mtime":1630362958138,"results":"137","hashOfConfig":"134"},{"size":3801,"mtime":1631155164247,"results":"138","hashOfConfig":"134"},{"size":767,"mtime":1630362958135,"results":"139","hashOfConfig":"134"},{"size":495,"mtime":1631225106838,"results":"140","hashOfConfig":"134"},{"size":599,"mtime":1631224453955,"results":"141","hashOfConfig":"134"},{"size":276,"mtime":1630362958139,"results":"142","hashOfConfig":"134"},{"size":775,"mtime":1630362958136,"results":"143","hashOfConfig":"134"},{"size":3039,"mtime":1630362958137,"results":"144","hashOfConfig":"134"},{"size":1045,"mtime":1630362958135,"results":"145","hashOfConfig":"134"},{"size":6063,"mtime":1631204340098,"results":"146","hashOfConfig":"134"},{"size":328,"mtime":1630362958139,"results":"147","hashOfConfig":"134"},{"size":203,"mtime":1630362958135,"results":"148","hashOfConfig":"134"},{"size":525,"mtime":1630362958136,"results":"149","hashOfConfig":"134"},{"size":453,"mtime":1630362958135,"results":"150","hashOfConfig":"134"},{"size":454,"mtime":1630422152754,"results":"151","hashOfConfig":"134"},{"size":1273,"mtime":1631135152511,"results":"152","hashOfConfig":"134"},{"size":1091,"mtime":1630977693729,"results":"153","hashOfConfig":"134"},{"size":461,"mtime":1630422165625,"results":"154","hashOfConfig":"134"},{"size":564,"mtime":1630459094561,"results":"155","hashOfConfig":"134"},{"size":222,"mtime":1630459084907,"results":"156","hashOfConfig":"134"},{"size":860,"mtime":1630535820258,"results":"157","hashOfConfig":"134"},{"size":666,"mtime":1630806403325,"results":"158","hashOfConfig":"134"},{"size":285,"mtime":1630540078954,"results":"159","hashOfConfig":"134"},{"size":177,"mtime":1630546567217,"results":"160","hashOfConfig":"134"},{"size":602,"mtime":1630541369035,"results":"161","hashOfConfig":"134"},{"size":714,"mtime":1631136255400,"results":"162","hashOfConfig":"134"},{"size":597,"mtime":1630587284846,"results":"163","hashOfConfig":"134"},{"size":7724,"mtime":1631220372252,"results":"164","hashOfConfig":"134"},{"size":9010,"mtime":1631220382153,"results":"165","hashOfConfig":"134"},{"size":1460,"mtime":1630876727542,"results":"166","hashOfConfig":"134"},{"size":1329,"mtime":1630851319765,"results":"167","hashOfConfig":"134"},{"size":1241,"mtime":1630808707052,"results":"168","hashOfConfig":"134"},{"size":561,"mtime":1630852881031,"results":"169","hashOfConfig":"134"},{"size":990,"mtime":1631224936736,"results":"170","hashOfConfig":"134"},{"size":2578,"mtime":1631126000245,"results":"171","hashOfConfig":"134"},{"size":752,"mtime":1631223061906,"results":"172","hashOfConfig":"134"},{"size":2836,"mtime":1631112612071,"results":"173","hashOfConfig":"134"},{"size":1465,"mtime":1631112851442,"results":"174","hashOfConfig":"134"},{"size":3671,"mtime":1631154346416,"results":"175","hashOfConfig":"134"},{"size":313,"mtime":1631112542746,"results":"176","hashOfConfig":"134"},{"size":1423,"mtime":1631220390968,"results":"177","hashOfConfig":"134"},{"size":3412,"mtime":1631220362318,"results":"178","hashOfConfig":"134"},{"size":2080,"mtime":1631126240227,"results":"179","hashOfConfig":"134"},{"size":515,"mtime":1631222530145,"results":"180","hashOfConfig":"134"},{"size":3568,"mtime":1631207909838,"results":"181","hashOfConfig":"134"},{"size":7513,"mtime":1631220667511,"results":"182","hashOfConfig":"134"},{"size":1388,"mtime":1631139570435,"results":"183","hashOfConfig":"134"},{"size":4093,"mtime":1631220428843,"results":"184","hashOfConfig":"134"},{"size":5587,"mtime":1631119555220,"results":"185","hashOfConfig":"134"},{"size":2247,"mtime":1631120041618,"results":"186","hashOfConfig":"134"},{"size":3262,"mtime":1631126038412,"results":"187","hashOfConfig":"134"},{"size":2260,"mtime":1631155643124,"results":"188","hashOfConfig":"134"},{"size":1541,"mtime":1631140866963,"results":"189","hashOfConfig":"134"},{"size":4112,"mtime":1631200627709,"results":"190","hashOfConfig":"134"},{"size":9367,"mtime":1631218735335,"results":"191","hashOfConfig":"134"},{"size":9257,"mtime":1631219066311,"results":"192","hashOfConfig":"134"},{"size":1844,"mtime":1631209951459,"results":"193","hashOfConfig":"134"},{"size":6646,"mtime":1631220549051,"results":"194","hashOfConfig":"134"},{"size":10664,"mtime":1631220481518,"results":"195","hashOfConfig":"134"},{"size":10159,"mtime":1631220524174,"results":"196","hashOfConfig":"134"},{"size":1653,"mtime":1631210062459,"results":"197","hashOfConfig":"134"},{"size":5193,"mtime":1631220596821,"results":"198","hashOfConfig":"134"},{"size":8746,"mtime":1631212720428,"results":"199","hashOfConfig":"134"},{"size":6386,"mtime":1631212825669,"results":"200","hashOfConfig":"134"},{"size":1044,"mtime":1631215895291,"results":"201","hashOfConfig":"134"},{"size":1814,"mtime":1631225552392,"results":"202","hashOfConfig":"134"},{"size":222,"mtime":1631224873582,"results":"203","hashOfConfig":"134"},{"size":2168,"mtime":1631592018302,"results":"204","hashOfConfig":"205"},{"size":5332,"mtime":1631226024909,"results":"206","hashOfConfig":"205"},{"size":1995,"mtime":1631646482169,"results":"207","hashOfConfig":"205"},{"size":368,"mtime":1631226024915,"results":"208","hashOfConfig":"205"},{"size":5759,"mtime":1631592018306,"results":"209","hashOfConfig":"205"},{"size":990,"mtime":1631226024926,"results":"210","hashOfConfig":"205"},{"size":515,"mtime":1631226024927,"results":"211","hashOfConfig":"205"},{"size":752,"mtime":1631226024926,"results":"212","hashOfConfig":"205"},{"size":3463,"mtime":1631646482172,"results":"213","hashOfConfig":"205"},{"size":1475,"mtime":1631646482171,"results":"214","hashOfConfig":"205"},{"size":1606,"mtime":1631592018303,"results":"215","hashOfConfig":"205"},{"size":1465,"mtime":1631226024925,"results":"216","hashOfConfig":"205"},{"size":1878,"mtime":1631592018304,"results":"217","hashOfConfig":"205"},{"size":1688,"mtime":1631592018305,"results":"218","hashOfConfig":"205"},{"size":1450,"mtime":1631592018302,"results":"219","hashOfConfig":"205"},{"size":2578,"mtime":1631243107410,"results":"220","hashOfConfig":"205"},{"size":767,"mtime":1631226024917,"results":"221","hashOfConfig":"205"},{"size":4779,"mtime":1631646482170,"results":"222","hashOfConfig":"205"},{"size":6067,"mtime":1631666602069,"results":"223","hashOfConfig":"205"},{"size":5304,"mtime":1631646482171,"results":"224","hashOfConfig":"205"},{"size":3671,"mtime":1631226024925,"results":"225","hashOfConfig":"205"},{"size":525,"mtime":1631226024921,"results":"226","hashOfConfig":"205"},{"size":1273,"mtime":1631226024912,"results":"227","hashOfConfig":"205"},{"size":2260,"mtime":1631226024919,"results":"228","hashOfConfig":"205"},{"size":288,"mtime":1631592018301,"results":"229","hashOfConfig":"205"},{"size":4461,"mtime":1631592018304,"results":"230","hashOfConfig":"205"},{"size":9438,"mtime":1631592018304,"results":"231","hashOfConfig":"205"},{"size":8016,"mtime":1631650794615,"results":"232","hashOfConfig":"205"},{"size":4191,"mtime":1631646482171,"results":"233","hashOfConfig":"205"},{"size":9414,"mtime":1631646482172,"results":"234","hashOfConfig":"205"},{"size":10629,"mtime":1631592018304,"results":"235","hashOfConfig":"205"},{"size":6857,"mtime":1631592018304,"results":"236","hashOfConfig":"205"},{"size":10003,"mtime":1631646482172,"results":"237","hashOfConfig":"205"},{"size":6386,"mtime":1631226024929,"results":"238","hashOfConfig":"205"},{"size":3461,"mtime":1631646482170,"results":"239","hashOfConfig":"205"},{"size":8097,"mtime":1631592018305,"results":"240","hashOfConfig":"205"},{"size":5544,"mtime":1631592018305,"results":"241","hashOfConfig":"205"},{"size":313,"mtime":1631226024923,"results":"242","hashOfConfig":"205"},{"size":2836,"mtime":1631226024923,"results":"243","hashOfConfig":"205"},{"size":696,"mtime":1631592018305,"results":"244","hashOfConfig":"205"},{"size":276,"mtime":1631226024914,"results":"245","hashOfConfig":"205"},{"size":222,"mtime":1631226024912,"results":"246","hashOfConfig":"205"},{"size":860,"mtime":1631226024921,"results":"247","hashOfConfig":"205"},{"size":1091,"mtime":1631226024921,"results":"248","hashOfConfig":"205"},{"size":564,"mtime":1631226024912,"results":"249","hashOfConfig":"205"},{"size":328,"mtime":1631226024912,"results":"250","hashOfConfig":"205"},{"size":629,"mtime":1631592018301,"results":"251","hashOfConfig":"205"},{"size":503,"mtime":1631646482170,"results":"252","hashOfConfig":"205"},{"size":453,"mtime":1631226024920,"results":"253","hashOfConfig":"205"},{"size":1282,"mtime":1631646482170,"results":"254","hashOfConfig":"205"},{"size":682,"mtime":1631646482169,"results":"255","hashOfConfig":"205"},{"size":203,"mtime":1631226024917,"results":"256","hashOfConfig":"205"},{"size":1054,"mtime":1631646482170,"results":"257","hashOfConfig":"205"},{"size":1460,"mtime":1631226024919,"results":"258","hashOfConfig":"205"},{"size":720,"mtime":1631592018300,"results":"259","hashOfConfig":"205"},{"size":478,"mtime":1631646482169,"results":"260","hashOfConfig":"205"},{"size":602,"mtime":1631226024918,"results":"261","hashOfConfig":"205"},{"size":2036,"mtime":1631646482169,"results":"262","hashOfConfig":"205"},{"size":315,"mtime":1631592018301,"results":"263","hashOfConfig":"205"},{"size":542,"mtime":1631646482169,"results":"264","hashOfConfig":"205"},{"size":1340,"mtime":1631592018300,"results":"265","hashOfConfig":"205"},{"size":561,"mtime":1631226024918,"results":"266","hashOfConfig":"205"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"269","usedDeprecatedRules":"270"},"ppt5ls",{"filePath":"271","messages":"272","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"270"},{"filePath":"273","messages":"274","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"275","messages":"276","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"270"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"270"},{"filePath":"279","messages":"280","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"270"},{"filePath":"281","messages":"282","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"283","messages":"284","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"270"},{"filePath":"285","messages":"286","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"270"},{"filePath":"287","messages":"288","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"270"},{"filePath":"289","messages":"290","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"270"},{"filePath":"291","messages":"292","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"293","messages":"294","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"270"},{"filePath":"295","messages":"296","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"270"},{"filePath":"297","messages":"298","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"270"},{"filePath":"299","messages":"300","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"270"},{"filePath":"301","messages":"302","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"270"},{"filePath":"303","messages":"304","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"305","usedDeprecatedRules":"270"},{"filePath":"306","messages":"307","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"270"},{"filePath":"308","messages":"309","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"270"},{"filePath":"310","messages":"311","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"312","usedDeprecatedRules":"270"},{"filePath":"313","messages":"314","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"270"},{"filePath":"315","messages":"316","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"270"},{"filePath":"317","messages":"318","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"270"},{"filePath":"319","messages":"320","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"321","usedDeprecatedRules":"270"},{"filePath":"322","messages":"323","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"270"},{"filePath":"324","messages":"325","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"326"},{"filePath":"327","messages":"328","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"270"},{"filePath":"329","messages":"330","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"270"},{"filePath":"331","messages":"332","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"270"},{"filePath":"333","messages":"334","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"270"},{"filePath":"335","messages":"336","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"270"},{"filePath":"337","messages":"338","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"270"},{"filePath":"339","messages":"340","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"341","usedDeprecatedRules":"270"},{"filePath":"342","messages":"343","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"344","usedDeprecatedRules":"270"},{"filePath":"345","messages":"346","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"347"},{"filePath":"348","messages":"349","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"350"},{"filePath":"351","messages":"352","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"270"},{"filePath":"353","messages":"354","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"355","usedDeprecatedRules":"270"},{"filePath":"356","messages":"357","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"358","usedDeprecatedRules":"270"},{"filePath":"359","messages":"360","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"270"},{"filePath":"361","messages":"362","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"270"},{"filePath":"363","messages":"364","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"270"},{"filePath":"365","messages":"366","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"270"},{"filePath":"367","messages":"368","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"270"},{"filePath":"369","messages":"370","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"371","messages":"372","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"373","usedDeprecatedRules":"270"},{"filePath":"374","messages":"375","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"376","usedDeprecatedRules":"270"},{"filePath":"377","messages":"378","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"270"},{"filePath":"379","messages":"380","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"270"},{"filePath":"381","messages":"382","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"270"},{"filePath":"383","messages":"384","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"347"},{"filePath":"385","messages":"386","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"387"},{"filePath":"388","messages":"389","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"387"},{"filePath":"390","messages":"391","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"270"},{"filePath":"392","messages":"393","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"270"},{"filePath":"394","messages":"395","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"270"},{"filePath":"396","messages":"397","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"270"},{"filePath":"398","messages":"399","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"400","usedDeprecatedRules":"270"},{"filePath":"401","messages":"402","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"270"},{"filePath":"403","messages":"404","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"270"},{"filePath":"405","messages":"406","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"270"},{"filePath":"407","messages":"408","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"409","usedDeprecatedRules":"270"},{"filePath":"410","messages":"411","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"270"},{"filePath":"412","messages":"413","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"270"},{"filePath":"414","messages":"415","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"270"},{"filePath":"416","messages":"417","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"270"},{"filePath":"418","messages":"419","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"420","messages":"421","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"422","messages":"423","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"270"},{"filePath":"424","messages":"425","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"426"},"1lgznv3",{"filePath":"427","messages":"428","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"426"},{"filePath":"429","messages":"430","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"431","messages":"432","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"426"},{"filePath":"433","messages":"434","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"426"},{"filePath":"435","messages":"436","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"437"},{"filePath":"438","messages":"439","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"373","usedDeprecatedRules":"440"},{"filePath":"441","messages":"442","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"355","usedDeprecatedRules":"440"},{"filePath":"443","messages":"444","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"445","messages":"446","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"447","messages":"448","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"426"},{"filePath":"449","messages":"450","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"440"},{"filePath":"451","messages":"452","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"426"},{"filePath":"453","messages":"454","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"426"},{"filePath":"455","messages":"456","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"426"},{"filePath":"457","messages":"458","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"440"},{"filePath":"459","messages":"460","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"426"},{"filePath":"461","messages":"462","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"463","messages":"464","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"465","messages":"466","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"467","messages":"468","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"440"},{"filePath":"469","messages":"470","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"426"},{"filePath":"471","messages":"472","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"426"},{"filePath":"473","messages":"474","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"440"},{"filePath":"475","messages":"476","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"426"},{"filePath":"477","messages":"478","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"426"},{"filePath":"479","messages":"480","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"481","usedDeprecatedRules":"426"},{"filePath":"482","messages":"483","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"484"},{"filePath":"485","messages":"486","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"487","messages":"488","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"489","messages":"490","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"426"},{"filePath":"491","messages":"492","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"426"},{"filePath":"493","messages":"494","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"495"},{"filePath":"496","messages":"497","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"426"},{"filePath":"498","messages":"499","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"500","messages":"501","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"426"},{"filePath":"502","messages":"503","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"426"},{"filePath":"504","messages":"505","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"440"},{"filePath":"506","messages":"507","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"358","usedDeprecatedRules":"440"},{"filePath":"508","messages":"509","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"426"},{"filePath":"510","messages":"511","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"426"},{"filePath":"512","messages":"513","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"426"},{"filePath":"514","messages":"515","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"426"},{"filePath":"516","messages":"517","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"426"},{"filePath":"518","messages":"519","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"426"},{"filePath":"520","messages":"521","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"426"},{"filePath":"522","messages":"523","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"426"},{"filePath":"524","messages":"525","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"526","messages":"527","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"426"},{"filePath":"528","messages":"529","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"530"},{"filePath":"531","messages":"532","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"533","messages":"534","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"426"},{"filePath":"535","messages":"536","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"537"},{"filePath":"538","messages":"539","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"426"},{"filePath":"540","messages":"541","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"426"},{"filePath":"542","messages":"543","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"544","messages":"545","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"426"},{"filePath":"546","messages":"547","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"548","messages":"549","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"426"},{"filePath":"550","messages":"551","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"552","messages":"553","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"426"},{"filePath":"554","messages":"555","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"426"},"/Users/kylescott/src/nomspace-interface/src/index.tsx",["556","557","558"],"import \"react-app-polyfill/stable\";\nimport \"@celo-tools/use-contractkit/lib/styles.css\";\nimport \"react-toastify/dist/ReactToastify.min.css\";\nimport \"src/index.css\";\n\nimport { ContractKitProvider } from \"@celo-tools/use-contractkit\";\nimport * as Sentry from \"@sentry/react\";\nimport { Integrations } from \"@sentry/tracing\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"src/state\";\nimport { HashRouter as Router } from \"react-router-dom\";\nimport { LogoIcon } from \"src/icons/LogoIcon\"\nimport { RecoilRoot } from 'recoil';\nimport { theme } from \"src/theme\";\n\n\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { ThemeProvider } from \"theme-ui\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <ContractKitProvider\n      dapp={{\n        name: \"Dahlia\",\n        description: \"Leveraged yield farming protocol\",\n        url: \"https://dahlia.finance\",\n        icon: \"http://www.w3.org/2000/svg\"\n      }}\n    >\n      <ThemeProvider theme={theme}>\n        <Provider store={store}>\n          <Router>\n            <RecoilRoot>\n              <App />\n            </RecoilRoot>\n          </Router>\n        </Provider>\n      </ThemeProvider>\n    </ContractKitProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n",["559","560"],"/Users/kylescott/src/nomspace-interface/src/serviceWorker.ts",[],"/Users/kylescott/src/nomspace-interface/src/App.tsx",["561","562","563","564","565","566"],"/Users/kylescott/src/nomspace-interface/src/state/index.ts",[],"/Users/kylescott/src/nomspace-interface/src/theme/index.ts",[],"/Users/kylescott/src/nomspace-interface/src/components/ConnectWallet.tsx",[],"/Users/kylescott/src/nomspace-interface/src/components/Logo.tsx",[],"/Users/kylescott/src/nomspace-interface/src/state/global/index.ts",[],"/Users/kylescott/src/nomspace-interface/src/utils/address.ts",[],"/Users/kylescott/src/nomspace-interface/src/hooks/useBreakpoint.ts",[],"/Users/kylescott/src/nomspace-interface/src/icons/LogoIcon.tsx",[],"/Users/kylescott/src/nomspace-interface/src/components/QRNameModal.tsx",[],"/Users/kylescott/src/nomspace-interface/src/config.ts",[],"/Users/kylescott/src/nomspace-interface/src/utils/toastTx.tsx",[],"/Users/kylescott/src/nomspace-interface/src/components/BlockText.tsx",[],"/Users/kylescott/src/nomspace-interface/src/hooks/useAsyncState.ts",[],"/Users/kylescott/src/nomspace-interface/src/components/BlockscoutTxLink.tsx",[],"/Users/kylescott/src/nomspace-interface/src/components/TokenInfo.tsx",["567"],"import styled from \"@emotion/styled\";\nimport { Token } from \"src/utils/token\";\n\ninterface Props {\n  token: Token;\n}\n\nexport const TokenInfo: React.FC<Props> = ({ token }: Props) => {\n  return (\n    <Wrapper>\n      <img src={token.logoURL} />\n      <span>{token.symbol}</span>\n    </Wrapper>\n  );\n};\n\nconst Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  img {\n    width: 32px;\n    height: 32px;\n    border-radius: 16px;\n  }\n`;","/Users/kylescott/src/nomspace-interface/src/utils/token.ts",[],"/Users/kylescott/src/nomspace-interface/src/hooks/useERC.ts",[],"/Users/kylescott/src/nomspace-interface/src/components/DahliaTokenInfo.tsx",["568"],"import styled from \"@emotion/styled\";\nimport { Token } from \"src/utils/token\";\n\ninterface Props {\n  token: Token;\n}\n\nexport const DahliaTokenInfo: React.FC<Props> = ({ token }: Props) => {\n  return (\n    <Wrapper>\n      <img src={token.logoURL} />\n      <span>d{token.symbol}</span>\n    </Wrapper>\n  );\n};\n\nconst Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  img {\n    width: 32px;\n    height: 32px;\n    border-radius: 16px;\n  }\n`;","/Users/kylescott/src/nomspace-interface/src/utils/number.ts",[],"/Users/kylescott/src/nomspace-interface/src/utils/eth.ts",[],"/Users/kylescott/src/nomspace-interface/src/hooks/useSafeBox.ts",[],"/Users/kylescott/src/nomspace-interface/src/components/TokenAmountInfo.tsx",["569"],"import styled from \"@emotion/styled\";\nimport { Token } from \"src/utils/token\";\nimport { humanFriendlyNumber } from \"src/utils/number\"\nimport { BlockText } from \"src/components/BlockText\"\n\ninterface Props {\n  token: Token;\n  amount: string;\n}\n\nexport const TokenAmountInfo: React.FC<Props> = ({ token, amount }: Props) => {\n  return (\n    <Wrapper>\n      <img src={token.logoURL} />\n      <BlockText>{humanFriendlyNumber(amount).concat(\" \").concat(token.symbol)}</BlockText>\n    </Wrapper>\n  );\n};\n\nconst Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  img {\n    width: 32px;\n    height: 32px;\n    border-radius: 16px;\n  }\n  span {\n\n  }\n`;","/Users/kylescott/src/nomspace-interface/src/components/SimpleTable.tsx",[],"/Users/kylescott/src/nomspace-interface/src/components/Container.tsx",[],["570","571"],"/Users/kylescott/src/nomspace-interface/src/components/PoolIcon.tsx",[],"/Users/kylescott/src/nomspace-interface/src/components/FarmInfo.tsx",[],"/Users/kylescott/src/nomspace-interface/src/components/TokenBorrowInfo.tsx",[],"/Users/kylescott/src/nomspace-interface/src/pages/Earn/Supply/index.tsx",[],"/Users/kylescott/src/nomspace-interface/src/pages/Earn/Withdraw/index.tsx",[],"/Users/kylescott/src/nomspace-interface/src/components/TokenInputForm.tsx",[],"/Users/kylescott/src/nomspace-interface/src/hooks/useERCmulti.ts",["572","573"],"import React from \"react\";\nimport { useContractKit } from \"@celo-tools/use-contractkit\";\nimport IERC20_ABI from \"src/abis/dahlia_contracts/IERC20.json\"\nimport { IERC20 } from \"src/generated/IERC20\";\nimport { useAsyncState } from \"src/hooks/useAsyncState\";\nimport { isAddress, toBN, AbiItem } from \"web3-utils\";\nimport { getAddress } from \"ethers/lib/utils\";\nimport { Bank } from \"src/config\";\nimport { Token } from \"src/utils/token\";\n\n\nexport const useERCmulti = (tokens: Token[]) => {\n  const { kit , address, network } = useContractKit();\n  const userAddress = address; \n  const call = React.useCallback(async () => {\n      let arr = [];\n      for (let token of tokens) {\n        const address = token.address;\n        if (!address || !isAddress(address) || !userAddress) {\n            arr.push(null);\n        };\n        const ERCToken = (new kit.web3.eth.Contract(\n            IERC20_ABI.abi as AbiItem[],\n            address,\n          ) as unknown) as IERC20;\n          const allowance = toBN(\n            await ERCToken.methods.allowance(userAddress!, Bank[network.chainId]).call()\n          );\n          const balance = toBN(await ERCToken.methods.balanceOf(userAddress!).call());\n          arr.push({allowance, balance});\n      }\n      return arr;\n  }, [kit, userAddress, tokens]);\n  return useAsyncState(null, call);\n};\n","/Users/kylescott/src/nomspace-interface/src/components/TokenSlider.tsx",["574","575","576","577","578","579","580"],"import { Token } from \"src/utils/token\";\nimport React from \"react\";\nimport {\n    Box,\n    Flex,\n    Input,\n    Text,\n  } from \"theme-ui\";\nimport { humanFriendlyWei } from \"src/utils/eth\";\nimport { fromWei } from \"web3-utils\";\nimport { TokenInfo } from \"src/components/TokenInfo\";\nimport { TokenAmountInfo } from \"src/components/TokenAmountInfo\";\nimport BN from 'bn.js';\nimport { Slider } from \"rsuite\";\nimport \"rsuite/dist/styles/rsuite-default.min.css\";\n\n\ninterface Props {\n  token: Token;\n  amount: string;\n  setAmount: any,\n  max: string;\n}\n\nexport const TokenSlider: React.FC<Props> = ({ token, amount, setAmount, max}: Props) => {\n    const start: number = Number(max) / 3; \n    React.useEffect(() => setAmount(String(start)), []);\n  return (\n    <Flex sx={{ alignItems: \"center\" }}>\n    <Box sx={{ width: \"100%\" }} mr={2}>\n      <Flex sx={{ width: \"100%\", alignItems: \"center\"}}>\n          <Slider\n              progress\n              defaultValue={start}\n              style={{width: \"100%\"}}\n              step={.001}\n              max={Number(max)}\n              onChange={(value) => setAmount(String(value))}\n          />      \n        <TokenAmountInfo token={token} amount={amount} />\n      </Flex>   \n    </Box>\n  </Flex>\n  )\n};\n","/Users/kylescott/src/nomspace-interface/src/components/BoxTokenAmountInfo.tsx",[],["581","582"],"/Users/kylescott/src/nomspace-interface/src/pages/NavBar/NavBarMain.js",[],["583","584"],"/Users/kylescott/src/nomspace-interface/src/pages/NavBar/NavBarStyles.ts",[],"/Users/kylescott/src/nomspace-interface/src/pages/NavBar/NavBarHome.tsx",["585"],"import { navHomeData } from 'src/data/NavigationData';\nimport Image from 'src/images/logo.png';\nimport {\n  NavWrapper,\n  Wrapper,\n  Logo,\n  LogoImage,\n  LogoLink,\n  MenuBars,\n  NavMenu,\n  NavMenuLinksA,\n} from './NavBarStyles';\n\nconst NavBarHome = () => {\n  return (\n    <NavWrapper>\n      <Wrapper>\n        <Logo>\n          <LogoImage src={Image} alt='Logo Image' />\n          <LogoLink to='/'>DAHLIA</LogoLink>\n        </Logo>\n        <NavMenu>\n          {navHomeData.map((item, index) => {\n            return (\n              <NavMenuLinksA href={item.link} key={index}>\n                {item.title}\n              </NavMenuLinksA>\n            );\n          })}\n        </NavMenu>\n      </Wrapper>\n    </NavWrapper>\n  );\n};\n\nexport default NavBarHome;\n","/Users/kylescott/src/nomspace-interface/src/data/NavigationData.tsx",["586"],"import { FaTwitter, FaDiscord, FaGithub } from 'react-icons/fa';\nimport { BiListUl } from 'react-icons/bi';\n\nexport const navHomeData = [\n  {\n    icons: (\n      <svg\n        width='25'\n        height='19'\n        viewBox='0 0 25 19'\n        fill='none'\n        xmlns='http://www.w3.org/2000/svg'\n      >\n        <path\n          d='M11.2521 15.8394C11.446 15.8396 11.6318 15.9209 11.7689 16.0655C11.9061 16.21 11.9832 16.4061 11.9835 16.6105C11.9832 16.815 11.9061 17.011 11.7689 17.1556C11.6318 17.3002 11.446 17.3815 11.2521 17.3817C11.0583 17.3814 10.8725 17.3 10.7355 17.1555C10.5984 17.0109 10.5213 16.815 10.521 16.6105C10.5212 16.4061 10.5983 16.2101 10.7354 16.0655C10.8724 15.9209 11.0583 15.8396 11.2521 15.8394ZM22.7354 11.0624C22.5415 11.0622 22.3557 10.9809 22.2186 10.8363C22.0814 10.6918 22.0043 10.4957 22.004 10.2913C22.0042 10.0867 22.0813 9.89059 22.2184 9.74595C22.3556 9.60131 22.5415 9.51996 22.7354 9.51976C22.9293 9.52006 23.1151 9.60145 23.2522 9.74608C23.3892 9.89071 23.4663 10.0868 23.4665 10.2913C23.4663 10.4957 23.3892 10.6917 23.2521 10.8363C23.1151 10.9809 22.9292 11.0622 22.7354 11.0624ZM22.7354 7.90255C22.135 7.90325 21.5594 8.15514 21.1348 8.60296C20.7103 9.05077 20.4715 9.65795 20.4708 10.2913C20.4708 10.5478 20.5112 10.8032 20.5908 11.0515L13.1103 15.2518C12.9027 14.9341 12.6251 14.6745 12.3012 14.4953C11.9774 14.3161 11.6171 14.2226 11.2514 14.223C10.8286 14.2237 10.4144 14.3491 10.0555 14.585C9.69671 14.8209 9.40755 15.1579 9.22071 15.558L2.50015 11.8207C1.79017 11.427 1.25875 10.1933 1.31518 9.07072C1.34446 8.48494 1.53624 8.03063 1.82838 7.85509C2.01373 7.74396 2.23694 7.75375 2.47372 7.88447L2.51872 7.90933C4.29904 8.89894 10.1271 12.1368 10.3725 12.2569C10.751 12.4415 10.9617 12.5165 11.6067 12.194L23.6536 5.58542C23.83 5.51497 24.0361 5.33679 24.0361 5.06556C24.0361 4.68961 23.6675 4.54156 23.6665 4.54156C22.9815 4.19499 21.9283 3.67475 20.9008 3.1677C18.7051 2.08316 16.2166 0.854339 15.1238 0.250476C14.1802 -0.270512 13.421 0.16873 13.2853 0.257633L13.0221 0.395132C8.1036 2.96089 1.52125 6.39948 1.14625 6.63982C0.475197 7.0704 0.0594923 7.92854 0.00592206 8.99387C-0.0780046 10.6827 0.738763 12.443 1.90624 13.0891L9.0125 16.9549C9.09087 17.5225 9.36021 18.0415 9.77133 18.4169C10.1825 18.7924 10.7079 18.9994 11.2517 19C11.8461 18.9993 12.4165 18.7524 12.84 18.3124C13.2635 17.8725 13.5062 17.2747 13.516 16.6478L21.3426 12.1737C21.7405 12.5014 22.2306 12.6797 22.7354 12.6803C23.984 12.6803 25 11.6086 25 10.2916C25 8.97466 23.984 7.90255 22.7354 7.90255Z'\n          fill='#FDFDFD'\n        />\n      </svg>\n    ),\n    title: 'Docs',\n    link: '#',\n  },\n  {\n    icons: <FaTwitter />,\n    title: 'Twitter',\n    link: '#',\n  },\n  {\n    icons: <FaDiscord />,\n    title: 'Discord',\n    link: '#',\n  },\n  {\n    icons: <FaGithub />,\n    title: 'Github',\n    link: '#',\n  },\n];\n","/Users/kylescott/src/nomspace-interface/src/pages/Home/Home.tsx",[],"/Users/kylescott/src/nomspace-interface/src/pages/Home/HomeStyles.ts",[],"/Users/kylescott/src/nomspace-interface/src/data/HomeData.tsx",[],"/Users/kylescott/src/nomspace-interface/src/pages/Earn/Earn.tsx",[],"/Users/kylescott/src/nomspace-interface/src/pages/Earn/EarnEntry.tsx",[],"/Users/kylescott/src/nomspace-interface/src/pages/Earn/EarnStyles.ts",[],"/Users/kylescott/src/nomspace-interface/src/pages/NavBar/NavBarSecondary.tsx",["587"],"import Image from 'src/images/logo.png';\nimport {\n  NavWrapper,\n  Wrapper,\n  Logo,\n  LogoImage,\n  LogoLink,\n  MenuBars,\n} from './NavBarStyles';\nimport { ConnectWallet } from \"src/components/ConnectWallet\"\n\n\nconst NavBarSecondary = () => {\n  return (\n    <NavWrapper>\n      <Wrapper>\n        <Logo>\n          <LogoImage src={Image} alt='Logo Image' />\n          <LogoLink to='/'>DAHLIA</LogoLink>\n        </Logo>\n        <ConnectWallet />\n      </Wrapper>\n    </NavWrapper>\n  );\n};\n\nexport default NavBarSecondary;\n","/Users/kylescott/src/nomspace-interface/src/pages/Position/Position.tsx",["588"],"import React from 'react';\nimport { useContractKit } from \"@celo-tools/use-contractkit\";\nimport { AbiItem, toBN } from \"web3-utils\";\nimport { HomoraBank } from \"src/generated/HomoraBank\";\nimport BANK_ABI from \"src/abis/dahlia_contracts/HomoraBank.json\";\nimport { getAddress } from \"ethers/lib/utils\";\nimport { Bank } from \"src/config\";\nimport { useAsyncState } from \"src/hooks/useAsyncState\";\nimport { FARMS } from \"src/config\";\nimport { Spinner, Flex } from \"theme-ui\";\nimport { PositionEntry } from \"src/pages/Position/PositionEntry\"\nimport {\n    Container, \n    Title, \n    Description,\n    Wrapper,\n    Background,\n    CardContainer,\n} from \"src/components/MainPages\";\nimport Image from 'src/images/background.png';\nimport { SimpleTable } from \"src/components/SimpleTable\";\nimport { css } from \"@emotion/react\";\nimport { IERC20Wrapper } from 'src/generated/IERC20Wrapper';\nimport IERC20W_ABI from \"src/abis/dahlia_contracts/IERC20Wrapper.json\";\n\n\nconst Position = () => {\n  const { kit, address } = useContractKit();\n\n  const bank = React.useMemo(() => (new kit.web3.eth.Contract(\n    BANK_ABI.abi as AbiItem[],\n    getAddress(Bank[42220])\n  ) as unknown) as HomoraBank, [kit]); \n\n  const call = React.useCallback(async () => {\n    try {\n      const info = [];\n      const nextPositionId = await bank.methods.nextPositionId().call(); \n      for (let i = 1; i < Number(nextPositionId); i += 1) {\n        const positionInfo = await bank.methods.getPositionInfo(i).call();\n        console.log(positionInfo, i); \n        const wrapper = (new kit.web3.eth.Contract(\n          IERC20W_ABI.abi as AbiItem[],\n          positionInfo.collToken,\n          ) as unknown) as IERC20Wrapper;\n        const underlying = await wrapper.methods.getUnderlyingToken(positionInfo.collId).call(); \n        console.log(underlying);\n        for (let farm of FARMS) {\n          if (getAddress(underlying) === farm.lp && getAddress(positionInfo.owner) === getAddress(address!) && positionInfo.collateralSize !== \"0\") {\n            info.push({\n              collId: positionInfo.collId, \n              collateralSize: positionInfo.collateralSize,\n              positionId: i,\n              farm: farm,\n            })\n            break;\n          }\n        }\n      }\n      return info;  \n    } catch (error) {\n        console.log(error)\n    }  \n}, [bank.methods, kit.web3.eth.Contract, address])\n\n  const [info] = useAsyncState(null, call);\n  return (\n    <Wrapper>\n      <Container>\n        <Title>Positions</Title>\n        <Description>Manage your positions with ease.</Description>\n      </Container>\n      <CardContainer>\n        <SimpleTable>\n          <thead>\n            <tr>\n              <th\n                css={css`\n                  text-align: left !important;\n                `}\n              >\n                Pool\n              </th>\n              <th>Borrow Value</th>\n              <th>Total Value</th>\n              <th>Debt Ratio </th>\n              <th>APY</th>\n              <th />\n            </tr>\n          </thead>\n          <tbody>\n            { info ? \n              info.map((x) => (\n              <PositionEntry key={x.positionId} collId={x.collId} collateralSize={x.collateralSize} positionId={x.positionId} pool={x.farm!} />\n            )) : \n            (<Flex sx={{ alignItems: \"center\", justifyContent: \"center\"}}>\n              <Spinner />\n            </Flex>)\n            }\n            \n          </tbody>\n        </SimpleTable>\n      </CardContainer>\n      <Background src={Image} alt='Background Logo' />\n    </Wrapper>\n  );\n};\n\nexport default Position;\n","/Users/kylescott/src/nomspace-interface/src/pages/Position/PositionEntry.tsx",[],"/Users/kylescott/src/nomspace-interface/src/pages/Farm/Farm.tsx",[],"/Users/kylescott/src/nomspace-interface/src/pages/Farm/FarmEntry.tsx",[],"/Users/kylescott/src/nomspace-interface/src/pages/Farm/FarmPoolStyles.tsx",[],"/Users/kylescott/src/nomspace-interface/src/pages/Footer/Footer.tsx",[],["589","590"],"/Users/kylescott/src/nomspace-interface/src/pages/Footer/FooterStyles.tsx",[],"/Users/kylescott/src/nomspace-interface/src/components/MainPages.tsx",[],"/Users/kylescott/src/nomspace-interface/src/pages/Farm/newFarm/NewFarm.tsx",[],"/Users/kylescott/src/nomspace-interface/src/pages/Farm/newFarm/supply.tsx",[],"/Users/kylescott/src/nomspace-interface/src/pages/Farm/newFarm/borrow.tsx",[],"/Users/kylescott/src/nomspace-interface/src/pages/Farm/newFarm/confirm.tsx",["591"],"import React from \"react\";\nimport {\n  Button,\n  Card,\n  Flex,\n  Heading,\n  Text,\n  Spinner,\n} from \"theme-ui\";\nimport { DEFAULT_GAS_PRICE } from \"src/config\";\nimport { CaretLeft } from \"phosphor-react\";\nimport { useContractKit } from \"@celo-tools/use-contractkit\";\nimport { useERC } from \"src/hooks/useERC\";\nimport { useERCmulti } from \"src/hooks/useERCmulti\";\nimport { useSetRecoilState, useRecoilState } from 'recoil';\nimport { farmPageState, farmPage, poolState } from \"src/pages/Farm/newFarm/NewFarm\";\nimport { BlockText } from \"src/components/BlockText\";\nimport { Token } from \"src/utils/token\";\nimport { lpToken, Bank } from \"src/config\";\nimport { TokenAmountInfo } from \"src/components/TokenAmountInfo\";\nimport { newSupplyState } from \"src/pages/Farm/newFarm/supply\";\nimport { newBorrowState } from \"./borrow\";\nimport { fromWei, AbiItem } from \"web3-utils\";\nimport { toastTx } from \"src/utils/toastTx\";\nimport { toast } from \"react-toastify\";\nimport BANK_ABI from \"src/abis/dahlia_contracts/HomoraBank.json\";\nimport UNI_SPELL from \"src/abis/dahlia_contracts/UniswapV2SpellV1.json\";\nimport { HomoraBank } from \"src/generated/HomoraBank\";\nimport { UniswapV2SpellV1 } from \"src/generated/UniswapV2SpellV1\";\nimport { getAddress } from \"ethers/lib/utils\";\nimport { MaxUint256 } from \"@ethersproject/constants\";\nimport ERC20_ABI from \"src/abis/fountain_of_youth/ERC20.json\";\nimport { ERC20 } from \"src/generated/ERC20\";\nimport { humanFriendlyNumber } from \"src/utils/number\";\n\n\nexport const Confirm: React.FC = () => {\n  const { getConnectedKit, network } = useContractKit();\n  const [approveLoading, setApproveLoading] = React.useState(false);\n  const [confirmLoading, setConfirmLoading] = React.useState(false);\n  const [buttonLoading, setButtonLoading] = React.useState(true); \n  const [pool] = useRecoilState(poolState);\n  const setPage = useSetRecoilState(farmPageState)\n  const [supply] = useRecoilState(newSupplyState); \n  const [borrow] = useRecoilState(newBorrowState);\n\n  const lpTok: Token = new Token({\n    ...lpToken,\n    address: pool.lp,\n  });\n  \n  const [tokenStates, refetchTokenStates] = useERCmulti(pool.tokens)\n  const [erc, refetchERC] = useERC(lpTok.address, Bank[network.chainId]);\n\n  const approveButton = (token: Token): any => {\n    return (\n    <Button\n      onClick={async () => {\n        const kit = await getConnectedKit();\n        // kit is connected to a wallet\n        try {\n          setApproveLoading(true);\n          const ERCToken = (new kit.web3.eth.Contract(\n            ERC20_ABI as AbiItem[],\n            token.address!,\n          ) as unknown) as ERC20; \n          const tx = await ERCToken.methods\n            .approve(Bank[network.chainId], MaxUint256.toString())\n            .send({\n              from: kit.defaultAccount,\n              gasPrice: DEFAULT_GAS_PRICE,\n            });\n          toastTx(tx.transactionHash);\n          refetchERC();\n          refetchTokenStates();\n        } catch (e) {\n          toast(e.message);\n        } finally {\n          setApproveLoading(false);\n        }\n      }}\n    >\n      {\"Approve \".concat(token.symbol)}\n    </Button>\n  )};\n\n  const confirmButton = (\n    <Button\n      onClick={async () => {\n        const kit = await getConnectedKit();\n        // kit is connected to a wallet\n        try {\n          setConfirmLoading(true);\n          const bank = (new kit.web3.eth.Contract(\n            BANK_ABI.abi as AbiItem[],\n            getAddress(Bank[network.chainId])\n            ) as unknown) as HomoraBank;\n          const spell = (new kit.web3.eth.Contract(\n            UNI_SPELL.abi as AbiItem[],\n            getAddress(pool.spell),\n          ) as unknown) as UniswapV2SpellV1;\n          const bytes = spell.methods.addLiquidityWStakingRewards(\n            pool.tokens[0]!.address, \n            pool.tokens[1]!.address, \n            [\n              supply.tokenSupply![0]!.toString(),\n              supply.tokenSupply![1]!.toString(), \n              supply.lpSupply!.toString(), \n              borrow.tokenBorrow![0]!.toString(), \n              borrow.tokenBorrow![1]!.toString(), \n              0, \n              0, \n              0\n            ],\n            pool.wrapper,\n          ).encodeABI()\n          const tx = await bank.methods\n            .execute(\n                0,\n                pool.spell,\n                bytes,\n            ).send({\n              from: kit.defaultAccount,\n              gasPrice: DEFAULT_GAS_PRICE,\n              gas: 10000000,\n            });\n          toastTx(tx.transactionHash);\n          refetchERC();\n        } catch (e) {\n          toast(e.message);\n        } finally {\n          setConfirmLoading(false);\n        }\n      }}\n    >\n      Confirm\n    </Button>\n  );\n  \n  const loading = approveLoading || confirmLoading || buttonLoading;\n  const button = React.useMemo(() => {\n    let b: any[] = []\n    if (tokenStates) {\n      for (let i = 0; i < tokenStates.length; i += 1) {\n        if (tokenStates[i] ){\n          const amountBN = supply.tokenSupply![i]!\n          if (amountBN.gt(tokenStates[i]?.allowance!)) {\n            b.push(approveButton(pool.tokens![i]!));\n            if (buttonLoading) setButtonLoading(false);\n          }\n        }\n      }\n      if (b.length === 0) {\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        b = [confirmButton]; \n        if (buttonLoading) setButtonLoading(false);\n      }\n    }\n    if (erc) {\n      const amountBN = supply.lpSupply!;\n      if (amountBN.gt(erc.allowance)) {\n        b.push(approveButton(lpTok))\n      }\n      if (buttonLoading) setButtonLoading(false)\n    }\n    return b; \n  }, [tokenStates, supply, pool.tokens, erc]);\n\n  return (\n    <Flex sx={{ alignItems: \"center\", flexDirection: \"column\" }}>\n      <Card sx={{ width: \"100%\", maxWidth: \"800px\" }} py={4} px={3}>\n        <Flex\n          onClick={() => {\n            setPage(farmPage.Borrow);\n          }}\n          sx={{ alignItems: \"center\", cursor: \"pointer\" }}\n          mb={4}\n        >\n          <CaretLeft size={28} />\n          <Text>Back</Text>\n        </Flex>\n        <Flex mb={4}>\n          <Heading as=\"h2\" mr={2}>\n            Position Breakdown\n          </Heading>\n        </Flex>\n        <Flex sx={{flexDirection: \"column\", gap: \"25px\", mb: 10}}>\n          <BlockText variant=\"primary\">I'm Supplying</BlockText>\n          <Flex sx={{ justifyContent: \"left\", gap: \"8px\", alignItems: \"center\"}}>\n            {pool.tokens.map((tok, index) => \n            <Flex\n            sx={{\n              alignItems: \"center\",\n              mr: 4,\n              padding:2,\n              borderStyle: \"solid\",\n              borderRadius: \"10px\",\n            }}\n          >\n              <TokenAmountInfo key={tok.address} token={tok} amount={fromWei(supply.tokenSupply![index]!)} />       \n            </Flex>\n          )}\n            <Flex\n            sx={{\n              alignItems: \"center\",\n              mr: 4,\n              padding:2,\n              borderStyle: \"solid\",\n              borderRadius: \"10px\",\n            }}\n            >\n              <TokenAmountInfo key={lpTok.address} token={lpTok} amount={fromWei(supply.lpSupply!)} />       \n            </Flex>\n          </Flex>\n        </Flex>\n        <Flex sx={{flexDirection: \"column\", gap: \"25px\", mb: 10}}>\n          <BlockText variant=\"primary\">I'm Borrowing</BlockText>\n          <Flex sx={{ justifyContent: \"left\", gap: \"8px\", alignItems: \"center\"}}>\n            {pool.tokens.map((tok, index) => \n            <Flex\n            sx={{\n              alignItems: \"center\",\n              mr: 4,\n              padding:2,\n              borderStyle: \"solid\",\n              borderRadius: \"10px\",\n            }}\n          >\n              <TokenAmountInfo key={tok.address} token={tok} amount={fromWei(borrow.tokenBorrow![index]!)} />       \n            </Flex>\n          )}\n          </Flex>\n        </Flex>\n        <Flex sx={{flexDirection: \"column\", gap: \"25px\", mb: 10}}>\n          <BlockText variant=\"primary\">Position Statistics</BlockText>\n          <Flex sx={{ justifyContent: \"left\", gap: \"8px\", flexDirection: \"column\"}}>\n              <BlockText>{\"Est. Debt Ratio: \".concat(humanFriendlyNumber(borrow.debtRatio!)).concat(\"/100\")}</BlockText>\n              <BlockText>{\"Leverage: \".concat(humanFriendlyNumber(borrow.lever!)).concat(\"x\")}</BlockText>\n              {/* change this to usd value */}\n              <BlockText>{\"Supply Value: \".concat(\" \").concat(humanFriendlyNumber(borrow.supplyValue!)).concat(\" Celo\")}</BlockText>\n              <BlockText>{\"Borrow Value: \".concat(\" \").concat(humanFriendlyNumber(borrow.borrowValue!)).concat(\" Celo\")}</BlockText>\n              <BlockText>{\"Position Value: \".concat(\" \").concat(humanFriendlyNumber(borrow.supplyValue! + borrow.borrowValue!)).concat(\" Celo\")}</BlockText>\n              <BlockText>Farming APY: </BlockText>\n              <BlockText>Borrow APY: </BlockText>\n              <BlockText>Total APY: </BlockText>\n          </Flex>\n        </Flex>\n        <Flex sx={{ justifyContent: \"center\", mt: 6 }}>\n            {loading ? (\n              <Spinner />\n            ) : (\n              <Flex sx={{ justifyContent: \"center\", gap: \"6px\"}} >\n                {button[0]}\n              </Flex>                \n            )}\n        </Flex>\n      </Card>\n    </Flex>\n  );\n};\n","/Users/kylescott/src/nomspace-interface/src/pages/Position/Add/add.tsx",[],"/Users/kylescott/src/nomspace-interface/src/pages/Position/Add/supply.tsx",[],"/Users/kylescott/src/nomspace-interface/src/pages/Position/Add/borrow.tsx",[],"/Users/kylescott/src/nomspace-interface/src/pages/Position/Add/confirm.tsx",["592","593"],"import React from \"react\";\nimport {\n  Button,\n  Card,\n  Flex,\n  Heading,\n  Text,\n  Spinner,\n} from \"theme-ui\";\nimport { DEFAULT_GAS_PRICE } from \"src/config\";\nimport { CaretLeft } from \"phosphor-react\";\nimport { useContractKit } from \"@celo-tools/use-contractkit\";\nimport { useERC } from \"src/hooks/useERC\";\nimport { useERCmulti } from \"src/hooks/useERCmulti\";\nimport { useSetRecoilState, useRecoilState } from 'recoil';\nimport { BlockText } from \"src/components/BlockText\";\nimport { Token } from \"src/utils/token\";\nimport { lpToken, Bank } from \"src/config\";\nimport { TokenAmountInfo } from \"src/components/TokenAmountInfo\";\nimport { fromWei, toBN, AbiItem } from \"web3-utils\";\nimport { toastTx } from \"src/utils/toastTx\";\nimport { toast } from \"react-toastify\";\nimport BANK_ABI from \"src/abis/dahlia_contracts/HomoraBank.json\";\nimport UNI_SPELL from \"src/abis/dahlia_contracts/UniswapV2SpellV1.json\";\nimport { HomoraBank } from \"src/generated/HomoraBank\";\nimport { UniswapV2SpellV1 } from \"src/generated/UniswapV2SpellV1\";\nimport { getAddress } from \"ethers/lib/utils\";\nimport { MaxUint256 } from \"@ethersproject/constants\";\nimport ERC20_ABI from \"src/abis/fountain_of_youth/ERC20.json\";\nimport { ERC20 } from \"src/generated/ERC20\";\nimport { humanFriendlyNumber } from \"src/utils/number\";\nimport { addPageState, addPage, addPositionState } from \"src/pages/Position/Add/add\";\nimport { addSupplyState } from \"./supply\";\nimport { addBorrowState } from \"./borrow\";\nimport { poolState } from \"src/pages/Farm/newFarm/NewFarm\";\n\n\nexport const Confirm: React.FC = () => {\n  const { getConnectedKit, network } = useContractKit();\n  const [approveLoading, setApproveLoading] = React.useState(false);\n  const [confirmLoading, setConfirmLoading] = React.useState(false);\n  const [buttonLoading, setButtonLoading] = React.useState(true); \n  const [pool] = useRecoilState(poolState);\n  const setPage = useSetRecoilState(addPageState)\n  const [supply] = useRecoilState(addSupplyState);\n  const [position] = useRecoilState(addPositionState); \n  const [borrow] = useRecoilState(addBorrowState); \n\n  const lpTok: Token = new Token({\n    ...lpToken,\n    address: pool.lp,\n  });\n  \n  const [tokenStates, refetchTokenStates] = useERCmulti(pool.tokens)\n  const [erc, refetchERC] = useERC(lpTok.address, Bank[network.chainId]);\n\n  const approveButton = (token: Token): any => {\n    return (\n    <Button\n      onClick={async () => {\n        const kit = await getConnectedKit();\n        // kit is connected to a wallet\n        try {\n          setApproveLoading(true);\n          const ERCToken = (new kit.web3.eth.Contract(\n            ERC20_ABI as AbiItem[],\n            token.address!,\n          ) as unknown) as ERC20; \n          const tx = await ERCToken.methods\n            .approve(Bank[network.chainId], MaxUint256.toString())\n            .send({\n              from: kit.defaultAccount,\n              gasPrice: DEFAULT_GAS_PRICE,\n            });\n          toastTx(tx.transactionHash);\n          refetchERC();\n          refetchTokenStates();\n        } catch (e) {\n          toast(e.message);\n        } finally {\n          setApproveLoading(false);\n        }\n      }}\n    >\n      {\"Approve \".concat(token.symbol)}\n    </Button>\n  )};\n\n  const confirmButton = (\n    <Button\n      onClick={async () => {\n        const kit = await getConnectedKit();\n        // kit is connected to a wallet\n        try {\n          setConfirmLoading(true);\n          const bank = (new kit.web3.eth.Contract(\n            BANK_ABI.abi as AbiItem[],\n            getAddress(Bank[network.chainId])\n            ) as unknown) as HomoraBank;\n          const spell = (new kit.web3.eth.Contract(\n            UNI_SPELL.abi as AbiItem[],\n            getAddress(pool.spell),\n          ) as unknown) as UniswapV2SpellV1;\n          const bytes = spell.methods.addLiquidityWStakingRewards(\n            pool.tokens[0]!.address, \n            pool.tokens[1]!.address, \n            [\n              supply.tokenSupply![0]!.toString(),\n              supply.tokenSupply![1]!.toString(), \n              supply.lpSupply!.toString(), \n              borrow.tokenBorrow![0]!.toString(), \n              borrow.tokenBorrow![1]!.toString(), \n              0, \n              0, \n              0\n            ],\n            pool.wrapper,\n          ).encodeABI()\n          const tx = await bank.methods\n            .execute(\n                position.positionId!,\n                pool.spell,\n                bytes,\n            ).send({\n              from: kit.defaultAccount,\n              gasPrice: DEFAULT_GAS_PRICE,\n              gas: 10000000,\n            });\n          toastTx(tx.transactionHash);\n          refetchERC();\n        } catch (e) {\n          toast(e.message);\n        } finally {\n          setConfirmLoading(false);\n        }\n      }}\n    >\n      Confirm\n    </Button>\n  );\n  \n  const loading = approveLoading || confirmLoading || buttonLoading;\n  const button = React.useMemo(() => {\n    let b: any[] = []\n    if (tokenStates) {\n      for (let i = 0; i < tokenStates.length; i += 1) {\n        if (tokenStates[i] ){\n          const amountBN = supply.tokenSupply![i]!\n          if (amountBN.gt(tokenStates[i]?.allowance!)) {\n            b.push(approveButton(pool.tokens![i]!));\n            if (buttonLoading) setButtonLoading(false);\n          }\n        }\n      }\n      if (b.length === 0) {\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        b = [confirmButton]; \n        if (buttonLoading) setButtonLoading(false);\n      }\n    }\n    if (erc) {\n      const amountBN = supply.lpSupply!;\n      if (amountBN.gt(erc.allowance)) {\n        b.push(approveButton(lpTok))\n      }\n      if (buttonLoading) setButtonLoading(false)\n    }\n    return b; \n  }, [tokenStates, supply.tokenSupply, pool.tokens, erc, supply.lpSupply])\n\n  return (\n    <Flex sx={{ alignItems: \"center\", flexDirection: \"column\" }}>\n      <Card sx={{ width: \"100%\", maxWidth: \"800px\" }} py={4} px={3}>\n        <Flex\n          onClick={() => {\n            setPage(addPage.Borrow);\n          }}\n          sx={{ alignItems: \"center\", cursor: \"pointer\" }}\n          mb={4}\n        >\n          <CaretLeft size={28} />\n          <Text>Back</Text>\n        </Flex>\n        <Flex mb={4}>\n          <Heading as=\"h2\" mr={2}>\n            Position Breakdown\n          </Heading>\n        </Flex>\n        <Flex sx={{flexDirection: \"column\", gap: \"25px\", mb: 10}}>\n          <BlockText variant=\"primary\">My position has</BlockText>\n          <Flex sx={{ justifyContent: \"left\", gap: \"8px\", alignItems: \"center\"}}>\n            {supply.existingBalance && pool.tokens.map((tok, index) => \n            <Flex\n            sx={{\n              alignItems: \"center\",\n              mr: 4,\n              padding:2,\n              borderStyle: \"solid\",\n              borderRadius: \"10px\",\n            }}\n          >\n              <TokenAmountInfo key={tok.address} token={tok} amount={fromWei(supply.existingBalance![index]!)} />       \n            </Flex>\n          )}\n          </Flex>\n        </Flex>\n        <Flex sx={{flexDirection: \"column\", gap: \"25px\", mb: 10}}>\n          <BlockText variant=\"primary\">I'm Supplying</BlockText>\n          <Flex sx={{ justifyContent: \"left\", gap: \"8px\", alignItems: \"center\"}}>\n            {supply.tokenSupply && pool.tokens.map((tok, index) => \n            <Flex\n            sx={{\n              alignItems: \"center\",\n              mr: 4,\n              padding:2,\n              borderStyle: \"solid\",\n              borderRadius: \"10px\",\n            }}\n          >\n              <TokenAmountInfo key={tok.address} token={tok} amount={fromWei(supply.tokenSupply![index]!)} />       \n            </Flex>\n          )}\n            <Flex\n            sx={{\n              alignItems: \"center\",\n              mr: 4,\n              padding:2,\n              borderStyle: \"solid\",\n              borderRadius: \"10px\",\n            }}\n            >\n              {supply.lpSupply && <TokenAmountInfo key={lpTok.address} token={lpTok} amount={fromWei(supply.lpSupply!)} /> }     \n            </Flex>\n          </Flex>\n        </Flex>\n        <Flex sx={{flexDirection: \"column\", gap: \"25px\", mb: 10}}>\n          <BlockText variant=\"primary\">I'm Borrowing</BlockText>\n          <Flex sx={{ justifyContent: \"left\", gap: \"8px\", alignItems: \"center\"}}>\n            {borrow.tokenBorrow && pool.tokens.map((tok, index) => \n            <Flex\n            sx={{\n              alignItems: \"center\",\n              mr: 4,\n              padding:2,\n              borderStyle: \"solid\",\n              borderRadius: \"10px\",\n            }}\n          >\n              <TokenAmountInfo key={tok.address} token={tok} amount={fromWei(borrow.tokenBorrow![index]!)} />       \n            </Flex>\n          )}\n          </Flex>\n        </Flex>\n        <Flex sx={{flexDirection: \"column\", gap: \"25px\", mb: 10}}>\n          <BlockText variant=\"primary\">Position Statistics</BlockText>\n          <Flex sx={{ justifyContent: \"left\", gap: \"8px\", flexDirection: \"column\"}}>\n            <BlockText>{\"Est. Debt Ratio: \".concat(humanFriendlyNumber(borrow.debtRatio!)).concat(\"/100\")}</BlockText>\n              <BlockText>{\"Leverage: \".concat(humanFriendlyNumber(borrow.lever!)).concat(\"x\")}</BlockText>\n              {/* change this to usd value */}\n              <BlockText>{\"Supply Value: \".concat(\" \").concat(humanFriendlyNumber(borrow.supplyValue!)).concat(\" Celo\")}</BlockText>\n              <BlockText>{\"Borrow Value: \".concat(\" \").concat(humanFriendlyNumber(borrow.borrowValue!)).concat(\" Celo\")}</BlockText>\n              <BlockText>{\"Position Value: \".concat(\" \").concat(humanFriendlyNumber(borrow.supplyValue! + borrow.borrowValue!)).concat(\" Celo\")}</BlockText>\n              <BlockText>Farming APY: </BlockText>\n              <BlockText>Borrow APY: </BlockText>\n              <BlockText>Total APY: </BlockText>\n          </Flex>\n        </Flex>\n        <Flex sx={{ justifyContent: \"center\", mt: 6 }}>\n            {loading ? (\n              <Spinner />\n            ) : (\n              <Flex sx={{ justifyContent: \"center\", gap: \"6px\"}} >\n                {button[0]}\n              </Flex>                \n            )}\n        </Flex>\n      </Card>\n    </Flex>\n  );\n};\n","/Users/kylescott/src/nomspace-interface/src/pages/Position/Remove/remove.tsx",[],"/Users/kylescott/src/nomspace-interface/src/pages/Position/Remove/removeTokens.tsx",[],"/Users/kylescott/src/nomspace-interface/src/pages/Position/Remove/payback.tsx",[],"/Users/kylescott/src/nomspace-interface/src/pages/Position/Remove/confirm.tsx",[],"/Users/kylescott/src/nomspace-interface/src/utils/rates.ts",[],"/Users/kylescott/src/nomspace-interface/src/components/Header.tsx",["594","595"],"/Users/kylescott/src/nomspace-interface/src/components/StyledLink.tsx",[],"/Users/kylescott/src/dahlia-interface/src/index.tsx",[],["596","597"],"/Users/kylescott/src/dahlia-interface/src/serviceWorker.ts",[],"/Users/kylescott/src/dahlia-interface/src/App.tsx",[],"/Users/kylescott/src/dahlia-interface/src/state/index.ts",[],"/Users/kylescott/src/dahlia-interface/src/theme/index.ts",[],"/Users/kylescott/src/dahlia-interface/src/pages/NavBar/NavBarMain.js",[],["598","599"],"/Users/kylescott/src/dahlia-interface/src/pages/NavBar/NavBarSecondary.tsx",["600"],["601","602"],"/Users/kylescott/src/dahlia-interface/src/pages/NavBar/NavBarHome.tsx",["603"],"/Users/kylescott/src/dahlia-interface/src/pages/Position/Position.tsx",[],"/Users/kylescott/src/dahlia-interface/src/pages/Farm/Farm.tsx",[],"/Users/kylescott/src/dahlia-interface/src/pages/Farm/newFarm/NewFarm.tsx",[],"/Users/kylescott/src/dahlia-interface/src/pages/Home/Home.tsx",[],"/Users/kylescott/src/dahlia-interface/src/pages/Position/Add/add.tsx",[],"/Users/kylescott/src/dahlia-interface/src/pages/Position/Remove/remove.tsx",[],"/Users/kylescott/src/dahlia-interface/src/pages/Earn/Earn.tsx",[],"/Users/kylescott/src/dahlia-interface/src/pages/NavBar/NavBarStyles.ts",[],"/Users/kylescott/src/dahlia-interface/src/components/ConnectWallet.tsx",[],"/Users/kylescott/src/dahlia-interface/src/pages/Earn/Supply/index.tsx",[],"/Users/kylescott/src/dahlia-interface/src/config.ts",[],"/Users/kylescott/src/dahlia-interface/src/pages/Earn/Withdraw/index.tsx",[],"/Users/kylescott/src/dahlia-interface/src/pages/Home/HomeStyles.ts",[],"/Users/kylescott/src/dahlia-interface/src/hooks/useAsyncState.ts",[],"/Users/kylescott/src/dahlia-interface/src/utils/token.ts",[],"/Users/kylescott/src/dahlia-interface/src/components/MainPages.tsx",[],"/Users/kylescott/src/dahlia-interface/src/components/SimpleTable.tsx",[],"/Users/kylescott/src/dahlia-interface/src/pages/Farm/newFarm/supply.tsx",[],"/Users/kylescott/src/dahlia-interface/src/pages/Farm/newFarm/confirm.tsx",["604"],"import React from \"react\";\nimport {\n  Button,\n  Card,\n  Flex,\n  Heading,\n  Text,\n  Spinner,\n} from \"theme-ui\";\nimport { DEFAULT_GAS_PRICE } from \"src/config\";\nimport { CaretLeft } from \"phosphor-react\";\nimport { useContractKit } from \"@celo-tools/use-contractkit\";\nimport { useERC } from \"src/hooks/useERC\";\nimport { useERCmulti } from \"src/hooks/useERCmulti\";\nimport { useSetRecoilState, useRecoilState } from 'recoil';\nimport { farmPageState, farmPage, poolState } from \"src/pages/Farm/newFarm/NewFarm\";\nimport { BlockText } from \"src/components/BlockText\";\nimport { Token } from \"src/utils/token\";\nimport { lpToken, Bank } from \"src/config\";\nimport { TokenAmountInfo } from \"src/components/TokenAmountInfo\";\nimport { newSupplyState } from \"src/pages/Farm/newFarm/supply\";\nimport { newBorrowState } from \"./borrow\";\nimport { fromWei, AbiItem } from \"web3-utils\";\nimport { toastTx } from \"src/utils/toastTx\";\nimport { toast } from \"react-toastify\";\nimport BANK_ABI from \"src/abis/dahlia_contracts/HomoraBank.json\";\nimport UNI_SPELL from \"src/abis/dahlia_contracts/UniswapV2SpellV1.json\";\nimport { HomoraBank } from \"src/generated/HomoraBank\";\nimport { UniswapV2SpellV1 } from \"src/generated/UniswapV2SpellV1\";\nimport { getAddress } from \"ethers/lib/utils\";\nimport { MaxUint256 } from \"@ethersproject/constants\";\nimport ERC20_ABI from \"src/abis/fountain_of_youth/ERC20.json\";\nimport { ERC20 } from \"src/generated/ERC20\";\nimport { humanFriendlyNumber } from \"src/utils/number\";\n\n\nexport const Confirm: React.FC = () => {\n  const { getConnectedKit, network } = useContractKit();\n  const [approveLoading, setApproveLoading] = React.useState(false);\n  const [confirmLoading, setConfirmLoading] = React.useState(false);\n  const [buttonLoading, setButtonLoading] = React.useState(true); \n  const [pool] = useRecoilState(poolState);\n  const setPage = useSetRecoilState(farmPageState)\n  const [supply] = useRecoilState(newSupplyState); \n  const [borrow] = useRecoilState(newBorrowState);\n\n  const lpTok: Token = new Token({\n    ...lpToken,\n    address: pool.lp,\n  });\n  \n  const [tokenStates, refetchTokenStates] = useERCmulti(pool.tokens)\n  const [erc, refetchERC] = useERC(lpTok.address, Bank[network.chainId]);\n\n  const approveButton = (token: Token): any => {\n    return (\n    <Button\n      onClick={async () => {\n        const kit = await getConnectedKit();\n        // kit is connected to a wallet\n        try {\n          setApproveLoading(true);\n          const ERCToken = (new kit.web3.eth.Contract(\n            ERC20_ABI as AbiItem[],\n            token.address!,\n          ) as unknown) as ERC20; \n          const tx = await ERCToken.methods\n            .approve(Bank[network.chainId], MaxUint256.toString())\n            .send({\n              from: kit.defaultAccount,\n              gasPrice: DEFAULT_GAS_PRICE,\n            });\n          toastTx(tx.transactionHash);\n          refetchERC();\n          refetchTokenStates();\n        } catch (e) {\n          toast(e.message);\n        } finally {\n          setApproveLoading(false);\n        }\n      }}\n    >\n      {\"Approve \".concat(token.symbol)}\n    </Button>\n  )};\n\n  const confirmButton = (\n    <Button\n      onClick={async () => {\n        const kit = await getConnectedKit();\n        // kit is connected to a wallet\n        try {\n          setConfirmLoading(true);\n          const bank = (new kit.web3.eth.Contract(\n            BANK_ABI.abi as AbiItem[],\n            getAddress(Bank[network.chainId])\n            ) as unknown) as HomoraBank;\n          const spell = (new kit.web3.eth.Contract(\n            UNI_SPELL.abi as AbiItem[],\n            getAddress(pool.spell),\n          ) as unknown) as UniswapV2SpellV1;\n          const bytes = spell.methods.addLiquidityWStakingRewards(\n            pool.tokens[0]!.address, \n            pool.tokens[1]!.address, \n            [\n              supply.tokenSupply![0]!.toString(),\n              supply.tokenSupply![1]!.toString(), \n              supply.lpSupply!.toString(), \n              borrow.tokenBorrow![0]!.toString(), \n              borrow.tokenBorrow![1]!.toString(), \n              0, \n              0, \n              0\n            ],\n            pool.wrapper,\n          ).encodeABI()\n          const tx = await bank.methods\n            .execute(\n                0,\n                pool.spell,\n                bytes,\n            ).send({\n              from: kit.defaultAccount,\n              gasPrice: DEFAULT_GAS_PRICE,\n              gas: 10000000,\n            });\n          toastTx(tx.transactionHash);\n          refetchERC();\n        } catch (e) {\n          toast(e.message);\n        } finally {\n          setConfirmLoading(false);\n        }\n      }}\n    >\n      Confirm\n    </Button>\n  );\n  \n  const loading = approveLoading || confirmLoading || buttonLoading;\n  const button = React.useMemo(() => {\n    let b: any[] = []\n    if (tokenStates) {\n      for (let i = 0; i < tokenStates.length; i += 1) {\n        if (tokenStates[i]!){\n          console.log(tokenStates[i]!.allowance.toString())\n          const amountBN = supply.tokenSupply![i]!\n          console.log(amountBN.toString())\n          console.log(3)\n          if (amountBN.gt(tokenStates[i]?.allowance!)) {\n            console.log('in')\n            b.push(approveButton(pool.tokens![i]!));\n            if (buttonLoading) setButtonLoading(false);\n          }\n        }\n      }\n      if (b.length === 0) {\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        b = [confirmButton]; \n        if (buttonLoading) setButtonLoading(false);\n      }\n    }\n    if (erc) {\n      const amountBN = supply.lpSupply!;\n      if (amountBN.gt(erc.allowance)) {\n        b.push(approveButton(lpTok))\n      }\n      if (buttonLoading) setButtonLoading(false)\n    }\n    return b; \n  }, [tokenStates, erc, supply.tokenSupply, supply.lpSupply, pool.tokens, buttonLoading, confirmButton, lpTok]);\n\n  return (\n    <Flex sx={{ alignItems: \"center\", flexDirection: \"column\" }}>\n      <Card sx={{ width: \"100%\", maxWidth: \"800px\" }} py={4} px={3}>\n        <Flex\n          onClick={() => {\n            setPage(farmPage.Borrow);\n          }}\n          sx={{ alignItems: \"center\", cursor: \"pointer\" }}\n          mb={4}\n        >\n          <CaretLeft size={28} />\n          <Text>Back</Text>\n        </Flex>\n        <Flex mb={4}>\n          <Heading as=\"h2\" mr={2}>\n            Position Breakdown\n          </Heading>\n        </Flex>\n        <Flex sx={{flexDirection: \"column\", gap: \"25px\", mb: 10}}>\n          <BlockText variant=\"primary\">I'm Supplying</BlockText>\n          <Flex sx={{ justifyContent: \"left\", gap: \"8px\", alignItems: \"center\"}}>\n            {pool.tokens.map((tok, index) => \n            <Flex\n            sx={{\n              alignItems: \"center\",\n              mr: 4,\n              padding:2,\n              borderStyle: \"solid\",\n              borderRadius: \"10px\",\n            }}\n          >\n              <TokenAmountInfo key={tok.address} token={tok} amount={fromWei(supply.tokenSupply![index]!)} />       \n            </Flex>\n          )}\n            <Flex\n            sx={{\n              alignItems: \"center\",\n              mr: 4,\n              padding:2,\n              borderStyle: \"solid\",\n              borderRadius: \"10px\",\n            }}\n            >\n              <TokenAmountInfo key={lpTok.address} token={lpTok} amount={fromWei(supply.lpSupply!)} />       \n            </Flex>\n          </Flex>\n        </Flex>\n        <Flex sx={{flexDirection: \"column\", gap: \"25px\", mb: 10}}>\n          <BlockText variant=\"primary\">I'm Borrowing</BlockText>\n          <Flex sx={{ justifyContent: \"left\", gap: \"8px\", alignItems: \"center\"}}>\n            {pool.tokens.map((tok, index) => \n            <Flex\n            sx={{\n              alignItems: \"center\",\n              mr: 4,\n              padding:2,\n              borderStyle: \"solid\",\n              borderRadius: \"10px\",\n            }}\n          >\n              <TokenAmountInfo key={tok.address} token={tok} amount={fromWei(borrow.tokenBorrow![index]!)} />       \n            </Flex>\n          )}\n          </Flex>\n        </Flex>\n        <Flex sx={{flexDirection: \"column\", gap: \"25px\", mb: 10}}>\n          <BlockText variant=\"primary\">Position Statistics</BlockText>\n          <Flex sx={{ justifyContent: \"left\", gap: \"8px\", flexDirection: \"column\"}}>\n              <BlockText>{\"Est. Debt Ratio: \".concat(humanFriendlyNumber(borrow.debtRatio!)).concat(\"/100\")}</BlockText>\n              <BlockText>{\"Leverage: \".concat(humanFriendlyNumber(borrow.lever!)).concat(\"x\")}</BlockText>\n              {/* change this to usd value */}\n              <BlockText>{\"Supply Value: \".concat(\" \").concat(humanFriendlyNumber(borrow.supplyValue!)).concat(\" Celo\")}</BlockText>\n              <BlockText>{\"Borrow Value: \".concat(\" \").concat(humanFriendlyNumber(borrow.borrowValue!)).concat(\" Celo\")}</BlockText>\n              <BlockText>{\"Position Value: \".concat(\" \").concat(humanFriendlyNumber(borrow.supplyValue! + borrow.borrowValue!)).concat(\" Celo\")}</BlockText>\n              <BlockText>Farming APY: {humanFriendlyNumber(borrow.lever! * Number(pool.apy))}%</BlockText>\n          </Flex>\n        </Flex>\n        <Flex sx={{ justifyContent: \"center\", mt: 6 }}>\n            {loading ? (\n              <Spinner />\n            ) : (\n              <Flex sx={{ justifyContent: \"center\", gap: \"6px\"}} >\n                {button[0]}\n              </Flex>                \n            )}\n        </Flex>\n      </Card>\n    </Flex>\n  );\n};\n","/Users/kylescott/src/dahlia-interface/src/pages/Position/PositionEntry.tsx",["605"],"import { css } from \"@emotion/react\";\nimport styled from \"@emotion/styled\";\nimport { useContractKit } from \"@celo-tools/use-contractkit\";\nimport { AbiItem, toBN, fromWei } from \"web3-utils\";\nimport BANK_ABI from \"src/abis/dahlia_contracts/HomoraBank.json\";\nimport PROXYORACLE_ABI from \"src/abis/dahlia_contracts/ProxyOracle.json\";\nimport { HomoraBank } from \"src/generated/HomoraBank\";\nimport { ProxyOracle } from \"src/generated/ProxyOracle\";\nimport { Bank, DEFAULT_GAS_PRICE} from \"src/config\";\nimport React from \"react\";\nimport { getAddress } from \"ethers/lib/utils\";\nimport { FarmInfo } from \"src/components/FarmInfo\";\nimport { Flex, Button } from \"theme-ui\";\nimport { poolProps } from \"src/pages/Farm/newFarm/NewFarm\";\nimport UNI_SPELL from \"src/abis/dahlia_contracts/UniswapV2SpellV1.json\";\nimport { UniswapV2SpellV1 } from \"src/generated/UniswapV2SpellV1\";\nimport { MaxUint256 } from \"@ethersproject/constants\";\nimport { toastTx } from \"src/utils/toastTx\";\nimport { toast } from \"react-toastify\";\nimport { useHistory } from \"react-router\";\nimport { Spinner, Text } from \"theme-ui\"\nimport { CoreOracle } from \"src/generated/CoreOracle\";\nimport COREORACLE_ABI from \"src/abis/dahlia_contracts/CoreOracle.json\";\nimport { useAsyncState } from \"src/hooks/useAsyncState\";\nimport { humanFriendlyNumber } from \"src/utils/number\";\n\n\ninterface Props {\n  pool: poolProps,\n  positionId: number,\n  collateralSize: string, \n  collId: string,\n}\n\nexport const PositionEntry: React.FC<Props> = (props: Props) => {\n  const { kit, network, getConnectedKit } = useContractKit();\n  const [confirmLoading, setConfirmLoading] = React.useState(false);\n  const history = useHistory();\n  const scale = toBN(2).pow(toBN(112)); \n  \n  \n  const bank = React.useMemo(() => (new kit.web3.eth.Contract(\n    BANK_ABI.abi as AbiItem[],\n    getAddress(Bank[network.chainId])\n    ) as unknown) as HomoraBank, [kit, network]); \n    \n    const call = React.useCallback(async () => {\n      try {\n        const oracle = await bank.methods.oracle().call();\n        const proxyOracle = (new kit.web3.eth.Contract(\n          PROXYORACLE_ABI.abi as AbiItem[],\n          oracle,\n        ) as unknown) as ProxyOracle;\n        const source = await proxyOracle.methods.source().call();\n        const coreOracle = (new kit.web3.eth.Contract(\n          COREORACLE_ABI.abi as AbiItem[],\n          source,\n        ) as unknown) as CoreOracle;\n        const price = await coreOracle.methods.getCELOPx(props.pool.lp).call();\n        const totalValue = Number(fromWei(props.collateralSize)) * (Number(fromWei(price)) / Number(fromWei(scale)))\n        const ret = await bank.methods.getPositionDebts(props.positionId!).call();\n        let debtValue: number = 0;\n        for (let i = 0; i < ret.tokens.length; i += 1) {\n          const price = await coreOracle.methods.getCELOPx(ret.tokens[i]!).call();\n          console.log(ret.debts[i], ret.tokens[i])\n          debtValue += Number(fromWei(ret.debts[i]!)) * (Number(fromWei(price)) / Number(fromWei(scale)))\n        }\n        console.log(props.collateralSize)\n        const numer = await bank.methods.getBorrowETHValue(props.positionId).call(); \n        const denom = await bank.methods.getCollateralETHValue(props.positionId).call();; \n        const debtRatio = Number(fromWei(numer)) / Number(fromWei(denom))\n        return {\n          debtValue,\n          totalValue,\n          debtRatio,\n        };\n    } catch (error) {\n        console.log(error)\n    }\n}, [bank.methods, kit.web3.eth.Contract, props.collateralSize, props.pool.lp, props.positionId, scale])\n\n  const [info] = useAsyncState(null, call);\n\n  const closeButton = (\n    <Button\n      onClick={async () => {\n        const kit = await getConnectedKit();\n        try {\n          setConfirmLoading(true);\n          const bank = (new kit.web3.eth.Contract(\n            BANK_ABI.abi as AbiItem[],\n            getAddress(Bank[network.chainId])\n            ) as unknown) as HomoraBank;\n          const spell = (new kit.web3.eth.Contract(\n            UNI_SPELL.abi as AbiItem[],\n            getAddress(props.pool.spell),\n          ) as unknown) as UniswapV2SpellV1;\n          console.log( props.pool.tokens[0]!.address, \n            props.pool.tokens[1]!.address, \n            [\n              MaxUint256.toString(),\n              0, \n              MaxUint256.toString(), \n              MaxUint256.toString(), \n              0, \n              0, \n              0\n            ],\n            props.pool.wrapper,)\n          const bytes = spell.methods.removeLiquidityWStakingRewards(\n            props.pool.tokens[0]!.address, \n            props.pool.tokens[1]!.address, \n            [\n              MaxUint256.toString(),\n              0, \n              MaxUint256.toString(), \n              MaxUint256.toString(), \n              0, \n              0, \n              0\n            ],\n            props.pool.wrapper,\n          ).encodeABI()\n          console.log(props.positionId)\n          const tx = await bank.methods\n            .execute(\n                props.positionId,\n                props.pool.spell,\n                bytes,\n            ).send({\n              from: kit.defaultAccount,\n              gasPrice: DEFAULT_GAS_PRICE,\n              gas: 10000000,\n            });\n          toastTx(tx.transactionHash);\n        } catch (e) {\n          toast(e.message);\n        } finally {\n          setConfirmLoading(false);\n        }\n      }}\n    >\n      Close\n    </Button>\n  );\n\n  const harvestButton = (\n  <Button\n    onClick={async () => {\n      const kit = await getConnectedKit();\n      try {\n        setConfirmLoading(true);\n        const bank = (new kit.web3.eth.Contract(\n          BANK_ABI.abi as AbiItem[],\n          getAddress(Bank[network.chainId])\n          ) as unknown) as HomoraBank;\n        const spell = (new kit.web3.eth.Contract(\n          UNI_SPELL.abi as AbiItem[],\n          getAddress(props.pool.spell),\n        ) as unknown) as UniswapV2SpellV1;\n        const bytes = spell.methods.harvestWStakingRewards(\n          props.pool.wrapper,\n        ).encodeABI()\n        const tx = await bank.methods\n          .execute(\n              props.positionId,\n              props.pool.spell,\n              bytes,\n          ).send({\n            from: kit.defaultAccount,\n            gasPrice: DEFAULT_GAS_PRICE,\n            gas: 10000000,\n          });\n        toastTx(tx.transactionHash);\n      } catch (e) {\n        toast(e.message);\n      } finally {\n        setConfirmLoading(false);\n      }\n    }}\n  >\n  Harvest\n</Button>\n);\n\n  const urlext = props.positionId + \"/\" + props.collId + \"/\" + props.collateralSize + \"/\" + props.pool.name + \"/\" + props.pool.wrapper + \"/\" + props.pool.spell + \"/\" + props.pool.lp + \"/\" + props.pool.apy + \"/\"\n    + props.pool.tokens.map((tok) => tok.address)\n\n  return (\n    <Row>\n      <td>\n      <FarmInfo props={props.pool} />\n      </td>\n      <td><Text>{info ? humanFriendlyNumber(info.debtValue) : \"--\"} Celo</Text></td>\n      <td><Text>{info ? humanFriendlyNumber(info.totalValue) : \"--\"} Celo</Text></td>\n      <td><Text>{info ? humanFriendlyNumber(info.debtRatio* 100).concat(\"%\") : \"--\"}</Text></td>\n      <td\n        css={css`\n          text-align: right;\n        `}\n      >\n          { confirmLoading ? <Spinner /> : (\n        <Flex sx={{justifyContent: \"center\", alignItems: \"center\", flexDirection: \"column\", gap: \"6px\"}}>\n\n          <Flex sx={{justifyContent: \"center\", alighnItems: \"center\", gap: \"6px\"}}>\n            <Button onClick={() => {\n             history.push(`positions/add/${urlext}`)}\n            }>\n              Add\n            </Button>\n            <Button onClick={() => {\n             history.push(`positions/remove/${urlext}`)}\n            }>\n              Remove\n            </Button>\n          </Flex>\n          <Flex sx={{justifyContent: \"center\", alighnItems: \"center\", gap: \"6px\"}}>\n            {/* {closeButton} */}\n            {harvestButton}\n          </Flex>\n          </Flex>\n          )}\n        \n      </td>\n    </Row>\n  );\n};\n\nconst Row = styled.tr`\n  height: 96px;\n`;","/Users/kylescott/src/dahlia-interface/src/pages/Farm/FarmEntry.tsx",[],"/Users/kylescott/src/dahlia-interface/src/pages/Farm/newFarm/borrow.tsx",[],"/Users/kylescott/src/dahlia-interface/src/pages/Position/Add/borrow.tsx",[],"/Users/kylescott/src/dahlia-interface/src/pages/Position/Add/supply.tsx",[],"/Users/kylescott/src/dahlia-interface/src/pages/Position/Add/confirm.tsx",["606"],"import React from \"react\";\nimport {\n  Button,\n  Card,\n  Flex,\n  Heading,\n  Text,\n  Spinner,\n} from \"theme-ui\";\nimport { DEFAULT_GAS_PRICE } from \"src/config\";\nimport { CaretLeft } from \"phosphor-react\";\nimport { useContractKit } from \"@celo-tools/use-contractkit\";\nimport { useERC } from \"src/hooks/useERC\";\nimport { useERCmulti } from \"src/hooks/useERCmulti\";\nimport { useSetRecoilState, useRecoilState } from 'recoil';\nimport { BlockText } from \"src/components/BlockText\";\nimport { Token } from \"src/utils/token\";\nimport { lpToken, Bank } from \"src/config\";\nimport { TokenAmountInfo } from \"src/components/TokenAmountInfo\";\nimport { fromWei, AbiItem } from \"web3-utils\";\nimport { toastTx } from \"src/utils/toastTx\";\nimport { toast } from \"react-toastify\";\nimport BANK_ABI from \"src/abis/dahlia_contracts/HomoraBank.json\";\nimport UNI_SPELL from \"src/abis/dahlia_contracts/UniswapV2SpellV1.json\";\nimport { HomoraBank } from \"src/generated/HomoraBank\";\nimport { UniswapV2SpellV1 } from \"src/generated/UniswapV2SpellV1\";\nimport { getAddress } from \"ethers/lib/utils\";\nimport { MaxUint256 } from \"@ethersproject/constants\";\nimport ERC20_ABI from \"src/abis/fountain_of_youth/ERC20.json\";\nimport { ERC20 } from \"src/generated/ERC20\";\nimport { humanFriendlyNumber } from \"src/utils/number\";\nimport { addPageState, addPage, addPositionState } from \"src/pages/Position/Add/add\";\nimport { addSupplyState } from \"./supply\";\nimport { addBorrowState } from \"./borrow\";\nimport { poolState } from \"src/pages/Farm/newFarm/NewFarm\";\n\n\nexport const Confirm: React.FC = () => {\n  const { getConnectedKit, network } = useContractKit();\n  const [approveLoading, setApproveLoading] = React.useState(false);\n  const [confirmLoading, setConfirmLoading] = React.useState(false);\n  const [buttonLoading, setButtonLoading] = React.useState(true); \n  const [pool] = useRecoilState(poolState);\n  const setPage = useSetRecoilState(addPageState)\n  const [supply] = useRecoilState(addSupplyState);\n  const [position] = useRecoilState(addPositionState); \n  const [borrow] = useRecoilState(addBorrowState); \n\n  const lpTok: Token = new Token({\n    ...lpToken,\n    address: pool.lp,\n  });\n  \n  const [tokenStates, refetchTokenStates] = useERCmulti(pool.tokens)\n  const [erc, refetchERC] = useERC(lpTok.address, Bank[network.chainId]);\n\n  const approveButton = (token: Token): any => {\n    return (\n    <Button\n      onClick={async () => {\n        const kit = await getConnectedKit();\n        // kit is connected to a wallet\n        try {\n          setApproveLoading(true);\n          const ERCToken = (new kit.web3.eth.Contract(\n            ERC20_ABI as AbiItem[],\n            token.address!,\n          ) as unknown) as ERC20; \n          const tx = await ERCToken.methods\n            .approve(Bank[network.chainId], MaxUint256.toString())\n            .send({\n              from: kit.defaultAccount,\n              gasPrice: DEFAULT_GAS_PRICE,\n            });\n          toastTx(tx.transactionHash);\n          refetchERC();\n          refetchTokenStates();\n        } catch (e) {\n          toast(e.message);\n        } finally {\n          setApproveLoading(false);\n        }\n      }}\n    >\n      {\"Approve \".concat(token.symbol)}\n    </Button>\n  )};\n\n  const confirmButton = (\n    <Button\n      onClick={async () => {\n        const kit = await getConnectedKit();\n        // kit is connected to a wallet\n        try {\n          setConfirmLoading(true);\n          const bank = (new kit.web3.eth.Contract(\n            BANK_ABI.abi as AbiItem[],\n            getAddress(Bank[network.chainId])\n            ) as unknown) as HomoraBank;\n          const spell = (new kit.web3.eth.Contract(\n            UNI_SPELL.abi as AbiItem[],\n            getAddress(pool.spell),\n          ) as unknown) as UniswapV2SpellV1;\n          const bytes = spell.methods.addLiquidityWStakingRewards(\n            pool.tokens[0]!.address, \n            pool.tokens[1]!.address, \n            [\n              supply.tokenSupply![0]!.toString(),\n              supply.tokenSupply![1]!.toString(), \n              supply.lpSupply!.toString(), \n              borrow.tokenBorrow![0]!.toString(), \n              borrow.tokenBorrow![1]!.toString(), \n              0, \n              0, \n              0\n            ],\n            pool.wrapper,\n          ).encodeABI()\n          const tx = await bank.methods\n            .execute(\n                position.positionId!,\n                pool.spell,\n                bytes,\n            ).send({\n              from: kit.defaultAccount,\n              gasPrice: DEFAULT_GAS_PRICE,\n              gas: 10000000,\n            });\n          toastTx(tx.transactionHash);\n          refetchERC();\n        } catch (e) {\n          toast(e.message);\n        } finally {\n          setConfirmLoading(false);\n        }\n      }}\n    >\n      Confirm\n    </Button>\n  );\n  \n  const loading = approveLoading || confirmLoading || buttonLoading;\n  const button = React.useMemo(() => {\n    let b: any[] = []\n    if (tokenStates) {\n      for (let i = 0; i < tokenStates.length; i += 1) {\n        if (tokenStates[i] ){\n          const amountBN = supply.tokenSupply![i]!\n          if (amountBN.gt(tokenStates[i]?.allowance!)) {\n            b.push(approveButton(pool.tokens![i]!));\n            if (buttonLoading) setButtonLoading(false);\n          }\n        }\n      }\n      if (b.length === 0) {\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        b = [confirmButton]; \n        if (buttonLoading) setButtonLoading(false);\n      }\n    }\n    if (erc) {\n      const amountBN = supply.lpSupply!;\n      if (amountBN.gt(erc.allowance)) {\n        b.push(approveButton(lpTok))\n      }\n      if (buttonLoading) setButtonLoading(false)\n    }\n    return b; \n  }, [tokenStates, supply.tokenSupply, pool.tokens, erc, supply.lpSupply])\n\n  return (\n    <Flex sx={{ alignItems: \"center\", flexDirection: \"column\" }}>\n      <Card sx={{ width: \"100%\", maxWidth: \"800px\" }} py={4} px={3}>\n        <Flex\n          onClick={() => {\n            setPage(addPage.Borrow);\n          }}\n          sx={{ alignItems: \"center\", cursor: \"pointer\" }}\n          mb={4}\n        >\n          <CaretLeft size={28} />\n          <Text>Back</Text>\n        </Flex>\n        <Flex mb={4}>\n          <Heading as=\"h2\" mr={2}>\n            Position Breakdown\n          </Heading>\n        </Flex>\n        <Flex sx={{flexDirection: \"column\", gap: \"25px\", mb: 10}}>\n          <BlockText variant=\"primary\">My position has</BlockText>\n          <Flex sx={{ justifyContent: \"left\", gap: \"8px\", alignItems: \"center\"}}>\n            {supply.existingBalance && pool.tokens.map((tok, index) => \n            <Flex\n            sx={{\n              alignItems: \"center\",\n              mr: 4,\n              padding:2,\n              borderStyle: \"solid\",\n              borderRadius: \"10px\",\n            }}\n          >\n              <TokenAmountInfo key={tok.address} token={tok} amount={fromWei(supply.existingBalance![index]!)} />       \n            </Flex>\n          )}\n          </Flex>\n        </Flex>\n        <Flex sx={{flexDirection: \"column\", gap: \"25px\", mb: 10}}>\n          <BlockText variant=\"primary\">I'm Supplying</BlockText>\n          <Flex sx={{ justifyContent: \"left\", gap: \"8px\", alignItems: \"center\"}}>\n            {supply.tokenSupply && pool.tokens.map((tok, index) => \n            <Flex\n            sx={{\n              alignItems: \"center\",\n              mr: 4,\n              padding:2,\n              borderStyle: \"solid\",\n              borderRadius: \"10px\",\n            }}\n          >\n              <TokenAmountInfo key={tok.address} token={tok} amount={fromWei(supply.tokenSupply![index]!)} />       \n            </Flex>\n          )}\n            <Flex\n            sx={{\n              alignItems: \"center\",\n              mr: 4,\n              padding:2,\n              borderStyle: \"solid\",\n              borderRadius: \"10px\",\n            }}\n            >\n              {supply.lpSupply && <TokenAmountInfo key={lpTok.address} token={lpTok} amount={fromWei(supply.lpSupply!)} /> }     \n            </Flex>\n          </Flex>\n        </Flex>\n        <Flex sx={{flexDirection: \"column\", gap: \"25px\", mb: 10}}>\n          <BlockText variant=\"primary\">I'm Borrowing</BlockText>\n          <Flex sx={{ justifyContent: \"left\", gap: \"8px\", alignItems: \"center\"}}>\n            {borrow.tokenBorrow && pool.tokens.map((tok, index) => \n            <Flex\n            sx={{\n              alignItems: \"center\",\n              mr: 4,\n              padding:2,\n              borderStyle: \"solid\",\n              borderRadius: \"10px\",\n            }}\n          >\n              <TokenAmountInfo key={tok.address} token={tok} amount={fromWei(borrow.tokenBorrow![index]!)} />       \n            </Flex>\n          )}\n          </Flex>\n        </Flex>\n        <Flex sx={{flexDirection: \"column\", gap: \"25px\", mb: 10}}>\n          <BlockText variant=\"primary\">Position Statistics</BlockText>\n          <Flex sx={{ justifyContent: \"left\", gap: \"8px\", flexDirection: \"column\"}}>\n            <BlockText>{\"Est. Debt Ratio: \".concat(humanFriendlyNumber(borrow.debtRatio!)).concat(\"/100\")}</BlockText>\n              <BlockText>{\"Leverage: \".concat(humanFriendlyNumber(borrow.lever!)).concat(\"x\")}</BlockText>\n              {/* change this to usd value */}\n              <BlockText>{\"Supply Value: \".concat(\" \").concat(humanFriendlyNumber(borrow.supplyValue!)).concat(\" Celo\")}</BlockText>\n              <BlockText>{\"Borrow Value: \".concat(\" \").concat(humanFriendlyNumber(borrow.borrowValue!)).concat(\" Celo\")}</BlockText>\n              <BlockText>{\"Position Value: \".concat(\" \").concat(humanFriendlyNumber(borrow.supplyValue! + borrow.borrowValue!)).concat(\" Celo\")}</BlockText>\n          </Flex>\n        </Flex>\n        <Flex sx={{ justifyContent: \"center\", mt: 6 }}>\n            {loading ? (\n              <Spinner />\n            ) : (\n              <Flex sx={{ justifyContent: \"center\", gap: \"6px\"}} >\n                {button[0]}\n              </Flex>                \n            )}\n        </Flex>\n      </Card>\n    </Flex>\n  );\n};\n","/Users/kylescott/src/dahlia-interface/src/pages/Position/Remove/confirm.tsx",[],"/Users/kylescott/src/dahlia-interface/src/pages/Earn/EarnEntry.tsx",[],"/Users/kylescott/src/dahlia-interface/src/pages/Position/Remove/payback.tsx",[],"/Users/kylescott/src/dahlia-interface/src/pages/Position/Remove/removeTokens.tsx",[],"/Users/kylescott/src/dahlia-interface/src/data/HomeData.tsx",[],"/Users/kylescott/src/dahlia-interface/src/data/NavigationData.tsx",["607"],"/Users/kylescott/src/dahlia-interface/src/state/global/index.ts",[],"/Users/kylescott/src/dahlia-interface/src/utils/address.ts",[],"/Users/kylescott/src/dahlia-interface/src/utils/eth.ts",[],"/Users/kylescott/src/dahlia-interface/src/hooks/useSafeBox.ts",[],"/Users/kylescott/src/dahlia-interface/src/hooks/useERC.ts",[],"/Users/kylescott/src/dahlia-interface/src/utils/number.ts",[],"/Users/kylescott/src/dahlia-interface/src/utils/toastTx.tsx",[],"/Users/kylescott/src/dahlia-interface/src/components/TokenBorrowInfo.tsx",[],"/Users/kylescott/src/dahlia-interface/src/components/TokenInfo.tsx",[],"/Users/kylescott/src/dahlia-interface/src/components/BlockscoutTxLink.tsx",[],"/Users/kylescott/src/dahlia-interface/src/hooks/useERCmulti.ts",["608"],"import React from \"react\";\nimport { useContractKit } from \"@celo-tools/use-contractkit\";\nimport IERC20_ABI from \"src/abis/dahlia_contracts/IERC20.json\"\nimport { IERC20 } from \"src/generated/IERC20\";\nimport { useAsyncState } from \"src/hooks/useAsyncState\";\nimport { isAddress, toBN, AbiItem } from \"web3-utils\";\nimport { Bank } from \"src/config\";\nimport { Token } from \"src/utils/token\";\n\n\nexport const useERCmulti = (tokens: Token[]) => {\n  const { kit , address, network } = useContractKit();\n  const userAddress = address; \n  const call = React.useCallback(async () => {\n      let arr = [];\n      for (let token of tokens) {\n        const address = token.address;\n        if (!address || !isAddress(address) || !userAddress) {\n            arr.push(null);\n        };\n        const ERCToken = (new kit.web3.eth.Contract(\n            IERC20_ABI.abi as AbiItem[],\n            address,\n          ) as unknown) as IERC20;\n          const allowance = toBN(\n            await ERCToken.methods.allowance(userAddress!, Bank[network.chainId]).call()\n          );\n          const balance = toBN(await ERCToken.methods.balanceOf(userAddress!).call());\n          arr.push({allowance, balance});\n      }\n      return arr;\n  }, [kit, userAddress, tokens]);\n  return useAsyncState(null, call);\n};\n","/Users/kylescott/src/dahlia-interface/src/components/TokenAmountInfo.tsx",[],"/Users/kylescott/src/dahlia-interface/src/components/BlockText.tsx",[],"/Users/kylescott/src/dahlia-interface/src/components/TokenSlider.tsx",["609"],"import { Token } from \"src/utils/token\";\nimport React from \"react\";\nimport {\n    Box,\n    Flex,\n  } from \"theme-ui\";\nimport { TokenAmountInfo } from \"src/components/TokenAmountInfo\";\nimport { Slider } from \"rsuite\";\nimport \"rsuite/dist/styles/rsuite-default.min.css\";\n\n\ninterface Props {\n  token: Token;\n  amount: string;\n  setAmount: any,\n  max: string;\n}\n\nexport const TokenSlider: React.FC<Props> = ({ token, amount, setAmount, max}: Props) => {\n    const start: number = Number(max) / 3; \n    React.useEffect(() => setAmount(String(start)), []);\n  return (\n    <Flex sx={{ alignItems: \"center\" }}>\n    <Box sx={{ width: \"100%\" }} mr={2}>\n      <Flex sx={{ width: \"100%\", alignItems: \"center\"}}>\n          <Slider\n              progress\n              defaultValue={start}\n              style={{width: \"100%\"}}\n              step={.001}\n              max={Number(max)}\n              onChange={(value) => setAmount(String(value))}\n          />      \n        <TokenAmountInfo token={token} amount={amount} />\n      </Flex>   \n    </Box>\n  </Flex>\n  )\n};\n","/Users/kylescott/src/dahlia-interface/src/components/TokenInputForm.tsx",[],"/Users/kylescott/src/dahlia-interface/src/components/FarmInfo.tsx",[],"/Users/kylescott/src/dahlia-interface/src/components/DahliaTokenInfo.tsx",[],"/Users/kylescott/src/dahlia-interface/src/components/PoolIcon.tsx",[],"/Users/kylescott/src/dahlia-interface/src/components/Header.tsx",[],"/Users/kylescott/src/dahlia-interface/src/components/StyledLink.tsx",[],"/Users/kylescott/src/dahlia-interface/src/components/Logo.tsx",[],"/Users/kylescott/src/dahlia-interface/src/components/Footer.tsx",[],"/Users/kylescott/src/dahlia-interface/src/components/BoxTokenAmountInfo.tsx",[],{"ruleId":"610","severity":1,"message":"611","line":7,"column":13,"nodeType":"612","messageId":"613","endLine":7,"endColumn":19},{"ruleId":"610","severity":1,"message":"614","line":8,"column":10,"nodeType":"612","messageId":"613","endLine":8,"endColumn":22},{"ruleId":"610","severity":1,"message":"615","line":14,"column":10,"nodeType":"612","messageId":"613","endLine":14,"endColumn":18},{"ruleId":"616","replacedBy":"617"},{"ruleId":"618","replacedBy":"619"},{"ruleId":"610","severity":1,"message":"620","line":3,"column":10,"nodeType":"612","messageId":"613","endLine":3,"endColumn":18},{"ruleId":"610","severity":1,"message":"621","line":9,"column":10,"nodeType":"612","messageId":"613","endLine":9,"endColumn":16},{"ruleId":"610","severity":1,"message":"622","line":15,"column":10,"nodeType":"612","messageId":"613","endLine":15,"endColumn":23},{"ruleId":"610","severity":1,"message":"623","line":16,"column":10,"nodeType":"612","messageId":"613","endLine":16,"endColumn":15},{"ruleId":"610","severity":1,"message":"624","line":17,"column":8,"nodeType":"612","messageId":"613","endLine":17,"endColumn":14},{"ruleId":"610","severity":1,"message":"625","line":21,"column":10,"nodeType":"612","messageId":"613","endLine":21,"endColumn":16},{"ruleId":"626","severity":1,"message":"627","line":11,"column":7,"nodeType":"628","endLine":11,"endColumn":34},{"ruleId":"626","severity":1,"message":"627","line":11,"column":7,"nodeType":"628","endLine":11,"endColumn":34},{"ruleId":"626","severity":1,"message":"627","line":14,"column":7,"nodeType":"628","endLine":14,"endColumn":34},{"ruleId":"616","replacedBy":"629"},{"ruleId":"618","replacedBy":"630"},{"ruleId":"610","severity":1,"message":"631","line":7,"column":10,"nodeType":"612","messageId":"613","endLine":7,"endColumn":20},{"ruleId":"632","severity":1,"message":"633","line":33,"column":6,"nodeType":"634","endLine":33,"endColumn":32,"suggestions":"635"},{"ruleId":"610","severity":1,"message":"636","line":6,"column":5,"nodeType":"612","messageId":"613","endLine":6,"endColumn":10},{"ruleId":"610","severity":1,"message":"637","line":7,"column":5,"nodeType":"612","messageId":"613","endLine":7,"endColumn":9},{"ruleId":"610","severity":1,"message":"638","line":9,"column":10,"nodeType":"612","messageId":"613","endLine":9,"endColumn":26},{"ruleId":"610","severity":1,"message":"639","line":10,"column":10,"nodeType":"612","messageId":"613","endLine":10,"endColumn":17},{"ruleId":"610","severity":1,"message":"640","line":11,"column":10,"nodeType":"612","messageId":"613","endLine":11,"endColumn":19},{"ruleId":"610","severity":1,"message":"641","line":13,"column":8,"nodeType":"612","messageId":"613","endLine":13,"endColumn":10},{"ruleId":"632","severity":1,"message":"642","line":27,"column":53,"nodeType":"634","endLine":27,"endColumn":55,"suggestions":"643"},{"ruleId":"616","replacedBy":"644"},{"ruleId":"618","replacedBy":"645"},{"ruleId":"616","replacedBy":"617"},{"ruleId":"618","replacedBy":"619"},{"ruleId":"610","severity":1,"message":"646","line":9,"column":3,"nodeType":"612","messageId":"613","endLine":9,"endColumn":11},{"ruleId":"610","severity":1,"message":"647","line":2,"column":10,"nodeType":"612","messageId":"613","endLine":2,"endColumn":18},{"ruleId":"610","severity":1,"message":"646","line":8,"column":3,"nodeType":"612","messageId":"613","endLine":8,"endColumn":11},{"ruleId":"610","severity":1,"message":"648","line":3,"column":19,"nodeType":"612","messageId":"613","endLine":3,"endColumn":23},{"ruleId":"616","replacedBy":"649"},{"ruleId":"618","replacedBy":"650"},{"ruleId":"632","severity":1,"message":"651","line":167,"column":6,"nodeType":"634","endLine":167,"endColumn":45,"suggestions":"652"},{"ruleId":"610","severity":1,"message":"648","line":20,"column":19,"nodeType":"612","messageId":"613","endLine":20,"endColumn":23},{"ruleId":"632","severity":1,"message":"651","line":169,"column":6,"nodeType":"634","endLine":169,"endColumn":74,"suggestions":"653"},{"ruleId":"610","severity":1,"message":"654","line":3,"column":15,"nodeType":"612","messageId":"613","endLine":3,"endColumn":24},{"ruleId":"610","severity":1,"message":"655","line":9,"column":7,"nodeType":"612","messageId":"613","endLine":9,"endColumn":43},{"ruleId":"616","replacedBy":"656"},{"ruleId":"618","replacedBy":"657"},{"ruleId":"616","replacedBy":"658"},{"ruleId":"618","replacedBy":"659"},{"ruleId":"610","severity":1,"message":"646","line":8,"column":3,"nodeType":"612","messageId":"613","endLine":8,"endColumn":11},{"ruleId":"616","replacedBy":"658"},{"ruleId":"618","replacedBy":"659"},{"ruleId":"610","severity":1,"message":"646","line":9,"column":3,"nodeType":"612","messageId":"613","endLine":9,"endColumn":11},{"ruleId":"632","severity":1,"message":"660","line":171,"column":6,"nodeType":"634","endLine":171,"endColumn":111,"suggestions":"661"},{"ruleId":"610","severity":1,"message":"662","line":84,"column":9,"nodeType":"612","messageId":"613","endLine":84,"endColumn":20},{"ruleId":"632","severity":1,"message":"651","line":169,"column":6,"nodeType":"634","endLine":169,"endColumn":74,"suggestions":"663"},{"ruleId":"610","severity":1,"message":"647","line":2,"column":10,"nodeType":"612","messageId":"613","endLine":2,"endColumn":18},{"ruleId":"632","severity":1,"message":"633","line":32,"column":6,"nodeType":"634","endLine":32,"endColumn":32,"suggestions":"664"},{"ruleId":"632","severity":1,"message":"642","line":21,"column":53,"nodeType":"634","endLine":21,"endColumn":55,"suggestions":"665"},"@typescript-eslint/no-unused-vars","'Sentry' is defined but never used.","Identifier","unusedVar","'Integrations' is defined but never used.","'LogoIcon' is defined but never used.","no-native-reassign",["666"],"no-negated-in-lhs",["667"],"'Redirect' is defined but never used.","'Footer' is defined but never used.","'ThemeProvider' is defined but never used.","'theme' is defined but never used.","'styled' is defined but never used.","'Header' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["666"],["667"],"'getAddress' is defined but never used.","react-hooks/exhaustive-deps","React Hook React.useCallback has a missing dependency: 'network.chainId'. Either include it or remove the dependency array.","ArrayExpression",["668"],"'Input' is defined but never used.","'Text' is defined but never used.","'humanFriendlyWei' is defined but never used.","'fromWei' is defined but never used.","'TokenInfo' is defined but never used.","'BN' is defined but never used.","React Hook React.useEffect has missing dependencies: 'setAmount' and 'start'. Either include them or remove the dependency array. If 'setAmount' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["669"],["666"],["667"],"'MenuBars' is defined but never used.","'BiListUl' is defined but never used.","'toBN' is defined but never used.",["666"],["667"],"React Hook React.useMemo has missing dependencies: 'approveButton', 'buttonLoading', 'confirmButton', and 'lpTok'. Either include them or remove the dependency array.",["670"],["671"],"'Container' is defined but never used.","'HeaderLink' is assigned a value but never used.",["666"],["667"],["666"],["667"],"React Hook React.useMemo has a missing dependency: 'approveButton'. Either include it or remove the dependency array.",["672"],"'closeButton' is assigned a value but never used.",["673"],["674"],["675"],"no-global-assign","no-unsafe-negation",{"desc":"676","fix":"677"},{"desc":"678","fix":"679"},{"desc":"680","fix":"681"},{"desc":"680","fix":"682"},{"desc":"680","fix":"683"},{"desc":"680","fix":"684"},{"desc":"676","fix":"685"},{"desc":"678","fix":"686"},"Update the dependencies array to be: [tokens, userAddress, kit.web3.eth.Contract, network.chainId]",{"range":"687","text":"688"},"Update the dependencies array to be: [setAmount, start]",{"range":"689","text":"690"},"Update the dependencies array to be: [tokenStates, erc, supply.tokenSupply, supply.lpSupply, approveButton, pool.tokens, buttonLoading, confirmButton, lpTok]",{"range":"691","text":"692"},{"range":"693","text":"692"},{"range":"694","text":"692"},{"range":"695","text":"692"},{"range":"696","text":"688"},{"range":"697","text":"690"},[1261,1287],"[tokens, userAddress, kit.web3.eth.Contract, network.chainId]",[732,734],"[setAmount, start]",[5588,5627],"[tokenStates, erc, supply.tokenSupply, supply.lpSupply, approveButton, pool.tokens, buttonLoading, confirmButton, lpTok]",[5708,5776],[5746,5851],[5702,5770],[1214,1240],[545,547]]