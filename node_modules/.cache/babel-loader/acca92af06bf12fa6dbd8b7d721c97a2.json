{"ast":null,"code":"var _jsxFileName = \"/Users/kylescott/src/nomspace-interface/src/pages/Position/Add/supply.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Button, Card, Flex, Heading, Spinner } from \"theme-ui\";\nimport { useERC } from \"src/hooks/useERC\";\nimport { useERCmulti } from \"src/hooks/useERCmulti\";\nimport { TokenInputForm } from \"src/components/TokenInputForm\";\nimport { useSetRecoilState, useRecoilState } from 'recoil';\nimport { BlockText } from \"src/components/BlockText\";\nimport { Token } from \"src/utils/token\";\nimport { toWei, toBN, fromWei } from \"web3-utils\";\nimport { lpToken } from \"src/config\";\nimport { TokenAmountInfo } from \"src/components/TokenAmountInfo\";\nimport { useContractKit } from \"@celo-tools/use-contractkit\";\nimport UNI_PAIR from \"src/abis/dahlia_contracts/dependencies/ubeswap/ubeswap@mainnet-v1/IUniswapV2Pair.json\";\nimport { useAsyncState } from \"src/hooks/useAsyncState\";\nimport { getAddress } from \"ethers/lib/utils\";\nimport { addFarmState, addPageState, addPage } from \"src/pages/Position/Add/add\";\nimport { poolState } from \"src/pages/Farm/newFarm/NewFarm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Supply = () => {\n  _s();\n\n  const [pool] = useRecoilState(poolState);\n  const setPage = useSetRecoilState(addPageState);\n  const [buttonLoading, setButtonLoading] = React.useState(true);\n  const [farm, setFarm] = useRecoilState(addFarmState);\n  const {\n    kit\n  } = useContractKit();\n  const lpTok = new Token({ ...lpToken,\n    address: pool.lp\n  });\n  const [erc] = useERC(lpTok.address);\n  const [tokenStates] = useERCmulti(pool.tokens);\n  const [amounts, setAmounts] = React.useState(Array(pool.tokens.length).fill(\"0\"));\n  React.useEffect(() => setAmounts(Array(pool.tokens.length).fill(\"0\")), [pool.tokens]);\n  const [lpAmount, setLPAmount] = React.useState(\"0\");\n  const lp = React.useMemo(() => new kit.web3.eth.Contract(UNI_PAIR.abi, pool.lp), [kit.web3.eth.Contract, pool.lp]);\n  const call = React.useCallback(async () => {\n    try {\n      const totalSupply = toBN(await lp.methods.totalSupply().call());\n      let reserve0;\n      let reserve1;\n      const getReserves = await lp.methods.getReserves().call();\n      const balance = toBN(farm.collateralSize);\n\n      if (getAddress(await lp.methods.token0().call()) === getAddress(pool.tokens[0].address)) {\n        reserve0 = toBN(getReserves.reserve0);\n        reserve1 = toBN(getReserves.reserve1);\n      } else {\n        reserve0 = toBN(getReserves.reserve1);\n        reserve1 = toBN(getReserves.reserve0);\n      }\n\n      return [reserve0, reserve1].map(reserve => reserve.mul(balance).div(totalSupply));\n    } catch (error) {\n      console.log(error);\n    }\n  }, [lp, pool.tokens, farm]);\n  const [info] = useAsyncState(null, call);\n\n  const continueButton = /*#__PURE__*/_jsxDEV(Button, {\n    onClick: () => {\n      setFarm({ ...farm,\n        tokenSupply: amounts.map(x => toBN(toWei(x))),\n        lpSupply: toBN(toWei(lpAmount)),\n        existingBalance: info\n      });\n      setPage(addPage.Borrow);\n    },\n    children: \"Continue\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n\n  const invalid = /*#__PURE__*/_jsxDEV(Button, {\n    disabled: true,\n    children: \"Enter a valid amount\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 20\n  }, this);\n\n  const insufficient = /*#__PURE__*/_jsxDEV(Button, {\n    disabled: true,\n    children: \"Insufficient funds\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 25\n  }, this);\n\n  let button = continueButton;\n\n  if (tokenStates) {\n    for (let i = 0; i < tokenStates.length; i += 1) {\n      if (tokenStates[i]) {\n        var _tokenStates$i;\n\n        const fmtCost = amounts[i] === \"\" ? \"0\" : amounts[i];\n        const amountBN = toBN(toWei(fmtCost));\n\n        if (Number(fmtCost) < 0 || amounts[i] === \"\") {\n          button = invalid;\n        } else if ((_tokenStates$i = tokenStates[i]) === null || _tokenStates$i === void 0 ? void 0 : _tokenStates$i.balance.lt(amountBN)) {\n          button = insufficient;\n        }\n      }\n    }\n\n    if (erc) {\n      const fmtCost = lpAmount === \"\" ? \"0\" : lpAmount;\n      const amountBN = toBN(toWei(lpAmount));\n\n      if (Number(fmtCost) < 0 || lpAmount === \"\") {\n        button = invalid;\n      } else if (erc.balance.lt(amountBN)) {\n        button = insufficient;\n      }\n\n      if (amounts.every(x => x === \"0\") && lpAmount === \"0\") button = invalid;\n      if (buttonLoading) setButtonLoading(false);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(Flex, {\n    sx: {\n      alignItems: \"center\",\n      flexDirection: \"column\"\n    },\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      sx: {\n        width: \"100%\",\n        maxWidth: \"800px\"\n      },\n      py: 4,\n      px: 3,\n      children: [/*#__PURE__*/_jsxDEV(Flex, {\n        mb: 4,\n        children: /*#__PURE__*/_jsxDEV(Heading, {\n          as: \"h2\",\n          mr: 2,\n          children: \"Farm\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Flex, {\n        sx: {\n          flexDirection: \"column\",\n          gap: \"25px\",\n          mb: 10\n        },\n        children: [/*#__PURE__*/_jsxDEV(BlockText, {\n          variant: \"primary\",\n          children: \"My position has\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Flex, {\n          sx: {\n            justifyContent: \"left\",\n            gap: \"8px\",\n            alignItems: \"center\"\n          },\n          children: info && pool.tokens.map((tok, index) => /*#__PURE__*/_jsxDEV(Flex, {\n            sx: {\n              alignItems: \"center\",\n              mr: 4,\n              padding: 2,\n              borderStyle: \"solid\",\n              borderRadius: \"10px\"\n            },\n            children: /*#__PURE__*/_jsxDEV(TokenAmountInfo, {\n              token: tok,\n              amount: fromWei(info[index])\n            }, tok.address, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 13\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Flex, {\n        sx: {\n          flexDirection: \"column\",\n          gap: \"25px\",\n          mb: 10\n        },\n        children: [/*#__PURE__*/_jsxDEV(BlockText, {\n          variant: \"primary\",\n          children: \"Supply More\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 11\n        }, this), pool.tokens.map((tok, index) => {\n          var _index;\n\n          return /*#__PURE__*/_jsxDEV(TokenInputForm, {\n            token: tok,\n            amount: amounts[index],\n            setAmount: s => setAmounts(amounts.map((x, i) => i === index ? s : x)),\n            balance: tokenStates && tokenStates[index] ? (_index = tokenStates[index]) === null || _index === void 0 ? void 0 : _index.balance : null\n          }, tok.address, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 13\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Flex, {\n        sx: {\n          mt: \"25px\"\n        },\n        children: /*#__PURE__*/_jsxDEV(BlockText, {\n          variant: \"primary\",\n          children: \"Supply LP Token\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TokenInputForm, {\n        token: lpTok,\n        amount: lpAmount,\n        setAmount: setLPAmount,\n        balance: erc ? erc.balance : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Flex, {\n        sx: {\n          justifyContent: \"center\",\n          mt: 6\n        },\n        children: buttonLoading ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 15\n        }, this) : button\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 125,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Supply, \"4lBiZgFqK7JTKFC0VGgCnBFtsHI=\", false, function () {\n  return [useRecoilState, useSetRecoilState, useRecoilState, useContractKit, useERC, useERCmulti, useAsyncState];\n});\n\n_c = Supply;\n\nvar _c;\n\n$RefreshReg$(_c, \"Supply\");","map":{"version":3,"sources":["/Users/kylescott/src/nomspace-interface/src/pages/Position/Add/supply.tsx"],"names":["React","Button","Card","Flex","Heading","Spinner","useERC","useERCmulti","TokenInputForm","useSetRecoilState","useRecoilState","BlockText","Token","toWei","toBN","fromWei","lpToken","TokenAmountInfo","useContractKit","UNI_PAIR","useAsyncState","getAddress","addFarmState","addPageState","addPage","poolState","Supply","pool","setPage","buttonLoading","setButtonLoading","useState","farm","setFarm","kit","lpTok","address","lp","erc","tokenStates","tokens","amounts","setAmounts","Array","length","fill","useEffect","lpAmount","setLPAmount","useMemo","web3","eth","Contract","abi","call","useCallback","totalSupply","methods","reserve0","reserve1","getReserves","balance","collateralSize","token0","map","reserve","mul","div","error","console","log","info","continueButton","tokenSupply","x","lpSupply","existingBalance","Borrow","invalid","insufficient","button","i","fmtCost","amountBN","Number","lt","every","alignItems","flexDirection","width","maxWidth","gap","mb","justifyContent","tok","index","mr","padding","borderStyle","borderRadius","s","mt"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {\n  Button,\n  Card,\n  Flex,\n  Heading,\n  Spinner,\n  Text,\n} from \"theme-ui\";\nimport { CaretLeft } from \"phosphor-react\";\nimport { useERC } from \"src/hooks/useERC\";\nimport { useERCmulti } from \"src/hooks/useERCmulti\";\nimport { TokenInputForm } from \"src/components/TokenInputForm\";\nimport { useSetRecoilState, useRecoilState } from 'recoil';\nimport { BlockText } from \"src/components/BlockText\";\nimport { Token } from \"src/utils/token\";\nimport { toWei, toBN, fromWei, AbiItem } from \"web3-utils\";\nimport { lpToken } from \"src/config\";\nimport BN from 'bn.js';\nimport { TokenAmountInfo } from \"src/components/TokenAmountInfo\";\nimport { useContractKit } from \"@celo-tools/use-contractkit\";\nimport UNI_PAIR from \"src/abis/dahlia_contracts/dependencies/ubeswap/ubeswap@mainnet-v1/IUniswapV2Pair.json\"\nimport { IUniswapV2Pair } from \"src/generated/IUniswapV2Pair\";\nimport { useAsyncState } from \"src/hooks/useAsyncState\";\nimport { getAddress } from \"ethers/lib/utils\";\nimport { addFarmState, addPageState, addPage } from \"src/pages/Position/Add/add\";\nimport { poolState } from \"src/pages/Farm/newFarm/NewFarm\";\n\n\n\nexport const Supply: React.FC = () => {\n  const [pool] = useRecoilState(poolState);\n  const setPage = useSetRecoilState(addPageState)\n  const [buttonLoading, setButtonLoading] = React.useState(true); \n  const [farm, setFarm] = useRecoilState(addFarmState);\n  const { kit } = useContractKit();\n\n  const lpTok: Token = new Token({\n    ...lpToken,\n    address: pool.lp,\n  });\n  const [erc] = useERC(lpTok.address);\n  const [tokenStates] = useERCmulti(pool.tokens)\n  \n  const [amounts, setAmounts] = React.useState(Array<string>(pool.tokens.length).fill(\"0\"))\n\n  React.useEffect(() => setAmounts(Array<string>(pool.tokens.length).fill(\"0\")), [pool.tokens])\n\n  const [lpAmount, setLPAmount] = React.useState(\"0\")\n  \n  const lp = React.useMemo(() => (new kit.web3.eth.Contract(\n    UNI_PAIR.abi as AbiItem[],\n    pool.lp,\n  ) as unknown) as IUniswapV2Pair, [kit.web3.eth.Contract, pool.lp]); \n\n  const call = React.useCallback(async () => {\n    try {\n        const totalSupply = toBN(await lp.methods.totalSupply().call());\n        let reserve0: BN;\n        let reserve1: BN ; \n        const getReserves = await lp.methods.getReserves().call();\n        const balance = toBN(farm.collateralSize!); \n        if (getAddress(await lp.methods.token0().call()) === getAddress(pool.tokens[0]!.address)) {\n          reserve0 = toBN(getReserves.reserve0);\n          reserve1 = toBN(getReserves.reserve1);\n        } else {\n          reserve0 = toBN(getReserves.reserve1);\n          reserve1 = toBN(getReserves.reserve0);\n        }\n        return [reserve0, reserve1].map((reserve) => reserve.mul(balance).div(totalSupply))\n    } catch (error) {\n        console.log(error)\n    }\n    \n}, [lp, pool.tokens, farm])\n\n  const [info] = useAsyncState(null, call);\n\n  const continueButton = (\n    <Button\n      onClick={() => {\n        setFarm({\n          ...farm,\n          tokenSupply: amounts.map((x) => toBN(toWei(x))),\n          lpSupply: toBN(toWei(lpAmount)),\n          existingBalance: info!, \n          });\n        setPage(addPage.Borrow); \n      }}\n      >\n        Continue\n      </Button>\n  )\n\n  const invalid = (<Button disabled>Enter a valid amount</Button>)\n  const insufficient = (<Button disabled={true}>Insufficient funds</Button>);\n\n  let button = continueButton;\n  if (tokenStates) {\n    for (let i = 0; i < tokenStates.length; i += 1) {\n      if (tokenStates[i]){\n        const fmtCost = amounts[i] === \"\" ? \"0\" : amounts[i]!;\n        const amountBN = toBN(toWei(fmtCost))\n        if (Number(fmtCost) < 0 || amounts[i] === \"\") {\n          button = invalid;\n        } else if (tokenStates[i]?.balance.lt(amountBN)) {\n          button = insufficient;\n        } \n      }\n    }\n    if (erc) {\n      const fmtCost = lpAmount === \"\" ? \"0\" : lpAmount;\n      const amountBN = toBN(toWei(lpAmount))\n      if (Number(fmtCost) < 0 || lpAmount === \"\") {\n        button = invalid;\n      } else if (erc.balance.lt(amountBN)) {\n        button = insufficient;\n      }\n      if (amounts.every((x) => x === \"0\") && lpAmount === \"0\") button = invalid; \n      if (buttonLoading) setButtonLoading(false); \n    }\n  }\n\n  return (\n    <Flex sx={{ alignItems: \"center\", flexDirection: \"column\" }}>\n      <Card sx={{ width: \"100%\", maxWidth: \"800px\" }} py={4} px={3}>\n        <Flex mb={4}>\n          <Heading as=\"h2\" mr={2}>\n            Farm\n          </Heading>\n        </Flex>\n        <Flex sx={{flexDirection: \"column\", gap: \"25px\", mb: 10}}>\n          <BlockText variant=\"primary\">My position has</BlockText>\n          <Flex sx={{ justifyContent: \"left\", gap: \"8px\", alignItems: \"center\"}}>\n            {info && pool.tokens.map((tok, index) => \n            <Flex\n            sx={{\n              alignItems: \"center\",\n              mr: 4,\n              padding:2,\n              borderStyle: \"solid\",\n              borderRadius: \"10px\",\n            }}\n          >\n              <TokenAmountInfo key={tok.address} token={tok} amount={fromWei(info![index]!)} />       \n            </Flex>\n          )}\n          </Flex>\n        </Flex>\n        <Flex sx={{flexDirection: \"column\", gap: \"25px\", mb: 10}}>\n          <BlockText variant=\"primary\">Supply More</BlockText>\n          {pool.tokens.map((tok, index) => \n            <TokenInputForm key={tok.address} token={tok} amount={amounts[index]!}\n             setAmount={(s: string) => setAmounts(amounts.map((x, i) => i === index ? s : x))} \n             balance={tokenStates && tokenStates![index]! ? tokenStates![index]?.balance! : null}\n            />\n          )}\n        </Flex>\n        <Flex sx={{mt: \"25px\"}}>\n          <BlockText variant=\"primary\">Supply LP Token</BlockText>\n        </Flex>\n        <TokenInputForm token={lpTok} amount={lpAmount} setAmount={setLPAmount} balance={erc ? erc.balance : null}/>\n        <Flex sx={{ justifyContent: \"center\", mt: 6 }}>\n          {buttonLoading ? (\n              <Spinner />\n            ) : (\n              button\n            )}\n        </Flex>\n      </Card>\n    </Flex>\n  );\n};"]},"metadata":{},"sourceType":"module"}