{"ast":null,"code":"var _jsxFileName = \"/Users/kylescott/src/nomspace-interface/src/pages/Position/Pos.tsx\";\nimport { css } from \"@emotion/react\";\nimport styled from \"@emotion/styled\";\nimport { Button } from \"theme-ui\";\nimport React from \"react\";\nimport { FarmInfo } from \"src/components/FarmInfo\";\nimport { Flex } from \"theme-ui\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Pos = info => {\n  //   const setPage = useSetRecoilState(pageState);\n  // const [pool, setPool] = useRecoilState(poolState)\n  // setPool(info.pool); \n  //   const setTab = useSetRecoilState(showTabs);\n  //   const { kit, network } = useContractKit();\n  //   const bank = React.useMemo(() => (new kit.web3.eth.Contract(\n  //     BANK_ABI.abi as AbiItem[],\n  //     getAddress(Bank[network.chainId])\n  //   ) as unknown) as HomoraBank, [kit, network]); \n  //   const call = React.useCallback(async () => {\n  //     try {\n  //         const borrows = [];\n  //         const factors = [];\n  //         const oracle = await bank.methods.oracle().call();\n  //         const proxyOracle = (new kit.web3.eth.Contract(\n  //           PROXYORACLE_ABI.abi as AbiItem[],\n  //           oracle,\n  //         ) as unknown) as ProxyOracle;\n  //         for (let i: number = 0; i < pool.tokens.length; i += 1) {\n  //           const bankInfo =  await bank.methods.getBankInfo(pool?.tokens[i]!.address).call();\n  //           const factor = await proxyOracle.methods.tokenFactors(pool?.tokens[i]!.address).call();\n  //           factors.push(factor);\n  //           const cToken = (new kit.web3.eth.Contract(\n  //             CERC20_ABI as AbiItem[],\n  //             bankInfo.cToken,\n  //           ) as unknown) as CErc20Immutable;\n  //           const totalSupply = await cToken.methods.totalSupply().call();\n  //           const totalBorrows = await cToken.methods.totalBorrows().call();\n  //           const totalReserves = await cToken.methods.totalReserves().call();\n  //           const interestRateModel = await cToken.methods.interestRateModel().call();\n  //           const jumpRate = (new kit.web3.eth.Contract(\n  //             JUMPRATE_ABI as AbiItem[],\n  //             interestRateModel,\n  //           ) as unknown) as JumpRateModelV2;\n  //           const borrowRate = await jumpRate.methods.getBorrowRate(totalSupply, totalBorrows, totalReserves).call();\n  //           borrows.push(toBN(borrowRate));\n  //         }\n  //         return {\n  //           borrowRate: borrows,\n  //           tokenFactor: factors,\n  //         };\n  //     } catch (error) {\n  //         console.log(error)\n  //     }\n  // }, [bank, pool.tokens, kit])\n  //   const [info] = useAsyncState(null, call);\n  //   const lever = (factor: {borrowFactor: string, collateralFactor: string}) => {\n  //     return 1 + (Number(factor.collateralFactor) / (Number(factor.borrowFactor) - Number(factor.collateralFactor)))\n  //   }\n  //   const maxLever = info ? Math.max(...(info?.tokenFactor.map((x) => lever({borrowFactor: x.borrowFactor, collateralFactor: x.collateralFactor})))!) : 0;\n  //   const { tokens } = poolInfo;\n  return /*#__PURE__*/_jsxDEV(Row, {\n    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n      children: /*#__PURE__*/_jsxDEV(FarmInfo, {\n        props: info.pool\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: \"A lot\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: \"A lot\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: \"High\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: \"High\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      css: css`\n          text-align: right;\n        `,\n      children: /*#__PURE__*/_jsxDEV(Flex, {\n        sx: {\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          flexDirection: \"column\",\n          gap: \"6px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Flex, {\n          sx: {\n            justifyContent: \"center\",\n            alighnItems: \"center\",\n            gap: \"6px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            children: \"Add\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            children: \"Remove\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Flex, {\n          sx: {\n            justifyContent: \"center\",\n            alighnItems: \"center\",\n            gap: \"6px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            disabled: info.pool.wstaking === null,\n            children: \"Harvest\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }, this);\n};\n_c = Pos;\nconst Row = styled.tr`\n  height: 72px;\n`;\n_c2 = Row;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Pos\");\n$RefreshReg$(_c2, \"Row\");","map":{"version":3,"sources":["/Users/kylescott/src/nomspace-interface/src/pages/Position/Pos.tsx"],"names":["css","styled","Button","React","FarmInfo","Flex","Pos","info","pool","justifyContent","alignItems","flexDirection","gap","alighnItems","wstaking","Row","tr"],"mappings":";AAAA,SAASA,GAAT,QAAoB,gBAApB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AAEA,SAASC,MAAT,QAAuB,UAAvB;AAcA,OAAOC,KAAP,MAAkB,OAAlB;AAKA,SAASC,QAAT,QAAyB,yBAAzB;AACA,SAASC,IAAT,QAAqB,UAArB;;AAWA,OAAO,MAAMC,GAAoB,GAAIC,IAAD,IAAiB;AACrD;AACE;AACA;AACF;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AAEA;AAGA;AAEE,sBACE,QAAC,GAAD;AAAA,4BACE;AAAA,6BACA,QAAC,QAAD;AAAU,QAAA,KAAK,EAAEA,IAAI,CAACC;AAAtB;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,YADF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALF,eAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YANF,eAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAPF,eAQE;AACE,MAAA,GAAG,EAAER,GAAI;AACjB;AACA,SAHM;AAAA,6BAKE,QAAC,IAAD;AAAM,QAAA,EAAE,EAAE;AAACS,UAAAA,cAAc,EAAE,QAAjB;AAA2BC,UAAAA,UAAU,EAAE,QAAvC;AAAiDC,UAAAA,aAAa,EAAE,QAAhE;AAA0EC,UAAAA,GAAG,EAAE;AAA/E,SAAV;AAAA,gCACE,QAAC,IAAD;AAAM,UAAA,EAAE,EAAE;AAACH,YAAAA,cAAc,EAAE,QAAjB;AAA2BI,YAAAA,WAAW,EAAE,QAAxC;AAAkDD,YAAAA,GAAG,EAAE;AAAvD,WAAV;AAAA,kCACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAIE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eASE,QAAC,IAAD;AAAM,UAAA,EAAE,EAAE;AAACH,YAAAA,cAAc,EAAE,QAAjB;AAA2BI,YAAAA,WAAW,EAAE,QAAxC;AAAkDD,YAAAA,GAAG,EAAE;AAAvD,WAAV;AAAA,kCACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAIE,QAAC,MAAD;AAAQ,YAAA,QAAQ,EAAEL,IAAI,CAACC,IAAL,CAAUM,QAAV,KAAuB,IAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,gBATF;AAAA;AAAA;AAAA;AAAA;AAAA;AALF;AAAA;AAAA;AAAA;AAAA,YARF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAoCD,CAlGM;KAAMR,G;AAoGb,MAAMS,GAAG,GAAGd,MAAM,CAACe,EAAG;AACtB;AACA,CAFA;MAAMD,G","sourcesContent":["import { css } from \"@emotion/react\";\nimport styled from \"@emotion/styled\";\nimport { useContractKit } from \"@celo-tools/use-contractkit\";\nimport { Button } from \"theme-ui\";\nimport { TokenInfo } from \"src/components/TokenInfo\";\nimport { Token } from \"src/utils/token\";\nimport { useHistory } from \"react-router-dom\";\nimport { AbiItem, toBN } from \"web3-utils\";\nimport BANK_ABI from \"src/abis/dahlia_contracts/HomoraBank.json\";\nimport CERC20_ABI from \"src/abis/fountain_of_youth/CErc20Immutable.json\";\nimport JUMPRATE_ABI from \"src/abis/fountain_of_youth/JumpRateModelV2.json\"; \nimport PROXYORACLE_ABI from \"src/abis/dahlia_contracts/ProxyOracle.json\";\nimport { HomoraBank } from \"src/generated/HomoraBank\";\nimport { ProxyOracle } from \"src/generated/ProxyOracle\";\nimport { CErc20Immutable } from \"src/generated/CErc20Immutable\";\nimport { JumpRateModelV2 } from \"src/generated/JumpRateModelV2\";\nimport { Bank } from \"src/config\";\nimport React from \"react\";\nimport { useAsyncState } from \"src/hooks/useAsyncState\";\nimport { getAddress } from \"ethers/lib/utils\";\nimport { humanFriendlyWei } from \"src/utils/eth\";\nimport { PoolIcon } from \"src/components/PoolIcon\";\nimport { FarmInfo } from \"src/components/FarmInfo\";\nimport { Flex } from \"theme-ui\";\nimport { TokenBorrowInfo } from \"src/components/TokenBorrowInfo\";\nimport {  RecoilRoot,  atom,  useRecoilState,  useSetRecoilState } from 'recoil';\nimport { pageState, Page, poolProps, poolState } from \"src/pages/Farm\";\nimport { showTabs } from \"src/components/Header\"\n\ninterface Props {\n  pool :poolProps,\n  positionId: number,\n}\n\nexport const Pos: React.FC<Props> = (info: Props) => {\n//   const setPage = useSetRecoilState(pageState);\n  // const [pool, setPool] = useRecoilState(poolState)\n  // setPool(info.pool); \n//   const setTab = useSetRecoilState(showTabs);\n\n//   const { kit, network } = useContractKit();\n\n//   const bank = React.useMemo(() => (new kit.web3.eth.Contract(\n//     BANK_ABI.abi as AbiItem[],\n//     getAddress(Bank[network.chainId])\n//   ) as unknown) as HomoraBank, [kit, network]); \n\n//   const call = React.useCallback(async () => {\n//     try {\n//         const borrows = [];\n//         const factors = [];\n//         const oracle = await bank.methods.oracle().call();\n//         const proxyOracle = (new kit.web3.eth.Contract(\n//           PROXYORACLE_ABI.abi as AbiItem[],\n//           oracle,\n//         ) as unknown) as ProxyOracle;\n//         for (let i: number = 0; i < pool.tokens.length; i += 1) {\n//           const bankInfo =  await bank.methods.getBankInfo(pool?.tokens[i]!.address).call();\n//           const factor = await proxyOracle.methods.tokenFactors(pool?.tokens[i]!.address).call();\n//           factors.push(factor);\n//           const cToken = (new kit.web3.eth.Contract(\n//             CERC20_ABI as AbiItem[],\n//             bankInfo.cToken,\n//           ) as unknown) as CErc20Immutable;\n//           const totalSupply = await cToken.methods.totalSupply().call();\n//           const totalBorrows = await cToken.methods.totalBorrows().call();\n//           const totalReserves = await cToken.methods.totalReserves().call();\n//           const interestRateModel = await cToken.methods.interestRateModel().call();\n//           const jumpRate = (new kit.web3.eth.Contract(\n//             JUMPRATE_ABI as AbiItem[],\n//             interestRateModel,\n//           ) as unknown) as JumpRateModelV2;\n//           const borrowRate = await jumpRate.methods.getBorrowRate(totalSupply, totalBorrows, totalReserves).call();\n//           borrows.push(toBN(borrowRate));\n//         }\n//         return {\n//           borrowRate: borrows,\n//           tokenFactor: factors,\n//         };\n//     } catch (error) {\n//         console.log(error)\n//     }\n    \n// }, [bank, pool.tokens, kit])\n\n//   const [info] = useAsyncState(null, call);\n\n//   const lever = (factor: {borrowFactor: string, collateralFactor: string}) => {\n//     return 1 + (Number(factor.collateralFactor) / (Number(factor.borrowFactor) - Number(factor.collateralFactor)))\n//   }\n\n//   const maxLever = info ? Math.max(...(info?.tokenFactor.map((x) => lever({borrowFactor: x.borrowFactor, collateralFactor: x.collateralFactor})))!) : 0;\n\n\n//   const { tokens } = poolInfo;\n\n  return (\n    <Row>\n      <td>\n      <FarmInfo props={info.pool} />\n      </td>\n      <td>A lot</td>\n      <td>A lot</td>\n      <td>High</td>\n      <td>High</td>\n      <td\n        css={css`\n          text-align: right;\n        `}\n      >\n        <Flex sx={{justifyContent: \"center\", alignItems: \"center\", flexDirection: \"column\", gap: \"6px\"}}>\n          <Flex sx={{justifyContent: \"center\", alighnItems: \"center\", gap: \"6px\"}}>\n            <Button>\n              Add\n            </Button>\n            <Button>\n              Remove\n            </Button>\n          </Flex>\n          <Flex sx={{justifyContent: \"center\", alighnItems: \"center\", gap: \"6px\"}}>\n            <Button>\n              Close\n            </Button>\n            <Button disabled={info.pool.wstaking === null}>\n              Harvest\n            </Button>\n          </Flex>\n        </Flex>\n        \n      </td>\n    </Row>\n  );\n};\n\nconst Row = styled.tr`\n  height: 72px;\n`;\n"]},"metadata":{},"sourceType":"module"}