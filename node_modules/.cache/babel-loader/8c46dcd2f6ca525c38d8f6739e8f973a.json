{"ast":null,"code":"import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\nimport global from \"src/state/global\";\nconst store = configureStore({\n  reducer: {\n    global\n  },\n  middleware: [...getDefaultMiddleware({\n    thunk: false\n  })]\n});\nexport default store;","map":{"version":3,"sources":["/Users/kylescott/src/nomspace-interface/src/state/index.ts"],"names":["configureStore","getDefaultMiddleware","global","store","reducer","middleware","thunk"],"mappings":"AAAA,SAASA,cAAT,EAAyBC,oBAAzB,QAAqD,kBAArD;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AAEA,MAAMC,KAAK,GAAGH,cAAc,CAAC;AAC3BI,EAAAA,OAAO,EAAE;AACPF,IAAAA;AADO,GADkB;AAI3BG,EAAAA,UAAU,EAAE,CAAC,GAAGJ,oBAAoB,CAAC;AAAEK,IAAAA,KAAK,EAAE;AAAT,GAAD,CAAxB;AAJe,CAAD,CAA5B;AAOA,eAAeH,KAAf","sourcesContent":["import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\nimport global from \"src/state/global\";\n\nconst store = configureStore({\n  reducer: {\n    global,\n  },\n  middleware: [...getDefaultMiddleware({ thunk: false })],\n});\n\nexport default store;\n\nexport type AppState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\n"]},"metadata":{},"sourceType":"module"}