{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useLayoutEffect, useState } from \"react\";\nimport { useThemeUI } from \"theme-ui\";\nexport let Breakpoint;\n\n(function (Breakpoint) {\n  Breakpoint[\"MOBILE\"] = \"MOBILE\";\n  Breakpoint[\"DESKTOP\"] = \"DESKTOP\";\n})(Breakpoint || (Breakpoint = {}));\n\nexport const useBreakpoint = () => {\n  _s();\n\n  const {\n    theme\n  } = useThemeUI();\n  const [breakpoint, setBreakpoint] = useState(Breakpoint.MOBILE);\n  const desktopBreakpoint = parseInt(theme.breakpoints[1]);\n  useLayoutEffect(() => {\n    const listener = () => {\n      if (window.innerWidth < desktopBreakpoint) {\n        setBreakpoint(Breakpoint.MOBILE);\n      } else {\n        setBreakpoint(Breakpoint.DESKTOP);\n      }\n    };\n\n    window.addEventListener(\"resize\", listener);\n    listener();\n    return () => window.removeEventListener(\"resize\", listener);\n  }, [desktopBreakpoint]);\n  return breakpoint;\n};\n\n_s(useBreakpoint, \"RB1m4cfIpQ2sAXKAugIqQwKimJQ=\", false, function () {\n  return [useThemeUI];\n});","map":{"version":3,"sources":["/Users/kylescott/src/nomspace-interface/src/hooks/useBreakpoint.ts"],"names":["useLayoutEffect","useState","useThemeUI","Breakpoint","useBreakpoint","theme","breakpoint","setBreakpoint","MOBILE","desktopBreakpoint","parseInt","breakpoints","listener","window","innerWidth","DESKTOP","addEventListener","removeEventListener"],"mappings":";;AAAA,SAASA,eAAT,EAA0BC,QAA1B,QAA0C,OAA1C;AACA,SAASC,UAAT,QAA2B,UAA3B;AAEA,WAAYC,UAAZ;;WAAYA,U;AAAAA,EAAAA,U;AAAAA,EAAAA,U;GAAAA,U,KAAAA,U;;AAKZ,OAAO,MAAMC,aAAa,GAAG,MAAM;AAAA;;AACjC,QAAM;AAAEC,IAAAA;AAAF,MAAYH,UAAU,EAA5B;AACA,QAAM,CAACI,UAAD,EAAaC,aAAb,IAA8BN,QAAQ,CAACE,UAAU,CAACK,MAAZ,CAA5C;AACA,QAAMC,iBAAiB,GAAGC,QAAQ,CAACL,KAAK,CAACM,WAAN,CAAmB,CAAnB,CAAD,CAAlC;AAEAX,EAAAA,eAAe,CAAC,MAAM;AACpB,UAAMY,QAAQ,GAAG,MAAM;AACrB,UAAIC,MAAM,CAACC,UAAP,GAAoBL,iBAAxB,EAA2C;AACzCF,QAAAA,aAAa,CAACJ,UAAU,CAACK,MAAZ,CAAb;AACD,OAFD,MAEO;AACLD,QAAAA,aAAa,CAACJ,UAAU,CAACY,OAAZ,CAAb;AACD;AACF,KAND;;AAOAF,IAAAA,MAAM,CAACG,gBAAP,CAAwB,QAAxB,EAAkCJ,QAAlC;AACAA,IAAAA,QAAQ;AACR,WAAO,MAAMC,MAAM,CAACI,mBAAP,CAA2B,QAA3B,EAAqCL,QAArC,CAAb;AACD,GAXc,EAWZ,CAACH,iBAAD,CAXY,CAAf;AAYA,SAAOH,UAAP;AACD,CAlBM;;GAAMF,a;UACOF,U","sourcesContent":["import { useLayoutEffect, useState } from \"react\";\nimport { useThemeUI } from \"theme-ui\";\n\nexport enum Breakpoint {\n  MOBILE = \"MOBILE\",\n  DESKTOP = \"DESKTOP\",\n}\n\nexport const useBreakpoint = () => {\n  const { theme } = useThemeUI();\n  const [breakpoint, setBreakpoint] = useState(Breakpoint.MOBILE);\n  const desktopBreakpoint = parseInt(theme.breakpoints![1] as string);\n\n  useLayoutEffect(() => {\n    const listener = () => {\n      if (window.innerWidth < desktopBreakpoint) {\n        setBreakpoint(Breakpoint.MOBILE);\n      } else {\n        setBreakpoint(Breakpoint.DESKTOP);\n      }\n    };\n    window.addEventListener(\"resize\", listener);\n    listener();\n    return () => window.removeEventListener(\"resize\", listener);\n  }, [desktopBreakpoint]);\n  return breakpoint;\n};\n"]},"metadata":{},"sourceType":"module"}