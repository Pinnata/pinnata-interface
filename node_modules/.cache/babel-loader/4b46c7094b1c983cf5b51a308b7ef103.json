{"ast":null,"code":"var _jsxFileName = \"/Users/kylescott/src/nomspace-interface/src/pages/Position/Remove/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Button, Card, Flex, Text } from \"theme-ui\";\nimport { CaretLeft } from \"phosphor-react\";\nimport { useContractKit } from \"@celo-tools/use-contractkit\";\nimport { useSetRecoilState, useRecoilState } from 'recoil';\nimport { BlockText } from \"src/components/BlockText\";\nimport { Token } from \"src/utils/token\";\nimport { lpToken } from \"src/config\";\nimport { TokenAmountInfo } from \"src/components/TokenAmountInfo\";\nimport { fromWei, toBN } from \"web3-utils\";\nimport { getAddress } from \"ethers/lib/utils\";\nimport { useAsyncState } from \"src/hooks/useAsyncState\";\nimport { posPageState, posPage, posPoolState } from \"src/pages/Position\";\nimport { posFarmState } from \"src/pages/Position/Pos\";\nimport { Slider } from \"rsuite\";\nimport UNI_PAIR from \"src/abis/dahlia_contracts/dependencies/ubeswap/ubeswap@mainnet-v1/IUniswapV2Pair.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Remove = () => {\n  _s();\n\n  const scale = toBN(2).pow(toBN(112));\n  const [pool] = useRecoilState(posPoolState);\n  const setPage = useSetRecoilState(posPageState);\n  const [farm, setFarm] = useRecoilState(posFarmState);\n  const zeroAdd = \"0x0000000000000000000000000000000000000000\";\n  const [init, setInit] = React.useState(false);\n  const [per, setPer] = React.useState(0);\n  const lpTok = new Token({ ...lpToken,\n    address: pool.lp\n  }); //TODO: fix when reaching borrow limit\n\n  const {\n    kit,\n    network\n  } = useContractKit();\n  const [amounts, setAmounts] = React.useState(null);\n  const lp = React.useMemo(() => new kit.web3.eth.Contract(UNI_PAIR.abi, pool.lp), [kit.web3.eth.Contract, pool.lp]);\n  const call = React.useCallback(async () => {\n    try {\n      const totalSupply = toBN(await lp.methods.totalSupply().call());\n      let reserve0;\n      let reserve1;\n      const getReserves = await lp.methods.getReserves().call();\n      const balance = toBN(farm.collateralSize);\n\n      if (getAddress(await lp.methods.token0().call()) === getAddress(pool.tokens[0].address)) {\n        reserve0 = toBN(getReserves.reserve0);\n        reserve1 = toBN(getReserves.reserve1);\n      } else {\n        reserve0 = toBN(getReserves.reserve1);\n        reserve1 = toBN(getReserves.reserve0);\n      }\n\n      return [reserve0, reserve1].map(reserve => reserve.mul(balance).div(totalSupply));\n    } catch (error) {\n      console.log(error);\n    }\n  }, [lp, pool.tokens, farm]);\n  const [info] = useAsyncState(null, call);\n\n  const continueButton = /*#__PURE__*/_jsxDEV(Button, {\n    onClick: () => {\n      setPage(posPage.AddConfirm);\n    },\n    children: \"Continue\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 3\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(Flex, {\n    sx: {\n      alignItems: \"center\",\n      flexDirection: \"column\"\n    },\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      sx: {\n        width: \"100%\",\n        maxWidth: \"800px\"\n      },\n      py: 4,\n      px: 3,\n      children: [/*#__PURE__*/_jsxDEV(Flex, {\n        onClick: () => {\n          setPage(posPage.Table);\n        },\n        sx: {\n          alignItems: \"center\",\n          cursor: \"pointer\"\n        },\n        mb: 4,\n        children: [/*#__PURE__*/_jsxDEV(CaretLeft, {\n          size: 28\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          children: \"Back\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Flex, {\n        sx: {\n          flexDirection: \"column\",\n          gap: \"25px\",\n          mb: 10\n        },\n        children: [/*#__PURE__*/_jsxDEV(BlockText, {\n          variant: \"primary\",\n          children: \"Your Position Balance\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Flex, {\n          sx: {\n            justifyContent: \"left\",\n            gap: \"8px\",\n            alignItems: \"center\"\n          },\n          children: info && pool.tokens.map((tok, index) => /*#__PURE__*/_jsxDEV(Flex, {\n            sx: {\n              alignItems: \"center\",\n              mr: 4,\n              padding: 2,\n              borderStyle: \"solid\",\n              borderRadius: \"10px\"\n            },\n            children: /*#__PURE__*/_jsxDEV(TokenAmountInfo, {\n              token: tok,\n              amount: fromWei(info[index])\n            }, tok.address, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 13\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Flex, {\n        sx: {\n          mb: 2,\n          mt: \"25px\"\n        },\n        children: /*#__PURE__*/_jsxDEV(BlockText, {\n          variant: \"primary\",\n          children: \"I'd like to remove\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Flex, {\n        sx: {\n          width: \"100%\",\n          alignItems: \"center\",\n          gap: \"12px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Slider, {\n          progress: true,\n          defaultValue: 50,\n          style: {\n            width: \"100%\"\n          },\n          step: .01,\n          max: Number(100),\n          onChange: value => setPer(value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(BlockText, {\n          children: [per, \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Flex, {\n        sx: {\n          flexDirection: \"column\",\n          gap: \"25px\",\n          mb: 10\n        },\n        children: [/*#__PURE__*/_jsxDEV(BlockText, {\n          variant: \"primary\",\n          children: \"You receive\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Flex, {\n          sx: {\n            justifyContent: \"left\",\n            gap: \"8px\",\n            alignItems: \"center\"\n          },\n          children: info && pool.tokens.map((tok, index) => /*#__PURE__*/_jsxDEV(Flex, {\n            sx: {\n              alignItems: \"center\",\n              mr: 4,\n              padding: 2,\n              borderStyle: \"solid\",\n              borderRadius: \"10px\"\n            },\n            children: /*#__PURE__*/_jsxDEV(TokenAmountInfo, {\n              token: tok,\n              amount: String(Number(fromWei(info[index])) * (per / 100))\n            }, tok.address, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 13\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Flex, {\n        sx: {\n          justifyContent: \"center\",\n          mt: 6\n        },\n        children: per === 0 ? /*#__PURE__*/_jsxDEV(Button, {\n          disabled: true,\n          children: \"Enter a valid amount\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 13\n        }, this) : continueButton\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Remove, \"dB4D8gaTJoA8q5bqdCdWyUgaU0U=\", false, function () {\n  return [useRecoilState, useSetRecoilState, useRecoilState, useContractKit, useAsyncState];\n});\n\n_c = Remove;\n\nvar _c;\n\n$RefreshReg$(_c, \"Remove\");","map":{"version":3,"sources":["/Users/kylescott/src/nomspace-interface/src/pages/Position/Remove/index.tsx"],"names":["React","Button","Card","Flex","Text","CaretLeft","useContractKit","useSetRecoilState","useRecoilState","BlockText","Token","lpToken","TokenAmountInfo","fromWei","toBN","getAddress","useAsyncState","posPageState","posPage","posPoolState","posFarmState","Slider","UNI_PAIR","Remove","scale","pow","pool","setPage","farm","setFarm","zeroAdd","init","setInit","useState","per","setPer","lpTok","address","lp","kit","network","amounts","setAmounts","useMemo","web3","eth","Contract","abi","call","useCallback","totalSupply","methods","reserve0","reserve1","getReserves","balance","collateralSize","token0","tokens","map","reserve","mul","div","error","console","log","info","continueButton","AddConfirm","alignItems","flexDirection","width","maxWidth","Table","cursor","gap","mb","justifyContent","tok","index","mr","padding","borderStyle","borderRadius","mt","Number","value","String"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {\n  Button,\n  Card,\n  Flex,\n  Heading,\n  Text,\n} from \"theme-ui\";\nimport { CaretLeft } from \"phosphor-react\";\nimport { useContractKit } from \"@celo-tools/use-contractkit\";\nimport {  RecoilRoot,  atom,  selector,  useSetRecoilState, useRecoilState, useRecoilValue } from 'recoil';\nimport { pageState, Page, poolProps, poolState } from \"src/pages/Farm\";\nimport { BlockText } from \"src/components/BlockText\";\nimport { Token } from \"src/utils/token\";\nimport { lpToken } from \"src/config\";\nimport { TokenAmountInfo } from \"src/components/TokenAmountInfo\";\nimport { farmState } from \"src/pages/Farm/Supply\";\nimport { fromWei, toWei, toBN, AbiItem } from \"web3-utils\";\nimport { TokenSlider } from \"src/components/TokenSlider\";\nimport BANK_ABI from \"src/abis/dahlia_contracts/HomoraBank.json\";\nimport PROXYORACLE_ABI from \"src/abis/dahlia_contracts/ProxyOracle.json\";\nimport COREORACLE_ABI from \"src/abis/dahlia_contracts/CoreOracle.json\";\nimport { HomoraBank } from \"src/generated/HomoraBank\";\nimport { ProxyOracle } from \"src/generated/ProxyOracle\";\nimport { CoreOracle } from \"src/generated/CoreOracle\";\nimport { Bank } from \"src/config\";\nimport { getAddress } from \"ethers/lib/utils\";\nimport { useAsyncState } from \"src/hooks/useAsyncState\";\nimport { humanFriendlyNumber } from \"src/utils/number\";\nimport BN from 'bn.js';\nimport { posPageState, posPage, posPoolState } from \"src/pages/Position\";\nimport { posFarmState } from \"src/pages/Position/Pos\";\nimport { Slider } from \"rsuite\";\nimport UNI_PAIR from \"src/abis/dahlia_contracts/dependencies/ubeswap/ubeswap@mainnet-v1/IUniswapV2Pair.json\"\nimport { IUniswapV2Pair } from \"src/generated/IUniswapV2Pair\";\n\n\n\nexport const Remove: React.FC = () => {\n  const scale = toBN(2).pow(toBN(112)); \n  const [pool] = useRecoilState(posPoolState);\n  const setPage = useSetRecoilState(posPageState)\n  const [farm, setFarm] = useRecoilState(posFarmState);\n  const zeroAdd = \"0x0000000000000000000000000000000000000000\"\n  const [init, setInit] = React.useState(false)\n  const [per, setPer] = React.useState(0); \n\n  const lpTok: Token = new Token({\n    ...lpToken,\n    address: pool.lp,\n  });\n\n  //TODO: fix when reaching borrow limit\n\n  const { kit, network } = useContractKit();\n  const [amounts, setAmounts] = React.useState<(String[] | null)>(null)\n\n  const lp = React.useMemo(() => (new kit.web3.eth.Contract(\n    UNI_PAIR.abi as AbiItem[],\n    pool.lp,\n  ) as unknown) as IUniswapV2Pair, [kit.web3.eth.Contract, pool.lp]); \n\n  const call = React.useCallback(async () => {\n    try {\n        const totalSupply = toBN(await lp.methods.totalSupply().call());\n        let reserve0: BN;\n        let reserve1: BN ; \n        const getReserves = await lp.methods.getReserves().call();\n        const balance = toBN(farm.collateralSize!); \n        if (getAddress(await lp.methods.token0().call()) === getAddress(pool.tokens[0]!.address)) {\n          reserve0 = toBN(getReserves.reserve0);\n          reserve1 = toBN(getReserves.reserve1);\n        } else {\n          reserve0 = toBN(getReserves.reserve1);\n          reserve1 = toBN(getReserves.reserve0);\n        }\n        return [reserve0, reserve1].map((reserve) => reserve.mul(balance).div(totalSupply))\n    } catch (error) {\n        console.log(error)\n    }\n    \n}, [lp, pool.tokens, farm])\n\n  const [info] = useAsyncState(null, call);\n\nconst continueButton = (\n  <Button\n    onClick={() => {\n      setPage(posPage.AddConfirm); \n    }}\n    >\n      Continue\n    </Button>\n)\n\n  return (\n    <Flex sx={{ alignItems: \"center\", flexDirection: \"column\" }}>\n      <Card sx={{ width: \"100%\", maxWidth: \"800px\" }} py={4} px={3}>\n        <Flex\n          onClick={() => {\n            setPage(posPage.Table);\n          }}\n          sx={{ alignItems: \"center\", cursor: \"pointer\" }}\n          mb={4}\n        >\n          <CaretLeft size={28} />\n          <Text>Back</Text>\n        </Flex>\n        <Flex sx={{flexDirection: \"column\", gap: \"25px\", mb: 10}}>\n          <BlockText variant=\"primary\">Your Position Balance</BlockText>\n          <Flex sx={{ justifyContent: \"left\", gap: \"8px\", alignItems: \"center\"}}>\n            {info && pool.tokens.map((tok, index) => \n            <Flex\n            sx={{\n              alignItems: \"center\",\n              mr: 4,\n              padding:2,\n              borderStyle: \"solid\",\n              borderRadius: \"10px\",\n            }}\n          >\n              <TokenAmountInfo key={tok.address} token={tok} amount={fromWei(info![index]!)} />       \n            </Flex>\n          )}\n          </Flex>\n        </Flex>\n        <Flex sx={{mb: 2, mt: \"25px\"}}>\n          <BlockText variant=\"primary\">I'd like to remove</BlockText>\n        </Flex>\n        <Flex sx={{ width: \"100%\", alignItems: \"center\", gap: \"12px\"}}>\n\n          <Slider\n            progress\n            defaultValue={50}\n            style={{width: \"100%\"}}\n            step={.01}\n            max={Number(100)}\n            onChange={(value) => setPer(value)}\n          />\n          <BlockText>{per}%</BlockText>    \n        </Flex> \n        <Flex sx={{flexDirection: \"column\", gap: \"25px\", mb: 10}}>\n          <BlockText variant=\"primary\">You receive</BlockText>\n          <Flex sx={{ justifyContent: \"left\", gap: \"8px\", alignItems: \"center\"}}>\n            {info && pool.tokens.map((tok, index) => \n            <Flex\n            sx={{\n              alignItems: \"center\",\n              mr: 4,\n              padding:2,\n              borderStyle: \"solid\",\n              borderRadius: \"10px\",\n            }}\n          >\n              <TokenAmountInfo key={tok.address} token={tok} amount={String(Number(fromWei(info![index]!)) * (per/100))} />       \n            </Flex>\n          )}\n          </Flex>\n        </Flex>\n        <Flex sx={{ justifyContent: \"center\", mt: 6 }}>\n          {\n          (per === 0) ? (\n            <Button disabled>Enter a valid amount</Button>\n          ) : (\n            continueButton\n          )}\n        </Flex>\n      </Card>\n    </Flex>\n  );\n};"]},"metadata":{},"sourceType":"module"}