{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React from \"react\";\nimport NomMetadata from \"src/abis/nomspace/Nom.json\";\nimport { useContractKit } from \"@celo-tools/use-contractkit\";\nimport { ethers } from \"ethers\";\nimport { NOM } from \"src/config\";\nimport { useAsyncState } from \"./useAsyncState\";\nimport { formatName } from \"src/utils/name\";\nexport const useNom = name => {\n  _s();\n\n  const {\n    kit,\n    network\n  } = useContractKit();\n  const nameFormatted = formatName(name);\n  const call = React.useCallback(async () => {\n    const nom = new kit.web3.eth.Contract(NomMetadata.abi, NOM[network.chainId]);\n    const resolution = await nom.methods.resolve(ethers.utils.formatBytes32String(nameFormatted)).call();\n    const owner = await nom.methods.nameOwner(ethers.utils.formatBytes32String(nameFormatted)).call();\n    const expiration = await nom.methods.expirations(ethers.utils.formatBytes32String(nameFormatted)).call();\n    return {\n      resolution,\n      owner,\n      expiration\n    };\n  }, [kit, network, nameFormatted]);\n  return useAsyncState(null, call);\n};\n\n_s(useNom, \"LdRv2LEe0WnEXggaFsbQXKVwCV8=\", false, function () {\n  return [useContractKit, useAsyncState];\n});","map":{"version":3,"sources":["/Users/kylescott/src/nomspace-interface/src/hooks/useNom.ts"],"names":["React","NomMetadata","useContractKit","ethers","NOM","useAsyncState","formatName","useNom","name","kit","network","nameFormatted","call","useCallback","nom","web3","eth","Contract","abi","chainId","resolution","methods","resolve","utils","formatBytes32String","owner","nameOwner","expiration","expirations"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,4BAAxB;AAEA,SAASC,cAAT,QAA+B,6BAA/B;AACA,SAASC,MAAT,QAAuB,QAAvB;AACA,SAASC,GAAT,QAAoB,YAApB;AAEA,SAASC,aAAT,QAA8B,iBAA9B;AACA,SAASC,UAAT,QAA2B,gBAA3B;AAEA,OAAO,MAAMC,MAAM,GAAIC,IAAD,IAAkB;AAAA;;AACtC,QAAM;AAAEC,IAAAA,GAAF;AAAOC,IAAAA;AAAP,MAAmBR,cAAc,EAAvC;AACA,QAAMS,aAAa,GAAGL,UAAU,CAACE,IAAD,CAAhC;AAEA,QAAMI,IAAI,GAAGZ,KAAK,CAACa,WAAN,CAAkB,YAAY;AACzC,UAAMC,GAAG,GAAG,IAAIL,GAAG,CAACM,IAAJ,CAASC,GAAT,CAAaC,QAAjB,CACVhB,WAAW,CAACiB,GADF,EAEVd,GAAG,CAACM,OAAO,CAACS,OAAT,CAFO,CAAZ;AAKA,UAAMC,UAAU,GAAG,MAAMN,GAAG,CAACO,OAAJ,CACtBC,OADsB,CACdnB,MAAM,CAACoB,KAAP,CAAaC,mBAAb,CAAiCb,aAAjC,CADc,EAEtBC,IAFsB,EAAzB;AAIA,UAAMa,KAAK,GAAG,MAAMX,GAAG,CAACO,OAAJ,CACjBK,SADiB,CACPvB,MAAM,CAACoB,KAAP,CAAaC,mBAAb,CAAiCb,aAAjC,CADO,EAEjBC,IAFiB,EAApB;AAIA,UAAMe,UAAU,GAAG,MAAMb,GAAG,CAACO,OAAJ,CACtBO,WADsB,CACVzB,MAAM,CAACoB,KAAP,CAAaC,mBAAb,CAAiCb,aAAjC,CADU,EAEtBC,IAFsB,EAAzB;AAIA,WAAO;AAAEQ,MAAAA,UAAF;AAAcK,MAAAA,KAAd;AAAqBE,MAAAA;AAArB,KAAP;AACD,GAnBY,EAmBV,CAAClB,GAAD,EAAMC,OAAN,EAAeC,aAAf,CAnBU,CAAb;AAqBA,SAAON,aAAa,CAAC,IAAD,EAAOO,IAAP,CAApB;AACD,CA1BM;;GAAML,M;UACcL,c,EAwBlBG,a","sourcesContent":["import React from \"react\";\nimport NomMetadata from \"src/abis/nomspace/Nom.json\";\nimport { Nom } from \"src/generated/Nom\";\nimport { useContractKit } from \"@celo-tools/use-contractkit\";\nimport { ethers } from \"ethers\";\nimport { NOM } from \"src/config\";\nimport { AbiItem } from \"web3-utils\";\nimport { useAsyncState } from \"./useAsyncState\";\nimport { formatName } from \"src/utils/name\";\n\nexport const useNom = (name: string) => {\n  const { kit, network } = useContractKit();\n  const nameFormatted = formatName(name);\n\n  const call = React.useCallback(async () => {\n    const nom = new kit.web3.eth.Contract(\n      NomMetadata.abi as AbiItem[],\n      NOM[network.chainId]\n    ) as unknown as Nom;\n\n    const resolution = await nom.methods\n      .resolve(ethers.utils.formatBytes32String(nameFormatted))\n      .call();\n\n    const owner = await nom.methods\n      .nameOwner(ethers.utils.formatBytes32String(nameFormatted))\n      .call();\n\n    const expiration = await nom.methods\n      .expirations(ethers.utils.formatBytes32String(nameFormatted))\n      .call();\n\n    return { resolution, owner, expiration };\n  }, [kit, network, nameFormatted]);\n\n  return useAsyncState(null, call);\n};\n"]},"metadata":{},"sourceType":"module"}