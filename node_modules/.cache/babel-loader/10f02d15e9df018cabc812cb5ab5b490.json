{"ast":null,"code":"/**\n * Allows for nested scales with shorthand values\n * @example\n * {\n *   colors: {\n *     primary: { __default: '#00f', light: '#33f' }\n *   }\n * }\n * css({ color: 'primary' }); // { color: '#00f' }\n * css({ color: 'primary.light' }) // { color: '#33f' }\n */\nconst THEME_UI_DEFAULT_KEY = '__default';\n\nconst hasDefault = x => {\n  return typeof x === 'object' && x !== null && THEME_UI_DEFAULT_KEY in x;\n};\n/**\n * Extracts value under path from a deeply nested object.\n * Used for Themes, variants and Theme UI style objects.\n * Given a path to object with `__default` key, returns the value under that key.\n *\n * @param obj a theme, variant or style object\n * @param path path separated with dots (`.`)\n * @param fallback default value returned if get(obj, path) is not found\n */\n\n\nfunction get(obj, path, fallback, p, undef) {\n  const pathArray = path && typeof path === 'string' ? path.split('.') : [path];\n\n  for (p = 0; p < pathArray.length; p++) {\n    obj = obj ? obj[pathArray[p]] : undef;\n  }\n\n  if (obj === undef) return fallback;\n  return hasDefault(obj) ? obj[THEME_UI_DEFAULT_KEY] : obj;\n}\n\nconst getObjectWithVariants = (obj, theme) => {\n  if (obj && obj['variant']) {\n    let result = {};\n\n    for (const key in obj) {\n      const x = obj[key];\n\n      if (key === 'variant') {\n        const val = typeof x === 'function' ? x(theme) : x;\n        const variant = getObjectWithVariants(get(theme, val), theme);\n        result = { ...result,\n          ...variant\n        };\n      } else {\n        result[key] = x;\n      }\n    }\n\n    return result;\n  }\n\n  return obj;\n};\n\nconst defaultBreakpoints = [40, 52, 64].map(n => n + 'em');\nconst defaultTheme = {\n  space: [0, 4, 8, 16, 32, 64, 128, 256, 512],\n  fontSizes: [12, 14, 16, 20, 24, 32, 48, 64, 72]\n};\nconst aliases = {\n  bg: 'backgroundColor',\n  m: 'margin',\n  mt: 'marginTop',\n  mr: 'marginRight',\n  mb: 'marginBottom',\n  ml: 'marginLeft',\n  mx: 'marginX',\n  my: 'marginY',\n  p: 'padding',\n  pt: 'paddingTop',\n  pr: 'paddingRight',\n  pb: 'paddingBottom',\n  pl: 'paddingLeft',\n  px: 'paddingX',\n  py: 'paddingY'\n};\nconst multiples = {\n  marginX: ['marginLeft', 'marginRight'],\n  marginY: ['marginTop', 'marginBottom'],\n  paddingX: ['paddingLeft', 'paddingRight'],\n  paddingY: ['paddingTop', 'paddingBottom'],\n  scrollMarginX: ['scrollMarginLeft', 'scrollMarginRight'],\n  scrollMarginY: ['scrollMarginTop', 'scrollMarginBottom'],\n  scrollPaddingX: ['scrollPaddingLeft', 'scrollPaddingRight'],\n  scrollPaddingY: ['scrollPaddingTop', 'scrollPaddingBottom'],\n  size: ['width', 'height']\n};\nconst scales = {\n  color: 'colors',\n  backgroundColor: 'colors',\n  borderColor: 'colors',\n  caretColor: 'colors',\n  columnRuleColor: 'colors',\n  textDecorationColor: 'colors',\n  opacity: 'opacities',\n  transition: 'transitions',\n  margin: 'space',\n  marginTop: 'space',\n  marginRight: 'space',\n  marginBottom: 'space',\n  marginLeft: 'space',\n  marginX: 'space',\n  marginY: 'space',\n  marginBlock: 'space',\n  marginBlockEnd: 'space',\n  marginBlockStart: 'space',\n  marginInline: 'space',\n  marginInlineEnd: 'space',\n  marginInlineStart: 'space',\n  padding: 'space',\n  paddingTop: 'space',\n  paddingRight: 'space',\n  paddingBottom: 'space',\n  paddingLeft: 'space',\n  paddingX: 'space',\n  paddingY: 'space',\n  paddingBlock: 'space',\n  paddingBlockEnd: 'space',\n  paddingBlockStart: 'space',\n  paddingInline: 'space',\n  paddingInlineEnd: 'space',\n  paddingInlineStart: 'space',\n  scrollMargin: 'space',\n  scrollMarginTop: 'space',\n  scrollMarginRight: 'space',\n  scrollMarginBottom: 'space',\n  scrollMarginLeft: 'space',\n  scrollMarginX: 'space',\n  scrollMarginY: 'space',\n  scrollPadding: 'space',\n  scrollPaddingTop: 'space',\n  scrollPaddingRight: 'space',\n  scrollPaddingBottom: 'space',\n  scrollPaddingLeft: 'space',\n  scrollPaddingX: 'space',\n  scrollPaddingY: 'space',\n  inset: 'space',\n  insetBlock: 'space',\n  insetBlockEnd: 'space',\n  insetBlockStart: 'space',\n  insetInline: 'space',\n  insetInlineEnd: 'space',\n  insetInlineStart: 'space',\n  top: 'space',\n  right: 'space',\n  bottom: 'space',\n  left: 'space',\n  gridGap: 'space',\n  gridColumnGap: 'space',\n  gridRowGap: 'space',\n  gap: 'space',\n  columnGap: 'space',\n  rowGap: 'space',\n  fontFamily: 'fonts',\n  fontSize: 'fontSizes',\n  fontWeight: 'fontWeights',\n  lineHeight: 'lineHeights',\n  letterSpacing: 'letterSpacings',\n  border: 'borders',\n  borderTop: 'borders',\n  borderRight: 'borders',\n  borderBottom: 'borders',\n  borderLeft: 'borders',\n  borderWidth: 'borderWidths',\n  borderStyle: 'borderStyles',\n  borderRadius: 'radii',\n  borderTopRightRadius: 'radii',\n  borderTopLeftRadius: 'radii',\n  borderBottomRightRadius: 'radii',\n  borderBottomLeftRadius: 'radii',\n  borderTopWidth: 'borderWidths',\n  borderTopColor: 'colors',\n  borderTopStyle: 'borderStyles',\n  borderBottomWidth: 'borderWidths',\n  borderBottomColor: 'colors',\n  borderBottomStyle: 'borderStyles',\n  borderLeftWidth: 'borderWidths',\n  borderLeftColor: 'colors',\n  borderLeftStyle: 'borderStyles',\n  borderRightWidth: 'borderWidths',\n  borderRightColor: 'colors',\n  borderRightStyle: 'borderStyles',\n  borderBlock: 'borders',\n  borderBlockColor: 'colors',\n  borderBlockEnd: 'borders',\n  borderBlockEndColor: 'colors',\n  borderBlockEndStyle: 'borderStyles',\n  borderBlockEndWidth: 'borderWidths',\n  borderBlockStart: 'borders',\n  borderBlockStartColor: 'colors',\n  borderBlockStartStyle: 'borderStyles',\n  borderBlockStartWidth: 'borderWidths',\n  borderBlockStyle: 'borderStyles',\n  borderBlockWidth: 'borderWidths',\n  borderEndEndRadius: 'radii',\n  borderEndStartRadius: 'radii',\n  borderInline: 'borders',\n  borderInlineColor: 'colors',\n  borderInlineEnd: 'borders',\n  borderInlineEndColor: 'colors',\n  borderInlineEndStyle: 'borderStyles',\n  borderInlineEndWidth: 'borderWidths',\n  borderInlineStart: 'borders',\n  borderInlineStartColor: 'colors',\n  borderInlineStartStyle: 'borderStyles',\n  borderInlineStartWidth: 'borderWidths',\n  borderInlineStyle: 'borderStyles',\n  borderInlineWidth: 'borderWidths',\n  borderStartEndRadius: 'radii',\n  borderStartStartRadius: 'radii',\n  columnRuleWidth: 'borderWidths',\n  outlineColor: 'colors',\n  boxShadow: 'shadows',\n  textShadow: 'shadows',\n  zIndex: 'zIndices',\n  width: 'sizes',\n  minWidth: 'sizes',\n  maxWidth: 'sizes',\n  height: 'sizes',\n  minHeight: 'sizes',\n  maxHeight: 'sizes',\n  flexBasis: 'sizes',\n  size: 'sizes',\n  blockSize: 'sizes',\n  inlineSize: 'sizes',\n  maxBlockSize: 'sizes',\n  maxInlineSize: 'sizes',\n  minBlockSize: 'sizes',\n  minInlineSize: 'sizes',\n  columnWidth: 'sizes',\n  // svg\n  fill: 'colors',\n  stroke: 'colors'\n};\n\nconst positiveOrNegative = (scale, value) => {\n  if (typeof value !== 'number' || value >= 0) {\n    if (typeof value === 'string' && value.startsWith('-')) {\n      const valueWithoutMinus = value.substring(1);\n      const n = get(scale, valueWithoutMinus, valueWithoutMinus);\n\n      if (typeof n === 'number') {\n        return n * -1;\n      }\n\n      return `-${n}`;\n    }\n\n    return get(scale, value, value);\n  }\n\n  const absolute = Math.abs(value);\n  const n = get(scale, absolute, absolute);\n  if (typeof n === 'string') return '-' + n;\n  return Number(n) * -1;\n};\n\nconst transforms = ['margin', 'marginTop', 'marginRight', 'marginBottom', 'marginLeft', 'marginX', 'marginY', 'marginBlock', 'marginBlockEnd', 'marginBlockStart', 'marginInline', 'marginInlineEnd', 'marginInlineStart', 'top', 'bottom', 'left', 'right'].reduce((acc, curr) => ({ ...acc,\n  [curr]: positiveOrNegative\n}), {});\n\nconst responsive = styles => theme => {\n  const next = {};\n  const breakpoints = theme && theme.breakpoints || defaultBreakpoints;\n  const mediaQueries = [null, ...breakpoints.map(n => n.includes('@media') ? n : `@media screen and (min-width: ${n})`)];\n\n  for (const k in styles) {\n    const key = k;\n    let value = styles[key];\n\n    if (typeof value === 'function') {\n      value = value(theme || {});\n    }\n\n    if (value === false || value == null) {\n      continue;\n    }\n\n    if (!Array.isArray(value)) {\n      next[key] = value;\n      continue;\n    }\n\n    for (let i = 0; i < value.slice(0, mediaQueries.length).length; i++) {\n      const media = mediaQueries[i];\n\n      if (!media) {\n        next[key] = value[i];\n        continue;\n      }\n\n      next[media] = next[media] || {};\n      if (value[i] == null) continue;\n      next[media][key] = value[i];\n    }\n  }\n\n  return next;\n};\n\nconst css = (args = {}) => (props = {}) => {\n  const theme = { ...defaultTheme,\n    ...('theme' in props ? props.theme : props)\n  }; // insert variant props before responsive styles, so they can be merged\n  // we need to maintain order of the style props, so if a variant is place in the middle\n  // of other props, it will extends its props at that same location order.\n\n  const obj = getObjectWithVariants(typeof args === 'function' ? args(theme) : args, theme);\n  const styles = responsive(obj)(theme);\n  let result = {};\n\n  for (const key in styles) {\n    const x = styles[key];\n    const val = typeof x === 'function' ? x(theme) : x;\n\n    if (val && typeof val === 'object') {\n      if (hasDefault(val)) {\n        result[key] = val[THEME_UI_DEFAULT_KEY];\n        continue;\n      } // On type level, val can also be an array here,\n      // but we transform all arrays in `responsive` function.\n\n\n      result[key] = css(val)(theme);\n      continue;\n    }\n\n    const prop = key in aliases ? aliases[key] : key;\n    const scaleName = prop in scales ? scales[prop] : undefined;\n    const scale = scaleName ? theme == null ? void 0 : theme[scaleName] : get(theme, prop, {});\n    const transform = get(transforms, prop, get);\n    const value = transform(scale, val, val);\n\n    if (prop in multiples) {\n      const dirs = multiples[prop];\n\n      for (let i = 0; i < dirs.length; i++) {\n        result[dirs[i]] = value;\n      }\n    } else {\n      result[prop] = value;\n    }\n  }\n\n  return result;\n};\n\nexport { THEME_UI_DEFAULT_KEY, css, defaultBreakpoints, get, getObjectWithVariants, multiples, scales };","map":{"version":3,"sources":["/Users/kylescott/src/dahlia-interface/node_modules/@theme-ui/css/dist/theme-ui-css.esm.js"],"names":["THEME_UI_DEFAULT_KEY","hasDefault","x","get","obj","path","fallback","p","undef","pathArray","split","length","getObjectWithVariants","theme","result","key","val","variant","defaultBreakpoints","map","n","defaultTheme","space","fontSizes","aliases","bg","m","mt","mr","mb","ml","mx","my","pt","pr","pb","pl","px","py","multiples","marginX","marginY","paddingX","paddingY","scrollMarginX","scrollMarginY","scrollPaddingX","scrollPaddingY","size","scales","color","backgroundColor","borderColor","caretColor","columnRuleColor","textDecorationColor","opacity","transition","margin","marginTop","marginRight","marginBottom","marginLeft","marginBlock","marginBlockEnd","marginBlockStart","marginInline","marginInlineEnd","marginInlineStart","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","paddingBlock","paddingBlockEnd","paddingBlockStart","paddingInline","paddingInlineEnd","paddingInlineStart","scrollMargin","scrollMarginTop","scrollMarginRight","scrollMarginBottom","scrollMarginLeft","scrollPadding","scrollPaddingTop","scrollPaddingRight","scrollPaddingBottom","scrollPaddingLeft","inset","insetBlock","insetBlockEnd","insetBlockStart","insetInline","insetInlineEnd","insetInlineStart","top","right","bottom","left","gridGap","gridColumnGap","gridRowGap","gap","columnGap","rowGap","fontFamily","fontSize","fontWeight","lineHeight","letterSpacing","border","borderTop","borderRight","borderBottom","borderLeft","borderWidth","borderStyle","borderRadius","borderTopRightRadius","borderTopLeftRadius","borderBottomRightRadius","borderBottomLeftRadius","borderTopWidth","borderTopColor","borderTopStyle","borderBottomWidth","borderBottomColor","borderBottomStyle","borderLeftWidth","borderLeftColor","borderLeftStyle","borderRightWidth","borderRightColor","borderRightStyle","borderBlock","borderBlockColor","borderBlockEnd","borderBlockEndColor","borderBlockEndStyle","borderBlockEndWidth","borderBlockStart","borderBlockStartColor","borderBlockStartStyle","borderBlockStartWidth","borderBlockStyle","borderBlockWidth","borderEndEndRadius","borderEndStartRadius","borderInline","borderInlineColor","borderInlineEnd","borderInlineEndColor","borderInlineEndStyle","borderInlineEndWidth","borderInlineStart","borderInlineStartColor","borderInlineStartStyle","borderInlineStartWidth","borderInlineStyle","borderInlineWidth","borderStartEndRadius","borderStartStartRadius","columnRuleWidth","outlineColor","boxShadow","textShadow","zIndex","width","minWidth","maxWidth","height","minHeight","maxHeight","flexBasis","blockSize","inlineSize","maxBlockSize","maxInlineSize","minBlockSize","minInlineSize","columnWidth","fill","stroke","positiveOrNegative","scale","value","startsWith","valueWithoutMinus","substring","absolute","Math","abs","Number","transforms","reduce","acc","curr","responsive","styles","next","breakpoints","mediaQueries","includes","k","Array","isArray","i","slice","media","css","args","props","prop","scaleName","undefined","transform","dirs"],"mappings":"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","sourcesContent":["/**\n * Allows for nested scales with shorthand values\n * @example\n * {\n *   colors: {\n *     primary: { __default: '#00f', light: '#33f' }\n *   }\n * }\n * css({ color: 'primary' }); // { color: '#00f' }\n * css({ color: 'primary.light' }) // { color: '#33f' }\n */\n\nconst THEME_UI_DEFAULT_KEY = '__default';\n\nconst hasDefault = x => {\n  return typeof x === 'object' && x !== null && THEME_UI_DEFAULT_KEY in x;\n};\n/**\n * Extracts value under path from a deeply nested object.\n * Used for Themes, variants and Theme UI style objects.\n * Given a path to object with `__default` key, returns the value under that key.\n *\n * @param obj a theme, variant or style object\n * @param path path separated with dots (`.`)\n * @param fallback default value returned if get(obj, path) is not found\n */\n\n\nfunction get(obj, path, fallback, p, undef) {\n  const pathArray = path && typeof path === 'string' ? path.split('.') : [path];\n\n  for (p = 0; p < pathArray.length; p++) {\n    obj = obj ? obj[pathArray[p]] : undef;\n  }\n\n  if (obj === undef) return fallback;\n  return hasDefault(obj) ? obj[THEME_UI_DEFAULT_KEY] : obj;\n}\nconst getObjectWithVariants = (obj, theme) => {\n  if (obj && obj['variant']) {\n    let result = {};\n\n    for (const key in obj) {\n      const x = obj[key];\n\n      if (key === 'variant') {\n        const val = typeof x === 'function' ? x(theme) : x;\n        const variant = getObjectWithVariants(get(theme, val), theme);\n        result = { ...result,\n          ...variant\n        };\n      } else {\n        result[key] = x;\n      }\n    }\n\n    return result;\n  }\n\n  return obj;\n};\nconst defaultBreakpoints = [40, 52, 64].map(n => n + 'em');\nconst defaultTheme = {\n  space: [0, 4, 8, 16, 32, 64, 128, 256, 512],\n  fontSizes: [12, 14, 16, 20, 24, 32, 48, 64, 72]\n};\nconst aliases = {\n  bg: 'backgroundColor',\n  m: 'margin',\n  mt: 'marginTop',\n  mr: 'marginRight',\n  mb: 'marginBottom',\n  ml: 'marginLeft',\n  mx: 'marginX',\n  my: 'marginY',\n  p: 'padding',\n  pt: 'paddingTop',\n  pr: 'paddingRight',\n  pb: 'paddingBottom',\n  pl: 'paddingLeft',\n  px: 'paddingX',\n  py: 'paddingY'\n};\nconst multiples = {\n  marginX: ['marginLeft', 'marginRight'],\n  marginY: ['marginTop', 'marginBottom'],\n  paddingX: ['paddingLeft', 'paddingRight'],\n  paddingY: ['paddingTop', 'paddingBottom'],\n  scrollMarginX: ['scrollMarginLeft', 'scrollMarginRight'],\n  scrollMarginY: ['scrollMarginTop', 'scrollMarginBottom'],\n  scrollPaddingX: ['scrollPaddingLeft', 'scrollPaddingRight'],\n  scrollPaddingY: ['scrollPaddingTop', 'scrollPaddingBottom'],\n  size: ['width', 'height']\n};\nconst scales = {\n  color: 'colors',\n  backgroundColor: 'colors',\n  borderColor: 'colors',\n  caretColor: 'colors',\n  columnRuleColor: 'colors',\n  textDecorationColor: 'colors',\n  opacity: 'opacities',\n  transition: 'transitions',\n  margin: 'space',\n  marginTop: 'space',\n  marginRight: 'space',\n  marginBottom: 'space',\n  marginLeft: 'space',\n  marginX: 'space',\n  marginY: 'space',\n  marginBlock: 'space',\n  marginBlockEnd: 'space',\n  marginBlockStart: 'space',\n  marginInline: 'space',\n  marginInlineEnd: 'space',\n  marginInlineStart: 'space',\n  padding: 'space',\n  paddingTop: 'space',\n  paddingRight: 'space',\n  paddingBottom: 'space',\n  paddingLeft: 'space',\n  paddingX: 'space',\n  paddingY: 'space',\n  paddingBlock: 'space',\n  paddingBlockEnd: 'space',\n  paddingBlockStart: 'space',\n  paddingInline: 'space',\n  paddingInlineEnd: 'space',\n  paddingInlineStart: 'space',\n  scrollMargin: 'space',\n  scrollMarginTop: 'space',\n  scrollMarginRight: 'space',\n  scrollMarginBottom: 'space',\n  scrollMarginLeft: 'space',\n  scrollMarginX: 'space',\n  scrollMarginY: 'space',\n  scrollPadding: 'space',\n  scrollPaddingTop: 'space',\n  scrollPaddingRight: 'space',\n  scrollPaddingBottom: 'space',\n  scrollPaddingLeft: 'space',\n  scrollPaddingX: 'space',\n  scrollPaddingY: 'space',\n  inset: 'space',\n  insetBlock: 'space',\n  insetBlockEnd: 'space',\n  insetBlockStart: 'space',\n  insetInline: 'space',\n  insetInlineEnd: 'space',\n  insetInlineStart: 'space',\n  top: 'space',\n  right: 'space',\n  bottom: 'space',\n  left: 'space',\n  gridGap: 'space',\n  gridColumnGap: 'space',\n  gridRowGap: 'space',\n  gap: 'space',\n  columnGap: 'space',\n  rowGap: 'space',\n  fontFamily: 'fonts',\n  fontSize: 'fontSizes',\n  fontWeight: 'fontWeights',\n  lineHeight: 'lineHeights',\n  letterSpacing: 'letterSpacings',\n  border: 'borders',\n  borderTop: 'borders',\n  borderRight: 'borders',\n  borderBottom: 'borders',\n  borderLeft: 'borders',\n  borderWidth: 'borderWidths',\n  borderStyle: 'borderStyles',\n  borderRadius: 'radii',\n  borderTopRightRadius: 'radii',\n  borderTopLeftRadius: 'radii',\n  borderBottomRightRadius: 'radii',\n  borderBottomLeftRadius: 'radii',\n  borderTopWidth: 'borderWidths',\n  borderTopColor: 'colors',\n  borderTopStyle: 'borderStyles',\n  borderBottomWidth: 'borderWidths',\n  borderBottomColor: 'colors',\n  borderBottomStyle: 'borderStyles',\n  borderLeftWidth: 'borderWidths',\n  borderLeftColor: 'colors',\n  borderLeftStyle: 'borderStyles',\n  borderRightWidth: 'borderWidths',\n  borderRightColor: 'colors',\n  borderRightStyle: 'borderStyles',\n  borderBlock: 'borders',\n  borderBlockColor: 'colors',\n  borderBlockEnd: 'borders',\n  borderBlockEndColor: 'colors',\n  borderBlockEndStyle: 'borderStyles',\n  borderBlockEndWidth: 'borderWidths',\n  borderBlockStart: 'borders',\n  borderBlockStartColor: 'colors',\n  borderBlockStartStyle: 'borderStyles',\n  borderBlockStartWidth: 'borderWidths',\n  borderBlockStyle: 'borderStyles',\n  borderBlockWidth: 'borderWidths',\n  borderEndEndRadius: 'radii',\n  borderEndStartRadius: 'radii',\n  borderInline: 'borders',\n  borderInlineColor: 'colors',\n  borderInlineEnd: 'borders',\n  borderInlineEndColor: 'colors',\n  borderInlineEndStyle: 'borderStyles',\n  borderInlineEndWidth: 'borderWidths',\n  borderInlineStart: 'borders',\n  borderInlineStartColor: 'colors',\n  borderInlineStartStyle: 'borderStyles',\n  borderInlineStartWidth: 'borderWidths',\n  borderInlineStyle: 'borderStyles',\n  borderInlineWidth: 'borderWidths',\n  borderStartEndRadius: 'radii',\n  borderStartStartRadius: 'radii',\n  columnRuleWidth: 'borderWidths',\n  outlineColor: 'colors',\n  boxShadow: 'shadows',\n  textShadow: 'shadows',\n  zIndex: 'zIndices',\n  width: 'sizes',\n  minWidth: 'sizes',\n  maxWidth: 'sizes',\n  height: 'sizes',\n  minHeight: 'sizes',\n  maxHeight: 'sizes',\n  flexBasis: 'sizes',\n  size: 'sizes',\n  blockSize: 'sizes',\n  inlineSize: 'sizes',\n  maxBlockSize: 'sizes',\n  maxInlineSize: 'sizes',\n  minBlockSize: 'sizes',\n  minInlineSize: 'sizes',\n  columnWidth: 'sizes',\n  // svg\n  fill: 'colors',\n  stroke: 'colors'\n};\n\nconst positiveOrNegative = (scale, value) => {\n  if (typeof value !== 'number' || value >= 0) {\n    if (typeof value === 'string' && value.startsWith('-')) {\n      const valueWithoutMinus = value.substring(1);\n      const n = get(scale, valueWithoutMinus, valueWithoutMinus);\n\n      if (typeof n === 'number') {\n        return n * -1;\n      }\n\n      return `-${n}`;\n    }\n\n    return get(scale, value, value);\n  }\n\n  const absolute = Math.abs(value);\n  const n = get(scale, absolute, absolute);\n  if (typeof n === 'string') return '-' + n;\n  return Number(n) * -1;\n};\n\nconst transforms = ['margin', 'marginTop', 'marginRight', 'marginBottom', 'marginLeft', 'marginX', 'marginY', 'marginBlock', 'marginBlockEnd', 'marginBlockStart', 'marginInline', 'marginInlineEnd', 'marginInlineStart', 'top', 'bottom', 'left', 'right'].reduce((acc, curr) => ({ ...acc,\n  [curr]: positiveOrNegative\n}), {});\n\nconst responsive = styles => theme => {\n  const next = {};\n  const breakpoints = theme && theme.breakpoints || defaultBreakpoints;\n  const mediaQueries = [null, ...breakpoints.map(n => n.includes('@media') ? n : `@media screen and (min-width: ${n})`)];\n\n  for (const k in styles) {\n    const key = k;\n    let value = styles[key];\n\n    if (typeof value === 'function') {\n      value = value(theme || {});\n    }\n\n    if (value === false || value == null) {\n      continue;\n    }\n\n    if (!Array.isArray(value)) {\n      next[key] = value;\n      continue;\n    }\n\n    for (let i = 0; i < value.slice(0, mediaQueries.length).length; i++) {\n      const media = mediaQueries[i];\n\n      if (!media) {\n        next[key] = value[i];\n        continue;\n      }\n\n      next[media] = next[media] || {};\n      if (value[i] == null) continue;\n      next[media][key] = value[i];\n    }\n  }\n\n  return next;\n};\n\nconst css = (args = {}) => (props = {}) => {\n  const theme = { ...defaultTheme,\n    ...('theme' in props ? props.theme : props)\n  }; // insert variant props before responsive styles, so they can be merged\n  // we need to maintain order of the style props, so if a variant is place in the middle\n  // of other props, it will extends its props at that same location order.\n\n  const obj = getObjectWithVariants(typeof args === 'function' ? args(theme) : args, theme);\n  const styles = responsive(obj)(theme);\n  let result = {};\n\n  for (const key in styles) {\n    const x = styles[key];\n    const val = typeof x === 'function' ? x(theme) : x;\n\n    if (val && typeof val === 'object') {\n      if (hasDefault(val)) {\n        result[key] = val[THEME_UI_DEFAULT_KEY];\n        continue;\n      } // On type level, val can also be an array here,\n      // but we transform all arrays in `responsive` function.\n\n\n      result[key] = css(val)(theme);\n      continue;\n    }\n\n    const prop = key in aliases ? aliases[key] : key;\n    const scaleName = prop in scales ? scales[prop] : undefined;\n    const scale = scaleName ? theme == null ? void 0 : theme[scaleName] : get(theme, prop, {});\n    const transform = get(transforms, prop, get);\n    const value = transform(scale, val, val);\n\n    if (prop in multiples) {\n      const dirs = multiples[prop];\n\n      for (let i = 0; i < dirs.length; i++) {\n        result[dirs[i]] = value;\n      }\n    } else {\n      result[prop] = value;\n    }\n  }\n\n  return result;\n};\n\nexport { THEME_UI_DEFAULT_KEY, css, defaultBreakpoints, get, getObjectWithVariants, multiples, scales };\n"]},"metadata":{},"sourceType":"module"}