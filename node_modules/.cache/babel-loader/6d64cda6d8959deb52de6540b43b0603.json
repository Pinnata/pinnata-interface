{"ast":null,"code":"var _jsxFileName = \"/Users/kylescott/src/dahlia-interface/src/pages/Position/Add/add.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { atom, useSetRecoilState, useRecoilState } from 'recoil';\nimport { getToken } from \"src/utils/token\";\nimport { useParams } from \"react-router-dom\";\nimport { poolState } from \"src/pages/Farm/newFarm/NewFarm\";\nimport { Supply } from \"src/pages/Position/Add/supply\";\nimport { Borrow } from \"src/pages/Position/Add/borrow\";\nimport { Confirm } from \"src/pages/Position/Add/confirm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport let addPage;\n\n(function (addPage) {\n  addPage[addPage[\"Supply\"] = 0] = \"Supply\";\n  addPage[addPage[\"Borrow\"] = 1] = \"Borrow\";\n  addPage[addPage[\"Confirm\"] = 2] = \"Confirm\";\n})(addPage || (addPage = {}));\n\nexport const addPageState = atom({\n  key: 'addPageState',\n  default: addPage.Supply\n});\nexport const emptyPositionState = {\n  positionId: null,\n  collateralSize: null,\n  collId: null\n};\nexport const addPositionState = atom({\n  key: 'addPositionState',\n  default: emptyPositionState\n});\nexport const Add = () => {\n  _s();\n\n  const {\n    positionId,\n    collId,\n    collateralSize,\n    name,\n    wrapper,\n    spell,\n    lp,\n    tokens\n  } = useParams();\n  const setPool = useSetRecoilState(poolState);\n  const setPosition = useSetRecoilState(addPositionState);\n  const set = {\n    name: name,\n    wrapper: wrapper,\n    spell: spell,\n    lp: lp,\n    tokens: tokens.split(',').map(x => getToken(x))\n  };\n  setPool(set);\n  setPosition({\n    positionId,\n    collateralSize,\n    collId\n  });\n  const [page] = useRecoilState(addPageState);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: page === addPage.Supply ? /*#__PURE__*/_jsxDEV(Supply, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this) : page === addPage.Borrow ? /*#__PURE__*/_jsxDEV(Borrow, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this) : /*#__PURE__*/_jsxDEV(Confirm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Add, \"X1DDld5os19UeWmacPKhBVcZ1fM=\", false, function () {\n  return [useParams, useSetRecoilState, useSetRecoilState, useRecoilState];\n});\n\n_c = Add;\n\nvar _c;\n\n$RefreshReg$(_c, \"Add\");","map":{"version":3,"sources":["/Users/kylescott/src/dahlia-interface/src/pages/Position/Add/add.tsx"],"names":["React","atom","useSetRecoilState","useRecoilState","getToken","useParams","poolState","Supply","Borrow","Confirm","addPage","addPageState","key","default","emptyPositionState","positionId","collateralSize","collId","addPositionState","Add","name","wrapper","spell","lp","tokens","setPool","setPosition","set","split","map","x","page"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,iBAAf,EAAkCC,cAAlC,QAAwD,QAAxD;AACA,SAASC,QAAT,QAAyB,iBAAzB;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,SAASC,SAAT,QAAqC,gCAArC;AACA,SAASC,MAAT,QAAuB,+BAAvB;AACA,SAASC,MAAT,QAAuB,+BAAvB;AACA,SAASC,OAAT,QAAwB,gCAAxB;;AAGA,WAAYC,OAAZ;;WAAYA,O;AAAAA,EAAAA,O,CAAAA,O;AAAAA,EAAAA,O,CAAAA,O;AAAAA,EAAAA,O,CAAAA,O;GAAAA,O,KAAAA,O;;AAMZ,OAAO,MAAMC,YAAY,GAAGV,IAAI,CAAC;AAC7BW,EAAAA,GAAG,EAAE,cADwB;AAE7BC,EAAAA,OAAO,EAAEH,OAAO,CAACH;AAFY,CAAD,CAAzB;AAWP,OAAO,MAAMO,kBAAkC,GAAG;AAChDC,EAAAA,UAAU,EAAE,IADoC;AAEhDC,EAAAA,cAAc,EAAE,IAFgC;AAGhDC,EAAAA,MAAM,EAAE;AAHwC,CAA3C;AAMP,OAAO,MAAMC,gBAAgB,GAAGjB,IAAI,CAAC;AACnCW,EAAAA,GAAG,EAAE,kBAD8B;AAEnCC,EAAAA,OAAO,EAAEC;AAF0B,CAAD,CAA7B;AAKP,OAAO,MAAMK,GAAa,GAAG,MAAM;AAAA;;AACjC,QAAM;AAAEJ,IAAAA,UAAF;AAAcE,IAAAA,MAAd;AAAsBD,IAAAA,cAAtB;AAAsCI,IAAAA,IAAtC;AAA4CC,IAAAA,OAA5C;AAAqDC,IAAAA,KAArD;AAA4DC,IAAAA,EAA5D;AAAgEC,IAAAA;AAAhE,MAA2EnB,SAAS,EAA1F;AACA,QAAMoB,OAAO,GAAGvB,iBAAiB,CAACI,SAAD,CAAjC;AACA,QAAMoB,WAAW,GAAGxB,iBAAiB,CAACgB,gBAAD,CAArC;AACA,QAAMS,GAAc,GAAI;AACpBP,IAAAA,IAAI,EAAEA,IADc;AAEpBC,IAAAA,OAAO,EAAEA,OAFW;AAGpBC,IAAAA,KAAK,EAAEA,KAHa;AAIpBC,IAAAA,EAAE,EAAEA,EAJgB;AAKpBC,IAAAA,MAAM,EAAGA,MAAM,CAACI,KAAP,CAAa,GAAb,EAAkBC,GAAlB,CAAuBC,CAAD,IAAO1B,QAAQ,CAAC0B,CAAD,CAArC;AALW,GAAxB;AAOAL,EAAAA,OAAO,CAACE,GAAD,CAAP;AACAD,EAAAA,WAAW,CAAC;AACVX,IAAAA,UADU;AAEVC,IAAAA,cAFU;AAGVC,IAAAA;AAHU,GAAD,CAAX;AAMA,QAAM,CAACc,IAAD,IAAS5B,cAAc,CAACQ,YAAD,CAA7B;AAEA,sBACE;AAAA,cAEIoB,IAAI,KAAKrB,OAAO,CAACH,MAAjB,gBACI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADJ,GAGIwB,IAAI,KAAKrB,OAAO,CAACF,MAAjB,gBACA,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADA,gBAGA,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AARR;AAAA;AAAA;AAAA;AAAA,UADF;AAcD,CAlCM;;GAAMW,G;UACsEd,S,EACjEH,iB,EACIA,iB,EAeLC,c;;;KAlBJgB,G","sourcesContent":["import React from \"react\";\nimport { atom, useSetRecoilState, useRecoilState } from 'recoil';\nimport { getToken } from \"src/utils/token\";\nimport { useParams } from \"react-router-dom\";\nimport { poolState, poolProps } from \"src/pages/Farm/newFarm/NewFarm\";\nimport { Supply } from \"src/pages/Position/Add/supply\";\nimport { Borrow } from \"src/pages/Position/Add/borrow\";\nimport { Confirm } from \"src/pages/Position/Add/confirm\";\n\n\nexport enum addPage {\n    Supply, \n    Borrow, \n    Confirm,\n}\n  \nexport const addPageState = atom({\n    key: 'addPageState',\n    default: addPage.Supply\n})\n\ninterface positionProps {\n  positionId: string | null;\n  collateralSize: string | null; \n  collId: string | null;\n}\n\nexport const emptyPositionState : positionProps = {\n  positionId: null,\n  collateralSize: null,\n  collId: null,\n}\n\nexport const addPositionState = atom({\n  key: 'addPositionState',\n  default: emptyPositionState\n})\n\nexport const Add: React.FC = () => {\n  const { positionId, collId, collateralSize, name, wrapper, spell, lp, tokens } = useParams<{ positionId: string, collId: string, collateralSize: string, name: string, wrapper: string, spell: string, lp:string, tokens:string}>();\n  const setPool = useSetRecoilState(poolState); \n  const setPosition = useSetRecoilState(addPositionState); \n  const set: poolProps  = {\n      name: name,\n      wrapper: wrapper,\n      spell: spell,\n      lp: lp,\n      tokens: (tokens.split(',').map((x) => getToken(x)!)),\n  }\n  setPool(set);\n  setPosition({\n    positionId, \n    collateralSize,\n    collId,\n  })  \n  \n  const [page] = useRecoilState(addPageState);\n\n  return (\n    <div>\n      {\n        page === addPage.Supply ? (\n            <Supply />\n          ) : (\n            page === addPage.Borrow ? (\n            <Borrow />\n          ) : (\n            <Confirm />\n          ))}\n    </div>\n    \n  );\n};"]},"metadata":{},"sourceType":"module"}