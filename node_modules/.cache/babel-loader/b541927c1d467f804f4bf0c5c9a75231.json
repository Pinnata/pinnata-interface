{"ast":null,"code":"import DEFAULT_TOKEN_LIST from \"@ubeswap/default-token-list\";\nexport class Token {\n  constructor(info) {\n    var _ref, _info$logoURI, _DEFAULT_TOKEN_LIST$t;\n\n    this.info = info;\n    this.logoURL = void 0;\n    this.logoURL = (_ref = (_info$logoURI = info.logoURI) !== null && _info$logoURI !== void 0 ? _info$logoURI : (_DEFAULT_TOKEN_LIST$t = DEFAULT_TOKEN_LIST.tokens.find(tok => tok.address === info.address)) === null || _DEFAULT_TOKEN_LIST$t === void 0 ? void 0 : _DEFAULT_TOKEN_LIST$t.logoURI) !== null && _ref !== void 0 ? _ref : \"\";\n  }\n\n  get address() {\n    return this.info.address;\n  }\n\n  get name() {\n    return this.info.name;\n  }\n\n  get symbol() {\n    return this.info.symbol;\n  }\n\n  get decimals() {\n    return this.info.decimals;\n  }\n\n  equals(other) {\n    return this.address === other.address;\n  }\n\n  toString() {\n    return `Token(address=${this.address}, name=${this.name}, symbol=${this.symbol}, decimals=${this.decimals})`;\n  }\n\n}","map":{"version":3,"sources":["/Users/kylescott/src/nomspace-interface/src/utils/token.ts"],"names":["DEFAULT_TOKEN_LIST","Token","constructor","info","logoURL","logoURI","tokens","find","tok","address","name","symbol","decimals","equals","other","toString"],"mappings":"AAAA,OAAOA,kBAAP,MAA+B,6BAA/B;AAIA,OAAO,MAAMC,KAAN,CAAqC;AAG1CC,EAAAA,WAAW,CAAiBC,IAAjB,EAAkC;AAAA;;AAAA,SAAjBA,IAAiB,GAAjBA,IAAiB;AAAA,SAF7BC,OAE6B;AAC3C,SAAKA,OAAL,4BACED,IAAI,CAACE,OADP,kFAEEL,kBAAkB,CAACM,MAAnB,CAA0BC,IAA1B,CAAgCC,GAAD,IAASA,GAAG,CAACC,OAAJ,KAAgBN,IAAI,CAACM,OAA7D,CAFF,0DAEE,sBACIJ,OAHN,uCAIE,EAJF;AAKD;;AAEU,MAAPI,OAAO,GAAW;AACpB,WAAO,KAAKN,IAAL,CAAUM,OAAjB;AACD;;AAEO,MAAJC,IAAI,GAAW;AACjB,WAAO,KAAKP,IAAL,CAAUO,IAAjB;AACD;;AAES,MAANC,MAAM,GAAW;AACnB,WAAO,KAAKR,IAAL,CAAUQ,MAAjB;AACD;;AAEW,MAARC,QAAQ,GAAW;AACrB,WAAO,KAAKT,IAAL,CAAUS,QAAjB;AACD;;AAEMC,EAAAA,MAAM,CAACC,KAAD,EAAwB;AACnC,WAAO,KAAKL,OAAL,KAAiBK,KAAK,CAACL,OAA9B;AACD;;AAEMM,EAAAA,QAAQ,GAAW;AACxB,WAAQ,iBAAgB,KAAKN,OAAQ,UAAS,KAAKC,IAAK,YAAW,KAAKC,MAAO,cAAa,KAAKC,QAAS,GAA1G;AACD;;AAjCyC","sourcesContent":["import DEFAULT_TOKEN_LIST from \"@ubeswap/default-token-list\";\nimport { Token as UToken } from \"@ubeswap/token-math\";\nimport { TokenInfo } from \"@uniswap/token-lists\";\n\nexport class Token implements UToken<Token> {\n  public readonly logoURL: string;\n\n  constructor(public readonly info: TokenInfo) {\n    this.logoURL =\n      info.logoURI ??\n      DEFAULT_TOKEN_LIST.tokens.find((tok) => tok.address === info.address)\n        ?.logoURI ??\n      \"\";\n  }\n\n  get address(): string {\n    return this.info.address;\n  }\n\n  get name(): string {\n    return this.info.name;\n  }\n\n  get symbol(): string {\n    return this.info.symbol;\n  }\n\n  get decimals(): number {\n    return this.info.decimals;\n  }\n\n  public equals(other: Token): boolean {\n    return this.address === other.address;\n  }\n\n  public toString(): string {\n    return `Token(address=${this.address}, name=${this.name}, symbol=${this.symbol}, decimals=${this.decimals})`;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}