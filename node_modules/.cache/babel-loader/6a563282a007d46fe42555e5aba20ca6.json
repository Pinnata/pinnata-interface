{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useContractKit } from \"@celo-tools/use-contractkit\";\nimport IERC20_ABI from \"src/abis/dahlia_contracts/IERC20.json\";\nimport { useAsyncState } from \"src/hooks/useAsyncState\";\nimport { isAddress, toBN } from \"web3-utils\";\nimport { getAddress } from \"ethers/lib/utils\";\nimport { safeBoxMap } from \"src/config\";\nexport const useERCmulti = tokenAddresses => {\n  _s();\n\n  const {\n    kit,\n    address\n  } = useContractKit();\n  const call = React.useCallback(async () => {\n    tokenAddresses.map(async tokenAddress => {\n      if (!tokenAddress || !isAddress(tokenAddress) || !address) {\n        return null;\n      }\n\n      ;\n      const ERCToken = new kit.web3.eth.Contract(IERC20_ABI.abi, tokenAddress);\n      const allowance = toBN(await ERCToken.methods.allowance(address, safeBoxMap.get(getAddress(tokenAddress))).call());\n      const balance = toBN(await ERCToken.methods.balanceOf(address).call());\n      return {\n        allowance,\n        balance\n      };\n    });\n  }, [kit, address, tokenAddresses]);\n  return useAsyncState(null, call);\n};\n\n_s(useERCmulti, \"65oUwvUZD1z9qgK3qj8TClGRkms=\", false, function () {\n  return [useContractKit, useAsyncState];\n});","map":{"version":3,"sources":["/Users/kylescott/src/nomspace-interface/src/hooks/useERCmulti.ts"],"names":["React","useContractKit","IERC20_ABI","useAsyncState","isAddress","toBN","getAddress","safeBoxMap","useERCmulti","tokenAddresses","kit","address","call","useCallback","map","tokenAddress","ERCToken","web3","eth","Contract","abi","allowance","methods","get","balance","balanceOf"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,cAAT,QAA+B,6BAA/B;AACA,OAAOC,UAAP,MAAuB,uCAAvB;AAEA,SAASC,aAAT,QAA8B,yBAA9B;AACA,SAASC,SAAT,EAAoBC,IAApB,QAAyC,YAAzC;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,UAAT,QAA2B,YAA3B;AAEA,OAAO,MAAMC,WAAW,GAAIC,cAAD,IAA8B;AAAA;;AACvD,QAAM;AAAEC,IAAAA,GAAF;AAAOC,IAAAA;AAAP,MAAmBV,cAAc,EAAvC;AACA,QAAMW,IAAI,GAAGZ,KAAK,CAACa,WAAN,CAAkB,YAAY;AACzCJ,IAAAA,cAAc,CAACK,GAAf,CAAmB,MAAOC,YAAP,IAAwB;AACvC,UAAI,CAACA,YAAD,IAAiB,CAACX,SAAS,CAACW,YAAD,CAA3B,IAA6C,CAACJ,OAAlD,EAA2D;AACvD,eAAO,IAAP;AACH;;AAAA;AACD,YAAMK,QAAQ,GAAI,IAAIN,GAAG,CAACO,IAAJ,CAASC,GAAT,CAAaC,QAAjB,CACdjB,UAAU,CAACkB,GADG,EAEdL,YAFc,CAAlB;AAIE,YAAMM,SAAS,GAAGhB,IAAI,CACpB,MAAMW,QAAQ,CAACM,OAAT,CAAiBD,SAAjB,CAA2BV,OAA3B,EAAoCJ,UAAU,CAACgB,GAAX,CAAejB,UAAU,CAACS,YAAD,CAAzB,CAApC,EAA+EH,IAA/E,EADc,CAAtB;AAGA,YAAMY,OAAO,GAAGnB,IAAI,CAAC,MAAMW,QAAQ,CAACM,OAAT,CAAiBG,SAAjB,CAA2Bd,OAA3B,EAAoCC,IAApC,EAAP,CAApB;AACA,aAAO;AAAES,QAAAA,SAAF;AAAaG,QAAAA;AAAb,OAAP;AACL,KAbD;AAcD,GAfY,EAeV,CAACd,GAAD,EAAMC,OAAN,EAAeF,cAAf,CAfU,CAAb;AAgBA,SAAON,aAAa,CAAC,IAAD,EAAOS,IAAP,CAApB;AACD,CAnBM;;GAAMJ,W;UACcP,c,EAiBlBE,a","sourcesContent":["import React from \"react\";\nimport { useContractKit } from \"@celo-tools/use-contractkit\";\nimport IERC20_ABI from \"src/abis/dahlia_contracts/IERC20.json\"\nimport { IERC20 } from \"src/generated/IERC20\";\nimport { useAsyncState } from \"src/hooks/useAsyncState\";\nimport { isAddress, toBN, AbiItem } from \"web3-utils\";\nimport { getAddress } from \"ethers/lib/utils\";\nimport { safeBoxMap } from \"src/config\";\n\nexport const useERCmulti = (tokenAddresses: string[]) => {\n  const { kit, address } = useContractKit();\n  const call = React.useCallback(async () => {\n    tokenAddresses.map(async (tokenAddress) => {\n        if (!tokenAddress || !isAddress(tokenAddress) || !address) {\n            return null;\n        };\n        const ERCToken = (new kit.web3.eth.Contract(\n            IERC20_ABI.abi as AbiItem[],\n            tokenAddress,\n          ) as unknown) as IERC20;\n          const allowance = toBN(\n            await ERCToken.methods.allowance(address, safeBoxMap.get(getAddress(tokenAddress))!).call()\n          );\n          const balance = toBN(await ERCToken.methods.balanceOf(address).call());\n          return { allowance, balance };\n    });\n  }, [kit, address, tokenAddresses]);\n  return useAsyncState(null, call);\n};\n"]},"metadata":{},"sourceType":"module"}