{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useContractKit } from \"@celo-tools/use-contractkit\";\nimport IERC20_ABI from \"src/abis/dahlia_contracts/IERC20.json\";\nimport { useAsyncState } from \"src/hooks/useAsyncState\";\nimport { isAddress, toBN } from \"web3-utils\";\nimport { safeBoxMap } from \"src/config\";\nexport const useERC = tokenAddress => {\n  _s();\n\n  const {\n    kit,\n    address\n  } = useContractKit();\n  const call = React.useCallback(async () => {\n    if (!tokenAddress || !isAddress(tokenAddress) || !address) {\n      return null;\n    }\n\n    const ERCToken = new kit.web3.eth.Contract(IERC20_ABI.abi, tokenAddress);\n    console.log(1);\n    console.log(safeBoxMap.get(tokenAddress));\n    const allowance = toBN(await ERCToken.methods.allowance(address, safeBoxMap.get(tokenAddress)).call());\n    console.log(3);\n    const balance = toBN(await ERCToken.methods.balanceOf(address).call());\n    console.log(4);\n    return {\n      allowance,\n      balance\n    };\n  }, [kit, address, tokenAddress]);\n  return useAsyncState(null, call);\n};\n\n_s(useERC, \"65oUwvUZD1z9qgK3qj8TClGRkms=\", false, function () {\n  return [useContractKit, useAsyncState];\n});","map":{"version":3,"sources":["/Users/kylescott/src/nomspace-interface/src/hooks/useERC.ts"],"names":["React","useContractKit","IERC20_ABI","useAsyncState","isAddress","toBN","safeBoxMap","useERC","tokenAddress","kit","address","call","useCallback","ERCToken","web3","eth","Contract","abi","console","log","get","allowance","methods","balance","balanceOf"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,cAAT,QAA+B,6BAA/B;AACA,OAAOC,UAAP,MAAuB,uCAAvB;AAEA,SAASC,aAAT,QAA8B,yBAA9B;AACA,SAASC,SAAT,EAAoBC,IAApB,QAAyC,YAAzC;AAEA,SAASC,UAAT,QAA2B,YAA3B;AAEA,OAAO,MAAMC,MAAM,GAAIC,YAAD,IAA0B;AAAA;;AAC9C,QAAM;AAAEC,IAAAA,GAAF;AAAOC,IAAAA;AAAP,MAAmBT,cAAc,EAAvC;AACA,QAAMU,IAAI,GAAGX,KAAK,CAACY,WAAN,CAAkB,YAAY;AACzC,QAAI,CAACJ,YAAD,IAAiB,CAACJ,SAAS,CAACI,YAAD,CAA3B,IAA6C,CAACE,OAAlD,EAA2D;AACzD,aAAO,IAAP;AACD;;AAED,UAAMG,QAAQ,GAAI,IAAIJ,GAAG,CAACK,IAAJ,CAASC,GAAT,CAAaC,QAAjB,CAChBd,UAAU,CAACe,GADK,EAEhBT,YAFgB,CAAlB;AAIAU,IAAAA,OAAO,CAACC,GAAR,CAAY,CAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAYb,UAAU,CAACc,GAAX,CAAeZ,YAAf,CAAZ;AACA,UAAMa,SAAS,GAAGhB,IAAI,CACpB,MAAMQ,QAAQ,CAACS,OAAT,CAAiBD,SAAjB,CAA2BX,OAA3B,EAAoCJ,UAAU,CAACc,GAAX,CAAeZ,YAAf,CAApC,EAAmEG,IAAnE,EADc,CAAtB;AAGAO,IAAAA,OAAO,CAACC,GAAR,CAAY,CAAZ;AACA,UAAMI,OAAO,GAAGlB,IAAI,CAAC,MAAMQ,QAAQ,CAACS,OAAT,CAAiBE,SAAjB,CAA2Bd,OAA3B,EAAoCC,IAApC,EAAP,CAApB;AACAO,IAAAA,OAAO,CAACC,GAAR,CAAY,CAAZ;AACA,WAAO;AAAEE,MAAAA,SAAF;AAAaE,MAAAA;AAAb,KAAP;AACD,GAlBY,EAkBV,CAACd,GAAD,EAAMC,OAAN,EAAeF,YAAf,CAlBU,CAAb;AAmBA,SAAOL,aAAa,CAAC,IAAD,EAAOQ,IAAP,CAApB;AACD,CAtBM;;GAAMJ,M;UACcN,c,EAoBlBE,a","sourcesContent":["import React from \"react\";\nimport { useContractKit } from \"@celo-tools/use-contractkit\";\nimport IERC20_ABI from \"src/abis/dahlia_contracts/IERC20.json\"\nimport { IERC20 } from \"src/generated/IERC20\";\nimport { useAsyncState } from \"src/hooks/useAsyncState\";\nimport { isAddress, toBN, AbiItem } from \"web3-utils\";\nimport { getAddress } from \"ethers/lib/utils\";\nimport { safeBoxMap } from \"src/config\";\n\nexport const useERC = (tokenAddress: string) => {\n  const { kit, address } = useContractKit();\n  const call = React.useCallback(async () => {\n    if (!tokenAddress || !isAddress(tokenAddress) || !address) {\n      return null;\n    }\n\n    const ERCToken = (new kit.web3.eth.Contract(\n      IERC20_ABI.abi as AbiItem[],\n      tokenAddress\n    ) as unknown) as IERC20;\n    console.log(1)\n    console.log(safeBoxMap.get(tokenAddress))\n    const allowance = toBN(\n      await ERCToken.methods.allowance(address, safeBoxMap.get(tokenAddress)!).call()\n    );\n    console.log(3)\n    const balance = toBN(await ERCToken.methods.balanceOf(address).call());\n    console.log(4)\n    return { allowance, balance };\n  }, [kit, address, tokenAddress]);\n  return useAsyncState(null, call);\n};\n"]},"metadata":{},"sourceType":"module"}