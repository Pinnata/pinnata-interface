{"ast":null,"code":"var _jsxFileName = \"/Users/kylescott/src/dahlia-interface/src/pages/Earn/Withdraw/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useContractKit } from \"@celo-tools/use-contractkit\";\nimport { useParams } from \"react-router-dom\";\nimport { DEFAULT_GAS_PRICE, safeBoxMap, Bank } from \"src/config\";\nimport { toBN, toWei, fromWei } from \"web3-utils\";\nimport { toastTx } from \"src/utils/toastTx\";\nimport { toast } from \"react-toastify\";\nimport SAFEBOX_ABI from \"src/abis/dahlia_contracts/SafeBox.json\";\nimport { getAddress } from \"ethers/lib/utils\";\nimport { useSafeBox } from \"src/hooks/useSafeBox\";\nimport BANK_ABI from \"src/abis/dahlia_contracts/HomoraBank.json\";\nimport CERC20_ABI from \"src/abis/fountain_of_youth/CErc20Immutable.json\";\nimport { useAsyncState } from \"src/hooks/useAsyncState\";\nimport { getToken } from \"src/utils/token\";\nimport { CaretLeft } from \"phosphor-react\";\nimport { Button, Card, Flex, Heading, Spinner, Text } from \"theme-ui\";\nimport { useHistory } from \"react-router-dom\";\nimport { BoxTokenAmountInfo } from \"src/components/BoxTokenAmountInfo\";\nimport { TokenInputForm } from \"src/components/TokenInputForm\";\nimport { BlockText } from \"src/components/BlockText\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Withdraw = () => {\n  _s();\n\n  // TODO: does the number of decimals factor in? \n  const {\n    kit,\n    getConnectedKit,\n    network\n  } = useContractKit();\n  const [amount, setAmount] = React.useState(\"1\");\n  const [withdrawLoading, setWithdrawLoading] = React.useState(false);\n  const [buttonLoading, setButtonLoading] = React.useState(true);\n  const {\n    tokenAddress\n  } = useParams();\n  const [safeBox, refetchSafeBox] = useSafeBox(safeBoxMap.get(tokenAddress));\n  const history = useHistory();\n  const bank = React.useMemo(() => new kit.web3.eth.Contract(BANK_ABI.abi, getAddress(Bank[network.chainId])), [kit, network]);\n  const call = React.useCallback(async () => {\n    try {\n      const bankInfo = await bank.methods.getBankInfo(tokenAddress).call();\n      const cToken = new kit.web3.eth.Contract(CERC20_ABI, bankInfo.cToken);\n      const exchangeRate = await cToken.methods.exchangeRateStored().call();\n      return {\n        exchange: toBN(exchangeRate)\n      };\n    } catch (error) {\n      console.log(error);\n    }\n  }, [bank, tokenAddress, kit]);\n  const [info] = useAsyncState(null, call);\n  const exchangeRate = info ? Number(fromWei(info.exchange)) : 1;\n\n  const withdrawButton = /*#__PURE__*/_jsxDEV(Button, {\n    onClick: async () => {\n      const kit = await getConnectedKit(); // kit is connected to a wallet\n\n      const safeBox = new kit.web3.eth.Contract(SAFEBOX_ABI.abi, safeBoxMap.get(getAddress(tokenAddress)));\n\n      try {\n        setWithdrawLoading(true);\n        const tx = await safeBox.methods.withdraw(toWei(amount)).send({\n          from: kit.defaultAccount,\n          gasPrice: DEFAULT_GAS_PRICE\n        });\n        toastTx(tx.transactionHash);\n        refetchSafeBox();\n      } catch (e) {\n        toast(e.message);\n      } finally {\n        setWithdrawLoading(false);\n        setAmount(\"0\");\n      }\n    },\n    children: \"Withdraw\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n\n  const loading = withdrawLoading || buttonLoading;\n  let button = withdrawButton;\n\n  if (safeBox) {\n    const fmtCost = amount === \"\" ? \"0\" : amount;\n    const amountBN = toBN(toWei(fmtCost));\n\n    if (Number(amount) <= 0) {\n      button = /*#__PURE__*/_jsxDEV(Button, {\n        disabled: true,\n        children: \"Enter a valid amount\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 16\n      }, this);\n    } else if (safeBox.balance.lt(amountBN)) {\n      button = /*#__PURE__*/_jsxDEV(Button, {\n        disabled: true,\n        children: \"Insufficient funds\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 16\n      }, this);\n    }\n\n    if (buttonLoading) setButtonLoading(false);\n  }\n\n  const token = getToken(tokenAddress);\n  return /*#__PURE__*/_jsxDEV(Flex, {\n    sx: {\n      alignItems: \"center\",\n      flexDirection: \"column\"\n    },\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      sx: {\n        width: \"100%\",\n        maxWidth: \"800px\"\n      },\n      py: 4,\n      px: 3,\n      children: [/*#__PURE__*/_jsxDEV(Flex, {\n        onClick: () => history.goBack(),\n        sx: {\n          alignItems: \"center\",\n          cursor: \"pointer\"\n        },\n        mb: 4,\n        children: [/*#__PURE__*/_jsxDEV(CaretLeft, {\n          size: 28\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          children: \"Back\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Flex, {\n        mb: 4,\n        children: /*#__PURE__*/_jsxDEV(Heading, {\n          as: \"h2\",\n          mr: 2,\n          children: \"Withdraw\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TokenInputForm, {\n        token: token,\n        amount: amount,\n        setAmount: setAmount,\n        balance: safeBox ? safeBox.balance : null\n      }, token.address, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Flex, {\n        sx: {\n          mt: \"25px\"\n        },\n        children: /*#__PURE__*/_jsxDEV(BlockText, {\n          variant: \"primary\",\n          children: \"You will receive\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Flex, {\n        sx: {\n          justifyContent: \"center\",\n          alignItems: \"center\"\n        },\n        children: /*#__PURE__*/_jsxDEV(BoxTokenAmountInfo, {\n          token: token,\n          amount: String(Number(amount) * exchangeRate)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Flex, {\n        sx: {\n          justifyContent: \"center\",\n          mt: 6\n        },\n        children: loading ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 15\n        }, this) : button\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Withdraw, \"2pFoMluDPCly7BpsdUlXhwEFqL4=\", false, function () {\n  return [useContractKit, useParams, useSafeBox, useHistory, useAsyncState];\n});\n\n_c = Withdraw;\n\nvar _c;\n\n$RefreshReg$(_c, \"Withdraw\");","map":{"version":3,"sources":["/Users/kylescott/src/dahlia-interface/src/pages/Earn/Withdraw/index.tsx"],"names":["React","useContractKit","useParams","DEFAULT_GAS_PRICE","safeBoxMap","Bank","toBN","toWei","fromWei","toastTx","toast","SAFEBOX_ABI","getAddress","useSafeBox","BANK_ABI","CERC20_ABI","useAsyncState","getToken","CaretLeft","Button","Card","Flex","Heading","Spinner","Text","useHistory","BoxTokenAmountInfo","TokenInputForm","BlockText","Withdraw","kit","getConnectedKit","network","amount","setAmount","useState","withdrawLoading","setWithdrawLoading","buttonLoading","setButtonLoading","tokenAddress","safeBox","refetchSafeBox","get","history","bank","useMemo","web3","eth","Contract","abi","chainId","call","useCallback","bankInfo","methods","getBankInfo","cToken","exchangeRate","exchangeRateStored","exchange","error","console","log","info","Number","withdrawButton","tx","withdraw","send","from","defaultAccount","gasPrice","transactionHash","e","message","loading","button","fmtCost","amountBN","balance","lt","token","alignItems","flexDirection","width","maxWidth","goBack","cursor","address","mt","justifyContent","String"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { useContractKit } from \"@celo-tools/use-contractkit\";\nimport { useParams } from \"react-router-dom\";\nimport styled from \"@emotion/styled\"\nimport { DEFAULT_GAS_PRICE, safeBoxMap, Bank } from \"src/config\";\nimport { AbiItem, toBN, toWei, fromWei } from \"web3-utils\";\nimport { toastTx } from \"src/utils/toastTx\";\nimport { toast } from \"react-toastify\";\nimport SAFEBOX_ABI from \"src/abis/dahlia_contracts/SafeBox.json\";\nimport { SafeBox } from \"src/generated/SafeBox\";\nimport { getAddress } from \"ethers/lib/utils\";\nimport { useSafeBox } from \"src/hooks/useSafeBox\";\nimport BANK_ABI from \"src/abis/dahlia_contracts/HomoraBank.json\";\nimport { HomoraBank } from \"src/generated/HomoraBank\";\nimport CERC20_ABI from \"src/abis/fountain_of_youth/CErc20Immutable.json\";\nimport { CErc20Immutable } from \"src/generated/CErc20Immutable\";\nimport { useAsyncState } from \"src/hooks/useAsyncState\";\nimport Background from 'src/images/logo.png';\nimport { humanFriendlyWei } from \"src/utils/eth\";\nimport { getToken } from \"src/utils/token\";\nimport { CaretLeft } from \"phosphor-react\";\nimport {\n  Button,\n  Card,\n  Flex,\n  Heading,\n  Spinner,\n  Text\n} from \"theme-ui\";\nimport  { useHistory } from \"react-router-dom\"\nimport { BoxTokenAmountInfo } from \"src/components/BoxTokenAmountInfo\";\nimport { TokenInputForm } from \"src/components/TokenInputForm\";\nimport { BlockText } from \"src/components/BlockText\";\n\nexport const Withdraw: React.FC = () => {\n  // TODO: does the number of decimals factor in? \n  const { kit, getConnectedKit, network } = useContractKit();\n  const [amount, setAmount] = React.useState(\"1\");\n  const [withdrawLoading, setWithdrawLoading] = React.useState(false);\n  const [buttonLoading, setButtonLoading] = React.useState(true); \n  const { tokenAddress } = useParams<{ tokenAddress: string}>();\n  const [safeBox, refetchSafeBox] = useSafeBox(safeBoxMap.get(tokenAddress)!);\n  const history = useHistory(); \n\n  const bank = React.useMemo(() => (new kit.web3.eth.Contract(\n    BANK_ABI.abi as AbiItem[],\n    getAddress(Bank[network.chainId])\n  ) as unknown) as HomoraBank, [kit, network]); \n\n  const call = React.useCallback(async () => {\n    try {\n        const bankInfo =  await bank.methods.getBankInfo(tokenAddress).call();\n        const cToken = (new kit.web3.eth.Contract(\n          CERC20_ABI as AbiItem[],\n          bankInfo.cToken,\n        ) as unknown) as CErc20Immutable;\n        const exchangeRate = await cToken.methods.exchangeRateStored().call();\n        return {\n          exchange: toBN(exchangeRate),\n        }\n    } catch (error) {\n        console.log(error)\n    }\n  }, [bank, tokenAddress, kit])\n\n  const [info] = useAsyncState(null, call);\n  \n  const exchangeRate = info ? Number(fromWei(info.exchange)) : 1\n\n  const withdrawButton = (\n    <Button\n      onClick={async () => {\n        const kit = await getConnectedKit();\n        // kit is connected to a wallet\n        const safeBox = (new kit.web3.eth.Contract(\n          SAFEBOX_ABI.abi as AbiItem[],\n          safeBoxMap.get(getAddress(tokenAddress))!,\n        ) as unknown) as SafeBox;\n        try {\n          setWithdrawLoading(true);\n          const tx = await safeBox.methods\n            .withdraw(\n              toWei(amount)\n            ).send({\n              from: kit.defaultAccount,\n              gasPrice: DEFAULT_GAS_PRICE,\n            });\n          toastTx(tx.transactionHash);\n          refetchSafeBox();\n        } catch (e) {\n          toast(e.message);\n        } finally {\n          setWithdrawLoading(false);\n          setAmount(\"0\");\n        }\n      }}\n    >\n      Withdraw\n    </Button>\n  );\n\n  const loading =  withdrawLoading || buttonLoading;\n  let button = withdrawButton;\n  if (safeBox) {\n    const fmtCost = amount === \"\" ? \"0\" : amount;\n    const amountBN = toBN(toWei(fmtCost));\n    if (Number(amount) <= 0) {\n      button = <Button disabled>Enter a valid amount</Button>\n    } else if (safeBox.balance.lt(amountBN)) {\n      button = <Button disabled={true}>Insufficient funds</Button>;\n    }\n    if (buttonLoading) setButtonLoading(false)\n  }\n    \n  const token = getToken(tokenAddress)!; \n\n  return (\n    <Flex sx={{ alignItems: \"center\", flexDirection: \"column\" }}>\n      <Card sx={{ width: \"100%\", maxWidth: \"800px\" }} py={4} px={3}>\n        <Flex\n          onClick={() => history.goBack()}\n          sx={{ alignItems: \"center\", cursor: \"pointer\" }}\n          mb={4}\n        >\n          <CaretLeft size={28} />\n          <Text>Back</Text>\n        </Flex>\n        <Flex mb={4}>\n          <Heading as=\"h2\" mr={2}>\n            Withdraw\n          </Heading>\n        </Flex>\n          <TokenInputForm key={token.address} token={token} amount={amount}\n             setAmount={setAmount} \n             balance={safeBox ? safeBox.balance : null}\n            />\n        <Flex sx={{mt: \"25px\"}}>\n          <BlockText variant=\"primary\">You will receive</BlockText>\n        </Flex>\n        <Flex sx={{ justifyContent: \"center\",  alignItems: \"center\"}}>\n          <BoxTokenAmountInfo token={token} amount={String(Number(amount) * exchangeRate)} />\n        </Flex>\n        <Flex sx={{ justifyContent: \"center\", mt: 6 }}>\n            {loading ? (\n              <Spinner />\n            ) : (\n              button\n            )}\n        </Flex>\n      </Card>\n    </Flex>\n  );\n};"]},"metadata":{},"sourceType":"module"}