{"ast":null,"code":"var _jsxFileName = \"/Users/kylescott/src/nomspace-interface/src/pages/Earn/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useNom } from \"src/hooks/useNom\";\nimport { useContractKit } from \"@celo-tools/use-contractkit\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport { Box, Button, Card, Flex, Heading, Spinner } from \"theme-ui\";\nimport { ethers } from \"ethers\";\nimport { BlockText } from \"src/components/BlockText\";\nimport { shortenAddress } from \"src/utils/address\";\nimport NomMetadata from \"src/abis/nomspace/Nom.json\";\nimport { DEFAULT_GAS_PRICE, NOM } from \"src/config\";\nimport { toastTx } from \"src/utils/toastTx\";\nimport { toast } from \"react-toastify\";\nimport { isAddress } from \"ethers/lib/utils\";\nimport { QrCode } from \"phosphor-react\";\nimport { QRNameModal } from \"src/components/QRNameModal\";\nimport { SearchBar } from \"src/components/SearchBar\";\nimport { ZERO_ADDRESS } from \"src/constants\";\nimport { formatName } from \"src/utils/name\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Earn = () => {\n  _s();\n\n  const {\n    name\n  } = useParams();\n  const nameFormatted = formatName(name);\n  const {\n    address,\n    getConnectedKit,\n    network\n  } = useContractKit();\n  const [nom, refetchNom] = useNom(nameFormatted);\n  const [changeResLoading, setChangeResLoading] = React.useState(false);\n  const [changeOwnerLoading, setChangeOwnerLoading] = React.useState(false);\n  const [showQR, setShowQR] = React.useState(false);\n  const history = useHistory();\n\n  if (nom == null) {\n    return /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 12\n    }, this);\n  }\n\n  const isOwner = address && nom.owner.toLowerCase() === address.toLowerCase();\n  return /*#__PURE__*/_jsxDEV(Flex, {\n    sx: {\n      alignItems: \"center\",\n      flexDirection: \"column\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        width: \"100%\",\n        maxWidth: \"800px\"\n      },\n      mb: 4,\n      children: /*#__PURE__*/_jsxDEV(SearchBar, {\n        size: \"small\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      sx: {\n        width: \"100%\",\n        maxWidth: \"800px\"\n      },\n      py: 4,\n      px: 3,\n      children: [/*#__PURE__*/_jsxDEV(Flex, {\n        mb: 4,\n        children: [/*#__PURE__*/_jsxDEV(Heading, {\n          as: \"h2\",\n          mr: 2,\n          children: [name, \".nom\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), nom.resolution !== ZERO_ADDRESS && /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            cursor: \"pointer\"\n          },\n          onClick: () => setShowQR(true),\n          children: /*#__PURE__*/_jsxDEV(QrCode, {\n            size: 32\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(BlockText, {\n        variant: \"primary\",\n        children: \"Resolution\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(BlockText, {\n        mb: 2,\n        children: shortenAddress(nom.resolution, 5)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), changeResLoading ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Button, {\n        onClick: async () => {\n          const kit = await getConnectedKit(); // kit is connected to a wallet\n\n          const nom = new kit.web3.eth.Contract(NomMetadata.abi, NOM[network.chainId]);\n          const nextResolution = prompt(\"Enter new owner address\");\n\n          if (!nextResolution || !isAddress(nextResolution)) {\n            alert(\"Invalid address. Please try again.\");\n            return;\n          }\n\n          try {\n            setChangeResLoading(true);\n            const tx = await nom.methods.changeResolution(ethers.utils.formatBytes32String(nameFormatted), nextResolution).send({\n              from: kit.defaultAccount,\n              gasPrice: DEFAULT_GAS_PRICE,\n              gas: 2e7\n            });\n            toastTx(tx.transactionHash);\n            refetchNom();\n          } catch (e) {\n            toast(e.message);\n          } finally {\n            setChangeResLoading(false);\n          }\n        },\n        mb: 4,\n        disabled: !isOwner,\n        children: \"Change\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(BlockText, {\n        variant: \"primary\",\n        children: \"Owner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(BlockText, {\n        mb: 2,\n        children: shortenAddress(nom.owner, 5)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), changeOwnerLoading ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Button, {\n        onClick: async () => {\n          const kit = await getConnectedKit(); // kit is connected to a wallet\n\n          const nom = new kit.web3.eth.Contract(NomMetadata.abi, NOM[network.chainId]);\n          const nextOwner = prompt(\"Enter new owner address\");\n\n          if (!nextOwner || !isAddress(nextOwner)) {\n            alert(\"Invalid address. Please try again.\");\n            return;\n          }\n\n          try {\n            setChangeOwnerLoading(true);\n            const tx = await nom.methods.changeNameOwner(ethers.utils.formatBytes32String(nameFormatted), nextOwner).send({\n              from: kit.defaultAccount,\n              gasPrice: DEFAULT_GAS_PRICE,\n              gas: 2e7\n            });\n            toastTx(tx.transactionHash);\n            refetchNom();\n          } catch (e) {\n            toast(e.message);\n          } finally {\n            setChangeOwnerLoading(false);\n          }\n        },\n        mb: 4,\n        disabled: !isOwner,\n        children: \"Transfer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(BlockText, {\n        variant: \"primary\",\n        children: \"Expiration\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(BlockText, {\n        mb: 2,\n        children: new Date(parseInt(nom.expiration) * 1000).toLocaleDateString(\"en-US\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this), nom.owner !== ZERO_ADDRESS && isOwner && /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => {\n          history.push(`/search/${name}/extend`);\n        },\n        children: \"Extend\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Flex, {\n        sx: {\n          justifyContent: \"center\",\n          mt: 6\n        },\n        children: nom.owner === ZERO_ADDRESS ? /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => {\n            history.push(`/search/${name}/reserve`);\n          },\n          children: \"Reserve\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(BlockText, {\n          children: \"Name has already been reserved.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), nom.resolution && nom.resolution !== ZERO_ADDRESS && /*#__PURE__*/_jsxDEV(QRNameModal, {\n      name: name,\n      address: nom.resolution,\n      isOpen: showQR,\n      setIsOpen: setShowQR\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Earn, \"fKAQ+0XoVU5f1WRROEl/8fF48fw=\", false, function () {\n  return [useParams, useContractKit, useNom, useHistory];\n});\n\n_c = Earn;\n\nvar _c;\n\n$RefreshReg$(_c, \"Earn\");","map":{"version":3,"sources":["/Users/kylescott/src/nomspace-interface/src/pages/Earn/index.tsx"],"names":["React","useNom","useContractKit","useParams","useHistory","Box","Button","Card","Flex","Heading","Spinner","ethers","BlockText","shortenAddress","NomMetadata","DEFAULT_GAS_PRICE","NOM","toastTx","toast","isAddress","QrCode","QRNameModal","SearchBar","ZERO_ADDRESS","formatName","Earn","name","nameFormatted","address","getConnectedKit","network","nom","refetchNom","changeResLoading","setChangeResLoading","useState","changeOwnerLoading","setChangeOwnerLoading","showQR","setShowQR","history","isOwner","owner","toLowerCase","alignItems","flexDirection","width","maxWidth","resolution","cursor","kit","web3","eth","Contract","abi","chainId","nextResolution","prompt","alert","tx","methods","changeResolution","utils","formatBytes32String","send","from","defaultAccount","gasPrice","gas","transactionHash","e","message","nextOwner","changeNameOwner","Date","parseInt","expiration","toLocaleDateString","push","justifyContent","mt"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { useNom } from \"src/hooks/useNom\";\nimport { useContractKit } from \"@celo-tools/use-contractkit\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport { Box, Button, Card, Flex, Heading, Spinner } from \"theme-ui\";\nimport { ethers } from \"ethers\";\nimport { BlockText } from \"src/components/BlockText\";\nimport { shortenAddress } from \"src/utils/address\";\nimport NomMetadata from \"src/abis/nomspace/Nom.json\";\nimport { Nom } from \"src/generated/Nom\";\nimport { DEFAULT_GAS_PRICE, NOM } from \"src/config\";\nimport { AbiItem } from \"web3-utils\";\nimport { toastTx } from \"src/utils/toastTx\";\nimport { toast } from \"react-toastify\";\nimport { isAddress } from \"ethers/lib/utils\";\nimport { QrCode } from \"phosphor-react\";\nimport { QRNameModal } from \"src/components/QRNameModal\";\nimport { SearchBar } from \"src/components/SearchBar\";\nimport { ZERO_ADDRESS } from \"src/constants\";\nimport { formatName } from \"src/utils/name\";\n\nexport const Earn: React.FC = () => {\n  const { name } = useParams<{ name: string }>();\n  const nameFormatted = formatName(name);\n\n  const { address, getConnectedKit, network } = useContractKit();\n  const [nom, refetchNom] = useNom(nameFormatted);\n  const [changeResLoading, setChangeResLoading] = React.useState(false);\n  const [changeOwnerLoading, setChangeOwnerLoading] = React.useState(false);\n  const [showQR, setShowQR] = React.useState(false);\n  const history = useHistory();\n\n  if (nom == null) {\n    return <Spinner />;\n  }\n  const isOwner = address && nom.owner.toLowerCase() === address.toLowerCase();\n\n  return (\n    <Flex sx={{ alignItems: \"center\", flexDirection: \"column\" }}>\n      <Box sx={{ width: \"100%\", maxWidth: \"800px\" }} mb={4}>\n        <SearchBar size=\"small\" />\n      </Box>\n      <Card sx={{ width: \"100%\", maxWidth: \"800px\" }} py={4} px={3}>\n        <Flex mb={4}>\n          <Heading as=\"h2\" mr={2}>\n            {name}.nom\n          </Heading>\n          {nom.resolution !== ZERO_ADDRESS && (\n            <Box sx={{ cursor: \"pointer\" }} onClick={() => setShowQR(true)}>\n              <QrCode size={32} />\n            </Box>\n          )}\n        </Flex>\n        <BlockText variant=\"primary\">Resolution</BlockText>\n        <BlockText mb={2}>{shortenAddress(nom.resolution, 5)}</BlockText>\n        {changeResLoading ? (\n          <Spinner />\n        ) : (\n          <Button\n            onClick={async () => {\n              const kit = await getConnectedKit();\n              // kit is connected to a wallet\n              const nom = new kit.web3.eth.Contract(\n                NomMetadata.abi as AbiItem[],\n                NOM[network.chainId]\n              ) as unknown as Nom;\n              const nextResolution = prompt(\"Enter new owner address\");\n              if (!nextResolution || !isAddress(nextResolution)) {\n                alert(\"Invalid address. Please try again.\");\n                return;\n              }\n\n              try {\n                setChangeResLoading(true);\n                const tx = await nom.methods\n                  .changeResolution(\n                    ethers.utils.formatBytes32String(nameFormatted),\n                    nextResolution\n                  )\n                  .send({\n                    from: kit.defaultAccount,\n                    gasPrice: DEFAULT_GAS_PRICE,\n                    gas: 2e7,\n                  });\n                toastTx(tx.transactionHash);\n                refetchNom();\n              } catch (e) {\n                toast(e.message);\n              } finally {\n                setChangeResLoading(false);\n              }\n            }}\n            mb={4}\n            disabled={!isOwner}\n          >\n            Change\n          </Button>\n        )}\n        <BlockText variant=\"primary\">Owner</BlockText>\n        <BlockText mb={2}>{shortenAddress(nom.owner, 5)}</BlockText>\n        {changeOwnerLoading ? (\n          <Spinner />\n        ) : (\n          <Button\n            onClick={async () => {\n              const kit = await getConnectedKit();\n              // kit is connected to a wallet\n              const nom = new kit.web3.eth.Contract(\n                NomMetadata.abi as AbiItem[],\n                NOM[network.chainId]\n              ) as unknown as Nom;\n              const nextOwner = prompt(\"Enter new owner address\");\n              if (!nextOwner || !isAddress(nextOwner)) {\n                alert(\"Invalid address. Please try again.\");\n                return;\n              }\n\n              try {\n                setChangeOwnerLoading(true);\n                const tx = await nom.methods\n                  .changeNameOwner(\n                    ethers.utils.formatBytes32String(nameFormatted),\n                    nextOwner\n                  )\n                  .send({\n                    from: kit.defaultAccount,\n                    gasPrice: DEFAULT_GAS_PRICE,\n                    gas: 2e7,\n                  });\n                toastTx(tx.transactionHash);\n                refetchNom();\n              } catch (e) {\n                toast(e.message);\n              } finally {\n                setChangeOwnerLoading(false);\n              }\n            }}\n            mb={4}\n            disabled={!isOwner}\n          >\n            Transfer\n          </Button>\n        )}\n        <BlockText variant=\"primary\">Expiration</BlockText>\n        <BlockText mb={2}>\n          {new Date(parseInt(nom.expiration) * 1000).toLocaleDateString(\n            \"en-US\"\n          )}\n        </BlockText>\n        {nom.owner !== ZERO_ADDRESS && isOwner && (\n            <Button\n              onClick={() => {\n                history.push(`/search/${name}/extend`);\n              }}\n            >\n              Extend\n            </Button>\n          )}\n        <Flex sx={{ justifyContent: \"center\", mt: 6 }}>\n          {nom.owner === ZERO_ADDRESS ? (\n            <Button\n              onClick={() => {\n                history.push(`/search/${name}/reserve`);\n              }}\n            >\n              Reserve\n            </Button>\n          ) : (\n            <BlockText>Name has already been reserved.</BlockText>\n          )}\n        </Flex>\n      </Card>\n      {nom.resolution && nom.resolution !== ZERO_ADDRESS && (\n        <QRNameModal\n          name={name}\n          address={nom.resolution}\n          isOpen={showQR}\n          setIsOpen={setShowQR}\n        />\n      )}\n    </Flex>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}