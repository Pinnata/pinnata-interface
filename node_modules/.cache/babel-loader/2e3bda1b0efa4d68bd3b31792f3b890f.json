{"ast":null,"code":"\"use strict\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function () {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n\n        case 7:\n          op = _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n\n            _.ops.push(op);\n\n            break;\n          }\n\n          if (t[2]) _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n      }\n\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nvar __spreadArray = this && this.__spreadArray || function (to, from) {\n  for (var i = 0, il = from.length, j = to.length; i < il; i++, j++) to[j] = from[i];\n\n  return to;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useConnectorConfig = void 0;\n\nvar react_1 = require(\"react\");\n\nvar connectors_1 = require(\"../connectors\");\n\nvar constants_1 = require(\"../constants\");\n/**\n * Loads previous user configuration from local storage.\n */\n\n\nvar loadPreviousConfig = function () {\n  var _a;\n\n  var _b;\n\n  var lastUsedNetworkName = constants_1.Mainnet.name;\n  var lastUsedAddress = null;\n  var lastUsedWalletType = constants_1.WalletTypes.Unauthenticated;\n  var lastUsedWalletArguments = [];\n\n  if (typeof localStorage !== 'undefined') {\n    var localLastUsedNetworkName = localStorage.getItem(constants_1.localStorageKeys.lastUsedNetwork);\n\n    if (localLastUsedNetworkName) {\n      lastUsedNetworkName = localLastUsedNetworkName;\n    }\n\n    var localLastUsedAddress = localStorage.getItem(constants_1.localStorageKeys.lastUsedAddress);\n\n    if (localLastUsedAddress) {\n      lastUsedAddress = localLastUsedAddress;\n    }\n\n    var localLastUsedWalletType = localStorage.getItem(constants_1.localStorageKeys.lastUsedWalletType);\n\n    if (localLastUsedWalletType) {\n      lastUsedWalletType = localLastUsedWalletType;\n    }\n\n    var localLastUsedWalletArguments = localStorage.getItem(constants_1.localStorageKeys.lastUsedWalletArguments);\n\n    if (localLastUsedWalletArguments) {\n      try {\n        lastUsedWalletArguments = JSON.parse(localLastUsedWalletArguments);\n      } catch (e) {\n        lastUsedWalletArguments = [];\n      }\n    }\n  }\n\n  var lastUsedNetwork = (_b = constants_1.DEFAULT_NETWORKS.find(function (n) {\n    return n.name === lastUsedNetworkName;\n  })) !== null && _b !== void 0 ? _b : constants_1.Mainnet;\n  var initialConnector;\n\n  if (lastUsedWalletType) {\n    try {\n      initialConnector = new ((_a = connectors_1.CONNECTOR_TYPES[lastUsedWalletType]).bind.apply(_a, __spreadArray([void 0, lastUsedNetwork], lastUsedWalletArguments)))();\n    } catch (e) {\n      initialConnector = new connectors_1.UnauthenticatedConnector(lastUsedNetwork);\n    }\n  } else {\n    initialConnector = new connectors_1.UnauthenticatedConnector(lastUsedNetwork);\n  }\n\n  return {\n    lastUsedNetworkName: lastUsedNetworkName,\n    lastUsedAddress: lastUsedAddress,\n    lastUsedWalletType: lastUsedWalletType,\n    lastUsedWalletArguments: lastUsedWalletArguments,\n    lastUsedNetwork: lastUsedNetwork,\n    initialConnector: initialConnector\n  };\n};\n\nvar useConnectorConfig = function (_a) {\n  var _b;\n\n  var networks = _a.networks;\n  var _c = react_1.useState(loadPreviousConfig())[0],\n      lastUsedAddress = _c.lastUsedAddress,\n      lastUsedNetworkName = _c.lastUsedNetworkName,\n      initialConnector = _c.initialConnector;\n\n  var _d = react_1.useState(lastUsedAddress),\n      address = _d[0],\n      setAddress = _d[1];\n\n  var initialNetwork = (_b = networks.find(function (n) {\n    return n.name === lastUsedNetworkName;\n  })) !== null && _b !== void 0 ? _b : networks[0];\n\n  if (!initialNetwork) {\n    throw new Error('Invalid network configuration');\n  }\n\n  var _e = react_1.useState(initialNetwork),\n      network = _e[0],\n      updateNetwork = _e[1];\n\n  var _f = react_1.useState(initialConnector),\n      connector = _f[0],\n      setConnector = _f[1];\n\n  var _g = react_1.useState(null),\n      connectionCallback = _g[0],\n      setConnectionCallback = _g[1]; // Update address whenever connector kit account changes\n\n\n  react_1.useEffect(function () {\n    var account = connector === null || connector === void 0 ? void 0 : connector.kit.defaultAccount;\n\n    if (account) {\n      setAddress(account);\n      localStorage.setItem(constants_1.localStorageKeys.lastUsedAddress, account);\n    }\n  }, [connector === null || connector === void 0 ? void 0 : connector.kit]); // Destroys the connector.\n\n  var destroy = react_1.useCallback(function () {\n    return __awaiter(void 0, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , connector.close()];\n\n          case 1:\n            _a.sent();\n\n            localStorage.removeItem(constants_1.localStorageKeys.lastUsedAddress);\n            localStorage.removeItem(constants_1.localStorageKeys.lastUsedWalletType);\n            localStorage.removeItem(constants_1.localStorageKeys.lastUsedWalletArguments);\n            setAddress(null);\n            setConnector(new connectors_1.UnauthenticatedConnector(network));\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  }, [network, connector]);\n  react_1.useEffect(function () {\n    if (localStorage.getItem(constants_1.localStorageKeys.lastUsedNetwork) === network.name) {\n      return;\n    }\n\n    localStorage.setItem(constants_1.localStorageKeys.lastUsedNetwork, network.name);\n    var ConnectorConstructor = connectors_1.CONNECTOR_TYPES[connector.type];\n\n    if (!ConnectorConstructor) {\n      return;\n    }\n\n    setConnector(function () {\n      try {\n        var lastUsedWalletArguments = JSON.parse(localStorage.getItem(constants_1.localStorageKeys.lastUsedWalletArguments) || '[]');\n        return new (ConnectorConstructor.bind.apply(ConnectorConstructor, __spreadArray([void 0, network], lastUsedWalletArguments)))();\n      } catch (e) {\n        return new ConnectorConstructor(network);\n      }\n    });\n  }, [connector, network]);\n  var connect = react_1.useCallback(function () {\n    return __awaiter(void 0, void 0, void 0, function () {\n      var connectionResultPromise, connector;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            connectionResultPromise = new Promise(function (resolve) {\n              var connectionResultCallback = function (x) {\n                return resolve(x);\n              }; // has to be like this and not like setConnectionCallback(connectionResultCallback)\n              // as React will try to run any function passed to set state\n\n\n              setConnectionCallback(function () {\n                return connectionResultCallback;\n              });\n            });\n            return [4\n            /*yield*/\n            , connectionResultPromise];\n\n          case 1:\n            connector = _a.sent();\n\n            if (connector === false) {\n              // dismissed\n              setConnectionCallback(null);\n              throw new Error('Connection cancelled');\n            }\n\n            if (connector.onNetworkChange) {\n              connector.onNetworkChange(function (chainId) {\n                var network = networks === null || networks === void 0 ? void 0 : networks.find(function (n) {\n                  return n.chainId === chainId;\n                });\n                network && updateNetwork(network);\n              });\n            }\n\n            setConnector(connector);\n            setConnectionCallback(null);\n            return [2\n            /*return*/\n            , connector];\n        }\n      });\n    });\n  }, [networks]);\n  return {\n    address: address,\n    network: network,\n    updateNetwork: updateNetwork,\n    connector: connector,\n    connectionCallback: connectionCallback,\n    connect: connect,\n    destroy: destroy\n  };\n};\n\nexports.useConnectorConfig = useConnectorConfig;","map":{"version":3,"sources":["../../src/utils/useConnectorConfig.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nvar __spreadArray = (this && this.__spreadArray) || function (to, from) {\n    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)\n        to[j] = from[i];\n    return to;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.useConnectorConfig = void 0;\nvar react_1 = require(\"react\");\nvar connectors_1 = require(\"../connectors\");\nvar constants_1 = require(\"../constants\");\n/**\n * Loads previous user configuration from local storage.\n */\nvar loadPreviousConfig = function () {\n    var _a;\n    var _b;\n    var lastUsedNetworkName = constants_1.Mainnet.name;\n    var lastUsedAddress = null;\n    var lastUsedWalletType = constants_1.WalletTypes.Unauthenticated;\n    var lastUsedWalletArguments = [];\n    if (typeof localStorage !== 'undefined') {\n        var localLastUsedNetworkName = localStorage.getItem(constants_1.localStorageKeys.lastUsedNetwork);\n        if (localLastUsedNetworkName) {\n            lastUsedNetworkName = localLastUsedNetworkName;\n        }\n        var localLastUsedAddress = localStorage.getItem(constants_1.localStorageKeys.lastUsedAddress);\n        if (localLastUsedAddress) {\n            lastUsedAddress = localLastUsedAddress;\n        }\n        var localLastUsedWalletType = localStorage.getItem(constants_1.localStorageKeys.lastUsedWalletType);\n        if (localLastUsedWalletType) {\n            lastUsedWalletType = localLastUsedWalletType;\n        }\n        var localLastUsedWalletArguments = localStorage.getItem(constants_1.localStorageKeys.lastUsedWalletArguments);\n        if (localLastUsedWalletArguments) {\n            try {\n                lastUsedWalletArguments = JSON.parse(localLastUsedWalletArguments);\n            }\n            catch (e) {\n                lastUsedWalletArguments = [];\n            }\n        }\n    }\n    var lastUsedNetwork = (_b = constants_1.DEFAULT_NETWORKS.find(function (n) { return n.name === lastUsedNetworkName; })) !== null && _b !== void 0 ? _b : constants_1.Mainnet;\n    var initialConnector;\n    if (lastUsedWalletType) {\n        try {\n            initialConnector = new ((_a = connectors_1.CONNECTOR_TYPES[lastUsedWalletType]).bind.apply(_a, __spreadArray([void 0, lastUsedNetwork], lastUsedWalletArguments)))();\n        }\n        catch (e) {\n            initialConnector = new connectors_1.UnauthenticatedConnector(lastUsedNetwork);\n        }\n    }\n    else {\n        initialConnector = new connectors_1.UnauthenticatedConnector(lastUsedNetwork);\n    }\n    return {\n        lastUsedNetworkName: lastUsedNetworkName,\n        lastUsedAddress: lastUsedAddress,\n        lastUsedWalletType: lastUsedWalletType,\n        lastUsedWalletArguments: lastUsedWalletArguments,\n        lastUsedNetwork: lastUsedNetwork,\n        initialConnector: initialConnector,\n    };\n};\nvar useConnectorConfig = function (_a) {\n    var _b;\n    var networks = _a.networks;\n    var _c = react_1.useState(loadPreviousConfig())[0], lastUsedAddress = _c.lastUsedAddress, lastUsedNetworkName = _c.lastUsedNetworkName, initialConnector = _c.initialConnector;\n    var _d = react_1.useState(lastUsedAddress), address = _d[0], setAddress = _d[1];\n    var initialNetwork = (_b = networks.find(function (n) { return n.name === lastUsedNetworkName; })) !== null && _b !== void 0 ? _b : networks[0];\n    if (!initialNetwork) {\n        throw new Error('Invalid network configuration');\n    }\n    var _e = react_1.useState(initialNetwork), network = _e[0], updateNetwork = _e[1];\n    var _f = react_1.useState(initialConnector), connector = _f[0], setConnector = _f[1];\n    var _g = react_1.useState(null), connectionCallback = _g[0], setConnectionCallback = _g[1];\n    // Update address whenever connector kit account changes\n    react_1.useEffect(function () {\n        var account = connector === null || connector === void 0 ? void 0 : connector.kit.defaultAccount;\n        if (account) {\n            setAddress(account);\n            localStorage.setItem(constants_1.localStorageKeys.lastUsedAddress, account);\n        }\n    }, [connector === null || connector === void 0 ? void 0 : connector.kit]);\n    // Destroys the connector.\n    var destroy = react_1.useCallback(function () { return __awaiter(void 0, void 0, void 0, function () {\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0: return [4 /*yield*/, connector.close()];\n                case 1:\n                    _a.sent();\n                    localStorage.removeItem(constants_1.localStorageKeys.lastUsedAddress);\n                    localStorage.removeItem(constants_1.localStorageKeys.lastUsedWalletType);\n                    localStorage.removeItem(constants_1.localStorageKeys.lastUsedWalletArguments);\n                    setAddress(null);\n                    setConnector(new connectors_1.UnauthenticatedConnector(network));\n                    return [2 /*return*/];\n            }\n        });\n    }); }, [network, connector]);\n    react_1.useEffect(function () {\n        if (localStorage.getItem(constants_1.localStorageKeys.lastUsedNetwork) === network.name) {\n            return;\n        }\n        localStorage.setItem(constants_1.localStorageKeys.lastUsedNetwork, network.name);\n        var ConnectorConstructor = connectors_1.CONNECTOR_TYPES[connector.type];\n        if (!ConnectorConstructor) {\n            return;\n        }\n        setConnector(function () {\n            try {\n                var lastUsedWalletArguments = JSON.parse(localStorage.getItem(constants_1.localStorageKeys.lastUsedWalletArguments) || '[]');\n                return new (ConnectorConstructor.bind.apply(ConnectorConstructor, __spreadArray([void 0, network], lastUsedWalletArguments)))();\n            }\n            catch (e) {\n                return new ConnectorConstructor(network);\n            }\n        });\n    }, [connector, network]);\n    var connect = react_1.useCallback(function () { return __awaiter(void 0, void 0, void 0, function () {\n        var connectionResultPromise, connector;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    connectionResultPromise = new Promise(function (resolve) {\n                        var connectionResultCallback = function (x) { return resolve(x); };\n                        // has to be like this and not like setConnectionCallback(connectionResultCallback)\n                        // as React will try to run any function passed to set state\n                        setConnectionCallback(function () { return connectionResultCallback; });\n                    });\n                    return [4 /*yield*/, connectionResultPromise];\n                case 1:\n                    connector = _a.sent();\n                    if (connector === false) {\n                        // dismissed\n                        setConnectionCallback(null);\n                        throw new Error('Connection cancelled');\n                    }\n                    if (connector.onNetworkChange) {\n                        connector.onNetworkChange(function (chainId) {\n                            var network = networks === null || networks === void 0 ? void 0 : networks.find(function (n) { return n.chainId === chainId; });\n                            network && updateNetwork(network);\n                        });\n                    }\n                    setConnector(connector);\n                    setConnectionCallback(null);\n                    return [2 /*return*/, connector];\n            }\n        });\n    }); }, [networks]);\n    return {\n        address: address,\n        network: network,\n        updateNetwork: updateNetwork,\n        connector: connector,\n        connectionCallback: connectionCallback,\n        connect: connect,\n        destroy: destroy,\n    };\n};\nexports.useConnectorConfig = useConnectorConfig;\n//# sourceMappingURL=useConnectorConfig.js.map"]},"metadata":{},"sourceType":"script"}