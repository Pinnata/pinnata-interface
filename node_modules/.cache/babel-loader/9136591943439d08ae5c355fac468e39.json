{"ast":null,"code":"var _jsxFileName = \"/Users/kylescott/src/nomspace-interface/src/pages/Farm/Supply/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Button, Card, Flex, Heading, Text } from \"theme-ui\";\nimport { CaretLeft } from \"phosphor-react\";\nimport { useERC } from \"src/hooks/useERC\";\nimport { useERCmulti } from \"src/hooks/useERCmulti\";\nimport { TokenInputForm } from \"src/components/TokenInputForm\";\nimport { atom, useSetRecoilState, useRecoilState } from 'recoil';\nimport { pageState, Page, poolState } from \"src/pages/Farm\";\nimport { showTabs } from \"src/components/Header\";\nimport { BlockText } from \"src/components/BlockText\";\nimport { Token } from \"src/utils/token\";\nimport { toWei, toBN } from \"web3-utils\";\nimport { lpToken } from \"src/config\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst emptyFarmState = {\n  tokenSupply: null,\n  lpSupply: null,\n  tokenBorrow: null,\n  lpBorrow: null\n};\nexport const farmState = atom({\n  key: 'farmState',\n  default: emptyFarmState\n});\nexport const Supply = () => {\n  _s();\n\n  const [pool] = useRecoilState(poolState);\n  const setPage = useSetRecoilState(pageState);\n  const setTab = useSetRecoilState(showTabs);\n  const [farm, setFarm] = useRecoilState(farmState);\n  const lpTok = new Token({ ...lpToken,\n    address: pool.lp\n  });\n  const [tokenStates, refetchTokenStates] = useERCmulti(pool.tokens);\n  const [amounts, setAmounts] = React.useState(Array(pool.tokens.length).fill(\"0\"));\n  const [lpAmount, setLPAmount] = React.useState(\"0\");\n  const [erc, refetchERC] = useERC(lpTok.address);\n\n  const continueButton = /*#__PURE__*/_jsxDEV(Button, {\n    onClick: () => {\n      setFarm({ ...farm,\n        tokenSupply: amounts.map(x => toWei(x)),\n        lpSupply: toWei(lpAmount)\n      });\n      console.log(farm, amounts);\n      setPage(Page.Borrow);\n    },\n    children: \"Continue\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n\n  let button = continueButton;\n\n  if (tokenStates) {\n    for (let i = 0; i < tokenStates.length; i += 1) {\n      if (tokenStates[i]) {\n        var _tokenStates$i;\n\n        const fmtCost = amounts[i] === \"\" ? \"0\" : amounts[i];\n        const amountBN = toBN(toWei(String(fmtCost)));\n\n        if ((_tokenStates$i = tokenStates[i]) === null || _tokenStates$i === void 0 ? void 0 : _tokenStates$i.balance.lt(amountBN)) {\n          button = /*#__PURE__*/_jsxDEV(Button, {\n            disabled: true,\n            children: \"Insufficient funds\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 20\n          }, this);\n        } else if (amounts.every(x => x === \"0\" || x === \"\") && (lpAmount === \"0\" || lpAmount === \"\")) {\n          button = /*#__PURE__*/_jsxDEV(Button, {\n            disabled: true,\n            children: \"Must supply\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 20\n          }, this);\n        }\n      }\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(Flex, {\n    sx: {\n      alignItems: \"center\",\n      flexDirection: \"column\"\n    },\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      sx: {\n        width: \"100%\",\n        maxWidth: \"800px\"\n      },\n      py: 4,\n      px: 3,\n      children: [/*#__PURE__*/_jsxDEV(Flex, {\n        onClick: () => {\n          setTab(true);\n          setPage(Page.Table);\n        },\n        sx: {\n          alignItems: \"center\",\n          cursor: \"pointer\"\n        },\n        mb: 4,\n        children: [/*#__PURE__*/_jsxDEV(CaretLeft, {\n          size: 28\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          children: \"Back\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Flex, {\n        mb: 4,\n        children: /*#__PURE__*/_jsxDEV(Heading, {\n          as: \"h2\",\n          mr: 2,\n          children: \"Farm\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Flex, {\n        sx: {\n          flexDirection: \"column\",\n          gap: \"25px\",\n          mb: 10\n        },\n        children: [/*#__PURE__*/_jsxDEV(BlockText, {\n          variant: \"primary\",\n          children: \"Supply\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this), pool.tokens.map((tok, index) => {\n          var _index;\n\n          return /*#__PURE__*/_jsxDEV(TokenInputForm, {\n            token: tok,\n            amount: amounts[index],\n            setAmount: s => setAmounts(amounts.map((x, i) => i === index ? s : x)),\n            balance: tokenStates && tokenStates[index] ? (_index = tokenStates[index]) === null || _index === void 0 ? void 0 : _index.balance : null\n          }, tok.address, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 13\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Flex, {\n        sx: {\n          mt: \"25px\"\n        },\n        children: /*#__PURE__*/_jsxDEV(BlockText, {\n          variant: \"primary\",\n          children: \"Supply LP Token\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TokenInputForm, {\n        token: lpTok,\n        amount: lpAmount,\n        setAmount: setLPAmount,\n        balance: erc ? erc.balance : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Flex, {\n        sx: {\n          justifyContent: \"center\",\n          mt: 6\n        },\n        children: button\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Supply, \"Azz8g67xlD9lnX1FwObTCmFU60s=\", false, function () {\n  return [useRecoilState, useSetRecoilState, useSetRecoilState, useRecoilState, useERCmulti, useERC];\n});\n\n_c = Supply;\n\nvar _c;\n\n$RefreshReg$(_c, \"Supply\");","map":{"version":3,"sources":["/Users/kylescott/src/nomspace-interface/src/pages/Farm/Supply/index.tsx"],"names":["React","Button","Card","Flex","Heading","Text","CaretLeft","useERC","useERCmulti","TokenInputForm","atom","useSetRecoilState","useRecoilState","pageState","Page","poolState","showTabs","BlockText","Token","toWei","toBN","lpToken","emptyFarmState","tokenSupply","lpSupply","tokenBorrow","lpBorrow","farmState","key","default","Supply","pool","setPage","setTab","farm","setFarm","lpTok","address","lp","tokenStates","refetchTokenStates","tokens","amounts","setAmounts","useState","Array","length","fill","lpAmount","setLPAmount","erc","refetchERC","continueButton","map","x","console","log","Borrow","button","i","fmtCost","amountBN","String","balance","lt","every","alignItems","flexDirection","width","maxWidth","Table","cursor","gap","mb","tok","index","s","mt","justifyContent"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {\n  Button,\n  Card,\n  Flex,\n  Heading,\n  Text,\n} from \"theme-ui\";\nimport { CaretLeft } from \"phosphor-react\";\nimport { useERC } from \"src/hooks/useERC\";\nimport { useERCmulti } from \"src/hooks/useERCmulti\";\nimport { TokenInputForm } from \"src/components/TokenInputForm\";\nimport {  RecoilRoot,  atom,  selector,  useSetRecoilState, useRecoilState } from 'recoil';\nimport { pageState, Page, poolProps, poolState } from \"src/pages/Farm\";\nimport { showTabs } from \"src/components/Header\";\nimport { BlockText } from \"src/components/BlockText\";\nimport { Token } from \"src/utils/token\";\nimport { toWei, toBN } from \"web3-utils\";\nimport { lpToken } from \"src/config\";\nimport BN from 'bn.js';\n\n\nexport interface farmProps {\n  tokenSupply: BN[] | null;\n  lpSupply: BN | null;\n  tokenBorrow: BN[] | null;\n  lpBorrow: BN | null;\n}\n\nconst emptyFarmState : farmProps = {\n  tokenSupply: null,\n  lpSupply: null,\n  tokenBorrow: null,\n  lpBorrow: null,\n}\n\nexport const farmState = atom({\n  key: 'farmState',\n  default: emptyFarmState\n})\n\nexport const Supply: React.FC = () => {\n  const [pool] = useRecoilState(poolState);\n  const setPage = useSetRecoilState(pageState)\n  const setTab = useSetRecoilState(showTabs);\n  const [farm, setFarm] = useRecoilState(farmState);\n\n  const lpTok: Token = new Token({\n    ...lpToken,\n    address: pool.lp,\n  });\n  \n  const [tokenStates, refetchTokenStates] = useERCmulti(pool.tokens)\n  const [amounts, setAmounts] = React.useState(Array(pool.tokens.length).fill(\"0\"))\n\n  const [lpAmount, setLPAmount] = React.useState(\"0\")\n  const [erc, refetchERC] = useERC(lpTok.address);\n\n  const continueButton = (\n    <Button\n      onClick={() => {\n        setFarm({\n          ...farm,\n            tokenSupply: amounts.map((x) => toWei(x)),\n            lpSupply: toWei(lpAmount),\n          });\n        console.log(farm, amounts)\n        setPage(Page.Borrow); \n      }}\n      >\n        Continue\n      </Button>\n  )\n\n  let button = continueButton;\n  if (tokenStates) {\n    for (let i = 0; i < tokenStates.length; i += 1) {\n      if (tokenStates[i]){\n        const fmtCost = amounts[i] === \"\" ? \"0\" : amounts[i];\n        const amountBN = toBN(toWei(String(fmtCost)))\n        if (tokenStates[i]?.balance.lt(amountBN)) {\n          button = <Button disabled={true}>Insufficient funds</Button>;\n        } else if (amounts.every((x) => x === \"0\" || x === \"\") && (lpAmount === \"0\" || lpAmount === \"\")) {\n          button = <Button disabled={true}>Must supply</Button>;\n        }\n      }\n    }\n  }\n\n  return (\n    <Flex sx={{ alignItems: \"center\", flexDirection: \"column\" }}>\n      <Card sx={{ width: \"100%\", maxWidth: \"800px\" }} py={4} px={3}>\n        <Flex\n          onClick={() => {\n            setTab(true);\n            setPage(Page.Table);\n          }}\n          sx={{ alignItems: \"center\", cursor: \"pointer\" }}\n          mb={4}\n        >\n          <CaretLeft size={28} />\n          <Text>Back</Text>\n        </Flex>\n        <Flex mb={4}>\n          <Heading as=\"h2\" mr={2}>\n            Farm\n          </Heading>\n        </Flex>\n        <Flex sx={{flexDirection: \"column\", gap: \"25px\", mb: 10}}>\n          <BlockText variant=\"primary\">Supply</BlockText>\n          {pool.tokens.map((tok, index) => \n            <TokenInputForm key={tok.address} token={tok} amount={amounts[index]}\n             setAmount={(s: string) => setAmounts(amounts.map((x, i) => i === index ? s : x))} \n             balance={tokenStates && tokenStates![index]! ? tokenStates![index]?.balance! : null}\n            />\n          )}\n        </Flex>\n        <Flex sx={{mt: \"25px\"}}>\n          <BlockText variant=\"primary\">Supply LP Token</BlockText>\n        </Flex>\n        <TokenInputForm token={lpTok} amount={lpAmount} setAmount={setLPAmount} balance={erc ? erc.balance : null}/>\n        <Flex sx={{ justifyContent: \"center\", mt: 6 }}>\n          {button}\n        </Flex>\n      </Card>\n    </Flex>\n  );\n};"]},"metadata":{},"sourceType":"module"}