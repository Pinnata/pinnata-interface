{"ast":null,"code":"var _jsxFileName = \"/Users/kylescott/src/nomspace-interface/src/pages/Position/PosTable.tsx\",\n    _s = $RefreshSig$();\n\nimport { css } from \"@emotion/react\";\nimport { FARMS } from \"src/config\";\nimport { Spinner, Flex } from \"theme-ui\";\nimport { SimpleTable } from \"src/components/SimpleTable\";\nimport { useContractKit } from \"@celo-tools/use-contractkit\";\nimport React from \"react\";\nimport { toBN } from \"web3-utils\";\nimport BANK_ABI from \"src/abis/dahlia_contracts/HomoraBank.json\";\nimport { getAddress } from \"ethers/lib/utils\";\nimport { Bank } from \"src/config\";\nimport { useAsyncState } from \"src/hooks/useAsyncState\";\nimport { Pos } from \"./Pos\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const PosTable = () => {\n  _s();\n\n  const {\n    kit,\n    address,\n    network\n  } = useContractKit();\n  const bank = React.useMemo(() => new kit.web3.eth.Contract(BANK_ABI.abi, getAddress(Bank[network.chainId])), [kit, network]);\n  const call = React.useCallback(async () => {\n    try {\n      let posInfo = [];\n      const nextPositionId = await bank.methods.nextPositionId().call();\n\n      for (let i = 1; i < Number(nextPositionId); i += 1) {\n        posInfo.push({ ...(await bank.methods.getPositionInfo(i).call()),\n          positonId: i\n        });\n      }\n\n      return posInfo;\n    } catch (error) {\n      console.log(error);\n    }\n  }, [bank]);\n  const [info] = useAsyncState(null, call);\n  return /*#__PURE__*/_jsxDEV(SimpleTable, {\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          css: css`\n            text-align: left !important;\n          `,\n          children: \"Pool\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Borrow Value\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Total Value\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Debt Ratio \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"APY\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: info ? info.filter(pos => pos.owner === address).flatMap(pos => {\n        const active = FARMS.filter(farm => getAddress(farm.lp) === getAddress(toBN(pos.collId).toString(16)));\n        return {\n          pos,\n          active\n        };\n      }).map(info => /*#__PURE__*/_jsxDEV(Pos, {\n        positionId: info.pos.positonId,\n        pool: info.active[0]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)) : /*#__PURE__*/_jsxDEV(Flex, {\n        sx: {\n          alignItems: \"center\",\n          justifyContent: \"center\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 8\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PosTable, \"BFwgJgcq/nYLGU9LOjumjDOZslE=\", false, function () {\n  return [useContractKit, useAsyncState];\n});\n\n_c = PosTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"PosTable\");","map":{"version":3,"sources":["/Users/kylescott/src/nomspace-interface/src/pages/Position/PosTable.tsx"],"names":["css","FARMS","Spinner","Flex","SimpleTable","useContractKit","React","toBN","BANK_ABI","getAddress","Bank","useAsyncState","Pos","PosTable","kit","address","network","bank","useMemo","web3","eth","Contract","abi","chainId","call","useCallback","posInfo","nextPositionId","methods","i","Number","push","getPositionInfo","positonId","error","console","log","info","filter","pos","owner","flatMap","active","farm","lp","collId","toString","map","alignItems","justifyContent"],"mappings":"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","sourcesContent":["import { css } from \"@emotion/react\";\nimport { FarmPool } from \"src/pages/Farm/FarmPool\";\nimport { FARMS } from \"src/config\";\nimport {\n  Spinner,\n  Flex,\n} from \"theme-ui\";\nimport { SimpleTable } from \"src/components/SimpleTable\"\nimport { useContractKit } from \"@celo-tools/use-contractkit\";\nimport React from \"react\";\nimport { AbiItem, toBN } from \"web3-utils\";\nimport { HomoraBank } from \"src/generated/HomoraBank\";\nimport BANK_ABI from \"src/abis/dahlia_contracts/HomoraBank.json\";\nimport { getAddress } from \"ethers/lib/utils\";\nimport { Bank } from \"src/config\";\nimport { useAsyncState } from \"src/hooks/useAsyncState\";\nimport { Pos } from \"./Pos\";\n\n\nexport const PosTable: React.FC = () => {\n\n  const { kit, address, network } = useContractKit();\n\n  const bank = React.useMemo(() => (new kit.web3.eth.Contract(\n    BANK_ABI.abi as AbiItem[],\n    getAddress(Bank[network.chainId])\n  ) as unknown) as HomoraBank, [kit, network]); \n\n  const call = React.useCallback(async () => {\n    try {\n      let posInfo = []\n      const nextPositionId = await bank.methods.nextPositionId().call(); \n      for (let i = 1; i < Number(nextPositionId); i += 1) {\n        posInfo.push({...await bank.methods.getPositionInfo(i).call(), positonId: i})\n      }\n      return posInfo;  \n    } catch (error) {\n        console.log(error)\n    }  \n}, [bank])\n\n  const [info] = useAsyncState(null, call);\n\n  return (\n    <SimpleTable>\n    <thead>\n      <tr>\n        <th\n          css={css`\n            text-align: left !important;\n          `}\n        >\n          Pool\n        </th>\n        <th>Borrow Value</th>\n        <th>Total Value</th>\n        <th>Debt Ratio </th>\n        <th>APY</th>\n        <th />\n      </tr>\n    </thead>\n    <tbody>\n      { info ? \n        info.filter((pos) => pos.owner === address)\n        .flatMap((pos) => {\n          const active = FARMS\n        .filter((farm) => getAddress(farm.lp) === \n        getAddress(toBN(pos.collId).toString(16)))\n        return {pos, active}\n      }).map((info) => (\n        <Pos positionId={info.pos.positonId} pool={info.active[0]!} />\n      )) : \n      (<Flex sx={{ alignItems: \"center\", justifyContent: \"center\"}}>\n        <Spinner />\n      </Flex>)\n      }\n      \n    </tbody>\n  </SimpleTable>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}