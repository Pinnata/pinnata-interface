{"ast":null,"code":"var _jsxFileName = \"/Users/kylescott/src/nomspace-interface/src/pages/Earn/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useNom } from \"src/hooks/useNom\";\nimport { useContractKit } from \"@celo-tools/use-contractkit\";\nimport { useHistory } from \"react-router-dom\";\nimport { Box, Button, Card, Flex, Heading, Spinner } from \"theme-ui\";\nimport { ethers } from \"ethers\";\nimport { BlockText } from \"src/components/BlockText\";\nimport { shortenAddress } from \"src/utils/address\";\nimport NomMetadata from \"src/abis/nomspace/Nom.json\";\nimport { DEFAULT_GAS_PRICE, NOM } from \"src/config\";\nimport { toastTx } from \"src/utils/toastTx\";\nimport { toast } from \"react-toastify\";\nimport { isAddress } from \"ethers/lib/utils\";\nimport { QrCode } from \"phosphor-react\";\nimport { QRNameModal } from \"src/components/QRNameModal\";\nimport { SearchBar } from \"src/components/SearchBar\";\nimport { ZERO_ADDRESS } from \"src/constants\";\nimport { formatName } from \"src/utils/name\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Earn = () => {\n  _s();\n\n  const name = \"kyle\";\n  const nameFormatted = formatName(name);\n  const {\n    address,\n    getConnectedKit,\n    network\n  } = useContractKit();\n  const [nom, refetchNom] = useNom(nameFormatted);\n  const [changeResLoading, setChangeResLoading] = React.useState(false);\n  const [changeOwnerLoading, setChangeOwnerLoading] = React.useState(false);\n  const [showQR, setShowQR] = React.useState(false);\n  const history = useHistory();\n\n  if (nom == null) {\n    return /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 12\n    }, this);\n  }\n\n  const isOwner = address && nom.owner.toLowerCase() === address.toLowerCase();\n  return /*#__PURE__*/_jsxDEV(Flex, {\n    children: [/*#__PURE__*/_jsxDEV(Flex, {\n      sx: {\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        mt: [\"33%\", \"10%\"]\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          fill: \"text\"\n        },\n        children: /*#__PURE__*/_jsxDEV(LogoIcon, {\n          size: 128\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Heading, {\n        as: \"h1\",\n        mb: 4,\n        children: \"Nomspace\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(SearchBar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Flex, {\n      sx: {\n        alignItems: \"center\",\n        flexDirection: \"column\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          width: \"100%\",\n          maxWidth: \"800px\"\n        },\n        mb: 4,\n        children: /*#__PURE__*/_jsxDEV(SearchBar, {\n          size: \"small\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Card, {\n        sx: {\n          width: \"100%\",\n          maxWidth: \"800px\"\n        },\n        py: 4,\n        px: 3,\n        children: [/*#__PURE__*/_jsxDEV(Flex, {\n          mb: 4,\n          children: [/*#__PURE__*/_jsxDEV(Heading, {\n            as: \"h2\",\n            mr: 2,\n            children: [name, \".nom\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 11\n          }, this), nom.resolution !== ZERO_ADDRESS && /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              cursor: \"pointer\"\n            },\n            onClick: () => setShowQR(true),\n            children: /*#__PURE__*/_jsxDEV(QrCode, {\n              size: 32\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(BlockText, {\n          variant: \"primary\",\n          children: \"Resolution\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(BlockText, {\n          mb: 2,\n          children: shortenAddress(nom.resolution, 5)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 9\n        }, this), changeResLoading ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this) : /*#__PURE__*/_jsxDEV(Button, {\n          onClick: async () => {\n            const kit = await getConnectedKit(); // kit is connected to a wallet\n\n            const nom = new kit.web3.eth.Contract(NomMetadata.abi, NOM[network.chainId]);\n            const nextResolution = prompt(\"Enter new owner address\");\n\n            if (!nextResolution || !isAddress(nextResolution)) {\n              alert(\"Invalid address. Please try again.\");\n              return;\n            }\n\n            try {\n              setChangeResLoading(true);\n              const tx = await nom.methods.changeResolution(ethers.utils.formatBytes32String(nameFormatted), nextResolution).send({\n                from: kit.defaultAccount,\n                gasPrice: DEFAULT_GAS_PRICE,\n                gas: 2e7\n              });\n              toastTx(tx.transactionHash);\n              refetchNom();\n            } catch (e) {\n              toast(e.message);\n            } finally {\n              setChangeResLoading(false);\n            }\n          },\n          mb: 4,\n          disabled: !isOwner,\n          children: \"Change\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(BlockText, {\n          variant: \"primary\",\n          children: \"Owner\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(BlockText, {\n          mb: 2,\n          children: shortenAddress(nom.owner, 5)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 9\n        }, this), changeOwnerLoading ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this) : /*#__PURE__*/_jsxDEV(Button, {\n          onClick: async () => {\n            const kit = await getConnectedKit(); // kit is connected to a wallet\n\n            const nom = new kit.web3.eth.Contract(NomMetadata.abi, NOM[network.chainId]);\n            const nextOwner = prompt(\"Enter new owner address\");\n\n            if (!nextOwner || !isAddress(nextOwner)) {\n              alert(\"Invalid address. Please try again.\");\n              return;\n            }\n\n            try {\n              setChangeOwnerLoading(true);\n              const tx = await nom.methods.changeNameOwner(ethers.utils.formatBytes32String(nameFormatted), nextOwner).send({\n                from: kit.defaultAccount,\n                gasPrice: DEFAULT_GAS_PRICE,\n                gas: 2e7\n              });\n              toastTx(tx.transactionHash);\n              refetchNom();\n            } catch (e) {\n              toast(e.message);\n            } finally {\n              setChangeOwnerLoading(false);\n            }\n          },\n          mb: 4,\n          disabled: !isOwner,\n          children: \"Transfer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(BlockText, {\n          variant: \"primary\",\n          children: \"Expiration\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(BlockText, {\n          mb: 2,\n          children: new Date(parseInt(nom.expiration) * 1000).toLocaleDateString(\"en-US\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 9\n        }, this), nom.owner !== ZERO_ADDRESS && isOwner && /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => {\n            history.push(`/search/${name}/extend`);\n          },\n          children: \"Extend\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Flex, {\n          sx: {\n            justifyContent: \"center\",\n            mt: 6\n          },\n          children: nom.owner === ZERO_ADDRESS ? /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => {\n              history.push(`/search/${name}/reserve`);\n            },\n            children: \"Reserve\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 13\n          }, this) : /*#__PURE__*/_jsxDEV(BlockText, {\n            children: \"Name has already been reserved.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 7\n      }, this), nom.resolution && nom.resolution !== ZERO_ADDRESS && /*#__PURE__*/_jsxDEV(QRNameModal, {\n        name: name,\n        address: nom.resolution,\n        isOpen: showQR,\n        setIsOpen: setShowQR\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Earn, \"2O3zP37J0sO/Spw4OWPYICPkrRs=\", false, function () {\n  return [useContractKit, useNom, useHistory];\n});\n\n_c = Earn;\n\nvar _c;\n\n$RefreshReg$(_c, \"Earn\");","map":{"version":3,"sources":["/Users/kylescott/src/nomspace-interface/src/pages/Earn/index.tsx"],"names":["React","useNom","useContractKit","useHistory","Box","Button","Card","Flex","Heading","Spinner","ethers","BlockText","shortenAddress","NomMetadata","DEFAULT_GAS_PRICE","NOM","toastTx","toast","isAddress","QrCode","QRNameModal","SearchBar","ZERO_ADDRESS","formatName","Earn","name","nameFormatted","address","getConnectedKit","network","nom","refetchNom","changeResLoading","setChangeResLoading","useState","changeOwnerLoading","setChangeOwnerLoading","showQR","setShowQR","history","isOwner","owner","toLowerCase","flexDirection","alignItems","justifyContent","mt","fill","width","maxWidth","resolution","cursor","kit","web3","eth","Contract","abi","chainId","nextResolution","prompt","alert","tx","methods","changeResolution","utils","formatBytes32String","send","from","defaultAccount","gasPrice","gas","transactionHash","e","message","nextOwner","changeNameOwner","Date","parseInt","expiration","toLocaleDateString","push"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,kBAAvB;AACA,SAASC,cAAT,QAA+B,6BAA/B;AACA,SAAoBC,UAApB,QAAsC,kBAAtC;AACA,SAASC,GAAT,EAAcC,MAAd,EAAsBC,IAAtB,EAA4BC,IAA5B,EAAkCC,OAAlC,EAA2CC,OAA3C,QAA0D,UAA1D;AACA,SAASC,MAAT,QAAuB,QAAvB;AACA,SAASC,SAAT,QAA0B,0BAA1B;AACA,SAASC,cAAT,QAA+B,mBAA/B;AACA,OAAOC,WAAP,MAAwB,4BAAxB;AAEA,SAASC,iBAAT,EAA4BC,GAA5B,QAAuC,YAAvC;AAEA,SAASC,OAAT,QAAwB,mBAAxB;AACA,SAASC,KAAT,QAAsB,gBAAtB;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,SAASC,MAAT,QAAuB,gBAAvB;AACA,SAASC,WAAT,QAA4B,4BAA5B;AACA,SAASC,SAAT,QAA0B,0BAA1B;AACA,SAASC,YAAT,QAA6B,eAA7B;AACA,SAASC,UAAT,QAA2B,gBAA3B;;AAEA,OAAO,MAAMC,IAAc,GAAG,MAAM;AAAA;;AAClC,QAAMC,IAAI,GAAG,MAAb;AACA,QAAMC,aAAa,GAAGH,UAAU,CAACE,IAAD,CAAhC;AAEA,QAAM;AAAEE,IAAAA,OAAF;AAAWC,IAAAA,eAAX;AAA4BC,IAAAA;AAA5B,MAAwC3B,cAAc,EAA5D;AACA,QAAM,CAAC4B,GAAD,EAAMC,UAAN,IAAoB9B,MAAM,CAACyB,aAAD,CAAhC;AACA,QAAM,CAACM,gBAAD,EAAmBC,mBAAnB,IAA0CjC,KAAK,CAACkC,QAAN,CAAe,KAAf,CAAhD;AACA,QAAM,CAACC,kBAAD,EAAqBC,qBAArB,IAA8CpC,KAAK,CAACkC,QAAN,CAAe,KAAf,CAApD;AACA,QAAM,CAACG,MAAD,EAASC,SAAT,IAAsBtC,KAAK,CAACkC,QAAN,CAAe,KAAf,CAA5B;AACA,QAAMK,OAAO,GAAGpC,UAAU,EAA1B;;AAEA,MAAI2B,GAAG,IAAI,IAAX,EAAiB;AACf,wBAAO,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AACD,QAAMU,OAAO,GAAGb,OAAO,IAAIG,GAAG,CAACW,KAAJ,CAAUC,WAAV,OAA4Bf,OAAO,CAACe,WAAR,EAAvD;AAEA,sBACE,QAAC,IAAD;AAAA,4BACA,QAAC,IAAD;AACE,MAAA,EAAE,EAAE;AACFC,QAAAA,aAAa,EAAE,QADb;AAEFC,QAAAA,UAAU,EAAE,QAFV;AAGFC,QAAAA,cAAc,EAAE,QAHd;AAIFC,QAAAA,EAAE,EAAE,CAAC,KAAD,EAAQ,KAAR;AAJF,OADN;AAAA,8BAQE,QAAC,GAAD;AAAK,QAAA,EAAE,EAAE;AAAEC,UAAAA,IAAI,EAAE;AAAR,SAAT;AAAA,+BACE,QAAC,QAAD;AAAU,UAAA,IAAI,EAAE;AAAhB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cARF,eAWE,QAAC,OAAD;AAAS,QAAA,EAAE,EAAC,IAAZ;AAAiB,QAAA,EAAE,EAAE,CAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAXF,eAcE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,cAdF;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,eAiBA,QAAC,IAAD;AAAM,MAAA,EAAE,EAAE;AAAEH,QAAAA,UAAU,EAAE,QAAd;AAAwBD,QAAAA,aAAa,EAAE;AAAvC,OAAV;AAAA,8BACE,QAAC,GAAD;AAAK,QAAA,EAAE,EAAE;AAAEK,UAAAA,KAAK,EAAE,MAAT;AAAiBC,UAAAA,QAAQ,EAAE;AAA3B,SAAT;AAA+C,QAAA,EAAE,EAAE,CAAnD;AAAA,+BACE,QAAC,SAAD;AAAW,UAAA,IAAI,EAAC;AAAhB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAIE,QAAC,IAAD;AAAM,QAAA,EAAE,EAAE;AAAED,UAAAA,KAAK,EAAE,MAAT;AAAiBC,UAAAA,QAAQ,EAAE;AAA3B,SAAV;AAAgD,QAAA,EAAE,EAAE,CAApD;AAAuD,QAAA,EAAE,EAAE,CAA3D;AAAA,gCACE,QAAC,IAAD;AAAM,UAAA,EAAE,EAAE,CAAV;AAAA,kCACE,QAAC,OAAD;AAAS,YAAA,EAAE,EAAC,IAAZ;AAAiB,YAAA,EAAE,EAAE,CAArB;AAAA,uBACGxB,IADH;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAIGK,GAAG,CAACoB,UAAJ,KAAmB5B,YAAnB,iBACC,QAAC,GAAD;AAAK,YAAA,EAAE,EAAE;AAAE6B,cAAAA,MAAM,EAAE;AAAV,aAAT;AAAgC,YAAA,OAAO,EAAE,MAAMb,SAAS,CAAC,IAAD,CAAxD;AAAA,mCACE,QAAC,MAAD;AAAQ,cAAA,IAAI,EAAE;AAAd;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBALJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAWE,QAAC,SAAD;AAAW,UAAA,OAAO,EAAC,SAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAXF,eAYE,QAAC,SAAD;AAAW,UAAA,EAAE,EAAE,CAAf;AAAA,oBAAmB1B,cAAc,CAACkB,GAAG,CAACoB,UAAL,EAAiB,CAAjB;AAAjC;AAAA;AAAA;AAAA;AAAA,gBAZF,EAaGlB,gBAAgB,gBACf,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,gBADe,gBAGf,QAAC,MAAD;AACE,UAAA,OAAO,EAAE,YAAY;AACnB,kBAAMoB,GAAG,GAAG,MAAMxB,eAAe,EAAjC,CADmB,CAEnB;;AACA,kBAAME,GAAG,GAAG,IAAIsB,GAAG,CAACC,IAAJ,CAASC,GAAT,CAAaC,QAAjB,CACV1C,WAAW,CAAC2C,GADF,EAEVzC,GAAG,CAACc,OAAO,CAAC4B,OAAT,CAFO,CAAZ;AAIA,kBAAMC,cAAc,GAAGC,MAAM,CAAC,yBAAD,CAA7B;;AACA,gBAAI,CAACD,cAAD,IAAmB,CAACxC,SAAS,CAACwC,cAAD,CAAjC,EAAmD;AACjDE,cAAAA,KAAK,CAAC,oCAAD,CAAL;AACA;AACD;;AAED,gBAAI;AACF3B,cAAAA,mBAAmB,CAAC,IAAD,CAAnB;AACA,oBAAM4B,EAAE,GAAG,MAAM/B,GAAG,CAACgC,OAAJ,CACdC,gBADc,CAEbrD,MAAM,CAACsD,KAAP,CAAaC,mBAAb,CAAiCvC,aAAjC,CAFa,EAGbgC,cAHa,EAKdQ,IALc,CAKT;AACJC,gBAAAA,IAAI,EAAEf,GAAG,CAACgB,cADN;AAEJC,gBAAAA,QAAQ,EAAEvD,iBAFN;AAGJwD,gBAAAA,GAAG,EAAE;AAHD,eALS,CAAjB;AAUAtD,cAAAA,OAAO,CAAC6C,EAAE,CAACU,eAAJ,CAAP;AACAxC,cAAAA,UAAU;AACX,aAdD,CAcE,OAAOyC,CAAP,EAAU;AACVvD,cAAAA,KAAK,CAACuD,CAAC,CAACC,OAAH,CAAL;AACD,aAhBD,SAgBU;AACRxC,cAAAA,mBAAmB,CAAC,KAAD,CAAnB;AACD;AACF,WAjCH;AAkCE,UAAA,EAAE,EAAE,CAlCN;AAmCE,UAAA,QAAQ,EAAE,CAACO,OAnCb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAhBJ,eAwDE,QAAC,SAAD;AAAW,UAAA,OAAO,EAAC,SAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAxDF,eAyDE,QAAC,SAAD;AAAW,UAAA,EAAE,EAAE,CAAf;AAAA,oBAAmB5B,cAAc,CAACkB,GAAG,CAACW,KAAL,EAAY,CAAZ;AAAjC;AAAA;AAAA;AAAA;AAAA,gBAzDF,EA0DGN,kBAAkB,gBACjB,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,gBADiB,gBAGjB,QAAC,MAAD;AACE,UAAA,OAAO,EAAE,YAAY;AACnB,kBAAMiB,GAAG,GAAG,MAAMxB,eAAe,EAAjC,CADmB,CAEnB;;AACA,kBAAME,GAAG,GAAG,IAAIsB,GAAG,CAACC,IAAJ,CAASC,GAAT,CAAaC,QAAjB,CACV1C,WAAW,CAAC2C,GADF,EAEVzC,GAAG,CAACc,OAAO,CAAC4B,OAAT,CAFO,CAAZ;AAIA,kBAAMiB,SAAS,GAAGf,MAAM,CAAC,yBAAD,CAAxB;;AACA,gBAAI,CAACe,SAAD,IAAc,CAACxD,SAAS,CAACwD,SAAD,CAA5B,EAAyC;AACvCd,cAAAA,KAAK,CAAC,oCAAD,CAAL;AACA;AACD;;AAED,gBAAI;AACFxB,cAAAA,qBAAqB,CAAC,IAAD,CAArB;AACA,oBAAMyB,EAAE,GAAG,MAAM/B,GAAG,CAACgC,OAAJ,CACda,eADc,CAEbjE,MAAM,CAACsD,KAAP,CAAaC,mBAAb,CAAiCvC,aAAjC,CAFa,EAGbgD,SAHa,EAKdR,IALc,CAKT;AACJC,gBAAAA,IAAI,EAAEf,GAAG,CAACgB,cADN;AAEJC,gBAAAA,QAAQ,EAAEvD,iBAFN;AAGJwD,gBAAAA,GAAG,EAAE;AAHD,eALS,CAAjB;AAUAtD,cAAAA,OAAO,CAAC6C,EAAE,CAACU,eAAJ,CAAP;AACAxC,cAAAA,UAAU;AACX,aAdD,CAcE,OAAOyC,CAAP,EAAU;AACVvD,cAAAA,KAAK,CAACuD,CAAC,CAACC,OAAH,CAAL;AACD,aAhBD,SAgBU;AACRrC,cAAAA,qBAAqB,CAAC,KAAD,CAArB;AACD;AACF,WAjCH;AAkCE,UAAA,EAAE,EAAE,CAlCN;AAmCE,UAAA,QAAQ,EAAE,CAACI,OAnCb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBA7DJ,eAqGE,QAAC,SAAD;AAAW,UAAA,OAAO,EAAC,SAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBArGF,eAsGE,QAAC,SAAD;AAAW,UAAA,EAAE,EAAE,CAAf;AAAA,oBACG,IAAIoC,IAAJ,CAASC,QAAQ,CAAC/C,GAAG,CAACgD,UAAL,CAAR,GAA2B,IAApC,EAA0CC,kBAA1C,CACC,OADD;AADH;AAAA;AAAA;AAAA;AAAA,gBAtGF,EA2GGjD,GAAG,CAACW,KAAJ,KAAcnB,YAAd,IAA8BkB,OAA9B,iBACG,QAAC,MAAD;AACE,UAAA,OAAO,EAAE,MAAM;AACbD,YAAAA,OAAO,CAACyC,IAAR,CAAc,WAAUvD,IAAK,SAA7B;AACD,WAHH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBA5GN,eAoHE,QAAC,IAAD;AAAM,UAAA,EAAE,EAAE;AAAEoB,YAAAA,cAAc,EAAE,QAAlB;AAA4BC,YAAAA,EAAE,EAAE;AAAhC,WAAV;AAAA,oBACGhB,GAAG,CAACW,KAAJ,KAAcnB,YAAd,gBACC,QAAC,MAAD;AACE,YAAA,OAAO,EAAE,MAAM;AACbiB,cAAAA,OAAO,CAACyC,IAAR,CAAc,WAAUvD,IAAK,UAA7B;AACD,aAHH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADD,gBASC,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAVJ;AAAA;AAAA;AAAA;AAAA,gBApHF;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,EAsIGK,GAAG,CAACoB,UAAJ,IAAkBpB,GAAG,CAACoB,UAAJ,KAAmB5B,YAArC,iBACC,QAAC,WAAD;AACE,QAAA,IAAI,EAAEG,IADR;AAEE,QAAA,OAAO,EAAEK,GAAG,CAACoB,UAFf;AAGE,QAAA,MAAM,EAAEb,MAHV;AAIE,QAAA,SAAS,EAAEC;AAJb;AAAA;AAAA;AAAA;AAAA,cAvIJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAjBA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAmKD,CAnLM;;GAAMd,I;UAImCtB,c,EACpBD,M,EAIVE,U;;;KATLqB,I","sourcesContent":["import React from \"react\";\nimport { useNom } from \"src/hooks/useNom\";\nimport { useContractKit } from \"@celo-tools/use-contractkit\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport { Box, Button, Card, Flex, Heading, Spinner } from \"theme-ui\";\nimport { ethers } from \"ethers\";\nimport { BlockText } from \"src/components/BlockText\";\nimport { shortenAddress } from \"src/utils/address\";\nimport NomMetadata from \"src/abis/nomspace/Nom.json\";\nimport { Nom } from \"src/generated/Nom\";\nimport { DEFAULT_GAS_PRICE, NOM } from \"src/config\";\nimport { AbiItem } from \"web3-utils\";\nimport { toastTx } from \"src/utils/toastTx\";\nimport { toast } from \"react-toastify\";\nimport { isAddress } from \"ethers/lib/utils\";\nimport { QrCode } from \"phosphor-react\";\nimport { QRNameModal } from \"src/components/QRNameModal\";\nimport { SearchBar } from \"src/components/SearchBar\";\nimport { ZERO_ADDRESS } from \"src/constants\";\nimport { formatName } from \"src/utils/name\";\n\nexport const Earn: React.FC = () => {\n  const name = \"kyle\"\n  const nameFormatted = formatName(name);\n\n  const { address, getConnectedKit, network } = useContractKit();\n  const [nom, refetchNom] = useNom(nameFormatted);\n  const [changeResLoading, setChangeResLoading] = React.useState(false);\n  const [changeOwnerLoading, setChangeOwnerLoading] = React.useState(false);\n  const [showQR, setShowQR] = React.useState(false);\n  const history = useHistory();\n\n  if (nom == null) {\n    return <Spinner />;\n  }\n  const isOwner = address && nom.owner.toLowerCase() === address.toLowerCase();\n\n  return (\n    <Flex>\n    <Flex\n      sx={{\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        mt: [\"33%\", \"10%\"],\n      }}\n    >\n      <Box sx={{ fill: \"text\" }}>\n        <LogoIcon size={128} />\n      </Box>\n      <Heading as=\"h1\" mb={4}>\n        Nomspace\n      </Heading>\n      <SearchBar />\n    </Flex>\n    <Flex sx={{ alignItems: \"center\", flexDirection: \"column\" }}>\n      <Box sx={{ width: \"100%\", maxWidth: \"800px\" }} mb={4}>\n        <SearchBar size=\"small\" />\n      </Box>\n      <Card sx={{ width: \"100%\", maxWidth: \"800px\" }} py={4} px={3}>\n        <Flex mb={4}>\n          <Heading as=\"h2\" mr={2}>\n            {name}.nom\n          </Heading>\n          {nom.resolution !== ZERO_ADDRESS && (\n            <Box sx={{ cursor: \"pointer\" }} onClick={() => setShowQR(true)}>\n              <QrCode size={32} />\n            </Box>\n          )}\n        </Flex>\n        <BlockText variant=\"primary\">Resolution</BlockText>\n        <BlockText mb={2}>{shortenAddress(nom.resolution, 5)}</BlockText>\n        {changeResLoading ? (\n          <Spinner />\n        ) : (\n          <Button\n            onClick={async () => {\n              const kit = await getConnectedKit();\n              // kit is connected to a wallet\n              const nom = new kit.web3.eth.Contract(\n                NomMetadata.abi as AbiItem[],\n                NOM[network.chainId]\n              ) as unknown as Nom;\n              const nextResolution = prompt(\"Enter new owner address\");\n              if (!nextResolution || !isAddress(nextResolution)) {\n                alert(\"Invalid address. Please try again.\");\n                return;\n              }\n\n              try {\n                setChangeResLoading(true);\n                const tx = await nom.methods\n                  .changeResolution(\n                    ethers.utils.formatBytes32String(nameFormatted),\n                    nextResolution\n                  )\n                  .send({\n                    from: kit.defaultAccount,\n                    gasPrice: DEFAULT_GAS_PRICE,\n                    gas: 2e7,\n                  });\n                toastTx(tx.transactionHash);\n                refetchNom();\n              } catch (e) {\n                toast(e.message);\n              } finally {\n                setChangeResLoading(false);\n              }\n            }}\n            mb={4}\n            disabled={!isOwner}\n          >\n            Change\n          </Button>\n        )}\n        <BlockText variant=\"primary\">Owner</BlockText>\n        <BlockText mb={2}>{shortenAddress(nom.owner, 5)}</BlockText>\n        {changeOwnerLoading ? (\n          <Spinner />\n        ) : (\n          <Button\n            onClick={async () => {\n              const kit = await getConnectedKit();\n              // kit is connected to a wallet\n              const nom = new kit.web3.eth.Contract(\n                NomMetadata.abi as AbiItem[],\n                NOM[network.chainId]\n              ) as unknown as Nom;\n              const nextOwner = prompt(\"Enter new owner address\");\n              if (!nextOwner || !isAddress(nextOwner)) {\n                alert(\"Invalid address. Please try again.\");\n                return;\n              }\n\n              try {\n                setChangeOwnerLoading(true);\n                const tx = await nom.methods\n                  .changeNameOwner(\n                    ethers.utils.formatBytes32String(nameFormatted),\n                    nextOwner\n                  )\n                  .send({\n                    from: kit.defaultAccount,\n                    gasPrice: DEFAULT_GAS_PRICE,\n                    gas: 2e7,\n                  });\n                toastTx(tx.transactionHash);\n                refetchNom();\n              } catch (e) {\n                toast(e.message);\n              } finally {\n                setChangeOwnerLoading(false);\n              }\n            }}\n            mb={4}\n            disabled={!isOwner}\n          >\n            Transfer\n          </Button>\n        )}\n        <BlockText variant=\"primary\">Expiration</BlockText>\n        <BlockText mb={2}>\n          {new Date(parseInt(nom.expiration) * 1000).toLocaleDateString(\n            \"en-US\"\n          )}\n        </BlockText>\n        {nom.owner !== ZERO_ADDRESS && isOwner && (\n            <Button\n              onClick={() => {\n                history.push(`/search/${name}/extend`);\n              }}\n            >\n              Extend\n            </Button>\n          )}\n        <Flex sx={{ justifyContent: \"center\", mt: 6 }}>\n          {nom.owner === ZERO_ADDRESS ? (\n            <Button\n              onClick={() => {\n                history.push(`/search/${name}/reserve`);\n              }}\n            >\n              Reserve\n            </Button>\n          ) : (\n            <BlockText>Name has already been reserved.</BlockText>\n          )}\n        </Flex>\n      </Card>\n      {nom.resolution && nom.resolution !== ZERO_ADDRESS && (\n        <QRNameModal\n          name={name}\n          address={nom.resolution}\n          isOpen={showQR}\n          setIsOpen={setShowQR}\n        />\n      )}\n    </Flex>\n    </Flex>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}