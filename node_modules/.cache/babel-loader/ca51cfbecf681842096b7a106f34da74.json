{"ast":null,"code":"var _jsxFileName = \"/Users/kylescott/src/nomspace-interface/src/pages/Farm/FarmTable.tsx\",\n    _s = $RefreshSig$();\n\nimport { css } from \"@emotion/react\";\nimport { FarmPool } from \"src/pages/Farm/FarmPool\";\nimport { FARMS } from \"src/config\";\nimport { SimpleTable } from \"src/components/SimpleTable\";\nimport { atom, useRecoilState } from 'recoil';\nimport { Supply } from \"src/pages/Farm/Supply\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport let Page;\n\n(function (Page) {\n  Page[Page[\"Table\"] = 0] = \"Table\";\n  Page[Page[\"Supply\"] = 1] = \"Supply\";\n  Page[Page[\"Borrow\"] = 2] = \"Borrow\";\n  Page[Page[\"Comfirm\"] = 3] = \"Comfirm\";\n})(Page || (Page = {}));\n\nexport const pageState = atom({\n  key: 'pageState',\n  default: Page.Supply\n});\nconst emptyPoolState = {\n  name: \"\",\n  wstaking: null,\n  spell: \"\",\n  tokens: []\n};\nexport const poolState = atom({\n  key: 'poolState',\n  default: emptyPoolState\n});\nexport const FarmView = () => {\n  _s();\n\n  const [page] = useRecoilState(pageState);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: page === Page.Table ? /*#__PURE__*/_jsxDEV(SimpleTable, {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            css: css`\n                  text-align: left !important;\n                `,\n            children: \"Pool\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Projected APY\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Pool APY\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Borrow APY\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Max Leverage\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: FARMS.map(farm => /*#__PURE__*/_jsxDEV(FarmPool, {\n          farmInfo: farm\n        }, farm.name, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(Supply, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n\n_s(FarmView, \"Uakz/cRTNMZXAyCgAXqHX9Iel+s=\", false, function () {\n  return [useRecoilState];\n});\n\n_c = FarmView;\n\nvar _c;\n\n$RefreshReg$(_c, \"FarmView\");","map":{"version":3,"sources":["/Users/kylescott/src/nomspace-interface/src/pages/Farm/FarmTable.tsx"],"names":["css","FarmPool","FARMS","SimpleTable","atom","useRecoilState","Supply","Page","pageState","key","default","emptyPoolState","name","wstaking","spell","tokens","poolState","FarmView","page","Table","map","farm"],"mappings":";;;AAAA,SAASA,GAAT,QAAoB,gBAApB;AACA,SAASC,QAAT,QAAyB,yBAAzB;AACA,SAASC,KAAT,QAAsB,YAAtB;AACA,SAASC,WAAT,QAA4B,4BAA5B;AACA,SAAuBC,IAAvB,EAAyCC,cAAzC,QAAgF,QAAhF;AACA,SAASC,MAAT,QAAuB,uBAAvB;;AAGA,WAAYC,IAAZ;;WAAYA,I;AAAAA,EAAAA,I,CAAAA,I;AAAAA,EAAAA,I,CAAAA,I;AAAAA,EAAAA,I,CAAAA,I;AAAAA,EAAAA,I,CAAAA,I;GAAAA,I,KAAAA,I;;AAOZ,OAAO,MAAMC,SAAS,GAAGJ,IAAI,CAAC;AAC5BK,EAAAA,GAAG,EAAE,WADuB;AAE5BC,EAAAA,OAAO,EAAEH,IAAI,CAACD;AAFc,CAAD,CAAtB;AAYP,MAAMK,cAAsB,GAAG;AAC7BC,EAAAA,IAAI,EAAE,EADuB;AAE7BC,EAAAA,QAAQ,EAAE,IAFmB;AAG7BC,EAAAA,KAAK,EAAE,EAHsB;AAI7BC,EAAAA,MAAM,EAAE;AAJqB,CAA/B;AAOA,OAAO,MAAMC,SAAS,GAAGZ,IAAI,CAAC;AAC5BK,EAAAA,GAAG,EAAE,WADuB;AAE5BC,EAAAA,OAAO,EAAEC;AAFmB,CAAD,CAAtB;AAKP,OAAO,MAAMM,QAAkB,GAAG,MAAM;AAAA;;AACtC,QAAM,CAACC,IAAD,IAASb,cAAc,CAACG,SAAD,CAA7B;AAEA,sBACE;AAAA,cAEEU,IAAI,KAAKX,IAAI,CAACY,KAAd,gBACI,QAAC,WAAD;AAAA,8BACA;AAAA,+BACE;AAAA,kCACE;AACE,YAAA,GAAG,EAAEnB,GAAI;AACzB;AACA,iBAHc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBARF,eASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBATF,eAUE;AAAA;AAAA;AAAA;AAAA,kBAVF,eAWE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAXF,eAYE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAZF,eAaE;AAAA;AAAA;AAAA;AAAA,kBAbF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADA,eAkBA;AAAA,kBACGE,KAAK,CAACkB,GAAN,CAAWC,IAAD,iBACT,QAAC,QAAD;AAA0B,UAAA,QAAQ,EAAEA;AAApC,WAAeA,IAAI,CAACT,IAApB;AAAA;AAAA;AAAA;AAAA,gBADD;AADH;AAAA;AAAA;AAAA;AAAA,cAlBA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,gBA0BI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AA5BN;AAAA;AAAA;AAAA;AAAA,UADF;AAkCD,CArCM;;GAAMK,Q;UACIZ,c;;;KADJY,Q","sourcesContent":["import { css } from \"@emotion/react\";\nimport { FarmPool } from \"src/pages/Farm/FarmPool\";\nimport { FARMS } from \"src/config\";\nimport { SimpleTable } from \"src/components/SimpleTable\"\nimport {  RecoilRoot,  atom,  selector,  useRecoilState,  useRecoilValue,} from 'recoil';\nimport { Supply } from \"src/pages/Farm/Supply\";\nimport { Token } from \"src/utils/token\";\n\nexport enum Page {\n  Table,\n  Supply, \n  Borrow, \n  Comfirm,\n}\n\nexport const pageState = atom({\n  key: 'pageState',\n  default: Page.Supply\n})\n\nexport interface Props {\n  name: string;\n  wstaking: string | null;\n  spell: string;\n  tokens: Token[];\n}\n\nconst emptyPoolState : Props = {\n  name: \"\",\n  wstaking: null,\n  spell: \"\",\n  tokens: []\n}\n\nexport const poolState = atom({\n  key: 'poolState',\n  default: emptyPoolState\n})\n\nexport const FarmView: React.FC = () => {\n  const [page] = useRecoilState(pageState);\n\n  return (\n    <div>\n      {\n      page === Page.Table ? (\n          <SimpleTable>\n          <thead>\n            <tr>\n              <th\n                css={css`\n                  text-align: left !important;\n                `}\n              >\n                Pool\n              </th>\n              <th>Projected APY</th>\n              <th>Pool APY</th>\n              <th></th>\n              <th>Borrow APY</th>\n              <th>Max Leverage</th>\n              <th />\n            </tr>\n          </thead>\n          <tbody>\n            {FARMS.map((farm) => (\n              <FarmPool key={farm.name} farmInfo={farm}/>\n            ))}\n          </tbody>\n        </SimpleTable>\n        ) : (\n          <Supply />\n        )}\n    </div>\n    \n  );\n};\n"]},"metadata":{},"sourceType":"module"}