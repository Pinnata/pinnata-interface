{"ast":null,"code":"\"use strict\";\n\nvar __values = this && this.__values || function (o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator,\n      m = s && o[s],\n      i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n    next: function () {\n      if (o && i >= o.length) o = void 0;\n      return {\n        value: o && o[i++],\n        done: !o\n      };\n    }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar bignumber_js_1 = require(\"bignumber.js\");\n\nvar ethereumjs_util_1 = require(\"ethereumjs-util\");\n\nvar web3_eth_abi_1 = __importDefault(require(\"web3-eth-abi\"));\n/**\n * Generates the EIP712 Typed Data hash for signing\n * @param   typedData An object that conforms to the EIP712TypedData interface\n * @return  A Buffer containing the hash of the typed data.\n */\n\n\nfunction generateTypedDataHash(typedData) {\n  return ethereumjs_util_1.sha3(Buffer.concat([Buffer.from('1901', 'hex'), structHash('EIP712Domain', typedData.domain, typedData.types), structHash(typedData.primaryType, typedData.message, typedData.types)]));\n}\n\nexports.generateTypedDataHash = generateTypedDataHash;\n\nfunction findDependencies(primaryType, types, found) {\n  var e_1, _a, e_2, _b;\n\n  if (found === void 0) {\n    found = [];\n  }\n\n  if (found.includes(primaryType) || types[primaryType] === undefined) {\n    return found;\n  }\n\n  found.push(primaryType);\n\n  try {\n    for (var _c = __values(types[primaryType]), _d = _c.next(); !_d.done; _d = _c.next()) {\n      var field = _d.value;\n\n      try {\n        for (var _e = (e_2 = void 0, __values(findDependencies(field.type, types, found))), _f = _e.next(); !_f.done; _f = _e.next()) {\n          var dep = _f.value;\n\n          if (!found.includes(dep)) {\n            found.push(dep);\n          }\n        }\n      } catch (e_2_1) {\n        e_2 = {\n          error: e_2_1\n        };\n      } finally {\n        try {\n          if (_f && !_f.done && (_b = _e.return)) _b.call(_e);\n        } finally {\n          if (e_2) throw e_2.error;\n        }\n      }\n    }\n  } catch (e_1_1) {\n    e_1 = {\n      error: e_1_1\n    };\n  } finally {\n    try {\n      if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\n    } finally {\n      if (e_1) throw e_1.error;\n    }\n  }\n\n  return found;\n}\n\nfunction encodeType(primaryType, types) {\n  var e_3, _a;\n\n  var deps = findDependencies(primaryType, types);\n  deps = deps.filter(function (d) {\n    return d !== primaryType;\n  });\n  deps = [primaryType].concat(deps.sort());\n  var result = '';\n\n  try {\n    for (var deps_1 = __values(deps), deps_1_1 = deps_1.next(); !deps_1_1.done; deps_1_1 = deps_1.next()) {\n      var dep = deps_1_1.value;\n      result += dep + \"(\" + types[dep].map(function (_a) {\n        var name = _a.name,\n            type = _a.type;\n        return type + \" \" + name;\n      }).join(',') + \")\";\n    }\n  } catch (e_3_1) {\n    e_3 = {\n      error: e_3_1\n    };\n  } finally {\n    try {\n      if (deps_1_1 && !deps_1_1.done && (_a = deps_1.return)) _a.call(deps_1);\n    } finally {\n      if (e_3) throw e_3.error;\n    }\n  }\n\n  return result;\n}\n\nfunction encodeData(primaryType, data, types) {\n  var e_4, _a;\n\n  var encodedTypes = ['bytes32'];\n  var encodedValues = [typeHash(primaryType, types)];\n\n  try {\n    for (var _b = __values(types[primaryType]), _c = _b.next(); !_c.done; _c = _b.next()) {\n      var field = _c.value;\n      var value = data[field.name];\n\n      if (field.type === 'string' || field.type === 'bytes') {\n        var hashValue = ethereumjs_util_1.sha3(value);\n        encodedTypes.push('bytes32');\n        encodedValues.push(hashValue);\n      } else if (types[field.type] !== undefined) {\n        encodedTypes.push('bytes32');\n        var hashValue = ethereumjs_util_1.sha3( // tslint:disable-next-line:no-unnecessary-type-assertion\n        encodeData(field.type, value, types));\n        encodedValues.push(hashValue);\n      } else if (field.type.lastIndexOf(']') === field.type.length - 1) {\n        throw new Error('Arrays currently unimplemented in encodeData');\n      } else {\n        encodedTypes.push(field.type);\n        var normalizedValue = normalizeValue(field.type, value);\n        encodedValues.push(normalizedValue);\n      }\n    }\n  } catch (e_4_1) {\n    e_4 = {\n      error: e_4_1\n    };\n  } finally {\n    try {\n      if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n    } finally {\n      if (e_4) throw e_4.error;\n    }\n  } // @ts-ignore\n\n\n  return web3_eth_abi_1.default.encodeParameters(encodedTypes, encodedValues);\n}\n\nfunction normalizeValue(type, value) {\n  var normalizedValue = type === 'uint256' && bignumber_js_1.BigNumber.isBigNumber(value) ? value.toString() : value;\n  return normalizedValue;\n}\n\nfunction typeHash(primaryType, types) {\n  return ethereumjs_util_1.sha3(encodeType(primaryType, types));\n}\n\nfunction structHash(primaryType, data, types) {\n  return ethereumjs_util_1.sha3(encodeData(primaryType, data, types));\n}\n\nexports.structHash = structHash;","map":{"version":3,"sources":["../src/sign-typed-data-utils.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __values = (this && this.__values) || function(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar bignumber_js_1 = require(\"bignumber.js\");\nvar ethereumjs_util_1 = require(\"ethereumjs-util\");\nvar web3_eth_abi_1 = __importDefault(require(\"web3-eth-abi\"));\n/**\n * Generates the EIP712 Typed Data hash for signing\n * @param   typedData An object that conforms to the EIP712TypedData interface\n * @return  A Buffer containing the hash of the typed data.\n */\nfunction generateTypedDataHash(typedData) {\n    return ethereumjs_util_1.sha3(Buffer.concat([\n        Buffer.from('1901', 'hex'),\n        structHash('EIP712Domain', typedData.domain, typedData.types),\n        structHash(typedData.primaryType, typedData.message, typedData.types),\n    ]));\n}\nexports.generateTypedDataHash = generateTypedDataHash;\nfunction findDependencies(primaryType, types, found) {\n    var e_1, _a, e_2, _b;\n    if (found === void 0) { found = []; }\n    if (found.includes(primaryType) || types[primaryType] === undefined) {\n        return found;\n    }\n    found.push(primaryType);\n    try {\n        for (var _c = __values(types[primaryType]), _d = _c.next(); !_d.done; _d = _c.next()) {\n            var field = _d.value;\n            try {\n                for (var _e = (e_2 = void 0, __values(findDependencies(field.type, types, found))), _f = _e.next(); !_f.done; _f = _e.next()) {\n                    var dep = _f.value;\n                    if (!found.includes(dep)) {\n                        found.push(dep);\n                    }\n                }\n            }\n            catch (e_2_1) { e_2 = { error: e_2_1 }; }\n            finally {\n                try {\n                    if (_f && !_f.done && (_b = _e.return)) _b.call(_e);\n                }\n                finally { if (e_2) throw e_2.error; }\n            }\n        }\n    }\n    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n    finally {\n        try {\n            if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\n        }\n        finally { if (e_1) throw e_1.error; }\n    }\n    return found;\n}\nfunction encodeType(primaryType, types) {\n    var e_3, _a;\n    var deps = findDependencies(primaryType, types);\n    deps = deps.filter(function (d) { return d !== primaryType; });\n    deps = [primaryType].concat(deps.sort());\n    var result = '';\n    try {\n        for (var deps_1 = __values(deps), deps_1_1 = deps_1.next(); !deps_1_1.done; deps_1_1 = deps_1.next()) {\n            var dep = deps_1_1.value;\n            result += dep + \"(\" + types[dep].map(function (_a) {\n                var name = _a.name, type = _a.type;\n                return type + \" \" + name;\n            }).join(',') + \")\";\n        }\n    }\n    catch (e_3_1) { e_3 = { error: e_3_1 }; }\n    finally {\n        try {\n            if (deps_1_1 && !deps_1_1.done && (_a = deps_1.return)) _a.call(deps_1);\n        }\n        finally { if (e_3) throw e_3.error; }\n    }\n    return result;\n}\nfunction encodeData(primaryType, data, types) {\n    var e_4, _a;\n    var encodedTypes = ['bytes32'];\n    var encodedValues = [typeHash(primaryType, types)];\n    try {\n        for (var _b = __values(types[primaryType]), _c = _b.next(); !_c.done; _c = _b.next()) {\n            var field = _c.value;\n            var value = data[field.name];\n            if (field.type === 'string' || field.type === 'bytes') {\n                var hashValue = ethereumjs_util_1.sha3(value);\n                encodedTypes.push('bytes32');\n                encodedValues.push(hashValue);\n            }\n            else if (types[field.type] !== undefined) {\n                encodedTypes.push('bytes32');\n                var hashValue = ethereumjs_util_1.sha3(\n                // tslint:disable-next-line:no-unnecessary-type-assertion\n                encodeData(field.type, value, types));\n                encodedValues.push(hashValue);\n            }\n            else if (field.type.lastIndexOf(']') === field.type.length - 1) {\n                throw new Error('Arrays currently unimplemented in encodeData');\n            }\n            else {\n                encodedTypes.push(field.type);\n                var normalizedValue = normalizeValue(field.type, value);\n                encodedValues.push(normalizedValue);\n            }\n        }\n    }\n    catch (e_4_1) { e_4 = { error: e_4_1 }; }\n    finally {\n        try {\n            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n        }\n        finally { if (e_4) throw e_4.error; }\n    }\n    // @ts-ignore\n    return web3_eth_abi_1.default.encodeParameters(encodedTypes, encodedValues);\n}\nfunction normalizeValue(type, value) {\n    var normalizedValue = type === 'uint256' && bignumber_js_1.BigNumber.isBigNumber(value) ? value.toString() : value;\n    return normalizedValue;\n}\nfunction typeHash(primaryType, types) {\n    return ethereumjs_util_1.sha3(encodeType(primaryType, types));\n}\nfunction structHash(primaryType, data, types) {\n    return ethereumjs_util_1.sha3(encodeData(primaryType, data, types));\n}\nexports.structHash = structHash;\n//# sourceMappingURL=sign-typed-data-utils.js.map"]},"metadata":{},"sourceType":"script"}