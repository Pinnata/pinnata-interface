{"ast":null,"code":"var _jsxFileName = \"/Users/kylescott/src/nomspace-interface/src/pages/Earn/Withdraw/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useContractKit } from \"@celo-tools/use-contractkit\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport { Button, Card, Flex, Heading, Spinner, Text } from \"theme-ui\";\nimport { COLLATERAL_TOKENS, DEFAULT_GAS_PRICE, safeBoxMap, Bank } from \"src/config\";\nimport { toBN, toWei, fromWei } from \"web3-utils\";\nimport { toastTx } from \"src/utils/toastTx\";\nimport { toast } from \"react-toastify\";\nimport { CaretLeft } from \"phosphor-react\";\nimport SAFEBOX_ABI from \"src/abis/dahlia_contracts/SafeBox.json\";\nimport { getAddress } from \"ethers/lib/utils\";\nimport { useSafeBox } from \"src/hooks/useSafeBox\";\nimport { TokenInputForm } from \"src/components/TokenInputForm\";\nimport { BoxTokenAmountInfo } from \"src/components/BoxTokenAmountInfo\";\nimport BANK_ABI from \"src/abis/dahlia_contracts/HomoraBank.json\";\nimport CERC20_ABI from \"src/abis/fountain_of_youth/CErc20Immutable.json\";\nimport { useAsyncState } from \"src/hooks/useAsyncState\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Withdraw = () => {\n  _s();\n\n  // TODO: fix exchange rate and decimals\n  const {\n    kit,\n    getConnectedKit,\n    network\n  } = useContractKit();\n  const [amount, setAmount] = React.useState(\"1\");\n  const [withdrawLoading, setWithdrawLoading] = React.useState(false);\n  const {\n    tokenAddress\n  } = useParams();\n  const [safeBox, refetchSafeBox] = useSafeBox(safeBoxMap.get(tokenAddress));\n  const bank = React.useMemo(() => new kit.web3.eth.Contract(BANK_ABI.abi, getAddress(Bank[network.chainId])), [kit, network]);\n  const call = React.useCallback(async () => {\n    try {\n      const bankInfo = await bank.methods.getBankInfo(tokenAddress).call();\n      const cToken = new kit.web3.eth.Contract(CERC20_ABI, bankInfo.cToken);\n      const exchangeRate = await cToken.methods.exchangeRateStored().call();\n      return {\n        exchange: toBN(exchangeRate)\n      };\n    } catch (error) {\n      console.log(error);\n    }\n  }, [bank, tokenAddress, kit]);\n  const [info] = useAsyncState(null, call);\n  const history = useHistory();\n  const exchangeRate = info ? Number(fromWei(info.exchange)) : 1;\n\n  const withdrawButton = /*#__PURE__*/_jsxDEV(Button, {\n    onClick: async () => {\n      const kit = await getConnectedKit(); // kit is connected to a wallet\n\n      const safeBox = new kit.web3.eth.Contract(SAFEBOX_ABI.abi, safeBoxMap.get(getAddress(tokenAddress)));\n\n      try {\n        setWithdrawLoading(true);\n        const tx = await safeBox.methods.withdraw(toWei(amount)).send({\n          from: kit.defaultAccount,\n          gasPrice: DEFAULT_GAS_PRICE\n        });\n        toastTx(tx.transactionHash);\n        refetchSafeBox();\n      } catch (e) {\n        toast(e.message);\n      } finally {\n        setWithdrawLoading(false);\n      }\n    },\n    children: \"Withdraw\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n\n  const loading = withdrawLoading;\n  let button = withdrawButton;\n\n  if (safeBox) {\n    const fmtCost = amount === \"\" ? \"0\" : amount;\n    const amountBN = toBN(toWei(fmtCost));\n\n    if (safeBox.balance.lt(amountBN)) {\n      button = /*#__PURE__*/_jsxDEV(Button, {\n        disabled: true,\n        children: \"Insufficient funds\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 16\n      }, this);\n    }\n  }\n\n  let token = COLLATERAL_TOKENS.filter(({\n    address\n  }) => address.toLowerCase() === tokenAddress.toLowerCase());\n  if (token.length !== 1) return null;\n  return /*#__PURE__*/_jsxDEV(Flex, {\n    sx: {\n      alignItems: \"center\",\n      flexDirection: \"column\"\n    },\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      sx: {\n        width: \"100%\",\n        maxWidth: \"800px\"\n      },\n      py: 4,\n      px: 3,\n      children: [/*#__PURE__*/_jsxDEV(Flex, {\n        onClick: () => history.goBack(),\n        sx: {\n          alignItems: \"center\",\n          cursor: \"pointer\"\n        },\n        mb: 4,\n        children: [/*#__PURE__*/_jsxDEV(CaretLeft, {\n          size: 28\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          children: \"Back\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Flex, {\n        mb: 4,\n        children: /*#__PURE__*/_jsxDEV(Heading, {\n          as: \"h2\",\n          mr: 2,\n          children: \"Withdraw\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TokenInputForm, {\n        token: token[0],\n        amount: String(Number(amount) * exchangeRate),\n        dahlia: true,\n        setAmount: setAmount,\n        balance: safeBox ? safeBox.balance : null\n      }, token[0].address, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Flex, {\n        sx: {\n          justifyContent: \"center\",\n          mt: 6,\n          gap: \"8px\",\n          alignItems: \"center\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Receive\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(BoxTokenAmountInfo, {\n          token: token[0],\n          amount: amount\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Flex, {\n        sx: {\n          justifyContent: \"center\",\n          mt: 6\n        },\n        children: loading ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 15\n        }, this) : button\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Withdraw, \"1PIAy+EuLrY6DRLu5sZBcITOMq8=\", false, function () {\n  return [useContractKit, useParams, useSafeBox, useAsyncState, useHistory];\n});\n\n_c = Withdraw;\n\nvar _c;\n\n$RefreshReg$(_c, \"Withdraw\");","map":{"version":3,"sources":["/Users/kylescott/src/nomspace-interface/src/pages/Earn/Withdraw/index.tsx"],"names":["React","useContractKit","useParams","useHistory","Button","Card","Flex","Heading","Spinner","Text","COLLATERAL_TOKENS","DEFAULT_GAS_PRICE","safeBoxMap","Bank","toBN","toWei","fromWei","toastTx","toast","CaretLeft","SAFEBOX_ABI","getAddress","useSafeBox","TokenInputForm","BoxTokenAmountInfo","BANK_ABI","CERC20_ABI","useAsyncState","Withdraw","kit","getConnectedKit","network","amount","setAmount","useState","withdrawLoading","setWithdrawLoading","tokenAddress","safeBox","refetchSafeBox","get","bank","useMemo","web3","eth","Contract","abi","chainId","call","useCallback","bankInfo","methods","getBankInfo","cToken","exchangeRate","exchangeRateStored","exchange","error","console","log","info","history","Number","withdrawButton","tx","withdraw","send","from","defaultAccount","gasPrice","transactionHash","e","message","loading","button","fmtCost","amountBN","balance","lt","token","filter","address","toLowerCase","length","alignItems","flexDirection","width","maxWidth","goBack","cursor","String","justifyContent","mt","gap"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { useContractKit } from \"@celo-tools/use-contractkit\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport {\n  Box,\n  Button,\n  Card,\n  Flex,\n  Heading,\n  Input,\n  Spinner,\n  Text,\n} from \"theme-ui\";\nimport { COLLATERAL_TOKENS, DEFAULT_GAS_PRICE, safeBoxMap, Bank } from \"src/config\";\nimport { AbiItem, toBN, toWei, fromWei } from \"web3-utils\";\nimport { toastTx } from \"src/utils/toastTx\";\nimport { toast } from \"react-toastify\";\nimport { CaretLeft } from \"phosphor-react\";\nimport { DahliaTokenInfo } from \"src/components/DahliaTokenInfo\";\nimport { TokenAmountInfo } from \"src/components/TokenAmountInfo\"\nimport SAFEBOX_ABI from \"src/abis/dahlia_contracts/SafeBox.json\";\nimport { SafeBox } from \"src/generated/SafeBox\";\nimport { humanFriendlyWei } from \"src/utils/eth\";\nimport { getAddress } from \"ethers/lib/utils\";\nimport { useSafeBox } from \"src/hooks/useSafeBox\";\nimport { TokenInputForm } from \"src/components/TokenInputForm\";\nimport { BoxTokenAmountInfo } from \"src/components/BoxTokenAmountInfo\";\nimport BANK_ABI from \"src/abis/dahlia_contracts/HomoraBank.json\";\nimport { HomoraBank } from \"src/generated/HomoraBank\";\nimport CERC20_ABI from \"src/abis/fountain_of_youth/CErc20Immutable.json\";\nimport { CErc20Immutable } from \"src/generated/CErc20Immutable\";\nimport { useAsyncState } from \"src/hooks/useAsyncState\";\n\n\nexport const Withdraw: React.FC = () => {\n  // TODO: fix exchange rate and decimals\n  const { kit, getConnectedKit, network } = useContractKit();\n  const [amount, setAmount] = React.useState(\"1\");\n  const [withdrawLoading, setWithdrawLoading] = React.useState(false);\n  const { tokenAddress } = useParams<{ tokenAddress: string}>();\n  const [safeBox, refetchSafeBox] = useSafeBox(safeBoxMap.get(tokenAddress)!);\n\n  const bank = React.useMemo(() => (new kit.web3.eth.Contract(\n    BANK_ABI.abi as AbiItem[],\n    getAddress(Bank[network.chainId])\n  ) as unknown) as HomoraBank, [kit, network]); \n\n  const call = React.useCallback(async () => {\n    try {\n        const bankInfo =  await bank.methods.getBankInfo(tokenAddress).call();\n        const cToken = (new kit.web3.eth.Contract(\n          CERC20_ABI as AbiItem[],\n          bankInfo.cToken,\n        ) as unknown) as CErc20Immutable;\n        const exchangeRate = await cToken.methods.exchangeRateStored().call();\n        return {\n          exchange: toBN(exchangeRate),\n        }\n    } catch (error) {\n        console.log(error)\n    }\n  }, [bank, tokenAddress, kit])\n\n  const [info] = useAsyncState(null, call);\n  const history = useHistory();\n  \n  const exchangeRate = info ? Number(fromWei(info.exchange)) : 1\n\n  const withdrawButton = (\n    <Button\n      onClick={async () => {\n        const kit = await getConnectedKit();\n        // kit is connected to a wallet\n        const safeBox = (new kit.web3.eth.Contract(\n          SAFEBOX_ABI.abi as AbiItem[],\n          safeBoxMap.get(getAddress(tokenAddress))!,\n        ) as unknown) as SafeBox;\n        try {\n          setWithdrawLoading(true);\n          const tx = await safeBox.methods\n            .withdraw(\n              toWei(amount)\n            ).send({\n              from: kit.defaultAccount,\n              gasPrice: DEFAULT_GAS_PRICE,\n            });\n          toastTx(tx.transactionHash);\n          refetchSafeBox();\n        } catch (e) {\n          toast(e.message);\n        } finally {\n          setWithdrawLoading(false);\n        }\n      }}\n    >\n      Withdraw\n    </Button>\n  );\n\n  const loading =  withdrawLoading;\n  let button = withdrawButton;\n  if (safeBox) {\n    const fmtCost = amount === \"\" ? \"0\" : amount;\n    const amountBN = toBN(toWei(fmtCost));\n    if (safeBox.balance.lt(amountBN)) {\n      button = <Button disabled={true}>Insufficient funds</Button>;\n    }\n  }\n    \n  let token = COLLATERAL_TOKENS.filter( ({ address }) => address.toLowerCase() === tokenAddress.toLowerCase())\n  if (token.length !== 1) return null;\n\n  return (\n    <Flex sx={{ alignItems: \"center\", flexDirection: \"column\" }}>\n      <Card sx={{ width: \"100%\", maxWidth: \"800px\" }} py={4} px={3}>\n        <Flex\n          onClick={() => history.goBack()}\n          sx={{ alignItems: \"center\", cursor: \"pointer\" }}\n          mb={4}\n        >\n          <CaretLeft size={28} />\n          <Text>Back</Text>\n        </Flex>\n        <Flex mb={4}>\n          <Heading as=\"h2\" mr={2}>\n            Withdraw\n          </Heading>\n        </Flex>\n          <TokenInputForm key={token[0]!.address} token={token[0]!} amount={String(Number(amount) * exchangeRate)} dahlia\n             setAmount={setAmount} \n             balance={safeBox ? safeBox.balance : null}\n            />\n        <Flex sx={{ justifyContent: \"center\", mt: 6, gap: \"8px\", alignItems: \"center\"}}>\n          <span>Receive</span>\n          <BoxTokenAmountInfo token={token[0]!} amount={amount} />\n        </Flex>\n        <Flex sx={{ justifyContent: \"center\", mt: 6 }}>\n            {loading ? (\n              <Spinner />\n            ) : (\n              button\n            )}\n        </Flex>\n      </Card>\n    </Flex>\n  );\n};"]},"metadata":{},"sourceType":"module"}