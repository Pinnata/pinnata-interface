{"ast":null,"code":"var _jsxFileName = \"/Users/kylescott/src/nomspace-interface/src/pages/Position/Remove/remove.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { atom, useSetRecoilState, useRecoilState } from 'recoil';\nimport { getToken } from \"src/utils/token\";\nimport { useParams } from \"react-router-dom\";\nimport { poolState } from \"src/pages/Farm/newFarm/NewFarm\";\nimport { emptyPositionState } from \"../Add/add\";\nimport { RemoveTokens } from \"./removeTokens\";\nimport { Payback } from \"./payback\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport let removePage;\n\n(function (removePage) {\n  removePage[removePage[\"Remove\"] = 0] = \"Remove\";\n  removePage[removePage[\"Payback\"] = 1] = \"Payback\";\n  removePage[removePage[\"Confirm\"] = 2] = \"Confirm\";\n})(removePage || (removePage = {}));\n\nexport const removePageState = atom({\n  key: 'removePageState',\n  default: removePage.Remove\n});\nexport const removePositionState = atom({\n  key: 'removePositionState',\n  default: emptyPositionState\n});\nexport const Remove = () => {\n  _s();\n\n  const {\n    positionId,\n    collateralSize,\n    name,\n    wrapper,\n    spell,\n    lp,\n    tokens\n  } = useParams();\n  const setPool = useSetRecoilState(poolState);\n  const setPosition = useSetRecoilState(removePositionState);\n  const set = {\n    name: name,\n    wrapper: wrapper,\n    spell: spell,\n    lp: lp,\n    tokens: tokens.split(',').map(x => getToken(x))\n  };\n  setPool(set);\n  setPosition({\n    positionId,\n    collateralSize\n  });\n  const [page] = useRecoilState(removePageState);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: page === removePage.Remove ? /*#__PURE__*/_jsxDEV(RemoveTokens, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this) : page === removePage.Payback ? /*#__PURE__*/_jsxDEV(Payback, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this) :\n    /*#__PURE__*/\n    // <Confirm />\n    _jsxDEV(Payback, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Remove, \"Up7hMREtm8MKep6+SlBy6EOUYPA=\", false, function () {\n  return [useParams, useSetRecoilState, useSetRecoilState, useRecoilState];\n});\n\n_c = Remove;\n\nvar _c;\n\n$RefreshReg$(_c, \"Remove\");","map":{"version":3,"sources":["/Users/kylescott/src/nomspace-interface/src/pages/Position/Remove/remove.tsx"],"names":["React","atom","useSetRecoilState","useRecoilState","getToken","useParams","poolState","emptyPositionState","RemoveTokens","Payback","removePage","removePageState","key","default","Remove","removePositionState","positionId","collateralSize","name","wrapper","spell","lp","tokens","setPool","setPosition","set","split","map","x","page"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,iBAAf,EAAkCC,cAAlC,QAAwD,QAAxD;AACA,SAASC,QAAT,QAAyB,iBAAzB;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,SAASC,SAAT,QAAqC,gCAArC;AACA,SAASC,kBAAT,QAAmC,YAAnC;AACA,SAASC,YAAT,QAA6B,gBAA7B;AACA,SAASC,OAAT,QAAwB,WAAxB;;AAGA,WAAYC,UAAZ;;WAAYA,U;AAAAA,EAAAA,U,CAAAA,U;AAAAA,EAAAA,U,CAAAA,U;AAAAA,EAAAA,U,CAAAA,U;GAAAA,U,KAAAA,U;;AAMZ,OAAO,MAAMC,eAAe,GAAGV,IAAI,CAAC;AAChCW,EAAAA,GAAG,EAAE,iBAD2B;AAEhCC,EAAAA,OAAO,EAAEH,UAAU,CAACI;AAFY,CAAD,CAA5B;AAKP,OAAO,MAAMC,mBAAmB,GAAGd,IAAI,CAAC;AACtCW,EAAAA,GAAG,EAAE,qBADiC;AAEtCC,EAAAA,OAAO,EAAEN;AAF6B,CAAD,CAAhC;AAKP,OAAO,MAAMO,MAAgB,GAAG,MAAM;AAAA;;AACpC,QAAM;AAAEE,IAAAA,UAAF;AAAcC,IAAAA,cAAd;AAA8BC,IAAAA,IAA9B;AAAoCC,IAAAA,OAApC;AAA6CC,IAAAA,KAA7C;AAAoDC,IAAAA,EAApD;AAAwDC,IAAAA;AAAxD,MAAmEjB,SAAS,EAAlF;AACA,QAAMkB,OAAO,GAAGrB,iBAAiB,CAACI,SAAD,CAAjC;AACA,QAAMkB,WAAW,GAAGtB,iBAAiB,CAACa,mBAAD,CAArC;AAEA,QAAMU,GAAc,GAAI;AACpBP,IAAAA,IAAI,EAAEA,IADc;AAEpBC,IAAAA,OAAO,EAAEA,OAFW;AAGpBC,IAAAA,KAAK,EAAEA,KAHa;AAIpBC,IAAAA,EAAE,EAAEA,EAJgB;AAKpBC,IAAAA,MAAM,EAAGA,MAAM,CAACI,KAAP,CAAa,GAAb,EAAkBC,GAAlB,CAAuBC,CAAD,IAAOxB,QAAQ,CAACwB,CAAD,CAArC;AALW,GAAxB;AAOAL,EAAAA,OAAO,CAACE,GAAD,CAAP;AACAD,EAAAA,WAAW,CAAC;AACVR,IAAAA,UADU;AAEVC,IAAAA;AAFU,GAAD,CAAX;AAKA,QAAM,CAACY,IAAD,IAAS1B,cAAc,CAACQ,eAAD,CAA7B;AAEA,sBACE;AAAA,cAEIkB,IAAI,KAAKnB,UAAU,CAACI,MAApB,gBACI,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,YADJ,GAGIe,IAAI,KAAKnB,UAAU,CAACD,OAApB,gBACA,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YADA;AAAA;AAGA;AACA,YAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AATR;AAAA;AAAA;AAAA;AAAA,UADF;AAeD,CAnCM;;GAAMK,M;UAC8DT,S,EACzDH,iB,EACIA,iB,EAeLC,c;;;KAlBJW,M","sourcesContent":["import React from \"react\";\nimport { atom, useSetRecoilState, useRecoilState } from 'recoil';\nimport { getToken } from \"src/utils/token\";\nimport { useParams } from \"react-router-dom\";\nimport { poolState, poolProps } from \"src/pages/Farm/newFarm/NewFarm\";\nimport { emptyPositionState } from \"../Add/add\";\nimport { RemoveTokens } from \"./removeTokens\";\nimport { Payback } from \"./payback\";\nimport { Confirm } from \"./confirm\";\n\nexport enum removePage {\n    Remove, \n    Payback, \n    Confirm,\n}\n  \nexport const removePageState = atom({\n    key: 'removePageState',\n    default: removePage.Remove\n})\n\nexport const removePositionState = atom({\n  key: 'removePositionState',\n  default: emptyPositionState\n})\n\nexport const Remove: React.FC = () => {\n  const { positionId, collateralSize, name, wrapper, spell, lp, tokens } = useParams<{ positionId: string, collateralSize: string, name: string, wrapper: string, spell: string, lp:string, tokens:string}>();\n  const setPool = useSetRecoilState(poolState); \n  const setPosition = useSetRecoilState(removePositionState); \n\n  const set: poolProps  = {\n      name: name,\n      wrapper: wrapper,\n      spell: spell,\n      lp: lp,\n      tokens: (tokens.split(',').map((x) => getToken(x)!)),\n  }\n  setPool(set); \n  setPosition({\n    positionId, \n    collateralSize,\n  });\n\n  const [page] = useRecoilState(removePageState);\n\n  return (\n    <div>\n      {\n        page === removePage.Remove ? (\n            <RemoveTokens />\n          ) : (\n            page === removePage.Payback ? (\n            <Payback />\n          ) : (\n            // <Confirm />\n            <Payback />\n          )) }\n    </div>\n    \n  );\n};"]},"metadata":{},"sourceType":"module"}