{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useContractKit } from \"@celo-tools/use-contractkit\";\nimport IERC20_ABI from \"src/abis/dahlia_contracts/IERC20.json\";\nimport { useAsyncState } from \"src/hooks/useAsyncState\";\nimport { isAddress, toBN } from \"web3-utils\";\nimport { getAddress } from \"ethers/lib/utils\";\nimport { safeBoxMap } from \"src/config\";\nexport const useERCmulti = tokens => {\n  _s();\n\n  const {\n    kit\n  } = useContractKit();\n  const call = React.useCallback(async () => {\n    return tokens.map(async ({\n      address\n    }) => {\n      if (!address || !isAddress(address) || !address) {\n        return null;\n      }\n\n      ;\n      const ERCToken = new kit.web3.eth.Contract(IERC20_ABI.abi, address);\n      const allowance = toBN(await ERCToken.methods.allowance(address, safeBoxMap.get(getAddress(address))).call());\n      const balance = toBN(await ERCToken.methods.balanceOf(address).call());\n      return {\n        allowance,\n        balance\n      };\n    });\n  }, [kit, tokens]);\n  return useAsyncState(null, call);\n};\n\n_s(useERCmulti, \"xvcX513lOLvsmAqMXn081lxcq/o=\", false, function () {\n  return [useContractKit, useAsyncState];\n});","map":{"version":3,"sources":["/Users/kylescott/src/nomspace-interface/src/hooks/useERCmulti.ts"],"names":["React","useContractKit","IERC20_ABI","useAsyncState","isAddress","toBN","getAddress","safeBoxMap","useERCmulti","tokens","kit","call","useCallback","map","address","ERCToken","web3","eth","Contract","abi","allowance","methods","get","balance","balanceOf"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,cAAT,QAA+B,6BAA/B;AACA,OAAOC,UAAP,MAAuB,uCAAvB;AAEA,SAASC,aAAT,QAA8B,yBAA9B;AACA,SAASC,SAAT,EAAoBC,IAApB,QAAyC,YAAzC;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,UAAT,QAA2B,YAA3B;AAIA,OAAO,MAAMC,WAAW,GAAIC,MAAD,IAAqB;AAAA;;AAC9C,QAAM;AAAEC,IAAAA;AAAF,MAAUT,cAAc,EAA9B;AACA,QAAMU,IAAI,GAAGX,KAAK,CAACY,WAAN,CAAkB,YAAY;AACzC,WAAOH,MAAM,CAACI,GAAP,CAAW,OAAO;AAACC,MAAAA;AAAD,KAAP,KAAqB;AACnC,UAAI,CAACA,OAAD,IAAY,CAACV,SAAS,CAACU,OAAD,CAAtB,IAAmC,CAACA,OAAxC,EAAiD;AAC7C,eAAO,IAAP;AACH;;AAAA;AACD,YAAMC,QAAQ,GAAI,IAAIL,GAAG,CAACM,IAAJ,CAASC,GAAT,CAAaC,QAAjB,CACdhB,UAAU,CAACiB,GADG,EAEdL,OAFc,CAAlB;AAIE,YAAMM,SAAS,GAAGf,IAAI,CACpB,MAAMU,QAAQ,CAACM,OAAT,CAAiBD,SAAjB,CAA2BN,OAA3B,EAAoCP,UAAU,CAACe,GAAX,CAAehB,UAAU,CAACQ,OAAD,CAAzB,CAApC,EAA0EH,IAA1E,EADc,CAAtB;AAGA,YAAMY,OAAO,GAAGlB,IAAI,CAAC,MAAMU,QAAQ,CAACM,OAAT,CAAiBG,SAAjB,CAA2BV,OAA3B,EAAoCH,IAApC,EAAP,CAApB;AACA,aAAO;AAAES,QAAAA,SAAF;AAAaG,QAAAA;AAAb,OAAP;AACL,KAbM,CAAP;AAcD,GAfY,EAeV,CAACb,GAAD,EAAMD,MAAN,CAfU,CAAb;AAgBA,SAAON,aAAa,CAAC,IAAD,EAAOQ,IAAP,CAApB;AACD,CAnBM;;GAAMH,W;UACKP,c,EAiBTE,a","sourcesContent":["import React from \"react\";\nimport { useContractKit } from \"@celo-tools/use-contractkit\";\nimport IERC20_ABI from \"src/abis/dahlia_contracts/IERC20.json\"\nimport { IERC20 } from \"src/generated/IERC20\";\nimport { useAsyncState } from \"src/hooks/useAsyncState\";\nimport { isAddress, toBN, AbiItem } from \"web3-utils\";\nimport { getAddress } from \"ethers/lib/utils\";\nimport { safeBoxMap } from \"src/config\";\nimport { Token } from \"src/utils/token\";\n\n\nexport const useERCmulti = (tokens: Token[]) => {\n  const { kit } = useContractKit();\n  const call = React.useCallback(async () => {\n    return tokens.map(async ({address}) => {\n        if (!address || !isAddress(address) || !address) {\n            return null;\n        };\n        const ERCToken = (new kit.web3.eth.Contract(\n            IERC20_ABI.abi as AbiItem[],\n            address,\n          ) as unknown) as IERC20;\n          const allowance = toBN(\n            await ERCToken.methods.allowance(address, safeBoxMap.get(getAddress(address))!).call()\n          );\n          const balance = toBN(await ERCToken.methods.balanceOf(address).call());\n          return { allowance, balance };\n    });\n  }, [kit, tokens]);\n  return useAsyncState(null, call);\n};\n"]},"metadata":{},"sourceType":"module"}