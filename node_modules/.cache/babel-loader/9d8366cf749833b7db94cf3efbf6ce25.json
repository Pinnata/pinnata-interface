{"ast":null,"code":"var _jsxFileName = \"/Users/kylescott/src/nomspace-interface/src/pages/Position/PositionEntry.tsx\",\n    _s = $RefreshSig$();\n\nimport { css } from \"@emotion/react\";\nimport styled from \"@emotion/styled\";\nimport { useContractKit } from \"@celo-tools/use-contractkit\";\nimport { toBN } from \"web3-utils\";\nimport BANK_ABI from \"src/abis/dahlia_contracts/HomoraBank.json\";\nimport PROXYORACLE_ABI from \"src/abis/dahlia_contracts/ProxyOracle.json\";\nimport { Bank, DEFAULT_GAS_PRICE } from \"src/config\";\nimport React from \"react\";\nimport { getAddress } from \"ethers/lib/utils\";\nimport { FarmInfo } from \"src/components/FarmInfo\";\nimport { Flex, Button } from \"theme-ui\";\nimport UNI_SPELL from \"src/abis/dahlia_contracts/UniswapV2SpellV1.json\";\nimport { MaxUint256 } from \"@ethersproject/constants\";\nimport { toastTx } from \"src/utils/toastTx\";\nimport { toast } from \"react-toastify\";\nimport { useHistory } from \"react-router\";\nimport { Spinner } from \"theme-ui\";\nimport COREORACLE_ABI from \"src/abis/dahlia_contracts/CoreOracle.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const PositionEntry = props => {\n  _s();\n\n  const {\n    kit,\n    network,\n    getConnectedKit\n  } = useContractKit();\n  const [confirmLoading, setConfirmLoading] = React.useState(false);\n  const history = useHistory();\n  const scale = toBN(2).pow(toBN(112));\n  const bank = React.useMemo(() => new kit.web3.eth.Contract(BANK_ABI.abi, getAddress(Bank[network.chainId])), [kit, network]);\n  const call = React.useCallback(async () => {\n    try {\n      const prices = [];\n      const oracle = await bank.methods.oracle().call();\n      const proxyOracle = new kit.web3.eth.Contract(PROXYORACLE_ABI.abi, oracle);\n      const source = await proxyOracle.methods.source().call();\n      const coreOracle = new kit.web3.eth.Contract(COREORACLE_ABI.abi, source);\n      const price = await coreOracle.methods.getCELOPx(props.pool.lp).call();\n      const ret = await bank.methods.getPositionDebts(props.positionId).call();\n      const debts = [];\n\n      for (let token of pool.tokens) {\n        const factor = await proxyOracle.methods.tokenFactors(token.address).call();\n        factors.push(factor);\n        const price = await coreOracle.methods.getCELOPx(token.address).call();\n        prices.push(toBN(price));\n\n        for (let i = 0; i < ret.tokens.length; i += 1) {\n          if (getAddress(token.address) === getAddress(ret.tokens[i])) {\n            debts.push(toBN(ret.debts[i]));\n            break;\n          }\n\n          if (i === ret.tokens.length - 1) debts.push(toBN(0));\n        }\n      }\n\n      const existingWeightBorrowValue = await bank.methods.getBorrowETHValue(position.positionId).call();\n      const weightedCollateralValue = await proxyOracle.methods.asETHCollateral(pool.wrapper, position.collId, toBN(position.collateralSize).sub(remove.removeLp).toString(), zeroAdd).call();\n      const maxAmounts = debts.map((x, index) => x.lt(remove.remove[index]) ? fromWei(x) : fromWei(remove.remove[index]));\n\n      if (!init) {\n        setInit(true);\n        setAmounts(maxAmounts.map(x => String((Number(x) / 3).toFixed(3))));\n      }\n\n      return {\n        debts,\n        maxAmounts,\n        weightedCollateralValue,\n        existingWeightBorrowValue,\n        factors,\n        prices\n      };\n    } catch (error) {\n      console.log(error);\n    }\n  }, [bank.methods, init, kit.web3.eth.Contract, pool.tokens, pool.wrapper, position.collId, position.collateralSize, position.positionId, remove.remove, remove.removeLp]);\n  const [info] = useAsyncState(null, call); //   const lever = (factor: {borrowFactor: string, collateralFactor: string}) => {\n  //     return 1 + (Number(factor.collateralFactor) / (Number(factor.borrowFactor) - Number(factor.collateralFactor)))\n  //   }\n  //   const maxLever = info ? Math.max(...(info?.tokenFactor.map((x) => lever({borrowFactor: x.borrowFactor, collateralFactor: x.collateralFactor})))!) : 0;\n  //   const { tokens } = poolprops;\n\n  const closeButton = /*#__PURE__*/_jsxDEV(Button, {\n    onClick: async () => {\n      const kit = await getConnectedKit(); // kit is connected to a wallet\n\n      try {\n        setConfirmLoading(true);\n        const bank = new kit.web3.eth.Contract(BANK_ABI.abi, getAddress(Bank[network.chainId]));\n        const spell = new kit.web3.eth.Contract(UNI_SPELL.abi, getAddress(props.pool.spell));\n        const bytes = spell.methods.removeLiquidityWStakingRewards(props.pool.tokens[0].address, props.pool.tokens[1].address, [MaxUint256.toString(), 0, MaxUint256.toString(), MaxUint256.toString(), 0, 0, 0], props.pool.wrapper).encodeABI();\n        const tx = await bank.methods.execute(props.positionId, props.pool.spell, bytes).send({\n          from: kit.defaultAccount,\n          gasPrice: DEFAULT_GAS_PRICE,\n          gas: 10000000\n        });\n        toastTx(tx.transactionHash);\n      } catch (e) {\n        toast(e.message);\n      } finally {\n        setConfirmLoading(false);\n      }\n    },\n    children: \"Close\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 5\n  }, this);\n\n  const harvestButton = /*#__PURE__*/_jsxDEV(Button, {\n    onClick: async () => {\n      const kit = await getConnectedKit(); // kit is connected to a wallet\n\n      try {\n        setConfirmLoading(true);\n        const bank = new kit.web3.eth.Contract(BANK_ABI.abi, getAddress(Bank[network.chainId]));\n        const spell = new kit.web3.eth.Contract(UNI_SPELL.abi, getAddress(props.pool.spell));\n        const bytes = spell.methods.harvestWStakingRewards(props.pool.wrapper).encodeABI();\n        const tx = await bank.methods.execute(props.positionId, props.pool.spell, bytes).send({\n          from: kit.defaultAccount,\n          gasPrice: DEFAULT_GAS_PRICE,\n          gas: 10000000\n        });\n        toastTx(tx.transactionHash);\n      } catch (e) {\n        toast(e.message);\n      } finally {\n        setConfirmLoading(false);\n      }\n    },\n    children: \"Harvest\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 168,\n    columnNumber: 3\n  }, this);\n\n  const urlext = props.positionId + \"/\" + props.collId + \"/\" + props.collateralSize + \"/\" + props.pool.name + \"/\" + props.pool.wrapper + \"/\" + props.pool.spell + \"/\" + props.pool.lp + \"/\" + props.pool.tokens.map(tok => tok.address);\n  return /*#__PURE__*/_jsxDEV(Row, {\n    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n      children: /*#__PURE__*/_jsxDEV(FarmInfo, {\n        props: props.pool\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: \"A lot\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: \"A lot\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: \"High\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: \"High\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      css: css`\n          text-align: right;\n        `,\n      children: confirmLoading ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 30\n      }, this) : /*#__PURE__*/_jsxDEV(Flex, {\n        sx: {\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          flexDirection: \"column\",\n          gap: \"6px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Flex, {\n          sx: {\n            justifyContent: \"center\",\n            alighnItems: \"center\",\n            gap: \"6px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => {\n              history.push(`positions/add/${urlext}`);\n            },\n            children: \"Add\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => {\n              history.push(`positions/remove/${urlext}`);\n            },\n            children: \"Remove\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Flex, {\n          sx: {\n            justifyContent: \"center\",\n            alighnItems: \"center\",\n            gap: \"6px\"\n          },\n          children: [closeButton, harvestButton]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 211,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PositionEntry, \"r/DUf2b15CcBoSAC4V2HYHQjgiY=\", true, function () {\n  return [useContractKit, useHistory];\n});\n\n_c = PositionEntry;\nconst Row = styled.tr`\n  height: 72px;\n`;\n_c2 = Row;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"PositionEntry\");\n$RefreshReg$(_c2, \"Row\");","map":{"version":3,"sources":["/Users/kylescott/src/nomspace-interface/src/pages/Position/PositionEntry.tsx"],"names":["css","styled","useContractKit","toBN","BANK_ABI","PROXYORACLE_ABI","Bank","DEFAULT_GAS_PRICE","React","getAddress","FarmInfo","Flex","Button","UNI_SPELL","MaxUint256","toastTx","toast","useHistory","Spinner","COREORACLE_ABI","PositionEntry","props","kit","network","getConnectedKit","confirmLoading","setConfirmLoading","useState","history","scale","pow","bank","useMemo","web3","eth","Contract","abi","chainId","call","useCallback","prices","oracle","methods","proxyOracle","source","coreOracle","price","getCELOPx","pool","lp","ret","getPositionDebts","positionId","debts","token","tokens","factor","tokenFactors","address","factors","push","i","length","existingWeightBorrowValue","getBorrowETHValue","position","weightedCollateralValue","asETHCollateral","wrapper","collId","collateralSize","sub","remove","removeLp","toString","zeroAdd","maxAmounts","map","x","index","lt","fromWei","init","setInit","setAmounts","String","Number","toFixed","error","console","log","info","useAsyncState","closeButton","spell","bytes","removeLiquidityWStakingRewards","encodeABI","tx","execute","send","from","defaultAccount","gasPrice","gas","transactionHash","e","message","harvestButton","harvestWStakingRewards","urlext","name","tok","justifyContent","alignItems","flexDirection","gap","alighnItems","Row","tr"],"mappings":"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","sourcesContent":["import { css } from \"@emotion/react\";\nimport styled from \"@emotion/styled\";\nimport { useContractKit } from \"@celo-tools/use-contractkit\";\nimport { TokenInfo } from \"src/components/TokenInfo\";\nimport { Token } from \"src/utils/token\";\nimport { AbiItem, toBN } from \"web3-utils\";\nimport BANK_ABI from \"src/abis/dahlia_contracts/HomoraBank.json\";\nimport CERC20_ABI from \"src/abis/fountain_of_youth/CErc20Immutable.json\";\nimport JUMPRATE_ABI from \"src/abis/fountain_of_youth/JumpRateModelV2.json\"; \nimport PROXYORACLE_ABI from \"src/abis/dahlia_contracts/ProxyOracle.json\";\nimport { HomoraBank } from \"src/generated/HomoraBank\";\nimport { ProxyOracle } from \"src/generated/ProxyOracle\";\nimport { CErc20Immutable } from \"src/generated/CErc20Immutable\";\nimport { JumpRateModelV2 } from \"src/generated/JumpRateModelV2\";\nimport { Bank, DEFAULT_GAS_PRICE} from \"src/config\";\nimport React from \"react\";\nimport { getAddress } from \"ethers/lib/utils\";\nimport { humanFriendlyWei } from \"src/utils/eth\";\nimport { PoolIcon } from \"src/components/PoolIcon\";\nimport { FarmInfo } from \"src/components/FarmInfo\";\nimport { Flex, Button } from \"theme-ui\";\nimport { TokenBorrowInfo } from \"src/components/TokenBorrowInfo\";\nimport {  RecoilRoot,  atom,  useRecoilState,  useSetRecoilState } from 'recoil';\nimport { poolProps } from \"src/pages/Farm/newFarm/NewFarm\";\nimport UNI_SPELL from \"src/abis/dahlia_contracts/UniswapV2SpellV1.json\";\nimport { UniswapV2SpellV1 } from \"src/generated/UniswapV2SpellV1\";\nimport { MaxUint256 } from \"@ethersproject/constants\";\nimport { toastTx } from \"src/utils/toastTx\";\nimport { toast } from \"react-toastify\";\nimport { useHistory } from \"react-router\";\nimport { Spinner } from \"theme-ui\"\nimport { CoreOracle } from \"src/generated/CoreOracle\";\nimport COREORACLE_ABI from \"src/abis/dahlia_contracts/CoreOracle.json\";\n\n\ninterface Props {\n  pool: poolProps,\n  positionId: number,\n  collateralSize: string, \n  collId: string,\n}\n\nexport const PositionEntry: React.FC<Props> = (props: Props) => {\n  const { kit, network, getConnectedKit } = useContractKit();\n  const [confirmLoading, setConfirmLoading] = React.useState(false);\n  const history = useHistory();\n  const scale = toBN(2).pow(toBN(112)); \n\n\n  const bank = React.useMemo(() => (new kit.web3.eth.Contract(\n    BANK_ABI.abi as AbiItem[],\n    getAddress(Bank[network.chainId])\n  ) as unknown) as HomoraBank, [kit, network]); \n\n  const call = React.useCallback(async () => {\n    try {\n      const prices: BN[] = [];\n      const oracle = await bank.methods.oracle().call();\n      const proxyOracle = (new kit.web3.eth.Contract(\n        PROXYORACLE_ABI.abi as AbiItem[],\n        oracle,\n      ) as unknown) as ProxyOracle;\n      const source = await proxyOracle.methods.source().call();\n      const coreOracle = (new kit.web3.eth.Contract(\n        COREORACLE_ABI.abi as AbiItem[],\n        source,\n      ) as unknown) as CoreOracle;\n      const price = await coreOracle.methods.getCELOPx(props.pool.lp).call();\n\n        const ret = await bank.methods.getPositionDebts(props.positionId!).call();\n        const debts = [];\n        for (let token of pool.tokens) {\n          const factor = await proxyOracle.methods.tokenFactors(token.address).call();\n          factors.push(factor);\n          const price = await coreOracle.methods.getCELOPx(token.address).call();\n          prices.push(toBN(price));\n          for (let i = 0; i < ret.tokens.length; i += 1) {\n            if (getAddress(token.address) === getAddress(ret.tokens[i]!)) {\n              debts.push(toBN(ret.debts[i]!));\n              break; \n            }\n            if (i === ret.tokens.length - 1) debts.push(toBN(0));\n          }\n        }\n        const existingWeightBorrowValue = await bank.methods.getBorrowETHValue(position.positionId!).call();\n        const weightedCollateralValue = await proxyOracle.methods.asETHCollateral(pool.wrapper, position.collId!, toBN(position.collateralSize!).sub(remove.removeLp!).toString(), zeroAdd).call();\n\n        const maxAmounts = debts.map((x, index) => x.lt(remove.remove![index]!) ? fromWei(x) : fromWei(remove.remove![index]!)); \n        if (!init) {\n          setInit(true); \n          setAmounts(maxAmounts.map((x) => String((Number(x) / 3).toFixed(3))));\n        }\n        return {\n          debts,\n          maxAmounts,\n          weightedCollateralValue,\n          existingWeightBorrowValue,\n          factors,\n          prices,\n        };\n    } catch (error) {\n        console.log(error)\n    }\n}, [bank.methods, init, kit.web3.eth.Contract, pool.tokens, pool.wrapper, position.collId, position.collateralSize, position.positionId, remove.remove, remove.removeLp])\n  const [info] = useAsyncState(null, call);\n\n//   const lever = (factor: {borrowFactor: string, collateralFactor: string}) => {\n//     return 1 + (Number(factor.collateralFactor) / (Number(factor.borrowFactor) - Number(factor.collateralFactor)))\n//   }\n\n//   const maxLever = info ? Math.max(...(info?.tokenFactor.map((x) => lever({borrowFactor: x.borrowFactor, collateralFactor: x.collateralFactor})))!) : 0;\n\n\n//   const { tokens } = poolprops;\n\n  const closeButton = (\n    <Button\n      onClick={async () => {\n        const kit = await getConnectedKit();\n        // kit is connected to a wallet\n        try {\n          setConfirmLoading(true);\n          const bank = (new kit.web3.eth.Contract(\n            BANK_ABI.abi as AbiItem[],\n            getAddress(Bank[network.chainId])\n            ) as unknown) as HomoraBank;\n          const spell = (new kit.web3.eth.Contract(\n            UNI_SPELL.abi as AbiItem[],\n            getAddress(props.pool.spell),\n          ) as unknown) as UniswapV2SpellV1;\n          const bytes = spell.methods.removeLiquidityWStakingRewards(\n            props.pool.tokens[0]!.address, \n            props.pool.tokens[1]!.address, \n            [\n              MaxUint256.toString(),\n              0, \n              MaxUint256.toString(), \n              MaxUint256.toString(), \n              0, \n              0, \n              0\n            ],\n            props.pool.wrapper,\n          ).encodeABI()\n          const tx = await bank.methods\n            .execute(\n                props.positionId,\n                props.pool.spell,\n                bytes,\n            ).send({\n              from: kit.defaultAccount,\n              gasPrice: DEFAULT_GAS_PRICE,\n              gas: 10000000,\n            });\n          toastTx(tx.transactionHash);\n        } catch (e) {\n          toast(e.message);\n        } finally {\n          setConfirmLoading(false);\n        }\n      }}\n    >\n      Close\n    </Button>\n  );\n\n  const harvestButton = (\n  <Button\n    onClick={async () => {\n      const kit = await getConnectedKit();\n      // kit is connected to a wallet\n      try {\n        setConfirmLoading(true);\n        const bank = (new kit.web3.eth.Contract(\n          BANK_ABI.abi as AbiItem[],\n          getAddress(Bank[network.chainId])\n          ) as unknown) as HomoraBank;\n        const spell = (new kit.web3.eth.Contract(\n          UNI_SPELL.abi as AbiItem[],\n          getAddress(props.pool.spell),\n        ) as unknown) as UniswapV2SpellV1;\n        const bytes = spell.methods.harvestWStakingRewards(\n          props.pool.wrapper,\n        ).encodeABI()\n        const tx = await bank.methods\n          .execute(\n              props.positionId,\n              props.pool.spell,\n              bytes,\n          ).send({\n            from: kit.defaultAccount,\n            gasPrice: DEFAULT_GAS_PRICE,\n            gas: 10000000,\n          });\n        toastTx(tx.transactionHash);\n      } catch (e) {\n        toast(e.message);\n      } finally {\n        setConfirmLoading(false);\n      }\n    }}\n  >\n  Harvest\n</Button>\n);\n\n  const urlext = props.positionId + \"/\" + props.collId + \"/\" + props.collateralSize + \"/\" + props.pool.name + \"/\" + props.pool.wrapper + \"/\" + props.pool.spell + \"/\" + props.pool.lp + \"/\"\n    + props.pool.tokens.map((tok) => tok.address)\n\n  return (\n    <Row>\n      <td>\n      <FarmInfo props={props.pool} />\n      </td>\n      <td>A lot</td>\n      <td>A lot</td>\n      <td>High</td>\n      <td>High</td>\n      <td\n        css={css`\n          text-align: right;\n        `}\n      >\n          { confirmLoading ? <Spinner /> : (\n        <Flex sx={{justifyContent: \"center\", alignItems: \"center\", flexDirection: \"column\", gap: \"6px\"}}>\n\n          <Flex sx={{justifyContent: \"center\", alighnItems: \"center\", gap: \"6px\"}}>\n            <Button onClick={() => {\n             history.push(`positions/add/${urlext}`)}\n            }>\n              Add\n            </Button>\n            <Button onClick={() => {\n             history.push(`positions/remove/${urlext}`)}\n            }>\n              Remove\n            </Button>\n          </Flex>\n          <Flex sx={{justifyContent: \"center\", alighnItems: \"center\", gap: \"6px\"}}>\n            {closeButton}\n            {harvestButton}\n          </Flex>\n          </Flex>\n          )}\n        \n      </td>\n    </Row>\n  );\n};\n\nconst Row = styled.tr`\n  height: 72px;\n`;"]},"metadata":{},"sourceType":"module"}