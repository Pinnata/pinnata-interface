{"ast":null,"code":"var _jsxFileName = \"/Users/kylescott/src/nomspace-interface/src/pages/Farm/newFarm/supply.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Button, Card, Flex, Heading, Spinner } from \"theme-ui\";\nimport { useERC } from \"src/hooks/useERC\";\nimport { useERCmulti } from \"src/hooks/useERCmulti\";\nimport { TokenInputForm } from \"src/components/TokenInputForm\";\nimport { atom, useSetRecoilState, useRecoilState } from 'recoil';\nimport { pageState, Page, poolState } from \"src/pages/Farm/newFarm/NewFarm\";\nimport { BlockText } from \"src/components/BlockText\";\nimport { Token } from \"src/utils/token\";\nimport { toWei, toBN } from \"web3-utils\";\nimport { lpToken } from \"src/config\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst emptyFarmState = {\n  tokenSupply: null,\n  lpSupply: null,\n  tokenBorrow: null,\n  lpBorrow: null,\n  info: null\n};\nexport const farmState = atom({\n  key: 'farmState',\n  default: emptyFarmState\n});\nexport const Supply = () => {\n  _s();\n\n  const [pool] = useRecoilState(poolState);\n  const setPage = useSetRecoilState(pageState);\n  const [buttonLoading, setButtonLoading] = React.useState(true);\n  const [farm, setFarm] = useRecoilState(farmState);\n  const lpTok = new Token({ ...lpToken,\n    address: pool.lp\n  });\n  const [erc] = useERC(lpTok.address);\n  const [tokenStates] = useERCmulti(pool.tokens);\n  const [amounts, setAmounts] = React.useState(Array(pool.tokens.length).fill(\"0\"));\n  console.log(amounts);\n  const [lpAmount, setLPAmount] = React.useState(\"0\");\n\n  const continueButton = /*#__PURE__*/_jsxDEV(Button, {\n    onClick: () => {\n      setFarm({ ...farm,\n        tokenSupply: amounts.map(x => toBN(toWei(x))),\n        lpSupply: toBN(toWei(lpAmount))\n      });\n      setPage(Page.Borrow);\n    },\n    children: \"Continue\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n\n  const invalid = /*#__PURE__*/_jsxDEV(Button, {\n    disabled: true,\n    children: \"Enter a valid amount\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 20\n  }, this);\n\n  const insufficient = /*#__PURE__*/_jsxDEV(Button, {\n    disabled: true,\n    children: \"Insufficient funds\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 25\n  }, this);\n\n  let button = continueButton;\n\n  if (tokenStates) {\n    for (let i = 0; i < tokenStates.length; i += 1) {\n      if (tokenStates[i]) {\n        var _tokenStates$i;\n\n        const fmtCost = amounts[i] === \"\" ? \"0\" : amounts[i];\n        const amountBN = toBN(toWei(fmtCost));\n\n        if (Number(fmtCost) < 0 || amounts[i] === \"\") {\n          button = invalid;\n        } else if ((_tokenStates$i = tokenStates[i]) === null || _tokenStates$i === void 0 ? void 0 : _tokenStates$i.balance.lt(amountBN)) {\n          button = insufficient;\n        }\n      }\n    }\n\n    if (erc) {\n      const fmtCost = lpAmount === \"\" ? \"0\" : lpAmount;\n      const amountBN = toBN(toWei(lpAmount));\n\n      if (Number(fmtCost) < 0 || lpAmount === \"\") {\n        button = invalid;\n      } else if (erc.balance.lt(amountBN)) {\n        button = insufficient;\n      }\n\n      if (amounts.every(x => x === \"0\") && lpAmount === \"0\") button = invalid;\n      if (buttonLoading) setButtonLoading(false);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(Flex, {\n    sx: {\n      alignItems: \"center\",\n      flexDirection: \"column\"\n    },\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      sx: {\n        width: \"100%\",\n        maxWidth: \"800px\"\n      },\n      py: 4,\n      px: 3,\n      children: [/*#__PURE__*/_jsxDEV(Flex, {\n        mb: 4,\n        children: /*#__PURE__*/_jsxDEV(Heading, {\n          as: \"h2\",\n          mr: 2,\n          children: \"Farm\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Flex, {\n        sx: {\n          flexDirection: \"column\",\n          gap: \"25px\",\n          mb: 10\n        },\n        children: [/*#__PURE__*/_jsxDEV(BlockText, {\n          variant: \"primary\",\n          children: \"Supply\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this), pool.tokens.map((tok, index) => {\n          var _index;\n\n          return /*#__PURE__*/_jsxDEV(TokenInputForm, {\n            token: tok,\n            amount: amounts[index],\n            setAmount: s => setAmounts(amounts.map((x, i) => i === index ? s : x)),\n            balance: tokenStates && tokenStates[index] ? (_index = tokenStates[index]) === null || _index === void 0 ? void 0 : _index.balance : null\n          }, tok.address, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Flex, {\n        sx: {\n          mt: \"25px\"\n        },\n        children: /*#__PURE__*/_jsxDEV(BlockText, {\n          variant: \"primary\",\n          children: \"Supply LP Token\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TokenInputForm, {\n        token: lpTok,\n        amount: lpAmount,\n        setAmount: setLPAmount,\n        balance: erc ? erc.balance : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Flex, {\n        sx: {\n          justifyContent: \"center\",\n          mt: 6\n        },\n        children: buttonLoading ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 15\n        }, this) : button\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Supply, \"PQ/XGQNW9OtSslb1ppUKlypIVhY=\", false, function () {\n  return [useRecoilState, useSetRecoilState, useRecoilState, useERC, useERCmulti];\n});\n\n_c = Supply;\n\nvar _c;\n\n$RefreshReg$(_c, \"Supply\");","map":{"version":3,"sources":["/Users/kylescott/src/nomspace-interface/src/pages/Farm/newFarm/supply.tsx"],"names":["React","Button","Card","Flex","Heading","Spinner","useERC","useERCmulti","TokenInputForm","atom","useSetRecoilState","useRecoilState","pageState","Page","poolState","BlockText","Token","toWei","toBN","lpToken","emptyFarmState","tokenSupply","lpSupply","tokenBorrow","lpBorrow","info","farmState","key","default","Supply","pool","setPage","buttonLoading","setButtonLoading","useState","farm","setFarm","lpTok","address","lp","erc","tokenStates","tokens","amounts","setAmounts","Array","length","fill","console","log","lpAmount","setLPAmount","continueButton","map","x","Borrow","invalid","insufficient","button","i","fmtCost","amountBN","Number","balance","lt","every","alignItems","flexDirection","width","maxWidth","gap","mb","tok","index","s","mt","justifyContent"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {\n  Button,\n  Card,\n  Flex,\n  Heading,\n  Spinner,\n  Text,\n} from \"theme-ui\";\nimport { CaretLeft } from \"phosphor-react\";\nimport { useERC } from \"src/hooks/useERC\";\nimport { useERCmulti } from \"src/hooks/useERCmulti\";\nimport { TokenInputForm } from \"src/components/TokenInputForm\";\nimport { atom, useSetRecoilState, useRecoilState } from 'recoil';\nimport { pageState, Page, poolProps, poolState } from \"src/pages/Farm/newFarm/NewFarm\";\nimport { BlockText } from \"src/components/BlockText\";\nimport { Token } from \"src/utils/token\";\nimport { toWei, toBN } from \"web3-utils\";\nimport { lpToken } from \"src/config\";\nimport BN from 'bn.js';\n\nexport interface farmProps {\n  tokenSupply: BN[] | null;\n  lpSupply: BN | null;\n  tokenBorrow: BN[] | null;\n  lpBorrow: BN | null;\n  info : any | null; \n}\n\nconst emptyFarmState : farmProps = {\n  tokenSupply: null,\n  lpSupply: null,\n  tokenBorrow: null,\n  lpBorrow: null,\n  info: null,\n}\n\nexport const farmState = atom({\n  key: 'farmState',\n  default: emptyFarmState\n})\n\nexport const Supply: React.FC = () => {\n  const [pool] = useRecoilState(poolState);\n  const setPage = useSetRecoilState(pageState)\n  const [buttonLoading, setButtonLoading] = React.useState(true); \n  const [farm, setFarm] = useRecoilState(farmState);\n\n  const lpTok: Token = new Token({\n    ...lpToken,\n    address: pool!.lp,\n  });\n  const [erc] = useERC(lpTok.address);\n  const [tokenStates] = useERCmulti(pool!.tokens)\n  \n  const [amounts, setAmounts] = React.useState(Array<string>(pool.tokens.length).fill(\"0\"))\n  console.log(amounts);\n\n  const [lpAmount, setLPAmount] = React.useState(\"0\")\n\n  const continueButton = (\n    <Button\n      onClick={() => {\n        setFarm({\n          ...farm,\n          tokenSupply: amounts.map((x) => toBN(toWei(x))),\n          lpSupply: toBN(toWei(lpAmount)),\n          });\n        setPage(Page.Borrow); \n      }}\n      >\n        Continue\n      </Button>\n  )\n\n  const invalid = (<Button disabled>Enter a valid amount</Button>)\n  const insufficient = (<Button disabled={true}>Insufficient funds</Button>);\n\n  let button = continueButton;\n  if (tokenStates) {\n    for (let i = 0; i < tokenStates.length; i += 1) {\n      if (tokenStates[i]){\n        const fmtCost = amounts[i] === \"\" ? \"0\" : amounts[i]!;\n        const amountBN = toBN(toWei(fmtCost))\n        if (Number(fmtCost) < 0 || amounts[i] === \"\") {\n          button = invalid;\n        } else if (tokenStates[i]?.balance.lt(amountBN)) {\n          button = insufficient;\n        } \n      }\n    }\n    if (erc) {\n      const fmtCost = lpAmount === \"\" ? \"0\" : lpAmount;\n      const amountBN = toBN(toWei(lpAmount))\n      if (Number(fmtCost) < 0 || lpAmount === \"\") {\n        button = invalid;\n      } else if (erc.balance.lt(amountBN)) {\n        button = insufficient;\n      }\n      if (amounts.every((x) => x === \"0\") && lpAmount === \"0\") button = invalid; \n      if (buttonLoading) setButtonLoading(false); \n    }\n  }\n\n  return (\n    <Flex sx={{ alignItems: \"center\", flexDirection: \"column\" }}>\n      <Card sx={{ width: \"100%\", maxWidth: \"800px\" }} py={4} px={3}>\n        <Flex mb={4}>\n          <Heading as=\"h2\" mr={2}>\n            Farm\n          </Heading>\n        </Flex>\n        <Flex sx={{flexDirection: \"column\", gap: \"25px\", mb: 10}}>\n          <BlockText variant=\"primary\">Supply</BlockText>\n          {pool.tokens.map((tok, index) => \n            <TokenInputForm key={tok.address} token={tok} amount={amounts[index]!}\n             setAmount={(s: string) => setAmounts(amounts.map((x, i) => i === index ? s : x))} \n             balance={tokenStates && tokenStates![index]! ? tokenStates![index]?.balance! : null}\n            />\n          )}\n        </Flex>\n        <Flex sx={{mt: \"25px\"}}>\n          <BlockText variant=\"primary\">Supply LP Token</BlockText>\n        </Flex>\n        <TokenInputForm token={lpTok} amount={lpAmount} setAmount={setLPAmount} balance={erc ? erc.balance : null}/>\n        <Flex sx={{ justifyContent: \"center\", mt: 6 }}>\n          {buttonLoading ? (\n              <Spinner />\n            ) : (\n              button\n            )}\n        </Flex>\n      </Card>\n    </Flex>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}