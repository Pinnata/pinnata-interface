{"ast":null,"code":"var _jsxFileName = \"/Users/kylescott/src/nomspace-interface/src/pages/Position/Remove/payback.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Button, Card, Flex, Text } from \"theme-ui\";\nimport { CaretLeft } from \"phosphor-react\";\nimport { useContractKit } from \"@celo-tools/use-contractkit\";\nimport { atom, useSetRecoilState, useRecoilState } from 'recoil';\nimport { poolState } from \"src/pages/Farm/newFarm/NewFarm\";\nimport { BlockText } from \"src/components/BlockText\";\nimport { TokenAmountInfo } from \"src/components/TokenAmountInfo\";\nimport { fromWei, toBN } from \"web3-utils\";\nimport { TokenSlider } from \"src/components/TokenSlider\";\nimport BANK_ABI from \"src/abis/dahlia_contracts/HomoraBank.json\";\nimport PROXYORACLE_ABI from \"src/abis/dahlia_contracts/ProxyOracle.json\";\nimport COREORACLE_ABI from \"src/abis/dahlia_contracts/CoreOracle.json\";\nimport { Bank } from \"src/config\";\nimport { getAddress } from \"ethers/lib/utils\";\nimport { useAsyncState } from \"src/hooks/useAsyncState\";\nimport { humanFriendlyNumber } from \"src/utils/number\";\nimport { removePage, removePageState, removePositionState } from \"./remove\";\nimport { removeRemoveState } from \"./removeTokens\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst emptyPaybackState = {\n  existingBalance: null,\n  remove: null,\n  debtRatio: null\n};\nexport const removePaybackState = atom({\n  key: 'removepaybackState',\n  default: emptyPaybackState\n});\nexport const Payback = () => {\n  _s();\n\n  const [pool] = useRecoilState(poolState);\n  const setPage = useSetRecoilState(removePageState);\n  const [position] = useRecoilState(removePositionState);\n  const [remove] = useRecoilState(removeRemoveState);\n  const [amounts, setAmounts] = React.useState(null);\n  const [init, setInit] = React.useState(false);\n  const zeroAdd = \"0x0000000000000000000000000000000000000000\";\n  const {\n    kit,\n    network\n  } = useContractKit();\n  const bank = React.useMemo(() => new kit.web3.eth.Contract(BANK_ABI.abi, getAddress(Bank[network.chainId])), [kit, network]);\n  const call = React.useCallback(async () => {\n    try {\n      const factors = [];\n      const prices = [];\n      const oracle = await bank.methods.oracle().call();\n      const proxyOracle = new kit.web3.eth.Contract(PROXYORACLE_ABI.abi, oracle);\n      const source = await proxyOracle.methods.source().call();\n      const coreOracle = new kit.web3.eth.Contract(COREORACLE_ABI.abi, source);\n      const ret = await bank.methods.getPositionDebts(position.positionId).call();\n      const debts = [];\n\n      for (let token of pool.tokens) {\n        for (let i = 0; i < ret.tokens.length; i += 1) {\n          if (getAddress(token.address) === getAddress(ret.tokens[i])) {\n            debts.push(ret.debts[i]);\n            break;\n          }\n        }\n      }\n\n      const removeWeightedCollateralValue = proxyOracle.methods.asETHCollateral(pool.wrapper, pool.lp, toBN(position.collateralSize).sub(remove.removeLp).toString(), zeroAdd).call();\n      const maxAmounts = debts.map((x, index) => toBN(x).lt(remove.remove[index]) ? fromWei(x) : fromWei(remove.remove[index]));\n\n      if (!init) {\n        setInit(true);\n        setAmounts(maxAmounts.map(x => String((Number(x) / 3).toFixed(3))));\n      }\n\n      return {\n        debts,\n        maxAmounts,\n        removeWeightedCollateralValue\n      };\n    } catch (error) {\n      console.log(error);\n    }\n  }, [bank.methods, init, kit.web3.eth.Contract, pool.lp, pool.tokens, pool.wrapper, position.collateralSize, position.positionId, remove.remove, remove.removeLp]);\n  const [info] = useAsyncState(null, call);\n\n  const continueButton = /*#__PURE__*/_jsxDEV(Button, {\n    onClick: () => {\n      setPage(removePage.Confirm);\n    },\n    children: \"Continue\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 3\n  }, this);\n\n  if (!info || !amounts) return null;\n  return /*#__PURE__*/_jsxDEV(Flex, {\n    sx: {\n      alignItems: \"center\",\n      flexDirection: \"column\"\n    },\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      sx: {\n        width: \"100%\",\n        maxWidth: \"800px\"\n      },\n      py: 4,\n      px: 3,\n      children: [/*#__PURE__*/_jsxDEV(Flex, {\n        onClick: () => {\n          setPage(removePage.Remove);\n        },\n        sx: {\n          alignItems: \"center\",\n          cursor: \"pointer\"\n        },\n        mb: 4,\n        children: [/*#__PURE__*/_jsxDEV(CaretLeft, {\n          size: 28\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          children: \"Back\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Flex, {\n        sx: {\n          flexDirection: \"column\",\n          gap: \"25px\",\n          mb: 10\n        },\n        children: [/*#__PURE__*/_jsxDEV(BlockText, {\n          variant: \"primary\",\n          children: \"I'm receiving\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Flex, {\n          sx: {\n            justifyContent: \"left\",\n            gap: \"8px\",\n            alignItems: \"center\"\n          },\n          children: remove && pool.tokens.map((tok, index) => /*#__PURE__*/_jsxDEV(Flex, {\n            sx: {\n              alignItems: \"center\",\n              mr: 4,\n              padding: 2,\n              borderStyle: \"solid\",\n              borderRadius: \"10px\"\n            },\n            children: /*#__PURE__*/_jsxDEV(TokenAmountInfo, {\n              token: tok,\n              amount: fromWei(remove.remove[index])\n            }, tok.address, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 13\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Flex, {\n        sx: {\n          flexDirection: \"column\",\n          gap: \"25px\",\n          mb: 10\n        },\n        children: [/*#__PURE__*/_jsxDEV(BlockText, {\n          variant: \"primary\",\n          children: \"Your position debts\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Flex, {\n          sx: {\n            justifyContent: \"left\",\n            gap: \"8px\",\n            alignItems: \"center\"\n          },\n          children: remove && pool.tokens.map((tok, index) => /*#__PURE__*/_jsxDEV(Flex, {\n            sx: {\n              alignItems: \"center\",\n              mr: 4,\n              padding: 2,\n              borderStyle: \"solid\",\n              borderRadius: \"10px\"\n            },\n            children: /*#__PURE__*/_jsxDEV(TokenAmountInfo, {\n              token: tok,\n              amount: fromWei(info.debts[index])\n            }, tok.address, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 13\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Flex, {\n        sx: {\n          mb: 2,\n          mt: \"25px\"\n        },\n        children: /*#__PURE__*/_jsxDEV(BlockText, {\n          variant: \"primary\",\n          children: \"I'd like to repay\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }, this), info && pool.tokens.map((tok, index) => /*#__PURE__*/_jsxDEV(TokenSlider, {\n        token: tok,\n        amount: String(amounts[index]),\n        setAmount: s => setAmounts(amounts.map((x, i) => i === index ? s : x)),\n        max: humanFriendlyNumber(info.maxAmounts[index])\n      }, tok.address, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 13\n      }, this)), /*#__PURE__*/_jsxDEV(Flex, {\n        sx: {\n          justifyContent: \"center\",\n          mt: 6\n        },\n        children: continueButton\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 128,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Payback, \"yrOICP7n7qstDv/xR0zni44d3Uk=\", false, function () {\n  return [useRecoilState, useSetRecoilState, useRecoilState, useRecoilState, useContractKit, useAsyncState];\n});\n\n_c = Payback;\n\nvar _c;\n\n$RefreshReg$(_c, \"Payback\");","map":{"version":3,"sources":["/Users/kylescott/src/nomspace-interface/src/pages/Position/Remove/payback.tsx"],"names":["React","Button","Card","Flex","Text","CaretLeft","useContractKit","atom","useSetRecoilState","useRecoilState","poolState","BlockText","TokenAmountInfo","fromWei","toBN","TokenSlider","BANK_ABI","PROXYORACLE_ABI","COREORACLE_ABI","Bank","getAddress","useAsyncState","humanFriendlyNumber","removePage","removePageState","removePositionState","removeRemoveState","emptyPaybackState","existingBalance","remove","debtRatio","removePaybackState","key","default","Payback","pool","setPage","position","amounts","setAmounts","useState","init","setInit","zeroAdd","kit","network","bank","useMemo","web3","eth","Contract","abi","chainId","call","useCallback","factors","prices","oracle","methods","proxyOracle","source","coreOracle","ret","getPositionDebts","positionId","debts","token","tokens","i","length","address","push","removeWeightedCollateralValue","asETHCollateral","wrapper","lp","collateralSize","sub","removeLp","toString","maxAmounts","map","x","index","lt","String","Number","toFixed","error","console","log","info","continueButton","Confirm","alignItems","flexDirection","width","maxWidth","Remove","cursor","gap","mb","justifyContent","tok","mr","padding","borderStyle","borderRadius","mt","s"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {\n  Button,\n  Card,\n  Flex,\n  Heading,\n  Text,\n} from \"theme-ui\";\nimport { CaretLeft } from \"phosphor-react\";\nimport { useContractKit } from \"@celo-tools/use-contractkit\";\nimport {  RecoilRoot,  atom,  selector,  useSetRecoilState, useRecoilState, useRecoilValue } from 'recoil';\nimport { poolProps, poolState } from \"src/pages/Farm/newFarm/NewFarm\";\nimport { BlockText } from \"src/components/BlockText\";\nimport { Token } from \"src/utils/token\";\nimport { lpToken } from \"src/config\";\nimport { TokenAmountInfo } from \"src/components/TokenAmountInfo\";\nimport { fromWei, toWei, toBN, AbiItem } from \"web3-utils\";\nimport { TokenSlider } from \"src/components/TokenSlider\";\nimport BANK_ABI from \"src/abis/dahlia_contracts/HomoraBank.json\";\nimport PROXYORACLE_ABI from \"src/abis/dahlia_contracts/ProxyOracle.json\";\nimport COREORACLE_ABI from \"src/abis/dahlia_contracts/CoreOracle.json\";\nimport { HomoraBank } from \"src/generated/HomoraBank\";\nimport { ProxyOracle } from \"src/generated/ProxyOracle\";\nimport { CoreOracle } from \"src/generated/CoreOracle\";\nimport { Bank } from \"src/config\";\nimport { getAddress } from \"ethers/lib/utils\";\nimport { useAsyncState } from \"src/hooks/useAsyncState\";\nimport { humanFriendlyNumber } from \"src/utils/number\";\nimport BN from 'bn.js';\nimport { Slider } from \"rsuite\";\nimport UNI_PAIR from \"src/abis/dahlia_contracts/dependencies/ubeswap/ubeswap@mainnet-v1/IUniswapV2Pair.json\"\nimport { IUniswapV2Pair } from \"src/generated/IUniswapV2Pair\";\nimport { removePage, removePageState, removePositionState } from \"./remove\";\nimport { removeRemoveState } from \"./removeTokens\"\n\ninterface paybackProps {\n  existingBalance: BN[] | null; \n  remove: BN[] | null;\n  debtRatio: number | null; \n}\n\nconst emptyPaybackState : paybackProps = {\n  existingBalance: null,\n  remove: null,\n  debtRatio: null,\n}\n\nexport const removePaybackState = atom({\n  key: 'removepaybackState',\n  default: emptyPaybackState\n})\n\nexport const Payback: React.FC = () => {\n  const [pool] = useRecoilState(poolState);\n  const setPage = useSetRecoilState(removePageState);\n  const [position] = useRecoilState(removePositionState); \n  const [remove] = useRecoilState(removeRemoveState);\n  const [amounts, setAmounts] = React.useState<(String[] | null)>(null);\n  const [init, setInit] = React.useState(false); \n  const zeroAdd = \"0x0000000000000000000000000000000000000000\"\n\n  const { kit, network } = useContractKit();\n\n  const bank = React.useMemo(() => (new kit.web3.eth.Contract(\n    BANK_ABI.abi as AbiItem[],\n    getAddress(Bank[network.chainId])\n  ) as unknown) as HomoraBank, [kit, network]); \n\n  const call = React.useCallback(async () => {\n    try {\n      const factors : {\n        borrowFactor: string;\n        collateralFactor: string;\n        liqIncentive: string;\n        0: string;\n        1: string;\n        2: string;\n      }[] = [];\n      const prices: BN[] = [];\n      const oracle = await bank.methods.oracle().call();\n      const proxyOracle = (new kit.web3.eth.Contract(\n        PROXYORACLE_ABI.abi as AbiItem[],\n        oracle,\n      ) as unknown) as ProxyOracle;\n      const source = await proxyOracle.methods.source().call();\n      const coreOracle = (new kit.web3.eth.Contract(\n        COREORACLE_ABI.abi as AbiItem[],\n        source,\n      ) as unknown) as CoreOracle;\n        const ret = await bank.methods.getPositionDebts(position.positionId!).call();\n        const debts = [];\n        for (let token of pool.tokens) {\n          for (let i = 0; i < ret.tokens.length; i += 1) {\n            if (getAddress(token.address) === getAddress(ret.tokens[i]!)) {\n              debts.push(ret.debts[i]!); \n              break;\n            }\n          }\n        }\n        \n        const removeWeightedCollateralValue = proxyOracle.methods.asETHCollateral(pool.wrapper, pool.lp, toBN(position.collateralSize!).sub(remove.removeLp!).toString(), zeroAdd).call();\n\n        const maxAmounts = debts.map((x, index) => toBN(x).lt(remove.remove![index]!) ? fromWei(x) : fromWei(remove.remove![index]!)); \n        if (!init) {\n          setInit(true); \n          setAmounts(maxAmounts.map((x) => String((Number(x) / 3).toFixed(3))));\n        }\n        return {debts, maxAmounts, removeWeightedCollateralValue};\n    } catch (error) {\n        console.log(error)\n    }\n}, [bank.methods, init, kit.web3.eth.Contract, pool.lp, pool.tokens, pool.wrapper, position.collateralSize, position.positionId, remove.remove, remove.removeLp])\n\n  const [info] = useAsyncState(null, call);\n\nconst continueButton = (\n  <Button\n    onClick={() => {\n      setPage(removePage.Confirm); \n    }}\n    >\n      Continue\n    </Button>\n)\n\n    if (!info! || !amounts!) return null; \n  return (\n    <Flex sx={{ alignItems: \"center\", flexDirection: \"column\" }}>\n      <Card sx={{ width: \"100%\", maxWidth: \"800px\" }} py={4} px={3}>\n        <Flex\n          onClick={() => {\n            setPage(removePage.Remove);\n          }}\n          sx={{ alignItems: \"center\", cursor: \"pointer\" }}\n          mb={4}\n        >\n          <CaretLeft size={28} />\n          <Text>Back</Text>\n        </Flex>\n        <Flex sx={{flexDirection: \"column\", gap: \"25px\", mb: 10}}>\n          <BlockText variant=\"primary\">I'm receiving</BlockText>\n          <Flex sx={{ justifyContent: \"left\", gap: \"8px\", alignItems: \"center\"}}>\n            {remove && pool.tokens.map((tok, index) => \n            <Flex\n            sx={{\n              alignItems: \"center\",\n              mr: 4,\n              padding:2,\n              borderStyle: \"solid\",\n              borderRadius: \"10px\",\n            }}\n          >\n              <TokenAmountInfo key={tok.address} token={tok} amount={fromWei(remove.remove![index]!)} />       \n            </Flex>\n          )}\n          </Flex>\n        </Flex>\n        <Flex sx={{flexDirection: \"column\", gap: \"25px\", mb: 10}}>\n          <BlockText variant=\"primary\">Your position debts</BlockText>\n          <Flex sx={{ justifyContent: \"left\", gap: \"8px\", alignItems: \"center\"}}>\n            {remove && pool.tokens.map((tok, index) => \n            <Flex\n            sx={{\n              alignItems: \"center\",\n              mr: 4,\n              padding:2,\n              borderStyle: \"solid\",\n              borderRadius: \"10px\",\n            }}\n          >\n              <TokenAmountInfo key={tok.address} token={tok} amount={fromWei(info!.debts[index]!)} />       \n            </Flex>\n          )}\n          </Flex>\n        </Flex>\n        <Flex sx={{mb: 2, mt: \"25px\"}}>\n          <BlockText variant=\"primary\">I'd like to repay</BlockText>\n        </Flex>\n        {/* <BlockText mb={2}>{\"Est. Debt Ratio: \".concat(humanFriendlyNumber(debtRatio)).concat(\"/100\")}</BlockText>*/}\n          {info && pool.tokens.map((tok, index) => \n            <TokenSlider key={tok.address} token={tok} amount={String(amounts![index])}\n            setAmount={(s: string) => setAmounts(amounts!.map((x, i) => i === index ? s : x))} \n            max={humanFriendlyNumber(info!.maxAmounts[index]!)}\n             />\n          )}\n        {/* <Flex sx={{flexDirection: \"column\", gap: \"25px\", mb: 10}}>\n          <BlockText variant=\"primary\">You receive</BlockText>\n          <Flex sx={{ justifyContent: \"left\", gap: \"8px\", alignItems: \"center\"}}>\n            {info && pool.tokens.map((tok, index) => \n            <Flex\n            sx={{\n              alignItems: \"center\",\n              mr: 4,\n              padding:2,\n              borderStyle: \"solid\",\n              borderRadius: \"10px\",\n            }}\n          >\n              <TokenAmountInfo key={tok.address} token={tok} amount={String(Number(fromWei(info![index]!)) * (per/100))} />       \n            </Flex>\n          )}\n          </Flex>\n        </Flex> */}\n        <Flex sx={{ justifyContent: \"center\", mt: 6 }}>\n          {\n          continueButton\n          }\n        </Flex>\n      </Card>\n    </Flex>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}