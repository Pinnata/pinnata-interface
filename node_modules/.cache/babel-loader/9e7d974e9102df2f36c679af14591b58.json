{"ast":null,"code":"var _jsxFileName = \"/Users/kylescott/src/nomspace-interface/src/pages/Farm/NewFarm.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { atom, useSetRecoilState } from 'recoil';\nimport { getToken } from \"src/utils/token\";\nimport { useParams } from \"react-router-dom\"; // import { Supply } from \"src/pages/Farm/Supply\";\n// import { Borrow } from \"src/pages/Farm/Borrow\";\n// import { Confirm } from \"src/pages/Farm/Confirm\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport let Page;\n\n(function (Page) {\n  Page[Page[\"Supply\"] = 0] = \"Supply\";\n  Page[Page[\"Borrow\"] = 1] = \"Borrow\";\n  Page[Page[\"Confirm\"] = 2] = \"Confirm\";\n})(Page || (Page = {}));\n\nexport const pageState = atom({\n  key: 'pageState',\n  default: Page.Supply\n});\nconst emptyPoolState = {\n  name: \"\",\n  wrapper: \"\",\n  spell: \"\",\n  lp: \"\",\n  tokens: []\n};\nexport const poolState = atom({\n  key: 'poolState',\n  default: emptyPoolState\n});\nexport const NewFarm = () => {\n  _s();\n\n  const {\n    name,\n    wrapper,\n    spell,\n    lp,\n    tokens\n  } = useParams();\n  const setPool = useSetRecoilState(poolState);\n  const set = {\n    name: name,\n    wrapper: wrapper,\n    spell: spell,\n    lp: lp,\n    tokens: tokens.split(',').map(x => getToken(x))\n  };\n  setPool(set);\n  const [page] = useRecoilState(pageState);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: name\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 7\n  }, this); //   return (\n  //     <div>\n  //       {\n  //         page === Page.Supply ? (\n  //             <Supply />\n  //           ) : (\n  //             page === Page.Borrow ? (\n  //             <Borrow />\n  //           ) : (\n  //             <Confirm />\n  //           ))}\n  //     </div>\n  //   );\n};\n\n_s(NewFarm, \"OMfUZWyTNZyK4Z3ZwDKVQ8qe2Kc=\", true, function () {\n  return [useParams, useSetRecoilState];\n});\n\n_c = NewFarm;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewFarm\");","map":{"version":3,"sources":["/Users/kylescott/src/nomspace-interface/src/pages/Farm/NewFarm.tsx"],"names":["React","atom","useSetRecoilState","getToken","useParams","Page","pageState","key","default","Supply","emptyPoolState","name","wrapper","spell","lp","tokens","poolState","NewFarm","setPool","set","split","map","x","page","useRecoilState"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,iBAAf,QAAwC,QAAxC;AACA,SAASC,QAAT,QAAgC,iBAAhC;AACA,SAASC,SAAT,QAA0B,kBAA1B,C,CACA;AACA;AACA;;;AAEA,WAAYC,IAAZ;;WAAYA,I;AAAAA,EAAAA,I,CAAAA,I;AAAAA,EAAAA,I,CAAAA,I;AAAAA,EAAAA,I,CAAAA,I;GAAAA,I,KAAAA,I;;AAMZ,OAAO,MAAMC,SAAS,GAAGL,IAAI,CAAC;AAC5BM,EAAAA,GAAG,EAAE,WADuB;AAE5BC,EAAAA,OAAO,EAAEH,IAAI,CAACI;AAFc,CAAD,CAAtB;AAaP,MAAMC,cAA0B,GAAG;AAC/BC,EAAAA,IAAI,EAAE,EADyB;AAE/BC,EAAAA,OAAO,EAAE,EAFsB;AAG/BC,EAAAA,KAAK,EAAE,EAHwB;AAI/BC,EAAAA,EAAE,EAAE,EAJ2B;AAK/BC,EAAAA,MAAM,EAAE;AALuB,CAAnC;AAQA,OAAO,MAAMC,SAAS,GAAGf,IAAI,CAAC;AAC5BM,EAAAA,GAAG,EAAE,WADuB;AAE5BC,EAAAA,OAAO,EAAEE;AAFmB,CAAD,CAAtB;AAKP,OAAO,MAAMO,OAAiB,GAAG,MAAM;AAAA;;AACrC,QAAM;AAAEN,IAAAA,IAAF;AAAQC,IAAAA,OAAR;AAAiBC,IAAAA,KAAjB;AAAwBC,IAAAA,EAAxB;AAA4BC,IAAAA;AAA5B,MAAuCX,SAAS,EAAtD;AACA,QAAMc,OAAO,GAAGhB,iBAAiB,CAACc,SAAD,CAAjC;AACA,QAAMG,GAAc,GAAI;AACpBR,IAAAA,IAAI,EAAEA,IADc;AAEpBC,IAAAA,OAAO,EAAEA,OAFW;AAGpBC,IAAAA,KAAK,EAAEA,KAHa;AAIpBC,IAAAA,EAAE,EAAEA,EAJgB;AAKpBC,IAAAA,MAAM,EAAGA,MAAM,CAACK,KAAP,CAAa,GAAb,EAAkBC,GAAlB,CAAuBC,CAAD,IAAOnB,QAAQ,CAACmB,CAAD,CAArC;AALW,GAAxB;AAOAJ,EAAAA,OAAO,CAACC,GAAD,CAAP;AAEA,QAAM,CAACI,IAAD,IAASC,cAAc,CAAClB,SAAD,CAA7B;AACA,sBACI;AAAA,cACKK;AADL;AAAA;AAAA;AAAA;AAAA,UADJ,CAbqC,CAmBvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACC,CAjCM;;GAAMM,O;UACkCb,S,EAC7BF,iB;;;KAFLe,O","sourcesContent":["import React from \"react\";\nimport { atom, useSetRecoilState } from 'recoil';\nimport { getToken, Token } from \"src/utils/token\";\nimport { useParams } from \"react-router-dom\";\n// import { Supply } from \"src/pages/Farm/Supply\";\n// import { Borrow } from \"src/pages/Farm/Borrow\";\n// import { Confirm } from \"src/pages/Farm/Confirm\";\n\nexport enum Page {\n  Supply, \n  Borrow, \n  Confirm,\n}\n\nexport const pageState = atom({\n  key: 'pageState',\n  default: Page.Supply\n})\n\nexport interface poolProps {\n    name: string;\n    wrapper: string;\n    spell: string;\n    lp: string;\n    tokens: Token[];\n}\n\nconst emptyPoolState : poolProps = {\n    name: \"\",\n    wrapper: \"\",\n    spell: \"\",\n    lp: \"\",\n    tokens: [],\n}\n\nexport const poolState = atom({\n  key: 'poolState',\n  default: emptyPoolState\n})\n\nexport const NewFarm: React.FC = () => {\n  const { name, wrapper, spell, lp, tokens } = useParams<{ name: string, wrapper: string, spell: string, lp:string, tokens:string}>();\n  const setPool = useSetRecoilState(poolState); \n  const set: poolProps  = {\n      name: name,\n      wrapper: wrapper,\n      spell: spell,\n      lp: lp,\n      tokens: (tokens.split(',').map((x) => getToken(x)!)),\n  }\n  setPool(set);  \n\n  const [page] = useRecoilState(pageState);\n  return (\n      <div>\n          {name}\n      </div>\n  )\n\n//   return (\n//     <div>\n//       {\n//         page === Page.Supply ? (\n//             <Supply />\n//           ) : (\n//             page === Page.Borrow ? (\n//             <Borrow />\n//           ) : (\n//             <Confirm />\n//           ))}\n//     </div>\n    \n//   );\n};"]},"metadata":{},"sourceType":"module"}