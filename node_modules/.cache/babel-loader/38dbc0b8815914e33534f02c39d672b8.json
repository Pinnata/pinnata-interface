{"ast":null,"code":"var _jsxFileName = \"/Users/kylescott/src/dahlia-interface/src/pages/Earn/Supply/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useContractKit } from \"@celo-tools/use-contractkit\";\nimport { useParams } from \"react-router-dom\";\nimport { DEFAULT_GAS_PRICE, safeBoxMap } from \"src/config\";\nimport { toBN, toWei } from \"web3-utils\";\nimport { toastTx } from \"src/utils/toastTx\";\nimport { toast } from \"react-toastify\";\nimport { MaxUint256 } from \"@ethersproject/constants\";\nimport ERC20_ABI from \"src/abis/fountain_of_youth/ERC20.json\";\nimport SAFEBOX_ABI from \"src/abis/dahlia_contracts/SafeBox.json\";\nimport { useERC } from \"src/hooks/useERC\";\nimport { getAddress } from \"ethers/lib/utils\";\nimport { getToken } from \"src/utils/token\";\nimport { Button, Card, Flex, Heading, Spinner } from \"theme-ui\";\nimport { BlockText } from \"src/components/BlockText\";\nimport { TokenInputForm } from \"src/components/TokenInputForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Supply = () => {\n  _s();\n\n  const {\n    getConnectedKit\n  } = useContractKit();\n  const [amount, setAmount] = React.useState(\"1\");\n  const [approveLoading, setApproveLoading] = React.useState(false);\n  const [supplyLoading, setSupplyLoading] = React.useState(false);\n  const [buttonLoading, setButtonLoading] = React.useState(true);\n  const {\n    tokenAddress\n  } = useParams();\n  const [erc, refetchERC] = useERC(tokenAddress, safeBoxMap.get(getAddress(tokenAddress)));\n\n  const approveButton = /*#__PURE__*/_jsxDEV(Button, {\n    onClick: async () => {\n      const kit = await getConnectedKit(); // kit is connected to a wallet\n\n      try {\n        setApproveLoading(true);\n        const ERCToken = new kit.web3.eth.Contract(ERC20_ABI, tokenAddress);\n        const tx = await ERCToken.methods.approve(safeBoxMap.get(getAddress(tokenAddress)), MaxUint256.toString()).send({\n          from: kit.defaultAccount,\n          gasPrice: DEFAULT_GAS_PRICE\n        });\n        toastTx(tx.transactionHash);\n        refetchERC();\n      } catch (e) {\n        toast(e.message);\n      } finally {\n        setApproveLoading(false);\n      }\n    },\n    children: \"Approve\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n\n  const supplyButton = /*#__PURE__*/_jsxDEV(Button, {\n    onClick: async () => {\n      const kit = await getConnectedKit(); // kit is connected to a wallet\n\n      const safeBox = new kit.web3.eth.Contract(SAFEBOX_ABI.abi, safeBoxMap.get(getAddress(tokenAddress)));\n\n      try {\n        setSupplyLoading(true);\n        const tx = await safeBox.methods.deposit(toWei(amount)).send({\n          from: kit.defaultAccount,\n          gasPrice: DEFAULT_GAS_PRICE\n        });\n        toastTx(tx.transactionHash);\n        refetchERC();\n      } catch (e) {\n        toast(e.message);\n      } finally {\n        setSupplyLoading(false);\n        setAmount(\"0\");\n      }\n    },\n    children: \"Deposit\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n\n  const loading = approveLoading || supplyLoading || buttonLoading;\n  let button = approveButton;\n\n  if (erc) {\n    const fmtCost = amount === \"\" ? \"0\" : amount;\n    const amountBN = toBN(toWei(fmtCost));\n\n    if (Number(amount) <= 0) {\n      button = /*#__PURE__*/_jsxDEV(Button, {\n        disabled: true,\n        children: \"Enter a valid amount\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 16\n      }, this);\n    } else if (erc.balance.lt(amountBN)) {\n      button = /*#__PURE__*/_jsxDEV(Button, {\n        disabled: true,\n        children: \"Insufficient funds\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 16\n      }, this);\n    } else if (erc.allowance.gt(amountBN)) {\n      button = supplyButton;\n    }\n\n    if (buttonLoading) setButtonLoading(false);\n  }\n\n  const token = getToken(tokenAddress);\n  return (\n    /*#__PURE__*/\n    // <Wrapper>\n    //   <Header>Supply</Header>\n    //   <InfoCard>\n    //     <InfoHeader>Supply tokens</InfoHeader>\n    //     <InputContainer>\n    //       <div className='flex'>\n    //         <Desc>Iâ€™d like to supply</Desc>\n    //         <Balance>Balance {erc ? humanFriendlyWei(erc.balance) : \"0.000\"}</Balance>\n    //       </div>\n    //       <Content>\n    //         <div className='flex'>\n    //           <Image src={token!.logoURL} alt='celo' />\n    //         </div>\n    //         <Num\n    //           value={amount}\n    //             onChange={(e: React.FormEvent<HTMLInputElement>) => setAmount((e.target as any).value)}\n    //         ></Num>\n    //         <Max onClick={() => {\n    //           if (erc) {\n    //             const cost = fromWei(erc.balance);\n    //             setAmount(cost);\n    //           }\n    //         }}\n    //         >MAX</Max>\n    //       </Content>\n    //       <Line />\n    //       <Description>\n    //         {\"You will recieve Dahlia interest-bearing \".concat(token!.symbol)}\n    //       </Description>\n    //       <FlexImage>\n    //         <img src={Background} alt='background' />\n    //       </FlexImage>\n    //       <FlexContainer>\n    //       {loading ? (\n    //         <Spinner />\n    //       ) : (\n    //         button\n    //       )}\n    //       </FlexContainer>\n    //     </InputContainer>\n    //   </InfoCard>\n    // </Wrapper>\n    _jsxDEV(Flex, {\n      sx: {\n        alignItems: \"center\",\n        flexDirection: \"column\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        sx: {\n          width: \"100%\",\n          maxWidth: \"800px\"\n        },\n        py: 4,\n        px: 3,\n        children: [/*#__PURE__*/_jsxDEV(Flex, {\n          mb: 4,\n          children: /*#__PURE__*/_jsxDEV(Heading, {\n            as: \"h2\",\n            mr: 2,\n            children: \"Supply\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Flex, {\n          sx: {\n            flexDirection: \"column\",\n            gap: \"25px\",\n            mb: 10\n          },\n          children: [/*#__PURE__*/_jsxDEV(BlockText, {\n            variant: \"primary\",\n            children: \"Supply\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(TokenInputForm, {\n            token: token,\n            amount: amount,\n            setAmount: setAmount,\n            balance: erc ? erc.balance : null\n          }, token.address, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Flex, {\n          sx: {\n            mt: \"25px\"\n          },\n          children: /*#__PURE__*/_jsxDEV(BlockText, {\n            variant: \"primary\",\n            children: \"You will receive\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Flex, {\n          sx: {\n            justifyContent: \"center\",\n            mt: 6\n          },\n          children: buttonLoading ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 15\n          }, this) : button\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 3\n    }, this)\n  );\n};\n\n_s(Supply, \"VUWFbk0wvcLhESuos2Cehz/1Xn4=\", false, function () {\n  return [useContractKit, useParams, useERC];\n});\n\n_c = Supply;\n\nvar _c;\n\n$RefreshReg$(_c, \"Supply\");","map":{"version":3,"sources":["/Users/kylescott/src/dahlia-interface/src/pages/Earn/Supply/index.tsx"],"names":["React","useContractKit","useParams","DEFAULT_GAS_PRICE","safeBoxMap","toBN","toWei","toastTx","toast","MaxUint256","ERC20_ABI","SAFEBOX_ABI","useERC","getAddress","getToken","Button","Card","Flex","Heading","Spinner","BlockText","TokenInputForm","Supply","getConnectedKit","amount","setAmount","useState","approveLoading","setApproveLoading","supplyLoading","setSupplyLoading","buttonLoading","setButtonLoading","tokenAddress","erc","refetchERC","get","approveButton","kit","ERCToken","web3","eth","Contract","tx","methods","approve","toString","send","from","defaultAccount","gasPrice","transactionHash","e","message","supplyButton","safeBox","abi","deposit","loading","button","fmtCost","amountBN","Number","balance","lt","allowance","gt","token","alignItems","flexDirection","width","maxWidth","gap","mb","address","mt","justifyContent"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { useContractKit } from \"@celo-tools/use-contractkit\";\nimport { useParams } from \"react-router-dom\";\nimport styled from '@emotion/styled';\nimport { DEFAULT_GAS_PRICE, safeBoxMap } from \"src/config\";\nimport { AbiItem, toBN, toWei } from \"web3-utils\";\nimport { toastTx } from \"src/utils/toastTx\";\nimport { toast } from \"react-toastify\";\nimport { MaxUint256 } from \"@ethersproject/constants\";\nimport ERC20_ABI from \"src/abis/fountain_of_youth/ERC20.json\";\nimport SAFEBOX_ABI from \"src/abis/dahlia_contracts/SafeBox.json\";\nimport { ERC20 } from \"src/generated/ERC20\";\nimport { SafeBox } from \"src/generated/SafeBox\";\nimport { useERC } from \"src/hooks/useERC\";\nimport { getAddress } from \"ethers/lib/utils\";\nimport Background from 'src/images/logo.png';\nimport { humanFriendlyWei } from \"src/utils/eth\";\nimport { fromWei } from \"web3-utils\";\nimport { getToken } from \"src/utils/token\";\nimport {\n  Button,\n  Card,\n  Flex,\n  Heading,\n  Spinner,\n} from \"theme-ui\";\nimport { BlockText } from \"src/components/BlockText\";\nimport { TokenInputForm } from \"src/components/TokenInputForm\";\n\n\n\nexport const Supply: React.FC = () => {\n\n  const { getConnectedKit } = useContractKit();\n  const [amount, setAmount] = React.useState(\"1\");\n  const [approveLoading, setApproveLoading] = React.useState(false);\n  const [supplyLoading, setSupplyLoading] = React.useState(false);\n  const [buttonLoading, setButtonLoading] = React.useState(true); \n  const { tokenAddress } = useParams<{ tokenAddress: string}>();\n  const [erc, refetchERC] = useERC(tokenAddress, safeBoxMap.get(getAddress(tokenAddress))!);\n\n  const approveButton = (\n    <Button\n      onClick={async () => {\n        const kit = await getConnectedKit();\n        // kit is connected to a wallet\n        try {\n          setApproveLoading(true);\n          const ERCToken = (new kit.web3.eth.Contract(\n            ERC20_ABI as AbiItem[],\n            tokenAddress\n          ) as unknown) as ERC20; \n          const tx = await ERCToken.methods\n            .approve(safeBoxMap.get(getAddress(tokenAddress))!, MaxUint256.toString())\n            .send({\n              from: kit.defaultAccount,\n              gasPrice: DEFAULT_GAS_PRICE,\n            });\n          toastTx(tx.transactionHash);\n          refetchERC();\n        } catch (e) {\n          toast(e.message);\n        } finally {\n          setApproveLoading(false);\n        }\n      }}\n    >\n      Approve\n    </Button>\n  );\n\n  const supplyButton = (\n    <Button\n      onClick={async () => {\n        const kit = await getConnectedKit();\n        // kit is connected to a wallet\n        const safeBox = (new kit.web3.eth.Contract(\n          SAFEBOX_ABI.abi as AbiItem[],\n          safeBoxMap.get(getAddress(tokenAddress))!,\n        ) as unknown) as SafeBox;\n        try {\n          setSupplyLoading(true);\n          const tx = await safeBox.methods\n            .deposit(\n              toWei(amount)\n            ).send({\n              from: kit.defaultAccount,\n              gasPrice: DEFAULT_GAS_PRICE,\n            });\n          toastTx(tx.transactionHash);\n          refetchERC();\n        } catch (e) {\n          toast(e.message);\n        } finally {\n          setSupplyLoading(false);\n          setAmount(\"0\")\n        }\n      }}\n    >\n      Deposit\n    </Button>\n  );\n\n  const loading = approveLoading || supplyLoading || buttonLoading;\n  let button = approveButton;\n  if (erc) {\n    const fmtCost = amount === \"\" ? \"0\" : amount;\n    const amountBN = toBN(toWei(fmtCost));\n    if (Number(amount) <= 0) {\n      button = <Button disabled>Enter a valid amount</Button>\n    } else if (erc.balance.lt(amountBN)) {\n      button = <Button disabled={true}>Insufficient funds</Button>;\n    } else if (erc.allowance.gt(amountBN)) {\n      button = supplyButton;\n    }\n    if (buttonLoading) setButtonLoading(false); \n  }\n    \n  const token = getToken(tokenAddress)!; \n\nreturn (\n  // <Wrapper>\n  //   <Header>Supply</Header>\n  //   <InfoCard>\n  //     <InfoHeader>Supply tokens</InfoHeader>\n  //     <InputContainer>\n  //       <div className='flex'>\n  //         <Desc>Iâ€™d like to supply</Desc>\n  //         <Balance>Balance {erc ? humanFriendlyWei(erc.balance) : \"0.000\"}</Balance>\n  //       </div>\n  //       <Content>\n  //         <div className='flex'>\n  //           <Image src={token!.logoURL} alt='celo' />\n  //         </div>\n  //         <Num\n  //           value={amount}\n  //             onChange={(e: React.FormEvent<HTMLInputElement>) => setAmount((e.target as any).value)}\n  //         ></Num>\n  //         <Max onClick={() => {\n  //           if (erc) {\n  //             const cost = fromWei(erc.balance);\n  //             setAmount(cost);\n  //           }\n  //         }}\n  //         >MAX</Max>\n  //       </Content>\n  //       <Line />\n  //       <Description>\n  //         {\"You will recieve Dahlia interest-bearing \".concat(token!.symbol)}\n  //       </Description>\n  //       <FlexImage>\n  //         <img src={Background} alt='background' />\n  //       </FlexImage>\n  //       <FlexContainer>\n  //       {loading ? (\n  //         <Spinner />\n  //       ) : (\n  //         button\n  //       )}\n  //       </FlexContainer>\n  //     </InputContainer>\n  //   </InfoCard>\n  // </Wrapper>\n  <Flex sx={{ alignItems: \"center\", flexDirection: \"column\" }}>\n      <Card sx={{ width: \"100%\", maxWidth: \"800px\" }} py={4} px={3}>\n        <Flex mb={4}>\n          <Heading as=\"h2\" mr={2}>\n            Supply\n          </Heading>\n        </Flex>\n        <Flex sx={{flexDirection: \"column\", gap: \"25px\", mb: 10}}>\n          <BlockText variant=\"primary\">Supply</BlockText>\n            <TokenInputForm key={token.address} token={token} amount={amount}\n             setAmount={setAmount} \n             balance={erc ? erc.balance! : null}\n            />\n        </Flex>\n        <Flex sx={{mt: \"25px\"}}>\n          <BlockText variant=\"primary\">You will receive</BlockText>\n        </Flex>\n        <Flex sx={{ justifyContent: \"center\", mt: 6 }}>\n          {buttonLoading ? (\n              <Spinner />\n            ) : (\n              button\n            )}\n        </Flex>\n      </Card>\n    </Flex>\n);\n};"]},"metadata":{},"sourceType":"module"}