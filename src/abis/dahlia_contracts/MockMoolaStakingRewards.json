{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_rewardsDistribution",
          "type": "address"
        },
        {
          "internalType": "contract IERC20",
          "name": "_rewardsToken",
          "type": "address"
        },
        {
          "internalType": "contract IStakingRewards",
          "name": "_externalStakingRewards",
          "type": "address"
        },
        {
          "internalType": "contract IERC20[]",
          "name": "_externalRewardsTokens",
          "type": "address[]"
        },
        {
          "internalType": "address",
          "name": "_staking",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "reward",
          "type": "uint256"
        }
      ],
      "name": "ExternalRewardPaid",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "oldOwner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnerChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnerNominated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Recovered",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "reward",
          "type": "uint256"
        }
      ],
      "name": "RewardAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "reward",
          "type": "uint256"
        }
      ],
      "name": "RewardPaid",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newDuration",
          "type": "uint256"
        }
      ],
      "name": "RewardsDurationUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Staked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Withdrawn",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "acceptOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "earned",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "earnedExternal",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "result",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "exit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "name": "externalRewards",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "externalRewardsTokens",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "externalStakingRewards",
      "outputs": [
        {
          "internalType": "contract IStakingRewards",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getReward",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getRewardForDuration",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lastTimeRewardApplicable",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lastUpdateTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "nominateNewOwner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "nominatedOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "reward",
          "type": "uint256"
        }
      ],
      "name": "notifyRewardAmount",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "periodFinish",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenAmount",
          "type": "uint256"
        }
      ],
      "name": "recoverERC20",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "rewardPerToken",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "rewardPerTokenStored",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "rewardRate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "rewards",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "rewardsDistribution",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "rewardsDuration",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "rewardsToken",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_rewardsDistribution",
          "type": "address"
        }
      ],
      "name": "setRewardsDistribution",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_rewardsDuration",
          "type": "uint256"
        }
      ],
      "name": "setRewardsDuration",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "stake",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "stakingToken",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "updatePeriodFinish",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "userRewardPerTokenPaid",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "/Users/kylescott/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.0.0/contracts/security/ReentrancyGuard.sol",
    "1": "/Users/kylescott/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.0.0/contracts/token/ERC20/IERC20.sol",
    "10": "interfaces/IStakingRewards.sol",
    "2": "/Users/kylescott/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.0.0/contracts/token/ERC20/utils/SafeERC20.sol",
    "3": "/Users/kylescott/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.0.0/contracts/utils/Address.sol",
    "4": "/Users/kylescott/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.0.0/contracts/utils/math/Math.sol",
    "5": "/Users/kylescott/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.0.0/contracts/utils/math/SafeMath.sol",
    "6": "contracts/mock/MockMoolaStakingRewards.sol",
    "7": "contracts/mock/MockStaking.sol",
    "9": "interfaces/IMoolaStakingRewards.sol"
  },
  "ast": {
    "absolutePath": "contracts/mock/MockMoolaStakingRewards.sol",
    "exportedSymbols": {
      "Address": [
        2784
      ],
      "IERC20": [
        2488
      ],
      "IGetStakingRewards": [
        2343
      ],
      "IMoolaStakingRewards": [
        2357
      ],
      "IStakingRewards": [
        2410
      ],
      "Math": [
        2018
      ],
      "MockMoolaStakingRewards": [
        938
      ],
      "MockStakingRewards": [
        1681
      ],
      "Owned": [
        1052
      ],
      "ReentrancyGuard": [
        1721
      ],
      "RewardsDistributionRecipient": [
        1086
      ],
      "SafeERC20": [
        1945
      ],
      "SafeMath": [
        2330
      ]
    },
    "id": 939,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".3"
        ],
        "nodeType": "PragmaDirective",
        "src": "69:23:6"
      },
      {
        "absolutePath": "/Users/kylescott/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.0.0/contracts/utils/math/SafeMath.sol",
        "file": "OpenZeppelin/openzeppelin-contracts@4.0.0/contracts/utils/math/SafeMath.sol",
        "id": 2,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 939,
        "sourceUnit": 2331,
        "src": "94:85:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/kylescott/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.0.0/contracts/utils/math/Math.sol",
        "file": "OpenZeppelin/openzeppelin-contracts@4.0.0/contracts/utils/math/Math.sol",
        "id": 3,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 939,
        "sourceUnit": 2019,
        "src": "180:81:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/kylescott/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.0.0/contracts/token/ERC20/utils/SafeERC20.sol",
        "file": "OpenZeppelin/openzeppelin-contracts@4.0.0/contracts/token/ERC20/utils/SafeERC20.sol",
        "id": 4,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 939,
        "sourceUnit": 1946,
        "src": "262:93:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/kylescott/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.0.0/contracts/security/ReentrancyGuard.sol",
        "file": "OpenZeppelin/openzeppelin-contracts@4.0.0/contracts/security/ReentrancyGuard.sol",
        "id": 5,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 939,
        "sourceUnit": 1722,
        "src": "356:90:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/IStakingRewards.sol",
        "file": "../../interfaces/IStakingRewards.sol",
        "id": 6,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 939,
        "sourceUnit": 2411,
        "src": "463:46:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/IGetStakingRewards.sol",
        "file": "../../interfaces/IGetStakingRewards.sol",
        "id": 7,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 939,
        "sourceUnit": 2344,
        "src": "510:49:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/IMoolaStakingRewards.sol",
        "file": "../../interfaces/IMoolaStakingRewards.sol",
        "id": 8,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 939,
        "sourceUnit": 2358,
        "src": "561:51:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/mock/MockStaking.sol",
        "file": "./MockStaking.sol",
        "id": 9,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 939,
        "sourceUnit": 1682,
        "src": "613:27:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 10,
              "name": "IMoolaStakingRewards",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2357,
              "src": "678:20:6"
            },
            "id": 11,
            "nodeType": "InheritanceSpecifier",
            "src": "678:20:6"
          },
          {
            "baseName": {
              "id": 12,
              "name": "RewardsDistributionRecipient",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1086,
              "src": "700:28:6"
            },
            "id": 13,
            "nodeType": "InheritanceSpecifier",
            "src": "700:28:6"
          },
          {
            "baseName": {
              "id": 14,
              "name": "ReentrancyGuard",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1721,
              "src": "730:15:6"
            },
            "id": 15,
            "nodeType": "InheritanceSpecifier",
            "src": "730:15:6"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 938,
        "linearizedBaseContracts": [
          938,
          1721,
          1086,
          1052,
          2357,
          2410
        ],
        "name": "MockMoolaStakingRewards",
        "nameLocation": "651:23:6",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 18,
            "libraryName": {
              "id": 16,
              "name": "SafeMath",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2330,
              "src": "758:8:6"
            },
            "nodeType": "UsingForDirective",
            "src": "752:27:6",
            "typeName": {
              "id": 17,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "771:7:6",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 22,
            "libraryName": {
              "id": 19,
              "name": "SafeERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1945,
              "src": "790:9:6"
            },
            "nodeType": "UsingForDirective",
            "src": "784:27:6",
            "typeName": {
              "id": 21,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 20,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 2488,
                "src": "804:6:6"
              },
              "referencedDeclaration": 2488,
              "src": "804:6:6",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$2488",
                "typeString": "contract IERC20"
              }
            }
          },
          {
            "constant": false,
            "functionSelector": "d1af0c7d",
            "id": 25,
            "mutability": "immutable",
            "name": "rewardsToken",
            "nameLocation": "890:12:6",
            "nodeType": "VariableDeclaration",
            "scope": 938,
            "src": "866:36:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$2488",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 24,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 23,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 2488,
                "src": "866:6:6"
              },
              "referencedDeclaration": 2488,
              "src": "866:6:6",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$2488",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "72f702f3",
            "id": 28,
            "mutability": "immutable",
            "name": "stakingToken",
            "nameLocation": "932:12:6",
            "nodeType": "VariableDeclaration",
            "scope": 938,
            "src": "908:36:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$2488",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 27,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 26,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 2488,
                "src": "908:6:6"
              },
              "referencedDeclaration": 2488,
              "src": "908:6:6",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$2488",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "33bddbc6",
            "id": 32,
            "mutability": "mutable",
            "name": "externalRewardsTokens",
            "nameLocation": "966:21:6",
            "nodeType": "VariableDeclaration",
            "scope": 938,
            "src": "950:37:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_contract$_IERC20_$2488_$dyn_storage",
              "typeString": "contract IERC20[]"
            },
            "typeName": {
              "baseType": {
                "id": 30,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 29,
                  "name": "IERC20",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2488,
                  "src": "950:6:6"
                },
                "referencedDeclaration": 2488,
                "src": "950:6:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_IERC20_$2488",
                  "typeString": "contract IERC20"
                }
              },
              "id": 31,
              "nodeType": "ArrayTypeName",
              "src": "950:8:6",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_contract$_IERC20_$2488_$dyn_storage_ptr",
                "typeString": "contract IERC20[]"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "ebe2b12b",
            "id": 35,
            "mutability": "mutable",
            "name": "periodFinish",
            "nameLocation": "1008:12:6",
            "nodeType": "VariableDeclaration",
            "scope": 938,
            "src": "993:31:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 33,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "993:7:6",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "30",
              "id": 34,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1023:1:6",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "7b0a47ee",
            "id": 38,
            "mutability": "mutable",
            "name": "rewardRate",
            "nameLocation": "1045:10:6",
            "nodeType": "VariableDeclaration",
            "scope": 938,
            "src": "1030:29:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 36,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1030:7:6",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "30",
              "id": 37,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1058:1:6",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "386a9525",
            "id": 41,
            "mutability": "mutable",
            "name": "rewardsDuration",
            "nameLocation": "1080:15:6",
            "nodeType": "VariableDeclaration",
            "scope": 938,
            "src": "1065:39:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 39,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1065:7:6",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "37",
              "id": 40,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1098:6:6",
              "subdenomination": "days",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_604800_by_1",
                "typeString": "int_const 604800"
              },
              "value": "7"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "c8f33c91",
            "id": 43,
            "mutability": "mutable",
            "name": "lastUpdateTime",
            "nameLocation": "1125:14:6",
            "nodeType": "VariableDeclaration",
            "scope": 938,
            "src": "1110:29:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 42,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1110:7:6",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "df136d65",
            "id": 45,
            "mutability": "mutable",
            "name": "rewardPerTokenStored",
            "nameLocation": "1160:20:6",
            "nodeType": "VariableDeclaration",
            "scope": 938,
            "src": "1145:35:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 44,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1145:7:6",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "8b876347",
            "id": 49,
            "mutability": "mutable",
            "name": "userRewardPerTokenPaid",
            "nameLocation": "1222:22:6",
            "nodeType": "VariableDeclaration",
            "scope": 938,
            "src": "1187:57:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 48,
              "keyType": {
                "id": 46,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1195:7:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1187:27:6",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 47,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1206:7:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "0700037d",
            "id": 53,
            "mutability": "mutable",
            "name": "rewards",
            "nameLocation": "1285:7:6",
            "nodeType": "VariableDeclaration",
            "scope": 938,
            "src": "1250:42:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 52,
              "keyType": {
                "id": 50,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1258:7:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1250:27:6",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 51,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1269:7:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "6be7bb1f",
            "id": 60,
            "mutability": "mutable",
            "name": "externalRewards",
            "nameLocation": "1352:15:6",
            "nodeType": "VariableDeclaration",
            "scope": 938,
            "src": "1298:69:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_contract$_IERC20_$2488_$_t_uint256_$_$",
              "typeString": "mapping(address => mapping(contract IERC20 => uint256))"
            },
            "typeName": {
              "id": 59,
              "keyType": {
                "id": 54,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1306:7:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1298:46:6",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_contract$_IERC20_$2488_$_t_uint256_$_$",
                "typeString": "mapping(address => mapping(contract IERC20 => uint256))"
              },
              "valueType": {
                "id": 58,
                "keyType": {
                  "id": 56,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 55,
                    "name": "IERC20",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 2488,
                    "src": "1325:6:6"
                  },
                  "referencedDeclaration": 2488,
                  "src": "1325:6:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$2488",
                    "typeString": "contract IERC20"
                  }
                },
                "nodeType": "Mapping",
                "src": "1317:26:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_contract$_IERC20_$2488_$_t_uint256_$",
                  "typeString": "mapping(contract IERC20 => uint256)"
                },
                "valueType": {
                  "id": 57,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1335:7:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 65,
            "mutability": "mutable",
            "name": "externalRewardPerTokenStoredWad",
            "nameLocation": "1409:31:6",
            "nodeType": "VariableDeclaration",
            "scope": 938,
            "src": "1374:66:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_contract$_IERC20_$2488_$_t_uint256_$",
              "typeString": "mapping(contract IERC20 => uint256)"
            },
            "typeName": {
              "id": 64,
              "keyType": {
                "id": 62,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 61,
                  "name": "IERC20",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2488,
                  "src": "1382:6:6"
                },
                "referencedDeclaration": 2488,
                "src": "1382:6:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_IERC20_$2488",
                  "typeString": "contract IERC20"
                }
              },
              "nodeType": "Mapping",
              "src": "1374:26:6",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_contract$_IERC20_$2488_$_t_uint256_$",
                "typeString": "mapping(contract IERC20 => uint256)"
              },
              "valueType": {
                "id": 63,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1392:7:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 72,
            "mutability": "mutable",
            "name": "externalUserRewardPerTokenPaidWad",
            "nameLocation": "1501:33:6",
            "nodeType": "VariableDeclaration",
            "scope": 938,
            "src": "1446:88:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_contract$_IERC20_$2488_$_t_uint256_$_$",
              "typeString": "mapping(address => mapping(contract IERC20 => uint256))"
            },
            "typeName": {
              "id": 71,
              "keyType": {
                "id": 66,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1454:7:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1446:46:6",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_contract$_IERC20_$2488_$_t_uint256_$_$",
                "typeString": "mapping(address => mapping(contract IERC20 => uint256))"
              },
              "valueType": {
                "id": 70,
                "keyType": {
                  "id": 68,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 67,
                    "name": "IERC20",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 2488,
                    "src": "1473:6:6"
                  },
                  "referencedDeclaration": 2488,
                  "src": "1473:6:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$2488",
                    "typeString": "contract IERC20"
                  }
                },
                "nodeType": "Mapping",
                "src": "1465:26:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_contract$_IERC20_$2488_$_t_uint256_$",
                  "typeString": "mapping(contract IERC20 => uint256)"
                },
                "valueType": {
                  "id": 69,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1483:7:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 74,
            "mutability": "mutable",
            "name": "_totalSupply",
            "nameLocation": "1557:12:6",
            "nodeType": "VariableDeclaration",
            "scope": 938,
            "src": "1541:28:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 73,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1541:7:6",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 78,
            "mutability": "mutable",
            "name": "_balances",
            "nameLocation": "1611:9:6",
            "nodeType": "VariableDeclaration",
            "scope": 938,
            "src": "1575:45:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 77,
              "keyType": {
                "id": 75,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1583:7:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1575:27:6",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 76,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1594:7:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "functionSelector": "9b8a14ee",
            "id": 81,
            "mutability": "immutable",
            "name": "externalStakingRewards",
            "nameLocation": "1660:22:6",
            "nodeType": "VariableDeclaration",
            "scope": 938,
            "src": "1627:55:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IStakingRewards_$2410",
              "typeString": "contract IStakingRewards"
            },
            "typeName": {
              "id": 80,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 79,
                "name": "IStakingRewards",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 2410,
                "src": "1627:15:6"
              },
              "referencedDeclaration": 2410,
              "src": "1627:15:6",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IStakingRewards_$2410",
                "typeString": "contract IStakingRewards"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 133,
              "nodeType": "Block",
              "src": "1981:335:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 107,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 104,
                            "name": "_externalRewardsTokens",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 95,
                            "src": "1999:22:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_contract$_IERC20_$2488_$dyn_memory_ptr",
                              "typeString": "contract IERC20[] memory"
                            }
                          },
                          "id": 105,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "1999:29:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 106,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2031:1:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1999:33:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "456d7074792065787465726e616c52657761726473546f6b656e73",
                        "id": 108,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2034:29:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ddde46d3d6da18f47b86cb0fc5cf83bb96744b0c0073f308695d6f952e4a01b2",
                          "typeString": "literal_string \"Empty externalRewardsTokens\""
                        },
                        "value": "Empty externalRewardsTokens"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ddde46d3d6da18f47b86cb0fc5cf83bb96744b0c0073f308695d6f952e4a01b2",
                          "typeString": "literal_string \"Empty externalRewardsTokens\""
                        }
                      ],
                      "id": 103,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1991:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 109,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1991:73:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 110,
                  "nodeType": "ExpressionStatement",
                  "src": "1991:73:6"
                },
                {
                  "expression": {
                    "id": 113,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 111,
                      "name": "rewardsToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25,
                      "src": "2074:12:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$2488",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 112,
                      "name": "_rewardsToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 88,
                      "src": "2089:13:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$2488",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "2074:28:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$2488",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 114,
                  "nodeType": "ExpressionStatement",
                  "src": "2074:28:6"
                },
                {
                  "expression": {
                    "id": 117,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 115,
                      "name": "rewardsDistribution",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1056,
                      "src": "2112:19:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 116,
                      "name": "_rewardsDistribution",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 85,
                      "src": "2134:20:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2112:42:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 118,
                  "nodeType": "ExpressionStatement",
                  "src": "2112:42:6"
                },
                {
                  "expression": {
                    "id": 121,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 119,
                      "name": "externalStakingRewards",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 81,
                      "src": "2164:22:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IStakingRewards_$2410",
                        "typeString": "contract IStakingRewards"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 120,
                      "name": "_externalStakingRewards",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 91,
                      "src": "2189:23:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IStakingRewards_$2410",
                        "typeString": "contract IStakingRewards"
                      }
                    },
                    "src": "2164:48:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IStakingRewards_$2410",
                      "typeString": "contract IStakingRewards"
                    }
                  },
                  "id": 122,
                  "nodeType": "ExpressionStatement",
                  "src": "2164:48:6"
                },
                {
                  "expression": {
                    "id": 125,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 123,
                      "name": "externalRewardsTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32,
                      "src": "2222:21:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_contract$_IERC20_$2488_$dyn_storage",
                        "typeString": "contract IERC20[] storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 124,
                      "name": "_externalRewardsTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 95,
                      "src": "2246:22:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_contract$_IERC20_$2488_$dyn_memory_ptr",
                        "typeString": "contract IERC20[] memory"
                      }
                    },
                    "src": "2222:46:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_contract$_IERC20_$2488_$dyn_storage",
                      "typeString": "contract IERC20[] storage ref"
                    }
                  },
                  "id": 126,
                  "nodeType": "ExpressionStatement",
                  "src": "2222:46:6"
                },
                {
                  "expression": {
                    "id": 131,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 127,
                      "name": "stakingToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 28,
                      "src": "2278:12:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$2488",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 129,
                          "name": "_staking",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 97,
                          "src": "2300:8:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 128,
                        "name": "IERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2488,
                        "src": "2293:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC20_$2488_$",
                          "typeString": "type(contract IERC20)"
                        }
                      },
                      "id": 130,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2293:16:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$2488",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "2278:31:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$2488",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 132,
                  "nodeType": "ExpressionStatement",
                  "src": "2278:31:6"
                }
              ]
            },
            "id": 134,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 100,
                    "name": "_owner",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 83,
                    "src": "1973:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 101,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 99,
                  "name": "Owned",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1052,
                  "src": "1967:5:6"
                },
                "nodeType": "ModifierInvocation",
                "src": "1967:13:6"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 98,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 83,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nameLocation": "1762:6:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 134,
                  "src": "1754:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 82,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1754:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 85,
                  "mutability": "mutable",
                  "name": "_rewardsDistribution",
                  "nameLocation": "1786:20:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 134,
                  "src": "1778:28:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 84,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1778:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 88,
                  "mutability": "mutable",
                  "name": "_rewardsToken",
                  "nameLocation": "1823:13:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 134,
                  "src": "1816:20:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$2488",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 87,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 86,
                      "name": "IERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 2488,
                      "src": "1816:6:6"
                    },
                    "referencedDeclaration": 2488,
                    "src": "1816:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$2488",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 91,
                  "mutability": "mutable",
                  "name": "_externalStakingRewards",
                  "nameLocation": "1862:23:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 134,
                  "src": "1846:39:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IStakingRewards_$2410",
                    "typeString": "contract IStakingRewards"
                  },
                  "typeName": {
                    "id": 90,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 89,
                      "name": "IStakingRewards",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 2410,
                      "src": "1846:15:6"
                    },
                    "referencedDeclaration": 2410,
                    "src": "1846:15:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IStakingRewards_$2410",
                      "typeString": "contract IStakingRewards"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 95,
                  "mutability": "mutable",
                  "name": "_externalRewardsTokens",
                  "nameLocation": "1911:22:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 134,
                  "src": "1895:38:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_contract$_IERC20_$2488_$dyn_memory_ptr",
                    "typeString": "contract IERC20[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 93,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 92,
                        "name": "IERC20",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 2488,
                        "src": "1895:6:6"
                      },
                      "referencedDeclaration": 2488,
                      "src": "1895:6:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$2488",
                        "typeString": "contract IERC20"
                      }
                    },
                    "id": 94,
                    "nodeType": "ArrayTypeName",
                    "src": "1895:8:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_contract$_IERC20_$2488_$dyn_storage_ptr",
                      "typeString": "contract IERC20[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 97,
                  "mutability": "mutable",
                  "name": "_staking",
                  "nameLocation": "1952:8:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 134,
                  "src": "1944:16:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 96,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1944:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1744:222:6"
            },
            "returnParameters": {
              "id": 102,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1981:0:6"
            },
            "scope": 938,
            "src": "1733:583:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              2386
            ],
            "body": {
              "id": 142,
              "nodeType": "Block",
              "src": "2425:36:6",
              "statements": [
                {
                  "expression": {
                    "id": 140,
                    "name": "_totalSupply",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 74,
                    "src": "2442:12:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 139,
                  "id": 141,
                  "nodeType": "Return",
                  "src": "2435:19:6"
                }
              ]
            },
            "functionSelector": "18160ddd",
            "id": 143,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "totalSupply",
            "nameLocation": "2370:11:6",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 136,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2398:8:6"
            },
            "parameters": {
              "id": 135,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2381:2:6"
            },
            "returnParameters": {
              "id": 139,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 138,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 143,
                  "src": "2416:7:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 137,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2416:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2415:9:6"
            },
            "scope": 938,
            "src": "2361:100:6",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              2393
            ],
            "body": {
              "id": 155,
              "nodeType": "Block",
              "src": "2544:42:6",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 151,
                      "name": "_balances",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 78,
                      "src": "2561:9:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 153,
                    "indexExpression": {
                      "id": 152,
                      "name": "account",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 145,
                      "src": "2571:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2561:18:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 150,
                  "id": 154,
                  "nodeType": "Return",
                  "src": "2554:25:6"
                }
              ]
            },
            "functionSelector": "70a08231",
            "id": 156,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOf",
            "nameLocation": "2476:9:6",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 147,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2517:8:6"
            },
            "parameters": {
              "id": 146,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 145,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "2494:7:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 156,
                  "src": "2486:15:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 144,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2486:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2485:17:6"
            },
            "returnParameters": {
              "id": 150,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 149,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 156,
                  "src": "2535:7:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 148,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2535:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2534:9:6"
            },
            "scope": 938,
            "src": "2467:119:6",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              2364
            ],
            "body": {
              "id": 169,
              "nodeType": "Block",
              "src": "2667:63:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 164,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "2693:5:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 165,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "2693:15:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 166,
                        "name": "periodFinish",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35,
                        "src": "2710:12:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 162,
                        "name": "Math",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2018,
                        "src": "2684:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Math_$2018_$",
                          "typeString": "type(library Math)"
                        }
                      },
                      "id": 163,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "min",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1984,
                      "src": "2684:8:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 167,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2684:39:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 161,
                  "id": 168,
                  "nodeType": "Return",
                  "src": "2677:46:6"
                }
              ]
            },
            "functionSelector": "80faa57d",
            "id": 170,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "lastTimeRewardApplicable",
            "nameLocation": "2601:24:6",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 158,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2640:8:6"
            },
            "parameters": {
              "id": 157,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2625:2:6"
            },
            "returnParameters": {
              "id": 161,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 160,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 170,
                  "src": "2658:7:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 159,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2658:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2657:9:6"
            },
            "scope": 938,
            "src": "2592:138:6",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              2369
            ],
            "body": {
              "id": 201,
              "nodeType": "Block",
              "src": "2801:266:6",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 178,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 176,
                      "name": "_totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 74,
                      "src": "2815:12:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 177,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2831:1:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2815:17:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 182,
                  "nodeType": "IfStatement",
                  "src": "2811:75:6",
                  "trueBody": {
                    "id": 181,
                    "nodeType": "Block",
                    "src": "2834:52:6",
                    "statements": [
                      {
                        "expression": {
                          "id": 179,
                          "name": "rewardPerTokenStored",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45,
                          "src": "2855:20:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 175,
                        "id": 180,
                        "nodeType": "Return",
                        "src": "2848:27:6"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 197,
                            "name": "_totalSupply",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 74,
                            "src": "3033:12:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "hexValue": "31653138",
                                "id": 194,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3023:4:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                  "typeString": "int_const 1000000000000000000"
                                },
                                "value": "1e18"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                  "typeString": "int_const 1000000000000000000"
                                }
                              ],
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 191,
                                    "name": "rewardRate",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 38,
                                    "src": "3007:10:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 188,
                                        "name": "lastUpdateTime",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 43,
                                        "src": "2987:14:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "expression": {
                                        "arguments": [],
                                        "expression": {
                                          "argumentTypes": [],
                                          "id": 185,
                                          "name": "lastTimeRewardApplicable",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 170,
                                          "src": "2956:24:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                            "typeString": "function () view returns (uint256)"
                                          }
                                        },
                                        "id": 186,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "2956:26:6",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "id": 187,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "sub",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 2209,
                                      "src": "2956:30:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                                      }
                                    },
                                    "id": 189,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "2956:46:6",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 190,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "mul",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2224,
                                  "src": "2956:50:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                    "typeString": "function (uint256,uint256) pure returns (uint256)"
                                  }
                                },
                                "id": 192,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2956:62:6",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 193,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "mul",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2224,
                              "src": "2956:66:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 195,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2956:72:6",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 196,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "div",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2239,
                          "src": "2956:76:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 198,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2956:90:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 183,
                        "name": "rewardPerTokenStored",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45,
                        "src": "2914:20:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 184,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "add",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2194,
                      "src": "2914:24:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 199,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2914:146:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 175,
                  "id": 200,
                  "nodeType": "Return",
                  "src": "2895:165:6"
                }
              ]
            },
            "functionSelector": "cd3daf9d",
            "id": 202,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "rewardPerToken",
            "nameLocation": "2745:14:6",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 172,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2774:8:6"
            },
            "parameters": {
              "id": 171,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2759:2:6"
            },
            "returnParameters": {
              "id": 175,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 174,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 202,
                  "src": "2792:7:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 173,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2792:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2791:9:6"
            },
            "scope": 938,
            "src": "2736:331:6",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              2376
            ],
            "body": {
              "id": 231,
              "nodeType": "Block",
              "src": "3145:133:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 226,
                          "name": "rewards",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 53,
                          "src": "3254:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                          }
                        },
                        "id": 228,
                        "indexExpression": {
                          "id": 227,
                          "name": "account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 204,
                          "src": "3262:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3254:16:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "hexValue": "31653138",
                            "id": 223,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3244:4:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            },
                            "value": "1e18"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "baseExpression": {
                                      "id": 217,
                                      "name": "userRewardPerTokenPaid",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 49,
                                      "src": "3206:22:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                        "typeString": "mapping(address => uint256)"
                                      }
                                    },
                                    "id": 219,
                                    "indexExpression": {
                                      "id": 218,
                                      "name": "account",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 204,
                                      "src": "3229:7:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "3206:31:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "arguments": [],
                                    "expression": {
                                      "argumentTypes": [],
                                      "id": 214,
                                      "name": "rewardPerToken",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 202,
                                      "src": "3185:14:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                        "typeString": "function () view returns (uint256)"
                                      }
                                    },
                                    "id": 215,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "3185:16:6",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 216,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sub",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2209,
                                  "src": "3185:20:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                    "typeString": "function (uint256,uint256) pure returns (uint256)"
                                  }
                                },
                                "id": 220,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3185:53:6",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "baseExpression": {
                                  "id": 210,
                                  "name": "_balances",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 78,
                                  "src": "3162:9:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                    "typeString": "mapping(address => uint256)"
                                  }
                                },
                                "id": 212,
                                "indexExpression": {
                                  "id": 211,
                                  "name": "account",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 204,
                                  "src": "3172:7:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "3162:18:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 213,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "mul",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2224,
                              "src": "3162:22:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 221,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3162:77:6",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 222,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "div",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2239,
                          "src": "3162:81:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 224,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3162:87:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 225,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "add",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2194,
                      "src": "3162:91:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 229,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3162:109:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 209,
                  "id": 230,
                  "nodeType": "Return",
                  "src": "3155:116:6"
                }
              ]
            },
            "functionSelector": "008cc262",
            "id": 232,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "earned",
            "nameLocation": "3082:6:6",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 206,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3118:8:6"
            },
            "parameters": {
              "id": 205,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 204,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "3097:7:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 232,
                  "src": "3089:15:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 203,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3089:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3088:17:6"
            },
            "returnParameters": {
              "id": 209,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 208,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 232,
                  "src": "3136:7:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 207,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3136:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3135:9:6"
            },
            "scope": 938,
            "src": "3073:205:6",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              2356
            ],
            "body": {
              "id": 414,
              "nodeType": "Block",
              "src": "3375:1459:6",
              "statements": [
                {
                  "assignments": [
                    245
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 245,
                      "mutability": "mutable",
                      "name": "externalTokens",
                      "nameLocation": "3401:14:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 414,
                      "src": "3385:30:6",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_contract$_IERC20_$2488_$dyn_memory_ptr",
                        "typeString": "contract IERC20[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 243,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 242,
                            "name": "IERC20",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 2488,
                            "src": "3385:6:6"
                          },
                          "referencedDeclaration": 2488,
                          "src": "3385:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$2488",
                            "typeString": "contract IERC20"
                          }
                        },
                        "id": 244,
                        "nodeType": "ArrayTypeName",
                        "src": "3385:8:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_IERC20_$2488_$dyn_storage_ptr",
                          "typeString": "contract IERC20[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 247,
                  "initialValue": {
                    "id": 246,
                    "name": "externalRewardsTokens",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 32,
                    "src": "3418:21:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_contract$_IERC20_$2488_$dyn_storage",
                      "typeString": "contract IERC20[] storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3385:54:6"
                },
                {
                  "assignments": [
                    252
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 252,
                      "mutability": "mutable",
                      "name": "externalOldTotalRewards",
                      "nameLocation": "3466:23:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 414,
                      "src": "3449:40:6",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 250,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3449:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 251,
                        "nodeType": "ArrayTypeName",
                        "src": "3449:9:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 259,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 256,
                          "name": "externalTokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 245,
                          "src": "3506:14:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_contract$_IERC20_$2488_$dyn_memory_ptr",
                            "typeString": "contract IERC20[] memory"
                          }
                        },
                        "id": 257,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "3506:21:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 255,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "3492:13:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (uint256[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 253,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3496:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 254,
                        "nodeType": "ArrayTypeName",
                        "src": "3496:9:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      }
                    },
                    "id": 258,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3492:36:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3449:79:6"
                },
                {
                  "expression": {
                    "id": 267,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 260,
                      "name": "result",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 239,
                      "src": "3538:6:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[] memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 264,
                            "name": "externalTokens",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 245,
                            "src": "3561:14:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_contract$_IERC20_$2488_$dyn_memory_ptr",
                              "typeString": "contract IERC20[] memory"
                            }
                          },
                          "id": 265,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "3561:21:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 263,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "3547:13:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                          "typeString": "function (uint256) pure returns (uint256[] memory)"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 261,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "3551:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 262,
                          "nodeType": "ArrayTypeName",
                          "src": "3551:9:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        }
                      },
                      "id": 266,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3547:36:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[] memory"
                      }
                    },
                    "src": "3538:45:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "id": 268,
                  "nodeType": "ExpressionStatement",
                  "src": "3538:45:6"
                },
                {
                  "body": {
                    "id": 294,
                    "nodeType": "Block",
                    "src": "3646:96:6",
                    "statements": [
                      {
                        "expression": {
                          "id": 292,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 280,
                              "name": "externalOldTotalRewards",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 252,
                              "src": "3660:23:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            "id": 282,
                            "indexExpression": {
                              "id": 281,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 270,
                              "src": "3684:1:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "3660:26:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 289,
                                    "name": "this",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -28,
                                    "src": "3725:4:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_MockMoolaStakingRewards_$938",
                                      "typeString": "contract MockMoolaStakingRewards"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_MockMoolaStakingRewards_$938",
                                      "typeString": "contract MockMoolaStakingRewards"
                                    }
                                  ],
                                  "id": 288,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "3717:7:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 287,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "3717:7:6",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 290,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3717:13:6",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "baseExpression": {
                                  "id": 283,
                                  "name": "externalTokens",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 245,
                                  "src": "3689:14:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_contract$_IERC20_$2488_$dyn_memory_ptr",
                                    "typeString": "contract IERC20[] memory"
                                  }
                                },
                                "id": 285,
                                "indexExpression": {
                                  "id": 284,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 270,
                                  "src": "3704:1:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "3689:17:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC20_$2488",
                                  "typeString": "contract IERC20"
                                }
                              },
                              "id": 286,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "balanceOf",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2427,
                              "src": "3689:27:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                "typeString": "function (address) view external returns (uint256)"
                              }
                            },
                            "id": 291,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3689:42:6",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3660:71:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 293,
                        "nodeType": "ExpressionStatement",
                        "src": "3660:71:6"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 276,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 273,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 270,
                      "src": "3614:1:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 274,
                        "name": "externalTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 245,
                        "src": "3618:14:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_IERC20_$2488_$dyn_memory_ptr",
                          "typeString": "contract IERC20[] memory"
                        }
                      },
                      "id": 275,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "3618:21:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3614:25:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 295,
                  "initializationExpression": {
                    "assignments": [
                      270
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 270,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "3607:1:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 295,
                        "src": "3599:9:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 269,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3599:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 272,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 271,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3611:1:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "3599:13:6"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 278,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "3641:3:6",
                      "subExpression": {
                        "id": 277,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 270,
                        "src": "3641:1:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 279,
                    "nodeType": "ExpressionStatement",
                    "src": "3641:3:6"
                  },
                  "nodeType": "ForStatement",
                  "src": "3594:148:6"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 296,
                        "name": "externalStakingRewards",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 81,
                        "src": "3752:22:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IStakingRewards_$2410",
                          "typeString": "contract IStakingRewards"
                        }
                      },
                      "id": 298,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getReward",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2406,
                      "src": "3752:32:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 299,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3752:34:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 300,
                  "nodeType": "ExpressionStatement",
                  "src": "3752:34:6"
                },
                {
                  "body": {
                    "id": 410,
                    "nodeType": "Block",
                    "src": "3849:955:6",
                    "statements": [
                      {
                        "assignments": [
                          314
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 314,
                            "mutability": "mutable",
                            "name": "externalToken",
                            "nameLocation": "3870:13:6",
                            "nodeType": "VariableDeclaration",
                            "scope": 410,
                            "src": "3863:20:6",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$2488",
                              "typeString": "contract IERC20"
                            },
                            "typeName": {
                              "id": 313,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 312,
                                "name": "IERC20",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 2488,
                                "src": "3863:6:6"
                              },
                              "referencedDeclaration": 2488,
                              "src": "3863:6:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$2488",
                                "typeString": "contract IERC20"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 318,
                        "initialValue": {
                          "baseExpression": {
                            "id": 315,
                            "name": "externalTokens",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 245,
                            "src": "3886:14:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_contract$_IERC20_$2488_$dyn_memory_ptr",
                              "typeString": "contract IERC20[] memory"
                            }
                          },
                          "id": 317,
                          "indexExpression": {
                            "id": 316,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 302,
                            "src": "3901:1:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3886:17:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$2488",
                            "typeString": "contract IERC20"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3863:40:6"
                      },
                      {
                        "assignments": [
                          320
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 320,
                            "mutability": "mutable",
                            "name": "externalTotalRewards",
                            "nameLocation": "3925:20:6",
                            "nodeType": "VariableDeclaration",
                            "scope": 410,
                            "src": "3917:28:6",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 319,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "3917:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 328,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 325,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "3980:4:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_MockMoolaStakingRewards_$938",
                                    "typeString": "contract MockMoolaStakingRewards"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_MockMoolaStakingRewards_$938",
                                    "typeString": "contract MockMoolaStakingRewards"
                                  }
                                ],
                                "id": 324,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "3972:7:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 323,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "3972:7:6",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 326,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3972:13:6",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 321,
                              "name": "externalToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 314,
                              "src": "3948:13:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$2488",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 322,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2427,
                            "src": "3948:23:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 327,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3948:38:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3917:69:6"
                      },
                      {
                        "assignments": [
                          330
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 330,
                            "mutability": "mutable",
                            "name": "newExternalRewardsAmount",
                            "nameLocation": "4009:24:6",
                            "nodeType": "VariableDeclaration",
                            "scope": 410,
                            "src": "4001:32:6",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 329,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "4001:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 337,
                        "initialValue": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 333,
                                "name": "externalOldTotalRewards",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 252,
                                "src": "4061:23:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                  "typeString": "uint256[] memory"
                                }
                              },
                              "id": 335,
                              "indexExpression": {
                                "id": 334,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 302,
                                "src": "4085:1:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4061:26:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 331,
                              "name": "externalTotalRewards",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 320,
                              "src": "4036:20:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 332,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sub",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2209,
                            "src": "4036:24:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 336,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4036:52:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4001:87:6"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 340,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 338,
                            "name": "_totalSupply",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 74,
                            "src": "4119:12:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 339,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4134:1:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "4119:16:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 359,
                        "nodeType": "IfStatement",
                        "src": "4115:228:6",
                        "trueBody": {
                          "id": 358,
                          "nodeType": "Block",
                          "src": "4137:206:6",
                          "statements": [
                            {
                              "expression": {
                                "id": 356,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 341,
                                    "name": "externalRewardPerTokenStoredWad",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 65,
                                    "src": "4155:31:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_contract$_IERC20_$2488_$_t_uint256_$",
                                      "typeString": "mapping(contract IERC20 => uint256)"
                                    }
                                  },
                                  "id": 343,
                                  "indexExpression": {
                                    "id": 342,
                                    "name": "externalToken",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 314,
                                    "src": "4187:13:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$2488",
                                      "typeString": "contract IERC20"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "4155:46:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "id": 353,
                                          "name": "_totalSupply",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 74,
                                          "src": "4314:12:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "expression": {
                                          "arguments": [
                                            {
                                              "hexValue": "31653138",
                                              "id": 350,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "kind": "number",
                                              "lValueRequested": false,
                                              "nodeType": "Literal",
                                              "src": "4304:4:6",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                                "typeString": "int_const 1000000000000000000"
                                              },
                                              "value": "1e18"
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                                "typeString": "int_const 1000000000000000000"
                                              }
                                            ],
                                            "expression": {
                                              "id": 348,
                                              "name": "newExternalRewardsAmount",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 330,
                                              "src": "4275:24:6",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "id": 349,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "mul",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 2224,
                                            "src": "4275:28:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                                            }
                                          },
                                          "id": 351,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "functionCall",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "4275:34:6",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "id": 352,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "div",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 2239,
                                        "src": "4275:38:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                                        }
                                      },
                                      "id": 354,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "4275:52:6",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "baseExpression": {
                                        "id": 344,
                                        "name": "externalRewardPerTokenStoredWad",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 65,
                                        "src": "4224:31:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_contract$_IERC20_$2488_$_t_uint256_$",
                                          "typeString": "mapping(contract IERC20 => uint256)"
                                        }
                                      },
                                      "id": 346,
                                      "indexExpression": {
                                        "id": 345,
                                        "name": "externalToken",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 314,
                                        "src": "4256:13:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_IERC20_$2488",
                                          "typeString": "contract IERC20"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "4224:46:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 347,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "add",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 2194,
                                    "src": "4224:50:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 355,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "4224:104:6",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "4155:173:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 357,
                              "nodeType": "ExpressionStatement",
                              "src": "4155:173:6"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "id": 388,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 360,
                              "name": "result",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 239,
                              "src": "4357:6:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            "id": 362,
                            "indexExpression": {
                              "id": 361,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 302,
                              "src": "4364:1:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "4357:9:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "baseExpression": {
                                  "baseExpression": {
                                    "id": 382,
                                    "name": "externalRewards",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 60,
                                    "src": "4567:15:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_contract$_IERC20_$2488_$_t_uint256_$_$",
                                      "typeString": "mapping(address => mapping(contract IERC20 => uint256))"
                                    }
                                  },
                                  "id": 384,
                                  "indexExpression": {
                                    "id": 383,
                                    "name": "account",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 234,
                                    "src": "4583:7:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "4567:24:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_contract$_IERC20_$2488_$_t_uint256_$",
                                    "typeString": "mapping(contract IERC20 => uint256)"
                                  }
                                },
                                "id": 386,
                                "indexExpression": {
                                  "id": 385,
                                  "name": "externalToken",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 314,
                                  "src": "4592:13:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC20_$2488",
                                    "typeString": "contract IERC20"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "4567:39:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "arguments": [
                                  {
                                    "hexValue": "31653138",
                                    "id": 379,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "4557:4:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                      "typeString": "int_const 1000000000000000000"
                                    },
                                    "value": "1e18"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                      "typeString": "int_const 1000000000000000000"
                                    }
                                  ],
                                  "expression": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "baseExpression": {
                                              "baseExpression": {
                                                "id": 371,
                                                "name": "externalUserRewardPerTokenPaidWad",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 72,
                                                "src": "4476:33:6",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_contract$_IERC20_$2488_$_t_uint256_$_$",
                                                  "typeString": "mapping(address => mapping(contract IERC20 => uint256))"
                                                }
                                              },
                                              "id": 373,
                                              "indexExpression": {
                                                "id": 372,
                                                "name": "account",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 234,
                                                "src": "4510:7:6",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                }
                                              },
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "nodeType": "IndexAccess",
                                              "src": "4476:42:6",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_mapping$_t_contract$_IERC20_$2488_$_t_uint256_$",
                                                "typeString": "mapping(contract IERC20 => uint256)"
                                              }
                                            },
                                            "id": 375,
                                            "indexExpression": {
                                              "id": 374,
                                              "name": "externalToken",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 314,
                                              "src": "4519:13:6",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_contract$_IERC20_$2488",
                                                "typeString": "contract IERC20"
                                              }
                                            },
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "IndexAccess",
                                            "src": "4476:57:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          ],
                                          "expression": {
                                            "baseExpression": {
                                              "id": 367,
                                              "name": "externalRewardPerTokenStoredWad",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 65,
                                              "src": "4425:31:6",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_mapping$_t_contract$_IERC20_$2488_$_t_uint256_$",
                                                "typeString": "mapping(contract IERC20 => uint256)"
                                              }
                                            },
                                            "id": 369,
                                            "indexExpression": {
                                              "id": 368,
                                              "name": "externalToken",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 314,
                                              "src": "4457:13:6",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_contract$_IERC20_$2488",
                                                "typeString": "contract IERC20"
                                              }
                                            },
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "IndexAccess",
                                            "src": "4425:46:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "id": 370,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "sub",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 2209,
                                          "src": "4425:50:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                                          }
                                        },
                                        "id": 376,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "4425:109:6",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "expression": {
                                        "baseExpression": {
                                          "id": 363,
                                          "name": "_balances",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 78,
                                          "src": "4385:9:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                            "typeString": "mapping(address => uint256)"
                                          }
                                        },
                                        "id": 365,
                                        "indexExpression": {
                                          "id": 364,
                                          "name": "account",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 234,
                                          "src": "4395:7:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "4385:18:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "id": 366,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "mul",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 2224,
                                      "src": "4385:39:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                                      }
                                    },
                                    "id": 377,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "4385:150:6",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 378,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "div",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2239,
                                  "src": "4385:171:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                    "typeString": "function (uint256,uint256) pure returns (uint256)"
                                  }
                                },
                                "id": 380,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4385:177:6",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 381,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "add",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2194,
                              "src": "4385:181:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 387,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4385:222:6",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4357:250:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 389,
                        "nodeType": "ExpressionStatement",
                        "src": "4357:250:6"
                      },
                      {
                        "expression": {
                          "id": 398,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 390,
                                "name": "externalUserRewardPerTokenPaidWad",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 72,
                                "src": "4622:33:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_contract$_IERC20_$2488_$_t_uint256_$_$",
                                  "typeString": "mapping(address => mapping(contract IERC20 => uint256))"
                                }
                              },
                              "id": 393,
                              "indexExpression": {
                                "id": 391,
                                "name": "account",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 234,
                                "src": "4656:7:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4622:42:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_contract$_IERC20_$2488_$_t_uint256_$",
                                "typeString": "mapping(contract IERC20 => uint256)"
                              }
                            },
                            "id": 394,
                            "indexExpression": {
                              "id": 392,
                              "name": "externalToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 314,
                              "src": "4665:13:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$2488",
                                "typeString": "contract IERC20"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "4622:57:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "baseExpression": {
                              "id": 395,
                              "name": "externalRewardPerTokenStoredWad",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 65,
                              "src": "4682:31:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_contract$_IERC20_$2488_$_t_uint256_$",
                                "typeString": "mapping(contract IERC20 => uint256)"
                              }
                            },
                            "id": 397,
                            "indexExpression": {
                              "id": 396,
                              "name": "externalToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 314,
                              "src": "4714:13:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$2488",
                                "typeString": "contract IERC20"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4682:46:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4622:106:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 399,
                        "nodeType": "ExpressionStatement",
                        "src": "4622:106:6"
                      },
                      {
                        "expression": {
                          "id": 408,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 400,
                                "name": "externalRewards",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 60,
                                "src": "4742:15:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_contract$_IERC20_$2488_$_t_uint256_$_$",
                                  "typeString": "mapping(address => mapping(contract IERC20 => uint256))"
                                }
                              },
                              "id": 403,
                              "indexExpression": {
                                "id": 401,
                                "name": "account",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 234,
                                "src": "4758:7:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4742:24:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_contract$_IERC20_$2488_$_t_uint256_$",
                                "typeString": "mapping(contract IERC20 => uint256)"
                              }
                            },
                            "id": 404,
                            "indexExpression": {
                              "id": 402,
                              "name": "externalToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 314,
                              "src": "4767:13:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$2488",
                                "typeString": "contract IERC20"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "4742:39:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "baseExpression": {
                              "id": 405,
                              "name": "result",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 239,
                              "src": "4784:6:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            "id": 407,
                            "indexExpression": {
                              "id": 406,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 302,
                              "src": "4791:1:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4784:9:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4742:51:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 409,
                        "nodeType": "ExpressionStatement",
                        "src": "4742:51:6"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 308,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 305,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 302,
                      "src": "3817:1:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 306,
                        "name": "externalTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 245,
                        "src": "3821:14:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_IERC20_$2488_$dyn_memory_ptr",
                          "typeString": "contract IERC20[] memory"
                        }
                      },
                      "id": 307,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "3821:21:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3817:25:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 411,
                  "initializationExpression": {
                    "assignments": [
                      302
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 302,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "3810:1:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 411,
                        "src": "3802:9:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 301,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3802:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 304,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 303,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3814:1:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "3802:13:6"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 310,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "3844:3:6",
                      "subExpression": {
                        "id": 309,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 302,
                        "src": "3844:1:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 311,
                    "nodeType": "ExpressionStatement",
                    "src": "3844:3:6"
                  },
                  "nodeType": "ForStatement",
                  "src": "3797:1007:6"
                },
                {
                  "expression": {
                    "id": 412,
                    "name": "result",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 239,
                    "src": "4821:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "functionReturnParameters": 240,
                  "id": 413,
                  "nodeType": "Return",
                  "src": "4814:13:6"
                }
              ]
            },
            "functionSelector": "1e02cee3",
            "id": 415,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "earnedExternal",
            "nameLocation": "3293:14:6",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 236,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3332:8:6"
            },
            "parameters": {
              "id": 235,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 234,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "3316:7:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 415,
                  "src": "3308:15:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 233,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3308:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3307:17:6"
            },
            "returnParameters": {
              "id": 240,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 239,
                  "mutability": "mutable",
                  "name": "result",
                  "nameLocation": "3367:6:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 415,
                  "src": "3350:23:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 237,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "3350:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 238,
                    "nodeType": "ArrayTypeName",
                    "src": "3350:9:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3349:25:6"
            },
            "scope": 938,
            "src": "3284:1550:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              2381
            ],
            "body": {
              "id": 426,
              "nodeType": "Block",
              "src": "4913:55:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 423,
                        "name": "rewardsDuration",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41,
                        "src": "4945:15:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 421,
                        "name": "rewardRate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38,
                        "src": "4930:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 422,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mul",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2224,
                      "src": "4930:14:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 424,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4930:31:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 420,
                  "id": 425,
                  "nodeType": "Return",
                  "src": "4923:38:6"
                }
              ]
            },
            "functionSelector": "1c1f78eb",
            "id": 427,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getRewardForDuration",
            "nameLocation": "4849:20:6",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 417,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4886:8:6"
            },
            "parameters": {
              "id": 416,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4869:2:6"
            },
            "returnParameters": {
              "id": 420,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 419,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 427,
                  "src": "4904:7:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 418,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4904:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4903:9:6"
            },
            "scope": 938,
            "src": "4840:128:6",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              2398
            ],
            "body": {
              "id": 500,
              "nodeType": "Block",
              "src": "5143:402:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 442,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 440,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 429,
                          "src": "5161:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 441,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5170:1:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "5161:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "43616e6e6f74207374616b652030",
                        "id": 443,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5173:16:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2972ce884b95fc24c703b7f04fae79e4ca7287e77fa26ed09d1faa4263e887ab",
                          "typeString": "literal_string \"Cannot stake 0\""
                        },
                        "value": "Cannot stake 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2972ce884b95fc24c703b7f04fae79e4ca7287e77fa26ed09d1faa4263e887ab",
                          "typeString": "literal_string \"Cannot stake 0\""
                        }
                      ],
                      "id": 439,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5153:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 444,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5153:37:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 445,
                  "nodeType": "ExpressionStatement",
                  "src": "5153:37:6"
                },
                {
                  "expression": {
                    "id": 451,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 446,
                      "name": "_totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 74,
                      "src": "5200:12:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 449,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 429,
                          "src": "5232:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 447,
                          "name": "_totalSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 74,
                          "src": "5215:12:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 448,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2194,
                        "src": "5215:16:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 450,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5215:24:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5200:39:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 452,
                  "nodeType": "ExpressionStatement",
                  "src": "5200:39:6"
                },
                {
                  "expression": {
                    "id": 464,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 453,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78,
                        "src": "5249:9:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 456,
                      "indexExpression": {
                        "expression": {
                          "id": 454,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "5259:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 455,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5259:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5249:21:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 462,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 429,
                          "src": "5299:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "baseExpression": {
                            "id": 457,
                            "name": "_balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 78,
                            "src": "5273:9:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 460,
                          "indexExpression": {
                            "expression": {
                              "id": 458,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "5283:3:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 459,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "5283:10:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5273:21:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 461,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2194,
                        "src": "5273:25:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 463,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5273:33:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5249:57:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 465,
                  "nodeType": "ExpressionStatement",
                  "src": "5249:57:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 469,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "5346:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 470,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5346:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 473,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "5366:4:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockMoolaStakingRewards_$938",
                              "typeString": "contract MockMoolaStakingRewards"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MockMoolaStakingRewards_$938",
                              "typeString": "contract MockMoolaStakingRewards"
                            }
                          ],
                          "id": 472,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5358:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 471,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5358:7:6",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 474,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5358:13:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 475,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 429,
                        "src": "5373:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 466,
                        "name": "stakingToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28,
                        "src": "5316:12:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$2488",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 468,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1778,
                      "src": "5316:29:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$2488_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$2488_$",
                        "typeString": "function (contract IERC20,address,address,uint256)"
                      }
                    },
                    "id": 476,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5316:64:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 477,
                  "nodeType": "ExpressionStatement",
                  "src": "5316:64:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 483,
                            "name": "externalStakingRewards",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 81,
                            "src": "5419:22:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IStakingRewards_$2410",
                              "typeString": "contract IStakingRewards"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IStakingRewards_$2410",
                              "typeString": "contract IStakingRewards"
                            }
                          ],
                          "id": 482,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5411:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 481,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5411:7:6",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 484,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5411:31:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 485,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 429,
                        "src": "5444:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 478,
                        "name": "stakingToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28,
                        "src": "5390:12:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$2488",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 480,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2457,
                      "src": "5390:20:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 486,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5390:61:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 487,
                  "nodeType": "ExpressionStatement",
                  "src": "5390:61:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 491,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 429,
                        "src": "5490:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 488,
                        "name": "externalStakingRewards",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 81,
                        "src": "5461:22:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IStakingRewards_$2410",
                          "typeString": "contract IStakingRewards"
                        }
                      },
                      "id": 490,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "stake",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2398,
                      "src": "5461:28:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 492,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5461:36:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 493,
                  "nodeType": "ExpressionStatement",
                  "src": "5461:36:6"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 495,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "5519:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 496,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5519:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 497,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 429,
                        "src": "5531:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 494,
                      "name": "Staked",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 909,
                      "src": "5512:6:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 498,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5512:26:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 499,
                  "nodeType": "EmitStatement",
                  "src": "5507:31:6"
                }
              ]
            },
            "functionSelector": "a694fc3a",
            "id": 501,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 433,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 432,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1720,
                  "src": "5105:12:6"
                },
                "nodeType": "ModifierInvocation",
                "src": "5105:12:6"
              },
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 435,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -15,
                      "src": "5131:3:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 436,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "5131:10:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 437,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 434,
                  "name": "updateReward",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 899,
                  "src": "5118:12:6"
                },
                "nodeType": "ModifierInvocation",
                "src": "5118:24:6"
              }
            ],
            "name": "stake",
            "nameLocation": "5065:5:6",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 431,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5096:8:6"
            },
            "parameters": {
              "id": 430,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 429,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "5079:6:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 501,
                  "src": "5071:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 428,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5071:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5070:16:6"
            },
            "returnParameters": {
              "id": 438,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5143:0:6"
            },
            "scope": 938,
            "src": "5056:489:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              2403
            ],
            "body": {
              "id": 560,
              "nodeType": "Block",
              "src": "5639:321:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 516,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 514,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 503,
                          "src": "5657:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 515,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5666:1:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "5657:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "43616e6e6f742077697468647261772030",
                        "id": 517,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5669:19:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8d85b8e7f4404d04d93e8d532ad219ceeba0becfbc18622bad46b31e08b1f0b0",
                          "typeString": "literal_string \"Cannot withdraw 0\""
                        },
                        "value": "Cannot withdraw 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8d85b8e7f4404d04d93e8d532ad219ceeba0becfbc18622bad46b31e08b1f0b0",
                          "typeString": "literal_string \"Cannot withdraw 0\""
                        }
                      ],
                      "id": 513,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5649:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 518,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5649:40:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 519,
                  "nodeType": "ExpressionStatement",
                  "src": "5649:40:6"
                },
                {
                  "expression": {
                    "id": 525,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 520,
                      "name": "_totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 74,
                      "src": "5699:12:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 523,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 503,
                          "src": "5731:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 521,
                          "name": "_totalSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 74,
                          "src": "5714:12:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 522,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2209,
                        "src": "5714:16:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 524,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5714:24:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5699:39:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 526,
                  "nodeType": "ExpressionStatement",
                  "src": "5699:39:6"
                },
                {
                  "expression": {
                    "id": 538,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 527,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78,
                        "src": "5748:9:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 530,
                      "indexExpression": {
                        "expression": {
                          "id": 528,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "5758:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 529,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5758:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5748:21:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 536,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 503,
                          "src": "5798:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "baseExpression": {
                            "id": 531,
                            "name": "_balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 78,
                            "src": "5772:9:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 534,
                          "indexExpression": {
                            "expression": {
                              "id": 532,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "5782:3:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 533,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "5782:10:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5772:21:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 535,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2209,
                        "src": "5772:25:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 537,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5772:33:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5748:57:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 539,
                  "nodeType": "ExpressionStatement",
                  "src": "5748:57:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 543,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 503,
                        "src": "5847:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 540,
                        "name": "externalStakingRewards",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 81,
                        "src": "5815:22:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IStakingRewards_$2410",
                          "typeString": "contract IStakingRewards"
                        }
                      },
                      "id": 542,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "withdraw",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2403,
                      "src": "5815:31:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 544,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5815:39:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 545,
                  "nodeType": "ExpressionStatement",
                  "src": "5815:39:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 549,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "5890:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 550,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5890:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 551,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 503,
                        "src": "5902:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 546,
                        "name": "stakingToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28,
                        "src": "5864:12:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$2488",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 548,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1752,
                      "src": "5864:25:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$2488_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$2488_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 552,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5864:45:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 553,
                  "nodeType": "ExpressionStatement",
                  "src": "5864:45:6"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 555,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "5934:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 556,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5934:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 557,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 503,
                        "src": "5946:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 554,
                      "name": "Withdrawn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 915,
                      "src": "5924:9:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 558,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5924:29:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 559,
                  "nodeType": "EmitStatement",
                  "src": "5919:34:6"
                }
              ]
            },
            "functionSelector": "2e1a7d4d",
            "id": 561,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 507,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 506,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1720,
                  "src": "5601:12:6"
                },
                "nodeType": "ModifierInvocation",
                "src": "5601:12:6"
              },
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 509,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -15,
                      "src": "5627:3:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 510,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "5627:10:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 511,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 508,
                  "name": "updateReward",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 899,
                  "src": "5614:12:6"
                },
                "nodeType": "ModifierInvocation",
                "src": "5614:24:6"
              }
            ],
            "name": "withdraw",
            "nameLocation": "5560:8:6",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 505,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5592:8:6"
            },
            "parameters": {
              "id": 504,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 503,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "5577:6:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 561,
                  "src": "5569:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 502,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5569:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5568:16:6"
            },
            "returnParameters": {
              "id": 512,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5639:0:6"
            },
            "scope": 938,
            "src": "5551:409:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              2406
            ],
            "body": {
              "id": 668,
              "nodeType": "Block",
              "src": "6041:764:6",
              "statements": [
                {
                  "assignments": [
                    572
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 572,
                      "mutability": "mutable",
                      "name": "reward",
                      "nameLocation": "6059:6:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 668,
                      "src": "6051:14:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 571,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6051:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 577,
                  "initialValue": {
                    "baseExpression": {
                      "id": 573,
                      "name": "rewards",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 53,
                      "src": "6068:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 576,
                    "indexExpression": {
                      "expression": {
                        "id": 574,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "6076:3:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 575,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "6076:10:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "6068:19:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6051:36:6"
                },
                {
                  "assignments": [
                    582
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 582,
                      "mutability": "mutable",
                      "name": "externalTokens",
                      "nameLocation": "6113:14:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 668,
                      "src": "6097:30:6",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_contract$_IERC20_$2488_$dyn_memory_ptr",
                        "typeString": "contract IERC20[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 580,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 579,
                            "name": "IERC20",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 2488,
                            "src": "6097:6:6"
                          },
                          "referencedDeclaration": 2488,
                          "src": "6097:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$2488",
                            "typeString": "contract IERC20"
                          }
                        },
                        "id": 581,
                        "nodeType": "ArrayTypeName",
                        "src": "6097:8:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_IERC20_$2488_$dyn_storage_ptr",
                          "typeString": "contract IERC20[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 584,
                  "initialValue": {
                    "id": 583,
                    "name": "externalRewardsTokens",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 32,
                    "src": "6130:21:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_contract$_IERC20_$2488_$dyn_storage",
                      "typeString": "contract IERC20[] storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6097:54:6"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 587,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 585,
                      "name": "reward",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 572,
                      "src": "6166:6:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 586,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6175:1:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "6166:10:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 610,
                  "nodeType": "IfStatement",
                  "src": "6162:172:6",
                  "trueBody": {
                    "id": 609,
                    "nodeType": "Block",
                    "src": "6178:156:6",
                    "statements": [
                      {
                        "expression": {
                          "id": 593,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 588,
                              "name": "rewards",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 53,
                              "src": "6192:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 591,
                            "indexExpression": {
                              "expression": {
                                "id": 589,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "6200:3:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 590,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "6200:10:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "6192:19:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "30",
                            "id": 592,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6214:1:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "6192:23:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 594,
                        "nodeType": "ExpressionStatement",
                        "src": "6192:23:6"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 598,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "6255:3:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 599,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "6255:10:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 600,
                              "name": "reward",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 572,
                              "src": "6267:6:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 595,
                              "name": "rewardsToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 25,
                              "src": "6229:12:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$2488",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 597,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeTransfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1752,
                            "src": "6229:25:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$2488_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$2488_$",
                              "typeString": "function (contract IERC20,address,uint256)"
                            }
                          },
                          "id": 601,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6229:45:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 602,
                        "nodeType": "ExpressionStatement",
                        "src": "6229:45:6"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 604,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "6304:3:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 605,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "6304:10:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 606,
                              "name": "reward",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 572,
                              "src": "6316:6:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 603,
                            "name": "RewardPaid",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 921,
                            "src": "6293:10:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 607,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6293:30:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 608,
                        "nodeType": "EmitStatement",
                        "src": "6288:35:6"
                      }
                    ]
                  }
                },
                {
                  "body": {
                    "id": 666,
                    "nodeType": "Block",
                    "src": "6396:403:6",
                    "statements": [
                      {
                        "assignments": [
                          624
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 624,
                            "mutability": "mutable",
                            "name": "externalToken",
                            "nameLocation": "6417:13:6",
                            "nodeType": "VariableDeclaration",
                            "scope": 666,
                            "src": "6410:20:6",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$2488",
                              "typeString": "contract IERC20"
                            },
                            "typeName": {
                              "id": 623,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 622,
                                "name": "IERC20",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 2488,
                                "src": "6410:6:6"
                              },
                              "referencedDeclaration": 2488,
                              "src": "6410:6:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$2488",
                                "typeString": "contract IERC20"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 628,
                        "initialValue": {
                          "baseExpression": {
                            "id": 625,
                            "name": "externalTokens",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 582,
                            "src": "6433:14:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_contract$_IERC20_$2488_$dyn_memory_ptr",
                              "typeString": "contract IERC20[] memory"
                            }
                          },
                          "id": 627,
                          "indexExpression": {
                            "id": 626,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 612,
                            "src": "6448:1:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "6433:17:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$2488",
                            "typeString": "contract IERC20"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6410:40:6"
                      },
                      {
                        "assignments": [
                          630
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 630,
                            "mutability": "mutable",
                            "name": "externalReward",
                            "nameLocation": "6472:14:6",
                            "nodeType": "VariableDeclaration",
                            "scope": 666,
                            "src": "6464:22:6",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 629,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "6464:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 637,
                        "initialValue": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 631,
                              "name": "externalRewards",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 60,
                              "src": "6489:15:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_contract$_IERC20_$2488_$_t_uint256_$_$",
                                "typeString": "mapping(address => mapping(contract IERC20 => uint256))"
                              }
                            },
                            "id": 634,
                            "indexExpression": {
                              "expression": {
                                "id": 632,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "6505:3:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 633,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "6505:10:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "6489:27:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_contract$_IERC20_$2488_$_t_uint256_$",
                              "typeString": "mapping(contract IERC20 => uint256)"
                            }
                          },
                          "id": 636,
                          "indexExpression": {
                            "id": 635,
                            "name": "externalToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 624,
                            "src": "6517:13:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$2488",
                              "typeString": "contract IERC20"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "6489:42:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6464:67:6"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 640,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 638,
                            "name": "externalReward",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 630,
                            "src": "6549:14:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 639,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6566:1:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "6549:18:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 665,
                        "nodeType": "IfStatement",
                        "src": "6545:244:6",
                        "trueBody": {
                          "id": 664,
                          "nodeType": "Block",
                          "src": "6569:220:6",
                          "statements": [
                            {
                              "expression": {
                                "id": 648,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "baseExpression": {
                                      "id": 641,
                                      "name": "externalRewards",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 60,
                                      "src": "6587:15:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_contract$_IERC20_$2488_$_t_uint256_$_$",
                                        "typeString": "mapping(address => mapping(contract IERC20 => uint256))"
                                      }
                                    },
                                    "id": 645,
                                    "indexExpression": {
                                      "expression": {
                                        "id": 642,
                                        "name": "msg",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -15,
                                        "src": "6603:3:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_message",
                                          "typeString": "msg"
                                        }
                                      },
                                      "id": 643,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "sender",
                                      "nodeType": "MemberAccess",
                                      "src": "6603:10:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "6587:27:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_contract$_IERC20_$2488_$_t_uint256_$",
                                      "typeString": "mapping(contract IERC20 => uint256)"
                                    }
                                  },
                                  "id": 646,
                                  "indexExpression": {
                                    "id": 644,
                                    "name": "externalToken",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 624,
                                    "src": "6615:13:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$2488",
                                      "typeString": "contract IERC20"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "6587:42:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "hexValue": "30",
                                  "id": 647,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "6632:1:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "6587:46:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 649,
                              "nodeType": "ExpressionStatement",
                              "src": "6587:46:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 653,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "6678:3:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 654,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "6678:10:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 655,
                                    "name": "externalReward",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 630,
                                    "src": "6690:14:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "id": 650,
                                    "name": "externalToken",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 624,
                                    "src": "6651:13:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$2488",
                                      "typeString": "contract IERC20"
                                    }
                                  },
                                  "id": 652,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "safeTransfer",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1752,
                                  "src": "6651:26:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$2488_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$2488_$",
                                    "typeString": "function (contract IERC20,address,uint256)"
                                  }
                                },
                                "id": 656,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6651:54:6",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 657,
                              "nodeType": "ExpressionStatement",
                              "src": "6651:54:6"
                            },
                            {
                              "eventCall": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 659,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "6747:3:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 660,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "6747:10:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 661,
                                    "name": "externalReward",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 630,
                                    "src": "6759:14:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 658,
                                  "name": "ExternalRewardPaid",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 927,
                                  "src": "6728:18:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                    "typeString": "function (address,uint256)"
                                  }
                                },
                                "id": 662,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6728:46:6",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 663,
                              "nodeType": "EmitStatement",
                              "src": "6723:51:6"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 618,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 615,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 612,
                      "src": "6364:1:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 616,
                        "name": "externalTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 582,
                        "src": "6368:14:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_IERC20_$2488_$dyn_memory_ptr",
                          "typeString": "contract IERC20[] memory"
                        }
                      },
                      "id": 617,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "6368:21:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6364:25:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 667,
                  "initializationExpression": {
                    "assignments": [
                      612
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 612,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "6357:1:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 667,
                        "src": "6349:9:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 611,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6349:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 614,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 613,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6361:1:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "6349:13:6"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 620,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "6391:3:6",
                      "subExpression": {
                        "id": 619,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 612,
                        "src": "6391:1:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 621,
                    "nodeType": "ExpressionStatement",
                    "src": "6391:3:6"
                  },
                  "nodeType": "ForStatement",
                  "src": "6344:455:6"
                }
              ]
            },
            "functionSelector": "3d18b912",
            "id": 669,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 565,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 564,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1720,
                  "src": "6003:12:6"
                },
                "nodeType": "ModifierInvocation",
                "src": "6003:12:6"
              },
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 567,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -15,
                      "src": "6029:3:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 568,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "6029:10:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 569,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 566,
                  "name": "updateReward",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 899,
                  "src": "6016:12:6"
                },
                "nodeType": "ModifierInvocation",
                "src": "6016:24:6"
              }
            ],
            "name": "getReward",
            "nameLocation": "5975:9:6",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 563,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5994:8:6"
            },
            "parameters": {
              "id": 562,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5984:2:6"
            },
            "returnParameters": {
              "id": 570,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6041:0:6"
            },
            "scope": 938,
            "src": "5966:839:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              2409
            ],
            "body": {
              "id": 683,
              "nodeType": "Block",
              "src": "6845:69:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 674,
                          "name": "_balances",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 78,
                          "src": "6864:9:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                          }
                        },
                        "id": 677,
                        "indexExpression": {
                          "expression": {
                            "id": 675,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "6874:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 676,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "6874:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6864:21:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 673,
                      "name": "withdraw",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 561,
                      "src": "6855:8:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 678,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6855:31:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 679,
                  "nodeType": "ExpressionStatement",
                  "src": "6855:31:6"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 680,
                      "name": "getReward",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 669,
                      "src": "6896:9:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 681,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6896:11:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 682,
                  "nodeType": "ExpressionStatement",
                  "src": "6896:11:6"
                }
              ]
            },
            "functionSelector": "e9fad8ee",
            "id": 684,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "exit",
            "nameLocation": "6820:4:6",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 671,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "6836:8:6"
            },
            "parameters": {
              "id": 670,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6824:2:6"
            },
            "returnParameters": {
              "id": 672,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6845:0:6"
            },
            "scope": 938,
            "src": "6811:103:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              1061
            ],
            "body": {
              "id": 774,
              "nodeType": "Block",
              "src": "7085:962:6",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 701,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 698,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "7099:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 699,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "7099:15:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">=",
                    "rightExpression": {
                      "id": 700,
                      "name": "periodFinish",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 35,
                      "src": "7118:12:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7099:31:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 735,
                    "nodeType": "Block",
                    "src": "7203:204:6",
                    "statements": [
                      {
                        "assignments": [
                          711
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 711,
                            "mutability": "mutable",
                            "name": "remaining",
                            "nameLocation": "7225:9:6",
                            "nodeType": "VariableDeclaration",
                            "scope": 735,
                            "src": "7217:17:6",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 710,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "7217:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 717,
                        "initialValue": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 714,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "7254:5:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 715,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "src": "7254:15:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 712,
                              "name": "periodFinish",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 35,
                              "src": "7237:12:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 713,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sub",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2209,
                            "src": "7237:16:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 716,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7237:33:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "7217:53:6"
                      },
                      {
                        "assignments": [
                          719
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 719,
                            "mutability": "mutable",
                            "name": "leftover",
                            "nameLocation": "7292:8:6",
                            "nodeType": "VariableDeclaration",
                            "scope": 735,
                            "src": "7284:16:6",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 718,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "7284:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 724,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 722,
                              "name": "rewardRate",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 38,
                              "src": "7317:10:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 720,
                              "name": "remaining",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 711,
                              "src": "7303:9:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 721,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "mul",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2224,
                            "src": "7303:13:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 723,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7303:25:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "7284:44:6"
                      },
                      {
                        "expression": {
                          "id": 733,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 725,
                            "name": "rewardRate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 38,
                            "src": "7342:10:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 731,
                                "name": "rewardsDuration",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 41,
                                "src": "7380:15:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 728,
                                    "name": "leftover",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 719,
                                    "src": "7366:8:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "id": 726,
                                    "name": "reward",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 686,
                                    "src": "7355:6:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 727,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "add",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2194,
                                  "src": "7355:10:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                    "typeString": "function (uint256,uint256) pure returns (uint256)"
                                  }
                                },
                                "id": 729,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7355:20:6",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 730,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "div",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2239,
                              "src": "7355:24:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 732,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7355:41:6",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7342:54:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 734,
                        "nodeType": "ExpressionStatement",
                        "src": "7342:54:6"
                      }
                    ]
                  },
                  "id": 736,
                  "nodeType": "IfStatement",
                  "src": "7095:312:6",
                  "trueBody": {
                    "id": 709,
                    "nodeType": "Block",
                    "src": "7132:65:6",
                    "statements": [
                      {
                        "expression": {
                          "id": 707,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 702,
                            "name": "rewardRate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 38,
                            "src": "7146:10:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 705,
                                "name": "rewardsDuration",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 41,
                                "src": "7170:15:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 703,
                                "name": "reward",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 686,
                                "src": "7159:6:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 704,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "div",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2239,
                              "src": "7159:10:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 706,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7159:27:6",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7146:40:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 708,
                        "nodeType": "ExpressionStatement",
                        "src": "7146:40:6"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    738
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 738,
                      "mutability": "mutable",
                      "name": "balance",
                      "nameLocation": "7766:7:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 774,
                      "src": "7761:12:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 737,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "7761:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 746,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 743,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "7807:4:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockMoolaStakingRewards_$938",
                              "typeString": "contract MockMoolaStakingRewards"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MockMoolaStakingRewards_$938",
                              "typeString": "contract MockMoolaStakingRewards"
                            }
                          ],
                          "id": 742,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7799:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 741,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "7799:7:6",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 744,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7799:13:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 739,
                        "name": "rewardsToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25,
                        "src": "7776:12:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$2488",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 740,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2427,
                      "src": "7776:22:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 745,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7776:37:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7761:52:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 753,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 748,
                          "name": "rewardRate",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 38,
                          "src": "7831:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 751,
                              "name": "rewardsDuration",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 41,
                              "src": "7857:15:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 749,
                              "name": "balance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 738,
                              "src": "7845:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 750,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "div",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2239,
                            "src": "7845:11:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 752,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7845:28:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "7831:42:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "50726f76696465642072657761726420746f6f2068696768",
                        "id": 754,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7875:26:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_af294828ccb7807394ab9c640e14eb2534ed0e75bb2e1346f1bb81dd84cda810",
                          "typeString": "literal_string \"Provided reward too high\""
                        },
                        "value": "Provided reward too high"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_af294828ccb7807394ab9c640e14eb2534ed0e75bb2e1346f1bb81dd84cda810",
                          "typeString": "literal_string \"Provided reward too high\""
                        }
                      ],
                      "id": 747,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7823:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 755,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7823:79:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 756,
                  "nodeType": "ExpressionStatement",
                  "src": "7823:79:6"
                },
                {
                  "expression": {
                    "id": 760,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 757,
                      "name": "lastUpdateTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 43,
                      "src": "7913:14:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 758,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "7930:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 759,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "7930:15:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7913:32:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 761,
                  "nodeType": "ExpressionStatement",
                  "src": "7913:32:6"
                },
                {
                  "expression": {
                    "id": 768,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 762,
                      "name": "periodFinish",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 35,
                      "src": "7955:12:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 766,
                          "name": "rewardsDuration",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 41,
                          "src": "7990:15:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "expression": {
                            "id": 763,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "7970:5:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 764,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "7970:15:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 765,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2194,
                        "src": "7970:19:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 767,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7970:36:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7955:51:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 769,
                  "nodeType": "ExpressionStatement",
                  "src": "7955:51:6"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 771,
                        "name": "reward",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 686,
                        "src": "8033:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 770,
                      "name": "RewardAdded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 903,
                      "src": "8021:11:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 772,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8021:19:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 773,
                  "nodeType": "EmitStatement",
                  "src": "8016:24:6"
                }
              ]
            },
            "functionSelector": "3c6b16ab",
            "id": 775,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 690,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 689,
                  "name": "onlyRewardsDistribution",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1073,
                  "src": "7036:23:6"
                },
                "nodeType": "ModifierInvocation",
                "src": "7036:23:6"
              },
              {
                "arguments": [
                  {
                    "arguments": [
                      {
                        "hexValue": "30",
                        "id": 694,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7081:1:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 693,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "7073:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 692,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "7073:7:6",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 695,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7073:10:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 696,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 691,
                  "name": "updateReward",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 899,
                  "src": "7060:12:6"
                },
                "nodeType": "ModifierInvocation",
                "src": "7060:24:6"
              }
            ],
            "name": "notifyRewardAmount",
            "nameLocation": "6983:18:6",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 688,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "7027:8:6"
            },
            "parameters": {
              "id": 687,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 686,
                  "mutability": "mutable",
                  "name": "reward",
                  "nameLocation": "7010:6:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 775,
                  "src": "7002:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 685,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7002:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7001:16:6"
            },
            "returnParameters": {
              "id": 697,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7085:0:6"
            },
            "scope": 938,
            "src": "6974:1073:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 799,
              "nodeType": "Block",
              "src": "8177:115:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 791,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 789,
                          "name": "timestamp",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 777,
                          "src": "8195:9:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "id": 790,
                          "name": "lastUpdateTime",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 43,
                          "src": "8207:14:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "8195:26:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c6964206e657720706572696f642066696e697368",
                        "id": 792,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8223:27:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9c4012d47923e270977ae70469e042db64d2e0171fffe281a5a91af9421748d1",
                          "typeString": "literal_string \"Invalid new period finish\""
                        },
                        "value": "Invalid new period finish"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9c4012d47923e270977ae70469e042db64d2e0171fffe281a5a91af9421748d1",
                          "typeString": "literal_string \"Invalid new period finish\""
                        }
                      ],
                      "id": 788,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8187:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 793,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8187:64:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 794,
                  "nodeType": "ExpressionStatement",
                  "src": "8187:64:6"
                },
                {
                  "expression": {
                    "id": 797,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 795,
                      "name": "periodFinish",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 35,
                      "src": "8261:12:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 796,
                      "name": "timestamp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 777,
                      "src": "8276:9:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8261:24:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 798,
                  "nodeType": "ExpressionStatement",
                  "src": "8261:24:6"
                }
              ]
            },
            "functionSelector": "556f6e6b",
            "id": 800,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 780,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 779,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1029,
                  "src": "8142:9:6"
                },
                "nodeType": "ModifierInvocation",
                "src": "8142:9:6"
              },
              {
                "arguments": [
                  {
                    "arguments": [
                      {
                        "hexValue": "30",
                        "id": 784,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8173:1:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 783,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "8165:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 782,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "8165:7:6",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 785,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8165:10:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 786,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 781,
                  "name": "updateReward",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 899,
                  "src": "8152:12:6"
                },
                "nodeType": "ModifierInvocation",
                "src": "8152:24:6"
              }
            ],
            "name": "updatePeriodFinish",
            "nameLocation": "8098:18:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 778,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 777,
                  "mutability": "mutable",
                  "name": "timestamp",
                  "nameLocation": "8122:9:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 800,
                  "src": "8117:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 776,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "8117:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8116:16:6"
            },
            "returnParameters": {
              "id": 787,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8177:0:6"
            },
            "scope": 938,
            "src": "8089:203:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 832,
              "nodeType": "Block",
              "src": "8488:214:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 815,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 810,
                          "name": "tokenAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 802,
                          "src": "8506:12:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 813,
                              "name": "stakingToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 28,
                              "src": "8530:12:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$2488",
                                "typeString": "contract IERC20"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IERC20_$2488",
                                "typeString": "contract IERC20"
                              }
                            ],
                            "id": 812,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "8522:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 811,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "8522:7:6",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 814,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8522:21:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "8506:37:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "43616e6e6f7420776974686472617720746865207374616b696e6720746f6b656e",
                        "id": 816,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8545:35:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f43de9f2a3539b2ac9cf1844588e9cc0acd1b2bdb1ec43734f76440993ede0a9",
                          "typeString": "literal_string \"Cannot withdraw the staking token\""
                        },
                        "value": "Cannot withdraw the staking token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f43de9f2a3539b2ac9cf1844588e9cc0acd1b2bdb1ec43734f76440993ede0a9",
                          "typeString": "literal_string \"Cannot withdraw the staking token\""
                        }
                      ],
                      "id": 809,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8498:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 817,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8498:83:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 818,
                  "nodeType": "ExpressionStatement",
                  "src": "8498:83:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 823,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 948,
                        "src": "8625:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 824,
                        "name": "tokenAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 804,
                        "src": "8632:11:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 820,
                            "name": "tokenAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 802,
                            "src": "8598:12:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 819,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2488,
                          "src": "8591:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$2488_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 821,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8591:20:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$2488",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 822,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1752,
                      "src": "8591:33:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$2488_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$2488_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 825,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8591:53:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 826,
                  "nodeType": "ExpressionStatement",
                  "src": "8591:53:6"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 828,
                        "name": "tokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 802,
                        "src": "8669:12:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 829,
                        "name": "tokenAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 804,
                        "src": "8683:11:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 827,
                      "name": "Recovered",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 937,
                      "src": "8659:9:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 830,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8659:36:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 831,
                  "nodeType": "EmitStatement",
                  "src": "8654:41:6"
                }
              ]
            },
            "functionSelector": "8980f11f",
            "id": 833,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 807,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 806,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1029,
                  "src": "8478:9:6"
                },
                "nodeType": "ModifierInvocation",
                "src": "8478:9:6"
              }
            ],
            "name": "recoverERC20",
            "nameLocation": "8413:12:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 805,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 802,
                  "mutability": "mutable",
                  "name": "tokenAddress",
                  "nameLocation": "8434:12:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 833,
                  "src": "8426:20:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 801,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8426:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 804,
                  "mutability": "mutable",
                  "name": "tokenAmount",
                  "nameLocation": "8456:11:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 833,
                  "src": "8448:19:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 803,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8448:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8425:43:6"
            },
            "returnParameters": {
              "id": 808,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8488:0:6"
            },
            "scope": 938,
            "src": "8404:298:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 856,
              "nodeType": "Block",
              "src": "8781:280:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 844,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 841,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "8812:5:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 842,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "8812:15:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "id": 843,
                          "name": "periodFinish",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 35,
                          "src": "8830:12:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "8812:30:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "50726576696f7573207265776172647320706572696f64206d75737420626520636f6d706c657465206265666f7265206368616e67696e6720746865206475726174696f6e20666f7220746865206e657720706572696f64",
                        "id": 845,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8856:90:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_07f2725172f5941b576a01ec7036d341e0c837e280f27b110cb3e6fd2f2c4a56",
                          "typeString": "literal_string \"Previous rewards period must be complete before changing the duration for the new period\""
                        },
                        "value": "Previous rewards period must be complete before changing the duration for the new period"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_07f2725172f5941b576a01ec7036d341e0c837e280f27b110cb3e6fd2f2c4a56",
                          "typeString": "literal_string \"Previous rewards period must be complete before changing the duration for the new period\""
                        }
                      ],
                      "id": 840,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8791:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 846,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8791:165:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 847,
                  "nodeType": "ExpressionStatement",
                  "src": "8791:165:6"
                },
                {
                  "expression": {
                    "id": 850,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 848,
                      "name": "rewardsDuration",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 41,
                      "src": "8966:15:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 849,
                      "name": "_rewardsDuration",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 835,
                      "src": "8984:16:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8966:34:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 851,
                  "nodeType": "ExpressionStatement",
                  "src": "8966:34:6"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 853,
                        "name": "rewardsDuration",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41,
                        "src": "9038:15:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 852,
                      "name": "RewardsDurationUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 931,
                      "src": "9015:22:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 854,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9015:39:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 855,
                  "nodeType": "EmitStatement",
                  "src": "9010:44:6"
                }
              ]
            },
            "functionSelector": "cc1a378f",
            "id": 857,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 838,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 837,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1029,
                  "src": "8771:9:6"
                },
                "nodeType": "ModifierInvocation",
                "src": "8771:9:6"
              }
            ],
            "name": "setRewardsDuration",
            "nameLocation": "8717:18:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 836,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 835,
                  "mutability": "mutable",
                  "name": "_rewardsDuration",
                  "nameLocation": "8744:16:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 857,
                  "src": "8736:24:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 834,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8736:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8735:26:6"
            },
            "returnParameters": {
              "id": 839,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8781:0:6"
            },
            "scope": 938,
            "src": "8708:353:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 898,
              "nodeType": "Block",
              "src": "9149:320:6",
              "statements": [
                {
                  "expression": {
                    "id": 864,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 861,
                      "name": "rewardPerTokenStored",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45,
                      "src": "9159:20:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 862,
                        "name": "rewardPerToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 202,
                        "src": "9182:14:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                          "typeString": "function () view returns (uint256)"
                        }
                      },
                      "id": 863,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9182:16:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9159:39:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 865,
                  "nodeType": "ExpressionStatement",
                  "src": "9159:39:6"
                },
                {
                  "expression": {
                    "id": 869,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 866,
                      "name": "lastUpdateTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 43,
                      "src": "9208:14:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 867,
                        "name": "lastTimeRewardApplicable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 170,
                        "src": "9225:24:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                          "typeString": "function () view returns (uint256)"
                        }
                      },
                      "id": 868,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9225:26:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9208:43:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 870,
                  "nodeType": "ExpressionStatement",
                  "src": "9208:43:6"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 876,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 871,
                      "name": "account",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 859,
                      "src": "9265:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 874,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9284:1:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 873,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "9276:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 872,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "9276:7:6",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 875,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9276:10:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "9265:21:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 896,
                  "nodeType": "IfStatement",
                  "src": "9261:191:6",
                  "trueBody": {
                    "id": 895,
                    "nodeType": "Block",
                    "src": "9288:164:6",
                    "statements": [
                      {
                        "expression": {
                          "id": 883,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 877,
                              "name": "rewards",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 53,
                              "src": "9302:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 879,
                            "indexExpression": {
                              "id": 878,
                              "name": "account",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 859,
                              "src": "9310:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "9302:16:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 881,
                                "name": "account",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 859,
                                "src": "9328:7:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 880,
                              "name": "earned",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 232,
                              "src": "9321:6:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                                "typeString": "function (address) view returns (uint256)"
                              }
                            },
                            "id": 882,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9321:15:6",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "9302:34:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 884,
                        "nodeType": "ExpressionStatement",
                        "src": "9302:34:6"
                      },
                      {
                        "expression": {
                          "id": 889,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 885,
                              "name": "userRewardPerTokenPaid",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 49,
                              "src": "9350:22:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 887,
                            "indexExpression": {
                              "id": 886,
                              "name": "account",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 859,
                              "src": "9373:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "9350:31:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 888,
                            "name": "rewardPerTokenStored",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45,
                            "src": "9384:20:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "9350:54:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 890,
                        "nodeType": "ExpressionStatement",
                        "src": "9350:54:6"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 892,
                              "name": "account",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 859,
                              "src": "9433:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 891,
                            "name": "earnedExternal",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 415,
                            "src": "9418:14:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                              "typeString": "function (address) returns (uint256[] memory)"
                            }
                          },
                          "id": 893,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9418:23:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        "id": 894,
                        "nodeType": "ExpressionStatement",
                        "src": "9418:23:6"
                      }
                    ]
                  }
                },
                {
                  "id": 897,
                  "nodeType": "PlaceholderStatement",
                  "src": "9461:1:6"
                }
              ]
            },
            "id": 899,
            "name": "updateReward",
            "nameLocation": "9119:12:6",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 860,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 859,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "9140:7:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 899,
                  "src": "9132:15:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 858,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9132:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9131:17:6"
            },
            "src": "9110:359:6",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "id": 903,
            "name": "RewardAdded",
            "nameLocation": "9521:11:6",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 902,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 901,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "reward",
                  "nameLocation": "9541:6:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 903,
                  "src": "9533:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 900,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9533:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9532:16:6"
            },
            "src": "9515:34:6"
          },
          {
            "anonymous": false,
            "id": 909,
            "name": "Staked",
            "nameLocation": "9560:6:6",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 908,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 905,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "9583:4:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 909,
                  "src": "9567:20:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 904,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9567:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 907,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "9597:6:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 909,
                  "src": "9589:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 906,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9589:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9566:38:6"
            },
            "src": "9554:51:6"
          },
          {
            "anonymous": false,
            "id": 915,
            "name": "Withdrawn",
            "nameLocation": "9616:9:6",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 914,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 911,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "9642:4:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 915,
                  "src": "9626:20:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 910,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9626:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 913,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "9656:6:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 915,
                  "src": "9648:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 912,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9648:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9625:38:6"
            },
            "src": "9610:54:6"
          },
          {
            "anonymous": false,
            "id": 921,
            "name": "RewardPaid",
            "nameLocation": "9675:10:6",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 920,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 917,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "9702:4:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 921,
                  "src": "9686:20:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 916,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9686:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 919,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "reward",
                  "nameLocation": "9716:6:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 921,
                  "src": "9708:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 918,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9708:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9685:38:6"
            },
            "src": "9669:55:6"
          },
          {
            "anonymous": false,
            "id": 927,
            "name": "ExternalRewardPaid",
            "nameLocation": "9735:18:6",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 926,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 923,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "9770:4:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 927,
                  "src": "9754:20:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 922,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9754:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 925,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "reward",
                  "nameLocation": "9784:6:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 927,
                  "src": "9776:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 924,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9776:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9753:38:6"
            },
            "src": "9729:63:6"
          },
          {
            "anonymous": false,
            "id": 931,
            "name": "RewardsDurationUpdated",
            "nameLocation": "9803:22:6",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 930,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 929,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "newDuration",
                  "nameLocation": "9834:11:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 931,
                  "src": "9826:19:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 928,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9826:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9825:21:6"
            },
            "src": "9797:50:6"
          },
          {
            "anonymous": false,
            "id": 937,
            "name": "Recovered",
            "nameLocation": "9858:9:6",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 936,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 933,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "9876:5:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 937,
                  "src": "9868:13:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 932,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9868:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 935,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "9891:6:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 937,
                  "src": "9883:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 934,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9883:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9867:31:6"
            },
            "src": "9852:47:6"
          }
        ],
        "scope": 939,
        "src": "642:9259:6",
        "usedErrors": []
      }
    ],
    "src": "69:9832:6"
  },
  "bytecode": "60e06040526000600555600060065562093a806007553480156200002257600080fd5b506040516200230a3803806200230a83398101604081905262000045916200024b565b856001600160a01b038116620000a25760405162461bcd60e51b815260206004820152601960248201527f4f776e657220616464726573732063616e6e6f7420626520300000000000000060448201526064015b60405180910390fd5b600080546001600160a01b0319166001600160a01b03831690811782556040805192835260208301919091527fb532073b38c83145e3e5135377a08bf9aab55bc0fd7c1179cd4fb995d2a5159c910160405180910390a150600160035581516200014f5760405162461bcd60e51b815260206004820152601b60248201527f456d7074792065787465726e616c52657761726473546f6b656e730000000000604482015260640162000099565b6001600160601b0319606085811b8216608052600280546001600160a01b0389166001600160a01b031990911617905584901b1660c05281516200019b906004906020850190620001b8565b5060601b6001600160601b03191660a05250620003be9350505050565b82805482825590600052602060002090810192821562000210579160200282015b828111156200021057825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190620001d9565b506200021e92915062000222565b5090565b5b808211156200021e576000815560010162000223565b80516200024681620003a5565b919050565b60008060008060008060c087890312156200026557600080fd5b86516200027281620003a5565b809650506020808801516200028781620003a5565b60408901519096506200029a81620003a5565b6060890151909550620002ad81620003a5565b60808901519094506001600160401b0380821115620002cb57600080fd5b818a0191508a601f830112620002e057600080fd5b815181811115620002f557620002f56200038f565b8060051b604051601f19603f830116810181811085821117156200031d576200031d6200038f565b604052828152858101935084860182860187018f10156200033d57600080fd5b600095505b838610156200036b57620003568162000239565b85526001959095019493860193860162000342565b508097505050505050506200038360a0880162000239565b90509295509295509295565b634e487b7160e01b600052604160045260246000fd5b6001600160a01b0381168114620003bb57600080fd5b50565b60805160601c60a05160601c60c05160601c611ecd6200043d600039600081816104170152818161079601528181610bb101528181611596015261165801526000818161039101528181610c1a015281816113540152818161154f01526115c501526000818161047501528181610df901526110490152611ecd6000f3fe608060405234801561001057600080fd5b50600436106101fa5760003560e01c806370a082311161011a5780639b8a14ee116100ad578063cd3daf9d1161007c578063cd3daf9d14610468578063d1af0c7d14610470578063df136d6514610497578063e9fad8ee146104a0578063ebe2b12b146104a857600080fd5b80639b8a14ee14610412578063a694fc3a14610439578063c8f33c911461044c578063cc1a378f1461045557600080fd5b806380faa57d116100e957806380faa57d146103c45780638980f11f146103cc5780638b876347146103df5780638da5cb5b146103ff57600080fd5b806370a082311461036357806372f702f31461038c57806379ba5097146103b35780637b0a47ee146103bb57600080fd5b806333bddbc6116101925780633fc6df6e116101615780633fc6df6e146102ff57806353a47bb714610312578063556f6e6b146103255780636be7bb1f1461033857600080fd5b806333bddbc6146102b0578063386a9525146102db5780633c6b16ab146102e45780633d18b912146102f757600080fd5b806319762143116101ce57806319762143146102625780631c1f78eb146102755780631e02cee31461027d5780632e1a7d4d1461029d57600080fd5b80628cc262146101ff5780630700037d146102255780631627540c1461024557806318160ddd1461025a575b600080fd5b61021261020d366004611be6565b6104b1565b6040519081526020015b60405180910390f35b610212610233366004611be6565b600b6020526000908152604090205481565b610258610253366004611be6565b61052f565b005b600f54610212565b610258610270366004611be6565b61058c565b6102126105b6565b61029061028b366004611be6565b6105d4565b60405161021c9190611cd8565b6102586102ab366004611c8a565b610a7c565b6102c36102be366004611c8a565b610c82565b6040516001600160a01b03909116815260200161021c565b61021260075481565b6102586102f2366004611c8a565b610cac565b610258610f31565b6002546102c3906001600160a01b031681565b6001546102c3906001600160a01b031681565b610258610333366004611c8a565b61118d565b610212610346366004611c03565b600c60209081526000928352604080842090915290825290205481565b610212610371366004611be6565b6001600160a01b031660009081526010602052604090205490565b6102c37f000000000000000000000000000000000000000000000000000000000000000081565b610258611252565b61021260065481565b61021261133c565b6102586103da366004611c3c565b61134a565b6102126103ed366004611be6565b600a6020526000908152604090205481565b6000546102c3906001600160a01b031681565b6102c37f000000000000000000000000000000000000000000000000000000000000000081565b610258610447366004611c8a565b61143e565b61021260085481565b610258610463366004611c8a565b6116ee565b6102126117c8565b6102c37f000000000000000000000000000000000000000000000000000000000000000081565b61021260095481565b610258611814565b61021260055481565b6001600160a01b0381166000908152600b6020908152604080832054600a909252822054610529919061052390670de0b6b3a76400009061051d906104fe906104f86117c8565b90611837565b6001600160a01b0388166000908152601060205260409020549061184a565b90611856565b90611862565b92915050565b61053761186e565b600180546001600160a01b0319166001600160a01b0383169081179091556040519081527f906a1c6bd7e3091ea86693dd029a831c19049ce77f1dce2ce0bab1cacbabce22906020015b60405180910390a150565b61059461186e565b600280546001600160a01b0319166001600160a01b0392909216919091179055565b60006105cf60075460065461184a90919063ffffffff16565b905090565b60606000600480548060200260200160405190810160405280929190818152602001828054801561062e57602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610610575b505050505090506000815167ffffffffffffffff81111561065157610651611e69565b60405190808252806020026020018201604052801561067a578160200160208202803683370190505b509050815167ffffffffffffffff81111561069757610697611e69565b6040519080825280602002602001820160405280156106c0578160200160208202803683370190505b50925060005b8251811015610793578281815181106106e1576106e1611e53565b60209081029190910101516040516370a0823160e01b81523060048201526001600160a01b03909116906370a082319060240160206040518083038186803b15801561072c57600080fd5b505afa158015610740573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107649190611ca3565b82828151811061077657610776611e53565b60209081029190910101528061078b81611e22565b9150506106c6565b507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316633d18b9126040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156107ef57600080fd5b505af1158015610803573d6000803e3d6000fd5b5050505060005b8251811015610a7457600083828151811061082757610827611e53565b60209081029190910101516040516370a0823160e01b81523060048201529091506000906001600160a01b038316906370a082319060240160206040518083038186803b15801561087757600080fd5b505afa15801561088b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108af9190611ca3565b905060006108df8585815181106108c8576108c8611e53565b60200260200101518361183790919063ffffffff16565b600f549091501561094057600f54610926906109079061051d84670de0b6b3a764000061184a565b6001600160a01b0385166000908152600d602052604090205490611862565b6001600160a01b0384166000908152600d60205260409020555b6001600160a01b038089166000818152600c6020908152604080832094881680845294825280832054938352600e825280832094835293815283822054600d909152929020546109c49261052391670de0b6b3a76400009161051d916109a591611837565b6001600160a01b038e166000908152601060205260409020549061184a565b8785815181106109d6576109d6611e53565b6020908102919091018101919091526001600160a01b038085166000818152600d8452604080822054938d168252600e855280822092825291909352909120558651879085908110610a2a57610a2a611e53565b6020908102919091018101516001600160a01b03808b166000908152600c845260408082209790921681529590925293209290925550819050610a6c81611e22565b91505061080a565b505050919050565b60026003541415610aa85760405162461bcd60e51b8152600401610a9f90611d4f565b60405180910390fd5b600260035533610ab66117c8565b600955610ac161133c565b6008556001600160a01b03811615610b1257610adc816104b1565b6001600160a01b0382166000908152600b6020908152604080832093909355600954600a90915291902055610b10816105d4565b505b60008211610b565760405162461bcd60e51b8152602060048201526011602482015270043616e6e6f74207769746864726177203607c1b6044820152606401610a9f565b600f54610b639083611837565b600f5533600090815260106020526040902054610b809083611837565b33600090815260106020526040908190209190915551632e1a7d4d60e01b8152600481018390526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690632e1a7d4d90602401600060405180830381600087803b158015610bf557600080fd5b505af1158015610c09573d6000803e3d6000fd5b50610c439250506001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016905033846118e0565b60405182815233907f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d5906020015b60405180910390a250506001600355565b60048181548110610c9257600080fd5b6000918252602090912001546001600160a01b0316905081565b6002546001600160a01b03163314610d195760405162461bcd60e51b815260206004820152602a60248201527f43616c6c6572206973206e6f742052657761726473446973747269627574696f6044820152691b8818dbdb9d1c9858dd60b21b6064820152608401610a9f565b6000610d236117c8565b600955610d2e61133c565b6008556001600160a01b03811615610d7f57610d49816104b1565b6001600160a01b0382166000908152600b6020908152604080832093909355600954600a90915291902055610d7d816105d4565b505b6005544210610d9e57600754610d96908390611856565b600655610de1565b600554600090610dae9042611837565b90506000610dc76006548361184a90919063ffffffff16565b600754909150610ddb9061051d8684611862565b60065550505b6040516370a0823160e01b81523060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a082319060240160206040518083038186803b158015610e4357600080fd5b505afa158015610e57573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e7b9190611ca3565b9050610e926007548261185690919063ffffffff16565b6006541115610ee35760405162461bcd60e51b815260206004820152601860248201527f50726f76696465642072657761726420746f6f206869676800000000000000006044820152606401610a9f565b426008819055600754610ef69190611862565b6005556040518381527fde88a922e0d3b88b24e9623efeb464919c6bf9f66857a65e2bfcf2ce87a9433d9060200160405180910390a1505050565b60026003541415610f545760405162461bcd60e51b8152600401610a9f90611d4f565b600260035533610f626117c8565b600955610f6d61133c565b6008556001600160a01b03811615610fbe57610f88816104b1565b6001600160a01b0382166000908152600b6020908152604080832093909355600954600a90915291902055610fbc816105d4565b505b336000908152600b60209081526040808320546004805483518186028101860190945280845291949390919083018282801561102357602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311611005575b5050505050905060008211156110ae57336000818152600b6020526040812055611078907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690846118e0565b60405182815233907fe2403640ba68fed3a2f88b7557551d1993f84b99bb10ff833f0cf8db0c5e04869060200160405180910390a25b60005b81518110156111825760008282815181106110ce576110ce611e53565b602090810291909101810151336000908152600c835260408082206001600160a01b03841683529093529190912054909150801561116d57336000818152600c602090815260408083206001600160a01b038716808552925282209190915561113791836118e0565b60405181815233907fce68cdb84849c4239fa00c1e372fda2ae0f55014178702abf36b26508d8639599060200160405180910390a25b5050808061117a90611e22565b9150506110b1565b505060016003555050565b61119561186e565b600061119f6117c8565b6009556111aa61133c565b6008556001600160a01b038116156111fb576111c5816104b1565b6001600160a01b0382166000908152600b6020908152604080832093909355600954600a909152919020556111f9816105d4565b505b600854821161124c5760405162461bcd60e51b815260206004820152601960248201527f496e76616c6964206e657720706572696f642066696e697368000000000000006044820152606401610a9f565b50600555565b6001546001600160a01b031633146112ca5760405162461bcd60e51b815260206004820152603560248201527f596f75206d757374206265206e6f6d696e61746564206265666f726520796f7560448201527402063616e20616363657074206f776e65727368697605c1b6064820152608401610a9f565b600054600154604080516001600160a01b0393841681529290911660208301527fb532073b38c83145e3e5135377a08bf9aab55bc0fd7c1179cd4fb995d2a5159c910160405180910390a160018054600080546001600160a01b03199081166001600160a01b03841617909155169055565b60006105cf42600554611948565b61135261186e565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316826001600160a01b031614156113de5760405162461bcd60e51b815260206004820152602160248201527f43616e6e6f7420776974686472617720746865207374616b696e6720746f6b656044820152603760f91b6064820152608401610a9f565b6000546113f8906001600160a01b038481169116836118e0565b604080516001600160a01b0384168152602081018390527f8c1256b8896378cd5044f80c202f9772b9d77dc85c8a6eb51967210b09bfaa28910160405180910390a15050565b600260035414156114615760405162461bcd60e51b8152600401610a9f90611d4f565b60026003553361146f6117c8565b60095561147a61133c565b6008556001600160a01b038116156114cb57611495816104b1565b6001600160a01b0382166000908152600b6020908152604080832093909355600954600a909152919020556114c9816105d4565b505b6000821161150c5760405162461bcd60e51b815260206004820152600e60248201526d043616e6e6f74207374616b6520360941b6044820152606401610a9f565b600f546115199083611862565b600f55336000908152601060205260409020546115369083611862565b3360008181526010602052604090209190915561157f907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690308561195e565b60405163095ea7b360e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081166004830152602482018490527f0000000000000000000000000000000000000000000000000000000000000000169063095ea7b390604401602060405180830381600087803b15801561160957600080fd5b505af115801561161d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116419190611c68565b5060405163534a7e1d60e11b8152600481018390527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063a694fc3a90602401600060405180830381600087803b1580156116a457600080fd5b505af11580156116b8573d6000803e3d6000fd5b50506040518481523392507f9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d9150602001610c71565b6116f661186e565b60055442116117935760405162461bcd60e51b815260206004820152605860248201527f50726576696f7573207265776172647320706572696f64206d7573742062652060448201527f636f6d706c657465206265666f7265206368616e67696e67207468652064757260648201527f6174696f6e20666f7220746865206e657720706572696f640000000000000000608482015260a401610a9f565b60078190556040518181527ffb46ca5a5e06d4540d6387b930a7c978bce0db5f449ec6b3f5d07c6e1d44f2d390602001610581565b6000600f54600014156117dc575060095490565b6105cf61180b600f5461051d670de0b6b3a76400006118056006546118056008546104f861133c565b9061184a565b60095490611862565b3360009081526010602052604090205461182d90610a7c565b611835610f31565b565b60006118438284611ddf565b9392505050565b60006118438284611dc0565b60006118438284611d9e565b60006118438284611d86565b6000546001600160a01b031633146118355760405162461bcd60e51b815260206004820152602f60248201527f4f6e6c792074686520636f6e7472616374206f776e6572206d6179207065726660448201526e37b936903a3434b99030b1ba34b7b760891b6064820152608401610a9f565b6040516001600160a01b03831660248201526044810182905261194390849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b03199093169290921790915261199c565b505050565b60008183106119575781611843565b5090919050565b6040516001600160a01b03808516602483015283166044820152606481018290526119969085906323b872dd60e01b9060840161190c565b50505050565b60006119f1826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316611a6e9092919063ffffffff16565b8051909150156119435780806020019051810190611a0f9190611c68565b6119435760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610a9f565b6060611a7d8484600085611a85565b949350505050565b606082471015611ae65760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610a9f565b843b611b345760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610a9f565b600080866001600160a01b03168587604051611b509190611cbc565b60006040518083038185875af1925050503d8060008114611b8d576040519150601f19603f3d011682016040523d82523d6000602084013e611b92565b606091505b5091509150611ba2828286611bad565b979650505050505050565b60608315611bbc575081611843565b825115611bcc5782518084602001fd5b8160405162461bcd60e51b8152600401610a9f9190611d1c565b600060208284031215611bf857600080fd5b813561184381611e7f565b60008060408385031215611c1657600080fd5b8235611c2181611e7f565b91506020830135611c3181611e7f565b809150509250929050565b60008060408385031215611c4f57600080fd5b8235611c5a81611e7f565b946020939093013593505050565b600060208284031215611c7a57600080fd5b8151801515811461184357600080fd5b600060208284031215611c9c57600080fd5b5035919050565b600060208284031215611cb557600080fd5b5051919050565b60008251611cce818460208701611df6565b9190910192915050565b6020808252825182820181905260009190848201906040850190845b81811015611d1057835183529284019291840191600101611cf4565b50909695505050505050565b6020815260008251806020840152611d3b816040850160208701611df6565b601f01601f19169190910160400192915050565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b60008219821115611d9957611d99611e3d565b500190565b600082611dbb57634e487b7160e01b600052601260045260246000fd5b500490565b6000816000190483118215151615611dda57611dda611e3d565b500290565b600082821015611df157611df1611e3d565b500390565b60005b83811015611e11578181015183820152602001611df9565b838111156119965750506000910152565b6000600019821415611e3657611e36611e3d565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b0381168114611e9457600080fd5b5056fea264697066735822122063c3bc9c43050e88245fa53ba57eacc757cd86fa4b8c95c314e83b823275770064736f6c63430008070033",
  "bytecodeSha1": "c09523b14735f82b0aaf3dcb9f73227c46907bde",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.7+commit.e28d00a7"
  },
  "contractName": "MockMoolaStakingRewards",
  "coverageMap": {
    "branches": {
      "0": {
        "MockMoolaStakingRewards.stake": {
          "93": [
            2260,
            2279,
            true
          ]
        }
      },
      "1": {},
      "10": {},
      "2": {
        "SafeERC20._callOptionalReturn": {
          "94": [
            3550,
            3571,
            false
          ],
          "95": [
            3679,
            3709,
            true
          ]
        }
      },
      "3": {
        "Address._verifyCallResult": {
          "88": [
            7226,
            7233,
            false
          ],
          "89": [
            7367,
            7388,
            false
          ]
        },
        "Address.functionCallWithValue": {
          "87": [
            4759,
            4789,
            true
          ]
        }
      },
      "4": {
        "Math.min": {
          "90": [
            475,
            480,
            true
          ]
        }
      },
      "5": {},
      "6": {
        "MockMoolaStakingRewards.earnedExternal": {
          "75": [
            4119,
            4135,
            false
          ]
        },
        "MockMoolaStakingRewards.getReward": {
          "79": [
            6166,
            6176,
            false
          ],
          "80": [
            6549,
            6567,
            false
          ]
        },
        "MockMoolaStakingRewards.notifyRewardAmount": {
          "77": [
            7099,
            7130,
            false
          ],
          "78": [
            7831,
            7873,
            true
          ]
        },
        "MockMoolaStakingRewards.recoverERC20": {
          "82": [
            8506,
            8543,
            true
          ]
        },
        "MockMoolaStakingRewards.rewardPerToken": {
          "86": [
            2815,
            2832,
            false
          ]
        },
        "MockMoolaStakingRewards.setRewardsDuration": {
          "85": [
            8812,
            8842,
            true
          ]
        },
        "MockMoolaStakingRewards.stake": {
          "83": [
            9265,
            9286,
            false
          ],
          "84": [
            5161,
            5171,
            true
          ]
        },
        "MockMoolaStakingRewards.updatePeriodFinish": {
          "81": [
            8195,
            8221,
            true
          ]
        },
        "MockMoolaStakingRewards.withdraw": {
          "76": [
            5657,
            5667,
            true
          ]
        }
      },
      "7": {
        "Owned._onlyOwner": {
          "92": [
            1327,
            1346,
            true
          ]
        },
        "Owned.acceptOwnership": {
          "91": [
            991,
            1019,
            true
          ]
        }
      },
      "9": {}
    },
    "statements": {
      "0": {},
      "1": {},
      "10": {},
      "2": {
        "SafeERC20._callOptionalReturn": {
          "68": [
            3671,
            3756
          ]
        },
        "SafeERC20.safeTransfer": {
          "65": [
            716,
            802
          ]
        },
        "SafeERC20.safeTransferFrom": {
          "67": [
            915,
            1011
          ]
        }
      },
      "3": {
        "Address._verifyCallResult": {
          "73": [
            7249,
            7266
          ],
          "74": [
            7757,
            7777
          ]
        },
        "Address.functionCall": {
          "69": [
            3700,
            3759
          ]
        },
        "Address.functionCallWithValue": {
          "70": [
            4751,
            4832
          ],
          "71": [
            4842,
            4902
          ],
          "72": [
            5057,
            5116
          ]
        }
      },
      "4": {
        "Math.min": {
          "66": [
            468,
            488
          ]
        }
      },
      "5": {
        "SafeMath.add": {
          "63": [
            2749,
            2761
          ]
        },
        "SafeMath.div": {
          "62": [
            3844,
            3856
          ]
        },
        "SafeMath.mul": {
          "61": [
            3459,
            3471
          ]
        },
        "SafeMath.sub": {
          "60": [
            3116,
            3128
          ]
        }
      },
      "6": {
        "MockMoolaStakingRewards.balanceOf": {
          "1": [
            2554,
            2579
          ]
        },
        "MockMoolaStakingRewards.earned": {
          "2": [
            3155,
            3271
          ]
        },
        "MockMoolaStakingRewards.earnedExternal": {
          "7": [
            3538,
            3583
          ],
          "8": [
            3660,
            3731
          ],
          "9": [
            3641,
            3644
          ],
          "10": [
            3752,
            3786
          ],
          "11": [
            4155,
            4328
          ],
          "12": [
            4357,
            4607
          ],
          "13": [
            4622,
            4728
          ],
          "14": [
            4742,
            4793
          ],
          "15": [
            3844,
            3847
          ],
          "16": [
            4814,
            4827
          ]
        },
        "MockMoolaStakingRewards.exit": {
          "58": [
            6855,
            6886
          ],
          "59": [
            6896,
            6907
          ]
        },
        "MockMoolaStakingRewards.getReward": {
          "29": [
            6192,
            6215
          ],
          "30": [
            6229,
            6274
          ],
          "31": [
            6288,
            6323
          ],
          "32": [
            6587,
            6633
          ],
          "33": [
            6651,
            6705
          ],
          "34": [
            6723,
            6774
          ],
          "35": [
            6391,
            6394
          ]
        },
        "MockMoolaStakingRewards.getRewardForDuration": {
          "6": [
            4923,
            4961
          ]
        },
        "MockMoolaStakingRewards.lastTimeRewardApplicable": {
          "42": [
            2677,
            2723
          ]
        },
        "MockMoolaStakingRewards.notifyRewardAmount": {
          "23": [
            7146,
            7186
          ],
          "24": [
            7342,
            7396
          ],
          "25": [
            7823,
            7902
          ],
          "26": [
            7913,
            7945
          ],
          "27": [
            7955,
            8006
          ],
          "28": [
            8016,
            8040
          ]
        },
        "MockMoolaStakingRewards.recoverERC20": {
          "43": [
            8498,
            8581
          ],
          "44": [
            8591,
            8644
          ],
          "45": [
            8654,
            8695
          ]
        },
        "MockMoolaStakingRewards.rewardPerToken": {
          "56": [
            2848,
            2875
          ],
          "57": [
            2895,
            3060
          ]
        },
        "MockMoolaStakingRewards.setRewardsDuration": {
          "53": [
            8791,
            8956
          ],
          "54": [
            8966,
            9000
          ],
          "55": [
            9010,
            9054
          ]
        },
        "MockMoolaStakingRewards.stake": {
          "46": [
            5153,
            5190
          ],
          "47": [
            5200,
            5239
          ],
          "48": [
            5249,
            5306
          ],
          "49": [
            5316,
            5380
          ],
          "50": [
            5390,
            5451
          ],
          "51": [
            5461,
            5497
          ],
          "52": [
            5507,
            5538
          ]
        },
        "MockMoolaStakingRewards.totalSupply": {
          "0": [
            2435,
            2454
          ]
        },
        "MockMoolaStakingRewards.updatePeriodFinish": {
          "36": [
            8187,
            8251
          ],
          "37": [
            8261,
            8285
          ]
        },
        "MockMoolaStakingRewards.withdraw": {
          "17": [
            5649,
            5689
          ],
          "18": [
            5699,
            5738
          ],
          "19": [
            5748,
            5805
          ],
          "20": [
            5815,
            5854
          ],
          "21": [
            5864,
            5909
          ],
          "22": [
            5919,
            5953
          ]
        }
      },
      "7": {
        "Owned._onlyOwner": {
          "64": [
            1319,
            1398
          ]
        },
        "Owned.acceptOwnership": {
          "38": [
            983,
            1077
          ],
          "39": [
            1087,
            1127
          ],
          "40": [
            1137,
            1159
          ],
          "41": [
            1169,
            1196
          ]
        },
        "Owned.nominateNewOwner": {
          "3": [
            864,
            887
          ],
          "4": [
            897,
            924
          ]
        },
        "RewardsDistributionRecipient.setRewardsDistribution": {
          "5": [
            2018,
            2060
          ]
        }
      },
      "9": {}
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts@4.0.0/Address",
    "OpenZeppelin/openzeppelin-contracts@4.0.0/IERC20",
    "IMoolaStakingRewards",
    "IStakingRewards",
    "OpenZeppelin/openzeppelin-contracts@4.0.0/Math",
    "Owned",
    "OpenZeppelin/openzeppelin-contracts@4.0.0/ReentrancyGuard",
    "RewardsDistributionRecipient",
    "OpenZeppelin/openzeppelin-contracts@4.0.0/SafeERC20",
    "OpenZeppelin/openzeppelin-contracts@4.0.0/SafeMath"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106101fa5760003560e01c806370a082311161011a5780639b8a14ee116100ad578063cd3daf9d1161007c578063cd3daf9d14610468578063d1af0c7d14610470578063df136d6514610497578063e9fad8ee146104a0578063ebe2b12b146104a857600080fd5b80639b8a14ee14610412578063a694fc3a14610439578063c8f33c911461044c578063cc1a378f1461045557600080fd5b806380faa57d116100e957806380faa57d146103c45780638980f11f146103cc5780638b876347146103df5780638da5cb5b146103ff57600080fd5b806370a082311461036357806372f702f31461038c57806379ba5097146103b35780637b0a47ee146103bb57600080fd5b806333bddbc6116101925780633fc6df6e116101615780633fc6df6e146102ff57806353a47bb714610312578063556f6e6b146103255780636be7bb1f1461033857600080fd5b806333bddbc6146102b0578063386a9525146102db5780633c6b16ab146102e45780633d18b912146102f757600080fd5b806319762143116101ce57806319762143146102625780631c1f78eb146102755780631e02cee31461027d5780632e1a7d4d1461029d57600080fd5b80628cc262146101ff5780630700037d146102255780631627540c1461024557806318160ddd1461025a575b600080fd5b61021261020d366004611be6565b6104b1565b6040519081526020015b60405180910390f35b610212610233366004611be6565b600b6020526000908152604090205481565b610258610253366004611be6565b61052f565b005b600f54610212565b610258610270366004611be6565b61058c565b6102126105b6565b61029061028b366004611be6565b6105d4565b60405161021c9190611cd8565b6102586102ab366004611c8a565b610a7c565b6102c36102be366004611c8a565b610c82565b6040516001600160a01b03909116815260200161021c565b61021260075481565b6102586102f2366004611c8a565b610cac565b610258610f31565b6002546102c3906001600160a01b031681565b6001546102c3906001600160a01b031681565b610258610333366004611c8a565b61118d565b610212610346366004611c03565b600c60209081526000928352604080842090915290825290205481565b610212610371366004611be6565b6001600160a01b031660009081526010602052604090205490565b6102c37f000000000000000000000000000000000000000000000000000000000000000081565b610258611252565b61021260065481565b61021261133c565b6102586103da366004611c3c565b61134a565b6102126103ed366004611be6565b600a6020526000908152604090205481565b6000546102c3906001600160a01b031681565b6102c37f000000000000000000000000000000000000000000000000000000000000000081565b610258610447366004611c8a565b61143e565b61021260085481565b610258610463366004611c8a565b6116ee565b6102126117c8565b6102c37f000000000000000000000000000000000000000000000000000000000000000081565b61021260095481565b610258611814565b61021260055481565b6001600160a01b0381166000908152600b6020908152604080832054600a909252822054610529919061052390670de0b6b3a76400009061051d906104fe906104f86117c8565b90611837565b6001600160a01b0388166000908152601060205260409020549061184a565b90611856565b90611862565b92915050565b61053761186e565b600180546001600160a01b0319166001600160a01b0383169081179091556040519081527f906a1c6bd7e3091ea86693dd029a831c19049ce77f1dce2ce0bab1cacbabce22906020015b60405180910390a150565b61059461186e565b600280546001600160a01b0319166001600160a01b0392909216919091179055565b60006105cf60075460065461184a90919063ffffffff16565b905090565b60606000600480548060200260200160405190810160405280929190818152602001828054801561062e57602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610610575b505050505090506000815167ffffffffffffffff81111561065157610651611e69565b60405190808252806020026020018201604052801561067a578160200160208202803683370190505b509050815167ffffffffffffffff81111561069757610697611e69565b6040519080825280602002602001820160405280156106c0578160200160208202803683370190505b50925060005b8251811015610793578281815181106106e1576106e1611e53565b60209081029190910101516040516370a0823160e01b81523060048201526001600160a01b03909116906370a082319060240160206040518083038186803b15801561072c57600080fd5b505afa158015610740573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107649190611ca3565b82828151811061077657610776611e53565b60209081029190910101528061078b81611e22565b9150506106c6565b507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316633d18b9126040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156107ef57600080fd5b505af1158015610803573d6000803e3d6000fd5b5050505060005b8251811015610a7457600083828151811061082757610827611e53565b60209081029190910101516040516370a0823160e01b81523060048201529091506000906001600160a01b038316906370a082319060240160206040518083038186803b15801561087757600080fd5b505afa15801561088b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108af9190611ca3565b905060006108df8585815181106108c8576108c8611e53565b60200260200101518361183790919063ffffffff16565b600f549091501561094057600f54610926906109079061051d84670de0b6b3a764000061184a565b6001600160a01b0385166000908152600d602052604090205490611862565b6001600160a01b0384166000908152600d60205260409020555b6001600160a01b038089166000818152600c6020908152604080832094881680845294825280832054938352600e825280832094835293815283822054600d909152929020546109c49261052391670de0b6b3a76400009161051d916109a591611837565b6001600160a01b038e166000908152601060205260409020549061184a565b8785815181106109d6576109d6611e53565b6020908102919091018101919091526001600160a01b038085166000818152600d8452604080822054938d168252600e855280822092825291909352909120558651879085908110610a2a57610a2a611e53565b6020908102919091018101516001600160a01b03808b166000908152600c845260408082209790921681529590925293209290925550819050610a6c81611e22565b91505061080a565b505050919050565b60026003541415610aa85760405162461bcd60e51b8152600401610a9f90611d4f565b60405180910390fd5b600260035533610ab66117c8565b600955610ac161133c565b6008556001600160a01b03811615610b1257610adc816104b1565b6001600160a01b0382166000908152600b6020908152604080832093909355600954600a90915291902055610b10816105d4565b505b60008211610b565760405162461bcd60e51b8152602060048201526011602482015270043616e6e6f74207769746864726177203607c1b6044820152606401610a9f565b600f54610b639083611837565b600f5533600090815260106020526040902054610b809083611837565b33600090815260106020526040908190209190915551632e1a7d4d60e01b8152600481018390526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690632e1a7d4d90602401600060405180830381600087803b158015610bf557600080fd5b505af1158015610c09573d6000803e3d6000fd5b50610c439250506001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016905033846118e0565b60405182815233907f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d5906020015b60405180910390a250506001600355565b60048181548110610c9257600080fd5b6000918252602090912001546001600160a01b0316905081565b6002546001600160a01b03163314610d195760405162461bcd60e51b815260206004820152602a60248201527f43616c6c6572206973206e6f742052657761726473446973747269627574696f6044820152691b8818dbdb9d1c9858dd60b21b6064820152608401610a9f565b6000610d236117c8565b600955610d2e61133c565b6008556001600160a01b03811615610d7f57610d49816104b1565b6001600160a01b0382166000908152600b6020908152604080832093909355600954600a90915291902055610d7d816105d4565b505b6005544210610d9e57600754610d96908390611856565b600655610de1565b600554600090610dae9042611837565b90506000610dc76006548361184a90919063ffffffff16565b600754909150610ddb9061051d8684611862565b60065550505b6040516370a0823160e01b81523060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a082319060240160206040518083038186803b158015610e4357600080fd5b505afa158015610e57573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e7b9190611ca3565b9050610e926007548261185690919063ffffffff16565b6006541115610ee35760405162461bcd60e51b815260206004820152601860248201527f50726f76696465642072657761726420746f6f206869676800000000000000006044820152606401610a9f565b426008819055600754610ef69190611862565b6005556040518381527fde88a922e0d3b88b24e9623efeb464919c6bf9f66857a65e2bfcf2ce87a9433d9060200160405180910390a1505050565b60026003541415610f545760405162461bcd60e51b8152600401610a9f90611d4f565b600260035533610f626117c8565b600955610f6d61133c565b6008556001600160a01b03811615610fbe57610f88816104b1565b6001600160a01b0382166000908152600b6020908152604080832093909355600954600a90915291902055610fbc816105d4565b505b336000908152600b60209081526040808320546004805483518186028101860190945280845291949390919083018282801561102357602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311611005575b5050505050905060008211156110ae57336000818152600b6020526040812055611078907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690846118e0565b60405182815233907fe2403640ba68fed3a2f88b7557551d1993f84b99bb10ff833f0cf8db0c5e04869060200160405180910390a25b60005b81518110156111825760008282815181106110ce576110ce611e53565b602090810291909101810151336000908152600c835260408082206001600160a01b03841683529093529190912054909150801561116d57336000818152600c602090815260408083206001600160a01b038716808552925282209190915561113791836118e0565b60405181815233907fce68cdb84849c4239fa00c1e372fda2ae0f55014178702abf36b26508d8639599060200160405180910390a25b5050808061117a90611e22565b9150506110b1565b505060016003555050565b61119561186e565b600061119f6117c8565b6009556111aa61133c565b6008556001600160a01b038116156111fb576111c5816104b1565b6001600160a01b0382166000908152600b6020908152604080832093909355600954600a909152919020556111f9816105d4565b505b600854821161124c5760405162461bcd60e51b815260206004820152601960248201527f496e76616c6964206e657720706572696f642066696e697368000000000000006044820152606401610a9f565b50600555565b6001546001600160a01b031633146112ca5760405162461bcd60e51b815260206004820152603560248201527f596f75206d757374206265206e6f6d696e61746564206265666f726520796f7560448201527402063616e20616363657074206f776e65727368697605c1b6064820152608401610a9f565b600054600154604080516001600160a01b0393841681529290911660208301527fb532073b38c83145e3e5135377a08bf9aab55bc0fd7c1179cd4fb995d2a5159c910160405180910390a160018054600080546001600160a01b03199081166001600160a01b03841617909155169055565b60006105cf42600554611948565b61135261186e565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316826001600160a01b031614156113de5760405162461bcd60e51b815260206004820152602160248201527f43616e6e6f7420776974686472617720746865207374616b696e6720746f6b656044820152603760f91b6064820152608401610a9f565b6000546113f8906001600160a01b038481169116836118e0565b604080516001600160a01b0384168152602081018390527f8c1256b8896378cd5044f80c202f9772b9d77dc85c8a6eb51967210b09bfaa28910160405180910390a15050565b600260035414156114615760405162461bcd60e51b8152600401610a9f90611d4f565b60026003553361146f6117c8565b60095561147a61133c565b6008556001600160a01b038116156114cb57611495816104b1565b6001600160a01b0382166000908152600b6020908152604080832093909355600954600a909152919020556114c9816105d4565b505b6000821161150c5760405162461bcd60e51b815260206004820152600e60248201526d043616e6e6f74207374616b6520360941b6044820152606401610a9f565b600f546115199083611862565b600f55336000908152601060205260409020546115369083611862565b3360008181526010602052604090209190915561157f907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690308561195e565b60405163095ea7b360e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081166004830152602482018490527f0000000000000000000000000000000000000000000000000000000000000000169063095ea7b390604401602060405180830381600087803b15801561160957600080fd5b505af115801561161d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116419190611c68565b5060405163534a7e1d60e11b8152600481018390527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063a694fc3a90602401600060405180830381600087803b1580156116a457600080fd5b505af11580156116b8573d6000803e3d6000fd5b50506040518481523392507f9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d9150602001610c71565b6116f661186e565b60055442116117935760405162461bcd60e51b815260206004820152605860248201527f50726576696f7573207265776172647320706572696f64206d7573742062652060448201527f636f6d706c657465206265666f7265206368616e67696e67207468652064757260648201527f6174696f6e20666f7220746865206e657720706572696f640000000000000000608482015260a401610a9f565b60078190556040518181527ffb46ca5a5e06d4540d6387b930a7c978bce0db5f449ec6b3f5d07c6e1d44f2d390602001610581565b6000600f54600014156117dc575060095490565b6105cf61180b600f5461051d670de0b6b3a76400006118056006546118056008546104f861133c565b9061184a565b60095490611862565b3360009081526010602052604090205461182d90610a7c565b611835610f31565b565b60006118438284611ddf565b9392505050565b60006118438284611dc0565b60006118438284611d9e565b60006118438284611d86565b6000546001600160a01b031633146118355760405162461bcd60e51b815260206004820152602f60248201527f4f6e6c792074686520636f6e7472616374206f776e6572206d6179207065726660448201526e37b936903a3434b99030b1ba34b7b760891b6064820152608401610a9f565b6040516001600160a01b03831660248201526044810182905261194390849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b03199093169290921790915261199c565b505050565b60008183106119575781611843565b5090919050565b6040516001600160a01b03808516602483015283166044820152606481018290526119969085906323b872dd60e01b9060840161190c565b50505050565b60006119f1826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316611a6e9092919063ffffffff16565b8051909150156119435780806020019051810190611a0f9190611c68565b6119435760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610a9f565b6060611a7d8484600085611a85565b949350505050565b606082471015611ae65760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610a9f565b843b611b345760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610a9f565b600080866001600160a01b03168587604051611b509190611cbc565b60006040518083038185875af1925050503d8060008114611b8d576040519150601f19603f3d011682016040523d82523d6000602084013e611b92565b606091505b5091509150611ba2828286611bad565b979650505050505050565b60608315611bbc575081611843565b825115611bcc5782518084602001fd5b8160405162461bcd60e51b8152600401610a9f9190611d1c565b600060208284031215611bf857600080fd5b813561184381611e7f565b60008060408385031215611c1657600080fd5b8235611c2181611e7f565b91506020830135611c3181611e7f565b809150509250929050565b60008060408385031215611c4f57600080fd5b8235611c5a81611e7f565b946020939093013593505050565b600060208284031215611c7a57600080fd5b8151801515811461184357600080fd5b600060208284031215611c9c57600080fd5b5035919050565b600060208284031215611cb557600080fd5b5051919050565b60008251611cce818460208701611df6565b9190910192915050565b6020808252825182820181905260009190848201906040850190845b81811015611d1057835183529284019291840191600101611cf4565b50909695505050505050565b6020815260008251806020840152611d3b816040850160208701611df6565b601f01601f19169190910160400192915050565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b60008219821115611d9957611d99611e3d565b500190565b600082611dbb57634e487b7160e01b600052601260045260246000fd5b500490565b6000816000190483118215151615611dda57611dda611e3d565b500290565b600082821015611df157611df1611e3d565b500390565b60005b83811015611e11578181015183820152602001611df9565b838111156119965750506000910152565b6000600019821415611e3657611e36611e3d565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b0381168114611e9457600080fd5b5056fea264697066735822122063c3bc9c43050e88245fa53ba57eacc757cd86fa4b8c95c314e83b823275770064736f6c63430008070033",
  "deployedSourceMap": "642:9259:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3073:205;;;;;;:::i;:::-;;:::i;:::-;;;9811:25:11;;;9799:2;9784:18;3073:205:6;;;;;;;;1250:42;;;;;;:::i;:::-;;;;;;;;;;;;;;793:138:7;;;;;;:::i;:::-;;:::i;:::-;;2361:100:6;2442:12;;2361:100;;1927:140:7;;;;;;:::i;:::-;;:::i;4840:128:6:-;;;:::i;3284:1550::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;5551:409::-;;;;;;:::i;:::-;;:::i;950:37::-;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;2093:32:11;;;2075:51;;2063:2;2048:18;950:37:6;1929:203:11;1065:39:6;;;;;;6974:1073;;;;;;:::i;:::-;;:::i;5966:839::-;;;:::i;1662:34:7:-;;;;;-1:-1:-1;;;;;1662:34:7;;;577:29;;;;;-1:-1:-1;;;;;577:29:7;;;8089:203:6;;;;;;:::i;:::-;;:::i;1298:69::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;2467:119;;;;;;:::i;:::-;-1:-1:-1;;;;;2561:18:6;2535:7;2561:18;;;:9;:18;;;;;;;2467:119;908:36;;;;;937:266:7;;;:::i;1030:29:6:-;;;;;;2592:138;;;:::i;8404:298::-;;;;;;:::i;:::-;;:::i;1187:57::-;;;;;;:::i;:::-;;;;;;;;;;;;;;551:20:7;;;;;-1:-1:-1;;;;;551:20:7;;;1627:55:6;;;;;5056:489;;;;;;:::i;:::-;;:::i;1110:29::-;;;;;;8708:353;;;;;;:::i;:::-;;:::i;2736:331::-;;;:::i;866:36::-;;;;;1145:35;;;;;;6811:103;;;:::i;993:31::-;;;;;;3073:205;-1:-1:-1;;;;;3254:16:6;;3136:7;3254:16;;;:7;:16;;;;;;;;;3206:22;:31;;;;;;3162:109;;3254:16;3162:87;;3244:4;;3162:77;;3185:53;;:16;:14;:16::i;:::-;:20;;:53::i;:::-;-1:-1:-1;;;;;3162:18:6;;;;;;:9;:18;;;;;;;:22;:77::i;:::-;:81;;:87::i;:::-;:91;;:109::i;:::-;3155:116;3073:205;-1:-1:-1;;3073:205:6:o;793:138:7:-;1238:12;:10;:12::i;:::-;864:14:::1;:23:::0;;-1:-1:-1;;;;;;864:23:7::1;-1:-1:-1::0;;;;;864:23:7;::::1;::::0;;::::1;::::0;;;902:22:::1;::::0;2075:51:11;;;902:22:7::1;::::0;2063:2:11;2048:18;902:22:7::1;;;;;;;;793:138:::0;:::o;1927:140::-;1238:12;:10;:12::i;:::-;2018:19:::1;:42:::0;;-1:-1:-1;;;;;;2018:42:7::1;-1:-1:-1::0;;;;;2018:42:7;;;::::1;::::0;;;::::1;::::0;;1927:140::o;4840:128:6:-;4904:7;4930:31;4945:15;;4930:10;;:14;;:31;;;;:::i;:::-;4923:38;;4840:128;:::o;3284:1550::-;3350:23;3385:30;3418:21;3385:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3385:54:6;;;;;;;;;;;;;;;;;;;;;;;3449:40;3506:14;:21;3492:36;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3492:36:6;;3449:79;;3561:14;:21;3547:36;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3547:36:6;;3538:45;;3599:9;3594:148;3618:14;:21;3614:1;:25;3594:148;;;3689:14;3704:1;3689:17;;;;;;;;:::i;:::-;;;;;;;;;;;:42;;-1:-1:-1;;;3689:42:6;;3725:4;3689:42;;;2075:51:11;-1:-1:-1;;;;;3689:27:6;;;;;;2048:18:11;;3689:42:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3660:23;3684:1;3660:26;;;;;;;;:::i;:::-;;;;;;;;;;:71;3641:3;;;;:::i;:::-;;;;3594:148;;;;3752:22;-1:-1:-1;;;;;3752:32:6;;:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3802:9;3797:1007;3821:14;:21;3817:1;:25;3797:1007;;;3863:20;3886:14;3901:1;3886:17;;;;;;;;:::i;:::-;;;;;;;;;;;3948:38;;-1:-1:-1;;;3948:38:6;;3980:4;3948:38;;;2075:51:11;3886:17:6;;-1:-1:-1;3917:28:6;;-1:-1:-1;;;;;3948:23:6;;;;;2048:18:11;;3948:38:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3917:69;;4001:32;4036:52;4061:23;4085:1;4061:26;;;;;;;;:::i;:::-;;;;;;;4036:20;:24;;:52;;;;:::i;:::-;4119:12;;4001:87;;-1:-1:-1;4119:16:6;4115:228;;4314:12;;4224:104;;4275:52;;:34;:24;4304:4;4275:28;:34::i;:52::-;-1:-1:-1;;;;;4224:46:6;;;;;;:31;:46;;;;;;;:50;:104::i;:::-;-1:-1:-1;;;;;4155:46:6;;;;;;:31;:46;;;;;:173;4115:228;-1:-1:-1;;;;;4567:24:6;;;;;;;:15;:24;;;;;;;;:39;;;;;;;;;;;;;4476:42;;;:33;:42;;;;;:57;;;;;;;;;;4425:31;:46;;;;;;;4385:222;;:177;;4557:4;;4385:150;;4425:109;;:50;:109::i;:::-;-1:-1:-1;;;;;4385:18:6;;;;;;:9;:18;;;;;;;:39;:150::i;:222::-;4357:6;4364:1;4357:9;;;;;;;;:::i;:::-;;;;;;;;;;;:250;;;;-1:-1:-1;;;;;4682:46:6;;;;;;;:31;:46;;;;;;;4622:42;;;;;:33;:42;;;;;:57;;;;;;;;;;:106;4784:9;;:6;;4791:1;;4784:9;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;4742:24:6;;;;;;;:15;:24;;;;;;:39;;;;;;;;;;;;:51;;;;-1:-1:-1;3844:3:6;;-1:-1:-1;3844:3:6;;;:::i;:::-;;;;3797:1007;;;;4814:13;;3284:1550;;;:::o;5551:409::-;1680:1:0;2260:7;;:19;;2252:63;;;;-1:-1:-1;;;2252:63:0;;;;;;;:::i;:::-;;;;;;;;;1680:1;2390:7;:18;5627:10:6::1;9182:16;:14;:16::i;:::-;9159:20;:39:::0;9225:26:::1;:24;:26::i;:::-;9208:14;:43:::0;-1:-1:-1;;;;;9265:21:6;::::1;::::0;9261:191:::1;;9321:15;9328:7;9321:6;:15::i;:::-;-1:-1:-1::0;;;;;9302:16:6;::::1;;::::0;;;:7:::1;:16;::::0;;;;;;;:34;;;;9384:20:::1;::::0;9350:22:::1;:31:::0;;;;;;:54;9418:23:::1;9310:7:::0;9418:14:::1;:23::i;:::-;;9261:191;5666:1:::2;5657:6;:10;5649:40;;;::::0;-1:-1:-1;;;5649:40:6;;6872:2:11;5649:40:6::2;::::0;::::2;6854:21:11::0;6911:2;6891:18;;;6884:30;-1:-1:-1;;;6930:18:11;;;6923:47;6987:18;;5649:40:6::2;6670:341:11::0;5649:40:6::2;5714:12;::::0;:24:::2;::::0;5731:6;5714:16:::2;:24::i;:::-;5699:12;:39:::0;5782:10:::2;5772:21;::::0;;;:9:::2;:21;::::0;;;;;:33:::2;::::0;5798:6;5772:25:::2;:33::i;:::-;5758:10;5748:21;::::0;;;:9:::2;:21;::::0;;;;;;:57;;;;5815:39;-1:-1:-1;;;5815:39:6;;::::2;::::0;::::2;9811:25:11::0;;;-1:-1:-1;;;;;5815:22:6::2;:31;::::0;::::2;::::0;9784:18:11;;5815:39:6::2;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;-1:-1:-1::0;5864:45:6::2;::::0;-1:-1:-1;;;;;;;5864:12:6::2;:25;::::0;-1:-1:-1;5890:10:6::2;5902:6:::0;5864:25:::2;:45::i;:::-;5924:29;::::0;9811:25:11;;;5934:10:6::2;::::0;5924:29:::2;::::0;9799:2:11;9784:18;5924:29:6::2;;;;;;;;-1:-1:-1::0;;1637:1:0;2563:7;:22;5551:409:6:o;950:37::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;950:37:6;;-1:-1:-1;950:37:6;:::o;6974:1073::-;1837:19:7;;-1:-1:-1;;;;;1837:19:7;1823:10;:33;1815:88;;;;-1:-1:-1;;;1815:88:7;;8283:2:11;1815:88:7;;;8265:21:11;8322:2;8302:18;;;8295:30;8361:34;8341:18;;;8334:62;-1:-1:-1;;;8412:18:11;;;8405:40;8462:19;;1815:88:7;8081:406:11;1815:88:7;7081:1:6::1;9182:16;:14;:16::i;:::-;9159:20;:39:::0;9225:26:::1;:24;:26::i;:::-;9208:14;:43:::0;-1:-1:-1;;;;;9265:21:6;::::1;::::0;9261:191:::1;;9321:15;9328:7;9321:6;:15::i;:::-;-1:-1:-1::0;;;;;9302:16:6;::::1;;::::0;;;:7:::1;:16;::::0;;;;;;;:34;;;;9384:20:::1;::::0;9350:22:::1;:31:::0;;;;;;:54;9418:23:::1;9310:7:::0;9418:14:::1;:23::i;:::-;;9261:191;7118:12:::2;;7099:15;:31;7095:312;;7170:15;::::0;7159:27:::2;::::0;:6;;:10:::2;:27::i;:::-;7146:10;:40:::0;7095:312:::2;;;7237:12;::::0;7217:17:::2;::::0;7237:33:::2;::::0;7254:15:::2;7237:16;:33::i;:::-;7217:53;;7284:16;7303:25;7317:10;;7303:9;:13;;:25;;;;:::i;:::-;7380:15;::::0;7284:44;;-1:-1:-1;7355:41:6::2;::::0;:20:::2;:6:::0;7284:44;7355:10:::2;:20::i;:41::-;7342:10;:54:::0;-1:-1:-1;;7095:312:6::2;7776:37;::::0;-1:-1:-1;;;7776:37:6;;7807:4:::2;7776:37;::::0;::::2;2075:51:11::0;7761:12:6::2;::::0;7776::::2;-1:-1:-1::0;;;;;7776:22:6::2;::::0;::::2;::::0;2048:18:11;;7776:37:6::2;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7761:52;;7845:28;7857:15;;7845:7;:11;;:28;;;;:::i;:::-;7831:10;;:42;;7823:79;;;::::0;-1:-1:-1;;;7823:79:6;;7572:2:11;7823:79:6::2;::::0;::::2;7554:21:11::0;7611:2;7591:18;;;7584:30;7650:26;7630:18;;;7623:54;7694:18;;7823:79:6::2;7370:348:11::0;7823:79:6::2;7930:15;7913:14;:32:::0;;;7990:15:::2;::::0;7970:36:::2;::::0;7930:15;7970:19:::2;:36::i;:::-;7955:12;:51:::0;8021:19:::2;::::0;9811:25:11;;;8021:19:6::2;::::0;9799:2:11;9784:18;8021:19:6::2;;;;;;;7085:962;1913:1:7::1;6974:1073:6::0;:::o;5966:839::-;1680:1:0;2260:7;;:19;;2252:63;;;;-1:-1:-1;;;2252:63:0;;;;;;;:::i;:::-;1680:1;2390:7;:18;6029:10:6::1;9182:16;:14;:16::i;:::-;9159:20;:39:::0;9225:26:::1;:24;:26::i;:::-;9208:14;:43:::0;-1:-1:-1;;;;;9265:21:6;::::1;::::0;9261:191:::1;;9321:15;9328:7;9321:6;:15::i;:::-;-1:-1:-1::0;;;;;9302:16:6;::::1;;::::0;;;:7:::1;:16;::::0;;;;;;;:34;;;;9384:20:::1;::::0;9350:22:::1;:31:::0;;;;;;:54;9418:23:::1;9310:7:::0;9418:14:::1;:23::i;:::-;;9261:191;6076:10:::2;6051:14;6068:19:::0;;;:7:::2;:19;::::0;;;;;;;;6130:21:::2;6097:54:::0;;;;;;::::2;::::0;;;;;;;;;;6068:19;;6051:14;6130:21;;6097:54;;::::2;6130:21:::0;6097:54;;::::2;;;;;;;;;;;;;;;;::::0;;-1:-1:-1;;;;;6097:54:6::2;::::0;;;;;::::2;::::0;::::2;;::::0;;::::2;;;;;;;;;;;6175:1;6166:6;:10;6162:172;;;6200:10;6214:1;6192:19:::0;;;:7:::2;:19;::::0;;;;:23;6229:45:::2;::::0;:12:::2;-1:-1:-1::0;;;;;6229:25:6::2;::::0;6267:6;6229:25:::2;:45::i;:::-;6293:30;::::0;9811:25:11;;;6304:10:6::2;::::0;6293:30:::2;::::0;9799:2:11;9784:18;6293:30:6::2;;;;;;;6162:172;6349:9;6344:455;6368:14;:21;6364:1;:25;6344:455;;;6410:20;6433:14;6448:1;6433:17;;;;;;;;:::i;:::-;;::::0;;::::2;::::0;;;;;;;6505:10:::2;6464:22;6489:27:::0;;;:15:::2;:27:::0;;;;;;-1:-1:-1;;;;;6489:42:6;::::2;::::0;;;;;;;;;;6433:17;;-1:-1:-1;6549:18:6;;6545:244:::2;;6603:10;6632:1;6587:27:::0;;;:15:::2;:27;::::0;;;;;;;-1:-1:-1;;;;;6587:42:6;::::2;::::0;;;;;;;:46;;;;6651:54:::2;::::0;6690:14;6651:26:::2;:54::i;:::-;6728:46;::::0;9811:25:11;;;6747:10:6::2;::::0;6728:46:::2;::::0;9799:2:11;9784:18;6728:46:6::2;;;;;;;6545:244;6396:403;;6391:3;;;;;:::i;:::-;;;;6344:455;;;-1:-1:-1::0;;1637:1:0;2563:7;:22;-1:-1:-1;;5966:839:6:o;8089:203::-;1238:12:7;:10;:12::i;:::-;8173:1:6::1;9182:16;:14;:16::i;:::-;9159:20;:39:::0;9225:26:::1;:24;:26::i;:::-;9208:14;:43:::0;-1:-1:-1;;;;;9265:21:6;::::1;::::0;9261:191:::1;;9321:15;9328:7;9321:6;:15::i;:::-;-1:-1:-1::0;;;;;9302:16:6;::::1;;::::0;;;:7:::1;:16;::::0;;;;;;;:34;;;;9384:20:::1;::::0;9350:22:::1;:31:::0;;;;;;:54;9418:23:::1;9310:7:::0;9418:14:::1;:23::i;:::-;;9261:191;8207:14:::2;;8195:9;:26;8187:64;;;::::0;-1:-1:-1;;;8187:64:6;;7218:2:11;8187:64:6::2;::::0;::::2;7200:21:11::0;7257:2;7237:18;;;7230:30;7296:27;7276:18;;;7269:55;7341:18;;8187:64:6::2;7016:349:11::0;8187:64:6::2;-1:-1:-1::0;8261:12:6::2;:24:::0;8089:203::o;937:266:7:-;1005:14;;-1:-1:-1;;;;;1005:14:7;991:10;:28;983:94;;;;-1:-1:-1;;;983:94:7;;5284:2:11;983:94:7;;;5266:21:11;5323:2;5303:18;;;5296:30;5362:34;5342:18;;;5335:62;-1:-1:-1;;;5413:18:11;;;5406:51;5474:19;;983:94:7;5082:417:11;983:94:7;1105:5;;;1112:14;1092:35;;;-1:-1:-1;;;;;1105:5:7;;;2349:34:11;;1112:14:7;;;;2414:2:11;2399:18;;2392:43;1092:35:7;;2284:18:11;1092:35:7;;;;;;;1145:14;;;;1137:22;;-1:-1:-1;;;;;;1137:22:7;;;-1:-1:-1;;;;;1145:14:7;;1137:22;;;;1169:27;;;937:266::o;2592:138:6:-;2658:7;2684:39;2693:15;2710:12;;2684:8;:39::i;8404:298::-;1238:12:7;:10;:12::i;:::-;8530::6::1;-1:-1:-1::0;;;;;8506:37:6::1;:12;-1:-1:-1::0;;;;;8506:37:6::1;;;8498:83;;;::::0;-1:-1:-1;;;8498:83:6;;9465:2:11;8498:83:6::1;::::0;::::1;9447:21:11::0;9504:2;9484:18;;;9477:30;9543:34;9523:18;;;9516:62;-1:-1:-1;;;9594:18:11;;;9587:31;9635:19;;8498:83:6::1;9263:397:11::0;8498:83:6::1;8625:5;::::0;8591:53:::1;::::0;-1:-1:-1;;;;;8591:33:6;;::::1;::::0;8625:5:::1;8632:11:::0;8591:33:::1;:53::i;:::-;8659:36;::::0;;-1:-1:-1;;;;;3018:32:11;;3000:51;;3082:2;3067:18;;3060:34;;;8659:36:6::1;::::0;2973:18:11;8659:36:6::1;;;;;;;8404:298:::0;;:::o;5056:489::-;1680:1:0;2260:7;;:19;;2252:63;;;;-1:-1:-1;;;2252:63:0;;;;;;;:::i;:::-;1680:1;2390:7;:18;5131:10:6::1;9182:16;:14;:16::i;:::-;9159:20;:39:::0;9225:26:::1;:24;:26::i;:::-;9208:14;:43:::0;-1:-1:-1;;;;;9265:21:6;::::1;::::0;9261:191:::1;;9321:15;9328:7;9321:6;:15::i;:::-;-1:-1:-1::0;;;;;9302:16:6;::::1;;::::0;;;:7:::1;:16;::::0;;;;;;;:34;;;;9384:20:::1;::::0;9350:22:::1;:31:::0;;;;;;:54;9418:23:::1;9310:7:::0;9418:14:::1;:23::i;:::-;;9261:191;5170:1:::2;5161:6;:10;5153:37;;;::::0;-1:-1:-1;;;5153:37:6;;5706:2:11;5153:37:6::2;::::0;::::2;5688:21:11::0;5745:2;5725:18;;;5718:30;-1:-1:-1;;;5764:18:11;;;5757:44;5818:18;;5153:37:6::2;5504:338:11::0;5153:37:6::2;5215:12;::::0;:24:::2;::::0;5232:6;5215:16:::2;:24::i;:::-;5200:12;:39:::0;5283:10:::2;5273:21;::::0;;;:9:::2;:21;::::0;;;;;:33:::2;::::0;5299:6;5273:25:::2;:33::i;:::-;5259:10;5249:21;::::0;;;:9:::2;:21;::::0;;;;:57;;;;5316:64:::2;::::0;:12:::2;-1:-1:-1::0;;;;;5316:29:6::2;::::0;5366:4:::2;5373:6:::0;5316:29:::2;:64::i;:::-;5390:61;::::0;-1:-1:-1;;;5390:61:6;;-1:-1:-1;;;;;5419:22:6::2;3018:32:11::0;;5390:61:6::2;::::0;::::2;3000:51:11::0;3067:18;;;3060:34;;;5390:12:6::2;:20;::::0;::::2;::::0;2973:18:11;;5390:61:6::2;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;5461:36:6::2;::::0;-1:-1:-1;;;5461:36:6;;::::2;::::0;::::2;9811:25:11::0;;;5461:22:6::2;-1:-1:-1::0;;;;;5461:28:6::2;::::0;::::2;::::0;9784:18:11;;5461:36:6::2;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;-1:-1:-1::0;;5512:26:6::2;::::0;9811:25:11;;;5519:10:6::2;::::0;-1:-1:-1;5512:26:6::2;::::0;-1:-1:-1;9799:2:11;9784:18;5512:26:6::2;9665:177:11::0;8708:353:6;1238:12:7;:10;:12::i;:::-;8830::6::1;;8812:15;:30;8791:165;;;::::0;-1:-1:-1;;;8791:165:6;;4787:2:11;8791:165:6::1;::::0;::::1;4769:21:11::0;4826:2;4806:18;;;4799:30;4865:34;4845:18;;;4838:62;4936:34;4916:18;;;4909:62;5008:26;4987:19;;;4980:55;5052:19;;8791:165:6::1;4585:492:11::0;8791:165:6::1;8966:15;:34:::0;;;9015:39:::1;::::0;9811:25:11;;;9015:39:6::1;::::0;9799:2:11;9784:18;9015:39:6::1;9665:177:11::0;2736:331:6;2792:7;2815:12;;2831:1;2815:17;2811:75;;;-1:-1:-1;2855:20:6;;;2736:331::o;2811:75::-;2914:146;2956:90;3033:12;;2956:72;3023:4;2956:62;3007:10;;2956:46;2987:14;;2956:26;:24;:26::i;:46::-;:50;;:62::i;:90::-;2914:20;;;:24;:146::i;6811:103::-;6874:10;6864:21;;;;:9;:21;;;;;;6855:31;;:8;:31::i;:::-;6896:11;:9;:11::i;:::-;6811:103::o;3039:96:5:-;3097:7;3123:5;3127:1;3123;:5;:::i;:::-;3116:12;3039:96;-1:-1:-1;;;3039:96:5:o;3382:::-;3440:7;3466:5;3470:1;3466;:5;:::i;3767:96::-;3825:7;3851:5;3855:1;3851;:5;:::i;2672:96::-;2730:7;2756:5;2760:1;2756;:5;:::i;1274:131:7:-;1341:5;;-1:-1:-1;;;;;1341:5:7;1327:10;:19;1319:79;;;;-1:-1:-1;;;1319:79:7;;6456:2:11;1319:79:7;;;6438:21:11;6495:2;6475:18;;;6468:30;6534:34;6514:18;;;6507:62;-1:-1:-1;;;6585:18:11;;;6578:45;6640:19;;1319:79:7;6254:411:11;634:175:2;743:58;;-1:-1:-1;;;;;3018:32:11;;743:58:2;;;3000:51:11;3067:18;;;3060:34;;;716:86:2;;736:5;;-1:-1:-1;;;766:23:2;2973:18:11;;743:58:2;;;;-1:-1:-1;;743:58:2;;;;;;;;;;;;;;-1:-1:-1;;;;;743:58:2;-1:-1:-1;;;;;;743:58:2;;;;;;;;;;716:19;:86::i;:::-;634:175;;;:::o;391:104:4:-;449:7;479:1;475;:5;:13;;487:1;475:13;;;-1:-1:-1;483:1:4;;391:104;-1:-1:-1;391:104:4:o;815:203:2:-;942:68;;-1:-1:-1;;;;;2704:15:11;;;942:68:2;;;2686:34:11;2756:15;;2736:18;;;2729:43;2788:18;;;2781:34;;;915:96:2;;935:5;;-1:-1:-1;;;965:27:2;2621:18:11;;942:68:2;2446:375:11;915:96:2;815:203;;;;:::o;3022:751::-;3441:23;3467:69;3495:4;3467:69;;;;;;;;;;;;;;;;;3475:5;-1:-1:-1;;;;;3467:27:2;;;:69;;;;;:::i;:::-;3550:17;;3441:95;;-1:-1:-1;3550:21:2;3546:221;;3690:10;3679:30;;;;;;;;;;;;:::i;:::-;3671:85;;;;-1:-1:-1;;;3671:85:2;;8694:2:11;3671:85:2;;;8676:21:11;8733:2;8713:18;;;8706:30;8772:34;8752:18;;;8745:62;-1:-1:-1;;;8823:18:11;;;8816:40;8873:19;;3671:85:2;8492:406:11;3573:193:3;3676:12;3707:52;3729:6;3737:4;3743:1;3746:12;3707:21;:52::i;:::-;3700:59;3573:193;-1:-1:-1;;;;3573:193:3:o;4600:523::-;4727:12;4784:5;4759:21;:30;;4751:81;;;;-1:-1:-1;;;4751:81:3;;6049:2:11;4751:81:3;;;6031:21:11;6088:2;6068:18;;;6061:30;6127:34;6107:18;;;6100:62;-1:-1:-1;;;6178:18:11;;;6171:36;6224:19;;4751:81:3;5847:402:11;4751:81:3;1078:20;;4842:60;;;;-1:-1:-1;;;4842:60:3;;7925:2:11;4842:60:3;;;7907:21:11;7964:2;7944:18;;;7937:30;8003:31;7983:18;;;7976:59;8052:18;;4842:60:3;7723:353:11;4842:60:3;4973:12;4987:23;5014:6;-1:-1:-1;;;;;5014:11:3;5034:5;5042:4;5014:33;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4972:75;;;;5064:52;5082:7;5091:10;5103:12;5064:17;:52::i;:::-;5057:59;4600:523;-1:-1:-1;;;;;;;4600:523:3:o;7083:725::-;7198:12;7226:7;7222:580;;;-1:-1:-1;7256:10:3;7249:17;;7222:580;7367:17;;:21;7363:429;;7625:10;7619:17;7685:15;7672:10;7668:2;7664:19;7657:44;7363:429;7764:12;7757:20;;-1:-1:-1;;;7757:20:3;;;;;;;;:::i;14:247:11:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;181:9;168:23;200:31;225:5;200:31;:::i;266:403::-;349:6;357;410:2;398:9;389:7;385:23;381:32;378:52;;;426:1;423;416:12;378:52;465:9;452:23;484:31;509:5;484:31;:::i;:::-;534:5;-1:-1:-1;591:2:11;576:18;;563:32;604:33;563:32;604:33;:::i;:::-;656:7;646:17;;;266:403;;;;;:::o;674:315::-;742:6;750;803:2;791:9;782:7;778:23;774:32;771:52;;;819:1;816;809:12;771:52;858:9;845:23;877:31;902:5;877:31;:::i;:::-;927:5;979:2;964:18;;;;951:32;;-1:-1:-1;;;674:315:11:o;994:277::-;1061:6;1114:2;1102:9;1093:7;1089:23;1085:32;1082:52;;;1130:1;1127;1120:12;1082:52;1162:9;1156:16;1215:5;1208:13;1201:21;1194:5;1191:32;1181:60;;1237:1;1234;1227:12;1276:180;1335:6;1388:2;1376:9;1367:7;1363:23;1359:32;1356:52;;;1404:1;1401;1394:12;1356:52;-1:-1:-1;1427:23:11;;1276:180;-1:-1:-1;1276:180:11:o;1461:184::-;1531:6;1584:2;1572:9;1563:7;1559:23;1555:32;1552:52;;;1600:1;1597;1590:12;1552:52;-1:-1:-1;1623:16:11;;1461:184;-1:-1:-1;1461:184:11:o;1650:274::-;1779:3;1817:6;1811:13;1833:53;1879:6;1874:3;1867:4;1859:6;1855:17;1833:53;:::i;:::-;1902:16;;;;;1650:274;-1:-1:-1;;1650:274:11:o;3105:632::-;3276:2;3328:21;;;3398:13;;3301:18;;;3420:22;;;3247:4;;3276:2;3499:15;;;;3473:2;3458:18;;;3247:4;3542:169;3556:6;3553:1;3550:13;3542:169;;;3617:13;;3605:26;;3686:15;;;;3651:12;;;;3578:1;3571:9;3542:169;;;-1:-1:-1;3728:3:11;;3105:632;-1:-1:-1;;;;;;3105:632:11:o;4197:383::-;4346:2;4335:9;4328:21;4309:4;4378:6;4372:13;4421:6;4416:2;4405:9;4401:18;4394:34;4437:66;4496:6;4491:2;4480:9;4476:18;4471:2;4463:6;4459:15;4437:66;:::i;:::-;4564:2;4543:15;-1:-1:-1;;4539:29:11;4524:45;;;;4571:2;4520:54;;4197:383;-1:-1:-1;;4197:383:11:o;8903:355::-;9105:2;9087:21;;;9144:2;9124:18;;;9117:30;9183:33;9178:2;9163:18;;9156:61;9249:2;9234:18;;8903:355::o;9847:128::-;9887:3;9918:1;9914:6;9911:1;9908:13;9905:39;;;9924:18;;:::i;:::-;-1:-1:-1;9960:9:11;;9847:128::o;9980:217::-;10020:1;10046;10036:132;;10090:10;10085:3;10081:20;10078:1;10071:31;10125:4;10122:1;10115:15;10153:4;10150:1;10143:15;10036:132;-1:-1:-1;10182:9:11;;9980:217::o;10202:168::-;10242:7;10308:1;10304;10300:6;10296:14;10293:1;10290:21;10285:1;10278:9;10271:17;10267:45;10264:71;;;10315:18;;:::i;:::-;-1:-1:-1;10355:9:11;;10202:168::o;10375:125::-;10415:4;10443:1;10440;10437:8;10434:34;;;10448:18;;:::i;:::-;-1:-1:-1;10485:9:11;;10375:125::o;10505:258::-;10577:1;10587:113;10601:6;10598:1;10595:13;10587:113;;;10677:11;;;10671:18;10658:11;;;10651:39;10623:2;10616:10;10587:113;;;10718:6;10715:1;10712:13;10709:48;;;-1:-1:-1;;10753:1:11;10735:16;;10728:27;10505:258::o;10768:135::-;10807:3;-1:-1:-1;;10828:17:11;;10825:43;;;10848:18;;:::i;:::-;-1:-1:-1;10895:1:11;10884:13;;10768:135::o;10908:127::-;10969:10;10964:3;10960:20;10957:1;10950:31;11000:4;10997:1;10990:15;11024:4;11021:1;11014:15;11040:127;11101:10;11096:3;11092:20;11089:1;11082:31;11132:4;11129:1;11122:15;11156:4;11153:1;11146:15;11172:127;11233:10;11228:3;11224:20;11221:1;11214:31;11264:4;11261:1;11254:15;11288:4;11285:1;11278:15;11304:131;-1:-1:-1;;;;;11379:31:11;;11369:42;;11359:70;;11425:1;11422;11415:12;11359:70;11304:131;:::o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "offset": [
    642,
    9901
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1FA JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x11A JUMPI DUP1 PUSH4 0x9B8A14EE GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xCD3DAF9D GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xCD3DAF9D EQ PUSH2 0x468 JUMPI DUP1 PUSH4 0xD1AF0C7D EQ PUSH2 0x470 JUMPI DUP1 PUSH4 0xDF136D65 EQ PUSH2 0x497 JUMPI DUP1 PUSH4 0xE9FAD8EE EQ PUSH2 0x4A0 JUMPI DUP1 PUSH4 0xEBE2B12B EQ PUSH2 0x4A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x9B8A14EE EQ PUSH2 0x412 JUMPI DUP1 PUSH4 0xA694FC3A EQ PUSH2 0x439 JUMPI DUP1 PUSH4 0xC8F33C91 EQ PUSH2 0x44C JUMPI DUP1 PUSH4 0xCC1A378F EQ PUSH2 0x455 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x80FAA57D GT PUSH2 0xE9 JUMPI DUP1 PUSH4 0x80FAA57D EQ PUSH2 0x3C4 JUMPI DUP1 PUSH4 0x8980F11F EQ PUSH2 0x3CC JUMPI DUP1 PUSH4 0x8B876347 EQ PUSH2 0x3DF JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x3FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x363 JUMPI DUP1 PUSH4 0x72F702F3 EQ PUSH2 0x38C JUMPI DUP1 PUSH4 0x79BA5097 EQ PUSH2 0x3B3 JUMPI DUP1 PUSH4 0x7B0A47EE EQ PUSH2 0x3BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x33BDDBC6 GT PUSH2 0x192 JUMPI DUP1 PUSH4 0x3FC6DF6E GT PUSH2 0x161 JUMPI DUP1 PUSH4 0x3FC6DF6E EQ PUSH2 0x2FF JUMPI DUP1 PUSH4 0x53A47BB7 EQ PUSH2 0x312 JUMPI DUP1 PUSH4 0x556F6E6B EQ PUSH2 0x325 JUMPI DUP1 PUSH4 0x6BE7BB1F EQ PUSH2 0x338 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x33BDDBC6 EQ PUSH2 0x2B0 JUMPI DUP1 PUSH4 0x386A9525 EQ PUSH2 0x2DB JUMPI DUP1 PUSH4 0x3C6B16AB EQ PUSH2 0x2E4 JUMPI DUP1 PUSH4 0x3D18B912 EQ PUSH2 0x2F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x19762143 GT PUSH2 0x1CE JUMPI DUP1 PUSH4 0x19762143 EQ PUSH2 0x262 JUMPI DUP1 PUSH4 0x1C1F78EB EQ PUSH2 0x275 JUMPI DUP1 PUSH4 0x1E02CEE3 EQ PUSH2 0x27D JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x29D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH3 0x8CC262 EQ PUSH2 0x1FF JUMPI DUP1 PUSH4 0x700037D EQ PUSH2 0x225 JUMPI DUP1 PUSH4 0x1627540C EQ PUSH2 0x245 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x25A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x212 PUSH2 0x20D CALLDATASIZE PUSH1 0x4 PUSH2 0x1BE6 JUMP JUMPDEST PUSH2 0x4B1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x212 PUSH2 0x233 CALLDATASIZE PUSH1 0x4 PUSH2 0x1BE6 JUMP JUMPDEST PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x258 PUSH2 0x253 CALLDATASIZE PUSH1 0x4 PUSH2 0x1BE6 JUMP JUMPDEST PUSH2 0x52F JUMP JUMPDEST STOP JUMPDEST PUSH1 0xF SLOAD PUSH2 0x212 JUMP JUMPDEST PUSH2 0x258 PUSH2 0x270 CALLDATASIZE PUSH1 0x4 PUSH2 0x1BE6 JUMP JUMPDEST PUSH2 0x58C JUMP JUMPDEST PUSH2 0x212 PUSH2 0x5B6 JUMP JUMPDEST PUSH2 0x290 PUSH2 0x28B CALLDATASIZE PUSH1 0x4 PUSH2 0x1BE6 JUMP JUMPDEST PUSH2 0x5D4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21C SWAP2 SWAP1 PUSH2 0x1CD8 JUMP JUMPDEST PUSH2 0x258 PUSH2 0x2AB CALLDATASIZE PUSH1 0x4 PUSH2 0x1C8A JUMP JUMPDEST PUSH2 0xA7C JUMP JUMPDEST PUSH2 0x2C3 PUSH2 0x2BE CALLDATASIZE PUSH1 0x4 PUSH2 0x1C8A JUMP JUMPDEST PUSH2 0xC82 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x21C JUMP JUMPDEST PUSH2 0x212 PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x258 PUSH2 0x2F2 CALLDATASIZE PUSH1 0x4 PUSH2 0x1C8A JUMP JUMPDEST PUSH2 0xCAC JUMP JUMPDEST PUSH2 0x258 PUSH2 0xF31 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x2C3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x2C3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x258 PUSH2 0x333 CALLDATASIZE PUSH1 0x4 PUSH2 0x1C8A JUMP JUMPDEST PUSH2 0x118D JUMP JUMPDEST PUSH2 0x212 PUSH2 0x346 CALLDATASIZE PUSH1 0x4 PUSH2 0x1C03 JUMP JUMPDEST PUSH1 0xC PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x212 PUSH2 0x371 CALLDATASIZE PUSH1 0x4 PUSH2 0x1BE6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x10 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x2C3 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x258 PUSH2 0x1252 JUMP JUMPDEST PUSH2 0x212 PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x212 PUSH2 0x133C JUMP JUMPDEST PUSH2 0x258 PUSH2 0x3DA CALLDATASIZE PUSH1 0x4 PUSH2 0x1C3C JUMP JUMPDEST PUSH2 0x134A JUMP JUMPDEST PUSH2 0x212 PUSH2 0x3ED CALLDATASIZE PUSH1 0x4 PUSH2 0x1BE6 JUMP JUMPDEST PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x2C3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x2C3 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x258 PUSH2 0x447 CALLDATASIZE PUSH1 0x4 PUSH2 0x1C8A JUMP JUMPDEST PUSH2 0x143E JUMP JUMPDEST PUSH2 0x212 PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x258 PUSH2 0x463 CALLDATASIZE PUSH1 0x4 PUSH2 0x1C8A JUMP JUMPDEST PUSH2 0x16EE JUMP JUMPDEST PUSH2 0x212 PUSH2 0x17C8 JUMP JUMPDEST PUSH2 0x2C3 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x212 PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x258 PUSH2 0x1814 JUMP JUMPDEST PUSH2 0x212 PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH1 0xA SWAP1 SWAP3 MSTORE DUP3 KECCAK256 SLOAD PUSH2 0x529 SWAP2 SWAP1 PUSH2 0x523 SWAP1 PUSH8 0xDE0B6B3A7640000 SWAP1 PUSH2 0x51D SWAP1 PUSH2 0x4FE SWAP1 PUSH2 0x4F8 PUSH2 0x17C8 JUMP JUMPDEST SWAP1 PUSH2 0x1837 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x10 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 PUSH2 0x184A JUMP JUMPDEST SWAP1 PUSH2 0x1856 JUMP JUMPDEST SWAP1 PUSH2 0x1862 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x537 PUSH2 0x186E JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x906A1C6BD7E3091EA86693DD029A831C19049CE77F1DCE2CE0BAB1CACBABCE22 SWAP1 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0x594 PUSH2 0x186E JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5CF PUSH1 0x7 SLOAD PUSH1 0x6 SLOAD PUSH2 0x184A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x4 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x62E JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x610 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP PUSH1 0x0 DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x651 JUMPI PUSH2 0x651 PUSH2 0x1E69 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x67A JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x697 JUMPI PUSH2 0x697 PUSH2 0x1E69 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x6C0 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP3 POP PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x793 JUMPI DUP3 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x6E1 JUMPI PUSH2 0x6E1 PUSH2 0x1E53 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x72C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x740 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x764 SWAP2 SWAP1 PUSH2 0x1CA3 JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x776 JUMPI PUSH2 0x776 PUSH2 0x1E53 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE DUP1 PUSH2 0x78B DUP2 PUSH2 0x1E22 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x6C6 JUMP JUMPDEST POP PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x3D18B912 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x7EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x803 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0xA74 JUMPI PUSH1 0x0 DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x827 JUMPI PUSH2 0x827 PUSH2 0x1E53 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x877 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x88B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8AF SWAP2 SWAP1 PUSH2 0x1CA3 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x8DF DUP6 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x8C8 JUMPI PUSH2 0x8C8 PUSH2 0x1E53 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP4 PUSH2 0x1837 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xF SLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x940 JUMPI PUSH1 0xF SLOAD PUSH2 0x926 SWAP1 PUSH2 0x907 SWAP1 PUSH2 0x51D DUP5 PUSH8 0xDE0B6B3A7640000 PUSH2 0x184A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 PUSH2 0x1862 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP10 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP9 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE DUP1 DUP4 KECCAK256 SLOAD SWAP4 DUP4 MSTORE PUSH1 0xE DUP3 MSTORE DUP1 DUP4 KECCAK256 SWAP5 DUP4 MSTORE SWAP4 DUP2 MSTORE DUP4 DUP3 KECCAK256 SLOAD PUSH1 0xD SWAP1 SWAP2 MSTORE SWAP3 SWAP1 KECCAK256 SLOAD PUSH2 0x9C4 SWAP3 PUSH2 0x523 SWAP2 PUSH8 0xDE0B6B3A7640000 SWAP2 PUSH2 0x51D SWAP2 PUSH2 0x9A5 SWAP2 PUSH2 0x1837 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x10 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 PUSH2 0x184A JUMP JUMPDEST DUP8 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x9D6 JUMPI PUSH2 0x9D6 PUSH2 0x1E53 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xD DUP5 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SLOAD SWAP4 DUP14 AND DUP3 MSTORE PUSH1 0xE DUP6 MSTORE DUP1 DUP3 KECCAK256 SWAP3 DUP3 MSTORE SWAP2 SWAP1 SWAP4 MSTORE SWAP1 SWAP2 KECCAK256 SSTORE DUP7 MLOAD DUP8 SWAP1 DUP6 SWAP1 DUP2 LT PUSH2 0xA2A JUMPI PUSH2 0xA2A PUSH2 0x1E53 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP12 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC DUP5 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP8 SWAP1 SWAP3 AND DUP2 MSTORE SWAP6 SWAP1 SWAP3 MSTORE SWAP4 KECCAK256 SWAP3 SWAP1 SWAP3 SSTORE POP DUP2 SWAP1 POP PUSH2 0xA6C DUP2 PUSH2 0x1E22 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x80A JUMP JUMPDEST POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x3 SLOAD EQ ISZERO PUSH2 0xAA8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA9F SWAP1 PUSH2 0x1D4F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x3 SSTORE CALLER PUSH2 0xAB6 PUSH2 0x17C8 JUMP JUMPDEST PUSH1 0x9 SSTORE PUSH2 0xAC1 PUSH2 0x133C JUMP JUMPDEST PUSH1 0x8 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0xB12 JUMPI PUSH2 0xADC DUP2 PUSH2 0x4B1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x9 SLOAD PUSH1 0xA SWAP1 SWAP2 MSTORE SWAP2 SWAP1 KECCAK256 SSTORE PUSH2 0xB10 DUP2 PUSH2 0x5D4 JUMP JUMPDEST POP JUMPDEST PUSH1 0x0 DUP3 GT PUSH2 0xB56 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x43616E6E6F74207769746864726177203 PUSH1 0x7C SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xA9F JUMP JUMPDEST PUSH1 0xF SLOAD PUSH2 0xB63 SWAP1 DUP4 PUSH2 0x1837 JUMP JUMPDEST PUSH1 0xF SSTORE CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x10 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xB80 SWAP1 DUP4 PUSH2 0x1837 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x10 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE MLOAD PUSH4 0x2E1A7D4D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0x2E1A7D4D SWAP1 PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xBF5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xC09 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH2 0xC43 SWAP3 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 POP CALLER DUP5 PUSH2 0x18E0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE CALLER SWAP1 PUSH32 0x7084F5476618D8E60B11EF0D7D3F06914655ADB8793E28FF7F018D4C76D505D5 SWAP1 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP PUSH1 0x1 PUSH1 0x3 SSTORE JUMP JUMPDEST PUSH1 0x4 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xC92 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xD19 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616C6C6572206973206E6F742052657761726473446973747269627574696F PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x1B8818DBDB9D1C9858DD PUSH1 0xB2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xA9F JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD23 PUSH2 0x17C8 JUMP JUMPDEST PUSH1 0x9 SSTORE PUSH2 0xD2E PUSH2 0x133C JUMP JUMPDEST PUSH1 0x8 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0xD7F JUMPI PUSH2 0xD49 DUP2 PUSH2 0x4B1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x9 SLOAD PUSH1 0xA SWAP1 SWAP2 MSTORE SWAP2 SWAP1 KECCAK256 SSTORE PUSH2 0xD7D DUP2 PUSH2 0x5D4 JUMP JUMPDEST POP JUMPDEST PUSH1 0x5 SLOAD TIMESTAMP LT PUSH2 0xD9E JUMPI PUSH1 0x7 SLOAD PUSH2 0xD96 SWAP1 DUP4 SWAP1 PUSH2 0x1856 JUMP JUMPDEST PUSH1 0x6 SSTORE PUSH2 0xDE1 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x0 SWAP1 PUSH2 0xDAE SWAP1 TIMESTAMP PUSH2 0x1837 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xDC7 PUSH1 0x6 SLOAD DUP4 PUSH2 0x184A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x7 SLOAD SWAP1 SWAP2 POP PUSH2 0xDDB SWAP1 PUSH2 0x51D DUP7 DUP5 PUSH2 0x1862 JUMP JUMPDEST PUSH1 0x6 SSTORE POP POP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE43 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xE57 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xE7B SWAP2 SWAP1 PUSH2 0x1CA3 JUMP JUMPDEST SWAP1 POP PUSH2 0xE92 PUSH1 0x7 SLOAD DUP3 PUSH2 0x1856 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x6 SLOAD GT ISZERO PUSH2 0xEE3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50726F76696465642072657761726420746F6F20686967680000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xA9F JUMP JUMPDEST TIMESTAMP PUSH1 0x8 DUP2 SWAP1 SSTORE PUSH1 0x7 SLOAD PUSH2 0xEF6 SWAP2 SWAP1 PUSH2 0x1862 JUMP JUMPDEST PUSH1 0x5 SSTORE PUSH1 0x40 MLOAD DUP4 DUP2 MSTORE PUSH32 0xDE88A922E0D3B88B24E9623EFEB464919C6BF9F66857A65E2BFCF2CE87A9433D SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x3 SLOAD EQ ISZERO PUSH2 0xF54 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA9F SWAP1 PUSH2 0x1D4F JUMP JUMPDEST PUSH1 0x2 PUSH1 0x3 SSTORE CALLER PUSH2 0xF62 PUSH2 0x17C8 JUMP JUMPDEST PUSH1 0x9 SSTORE PUSH2 0xF6D PUSH2 0x133C JUMP JUMPDEST PUSH1 0x8 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0xFBE JUMPI PUSH2 0xF88 DUP2 PUSH2 0x4B1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x9 SLOAD PUSH1 0xA SWAP1 SWAP2 MSTORE SWAP2 SWAP1 KECCAK256 SSTORE PUSH2 0xFBC DUP2 PUSH2 0x5D4 JUMP JUMPDEST POP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH1 0x4 DUP1 SLOAD DUP4 MLOAD DUP2 DUP7 MUL DUP2 ADD DUP7 ADD SWAP1 SWAP5 MSTORE DUP1 DUP5 MSTORE SWAP2 SWAP5 SWAP4 SWAP1 SWAP2 SWAP1 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x1023 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1005 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP PUSH1 0x0 DUP3 GT ISZERO PUSH2 0x10AE JUMPI CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SSTORE PUSH2 0x1078 SWAP1 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP5 PUSH2 0x18E0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE CALLER SWAP1 PUSH32 0xE2403640BA68FED3A2F88B7557551D1993F84B99BB10FF833F0CF8DB0C5E0486 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x1182 JUMPI PUSH1 0x0 DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x10CE JUMPI PUSH2 0x10CE PUSH2 0x1E53 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC DUP4 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND DUP4 MSTORE SWAP1 SWAP4 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 SLOAD SWAP1 SWAP2 POP DUP1 ISZERO PUSH2 0x116D JUMPI CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP1 DUP6 MSTORE SWAP3 MSTORE DUP3 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH2 0x1137 SWAP2 DUP4 PUSH2 0x18E0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE CALLER SWAP1 PUSH32 0xCE68CDB84849C4239FA00C1E372FDA2AE0F55014178702ABF36B26508D863959 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST POP POP DUP1 DUP1 PUSH2 0x117A SWAP1 PUSH2 0x1E22 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x10B1 JUMP JUMPDEST POP POP PUSH1 0x1 PUSH1 0x3 SSTORE POP POP JUMP JUMPDEST PUSH2 0x1195 PUSH2 0x186E JUMP JUMPDEST PUSH1 0x0 PUSH2 0x119F PUSH2 0x17C8 JUMP JUMPDEST PUSH1 0x9 SSTORE PUSH2 0x11AA PUSH2 0x133C JUMP JUMPDEST PUSH1 0x8 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x11FB JUMPI PUSH2 0x11C5 DUP2 PUSH2 0x4B1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x9 SLOAD PUSH1 0xA SWAP1 SWAP2 MSTORE SWAP2 SWAP1 KECCAK256 SSTORE PUSH2 0x11F9 DUP2 PUSH2 0x5D4 JUMP JUMPDEST POP JUMPDEST PUSH1 0x8 SLOAD DUP3 GT PUSH2 0x124C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C6964206E657720706572696F642066696E69736800000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xA9F JUMP JUMPDEST POP PUSH1 0x5 SSTORE JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x12CA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x35 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F75206D757374206265206E6F6D696E61746564206265666F726520796F75 PUSH1 0x44 DUP3 ADD MSTORE PUSH21 0x2063616E20616363657074206F776E65727368697 PUSH1 0x5C SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xA9F JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND DUP2 MSTORE SWAP3 SWAP1 SWAP2 AND PUSH1 0x20 DUP4 ADD MSTORE PUSH32 0xB532073B38C83145E3E5135377A08BF9AAB55BC0FD7C1179CD4FB995D2A5159C SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x1 DUP1 SLOAD PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND OR SWAP1 SWAP2 SSTORE AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5CF TIMESTAMP PUSH1 0x5 SLOAD PUSH2 0x1948 JUMP JUMPDEST PUSH2 0x1352 PUSH2 0x186E JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x13DE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F7420776974686472617720746865207374616B696E6720746F6B65 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x37 PUSH1 0xF9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xA9F JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x13F8 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 AND DUP4 PUSH2 0x18E0 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE PUSH32 0x8C1256B8896378CD5044F80C202F9772B9D77DC85C8A6EB51967210B09BFAA28 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x3 SLOAD EQ ISZERO PUSH2 0x1461 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA9F SWAP1 PUSH2 0x1D4F JUMP JUMPDEST PUSH1 0x2 PUSH1 0x3 SSTORE CALLER PUSH2 0x146F PUSH2 0x17C8 JUMP JUMPDEST PUSH1 0x9 SSTORE PUSH2 0x147A PUSH2 0x133C JUMP JUMPDEST PUSH1 0x8 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x14CB JUMPI PUSH2 0x1495 DUP2 PUSH2 0x4B1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x9 SLOAD PUSH1 0xA SWAP1 SWAP2 MSTORE SWAP2 SWAP1 KECCAK256 SSTORE PUSH2 0x14C9 DUP2 PUSH2 0x5D4 JUMP JUMPDEST POP JUMPDEST PUSH1 0x0 DUP3 GT PUSH2 0x150C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x43616E6E6F74207374616B65203 PUSH1 0x94 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xA9F JUMP JUMPDEST PUSH1 0xF SLOAD PUSH2 0x1519 SWAP1 DUP4 PUSH2 0x1862 JUMP JUMPDEST PUSH1 0xF SSTORE CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x10 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x1536 SWAP1 DUP4 PUSH2 0x1862 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x10 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH2 0x157F SWAP1 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 ADDRESS DUP6 PUSH2 0x195E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP5 SWAP1 MSTORE PUSH32 0x0 AND SWAP1 PUSH4 0x95EA7B3 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1609 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x161D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1641 SWAP2 SWAP1 PUSH2 0x1C68 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH4 0x534A7E1D PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xA694FC3A SWAP1 PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x16A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x16B8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD DUP5 DUP2 MSTORE CALLER SWAP3 POP PUSH32 0x9E71BC8EEA02A63969F509818F2DAFB9254532904319F9DBDA79B67BD34A5F3D SWAP2 POP PUSH1 0x20 ADD PUSH2 0xC71 JUMP JUMPDEST PUSH2 0x16F6 PUSH2 0x186E JUMP JUMPDEST PUSH1 0x5 SLOAD TIMESTAMP GT PUSH2 0x1793 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x58 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50726576696F7573207265776172647320706572696F64206D75737420626520 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x636F6D706C657465206265666F7265206368616E67696E672074686520647572 PUSH1 0x64 DUP3 ADD MSTORE PUSH32 0x6174696F6E20666F7220746865206E657720706572696F640000000000000000 PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH2 0xA9F JUMP JUMPDEST PUSH1 0x7 DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH32 0xFB46CA5A5E06D4540D6387B930A7C978BCE0DB5F449EC6B3F5D07C6E1D44F2D3 SWAP1 PUSH1 0x20 ADD PUSH2 0x581 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xF SLOAD PUSH1 0x0 EQ ISZERO PUSH2 0x17DC JUMPI POP PUSH1 0x9 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x5CF PUSH2 0x180B PUSH1 0xF SLOAD PUSH2 0x51D PUSH8 0xDE0B6B3A7640000 PUSH2 0x1805 PUSH1 0x6 SLOAD PUSH2 0x1805 PUSH1 0x8 SLOAD PUSH2 0x4F8 PUSH2 0x133C JUMP JUMPDEST SWAP1 PUSH2 0x184A JUMP JUMPDEST PUSH1 0x9 SLOAD SWAP1 PUSH2 0x1862 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x10 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x182D SWAP1 PUSH2 0xA7C JUMP JUMPDEST PUSH2 0x1835 PUSH2 0xF31 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1843 DUP3 DUP5 PUSH2 0x1DDF JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1843 DUP3 DUP5 PUSH2 0x1DC0 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1843 DUP3 DUP5 PUSH2 0x1D9E JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1843 DUP3 DUP5 PUSH2 0x1D86 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1835 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C792074686520636F6E7472616374206F776E6572206D61792070657266 PUSH1 0x44 DUP3 ADD MSTORE PUSH15 0x37B936903A3434B99030B1BA34B7B7 PUSH1 0x89 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xA9F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x1943 SWAP1 DUP5 SWAP1 PUSH4 0xA9059CBB PUSH1 0xE0 SHL SWAP1 PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 MSTORE PUSH2 0x199C JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 LT PUSH2 0x1957 JUMPI DUP2 PUSH2 0x1843 JUMP JUMPDEST POP SWAP1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x24 DUP4 ADD MSTORE DUP4 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x1996 SWAP1 DUP6 SWAP1 PUSH4 0x23B872DD PUSH1 0xE0 SHL SWAP1 PUSH1 0x84 ADD PUSH2 0x190C JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19F1 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1A6E SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x1943 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x1A0F SWAP2 SWAP1 PUSH2 0x1C68 JUMP JUMPDEST PUSH2 0x1943 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x1BDD081CDD58D8D95959 PUSH1 0xB2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xA9F JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1A7D DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x1A85 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x1AE6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x1C8818D85B1B PUSH1 0xD2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xA9F JUMP JUMPDEST DUP5 EXTCODESIZE PUSH2 0x1B34 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xA9F JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x1B50 SWAP2 SWAP1 PUSH2 0x1CBC JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1B8D JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1B92 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x1BA2 DUP3 DUP3 DUP7 PUSH2 0x1BAD JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x1BBC JUMPI POP DUP2 PUSH2 0x1843 JUMP JUMPDEST DUP3 MLOAD ISZERO PUSH2 0x1BCC JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA9F SWAP2 SWAP1 PUSH2 0x1D1C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1BF8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1843 DUP2 PUSH2 0x1E7F JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1C16 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x1C21 DUP2 PUSH2 0x1E7F JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x1C31 DUP2 PUSH2 0x1E7F JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1C4F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x1C5A DUP2 PUSH2 0x1E7F JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C7A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1843 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C9C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1CB5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x1CCE DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x1DF6 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1D10 JUMPI DUP4 MLOAD DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x1CF4 JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x1D3B DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x1DF6 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1F SWAP1 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x1D99 JUMPI PUSH2 0x1D99 PUSH2 0x1E3D JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1DBB JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x1DDA JUMPI PUSH2 0x1DDA PUSH2 0x1E3D JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x1DF1 JUMPI PUSH2 0x1DF1 PUSH2 0x1E3D JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1E11 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1DF9 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x1996 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x1E36 JUMPI PUSH2 0x1E36 PUSH2 0x1E3D JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1E94 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH4 0xC3BC9C43 SDIV 0xE DUP9 0x24 0x5F 0xA5 EXTCODESIZE 0xA5 PUSH31 0xACC757CD86FA4B8C95C314E83B823275770064736F6C634300080700330000 ",
  "pcMap": {
    "0": {
      "offset": [
        642,
        9901
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        642,
        9901
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        642,
        9901
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "5": {
      "fn": null,
      "offset": [
        642,
        9901
      ],
      "op": "CALLVALUE",
      "path": "6"
    },
    "6": {
      "fn": null,
      "offset": [
        642,
        9901
      ],
      "op": "DUP1",
      "path": "6"
    },
    "7": {
      "fn": null,
      "offset": [
        642,
        9901
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "8": {
      "fn": null,
      "offset": [
        642,
        9901
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        642,
        9901
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "12": {
      "fn": null,
      "offset": [
        642,
        9901
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        642,
        9901
      ],
      "op": "DUP1",
      "path": "6"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        642,
        9901
      ],
      "op": "REVERT",
      "path": "6"
    },
    "16": {
      "fn": null,
      "offset": [
        642,
        9901
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "17": {
      "fn": null,
      "offset": [
        642,
        9901
      ],
      "op": "POP",
      "path": "6"
    },
    "18": {
      "fn": null,
      "offset": [
        642,
        9901
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        642,
        9901
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "21": {
      "fn": null,
      "offset": [
        642,
        9901
      ],
      "op": "LT",
      "path": "6"
    },
    "22": {
      "fn": null,
      "offset": [
        642,
        9901
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1FA"
    },
    "25": {
      "fn": null,
      "offset": [
        642,
        9901
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "26": {
      "fn": null,
      "offset": [
        642,
        9901
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        642,
        9901
      ],
      "op": "CALLDATALOAD",
      "path": "6"
    },
    "29": {
      "fn": null,
      "offset": [
        642,
        9901
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        642,
        9901
      ],
      "op": "SHR",
      "path": "6"
    },
    "32": {
      "fn": null,
      "offset": [
        642,
        9901
      ],
      "op": "DUP1",
      "path": "6"
    },
    "33": {
      "fn": null,
      "offset": [
        642,
        9901
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x70A08231"
    },
    "38": {
      "fn": null,
      "offset": [
        642,
        9901
      ],
      "op": "GT",
      "path": "6"
    },
    "39": {
      "fn": null,
      "offset": [
        642,
        9901
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x11A"
    },
    "42": {
      "fn": null,
      "offset": [
        642,
        9901
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "43": {
      "fn": null,
      "offset": [
        642,
        9901
      ],
      "op": "DUP1",
      "path": "6"
    },
    "44": {
      "fn": null,
      "offset": [
        642,
        9901
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x9B8A14EE"
    },
    "49": {
      "fn": null,
      "offset": [
        642,
        9901
      ],
      "op": "GT",
      "path": "6"
    },
    "50": {
      "fn": null,
      "offset": [
        642,
        9901
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xAD"
    },
    "53": {
      "fn": null,
      "offset": [
        642,
        9901
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "54": {
      "fn": null,
      "offset": [
        642,
        9901
      ],
      "op": "DUP1",
      "path": "6"
    },
    "55": {
      "fn": null,
      "offset": [
        642,
        9901
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xCD3DAF9D"
    },
    "60": {
      "fn": null,
      "offset": [
        642,
        9901
      ],
      "op": "GT",
      "path": "6"
    },
    "61": {
      "fn": null,
      "offset": [
        642,
        9901
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x7C"
    },
    "64": {
      "fn": null,
      "offset": [
        642,
        9901
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "65": {
      "fn": null,
      "offset": [
        642,
        9901
      ],
      "op": "DUP1",
      "path": "6"
    },
    "66": {
      "fn": null,
      "offset": [
        642,
        9901
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xCD3DAF9D"
    },
    "71": {
      "fn": null,
      "offset": [
        642,
        9901
      ],
      "op": "EQ",
      "path": "6"
    },
    "72": {
      "fn": null,
      "offset": [
        642,
        9901
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x468"
    },
    "75": {
      "fn": null,
      "offset": [
        642,
        9901
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "76": {
      "fn": null,
      "offset": [
        642,
        9901
      ],
      "op": "DUP1",
      "path": "6"
    },
    "77": {
      "fn": null,
      "offset": [
        642,
        9901
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xD1AF0C7D"
    },
    "82": {
      "fn": null,
      "offset": [
        642,
        9901
      ],
      "op": "EQ",
      "path": "6"
    },
    "83": {
      "fn": null,
      "offset": [
        642,
        9901
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x470"
    },
    "86": {
      "fn": null,
      "offset": [
        642,
        9901
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "87": {
      "fn": null,
      "offset": [
        642,
        9901
      ],
      "op": "DUP1",
      "path": "6"
    },
    "88": {
      "fn": null,
      "offset": [
        642,
        9901
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xDF136D65"
    },
    "93": {
      "fn": null,
      "offset": [
        642,
        9901
      ],
      "op": "EQ",
      "path": "6"
    },
    "94": {
      "fn": null,
      "offset": [
        642,
        9901
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x497"
    },
    "97": {
      "fn": null,
      "offset": [
        642,
        9901
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "98": {
      "fn": null,
      "offset": [
        642,
        9901
      ],
      "op": "DUP1",
      "path": "6"
    },
    "99": {
      "fn": null,
      "offset": [
        642,
        9901
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xE9FAD8EE"
    },
    "104": {
      "fn": null,
      "offset": [
        642,
        9901
      ],
      "op": "EQ",
      "path": "6"
    },
    "105": {
      "fn": null,
      "offset": [
        642,
        9901
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x4A0"
    },
    "108": {
      "fn": null,
      "offset": [
        642,
        9901
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "109": {
      "fn": null,
      "offset": [
        642,
        9901
      ],
      "op": "DUP1",
      "path": "6"
    },
    "110": {
      "fn": null,
      "offset": [
        642,
        9901
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xEBE2B12B"
    },
    "115": {
      "fn": null,
      "offset": [
        642,
        9901
      ],
      "op": "EQ",
      "path": "6"
    },
    "116": {
      "fn": null,
      "offset": [
        642,
        9901
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x4A8"
    },
    "119": {
      "fn": null,
      "offset": [
        642,
        9901
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "120": {
      "fn": null,
      "offset": [
        642,
        9901
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "122": {
      "fn": null,
      "offset": [
        642,
        9901
      ],
      "op": "DUP1",
      "path": "6"
    },
    "123": {
      "fn": null,
      "offset": [
        642,
        9901
      ],
      "op": "REVERT",
      "path": "6"
    },
    "124": {
      "fn": null,
      "offset": [
        642,
        9901
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "125": {
      "fn": null,
      "offset": [
        642,
        9901
      ],
      "op": "DUP1",
      "path": "6"
    },
    "126": {
      "fn": null,
      "offset": [
        642,
        9901
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x9B8A14EE"
    },
    "131": {
      "fn": null,
      "offset": [
        642,
        9901
      ],
      "op": "EQ",
      "path": "6"
    },
    "132": {
      "fn": null,
      "offset": [
        642,
        9901
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x412"
    },
    "135": {
      "fn": null,
      "offset": [
        642,
        9901
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "136": {
      "fn": null,
      "offset": [
        642,
        9901
      ],
      "op": "DUP1",
      "path": "6"
    },
    "137": {
      "fn": null,
      "offset": [
        642,
        9901
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xA694FC3A"
    },
    "142": {
      "fn": null,
      "offset": [
        642,
        9901
      ],
      "op": "EQ",
      "path": "6"
    },
    "143": {
      "fn": null,
      "offset": [
        642,
        9901
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x439"
    },
    "146": {
      "fn": null,
      "offset": [
        642,
        9901
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "147": {
      "fn": null,
      "offset": [
        642,
        9901
      ],
      "op": "DUP1",
      "path": "6"
    },
    "148": {
      "fn": null,
      "offset": [
        642,
        9901
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xC8F33C91"
    },
    "153": {
      "fn": null,
      "offset": [
        642,
        9901
      ],
      "op": "EQ",
      "path": "6"
    },
    "154": {
      "fn": null,
      "offset": [
        642,
        9901
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x44C"
    },
    "157": {
      "fn": null,
      "offset": [
        642,
        9901
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "158": {
      "fn": null,
      "offset": [
        642,
        9901
      ],
      "op": "DUP1",
      "path": "6"
    },
    "159": {
      "fn": null,
      "offset": [
        642,
        9901
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xCC1A378F"
    },
    "164": {
      "fn": null,
      "offset": [
        642,
        9901
      ],
      "op": "EQ",
      "path": "6"
    },
    "165": {
      "fn": null,
      "offset": [
        642,
        9901
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x455"
    },
    "168": {
      "fn": null,
      "offset": [
        642,
        9901
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "169": {
      "fn": null,
      "offset": [
        642,
        9901
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "171": {
      "fn": null,
      "offset": [
        642,
        9901
      ],
      "op": "DUP1",
      "path": "6"
    },
    "172": {
      "fn": null,
      "offset": [
        642,
        9901
      ],
      "op": "REVERT",
      "path": "6"
    },
    "173": {
      "fn": null,
      "offset": [
        642,
        9901
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "174": {
      "fn": null,
      "offset": [
        642,
        9901
      ],
      "op": "DUP1",
      "path": "6"
    },
    "175": {
      "fn": null,
      "offset": [
        642,
        9901
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x80FAA57D"
    },
    "180": {
      "fn": null,
      "offset": [
        642,
        9901
      ],
      "op": "GT",
      "path": "6"
    },
    "181": {
      "fn": null,
      "offset": [
        642,
        9901
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xE9"
    },
    "184": {
      "fn": null,
      "offset": [
        642,
        9901
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "185": {
      "fn": null,
      "offset": [
        642,
        9901
      ],
      "op": "DUP1",
      "path": "6"
    },
    "186": {
      "fn": null,
      "offset": [
        642,
        9901
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x80FAA57D"
    },
    "191": {
      "fn": null,
      "offset": [
        642,
        9901
      ],
      "op": "EQ",
      "path": "6"
    },
    "192": {
      "fn": null,
      "offset": [
        642,
        9901
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x3C4"
    },
    "195": {
      "fn": null,
      "offset": [
        642,
        9901
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "196": {
      "fn": null,
      "offset": [
        642,
        9901
      ],
      "op": "DUP1",
      "path": "6"
    },
    "197": {
      "fn": null,
      "offset": [
        642,
        9901
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x8980F11F"
    },
    "202": {
      "fn": null,
      "offset": [
        642,
        9901
      ],
      "op": "EQ",
      "path": "6"
    },
    "203": {
      "fn": null,
      "offset": [
        642,
        9901
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x3CC"
    },
    "206": {
      "fn": null,
      "offset": [
        642,
        9901
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "207": {
      "fn": null,
      "offset": [
        642,
        9901
      ],
      "op": "DUP1",
      "path": "6"
    },
    "208": {
      "fn": null,
      "offset": [
        642,
        9901
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x8B876347"
    },
    "213": {
      "fn": null,
      "offset": [
        642,
        9901
      ],
      "op": "EQ",
      "path": "6"
    },
    "214": {
      "fn": null,
      "offset": [
        642,
        9901
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x3DF"
    },
    "217": {
      "fn": null,
      "offset": [
        642,
        9901
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "218": {
      "fn": null,
      "offset": [
        642,
        9901
      ],
      "op": "DUP1",
      "path": "6"
    },
    "219": {
      "fn": null,
      "offset": [
        642,
        9901
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x8DA5CB5B"
    },
    "224": {
      "fn": null,
      "offset": [
        642,
        9901
      ],
      "op": "EQ",
      "path": "6"
    },
    "225": {
      "fn": null,
      "offset": [
        642,
        9901
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x3FF"
    },
    "228": {
      "fn": null,
      "offset": [
        642,
        9901
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "229": {
      "fn": null,
      "offset": [
        642,
        9901
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "231": {
      "fn": null,
      "offset": [
        642,
        9901
      ],
      "op": "DUP1",
      "path": "6"
    },
    "232": {
      "fn": null,
      "offset": [
        642,
        9901
      ],
      "op": "REVERT",
      "path": "6"
    },
    "233": {
      "fn": null,
      "offset": [
        642,
        9901
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "234": {
      "fn": null,
      "offset": [
        642,
        9901
      ],
      "op": "DUP1",
      "path": "6"
    },
    "235": {
      "fn": null,
      "offset": [
        642,
        9901
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x70A08231"
    },
    "240": {
      "fn": null,
      "offset": [
        642,
        9901
      ],
      "op": "EQ",
      "path": "6"
    },
    "241": {
      "fn": null,
      "offset": [
        642,
        9901
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x363"
    },
    "244": {
      "fn": null,
      "offset": [
        642,
        9901
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "245": {
      "fn": null,
      "offset": [
        642,
        9901
      ],
      "op": "DUP1",
      "path": "6"
    },
    "246": {
      "fn": null,
      "offset": [
        642,
        9901
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x72F702F3"
    },
    "251": {
      "fn": null,
      "offset": [
        642,
        9901
      ],
      "op": "EQ",
      "path": "6"
    },
    "252": {
      "fn": null,
      "offset": [
        642,
        9901
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x38C"
    },
    "255": {
      "fn": null,
      "offset": [
        642,
        9901
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "256": {
      "fn": null,
      "offset": [
        642,
        9901
      ],
      "op": "DUP1",
      "path": "6"
    },
    "257": {
      "fn": null,
      "offset": [
        642,
        9901
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x79BA5097"
    },
    "262": {
      "fn": null,
      "offset": [
        642,
        9901
      ],
      "op": "EQ",
      "path": "6"
    },
    "263": {
      "fn": null,
      "offset": [
        642,
        9901
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x3B3"
    },
    "266": {
      "fn": null,
      "offset": [
        642,
        9901
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "267": {
      "fn": null,
      "offset": [
        642,
        9901
      ],
      "op": "DUP1",
      "path": "6"
    },
    "268": {
      "fn": null,
      "offset": [
        642,
        9901
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x7B0A47EE"
    },
    "273": {
      "fn": null,
      "offset": [
        642,
        9901
      ],
      "op": "EQ",
      "path": "6"
    },
    "274": {
      "fn": null,
      "offset": [
        642,
        9901
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x3BB"
    },
    "277": {
      "fn": null,
      "offset": [
        642,
        9901
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "278": {
      "fn": null,
      "offset": [
        642,
        9901
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "280": {
      "fn": null,
      "offset": [
        642,
        9901
      ],
      "op": "DUP1",
      "path": "6"
    },
    "281": {
      "fn": null,
      "offset": [
        642,
        9901
      ],
      "op": "REVERT",
      "path": "6"
    },
    "282": {
      "fn": null,
      "offset": [
        642,
        9901
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "283": {
      "fn": null,
      "offset": [
        642,
        9901
      ],
      "op": "DUP1",
      "path": "6"
    },
    "284": {
      "fn": null,
      "offset": [
        642,
        9901
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x33BDDBC6"
    },
    "289": {
      "fn": null,
      "offset": [
        642,
        9901
      ],
      "op": "GT",
      "path": "6"
    },
    "290": {
      "fn": null,
      "offset": [
        642,
        9901
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x192"
    },
    "293": {
      "fn": null,
      "offset": [
        642,
        9901
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "294": {
      "fn": null,
      "offset": [
        642,
        9901
      ],
      "op": "DUP1",
      "path": "6"
    },
    "295": {
      "fn": null,
      "offset": [
        642,
        9901
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x3FC6DF6E"
    },
    "300": {
      "fn": null,
      "offset": [
        642,
        9901
      ],
      "op": "GT",
      "path": "6"
    },
    "301": {
      "fn": null,
      "offset": [
        642,
        9901
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x161"
    },
    "304": {
      "fn": null,
      "offset": [
        642,
        9901
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "305": {
      "fn": null,
      "offset": [
        642,
        9901
      ],
      "op": "DUP1",
      "path": "6"
    },
    "306": {
      "fn": null,
      "offset": [
        642,
        9901
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x3FC6DF6E"
    },
    "311": {
      "fn": null,
      "offset": [
        642,
        9901
      ],
      "op": "EQ",
      "path": "6"
    },
    "312": {
      "fn": null,
      "offset": [
        642,
        9901
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2FF"
    },
    "315": {
      "fn": null,
      "offset": [
        642,
        9901
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "316": {
      "fn": null,
      "offset": [
        642,
        9901
      ],
      "op": "DUP1",
      "path": "6"
    },
    "317": {
      "fn": null,
      "offset": [
        642,
        9901
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x53A47BB7"
    },
    "322": {
      "fn": null,
      "offset": [
        642,
        9901
      ],
      "op": "EQ",
      "path": "6"
    },
    "323": {
      "fn": null,
      "offset": [
        642,
        9901
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x312"
    },
    "326": {
      "fn": null,
      "offset": [
        642,
        9901
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "327": {
      "fn": null,
      "offset": [
        642,
        9901
      ],
      "op": "DUP1",
      "path": "6"
    },
    "328": {
      "fn": null,
      "offset": [
        642,
        9901
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x556F6E6B"
    },
    "333": {
      "fn": null,
      "offset": [
        642,
        9901
      ],
      "op": "EQ",
      "path": "6"
    },
    "334": {
      "fn": null,
      "offset": [
        642,
        9901
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x325"
    },
    "337": {
      "fn": null,
      "offset": [
        642,
        9901
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "338": {
      "fn": null,
      "offset": [
        642,
        9901
      ],
      "op": "DUP1",
      "path": "6"
    },
    "339": {
      "fn": null,
      "offset": [
        642,
        9901
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x6BE7BB1F"
    },
    "344": {
      "fn": null,
      "offset": [
        642,
        9901
      ],
      "op": "EQ",
      "path": "6"
    },
    "345": {
      "fn": null,
      "offset": [
        642,
        9901
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x338"
    },
    "348": {
      "fn": null,
      "offset": [
        642,
        9901
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "349": {
      "fn": null,
      "offset": [
        642,
        9901
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "351": {
      "fn": null,
      "offset": [
        642,
        9901
      ],
      "op": "DUP1",
      "path": "6"
    },
    "352": {
      "fn": null,
      "offset": [
        642,
        9901
      ],
      "op": "REVERT",
      "path": "6"
    },
    "353": {
      "fn": null,
      "offset": [
        642,
        9901
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "354": {
      "fn": null,
      "offset": [
        642,
        9901
      ],
      "op": "DUP1",
      "path": "6"
    },
    "355": {
      "fn": null,
      "offset": [
        642,
        9901
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x33BDDBC6"
    },
    "360": {
      "fn": null,
      "offset": [
        642,
        9901
      ],
      "op": "EQ",
      "path": "6"
    },
    "361": {
      "fn": null,
      "offset": [
        642,
        9901
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2B0"
    },
    "364": {
      "fn": null,
      "offset": [
        642,
        9901
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "365": {
      "fn": null,
      "offset": [
        642,
        9901
      ],
      "op": "DUP1",
      "path": "6"
    },
    "366": {
      "fn": null,
      "offset": [
        642,
        9901
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x386A9525"
    },
    "371": {
      "fn": null,
      "offset": [
        642,
        9901
      ],
      "op": "EQ",
      "path": "6"
    },
    "372": {
      "fn": null,
      "offset": [
        642,
        9901
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2DB"
    },
    "375": {
      "fn": null,
      "offset": [
        642,
        9901
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "376": {
      "fn": null,
      "offset": [
        642,
        9901
      ],
      "op": "DUP1",
      "path": "6"
    },
    "377": {
      "fn": null,
      "offset": [
        642,
        9901
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x3C6B16AB"
    },
    "382": {
      "fn": null,
      "offset": [
        642,
        9901
      ],
      "op": "EQ",
      "path": "6"
    },
    "383": {
      "fn": null,
      "offset": [
        642,
        9901
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2E4"
    },
    "386": {
      "fn": null,
      "offset": [
        642,
        9901
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "387": {
      "fn": null,
      "offset": [
        642,
        9901
      ],
      "op": "DUP1",
      "path": "6"
    },
    "388": {
      "fn": null,
      "offset": [
        642,
        9901
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x3D18B912"
    },
    "393": {
      "fn": null,
      "offset": [
        642,
        9901
      ],
      "op": "EQ",
      "path": "6"
    },
    "394": {
      "fn": null,
      "offset": [
        642,
        9901
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2F7"
    },
    "397": {
      "fn": null,
      "offset": [
        642,
        9901
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "398": {
      "fn": null,
      "offset": [
        642,
        9901
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "400": {
      "fn": null,
      "offset": [
        642,
        9901
      ],
      "op": "DUP1",
      "path": "6"
    },
    "401": {
      "fn": null,
      "offset": [
        642,
        9901
      ],
      "op": "REVERT",
      "path": "6"
    },
    "402": {
      "fn": null,
      "offset": [
        642,
        9901
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "403": {
      "fn": null,
      "offset": [
        642,
        9901
      ],
      "op": "DUP1",
      "path": "6"
    },
    "404": {
      "fn": null,
      "offset": [
        642,
        9901
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x19762143"
    },
    "409": {
      "fn": null,
      "offset": [
        642,
        9901
      ],
      "op": "GT",
      "path": "6"
    },
    "410": {
      "fn": null,
      "offset": [
        642,
        9901
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1CE"
    },
    "413": {
      "fn": null,
      "offset": [
        642,
        9901
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "414": {
      "fn": null,
      "offset": [
        642,
        9901
      ],
      "op": "DUP1",
      "path": "6"
    },
    "415": {
      "fn": null,
      "offset": [
        642,
        9901
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x19762143"
    },
    "420": {
      "fn": null,
      "offset": [
        642,
        9901
      ],
      "op": "EQ",
      "path": "6"
    },
    "421": {
      "fn": null,
      "offset": [
        642,
        9901
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x262"
    },
    "424": {
      "fn": null,
      "offset": [
        642,
        9901
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "425": {
      "fn": null,
      "offset": [
        642,
        9901
      ],
      "op": "DUP1",
      "path": "6"
    },
    "426": {
      "fn": null,
      "offset": [
        642,
        9901
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x1C1F78EB"
    },
    "431": {
      "fn": null,
      "offset": [
        642,
        9901
      ],
      "op": "EQ",
      "path": "6"
    },
    "432": {
      "fn": null,
      "offset": [
        642,
        9901
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x275"
    },
    "435": {
      "fn": null,
      "offset": [
        642,
        9901
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "436": {
      "fn": null,
      "offset": [
        642,
        9901
      ],
      "op": "DUP1",
      "path": "6"
    },
    "437": {
      "fn": null,
      "offset": [
        642,
        9901
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x1E02CEE3"
    },
    "442": {
      "fn": null,
      "offset": [
        642,
        9901
      ],
      "op": "EQ",
      "path": "6"
    },
    "443": {
      "fn": null,
      "offset": [
        642,
        9901
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x27D"
    },
    "446": {
      "fn": null,
      "offset": [
        642,
        9901
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "447": {
      "fn": null,
      "offset": [
        642,
        9901
      ],
      "op": "DUP1",
      "path": "6"
    },
    "448": {
      "fn": null,
      "offset": [
        642,
        9901
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x2E1A7D4D"
    },
    "453": {
      "fn": null,
      "offset": [
        642,
        9901
      ],
      "op": "EQ",
      "path": "6"
    },
    "454": {
      "fn": null,
      "offset": [
        642,
        9901
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x29D"
    },
    "457": {
      "fn": null,
      "offset": [
        642,
        9901
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "458": {
      "fn": null,
      "offset": [
        642,
        9901
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "460": {
      "fn": null,
      "offset": [
        642,
        9901
      ],
      "op": "DUP1",
      "path": "6"
    },
    "461": {
      "fn": null,
      "offset": [
        642,
        9901
      ],
      "op": "REVERT",
      "path": "6"
    },
    "462": {
      "fn": null,
      "offset": [
        642,
        9901
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "463": {
      "fn": null,
      "offset": [
        642,
        9901
      ],
      "op": "DUP1",
      "path": "6"
    },
    "464": {
      "fn": null,
      "offset": [
        642,
        9901
      ],
      "op": "PUSH3",
      "path": "6",
      "value": "0x8CC262"
    },
    "468": {
      "fn": null,
      "offset": [
        642,
        9901
      ],
      "op": "EQ",
      "path": "6"
    },
    "469": {
      "fn": null,
      "offset": [
        642,
        9901
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1FF"
    },
    "472": {
      "fn": null,
      "offset": [
        642,
        9901
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "473": {
      "fn": null,
      "offset": [
        642,
        9901
      ],
      "op": "DUP1",
      "path": "6"
    },
    "474": {
      "fn": null,
      "offset": [
        642,
        9901
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x700037D"
    },
    "479": {
      "fn": null,
      "offset": [
        642,
        9901
      ],
      "op": "EQ",
      "path": "6"
    },
    "480": {
      "fn": null,
      "offset": [
        642,
        9901
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x225"
    },
    "483": {
      "fn": null,
      "offset": [
        642,
        9901
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "484": {
      "fn": null,
      "offset": [
        642,
        9901
      ],
      "op": "DUP1",
      "path": "6"
    },
    "485": {
      "fn": null,
      "offset": [
        642,
        9901
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x1627540C"
    },
    "490": {
      "fn": null,
      "offset": [
        642,
        9901
      ],
      "op": "EQ",
      "path": "6"
    },
    "491": {
      "fn": null,
      "offset": [
        642,
        9901
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x245"
    },
    "494": {
      "fn": null,
      "offset": [
        642,
        9901
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "495": {
      "fn": null,
      "offset": [
        642,
        9901
      ],
      "op": "DUP1",
      "path": "6"
    },
    "496": {
      "fn": null,
      "offset": [
        642,
        9901
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x18160DDD"
    },
    "501": {
      "fn": null,
      "offset": [
        642,
        9901
      ],
      "op": "EQ",
      "path": "6"
    },
    "502": {
      "fn": null,
      "offset": [
        642,
        9901
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x25A"
    },
    "505": {
      "fn": null,
      "offset": [
        642,
        9901
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "506": {
      "fn": null,
      "offset": [
        642,
        9901
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "507": {
      "fn": null,
      "offset": [
        642,
        9901
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "509": {
      "fn": null,
      "offset": [
        642,
        9901
      ],
      "op": "DUP1",
      "path": "6"
    },
    "510": {
      "first_revert": true,
      "fn": null,
      "offset": [
        642,
        9901
      ],
      "op": "REVERT",
      "path": "6"
    },
    "511": {
      "fn": "MockMoolaStakingRewards.earned",
      "offset": [
        3073,
        3278
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "512": {
      "fn": "MockMoolaStakingRewards.earned",
      "offset": [
        3073,
        3278
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x212"
    },
    "515": {
      "fn": "MockMoolaStakingRewards.earned",
      "offset": [
        3073,
        3278
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x20D"
    },
    "518": {
      "fn": "MockMoolaStakingRewards.earned",
      "offset": [
        3073,
        3278
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "519": {
      "fn": "MockMoolaStakingRewards.earned",
      "offset": [
        3073,
        3278
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "521": {
      "fn": "MockMoolaStakingRewards.earned",
      "offset": [
        3073,
        3278
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1BE6"
    },
    "524": {
      "fn": "MockMoolaStakingRewards.earned",
      "jump": "i",
      "offset": [
        3073,
        3278
      ],
      "op": "JUMP",
      "path": "6"
    },
    "525": {
      "fn": "MockMoolaStakingRewards.earned",
      "offset": [
        3073,
        3278
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "526": {
      "fn": "MockMoolaStakingRewards.earned",
      "offset": [
        3073,
        3278
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x4B1"
    },
    "529": {
      "fn": "MockMoolaStakingRewards.earned",
      "jump": "i",
      "offset": [
        3073,
        3278
      ],
      "op": "JUMP",
      "path": "6"
    },
    "530": {
      "fn": "MockMoolaStakingRewards.earned",
      "offset": [
        3073,
        3278
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "531": {
      "fn": "MockMoolaStakingRewards.earned",
      "offset": [
        3073,
        3278
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "533": {
      "fn": "MockMoolaStakingRewards.earned",
      "offset": [
        3073,
        3278
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "534": {
      "op": "SWAP1"
    },
    "535": {
      "op": "DUP2"
    },
    "536": {
      "op": "MSTORE"
    },
    "537": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "539": {
      "op": "ADD"
    },
    "540": {
      "fn": "MockMoolaStakingRewards.earned",
      "offset": [
        3073,
        3278
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "541": {
      "fn": "MockMoolaStakingRewards.earned",
      "offset": [
        3073,
        3278
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "543": {
      "fn": "MockMoolaStakingRewards.earned",
      "offset": [
        3073,
        3278
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "544": {
      "fn": "MockMoolaStakingRewards.earned",
      "offset": [
        3073,
        3278
      ],
      "op": "DUP1",
      "path": "6"
    },
    "545": {
      "fn": "MockMoolaStakingRewards.earned",
      "offset": [
        3073,
        3278
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "546": {
      "fn": "MockMoolaStakingRewards.earned",
      "offset": [
        3073,
        3278
      ],
      "op": "SUB",
      "path": "6"
    },
    "547": {
      "fn": "MockMoolaStakingRewards.earned",
      "offset": [
        3073,
        3278
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "548": {
      "fn": "MockMoolaStakingRewards.earned",
      "offset": [
        3073,
        3278
      ],
      "op": "RETURN",
      "path": "6"
    },
    "549": {
      "offset": [
        1250,
        1292
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "550": {
      "fn": "MockMoolaStakingRewards.earned",
      "offset": [
        1250,
        1292
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x212"
    },
    "553": {
      "fn": "MockMoolaStakingRewards.earned",
      "offset": [
        1250,
        1292
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x233"
    },
    "556": {
      "fn": "MockMoolaStakingRewards.earned",
      "offset": [
        1250,
        1292
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "557": {
      "fn": "MockMoolaStakingRewards.earned",
      "offset": [
        1250,
        1292
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "559": {
      "fn": "MockMoolaStakingRewards.earned",
      "offset": [
        1250,
        1292
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1BE6"
    },
    "562": {
      "fn": "MockMoolaStakingRewards.earned",
      "jump": "i",
      "offset": [
        1250,
        1292
      ],
      "op": "JUMP",
      "path": "6"
    },
    "563": {
      "fn": "MockMoolaStakingRewards.earned",
      "offset": [
        1250,
        1292
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "564": {
      "fn": "MockMoolaStakingRewards.earned",
      "offset": [
        1250,
        1292
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xB"
    },
    "566": {
      "fn": "MockMoolaStakingRewards.earned",
      "offset": [
        1250,
        1292
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "568": {
      "fn": "MockMoolaStakingRewards.earned",
      "offset": [
        1250,
        1292
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "569": {
      "fn": "MockMoolaStakingRewards.earned",
      "offset": [
        1250,
        1292
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "571": {
      "fn": "MockMoolaStakingRewards.earned",
      "offset": [
        1250,
        1292
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "572": {
      "fn": "MockMoolaStakingRewards.earned",
      "offset": [
        1250,
        1292
      ],
      "op": "DUP2",
      "path": "6"
    },
    "573": {
      "fn": "MockMoolaStakingRewards.earned",
      "offset": [
        1250,
        1292
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "574": {
      "fn": "MockMoolaStakingRewards.earned",
      "offset": [
        1250,
        1292
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "576": {
      "fn": "MockMoolaStakingRewards.earned",
      "offset": [
        1250,
        1292
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "577": {
      "fn": "MockMoolaStakingRewards.earned",
      "offset": [
        1250,
        1292
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "578": {
      "fn": "MockMoolaStakingRewards.earned",
      "offset": [
        1250,
        1292
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "579": {
      "fn": "MockMoolaStakingRewards.earned",
      "offset": [
        1250,
        1292
      ],
      "op": "DUP2",
      "path": "6"
    },
    "580": {
      "fn": "MockMoolaStakingRewards.earned",
      "offset": [
        1250,
        1292
      ],
      "op": "JUMP",
      "path": "6"
    },
    "581": {
      "fn": "Owned.nominateNewOwner",
      "offset": [
        793,
        931
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "582": {
      "fn": "Owned.nominateNewOwner",
      "offset": [
        793,
        931
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x258"
    },
    "585": {
      "fn": "Owned.nominateNewOwner",
      "offset": [
        793,
        931
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x253"
    },
    "588": {
      "fn": "Owned.nominateNewOwner",
      "offset": [
        793,
        931
      ],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "589": {
      "fn": "Owned.nominateNewOwner",
      "offset": [
        793,
        931
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "591": {
      "fn": "Owned.nominateNewOwner",
      "offset": [
        793,
        931
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1BE6"
    },
    "594": {
      "fn": "Owned.nominateNewOwner",
      "jump": "i",
      "offset": [
        793,
        931
      ],
      "op": "JUMP",
      "path": "7"
    },
    "595": {
      "fn": "Owned.nominateNewOwner",
      "offset": [
        793,
        931
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "596": {
      "fn": "Owned.nominateNewOwner",
      "offset": [
        793,
        931
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x52F"
    },
    "599": {
      "fn": "Owned.nominateNewOwner",
      "jump": "i",
      "offset": [
        793,
        931
      ],
      "op": "JUMP",
      "path": "7"
    },
    "600": {
      "fn": "Owned.nominateNewOwner",
      "offset": [
        793,
        931
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "601": {
      "fn": "Owned.nominateNewOwner",
      "offset": [
        793,
        931
      ],
      "op": "STOP",
      "path": "7"
    },
    "602": {
      "fn": "MockMoolaStakingRewards.totalSupply",
      "offset": [
        2361,
        2461
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "603": {
      "fn": "MockMoolaStakingRewards.totalSupply",
      "offset": [
        2442,
        2454
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 0,
      "value": "0xF"
    },
    "605": {
      "fn": "MockMoolaStakingRewards.totalSupply",
      "offset": [
        2442,
        2454
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "606": {
      "fn": "MockMoolaStakingRewards.totalSupply",
      "offset": [
        2361,
        2461
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x212"
    },
    "609": {
      "fn": "MockMoolaStakingRewards.totalSupply",
      "offset": [
        2361,
        2461
      ],
      "op": "JUMP",
      "path": "6"
    },
    "610": {
      "fn": "RewardsDistributionRecipient.setRewardsDistribution",
      "offset": [
        1927,
        2067
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "611": {
      "fn": "RewardsDistributionRecipient.setRewardsDistribution",
      "offset": [
        1927,
        2067
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x258"
    },
    "614": {
      "fn": "RewardsDistributionRecipient.setRewardsDistribution",
      "offset": [
        1927,
        2067
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x270"
    },
    "617": {
      "fn": "RewardsDistributionRecipient.setRewardsDistribution",
      "offset": [
        1927,
        2067
      ],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "618": {
      "fn": "RewardsDistributionRecipient.setRewardsDistribution",
      "offset": [
        1927,
        2067
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "620": {
      "fn": "RewardsDistributionRecipient.setRewardsDistribution",
      "offset": [
        1927,
        2067
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1BE6"
    },
    "623": {
      "fn": "RewardsDistributionRecipient.setRewardsDistribution",
      "jump": "i",
      "offset": [
        1927,
        2067
      ],
      "op": "JUMP",
      "path": "7"
    },
    "624": {
      "fn": "RewardsDistributionRecipient.setRewardsDistribution",
      "offset": [
        1927,
        2067
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "625": {
      "fn": "RewardsDistributionRecipient.setRewardsDistribution",
      "offset": [
        1927,
        2067
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x58C"
    },
    "628": {
      "fn": "RewardsDistributionRecipient.setRewardsDistribution",
      "jump": "i",
      "offset": [
        1927,
        2067
      ],
      "op": "JUMP",
      "path": "7"
    },
    "629": {
      "fn": "MockMoolaStakingRewards.getRewardForDuration",
      "offset": [
        4840,
        4968
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "630": {
      "fn": "MockMoolaStakingRewards.getRewardForDuration",
      "offset": [
        4840,
        4968
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x212"
    },
    "633": {
      "fn": "MockMoolaStakingRewards.getRewardForDuration",
      "offset": [
        4840,
        4968
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x5B6"
    },
    "636": {
      "fn": "MockMoolaStakingRewards.getRewardForDuration",
      "jump": "i",
      "offset": [
        4840,
        4968
      ],
      "op": "JUMP",
      "path": "6"
    },
    "637": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3284,
        4834
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "638": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3284,
        4834
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x290"
    },
    "641": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3284,
        4834
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x28B"
    },
    "644": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3284,
        4834
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "645": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3284,
        4834
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "647": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3284,
        4834
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1BE6"
    },
    "650": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "jump": "i",
      "offset": [
        3284,
        4834
      ],
      "op": "JUMP",
      "path": "6"
    },
    "651": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3284,
        4834
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "652": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3284,
        4834
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x5D4"
    },
    "655": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "jump": "i",
      "offset": [
        3284,
        4834
      ],
      "op": "JUMP",
      "path": "6"
    },
    "656": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3284,
        4834
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "657": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3284,
        4834
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "659": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3284,
        4834
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "660": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3284,
        4834
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x21C"
    },
    "663": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3284,
        4834
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "664": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3284,
        4834
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "665": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3284,
        4834
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1CD8"
    },
    "668": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "jump": "i",
      "offset": [
        3284,
        4834
      ],
      "op": "JUMP",
      "path": "6"
    },
    "669": {
      "fn": "MockMoolaStakingRewards.withdraw",
      "offset": [
        5551,
        5960
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "670": {
      "fn": "MockMoolaStakingRewards.withdraw",
      "offset": [
        5551,
        5960
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x258"
    },
    "673": {
      "fn": "MockMoolaStakingRewards.withdraw",
      "offset": [
        5551,
        5960
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2AB"
    },
    "676": {
      "fn": "MockMoolaStakingRewards.withdraw",
      "offset": [
        5551,
        5960
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "677": {
      "fn": "MockMoolaStakingRewards.withdraw",
      "offset": [
        5551,
        5960
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "679": {
      "fn": "MockMoolaStakingRewards.withdraw",
      "offset": [
        5551,
        5960
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1C8A"
    },
    "682": {
      "fn": "MockMoolaStakingRewards.withdraw",
      "jump": "i",
      "offset": [
        5551,
        5960
      ],
      "op": "JUMP",
      "path": "6"
    },
    "683": {
      "fn": "MockMoolaStakingRewards.withdraw",
      "offset": [
        5551,
        5960
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "684": {
      "fn": "MockMoolaStakingRewards.withdraw",
      "offset": [
        5551,
        5960
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xA7C"
    },
    "687": {
      "fn": "MockMoolaStakingRewards.withdraw",
      "jump": "i",
      "offset": [
        5551,
        5960
      ],
      "op": "JUMP",
      "path": "6"
    },
    "688": {
      "offset": [
        950,
        987
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "689": {
      "fn": "MockMoolaStakingRewards.withdraw",
      "offset": [
        950,
        987
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2C3"
    },
    "692": {
      "fn": "MockMoolaStakingRewards.withdraw",
      "offset": [
        950,
        987
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2BE"
    },
    "695": {
      "fn": "MockMoolaStakingRewards.withdraw",
      "offset": [
        950,
        987
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "696": {
      "fn": "MockMoolaStakingRewards.withdraw",
      "offset": [
        950,
        987
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "698": {
      "fn": "MockMoolaStakingRewards.withdraw",
      "offset": [
        950,
        987
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1C8A"
    },
    "701": {
      "fn": "MockMoolaStakingRewards.withdraw",
      "jump": "i",
      "offset": [
        950,
        987
      ],
      "op": "JUMP",
      "path": "6"
    },
    "702": {
      "fn": "MockMoolaStakingRewards.withdraw",
      "offset": [
        950,
        987
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "703": {
      "fn": "MockMoolaStakingRewards.withdraw",
      "offset": [
        950,
        987
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xC82"
    },
    "706": {
      "fn": "MockMoolaStakingRewards.withdraw",
      "jump": "i",
      "offset": [
        950,
        987
      ],
      "op": "JUMP",
      "path": "6"
    },
    "707": {
      "fn": "MockMoolaStakingRewards.withdraw",
      "offset": [
        950,
        987
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "708": {
      "fn": "MockMoolaStakingRewards.withdraw",
      "offset": [
        950,
        987
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "710": {
      "fn": "MockMoolaStakingRewards.withdraw",
      "offset": [
        950,
        987
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "711": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "713": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "715": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "717": {
      "op": "SHL"
    },
    "718": {
      "op": "SUB"
    },
    "719": {
      "op": "SWAP1"
    },
    "720": {
      "op": "SWAP2"
    },
    "721": {
      "op": "AND"
    },
    "722": {
      "op": "DUP2"
    },
    "723": {
      "op": "MSTORE"
    },
    "724": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "726": {
      "op": "ADD"
    },
    "727": {
      "offset": [
        950,
        987
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x21C"
    },
    "730": {
      "op": "JUMP"
    },
    "731": {
      "offset": [
        1065,
        1104
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "732": {
      "fn": "MockMoolaStakingRewards.withdraw",
      "offset": [
        1065,
        1104
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x212"
    },
    "735": {
      "fn": "MockMoolaStakingRewards.withdraw",
      "offset": [
        1065,
        1104
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x7"
    },
    "737": {
      "fn": "MockMoolaStakingRewards.withdraw",
      "offset": [
        1065,
        1104
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "738": {
      "fn": "MockMoolaStakingRewards.withdraw",
      "offset": [
        1065,
        1104
      ],
      "op": "DUP2",
      "path": "6"
    },
    "739": {
      "fn": "MockMoolaStakingRewards.withdraw",
      "offset": [
        1065,
        1104
      ],
      "op": "JUMP",
      "path": "6"
    },
    "740": {
      "fn": "MockMoolaStakingRewards.notifyRewardAmount",
      "offset": [
        6974,
        8047
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "741": {
      "fn": "MockMoolaStakingRewards.notifyRewardAmount",
      "offset": [
        6974,
        8047
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x258"
    },
    "744": {
      "fn": "MockMoolaStakingRewards.notifyRewardAmount",
      "offset": [
        6974,
        8047
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2F2"
    },
    "747": {
      "fn": "MockMoolaStakingRewards.notifyRewardAmount",
      "offset": [
        6974,
        8047
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "748": {
      "fn": "MockMoolaStakingRewards.notifyRewardAmount",
      "offset": [
        6974,
        8047
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "750": {
      "fn": "MockMoolaStakingRewards.notifyRewardAmount",
      "offset": [
        6974,
        8047
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1C8A"
    },
    "753": {
      "fn": "MockMoolaStakingRewards.notifyRewardAmount",
      "jump": "i",
      "offset": [
        6974,
        8047
      ],
      "op": "JUMP",
      "path": "6"
    },
    "754": {
      "fn": "MockMoolaStakingRewards.notifyRewardAmount",
      "offset": [
        6974,
        8047
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "755": {
      "fn": "MockMoolaStakingRewards.notifyRewardAmount",
      "offset": [
        6974,
        8047
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xCAC"
    },
    "758": {
      "fn": "MockMoolaStakingRewards.notifyRewardAmount",
      "jump": "i",
      "offset": [
        6974,
        8047
      ],
      "op": "JUMP",
      "path": "6"
    },
    "759": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        5966,
        6805
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "760": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        5966,
        6805
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x258"
    },
    "763": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        5966,
        6805
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xF31"
    },
    "766": {
      "fn": "MockMoolaStakingRewards.getReward",
      "jump": "i",
      "offset": [
        5966,
        6805
      ],
      "op": "JUMP",
      "path": "6"
    },
    "767": {
      "offset": [
        1662,
        1696
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "768": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        1662,
        1696
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x2"
    },
    "770": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        1662,
        1696
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "771": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        1662,
        1696
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2C3"
    },
    "774": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        1662,
        1696
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "775": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "777": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "779": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "781": {
      "op": "SHL"
    },
    "782": {
      "op": "SUB"
    },
    "783": {
      "offset": [
        1662,
        1696
      ],
      "op": "AND",
      "path": "7"
    },
    "784": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        1662,
        1696
      ],
      "op": "DUP2",
      "path": "7"
    },
    "785": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        1662,
        1696
      ],
      "op": "JUMP",
      "path": "7"
    },
    "786": {
      "offset": [
        577,
        606
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "787": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        577,
        606
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1"
    },
    "789": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        577,
        606
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "790": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        577,
        606
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2C3"
    },
    "793": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        577,
        606
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "794": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "796": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "798": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "800": {
      "op": "SHL"
    },
    "801": {
      "op": "SUB"
    },
    "802": {
      "offset": [
        577,
        606
      ],
      "op": "AND",
      "path": "7"
    },
    "803": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        577,
        606
      ],
      "op": "DUP2",
      "path": "7"
    },
    "804": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        577,
        606
      ],
      "op": "JUMP",
      "path": "7"
    },
    "805": {
      "fn": "MockMoolaStakingRewards.updatePeriodFinish",
      "offset": [
        8089,
        8292
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "806": {
      "fn": "MockMoolaStakingRewards.updatePeriodFinish",
      "offset": [
        8089,
        8292
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x258"
    },
    "809": {
      "fn": "MockMoolaStakingRewards.updatePeriodFinish",
      "offset": [
        8089,
        8292
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x333"
    },
    "812": {
      "fn": "MockMoolaStakingRewards.updatePeriodFinish",
      "offset": [
        8089,
        8292
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "813": {
      "fn": "MockMoolaStakingRewards.updatePeriodFinish",
      "offset": [
        8089,
        8292
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "815": {
      "fn": "MockMoolaStakingRewards.updatePeriodFinish",
      "offset": [
        8089,
        8292
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1C8A"
    },
    "818": {
      "fn": "MockMoolaStakingRewards.updatePeriodFinish",
      "jump": "i",
      "offset": [
        8089,
        8292
      ],
      "op": "JUMP",
      "path": "6"
    },
    "819": {
      "fn": "MockMoolaStakingRewards.updatePeriodFinish",
      "offset": [
        8089,
        8292
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "820": {
      "fn": "MockMoolaStakingRewards.updatePeriodFinish",
      "offset": [
        8089,
        8292
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x118D"
    },
    "823": {
      "fn": "MockMoolaStakingRewards.updatePeriodFinish",
      "jump": "i",
      "offset": [
        8089,
        8292
      ],
      "op": "JUMP",
      "path": "6"
    },
    "824": {
      "offset": [
        1298,
        1367
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "825": {
      "fn": "MockMoolaStakingRewards.updatePeriodFinish",
      "offset": [
        1298,
        1367
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x212"
    },
    "828": {
      "fn": "MockMoolaStakingRewards.updatePeriodFinish",
      "offset": [
        1298,
        1367
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x346"
    },
    "831": {
      "fn": "MockMoolaStakingRewards.updatePeriodFinish",
      "offset": [
        1298,
        1367
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "832": {
      "fn": "MockMoolaStakingRewards.updatePeriodFinish",
      "offset": [
        1298,
        1367
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "834": {
      "fn": "MockMoolaStakingRewards.updatePeriodFinish",
      "offset": [
        1298,
        1367
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1C03"
    },
    "837": {
      "fn": "MockMoolaStakingRewards.updatePeriodFinish",
      "jump": "i",
      "offset": [
        1298,
        1367
      ],
      "op": "JUMP",
      "path": "6"
    },
    "838": {
      "fn": "MockMoolaStakingRewards.updatePeriodFinish",
      "offset": [
        1298,
        1367
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "839": {
      "fn": "MockMoolaStakingRewards.updatePeriodFinish",
      "offset": [
        1298,
        1367
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xC"
    },
    "841": {
      "fn": "MockMoolaStakingRewards.updatePeriodFinish",
      "offset": [
        1298,
        1367
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "843": {
      "fn": "MockMoolaStakingRewards.updatePeriodFinish",
      "offset": [
        1298,
        1367
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "844": {
      "fn": "MockMoolaStakingRewards.updatePeriodFinish",
      "offset": [
        1298,
        1367
      ],
      "op": "DUP2",
      "path": "6"
    },
    "845": {
      "fn": "MockMoolaStakingRewards.updatePeriodFinish",
      "offset": [
        1298,
        1367
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "846": {
      "fn": "MockMoolaStakingRewards.updatePeriodFinish",
      "offset": [
        1298,
        1367
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "848": {
      "fn": "MockMoolaStakingRewards.updatePeriodFinish",
      "offset": [
        1298,
        1367
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "849": {
      "fn": "MockMoolaStakingRewards.updatePeriodFinish",
      "offset": [
        1298,
        1367
      ],
      "op": "DUP4",
      "path": "6"
    },
    "850": {
      "fn": "MockMoolaStakingRewards.updatePeriodFinish",
      "offset": [
        1298,
        1367
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "851": {
      "fn": "MockMoolaStakingRewards.updatePeriodFinish",
      "offset": [
        1298,
        1367
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "853": {
      "fn": "MockMoolaStakingRewards.updatePeriodFinish",
      "offset": [
        1298,
        1367
      ],
      "op": "DUP1",
      "path": "6"
    },
    "854": {
      "fn": "MockMoolaStakingRewards.updatePeriodFinish",
      "offset": [
        1298,
        1367
      ],
      "op": "DUP5",
      "path": "6"
    },
    "855": {
      "fn": "MockMoolaStakingRewards.updatePeriodFinish",
      "offset": [
        1298,
        1367
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "856": {
      "fn": "MockMoolaStakingRewards.updatePeriodFinish",
      "offset": [
        1298,
        1367
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "857": {
      "fn": "MockMoolaStakingRewards.updatePeriodFinish",
      "offset": [
        1298,
        1367
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "858": {
      "fn": "MockMoolaStakingRewards.updatePeriodFinish",
      "offset": [
        1298,
        1367
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "859": {
      "fn": "MockMoolaStakingRewards.updatePeriodFinish",
      "offset": [
        1298,
        1367
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "860": {
      "fn": "MockMoolaStakingRewards.updatePeriodFinish",
      "offset": [
        1298,
        1367
      ],
      "op": "DUP3",
      "path": "6"
    },
    "861": {
      "fn": "MockMoolaStakingRewards.updatePeriodFinish",
      "offset": [
        1298,
        1367
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "862": {
      "fn": "MockMoolaStakingRewards.updatePeriodFinish",
      "offset": [
        1298,
        1367
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "863": {
      "fn": "MockMoolaStakingRewards.updatePeriodFinish",
      "offset": [
        1298,
        1367
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "864": {
      "fn": "MockMoolaStakingRewards.updatePeriodFinish",
      "offset": [
        1298,
        1367
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "865": {
      "fn": "MockMoolaStakingRewards.updatePeriodFinish",
      "offset": [
        1298,
        1367
      ],
      "op": "DUP2",
      "path": "6"
    },
    "866": {
      "fn": "MockMoolaStakingRewards.updatePeriodFinish",
      "offset": [
        1298,
        1367
      ],
      "op": "JUMP",
      "path": "6"
    },
    "867": {
      "fn": "MockMoolaStakingRewards.balanceOf",
      "offset": [
        2467,
        2586
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "868": {
      "fn": "MockMoolaStakingRewards.balanceOf",
      "offset": [
        2467,
        2586
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x212"
    },
    "871": {
      "fn": "MockMoolaStakingRewards.balanceOf",
      "offset": [
        2467,
        2586
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x371"
    },
    "874": {
      "fn": "MockMoolaStakingRewards.balanceOf",
      "offset": [
        2467,
        2586
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "875": {
      "fn": "MockMoolaStakingRewards.balanceOf",
      "offset": [
        2467,
        2586
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "877": {
      "fn": "MockMoolaStakingRewards.balanceOf",
      "offset": [
        2467,
        2586
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1BE6"
    },
    "880": {
      "fn": "MockMoolaStakingRewards.balanceOf",
      "jump": "i",
      "offset": [
        2467,
        2586
      ],
      "op": "JUMP",
      "path": "6"
    },
    "881": {
      "fn": "MockMoolaStakingRewards.balanceOf",
      "offset": [
        2467,
        2586
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "882": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "884": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "886": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "888": {
      "op": "SHL"
    },
    "889": {
      "op": "SUB"
    },
    "890": {
      "fn": "MockMoolaStakingRewards.balanceOf",
      "offset": [
        2561,
        2579
      ],
      "op": "AND",
      "path": "6",
      "statement": 1
    },
    "891": {
      "fn": "MockMoolaStakingRewards.balanceOf",
      "offset": [
        2535,
        2542
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "893": {
      "fn": "MockMoolaStakingRewards.balanceOf",
      "offset": [
        2561,
        2579
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "894": {
      "fn": "MockMoolaStakingRewards.balanceOf",
      "offset": [
        2561,
        2579
      ],
      "op": "DUP2",
      "path": "6"
    },
    "895": {
      "fn": "MockMoolaStakingRewards.balanceOf",
      "offset": [
        2561,
        2579
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "896": {
      "fn": "MockMoolaStakingRewards.balanceOf",
      "offset": [
        2561,
        2570
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x10"
    },
    "898": {
      "fn": "MockMoolaStakingRewards.balanceOf",
      "offset": [
        2561,
        2579
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "900": {
      "fn": "MockMoolaStakingRewards.balanceOf",
      "offset": [
        2561,
        2579
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "901": {
      "fn": "MockMoolaStakingRewards.balanceOf",
      "offset": [
        2561,
        2579
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "903": {
      "fn": "MockMoolaStakingRewards.balanceOf",
      "offset": [
        2561,
        2579
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "904": {
      "fn": "MockMoolaStakingRewards.balanceOf",
      "offset": [
        2561,
        2579
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "905": {
      "fn": "MockMoolaStakingRewards.balanceOf",
      "offset": [
        2561,
        2579
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "906": {
      "fn": "MockMoolaStakingRewards.balanceOf",
      "offset": [
        2561,
        2579
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "907": {
      "fn": "MockMoolaStakingRewards.balanceOf",
      "offset": [
        2467,
        2586
      ],
      "op": "JUMP",
      "path": "6"
    },
    "908": {
      "offset": [
        908,
        944
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "909": {
      "fn": "MockMoolaStakingRewards.balanceOf",
      "offset": [
        908,
        944
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2C3"
    },
    "912": {
      "fn": "MockMoolaStakingRewards.balanceOf",
      "offset": [
        908,
        944
      ],
      "op": "PUSH32",
      "path": "6",
      "value": "0x0"
    },
    "945": {
      "fn": "MockMoolaStakingRewards.balanceOf",
      "offset": [
        908,
        944
      ],
      "op": "DUP2",
      "path": "6"
    },
    "946": {
      "fn": "MockMoolaStakingRewards.balanceOf",
      "offset": [
        908,
        944
      ],
      "op": "JUMP",
      "path": "6"
    },
    "947": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        937,
        1203
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "948": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        937,
        1203
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x258"
    },
    "951": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        937,
        1203
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1252"
    },
    "954": {
      "fn": "Owned.acceptOwnership",
      "jump": "i",
      "offset": [
        937,
        1203
      ],
      "op": "JUMP",
      "path": "7"
    },
    "955": {
      "offset": [
        1030,
        1059
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "956": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        1030,
        1059
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x212"
    },
    "959": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        1030,
        1059
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x6"
    },
    "961": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        1030,
        1059
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "962": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        1030,
        1059
      ],
      "op": "DUP2",
      "path": "6"
    },
    "963": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        1030,
        1059
      ],
      "op": "JUMP",
      "path": "6"
    },
    "964": {
      "fn": "MockMoolaStakingRewards.lastTimeRewardApplicable",
      "offset": [
        2592,
        2730
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "965": {
      "fn": "MockMoolaStakingRewards.lastTimeRewardApplicable",
      "offset": [
        2592,
        2730
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x212"
    },
    "968": {
      "fn": "MockMoolaStakingRewards.lastTimeRewardApplicable",
      "offset": [
        2592,
        2730
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x133C"
    },
    "971": {
      "fn": "MockMoolaStakingRewards.lastTimeRewardApplicable",
      "jump": "i",
      "offset": [
        2592,
        2730
      ],
      "op": "JUMP",
      "path": "6"
    },
    "972": {
      "fn": "MockMoolaStakingRewards.recoverERC20",
      "offset": [
        8404,
        8702
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "973": {
      "fn": "MockMoolaStakingRewards.recoverERC20",
      "offset": [
        8404,
        8702
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x258"
    },
    "976": {
      "fn": "MockMoolaStakingRewards.recoverERC20",
      "offset": [
        8404,
        8702
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x3DA"
    },
    "979": {
      "fn": "MockMoolaStakingRewards.recoverERC20",
      "offset": [
        8404,
        8702
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "980": {
      "fn": "MockMoolaStakingRewards.recoverERC20",
      "offset": [
        8404,
        8702
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "982": {
      "fn": "MockMoolaStakingRewards.recoverERC20",
      "offset": [
        8404,
        8702
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1C3C"
    },
    "985": {
      "fn": "MockMoolaStakingRewards.recoverERC20",
      "jump": "i",
      "offset": [
        8404,
        8702
      ],
      "op": "JUMP",
      "path": "6"
    },
    "986": {
      "fn": "MockMoolaStakingRewards.recoverERC20",
      "offset": [
        8404,
        8702
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "987": {
      "fn": "MockMoolaStakingRewards.recoverERC20",
      "offset": [
        8404,
        8702
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x134A"
    },
    "990": {
      "fn": "MockMoolaStakingRewards.recoverERC20",
      "jump": "i",
      "offset": [
        8404,
        8702
      ],
      "op": "JUMP",
      "path": "6"
    },
    "991": {
      "offset": [
        1187,
        1244
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "992": {
      "fn": "MockMoolaStakingRewards.recoverERC20",
      "offset": [
        1187,
        1244
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x212"
    },
    "995": {
      "fn": "MockMoolaStakingRewards.recoverERC20",
      "offset": [
        1187,
        1244
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x3ED"
    },
    "998": {
      "fn": "MockMoolaStakingRewards.recoverERC20",
      "offset": [
        1187,
        1244
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "999": {
      "fn": "MockMoolaStakingRewards.recoverERC20",
      "offset": [
        1187,
        1244
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "1001": {
      "fn": "MockMoolaStakingRewards.recoverERC20",
      "offset": [
        1187,
        1244
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1BE6"
    },
    "1004": {
      "fn": "MockMoolaStakingRewards.recoverERC20",
      "jump": "i",
      "offset": [
        1187,
        1244
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1005": {
      "fn": "MockMoolaStakingRewards.recoverERC20",
      "offset": [
        1187,
        1244
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1006": {
      "fn": "MockMoolaStakingRewards.recoverERC20",
      "offset": [
        1187,
        1244
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xA"
    },
    "1008": {
      "fn": "MockMoolaStakingRewards.recoverERC20",
      "offset": [
        1187,
        1244
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "1010": {
      "fn": "MockMoolaStakingRewards.recoverERC20",
      "offset": [
        1187,
        1244
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1011": {
      "fn": "MockMoolaStakingRewards.recoverERC20",
      "offset": [
        1187,
        1244
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1013": {
      "fn": "MockMoolaStakingRewards.recoverERC20",
      "offset": [
        1187,
        1244
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1014": {
      "fn": "MockMoolaStakingRewards.recoverERC20",
      "offset": [
        1187,
        1244
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1015": {
      "fn": "MockMoolaStakingRewards.recoverERC20",
      "offset": [
        1187,
        1244
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1016": {
      "fn": "MockMoolaStakingRewards.recoverERC20",
      "offset": [
        1187,
        1244
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1018": {
      "fn": "MockMoolaStakingRewards.recoverERC20",
      "offset": [
        1187,
        1244
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1019": {
      "fn": "MockMoolaStakingRewards.recoverERC20",
      "offset": [
        1187,
        1244
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "1020": {
      "fn": "MockMoolaStakingRewards.recoverERC20",
      "offset": [
        1187,
        1244
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1021": {
      "fn": "MockMoolaStakingRewards.recoverERC20",
      "offset": [
        1187,
        1244
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1022": {
      "fn": "MockMoolaStakingRewards.recoverERC20",
      "offset": [
        1187,
        1244
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1023": {
      "offset": [
        551,
        571
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1024": {
      "fn": "MockMoolaStakingRewards.recoverERC20",
      "offset": [
        551,
        571
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1026": {
      "fn": "MockMoolaStakingRewards.recoverERC20",
      "offset": [
        551,
        571
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "1027": {
      "fn": "MockMoolaStakingRewards.recoverERC20",
      "offset": [
        551,
        571
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2C3"
    },
    "1030": {
      "fn": "MockMoolaStakingRewards.recoverERC20",
      "offset": [
        551,
        571
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1031": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1033": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1035": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1037": {
      "op": "SHL"
    },
    "1038": {
      "op": "SUB"
    },
    "1039": {
      "offset": [
        551,
        571
      ],
      "op": "AND",
      "path": "7"
    },
    "1040": {
      "fn": "MockMoolaStakingRewards.recoverERC20",
      "offset": [
        551,
        571
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1041": {
      "fn": "MockMoolaStakingRewards.recoverERC20",
      "offset": [
        551,
        571
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1042": {
      "offset": [
        1627,
        1682
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1043": {
      "fn": "MockMoolaStakingRewards.recoverERC20",
      "offset": [
        1627,
        1682
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2C3"
    },
    "1046": {
      "fn": "MockMoolaStakingRewards.recoverERC20",
      "offset": [
        1627,
        1682
      ],
      "op": "PUSH32",
      "path": "6",
      "value": "0x0"
    },
    "1079": {
      "fn": "MockMoolaStakingRewards.recoverERC20",
      "offset": [
        1627,
        1682
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1080": {
      "fn": "MockMoolaStakingRewards.recoverERC20",
      "offset": [
        1627,
        1682
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1081": {
      "fn": "MockMoolaStakingRewards.stake",
      "offset": [
        5056,
        5545
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1082": {
      "fn": "MockMoolaStakingRewards.stake",
      "offset": [
        5056,
        5545
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x258"
    },
    "1085": {
      "fn": "MockMoolaStakingRewards.stake",
      "offset": [
        5056,
        5545
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x447"
    },
    "1088": {
      "fn": "MockMoolaStakingRewards.stake",
      "offset": [
        5056,
        5545
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "1089": {
      "fn": "MockMoolaStakingRewards.stake",
      "offset": [
        5056,
        5545
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "1091": {
      "fn": "MockMoolaStakingRewards.stake",
      "offset": [
        5056,
        5545
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1C8A"
    },
    "1094": {
      "fn": "MockMoolaStakingRewards.stake",
      "jump": "i",
      "offset": [
        5056,
        5545
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1095": {
      "fn": "MockMoolaStakingRewards.stake",
      "offset": [
        5056,
        5545
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1096": {
      "fn": "MockMoolaStakingRewards.stake",
      "offset": [
        5056,
        5545
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x143E"
    },
    "1099": {
      "fn": "MockMoolaStakingRewards.stake",
      "jump": "i",
      "offset": [
        5056,
        5545
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1100": {
      "offset": [
        1110,
        1139
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1101": {
      "fn": "MockMoolaStakingRewards.stake",
      "offset": [
        1110,
        1139
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x212"
    },
    "1104": {
      "fn": "MockMoolaStakingRewards.stake",
      "offset": [
        1110,
        1139
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x8"
    },
    "1106": {
      "fn": "MockMoolaStakingRewards.stake",
      "offset": [
        1110,
        1139
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1107": {
      "fn": "MockMoolaStakingRewards.stake",
      "offset": [
        1110,
        1139
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1108": {
      "fn": "MockMoolaStakingRewards.stake",
      "offset": [
        1110,
        1139
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1109": {
      "fn": "MockMoolaStakingRewards.setRewardsDuration",
      "offset": [
        8708,
        9061
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1110": {
      "fn": "MockMoolaStakingRewards.setRewardsDuration",
      "offset": [
        8708,
        9061
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x258"
    },
    "1113": {
      "fn": "MockMoolaStakingRewards.setRewardsDuration",
      "offset": [
        8708,
        9061
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x463"
    },
    "1116": {
      "fn": "MockMoolaStakingRewards.setRewardsDuration",
      "offset": [
        8708,
        9061
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "1117": {
      "fn": "MockMoolaStakingRewards.setRewardsDuration",
      "offset": [
        8708,
        9061
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "1119": {
      "fn": "MockMoolaStakingRewards.setRewardsDuration",
      "offset": [
        8708,
        9061
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1C8A"
    },
    "1122": {
      "fn": "MockMoolaStakingRewards.setRewardsDuration",
      "jump": "i",
      "offset": [
        8708,
        9061
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1123": {
      "fn": "MockMoolaStakingRewards.setRewardsDuration",
      "offset": [
        8708,
        9061
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1124": {
      "fn": "MockMoolaStakingRewards.setRewardsDuration",
      "offset": [
        8708,
        9061
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x16EE"
    },
    "1127": {
      "fn": "MockMoolaStakingRewards.setRewardsDuration",
      "jump": "i",
      "offset": [
        8708,
        9061
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1128": {
      "fn": "MockMoolaStakingRewards.rewardPerToken",
      "offset": [
        2736,
        3067
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1129": {
      "fn": "MockMoolaStakingRewards.rewardPerToken",
      "offset": [
        2736,
        3067
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x212"
    },
    "1132": {
      "fn": "MockMoolaStakingRewards.rewardPerToken",
      "offset": [
        2736,
        3067
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x17C8"
    },
    "1135": {
      "fn": "MockMoolaStakingRewards.rewardPerToken",
      "jump": "i",
      "offset": [
        2736,
        3067
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1136": {
      "offset": [
        866,
        902
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1137": {
      "fn": "MockMoolaStakingRewards.rewardPerToken",
      "offset": [
        866,
        902
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2C3"
    },
    "1140": {
      "fn": "MockMoolaStakingRewards.rewardPerToken",
      "offset": [
        866,
        902
      ],
      "op": "PUSH32",
      "path": "6",
      "value": "0x0"
    },
    "1173": {
      "fn": "MockMoolaStakingRewards.rewardPerToken",
      "offset": [
        866,
        902
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1174": {
      "fn": "MockMoolaStakingRewards.rewardPerToken",
      "offset": [
        866,
        902
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1175": {
      "offset": [
        1145,
        1180
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1176": {
      "fn": "MockMoolaStakingRewards.rewardPerToken",
      "offset": [
        1145,
        1180
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x212"
    },
    "1179": {
      "fn": "MockMoolaStakingRewards.rewardPerToken",
      "offset": [
        1145,
        1180
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x9"
    },
    "1181": {
      "fn": "MockMoolaStakingRewards.rewardPerToken",
      "offset": [
        1145,
        1180
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1182": {
      "fn": "MockMoolaStakingRewards.rewardPerToken",
      "offset": [
        1145,
        1180
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1183": {
      "fn": "MockMoolaStakingRewards.rewardPerToken",
      "offset": [
        1145,
        1180
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1184": {
      "fn": "MockMoolaStakingRewards.exit",
      "offset": [
        6811,
        6914
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1185": {
      "fn": "MockMoolaStakingRewards.exit",
      "offset": [
        6811,
        6914
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x258"
    },
    "1188": {
      "fn": "MockMoolaStakingRewards.exit",
      "offset": [
        6811,
        6914
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1814"
    },
    "1191": {
      "fn": "MockMoolaStakingRewards.exit",
      "jump": "i",
      "offset": [
        6811,
        6914
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1192": {
      "offset": [
        993,
        1024
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1193": {
      "fn": "MockMoolaStakingRewards.exit",
      "offset": [
        993,
        1024
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x212"
    },
    "1196": {
      "fn": "MockMoolaStakingRewards.exit",
      "offset": [
        993,
        1024
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x5"
    },
    "1198": {
      "fn": "MockMoolaStakingRewards.exit",
      "offset": [
        993,
        1024
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1199": {
      "fn": "MockMoolaStakingRewards.exit",
      "offset": [
        993,
        1024
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1200": {
      "fn": "MockMoolaStakingRewards.exit",
      "offset": [
        993,
        1024
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1201": {
      "fn": "MockMoolaStakingRewards.earned",
      "offset": [
        3073,
        3278
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1202": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1204": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1206": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1208": {
      "op": "SHL"
    },
    "1209": {
      "op": "SUB"
    },
    "1210": {
      "fn": "MockMoolaStakingRewards.earned",
      "offset": [
        3254,
        3270
      ],
      "op": "DUP2",
      "path": "6",
      "statement": 2
    },
    "1211": {
      "fn": "MockMoolaStakingRewards.earned",
      "offset": [
        3254,
        3270
      ],
      "op": "AND",
      "path": "6"
    },
    "1212": {
      "fn": "MockMoolaStakingRewards.earned",
      "offset": [
        3136,
        3143
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1214": {
      "fn": "MockMoolaStakingRewards.earned",
      "offset": [
        3254,
        3270
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1215": {
      "fn": "MockMoolaStakingRewards.earned",
      "offset": [
        3254,
        3270
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1216": {
      "fn": "MockMoolaStakingRewards.earned",
      "offset": [
        3254,
        3270
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1217": {
      "fn": "MockMoolaStakingRewards.earned",
      "offset": [
        3254,
        3261
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xB"
    },
    "1219": {
      "fn": "MockMoolaStakingRewards.earned",
      "offset": [
        3254,
        3270
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "1221": {
      "fn": "MockMoolaStakingRewards.earned",
      "offset": [
        3254,
        3270
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1222": {
      "fn": "MockMoolaStakingRewards.earned",
      "offset": [
        3254,
        3270
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1223": {
      "fn": "MockMoolaStakingRewards.earned",
      "offset": [
        3254,
        3270
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1224": {
      "fn": "MockMoolaStakingRewards.earned",
      "offset": [
        3254,
        3270
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1226": {
      "fn": "MockMoolaStakingRewards.earned",
      "offset": [
        3254,
        3270
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1227": {
      "fn": "MockMoolaStakingRewards.earned",
      "offset": [
        3254,
        3270
      ],
      "op": "DUP4",
      "path": "6"
    },
    "1228": {
      "fn": "MockMoolaStakingRewards.earned",
      "offset": [
        3254,
        3270
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "1229": {
      "fn": "MockMoolaStakingRewards.earned",
      "offset": [
        3254,
        3270
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1230": {
      "fn": "MockMoolaStakingRewards.earned",
      "offset": [
        3206,
        3228
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xA"
    },
    "1232": {
      "fn": "MockMoolaStakingRewards.earned",
      "offset": [
        3206,
        3237
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1233": {
      "fn": "MockMoolaStakingRewards.earned",
      "offset": [
        3206,
        3237
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "1234": {
      "fn": "MockMoolaStakingRewards.earned",
      "offset": [
        3206,
        3237
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1235": {
      "fn": "MockMoolaStakingRewards.earned",
      "offset": [
        3206,
        3237
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1236": {
      "fn": "MockMoolaStakingRewards.earned",
      "offset": [
        3206,
        3237
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "1237": {
      "fn": "MockMoolaStakingRewards.earned",
      "offset": [
        3206,
        3237
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1238": {
      "fn": "MockMoolaStakingRewards.earned",
      "offset": [
        3162,
        3271
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x529"
    },
    "1241": {
      "fn": "MockMoolaStakingRewards.earned",
      "offset": [
        3162,
        3271
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1242": {
      "fn": "MockMoolaStakingRewards.earned",
      "offset": [
        3254,
        3270
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1243": {
      "fn": "MockMoolaStakingRewards.earned",
      "offset": [
        3162,
        3249
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x523"
    },
    "1246": {
      "fn": "MockMoolaStakingRewards.earned",
      "offset": [
        3162,
        3249
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1247": {
      "fn": "MockMoolaStakingRewards.earned",
      "offset": [
        3244,
        3248
      ],
      "op": "PUSH8",
      "path": "6",
      "value": "0xDE0B6B3A7640000"
    },
    "1256": {
      "fn": "MockMoolaStakingRewards.earned",
      "offset": [
        3244,
        3248
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1257": {
      "fn": "MockMoolaStakingRewards.earned",
      "offset": [
        3162,
        3239
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x51D"
    },
    "1260": {
      "fn": "MockMoolaStakingRewards.earned",
      "offset": [
        3162,
        3239
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1261": {
      "fn": "MockMoolaStakingRewards.earned",
      "offset": [
        3185,
        3238
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x4FE"
    },
    "1264": {
      "fn": "MockMoolaStakingRewards.earned",
      "offset": [
        3185,
        3238
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1265": {
      "fn": "MockMoolaStakingRewards.earned",
      "offset": [
        3185,
        3201
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x4F8"
    },
    "1268": {
      "fn": "MockMoolaStakingRewards.earned",
      "offset": [
        3185,
        3199
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x17C8"
    },
    "1271": {
      "fn": "MockMoolaStakingRewards.earned",
      "jump": "i",
      "offset": [
        3185,
        3201
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1272": {
      "fn": "MockMoolaStakingRewards.earned",
      "offset": [
        3185,
        3201
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1273": {
      "fn": "MockMoolaStakingRewards.earned",
      "offset": [
        3185,
        3205
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1274": {
      "fn": "MockMoolaStakingRewards.earned",
      "offset": [
        3185,
        3205
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1837"
    },
    "1277": {
      "fn": "MockMoolaStakingRewards.earned",
      "jump": "i",
      "offset": [
        3185,
        3238
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1278": {
      "fn": "MockMoolaStakingRewards.earned",
      "offset": [
        3185,
        3238
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1279": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1281": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1283": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1285": {
      "op": "SHL"
    },
    "1286": {
      "op": "SUB"
    },
    "1287": {
      "fn": "MockMoolaStakingRewards.earned",
      "offset": [
        3162,
        3180
      ],
      "op": "DUP9",
      "path": "6"
    },
    "1288": {
      "fn": "MockMoolaStakingRewards.earned",
      "offset": [
        3162,
        3180
      ],
      "op": "AND",
      "path": "6"
    },
    "1289": {
      "fn": "MockMoolaStakingRewards.earned",
      "offset": [
        3162,
        3180
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1291": {
      "fn": "MockMoolaStakingRewards.earned",
      "offset": [
        3162,
        3180
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1292": {
      "fn": "MockMoolaStakingRewards.earned",
      "offset": [
        3162,
        3180
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1293": {
      "fn": "MockMoolaStakingRewards.earned",
      "offset": [
        3162,
        3180
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1294": {
      "fn": "MockMoolaStakingRewards.earned",
      "offset": [
        3162,
        3171
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x10"
    },
    "1296": {
      "fn": "MockMoolaStakingRewards.earned",
      "offset": [
        3162,
        3180
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "1298": {
      "fn": "MockMoolaStakingRewards.earned",
      "offset": [
        3162,
        3180
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1299": {
      "fn": "MockMoolaStakingRewards.earned",
      "offset": [
        3162,
        3180
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1301": {
      "fn": "MockMoolaStakingRewards.earned",
      "offset": [
        3162,
        3180
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1302": {
      "fn": "MockMoolaStakingRewards.earned",
      "offset": [
        3162,
        3180
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "1303": {
      "fn": "MockMoolaStakingRewards.earned",
      "offset": [
        3162,
        3180
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1304": {
      "fn": "MockMoolaStakingRewards.earned",
      "offset": [
        3162,
        3180
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1305": {
      "fn": "MockMoolaStakingRewards.earned",
      "offset": [
        3162,
        3184
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x184A"
    },
    "1308": {
      "fn": "MockMoolaStakingRewards.earned",
      "jump": "i",
      "offset": [
        3162,
        3239
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1309": {
      "fn": "MockMoolaStakingRewards.earned",
      "offset": [
        3162,
        3239
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1310": {
      "fn": "MockMoolaStakingRewards.earned",
      "offset": [
        3162,
        3243
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1311": {
      "fn": "MockMoolaStakingRewards.earned",
      "offset": [
        3162,
        3243
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1856"
    },
    "1314": {
      "fn": "MockMoolaStakingRewards.earned",
      "jump": "i",
      "offset": [
        3162,
        3249
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1315": {
      "fn": "MockMoolaStakingRewards.earned",
      "offset": [
        3162,
        3249
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1316": {
      "fn": "MockMoolaStakingRewards.earned",
      "offset": [
        3162,
        3253
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1317": {
      "fn": "MockMoolaStakingRewards.earned",
      "offset": [
        3162,
        3253
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1862"
    },
    "1320": {
      "fn": "MockMoolaStakingRewards.earned",
      "jump": "i",
      "offset": [
        3162,
        3271
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1321": {
      "fn": "MockMoolaStakingRewards.earned",
      "offset": [
        3162,
        3271
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1322": {
      "fn": "MockMoolaStakingRewards.earned",
      "offset": [
        3155,
        3271
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "1323": {
      "fn": "MockMoolaStakingRewards.earned",
      "offset": [
        3073,
        3278
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1324": {
      "op": "POP"
    },
    "1325": {
      "op": "POP"
    },
    "1326": {
      "fn": "MockMoolaStakingRewards.earned",
      "jump": "o",
      "offset": [
        3073,
        3278
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1327": {
      "fn": "Owned.nominateNewOwner",
      "offset": [
        793,
        931
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1328": {
      "offset": [
        1238,
        1250
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x537"
    },
    "1331": {
      "offset": [
        1238,
        1248
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x186E"
    },
    "1334": {
      "jump": "i",
      "offset": [
        1238,
        1250
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1335": {
      "fn": "Owned.nominateNewOwner",
      "offset": [
        1238,
        1250
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1336": {
      "fn": "Owned.nominateNewOwner",
      "offset": [
        864,
        878
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 3,
      "value": "0x1"
    },
    "1338": {
      "fn": "Owned.nominateNewOwner",
      "offset": [
        864,
        887
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1339": {
      "fn": "Owned.nominateNewOwner",
      "offset": [
        864,
        887
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "1340": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1342": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1344": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1346": {
      "op": "SHL"
    },
    "1347": {
      "op": "SUB"
    },
    "1348": {
      "op": "NOT"
    },
    "1349": {
      "fn": "Owned.nominateNewOwner",
      "offset": [
        864,
        887
      ],
      "op": "AND",
      "path": "7"
    },
    "1350": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1352": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1354": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1356": {
      "op": "SHL"
    },
    "1357": {
      "op": "SUB"
    },
    "1358": {
      "fn": "Owned.nominateNewOwner",
      "offset": [
        864,
        887
      ],
      "op": "DUP4",
      "path": "7"
    },
    "1359": {
      "fn": "Owned.nominateNewOwner",
      "offset": [
        864,
        887
      ],
      "op": "AND",
      "path": "7"
    },
    "1360": {
      "fn": "Owned.nominateNewOwner",
      "offset": [
        864,
        887
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1361": {
      "fn": "Owned.nominateNewOwner",
      "offset": [
        864,
        887
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1362": {
      "fn": "Owned.nominateNewOwner",
      "offset": [
        864,
        887
      ],
      "op": "OR",
      "path": "7"
    },
    "1363": {
      "fn": "Owned.nominateNewOwner",
      "offset": [
        864,
        887
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1364": {
      "fn": "Owned.nominateNewOwner",
      "offset": [
        864,
        887
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "1365": {
      "fn": "Owned.nominateNewOwner",
      "offset": [
        864,
        887
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "1366": {
      "fn": "Owned.nominateNewOwner",
      "offset": [
        902,
        924
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 4,
      "value": "0x40"
    },
    "1368": {
      "fn": "Owned.nominateNewOwner",
      "offset": [
        902,
        924
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "1369": {
      "op": "SWAP1"
    },
    "1370": {
      "op": "DUP2"
    },
    "1371": {
      "op": "MSTORE"
    },
    "1372": {
      "fn": "Owned.nominateNewOwner",
      "offset": [
        902,
        924
      ],
      "op": "PUSH32",
      "path": "7",
      "value": "0x906A1C6BD7E3091EA86693DD029A831C19049CE77F1DCE2CE0BAB1CACBABCE22"
    },
    "1405": {
      "fn": "Owned.nominateNewOwner",
      "offset": [
        902,
        924
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1406": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1408": {
      "op": "ADD"
    },
    "1409": {
      "fn": "Owned.nominateNewOwner",
      "offset": [
        902,
        924
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1410": {
      "fn": "Owned.nominateNewOwner",
      "offset": [
        902,
        924
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1412": {
      "fn": "Owned.nominateNewOwner",
      "offset": [
        902,
        924
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "1413": {
      "fn": "Owned.nominateNewOwner",
      "offset": [
        902,
        924
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1414": {
      "fn": "Owned.nominateNewOwner",
      "offset": [
        902,
        924
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "1415": {
      "fn": "Owned.nominateNewOwner",
      "offset": [
        902,
        924
      ],
      "op": "SUB",
      "path": "7"
    },
    "1416": {
      "fn": "Owned.nominateNewOwner",
      "offset": [
        902,
        924
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1417": {
      "fn": "Owned.nominateNewOwner",
      "offset": [
        902,
        924
      ],
      "op": "LOG1",
      "path": "7"
    },
    "1418": {
      "fn": "Owned.nominateNewOwner",
      "offset": [
        793,
        931
      ],
      "op": "POP",
      "path": "7"
    },
    "1419": {
      "fn": "Owned.nominateNewOwner",
      "jump": "o",
      "offset": [
        793,
        931
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1420": {
      "fn": "RewardsDistributionRecipient.setRewardsDistribution",
      "offset": [
        1927,
        2067
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1421": {
      "offset": [
        1238,
        1250
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x594"
    },
    "1424": {
      "offset": [
        1238,
        1248
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x186E"
    },
    "1427": {
      "jump": "i",
      "offset": [
        1238,
        1250
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1428": {
      "fn": "RewardsDistributionRecipient.setRewardsDistribution",
      "offset": [
        1238,
        1250
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1429": {
      "fn": "RewardsDistributionRecipient.setRewardsDistribution",
      "offset": [
        2018,
        2037
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 5,
      "value": "0x2"
    },
    "1431": {
      "fn": "RewardsDistributionRecipient.setRewardsDistribution",
      "offset": [
        2018,
        2060
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1432": {
      "fn": "RewardsDistributionRecipient.setRewardsDistribution",
      "offset": [
        2018,
        2060
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "1433": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1435": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1437": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1439": {
      "op": "SHL"
    },
    "1440": {
      "op": "SUB"
    },
    "1441": {
      "op": "NOT"
    },
    "1442": {
      "fn": "RewardsDistributionRecipient.setRewardsDistribution",
      "offset": [
        2018,
        2060
      ],
      "op": "AND",
      "path": "7"
    },
    "1443": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1445": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1447": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1449": {
      "op": "SHL"
    },
    "1450": {
      "op": "SUB"
    },
    "1451": {
      "fn": "RewardsDistributionRecipient.setRewardsDistribution",
      "offset": [
        2018,
        2060
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "1452": {
      "fn": "RewardsDistributionRecipient.setRewardsDistribution",
      "offset": [
        2018,
        2060
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1453": {
      "fn": "RewardsDistributionRecipient.setRewardsDistribution",
      "offset": [
        2018,
        2060
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "1454": {
      "fn": "RewardsDistributionRecipient.setRewardsDistribution",
      "offset": [
        2018,
        2060
      ],
      "op": "AND",
      "path": "7"
    },
    "1455": {
      "fn": "RewardsDistributionRecipient.setRewardsDistribution",
      "offset": [
        2018,
        2060
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "1456": {
      "fn": "RewardsDistributionRecipient.setRewardsDistribution",
      "offset": [
        2018,
        2060
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1457": {
      "fn": "RewardsDistributionRecipient.setRewardsDistribution",
      "offset": [
        2018,
        2060
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "1458": {
      "fn": "RewardsDistributionRecipient.setRewardsDistribution",
      "offset": [
        2018,
        2060
      ],
      "op": "OR",
      "path": "7"
    },
    "1459": {
      "fn": "RewardsDistributionRecipient.setRewardsDistribution",
      "offset": [
        2018,
        2060
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1460": {
      "fn": "RewardsDistributionRecipient.setRewardsDistribution",
      "offset": [
        2018,
        2060
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "1461": {
      "fn": "RewardsDistributionRecipient.setRewardsDistribution",
      "jump": "o",
      "offset": [
        1927,
        2067
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1462": {
      "fn": "MockMoolaStakingRewards.getRewardForDuration",
      "offset": [
        4840,
        4968
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1463": {
      "fn": "MockMoolaStakingRewards.getRewardForDuration",
      "offset": [
        4904,
        4911
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1465": {
      "fn": "MockMoolaStakingRewards.getRewardForDuration",
      "offset": [
        4930,
        4961
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 6,
      "value": "0x5CF"
    },
    "1468": {
      "fn": "MockMoolaStakingRewards.getRewardForDuration",
      "offset": [
        4945,
        4960
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x7"
    },
    "1470": {
      "fn": "MockMoolaStakingRewards.getRewardForDuration",
      "offset": [
        4945,
        4960
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1471": {
      "fn": "MockMoolaStakingRewards.getRewardForDuration",
      "offset": [
        4930,
        4940
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x6"
    },
    "1473": {
      "fn": "MockMoolaStakingRewards.getRewardForDuration",
      "offset": [
        4930,
        4940
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1474": {
      "fn": "MockMoolaStakingRewards.getRewardForDuration",
      "offset": [
        4930,
        4944
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x184A"
    },
    "1477": {
      "fn": "MockMoolaStakingRewards.getRewardForDuration",
      "offset": [
        4930,
        4944
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1478": {
      "fn": "MockMoolaStakingRewards.getRewardForDuration",
      "offset": [
        4930,
        4961
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1479": {
      "fn": "MockMoolaStakingRewards.getRewardForDuration",
      "offset": [
        4930,
        4961
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1480": {
      "fn": "MockMoolaStakingRewards.getRewardForDuration",
      "offset": [
        4930,
        4961
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xFFFFFFFF"
    },
    "1485": {
      "fn": "MockMoolaStakingRewards.getRewardForDuration",
      "offset": [
        4930,
        4961
      ],
      "op": "AND",
      "path": "6"
    },
    "1486": {
      "fn": "MockMoolaStakingRewards.getRewardForDuration",
      "jump": "i",
      "offset": [
        4930,
        4961
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1487": {
      "fn": "MockMoolaStakingRewards.getRewardForDuration",
      "offset": [
        4930,
        4961
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1488": {
      "fn": "MockMoolaStakingRewards.getRewardForDuration",
      "offset": [
        4923,
        4961
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1489": {
      "fn": "MockMoolaStakingRewards.getRewardForDuration",
      "offset": [
        4923,
        4961
      ],
      "op": "POP",
      "path": "6"
    },
    "1490": {
      "fn": "MockMoolaStakingRewards.getRewardForDuration",
      "offset": [
        4840,
        4968
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1491": {
      "fn": "MockMoolaStakingRewards.getRewardForDuration",
      "jump": "o",
      "offset": [
        4840,
        4968
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1492": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3284,
        4834
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1493": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3350,
        3373
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x60"
    },
    "1495": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3385,
        3415
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1497": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3418,
        3439
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "1499": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3385,
        3439
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1500": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3385,
        3439
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1501": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3385,
        3439
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1502": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3385,
        3439
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "1504": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3385,
        3439
      ],
      "op": "MUL",
      "path": "6"
    },
    "1505": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3385,
        3439
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "1507": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3385,
        3439
      ],
      "op": "ADD",
      "path": "6"
    },
    "1508": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3385,
        3439
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1510": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3385,
        3439
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1511": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3385,
        3439
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1512": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3385,
        3439
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1513": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3385,
        3439
      ],
      "op": "ADD",
      "path": "6"
    },
    "1514": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3385,
        3439
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1516": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3385,
        3439
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1517": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3385,
        3439
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1518": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3385,
        3439
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "1519": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3385,
        3439
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1520": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3385,
        3439
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1521": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3385,
        3439
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1522": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3385,
        3439
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1523": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3385,
        3439
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1524": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3385,
        3439
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "1526": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3385,
        3439
      ],
      "op": "ADD",
      "path": "6"
    },
    "1527": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3385,
        3439
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1528": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3385,
        3439
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1529": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3385,
        3439
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1530": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3385,
        3439
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1531": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3385,
        3439
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "1532": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3385,
        3439
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x62E"
    },
    "1535": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3385,
        3439
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1536": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3385,
        3439
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "1538": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3385,
        3439
      ],
      "op": "MUL",
      "path": "6"
    },
    "1539": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3385,
        3439
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1540": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3385,
        3439
      ],
      "op": "ADD",
      "path": "6"
    },
    "1541": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3385,
        3439
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1542": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3385,
        3439
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1543": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3385,
        3439
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1545": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3385,
        3439
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1546": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3385,
        3439
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "1548": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3385,
        3439
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1550": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3385,
        3439
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "1551": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3385,
        3439
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1552": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3385,
        3439
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1553": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3385,
        3439
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1554": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3385,
        3439
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1555": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1557": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1559": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1561": {
      "op": "SHL"
    },
    "1562": {
      "op": "SUB"
    },
    "1563": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3385,
        3439
      ],
      "op": "AND",
      "path": "6"
    },
    "1564": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3385,
        3439
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1565": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3385,
        3439
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1566": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3385,
        3439
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "1568": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3385,
        3439
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1569": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3385,
        3439
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1570": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3385,
        3439
      ],
      "op": "ADD",
      "path": "6"
    },
    "1571": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3385,
        3439
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1572": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3385,
        3439
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "1574": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3385,
        3439
      ],
      "op": "ADD",
      "path": "6"
    },
    "1575": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3385,
        3439
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1576": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3385,
        3439
      ],
      "op": "DUP4",
      "path": "6"
    },
    "1577": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3385,
        3439
      ],
      "op": "GT",
      "path": "6"
    },
    "1578": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3385,
        3439
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x610"
    },
    "1581": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3385,
        3439
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1582": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3385,
        3439
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1583": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3385,
        3439
      ],
      "op": "POP",
      "path": "6"
    },
    "1584": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3385,
        3439
      ],
      "op": "POP",
      "path": "6"
    },
    "1585": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3385,
        3439
      ],
      "op": "POP",
      "path": "6"
    },
    "1586": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3385,
        3439
      ],
      "op": "POP",
      "path": "6"
    },
    "1587": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3385,
        3439
      ],
      "op": "POP",
      "path": "6"
    },
    "1588": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3385,
        3439
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1589": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3385,
        3439
      ],
      "op": "POP",
      "path": "6"
    },
    "1590": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3449,
        3489
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1592": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3506,
        3520
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1593": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3506,
        3527
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1594": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3492,
        3528
      ],
      "op": "PUSH8",
      "path": "6",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "1603": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3492,
        3528
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1604": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3492,
        3528
      ],
      "op": "GT",
      "path": "6"
    },
    "1605": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3492,
        3528
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "1606": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3492,
        3528
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x651"
    },
    "1609": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3492,
        3528
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1610": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3492,
        3528
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x651"
    },
    "1613": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3492,
        3528
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1E69"
    },
    "1616": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "jump": "i",
      "offset": [
        3492,
        3528
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1617": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3492,
        3528
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1618": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3492,
        3528
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1620": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3492,
        3528
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1621": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3492,
        3528
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1622": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3492,
        3528
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1623": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3492,
        3528
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1624": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3492,
        3528
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1625": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3492,
        3528
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1626": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3492,
        3528
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "1628": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3492,
        3528
      ],
      "op": "MUL",
      "path": "6"
    },
    "1629": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3492,
        3528
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "1631": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3492,
        3528
      ],
      "op": "ADD",
      "path": "6"
    },
    "1632": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3492,
        3528
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1633": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3492,
        3528
      ],
      "op": "ADD",
      "path": "6"
    },
    "1634": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3492,
        3528
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1636": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3492,
        3528
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1637": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3492,
        3528
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1638": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3492,
        3528
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "1639": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3492,
        3528
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x67A"
    },
    "1642": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3492,
        3528
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1643": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3492,
        3528
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1644": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3492,
        3528
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "1646": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3492,
        3528
      ],
      "op": "ADD",
      "path": "6"
    },
    "1647": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3492,
        3528
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "1649": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3492,
        3528
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1650": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3492,
        3528
      ],
      "op": "MUL",
      "path": "6"
    },
    "1651": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3492,
        3528
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1652": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3492,
        3528
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "1653": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3492,
        3528
      ],
      "op": "DUP4",
      "path": "6"
    },
    "1654": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3492,
        3528
      ],
      "op": "CALLDATACOPY",
      "path": "6"
    },
    "1655": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3492,
        3528
      ],
      "op": "ADD",
      "path": "6"
    },
    "1656": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3492,
        3528
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1657": {
      "op": "POP"
    },
    "1658": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3492,
        3528
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1659": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3492,
        3528
      ],
      "op": "POP",
      "path": "6"
    },
    "1660": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3449,
        3528
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1661": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3449,
        3528
      ],
      "op": "POP",
      "path": "6"
    },
    "1662": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3561,
        3575
      ],
      "op": "DUP2",
      "path": "6",
      "statement": 7
    },
    "1663": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3561,
        3582
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1664": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3547,
        3583
      ],
      "op": "PUSH8",
      "path": "6",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "1673": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3547,
        3583
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1674": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3547,
        3583
      ],
      "op": "GT",
      "path": "6"
    },
    "1675": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3547,
        3583
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "1676": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3547,
        3583
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x697"
    },
    "1679": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3547,
        3583
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1680": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3547,
        3583
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x697"
    },
    "1683": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3547,
        3583
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1E69"
    },
    "1686": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "jump": "i",
      "offset": [
        3547,
        3583
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1687": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3547,
        3583
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1688": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3547,
        3583
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1690": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3547,
        3583
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1691": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3547,
        3583
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1692": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3547,
        3583
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1693": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3547,
        3583
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1694": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3547,
        3583
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1695": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3547,
        3583
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1696": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3547,
        3583
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "1698": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3547,
        3583
      ],
      "op": "MUL",
      "path": "6"
    },
    "1699": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3547,
        3583
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "1701": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3547,
        3583
      ],
      "op": "ADD",
      "path": "6"
    },
    "1702": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3547,
        3583
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1703": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3547,
        3583
      ],
      "op": "ADD",
      "path": "6"
    },
    "1704": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3547,
        3583
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1706": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3547,
        3583
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1707": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3547,
        3583
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1708": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3547,
        3583
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "1709": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3547,
        3583
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x6C0"
    },
    "1712": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3547,
        3583
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1713": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3547,
        3583
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1714": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3547,
        3583
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "1716": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3547,
        3583
      ],
      "op": "ADD",
      "path": "6"
    },
    "1717": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3547,
        3583
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "1719": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3547,
        3583
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1720": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3547,
        3583
      ],
      "op": "MUL",
      "path": "6"
    },
    "1721": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3547,
        3583
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1722": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3547,
        3583
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "1723": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3547,
        3583
      ],
      "op": "DUP4",
      "path": "6"
    },
    "1724": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3547,
        3583
      ],
      "op": "CALLDATACOPY",
      "path": "6"
    },
    "1725": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3547,
        3583
      ],
      "op": "ADD",
      "path": "6"
    },
    "1726": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3547,
        3583
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1727": {
      "op": "POP"
    },
    "1728": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3547,
        3583
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1729": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3547,
        3583
      ],
      "op": "POP",
      "path": "6"
    },
    "1730": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3538,
        3583
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "1731": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3538,
        3583
      ],
      "op": "POP",
      "path": "6"
    },
    "1732": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3599,
        3608
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1734": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3594,
        3742
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1735": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3618,
        3632
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1736": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3618,
        3639
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1737": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3614,
        3615
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1738": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3614,
        3639
      ],
      "op": "LT",
      "path": "6"
    },
    "1739": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3594,
        3742
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "1740": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3594,
        3742
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x793"
    },
    "1743": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3594,
        3742
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1744": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3689,
        3703
      ],
      "op": "DUP3",
      "path": "6",
      "statement": 8
    },
    "1745": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3704,
        3705
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1746": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3689,
        3706
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1747": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3689,
        3706
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1748": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3689,
        3706
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1749": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3689,
        3706
      ],
      "op": "LT",
      "path": "6"
    },
    "1750": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3689,
        3706
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x6E1"
    },
    "1753": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3689,
        3706
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1754": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3689,
        3706
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x6E1"
    },
    "1757": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3689,
        3706
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1E53"
    },
    "1760": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "jump": "i",
      "offset": [
        3689,
        3706
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1761": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3689,
        3706
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1762": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3689,
        3706
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "1764": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3689,
        3706
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1765": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3689,
        3706
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1766": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3689,
        3706
      ],
      "op": "MUL",
      "path": "6"
    },
    "1767": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3689,
        3706
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1768": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3689,
        3706
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1769": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3689,
        3706
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1770": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3689,
        3706
      ],
      "op": "ADD",
      "path": "6"
    },
    "1771": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3689,
        3706
      ],
      "op": "ADD",
      "path": "6"
    },
    "1772": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3689,
        3706
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1773": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3689,
        3731
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1775": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3689,
        3731
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1776": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "1781": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1783": {
      "op": "SHL"
    },
    "1784": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3689,
        3731
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1785": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3689,
        3731
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1786": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3725,
        3729
      ],
      "op": "ADDRESS",
      "path": "6"
    },
    "1787": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3689,
        3731
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "1789": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3689,
        3731
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1790": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3689,
        3731
      ],
      "op": "ADD",
      "path": "6"
    },
    "1791": {
      "op": "MSTORE"
    },
    "1792": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1794": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1796": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1798": {
      "op": "SHL"
    },
    "1799": {
      "op": "SUB"
    },
    "1800": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3689,
        3716
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1801": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3689,
        3716
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1802": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3689,
        3716
      ],
      "op": "AND",
      "path": "6"
    },
    "1803": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3689,
        3716
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1804": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3689,
        3716
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x70A08231"
    },
    "1809": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3689,
        3716
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1810": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1812": {
      "op": "ADD"
    },
    "1813": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3689,
        3731
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "1815": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3689,
        3731
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1817": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3689,
        3731
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1818": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3689,
        3731
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1819": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3689,
        3731
      ],
      "op": "DUP4",
      "path": "6"
    },
    "1820": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3689,
        3731
      ],
      "op": "SUB",
      "path": "6"
    },
    "1821": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3689,
        3731
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1822": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3689,
        3731
      ],
      "op": "DUP7",
      "path": "6"
    },
    "1823": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3689,
        3731
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1824": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3689,
        3731
      ],
      "op": "EXTCODESIZE",
      "path": "6"
    },
    "1825": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3689,
        3731
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "1826": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3689,
        3731
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1827": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3689,
        3731
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "1828": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3689,
        3731
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x72C"
    },
    "1831": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3689,
        3731
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1832": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3689,
        3731
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1834": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3689,
        3731
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1835": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3689,
        3731
      ],
      "op": "REVERT",
      "path": "6"
    },
    "1836": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3689,
        3731
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1837": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3689,
        3731
      ],
      "op": "POP",
      "path": "6"
    },
    "1838": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3689,
        3731
      ],
      "op": "GAS",
      "path": "6"
    },
    "1839": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3689,
        3731
      ],
      "op": "STATICCALL",
      "path": "6"
    },
    "1840": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3689,
        3731
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "1841": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3689,
        3731
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1842": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3689,
        3731
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "1843": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3689,
        3731
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x740"
    },
    "1846": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3689,
        3731
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1847": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3689,
        3731
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "1848": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3689,
        3731
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1850": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3689,
        3731
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1851": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3689,
        3731
      ],
      "op": "RETURNDATACOPY",
      "path": "6"
    },
    "1852": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3689,
        3731
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "1853": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3689,
        3731
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1855": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3689,
        3731
      ],
      "op": "REVERT",
      "path": "6"
    },
    "1856": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3689,
        3731
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1857": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3689,
        3731
      ],
      "op": "POP",
      "path": "6"
    },
    "1858": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3689,
        3731
      ],
      "op": "POP",
      "path": "6"
    },
    "1859": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3689,
        3731
      ],
      "op": "POP",
      "path": "6"
    },
    "1860": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3689,
        3731
      ],
      "op": "POP",
      "path": "6"
    },
    "1861": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3689,
        3731
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1863": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3689,
        3731
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1864": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3689,
        3731
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "1865": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3689,
        3731
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1F"
    },
    "1867": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3689,
        3731
      ],
      "op": "NOT",
      "path": "6"
    },
    "1868": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3689,
        3731
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1F"
    },
    "1870": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3689,
        3731
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1871": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3689,
        3731
      ],
      "op": "ADD",
      "path": "6"
    },
    "1872": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3689,
        3731
      ],
      "op": "AND",
      "path": "6"
    },
    "1873": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3689,
        3731
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1874": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3689,
        3731
      ],
      "op": "ADD",
      "path": "6"
    },
    "1875": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3689,
        3731
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1876": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3689,
        3731
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1878": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3689,
        3731
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1879": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3689,
        3731
      ],
      "op": "POP",
      "path": "6"
    },
    "1880": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3689,
        3731
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1881": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3689,
        3731
      ],
      "op": "ADD",
      "path": "6"
    },
    "1882": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3689,
        3731
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1883": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3689,
        3731
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x764"
    },
    "1886": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3689,
        3731
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1887": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3689,
        3731
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1888": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3689,
        3731
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1CA3"
    },
    "1891": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "jump": "i",
      "offset": [
        3689,
        3731
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1892": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3689,
        3731
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1893": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3660,
        3683
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1894": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3684,
        3685
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1895": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3660,
        3686
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1896": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3660,
        3686
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1897": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3660,
        3686
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1898": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3660,
        3686
      ],
      "op": "LT",
      "path": "6"
    },
    "1899": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3660,
        3686
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x776"
    },
    "1902": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3660,
        3686
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1903": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3660,
        3686
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x776"
    },
    "1906": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3660,
        3686
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1E53"
    },
    "1909": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "jump": "i",
      "offset": [
        3660,
        3686
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1910": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3660,
        3686
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1911": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3660,
        3686
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "1913": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3660,
        3686
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1914": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3660,
        3686
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1915": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3660,
        3686
      ],
      "op": "MUL",
      "path": "6"
    },
    "1916": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3660,
        3686
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1917": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3660,
        3686
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1918": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3660,
        3686
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1919": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3660,
        3686
      ],
      "op": "ADD",
      "path": "6"
    },
    "1920": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3660,
        3686
      ],
      "op": "ADD",
      "path": "6"
    },
    "1921": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3660,
        3731
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1922": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3641,
        3644
      ],
      "op": "DUP1",
      "path": "6",
      "statement": 9
    },
    "1923": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3641,
        3644
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x78B"
    },
    "1926": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3641,
        3644
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1927": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3641,
        3644
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1E22"
    },
    "1930": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "jump": "i",
      "offset": [
        3641,
        3644
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1931": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3641,
        3644
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1932": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3641,
        3644
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1933": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3641,
        3644
      ],
      "op": "POP",
      "path": "6"
    },
    "1934": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3641,
        3644
      ],
      "op": "POP",
      "path": "6"
    },
    "1935": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3594,
        3742
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x6C6"
    },
    "1938": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3594,
        3742
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1939": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3594,
        3742
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1940": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3594,
        3742
      ],
      "op": "POP",
      "path": "6"
    },
    "1941": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3752,
        3774
      ],
      "op": "PUSH32",
      "path": "6",
      "statement": 10,
      "value": "0x0"
    },
    "1974": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1976": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1978": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1980": {
      "op": "SHL"
    },
    "1981": {
      "op": "SUB"
    },
    "1982": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3752,
        3784
      ],
      "op": "AND",
      "path": "6"
    },
    "1983": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3752,
        3784
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x3D18B912"
    },
    "1988": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3752,
        3786
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1990": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3752,
        3786
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1991": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3752,
        3786
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1992": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3752,
        3786
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xFFFFFFFF"
    },
    "1997": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3752,
        3786
      ],
      "op": "AND",
      "path": "6"
    },
    "1998": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3752,
        3786
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xE0"
    },
    "2000": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3752,
        3786
      ],
      "op": "SHL",
      "path": "6"
    },
    "2001": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3752,
        3786
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2002": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3752,
        3786
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2003": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3752,
        3786
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "2005": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3752,
        3786
      ],
      "op": "ADD",
      "path": "6"
    },
    "2006": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3752,
        3786
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2008": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3752,
        3786
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2010": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3752,
        3786
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2011": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3752,
        3786
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2012": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3752,
        3786
      ],
      "op": "DUP4",
      "path": "6"
    },
    "2013": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3752,
        3786
      ],
      "op": "SUB",
      "path": "6"
    },
    "2014": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3752,
        3786
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2015": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3752,
        3786
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2017": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3752,
        3786
      ],
      "op": "DUP8",
      "path": "6"
    },
    "2018": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3752,
        3786
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2019": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3752,
        3786
      ],
      "op": "EXTCODESIZE",
      "path": "6"
    },
    "2020": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3752,
        3786
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "2021": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3752,
        3786
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2022": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3752,
        3786
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "2023": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3752,
        3786
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x7EF"
    },
    "2026": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3752,
        3786
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2027": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3752,
        3786
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2029": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3752,
        3786
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2030": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3752,
        3786
      ],
      "op": "REVERT",
      "path": "6"
    },
    "2031": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3752,
        3786
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2032": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3752,
        3786
      ],
      "op": "POP",
      "path": "6"
    },
    "2033": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3752,
        3786
      ],
      "op": "GAS",
      "path": "6"
    },
    "2034": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3752,
        3786
      ],
      "op": "CALL",
      "path": "6"
    },
    "2035": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3752,
        3786
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "2036": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3752,
        3786
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2037": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3752,
        3786
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "2038": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3752,
        3786
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x803"
    },
    "2041": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3752,
        3786
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2042": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3752,
        3786
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "2043": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3752,
        3786
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2045": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3752,
        3786
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2046": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3752,
        3786
      ],
      "op": "RETURNDATACOPY",
      "path": "6"
    },
    "2047": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3752,
        3786
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "2048": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3752,
        3786
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2050": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3752,
        3786
      ],
      "op": "REVERT",
      "path": "6"
    },
    "2051": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3752,
        3786
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2052": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3752,
        3786
      ],
      "op": "POP",
      "path": "6"
    },
    "2053": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3752,
        3786
      ],
      "op": "POP",
      "path": "6"
    },
    "2054": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3752,
        3786
      ],
      "op": "POP",
      "path": "6"
    },
    "2055": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3752,
        3786
      ],
      "op": "POP",
      "path": "6"
    },
    "2056": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3802,
        3811
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2058": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3797,
        4804
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2059": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3821,
        3835
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2060": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3821,
        3842
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2061": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3817,
        3818
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2062": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3817,
        3842
      ],
      "op": "LT",
      "path": "6"
    },
    "2063": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3797,
        4804
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "2064": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3797,
        4804
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xA74"
    },
    "2067": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3797,
        4804
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2068": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3863,
        3883
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2070": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3886,
        3900
      ],
      "op": "DUP4",
      "path": "6"
    },
    "2071": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3901,
        3902
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2072": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3886,
        3903
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2073": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3886,
        3903
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2074": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3886,
        3903
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2075": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3886,
        3903
      ],
      "op": "LT",
      "path": "6"
    },
    "2076": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3886,
        3903
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x827"
    },
    "2079": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3886,
        3903
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2080": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3886,
        3903
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x827"
    },
    "2083": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3886,
        3903
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1E53"
    },
    "2086": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "jump": "i",
      "offset": [
        3886,
        3903
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2087": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3886,
        3903
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2088": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3886,
        3903
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2090": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3886,
        3903
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2091": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3886,
        3903
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2092": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3886,
        3903
      ],
      "op": "MUL",
      "path": "6"
    },
    "2093": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3886,
        3903
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2094": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3886,
        3903
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2095": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3886,
        3903
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2096": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3886,
        3903
      ],
      "op": "ADD",
      "path": "6"
    },
    "2097": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3886,
        3903
      ],
      "op": "ADD",
      "path": "6"
    },
    "2098": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3886,
        3903
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2099": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3948,
        3986
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2101": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3948,
        3986
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2102": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "2107": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2109": {
      "op": "SHL"
    },
    "2110": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3948,
        3986
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2111": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3948,
        3986
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2112": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3980,
        3984
      ],
      "op": "ADDRESS",
      "path": "6"
    },
    "2113": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3948,
        3986
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "2115": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3948,
        3986
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2116": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3948,
        3986
      ],
      "op": "ADD",
      "path": "6"
    },
    "2117": {
      "op": "MSTORE"
    },
    "2118": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3886,
        3903
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2119": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3886,
        3903
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2120": {
      "op": "POP"
    },
    "2121": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3917,
        3945
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2123": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3917,
        3945
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2124": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2126": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2128": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2130": {
      "op": "SHL"
    },
    "2131": {
      "op": "SUB"
    },
    "2132": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3948,
        3971
      ],
      "op": "DUP4",
      "path": "6"
    },
    "2133": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3948,
        3971
      ],
      "op": "AND",
      "path": "6"
    },
    "2134": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3948,
        3971
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2135": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3948,
        3971
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x70A08231"
    },
    "2140": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3948,
        3971
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2141": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2143": {
      "op": "ADD"
    },
    "2144": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3948,
        3986
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2146": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3948,
        3986
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2148": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3948,
        3986
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2149": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3948,
        3986
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2150": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3948,
        3986
      ],
      "op": "DUP4",
      "path": "6"
    },
    "2151": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3948,
        3986
      ],
      "op": "SUB",
      "path": "6"
    },
    "2152": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3948,
        3986
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2153": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3948,
        3986
      ],
      "op": "DUP7",
      "path": "6"
    },
    "2154": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3948,
        3986
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2155": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3948,
        3986
      ],
      "op": "EXTCODESIZE",
      "path": "6"
    },
    "2156": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3948,
        3986
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "2157": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3948,
        3986
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2158": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3948,
        3986
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "2159": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3948,
        3986
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x877"
    },
    "2162": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3948,
        3986
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2163": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3948,
        3986
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2165": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3948,
        3986
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2166": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3948,
        3986
      ],
      "op": "REVERT",
      "path": "6"
    },
    "2167": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3948,
        3986
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2168": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3948,
        3986
      ],
      "op": "POP",
      "path": "6"
    },
    "2169": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3948,
        3986
      ],
      "op": "GAS",
      "path": "6"
    },
    "2170": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3948,
        3986
      ],
      "op": "STATICCALL",
      "path": "6"
    },
    "2171": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3948,
        3986
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "2172": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3948,
        3986
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2173": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3948,
        3986
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "2174": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3948,
        3986
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x88B"
    },
    "2177": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3948,
        3986
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2178": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3948,
        3986
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "2179": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3948,
        3986
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2181": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3948,
        3986
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2182": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3948,
        3986
      ],
      "op": "RETURNDATACOPY",
      "path": "6"
    },
    "2183": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3948,
        3986
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "2184": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3948,
        3986
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2186": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3948,
        3986
      ],
      "op": "REVERT",
      "path": "6"
    },
    "2187": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3948,
        3986
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2188": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3948,
        3986
      ],
      "op": "POP",
      "path": "6"
    },
    "2189": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3948,
        3986
      ],
      "op": "POP",
      "path": "6"
    },
    "2190": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3948,
        3986
      ],
      "op": "POP",
      "path": "6"
    },
    "2191": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3948,
        3986
      ],
      "op": "POP",
      "path": "6"
    },
    "2192": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3948,
        3986
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2194": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3948,
        3986
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2195": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3948,
        3986
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "2196": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3948,
        3986
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1F"
    },
    "2198": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3948,
        3986
      ],
      "op": "NOT",
      "path": "6"
    },
    "2199": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3948,
        3986
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1F"
    },
    "2201": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3948,
        3986
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2202": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3948,
        3986
      ],
      "op": "ADD",
      "path": "6"
    },
    "2203": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3948,
        3986
      ],
      "op": "AND",
      "path": "6"
    },
    "2204": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3948,
        3986
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2205": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3948,
        3986
      ],
      "op": "ADD",
      "path": "6"
    },
    "2206": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3948,
        3986
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2207": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3948,
        3986
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2209": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3948,
        3986
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2210": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3948,
        3986
      ],
      "op": "POP",
      "path": "6"
    },
    "2211": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3948,
        3986
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2212": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3948,
        3986
      ],
      "op": "ADD",
      "path": "6"
    },
    "2213": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3948,
        3986
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2214": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3948,
        3986
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x8AF"
    },
    "2217": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3948,
        3986
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2218": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3948,
        3986
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2219": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3948,
        3986
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1CA3"
    },
    "2222": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "jump": "i",
      "offset": [
        3948,
        3986
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2223": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3948,
        3986
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2224": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3917,
        3986
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2225": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3917,
        3986
      ],
      "op": "POP",
      "path": "6"
    },
    "2226": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4001,
        4033
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2228": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4036,
        4088
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x8DF"
    },
    "2231": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4061,
        4084
      ],
      "op": "DUP6",
      "path": "6"
    },
    "2232": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4085,
        4086
      ],
      "op": "DUP6",
      "path": "6"
    },
    "2233": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4061,
        4087
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2234": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4061,
        4087
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2235": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4061,
        4087
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2236": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4061,
        4087
      ],
      "op": "LT",
      "path": "6"
    },
    "2237": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4061,
        4087
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x8C8"
    },
    "2240": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4061,
        4087
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2241": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4061,
        4087
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x8C8"
    },
    "2244": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4061,
        4087
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1E53"
    },
    "2247": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "jump": "i",
      "offset": [
        4061,
        4087
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2248": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4061,
        4087
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2249": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4061,
        4087
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2251": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4061,
        4087
      ],
      "op": "MUL",
      "path": "6"
    },
    "2252": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4061,
        4087
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2254": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4061,
        4087
      ],
      "op": "ADD",
      "path": "6"
    },
    "2255": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4061,
        4087
      ],
      "op": "ADD",
      "path": "6"
    },
    "2256": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4061,
        4087
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2257": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4036,
        4056
      ],
      "op": "DUP4",
      "path": "6"
    },
    "2258": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4036,
        4060
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1837"
    },
    "2261": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4036,
        4060
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2262": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4036,
        4088
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2263": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4036,
        4088
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2264": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4036,
        4088
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xFFFFFFFF"
    },
    "2269": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4036,
        4088
      ],
      "op": "AND",
      "path": "6"
    },
    "2270": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "jump": "i",
      "offset": [
        4036,
        4088
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2271": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4036,
        4088
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2272": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4119,
        4131
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xF"
    },
    "2274": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4119,
        4131
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2275": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4001,
        4088
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2276": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4001,
        4088
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2277": {
      "op": "POP"
    },
    "2278": {
      "branch": 75,
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4119,
        4135
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "2279": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4115,
        4343
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x940"
    },
    "2282": {
      "branch": 75,
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4115,
        4343
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2283": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4314,
        4326
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 11,
      "value": "0xF"
    },
    "2285": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4314,
        4326
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2286": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4224,
        4328
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x926"
    },
    "2289": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4224,
        4328
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2290": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4275,
        4327
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x907"
    },
    "2293": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4275,
        4327
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2294": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4275,
        4309
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x51D"
    },
    "2297": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4275,
        4299
      ],
      "op": "DUP5",
      "path": "6"
    },
    "2298": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4304,
        4308
      ],
      "op": "PUSH8",
      "path": "6",
      "value": "0xDE0B6B3A7640000"
    },
    "2307": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4275,
        4303
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x184A"
    },
    "2310": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "jump": "i",
      "offset": [
        4275,
        4309
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2311": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4275,
        4327
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2312": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2314": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2316": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2318": {
      "op": "SHL"
    },
    "2319": {
      "op": "SUB"
    },
    "2320": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4224,
        4270
      ],
      "op": "DUP6",
      "path": "6"
    },
    "2321": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4224,
        4270
      ],
      "op": "AND",
      "path": "6"
    },
    "2322": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4224,
        4270
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2324": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4224,
        4270
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2325": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4224,
        4270
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2326": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4224,
        4270
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2327": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4224,
        4255
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xD"
    },
    "2329": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4224,
        4270
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2331": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4224,
        4270
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2332": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4224,
        4270
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2334": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4224,
        4270
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2335": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4224,
        4270
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "2336": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4224,
        4270
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2337": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4224,
        4270
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2338": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4224,
        4274
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1862"
    },
    "2341": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "jump": "i",
      "offset": [
        4224,
        4328
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2342": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4224,
        4328
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2343": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2345": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2347": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2349": {
      "op": "SHL"
    },
    "2350": {
      "op": "SUB"
    },
    "2351": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4155,
        4201
      ],
      "op": "DUP5",
      "path": "6"
    },
    "2352": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4155,
        4201
      ],
      "op": "AND",
      "path": "6"
    },
    "2353": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4155,
        4201
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2355": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4155,
        4201
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2356": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4155,
        4201
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2357": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4155,
        4201
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2358": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4155,
        4186
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xD"
    },
    "2360": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4155,
        4201
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2362": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4155,
        4201
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2363": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4155,
        4201
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2365": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4155,
        4201
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2366": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4155,
        4201
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "2367": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4155,
        4328
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "2368": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4115,
        4343
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2369": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2371": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2373": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2375": {
      "op": "SHL"
    },
    "2376": {
      "op": "SUB"
    },
    "2377": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4567,
        4591
      ],
      "op": "DUP1",
      "path": "6",
      "statement": 12
    },
    "2378": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4567,
        4591
      ],
      "op": "DUP10",
      "path": "6"
    },
    "2379": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4567,
        4591
      ],
      "op": "AND",
      "path": "6"
    },
    "2380": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4567,
        4591
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2382": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4567,
        4591
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2383": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4567,
        4591
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2384": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4567,
        4591
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2385": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4567,
        4582
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xC"
    },
    "2387": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4567,
        4591
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2389": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4567,
        4591
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2390": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4567,
        4591
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2391": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4567,
        4591
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2392": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4567,
        4591
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2394": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4567,
        4591
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2395": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4567,
        4591
      ],
      "op": "DUP4",
      "path": "6"
    },
    "2396": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4567,
        4591
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "2397": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4567,
        4606
      ],
      "op": "SWAP5",
      "path": "6"
    },
    "2398": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4567,
        4606
      ],
      "op": "DUP9",
      "path": "6"
    },
    "2399": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4567,
        4606
      ],
      "op": "AND",
      "path": "6"
    },
    "2400": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4567,
        4606
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2401": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4567,
        4606
      ],
      "op": "DUP5",
      "path": "6"
    },
    "2402": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4567,
        4606
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2403": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4567,
        4606
      ],
      "op": "SWAP5",
      "path": "6"
    },
    "2404": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4567,
        4606
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2405": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4567,
        4606
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2406": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4567,
        4606
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2407": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4567,
        4606
      ],
      "op": "DUP4",
      "path": "6"
    },
    "2408": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4567,
        4606
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "2409": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4567,
        4606
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2410": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4476,
        4518
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "2411": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4476,
        4518
      ],
      "op": "DUP4",
      "path": "6"
    },
    "2412": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4476,
        4518
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2413": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4476,
        4509
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xE"
    },
    "2415": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4476,
        4518
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2416": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4476,
        4518
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2417": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4476,
        4518
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2418": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4476,
        4518
      ],
      "op": "DUP4",
      "path": "6"
    },
    "2419": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4476,
        4518
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "2420": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4476,
        4533
      ],
      "op": "SWAP5",
      "path": "6"
    },
    "2421": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4476,
        4533
      ],
      "op": "DUP4",
      "path": "6"
    },
    "2422": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4476,
        4533
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2423": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4476,
        4533
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "2424": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4476,
        4533
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2425": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4476,
        4533
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2426": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4476,
        4533
      ],
      "op": "DUP4",
      "path": "6"
    },
    "2427": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4476,
        4533
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2428": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4476,
        4533
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "2429": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4476,
        4533
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2430": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4425,
        4456
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xD"
    },
    "2432": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4425,
        4471
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2433": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4425,
        4471
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2434": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4425,
        4471
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2435": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4425,
        4471
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "2436": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4425,
        4471
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2437": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4425,
        4471
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "2438": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4425,
        4471
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2439": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4385,
        4607
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x9C4"
    },
    "2442": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4385,
        4607
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "2443": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4385,
        4562
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x523"
    },
    "2446": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4385,
        4562
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2447": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4557,
        4561
      ],
      "op": "PUSH8",
      "path": "6",
      "value": "0xDE0B6B3A7640000"
    },
    "2456": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4557,
        4561
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2457": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4385,
        4535
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x51D"
    },
    "2460": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4385,
        4535
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2461": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4425,
        4534
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x9A5"
    },
    "2464": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4425,
        4534
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2465": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4425,
        4475
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1837"
    },
    "2468": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "jump": "i",
      "offset": [
        4425,
        4534
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2469": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4425,
        4534
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2470": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2472": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2474": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2476": {
      "op": "SHL"
    },
    "2477": {
      "op": "SUB"
    },
    "2478": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4385,
        4403
      ],
      "op": "DUP15",
      "path": "6"
    },
    "2479": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4385,
        4403
      ],
      "op": "AND",
      "path": "6"
    },
    "2480": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4385,
        4403
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2482": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4385,
        4403
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2483": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4385,
        4403
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2484": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4385,
        4403
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2485": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4385,
        4394
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x10"
    },
    "2487": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4385,
        4403
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2489": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4385,
        4403
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2490": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4385,
        4403
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2492": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4385,
        4403
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2493": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4385,
        4403
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "2494": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4385,
        4403
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2495": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4385,
        4403
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2496": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4385,
        4424
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x184A"
    },
    "2499": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "jump": "i",
      "offset": [
        4385,
        4535
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2500": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4385,
        4607
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2501": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4357,
        4363
      ],
      "op": "DUP8",
      "path": "6"
    },
    "2502": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4364,
        4365
      ],
      "op": "DUP6",
      "path": "6"
    },
    "2503": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4357,
        4366
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2504": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4357,
        4366
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2505": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4357,
        4366
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2506": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4357,
        4366
      ],
      "op": "LT",
      "path": "6"
    },
    "2507": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4357,
        4366
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x9D6"
    },
    "2510": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4357,
        4366
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2511": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4357,
        4366
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x9D6"
    },
    "2514": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4357,
        4366
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1E53"
    },
    "2517": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "jump": "i",
      "offset": [
        4357,
        4366
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2518": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4357,
        4366
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2519": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4357,
        4366
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2521": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4357,
        4366
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2522": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4357,
        4366
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2523": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4357,
        4366
      ],
      "op": "MUL",
      "path": "6"
    },
    "2524": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4357,
        4366
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2525": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4357,
        4366
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2526": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4357,
        4366
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2527": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4357,
        4366
      ],
      "op": "ADD",
      "path": "6"
    },
    "2528": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4357,
        4366
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2529": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4357,
        4366
      ],
      "op": "ADD",
      "path": "6"
    },
    "2530": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4357,
        4607
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2531": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4357,
        4607
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2532": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4357,
        4607
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2533": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4357,
        4607
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2534": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2536": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2538": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2540": {
      "op": "SHL"
    },
    "2541": {
      "op": "SUB"
    },
    "2542": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4682,
        4728
      ],
      "op": "DUP1",
      "path": "6",
      "statement": 13
    },
    "2543": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4682,
        4728
      ],
      "op": "DUP6",
      "path": "6"
    },
    "2544": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4682,
        4728
      ],
      "op": "AND",
      "path": "6"
    },
    "2545": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4682,
        4728
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2547": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4682,
        4728
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2548": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4682,
        4728
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2549": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4682,
        4728
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2550": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4682,
        4713
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xD"
    },
    "2552": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4682,
        4728
      ],
      "op": "DUP5",
      "path": "6"
    },
    "2553": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4682,
        4728
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2554": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4682,
        4728
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2556": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4682,
        4728
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2557": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4682,
        4728
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2558": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4682,
        4728
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "2559": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4682,
        4728
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2560": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4622,
        4664
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "2561": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4622,
        4664
      ],
      "op": "DUP14",
      "path": "6"
    },
    "2562": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4622,
        4664
      ],
      "op": "AND",
      "path": "6"
    },
    "2563": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4622,
        4664
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2564": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4622,
        4664
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2565": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4622,
        4655
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xE"
    },
    "2567": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4622,
        4664
      ],
      "op": "DUP6",
      "path": "6"
    },
    "2568": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4622,
        4664
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2569": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4622,
        4664
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2570": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4622,
        4664
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2571": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4622,
        4664
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "2572": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4622,
        4679
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "2573": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4622,
        4679
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2574": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4622,
        4679
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2575": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4622,
        4679
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2576": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4622,
        4679
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2577": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4622,
        4679
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "2578": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4622,
        4679
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2579": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4622,
        4679
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2580": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4622,
        4679
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2581": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4622,
        4679
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "2582": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4622,
        4728
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "2583": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4784,
        4793
      ],
      "op": "DUP7",
      "path": "6",
      "statement": 14
    },
    "2584": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4784,
        4793
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2585": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4784,
        4790
      ],
      "op": "DUP8",
      "path": "6"
    },
    "2586": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4784,
        4790
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2587": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4791,
        4792
      ],
      "op": "DUP6",
      "path": "6"
    },
    "2588": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4791,
        4792
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2589": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4784,
        4793
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2590": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4784,
        4793
      ],
      "op": "LT",
      "path": "6"
    },
    "2591": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4784,
        4793
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xA2A"
    },
    "2594": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4784,
        4793
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2595": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4784,
        4793
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xA2A"
    },
    "2598": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4784,
        4793
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1E53"
    },
    "2601": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "jump": "i",
      "offset": [
        4784,
        4793
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2602": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4784,
        4793
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2603": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4784,
        4793
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2605": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4784,
        4793
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2606": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4784,
        4793
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2607": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4784,
        4793
      ],
      "op": "MUL",
      "path": "6"
    },
    "2608": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4784,
        4793
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2609": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4784,
        4793
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2610": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4784,
        4793
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2611": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4784,
        4793
      ],
      "op": "ADD",
      "path": "6"
    },
    "2612": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4784,
        4793
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2613": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4784,
        4793
      ],
      "op": "ADD",
      "path": "6"
    },
    "2614": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4784,
        4793
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2615": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2617": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2619": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2621": {
      "op": "SHL"
    },
    "2622": {
      "op": "SUB"
    },
    "2623": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4742,
        4766
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2624": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4742,
        4766
      ],
      "op": "DUP12",
      "path": "6"
    },
    "2625": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4742,
        4766
      ],
      "op": "AND",
      "path": "6"
    },
    "2626": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4742,
        4766
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2628": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4742,
        4766
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2629": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4742,
        4766
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2630": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4742,
        4766
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2631": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4742,
        4757
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xC"
    },
    "2633": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4742,
        4766
      ],
      "op": "DUP5",
      "path": "6"
    },
    "2634": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4742,
        4766
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2635": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4742,
        4766
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2637": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4742,
        4766
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2638": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4742,
        4766
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2639": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4742,
        4766
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "2640": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4742,
        4781
      ],
      "op": "SWAP8",
      "path": "6"
    },
    "2641": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4742,
        4781
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2642": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4742,
        4781
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "2643": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4742,
        4781
      ],
      "op": "AND",
      "path": "6"
    },
    "2644": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4742,
        4781
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2645": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4742,
        4781
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2646": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4742,
        4781
      ],
      "op": "SWAP6",
      "path": "6"
    },
    "2647": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4742,
        4781
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2648": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4742,
        4781
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "2649": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4742,
        4781
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2650": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4742,
        4781
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "2651": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4742,
        4781
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "2652": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4742,
        4793
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "2653": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4742,
        4793
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2654": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4742,
        4793
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "2655": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4742,
        4793
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "2656": {
      "op": "POP"
    },
    "2657": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3844,
        3847
      ],
      "op": "DUP2",
      "path": "6",
      "statement": 15
    },
    "2658": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3844,
        3847
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2659": {
      "op": "POP"
    },
    "2660": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3844,
        3847
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xA6C"
    },
    "2663": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3844,
        3847
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2664": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3844,
        3847
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1E22"
    },
    "2667": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "jump": "i",
      "offset": [
        3844,
        3847
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2668": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3844,
        3847
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2669": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3844,
        3847
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2670": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3844,
        3847
      ],
      "op": "POP",
      "path": "6"
    },
    "2671": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3844,
        3847
      ],
      "op": "POP",
      "path": "6"
    },
    "2672": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3797,
        4804
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x80A"
    },
    "2675": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3797,
        4804
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2676": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3797,
        4804
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2677": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3797,
        4804
      ],
      "op": "POP",
      "path": "6"
    },
    "2678": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4814,
        4827
      ],
      "op": "POP",
      "path": "6",
      "statement": 16
    },
    "2679": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        4814,
        4827
      ],
      "op": "POP",
      "path": "6"
    },
    "2680": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3284,
        4834
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2681": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3284,
        4834
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2682": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "offset": [
        3284,
        4834
      ],
      "op": "POP",
      "path": "6"
    },
    "2683": {
      "fn": "MockMoolaStakingRewards.earnedExternal",
      "jump": "o",
      "offset": [
        3284,
        4834
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2684": {
      "fn": "MockMoolaStakingRewards.withdraw",
      "offset": [
        5551,
        5960
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2685": {
      "offset": [
        1680,
        1681
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "2687": {
      "offset": [
        2260,
        2267
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "2689": {
      "fn": "MockMoolaStakingRewards.withdraw",
      "offset": [
        2260,
        2267
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2690": {
      "offset": [
        2260,
        2279
      ],
      "op": "EQ",
      "path": "0"
    },
    "2691": {
      "fn": "MockMoolaStakingRewards.withdraw",
      "offset": [
        2260,
        2279
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2692": {
      "offset": [
        2252,
        2315
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAA8"
    },
    "2695": {
      "offset": [
        2252,
        2315
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2696": {
      "fn": "MockMoolaStakingRewards.withdraw",
      "offset": [
        2252,
        2315
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2698": {
      "fn": "MockMoolaStakingRewards.withdraw",
      "offset": [
        2252,
        2315
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2699": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2703": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2705": {
      "op": "SHL"
    },
    "2706": {
      "offset": [
        2252,
        2315
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2707": {
      "fn": "MockMoolaStakingRewards.withdraw",
      "offset": [
        2252,
        2315
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2708": {
      "fn": "MockMoolaStakingRewards.withdraw",
      "offset": [
        2252,
        2315
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2710": {
      "fn": "MockMoolaStakingRewards.withdraw",
      "offset": [
        2252,
        2315
      ],
      "op": "ADD",
      "path": "0"
    },
    "2711": {
      "fn": "MockMoolaStakingRewards.withdraw",
      "offset": [
        2252,
        2315
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA9F"
    },
    "2714": {
      "fn": "MockMoolaStakingRewards.withdraw",
      "offset": [
        2252,
        2315
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2715": {
      "fn": "MockMoolaStakingRewards.withdraw",
      "offset": [
        2252,
        2315
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1D4F"
    },
    "2718": {
      "fn": "MockMoolaStakingRewards.withdraw",
      "jump": "i",
      "offset": [
        2252,
        2315
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2719": {
      "fn": "MockMoolaStakingRewards.withdraw",
      "offset": [
        2252,
        2315
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2720": {
      "fn": "MockMoolaStakingRewards.withdraw",
      "offset": [
        2252,
        2315
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2722": {
      "fn": "MockMoolaStakingRewards.withdraw",
      "offset": [
        2252,
        2315
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2723": {
      "fn": "MockMoolaStakingRewards.withdraw",
      "offset": [
        2252,
        2315
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2724": {
      "fn": "MockMoolaStakingRewards.withdraw",
      "offset": [
        2252,
        2315
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2725": {
      "fn": "MockMoolaStakingRewards.withdraw",
      "offset": [
        2252,
        2315
      ],
      "op": "SUB",
      "path": "0"
    },
    "2726": {
      "fn": "MockMoolaStakingRewards.withdraw",
      "offset": [
        2252,
        2315
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2727": {
      "fn": "MockMoolaStakingRewards.withdraw",
      "offset": [
        2252,
        2315
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "0"
    },
    "2728": {
      "fn": "MockMoolaStakingRewards.withdraw",
      "offset": [
        2252,
        2315
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2729": {
      "offset": [
        1680,
        1681
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "2731": {
      "offset": [
        2390,
        2397
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "2733": {
      "offset": [
        2390,
        2408
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "2734": {
      "fn": "MockMoolaStakingRewards.withdraw",
      "offset": [
        5627,
        5637
      ],
      "op": "CALLER",
      "path": "6"
    },
    "2735": {
      "offset": [
        9182,
        9198
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xAB6"
    },
    "2738": {
      "offset": [
        9182,
        9196
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x17C8"
    },
    "2741": {
      "jump": "i",
      "offset": [
        9182,
        9198
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2742": {
      "fn": "MockMoolaStakingRewards.withdraw",
      "offset": [
        9182,
        9198
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2743": {
      "offset": [
        9159,
        9179
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x9"
    },
    "2745": {
      "offset": [
        9159,
        9198
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "2746": {
      "offset": [
        9225,
        9251
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xAC1"
    },
    "2749": {
      "offset": [
        9225,
        9249
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x133C"
    },
    "2752": {
      "jump": "i",
      "offset": [
        9225,
        9251
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2753": {
      "fn": "MockMoolaStakingRewards.withdraw",
      "offset": [
        9225,
        9251
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2754": {
      "offset": [
        9208,
        9222
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x8"
    },
    "2756": {
      "offset": [
        9208,
        9251
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "2757": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2759": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2761": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2763": {
      "op": "SHL"
    },
    "2764": {
      "op": "SUB"
    },
    "2765": {
      "offset": [
        9265,
        9286
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2766": {
      "fn": "MockMoolaStakingRewards.withdraw",
      "offset": [
        9265,
        9286
      ],
      "op": "AND",
      "path": "6"
    },
    "2767": {
      "fn": "MockMoolaStakingRewards.withdraw",
      "offset": [
        9265,
        9286
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "2768": {
      "offset": [
        9261,
        9452
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xB12"
    },
    "2771": {
      "offset": [
        9261,
        9452
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2772": {
      "offset": [
        9321,
        9336
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xADC"
    },
    "2775": {
      "offset": [
        9328,
        9335
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2776": {
      "offset": [
        9321,
        9327
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x4B1"
    },
    "2779": {
      "jump": "i",
      "offset": [
        9321,
        9336
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2780": {
      "fn": "MockMoolaStakingRewards.withdraw",
      "offset": [
        9321,
        9336
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2781": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2783": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2785": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2787": {
      "op": "SHL"
    },
    "2788": {
      "op": "SUB"
    },
    "2789": {
      "offset": [
        9302,
        9318
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2790": {
      "fn": "MockMoolaStakingRewards.withdraw",
      "offset": [
        9302,
        9318
      ],
      "op": "AND",
      "path": "6"
    },
    "2791": {
      "fn": "MockMoolaStakingRewards.withdraw",
      "offset": [
        9302,
        9318
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2793": {
      "fn": "MockMoolaStakingRewards.withdraw",
      "offset": [
        9302,
        9318
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2794": {
      "fn": "MockMoolaStakingRewards.withdraw",
      "offset": [
        9302,
        9318
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2795": {
      "fn": "MockMoolaStakingRewards.withdraw",
      "offset": [
        9302,
        9318
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2796": {
      "offset": [
        9302,
        9309
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xB"
    },
    "2798": {
      "offset": [
        9302,
        9318
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2800": {
      "fn": "MockMoolaStakingRewards.withdraw",
      "offset": [
        9302,
        9318
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2801": {
      "fn": "MockMoolaStakingRewards.withdraw",
      "offset": [
        9302,
        9318
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2802": {
      "fn": "MockMoolaStakingRewards.withdraw",
      "offset": [
        9302,
        9318
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2803": {
      "fn": "MockMoolaStakingRewards.withdraw",
      "offset": [
        9302,
        9318
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2805": {
      "fn": "MockMoolaStakingRewards.withdraw",
      "offset": [
        9302,
        9318
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2806": {
      "fn": "MockMoolaStakingRewards.withdraw",
      "offset": [
        9302,
        9318
      ],
      "op": "DUP4",
      "path": "6"
    },
    "2807": {
      "fn": "MockMoolaStakingRewards.withdraw",
      "offset": [
        9302,
        9318
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "2808": {
      "offset": [
        9302,
        9336
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "2809": {
      "fn": "MockMoolaStakingRewards.withdraw",
      "offset": [
        9302,
        9336
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2810": {
      "fn": "MockMoolaStakingRewards.withdraw",
      "offset": [
        9302,
        9336
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "2811": {
      "fn": "MockMoolaStakingRewards.withdraw",
      "offset": [
        9302,
        9336
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "2812": {
      "offset": [
        9384,
        9404
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x9"
    },
    "2814": {
      "fn": "MockMoolaStakingRewards.withdraw",
      "offset": [
        9384,
        9404
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2815": {
      "offset": [
        9350,
        9372
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xA"
    },
    "2817": {
      "offset": [
        9350,
        9381
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2818": {
      "fn": "MockMoolaStakingRewards.withdraw",
      "offset": [
        9350,
        9381
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2819": {
      "fn": "MockMoolaStakingRewards.withdraw",
      "offset": [
        9350,
        9381
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2820": {
      "fn": "MockMoolaStakingRewards.withdraw",
      "offset": [
        9350,
        9381
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2821": {
      "fn": "MockMoolaStakingRewards.withdraw",
      "offset": [
        9350,
        9381
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2822": {
      "fn": "MockMoolaStakingRewards.withdraw",
      "offset": [
        9350,
        9381
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "2823": {
      "offset": [
        9350,
        9404
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "2824": {
      "offset": [
        9418,
        9441
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xB10"
    },
    "2827": {
      "offset": [
        9310,
        9317
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2828": {
      "offset": [
        9418,
        9432
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x5D4"
    },
    "2831": {
      "jump": "i",
      "offset": [
        9418,
        9441
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2832": {
      "fn": "MockMoolaStakingRewards.withdraw",
      "offset": [
        9418,
        9441
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2833": {
      "fn": "MockMoolaStakingRewards.withdraw",
      "offset": [
        9418,
        9441
      ],
      "op": "POP",
      "path": "6"
    },
    "2834": {
      "offset": [
        9261,
        9452
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2835": {
      "fn": "MockMoolaStakingRewards.withdraw",
      "offset": [
        5666,
        5667
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 17,
      "value": "0x0"
    },
    "2837": {
      "fn": "MockMoolaStakingRewards.withdraw",
      "offset": [
        5657,
        5663
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2838": {
      "branch": 76,
      "fn": "MockMoolaStakingRewards.withdraw",
      "offset": [
        5657,
        5667
      ],
      "op": "GT",
      "path": "6"
    },
    "2839": {
      "fn": "MockMoolaStakingRewards.withdraw",
      "offset": [
        5649,
        5689
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xB56"
    },
    "2842": {
      "branch": 76,
      "fn": "MockMoolaStakingRewards.withdraw",
      "offset": [
        5649,
        5689
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2843": {
      "fn": "MockMoolaStakingRewards.withdraw",
      "offset": [
        5649,
        5689
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2845": {
      "fn": "MockMoolaStakingRewards.withdraw",
      "offset": [
        5649,
        5689
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2846": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2850": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2852": {
      "op": "SHL"
    },
    "2853": {
      "fn": "MockMoolaStakingRewards.withdraw",
      "offset": [
        5649,
        5689
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2854": {
      "fn": "MockMoolaStakingRewards.withdraw",
      "offset": [
        5649,
        5689
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2855": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2857": {
      "fn": "MockMoolaStakingRewards.withdraw",
      "offset": [
        5649,
        5689
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "2859": {
      "fn": "MockMoolaStakingRewards.withdraw",
      "offset": [
        5649,
        5689
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2860": {
      "fn": "MockMoolaStakingRewards.withdraw",
      "offset": [
        5649,
        5689
      ],
      "op": "ADD",
      "path": "6"
    },
    "2861": {
      "op": "MSTORE"
    },
    "2862": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "2864": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2866": {
      "op": "DUP3"
    },
    "2867": {
      "op": "ADD"
    },
    "2868": {
      "op": "MSTORE"
    },
    "2869": {
      "op": "PUSH17",
      "value": "0x43616E6E6F74207769746864726177203"
    },
    "2887": {
      "op": "PUSH1",
      "value": "0x7C"
    },
    "2889": {
      "op": "SHL"
    },
    "2890": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2892": {
      "op": "DUP3"
    },
    "2893": {
      "op": "ADD"
    },
    "2894": {
      "op": "MSTORE"
    },
    "2895": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2897": {
      "op": "ADD"
    },
    "2898": {
      "fn": "MockMoolaStakingRewards.withdraw",
      "offset": [
        5649,
        5689
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xA9F"
    },
    "2901": {
      "op": "JUMP"
    },
    "2902": {
      "fn": "MockMoolaStakingRewards.withdraw",
      "offset": [
        5649,
        5689
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2903": {
      "fn": "MockMoolaStakingRewards.withdraw",
      "offset": [
        5714,
        5726
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 18,
      "value": "0xF"
    },
    "2905": {
      "fn": "MockMoolaStakingRewards.withdraw",
      "offset": [
        5714,
        5726
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2906": {
      "fn": "MockMoolaStakingRewards.withdraw",
      "offset": [
        5714,
        5738
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xB63"
    },
    "2909": {
      "fn": "MockMoolaStakingRewards.withdraw",
      "offset": [
        5714,
        5738
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2910": {
      "fn": "MockMoolaStakingRewards.withdraw",
      "offset": [
        5731,
        5737
      ],
      "op": "DUP4",
      "path": "6"
    },
    "2911": {
      "fn": "MockMoolaStakingRewards.withdraw",
      "offset": [
        5714,
        5730
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1837"
    },
    "2914": {
      "fn": "MockMoolaStakingRewards.withdraw",
      "jump": "i",
      "offset": [
        5714,
        5738
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2915": {
      "fn": "MockMoolaStakingRewards.withdraw",
      "offset": [
        5714,
        5738
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2916": {
      "fn": "MockMoolaStakingRewards.withdraw",
      "offset": [
        5699,
        5711
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xF"
    },
    "2918": {
      "fn": "MockMoolaStakingRewards.withdraw",
      "offset": [
        5699,
        5738
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "2919": {
      "fn": "MockMoolaStakingRewards.withdraw",
      "offset": [
        5782,
        5792
      ],
      "op": "CALLER",
      "path": "6",
      "statement": 19
    },
    "2920": {
      "fn": "MockMoolaStakingRewards.withdraw",
      "offset": [
        5772,
        5793
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2922": {
      "fn": "MockMoolaStakingRewards.withdraw",
      "offset": [
        5772,
        5793
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2923": {
      "fn": "MockMoolaStakingRewards.withdraw",
      "offset": [
        5772,
        5793
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2924": {
      "fn": "MockMoolaStakingRewards.withdraw",
      "offset": [
        5772,
        5793
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2925": {
      "fn": "MockMoolaStakingRewards.withdraw",
      "offset": [
        5772,
        5781
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x10"
    },
    "2927": {
      "fn": "MockMoolaStakingRewards.withdraw",
      "offset": [
        5772,
        5793
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2929": {
      "fn": "MockMoolaStakingRewards.withdraw",
      "offset": [
        5772,
        5793
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2930": {
      "fn": "MockMoolaStakingRewards.withdraw",
      "offset": [
        5772,
        5793
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2932": {
      "fn": "MockMoolaStakingRewards.withdraw",
      "offset": [
        5772,
        5793
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2933": {
      "fn": "MockMoolaStakingRewards.withdraw",
      "offset": [
        5772,
        5793
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "2934": {
      "fn": "MockMoolaStakingRewards.withdraw",
      "offset": [
        5772,
        5793
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2935": {
      "fn": "MockMoolaStakingRewards.withdraw",
      "offset": [
        5772,
        5805
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xB80"
    },
    "2938": {
      "fn": "MockMoolaStakingRewards.withdraw",
      "offset": [
        5772,
        5805
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2939": {
      "fn": "MockMoolaStakingRewards.withdraw",
      "offset": [
        5798,
        5804
      ],
      "op": "DUP4",
      "path": "6"
    },
    "2940": {
      "fn": "MockMoolaStakingRewards.withdraw",
      "offset": [
        5772,
        5797
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1837"
    },
    "2943": {
      "fn": "MockMoolaStakingRewards.withdraw",
      "jump": "i",
      "offset": [
        5772,
        5805
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2944": {
      "fn": "MockMoolaStakingRewards.withdraw",
      "offset": [
        5772,
        5805
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2945": {
      "fn": "MockMoolaStakingRewards.withdraw",
      "offset": [
        5758,
        5768
      ],
      "op": "CALLER",
      "path": "6"
    },
    "2946": {
      "fn": "MockMoolaStakingRewards.withdraw",
      "offset": [
        5748,
        5769
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2948": {
      "fn": "MockMoolaStakingRewards.withdraw",
      "offset": [
        5748,
        5769
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2949": {
      "fn": "MockMoolaStakingRewards.withdraw",
      "offset": [
        5748,
        5769
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2950": {
      "fn": "MockMoolaStakingRewards.withdraw",
      "offset": [
        5748,
        5769
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2951": {
      "fn": "MockMoolaStakingRewards.withdraw",
      "offset": [
        5748,
        5757
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x10"
    },
    "2953": {
      "fn": "MockMoolaStakingRewards.withdraw",
      "offset": [
        5748,
        5769
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2955": {
      "fn": "MockMoolaStakingRewards.withdraw",
      "offset": [
        5748,
        5769
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2956": {
      "fn": "MockMoolaStakingRewards.withdraw",
      "offset": [
        5748,
        5769
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2958": {
      "fn": "MockMoolaStakingRewards.withdraw",
      "offset": [
        5748,
        5769
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2959": {
      "fn": "MockMoolaStakingRewards.withdraw",
      "offset": [
        5748,
        5769
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2960": {
      "fn": "MockMoolaStakingRewards.withdraw",
      "offset": [
        5748,
        5769
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2961": {
      "fn": "MockMoolaStakingRewards.withdraw",
      "offset": [
        5748,
        5769
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "2962": {
      "fn": "MockMoolaStakingRewards.withdraw",
      "offset": [
        5748,
        5805
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2963": {
      "fn": "MockMoolaStakingRewards.withdraw",
      "offset": [
        5748,
        5805
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2964": {
      "fn": "MockMoolaStakingRewards.withdraw",
      "offset": [
        5748,
        5805
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2965": {
      "fn": "MockMoolaStakingRewards.withdraw",
      "offset": [
        5748,
        5805
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "2966": {
      "fn": "MockMoolaStakingRewards.withdraw",
      "offset": [
        5815,
        5854
      ],
      "op": "MLOAD",
      "path": "6",
      "statement": 20
    },
    "2967": {
      "op": "PUSH4",
      "value": "0x2E1A7D4D"
    },
    "2972": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2974": {
      "op": "SHL"
    },
    "2975": {
      "fn": "MockMoolaStakingRewards.withdraw",
      "offset": [
        5815,
        5854
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2976": {
      "fn": "MockMoolaStakingRewards.withdraw",
      "offset": [
        5815,
        5854
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2977": {
      "fn": "MockMoolaStakingRewards.withdraw",
      "offset": [
        5815,
        5854
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "2979": {
      "fn": "MockMoolaStakingRewards.withdraw",
      "offset": [
        5815,
        5854
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2980": {
      "fn": "MockMoolaStakingRewards.withdraw",
      "offset": [
        5815,
        5854
      ],
      "op": "ADD",
      "path": "6"
    },
    "2981": {
      "op": "DUP4"
    },
    "2982": {
      "op": "SWAP1"
    },
    "2983": {
      "op": "MSTORE"
    },
    "2984": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2986": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2988": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2990": {
      "op": "SHL"
    },
    "2991": {
      "op": "SUB"
    },
    "2992": {
      "fn": "MockMoolaStakingRewards.withdraw",
      "offset": [
        5815,
        5837
      ],
      "op": "PUSH32",
      "path": "6",
      "value": "0x0"
    },
    "3025": {
      "fn": "MockMoolaStakingRewards.withdraw",
      "offset": [
        5815,
        5846
      ],
      "op": "AND",
      "path": "6"
    },
    "3026": {
      "fn": "MockMoolaStakingRewards.withdraw",
      "offset": [
        5815,
        5846
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3027": {
      "fn": "MockMoolaStakingRewards.withdraw",
      "offset": [
        5815,
        5846
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x2E1A7D4D"
    },
    "3032": {
      "fn": "MockMoolaStakingRewards.withdraw",
      "offset": [
        5815,
        5846
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3033": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3035": {
      "op": "ADD"
    },
    "3036": {
      "fn": "MockMoolaStakingRewards.withdraw",
      "offset": [
        5815,
        5854
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "3038": {
      "fn": "MockMoolaStakingRewards.withdraw",
      "offset": [
        5815,
        5854
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "3040": {
      "fn": "MockMoolaStakingRewards.withdraw",
      "offset": [
        5815,
        5854
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "3041": {
      "fn": "MockMoolaStakingRewards.withdraw",
      "offset": [
        5815,
        5854
      ],
      "op": "DUP1",
      "path": "6"
    },
    "3042": {
      "fn": "MockMoolaStakingRewards.withdraw",
      "offset": [
        5815,
        5854
      ],
      "op": "DUP4",
      "path": "6"
    },
    "3043": {
      "fn": "MockMoolaStakingRewards.withdraw",
      "offset": [
        5815,
        5854
      ],
      "op": "SUB",
      "path": "6"
    },
    "3044": {
      "fn": "MockMoolaStakingRewards.withdraw",
      "offset": [
        5815,
        5854
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3045": {
      "fn": "MockMoolaStakingRewards.withdraw",
      "offset": [
        5815,
        5854
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "3047": {
      "fn": "MockMoolaStakingRewards.withdraw",
      "offset": [
        5815,
        5854
      ],
      "op": "DUP8",
      "path": "6"
    },
    "3048": {
      "fn": "MockMoolaStakingRewards.withdraw",
      "offset": [
        5815,
        5854
      ],
      "op": "DUP1",
      "path": "6"
    },
    "3049": {
      "fn": "MockMoolaStakingRewards.withdraw",
      "offset": [
        5815,
        5854
      ],
      "op": "EXTCODESIZE",
      "path": "6"
    },
    "3050": {
      "fn": "MockMoolaStakingRewards.withdraw",
      "offset": [
        5815,
        5854
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "3051": {
      "fn": "MockMoolaStakingRewards.withdraw",
      "offset": [
        5815,
        5854
      ],
      "op": "DUP1",
      "path": "6"
    },
    "3052": {
      "fn": "MockMoolaStakingRewards.withdraw",
      "offset": [
        5815,
        5854
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "3053": {
      "fn": "MockMoolaStakingRewards.withdraw",
      "offset": [
        5815,
        5854
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xBF5"
    },
    "3056": {
      "fn": "MockMoolaStakingRewards.withdraw",
      "offset": [
        5815,
        5854
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "3057": {
      "fn": "MockMoolaStakingRewards.withdraw",
      "offset": [
        5815,
        5854
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "3059": {
      "fn": "MockMoolaStakingRewards.withdraw",
      "offset": [
        5815,
        5854
      ],
      "op": "DUP1",
      "path": "6"
    },
    "3060": {
      "fn": "MockMoolaStakingRewards.withdraw",
      "offset": [
        5815,
        5854
      ],
      "op": "REVERT",
      "path": "6"
    },
    "3061": {
      "fn": "MockMoolaStakingRewards.withdraw",
      "offset": [
        5815,
        5854
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3062": {
      "fn": "MockMoolaStakingRewards.withdraw",
      "offset": [
        5815,
        5854
      ],
      "op": "POP",
      "path": "6"
    },
    "3063": {
      "fn": "MockMoolaStakingRewards.withdraw",
      "offset": [
        5815,
        5854
      ],
      "op": "GAS",
      "path": "6"
    },
    "3064": {
      "fn": "MockMoolaStakingRewards.withdraw",
      "offset": [
        5815,
        5854
      ],
      "op": "CALL",
      "path": "6"
    },
    "3065": {
      "fn": "MockMoolaStakingRewards.withdraw",
      "offset": [
        5815,
        5854
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "3066": {
      "fn": "MockMoolaStakingRewards.withdraw",
      "offset": [
        5815,
        5854
      ],
      "op": "DUP1",
      "path": "6"
    },
    "3067": {
      "fn": "MockMoolaStakingRewards.withdraw",
      "offset": [
        5815,
        5854
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "3068": {
      "fn": "MockMoolaStakingRewards.withdraw",
      "offset": [
        5815,
        5854
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xC09"
    },
    "3071": {
      "fn": "MockMoolaStakingRewards.withdraw",
      "offset": [
        5815,
        5854
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "3072": {
      "fn": "MockMoolaStakingRewards.withdraw",
      "offset": [
        5815,
        5854
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "3073": {
      "fn": "MockMoolaStakingRewards.withdraw",
      "offset": [
        5815,
        5854
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "3075": {
      "fn": "MockMoolaStakingRewards.withdraw",
      "offset": [
        5815,
        5854
      ],
      "op": "DUP1",
      "path": "6"
    },
    "3076": {
      "fn": "MockMoolaStakingRewards.withdraw",
      "offset": [
        5815,
        5854
      ],
      "op": "RETURNDATACOPY",
      "path": "6"
    },
    "3077": {
      "fn": "MockMoolaStakingRewards.withdraw",
      "offset": [
        5815,
        5854
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "3078": {
      "fn": "MockMoolaStakingRewards.withdraw",
      "offset": [
        5815,
        5854
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "3080": {
      "fn": "MockMoolaStakingRewards.withdraw",
      "offset": [
        5815,
        5854
      ],
      "op": "REVERT",
      "path": "6"
    },
    "3081": {
      "fn": "MockMoolaStakingRewards.withdraw",
      "offset": [
        5815,
        5854
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3082": {
      "op": "POP"
    },
    "3083": {
      "fn": "MockMoolaStakingRewards.withdraw",
      "offset": [
        5864,
        5909
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 21,
      "value": "0xC43"
    },
    "3086": {
      "fn": "MockMoolaStakingRewards.withdraw",
      "offset": [
        5864,
        5909
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "3087": {
      "op": "POP"
    },
    "3088": {
      "op": "POP"
    },
    "3089": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3091": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3093": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3095": {
      "op": "SHL"
    },
    "3096": {
      "op": "SUB"
    },
    "3097": {
      "fn": "MockMoolaStakingRewards.withdraw",
      "offset": [
        5864,
        5876
      ],
      "op": "PUSH32",
      "path": "6",
      "value": "0x0"
    },
    "3130": {
      "fn": "MockMoolaStakingRewards.withdraw",
      "offset": [
        5864,
        5889
      ],
      "op": "AND",
      "path": "6"
    },
    "3131": {
      "fn": "MockMoolaStakingRewards.withdraw",
      "offset": [
        5864,
        5889
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3132": {
      "op": "POP"
    },
    "3133": {
      "fn": "MockMoolaStakingRewards.withdraw",
      "offset": [
        5890,
        5900
      ],
      "op": "CALLER",
      "path": "6"
    },
    "3134": {
      "fn": "MockMoolaStakingRewards.withdraw",
      "offset": [
        5902,
        5908
      ],
      "op": "DUP5",
      "path": "6"
    },
    "3135": {
      "fn": "MockMoolaStakingRewards.withdraw",
      "offset": [
        5864,
        5889
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x18E0"
    },
    "3138": {
      "fn": "MockMoolaStakingRewards.withdraw",
      "jump": "i",
      "offset": [
        5864,
        5909
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3139": {
      "fn": "MockMoolaStakingRewards.withdraw",
      "offset": [
        5864,
        5909
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3140": {
      "fn": "MockMoolaStakingRewards.withdraw",
      "offset": [
        5924,
        5953
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 22,
      "value": "0x40"
    },
    "3142": {
      "fn": "MockMoolaStakingRewards.withdraw",
      "offset": [
        5924,
        5953
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "3143": {
      "op": "DUP3"
    },
    "3144": {
      "op": "DUP2"
    },
    "3145": {
      "op": "MSTORE"
    },
    "3146": {
      "fn": "MockMoolaStakingRewards.withdraw",
      "offset": [
        5934,
        5944
      ],
      "op": "CALLER",
      "path": "6"
    },
    "3147": {
      "fn": "MockMoolaStakingRewards.withdraw",
      "offset": [
        5934,
        5944
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3148": {
      "fn": "MockMoolaStakingRewards.withdraw",
      "offset": [
        5924,
        5953
      ],
      "op": "PUSH32",
      "path": "6",
      "value": "0x7084F5476618D8E60B11EF0D7D3F06914655ADB8793E28FF7F018D4C76D505D5"
    },
    "3181": {
      "fn": "MockMoolaStakingRewards.withdraw",
      "offset": [
        5924,
        5953
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3182": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3184": {
      "op": "ADD"
    },
    "3185": {
      "fn": "MockMoolaStakingRewards.withdraw",
      "offset": [
        5924,
        5953
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3186": {
      "fn": "MockMoolaStakingRewards.withdraw",
      "offset": [
        5924,
        5953
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "3188": {
      "fn": "MockMoolaStakingRewards.withdraw",
      "offset": [
        5924,
        5953
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "3189": {
      "fn": "MockMoolaStakingRewards.withdraw",
      "offset": [
        5924,
        5953
      ],
      "op": "DUP1",
      "path": "6"
    },
    "3190": {
      "fn": "MockMoolaStakingRewards.withdraw",
      "offset": [
        5924,
        5953
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "3191": {
      "fn": "MockMoolaStakingRewards.withdraw",
      "offset": [
        5924,
        5953
      ],
      "op": "SUB",
      "path": "6"
    },
    "3192": {
      "fn": "MockMoolaStakingRewards.withdraw",
      "offset": [
        5924,
        5953
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3193": {
      "fn": "MockMoolaStakingRewards.withdraw",
      "offset": [
        5924,
        5953
      ],
      "op": "LOG2",
      "path": "6"
    },
    "3194": {
      "op": "POP"
    },
    "3195": {
      "op": "POP"
    },
    "3196": {
      "offset": [
        1637,
        1638
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "3198": {
      "offset": [
        2563,
        2570
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "3200": {
      "offset": [
        2563,
        2585
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "3201": {
      "fn": "MockMoolaStakingRewards.withdraw",
      "jump": "o",
      "offset": [
        5551,
        5960
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3202": {
      "offset": [
        950,
        987
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3203": {
      "fn": "MockMoolaStakingRewards.withdraw",
      "offset": [
        950,
        987
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "3205": {
      "fn": "MockMoolaStakingRewards.withdraw",
      "offset": [
        950,
        987
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3206": {
      "fn": "MockMoolaStakingRewards.withdraw",
      "offset": [
        950,
        987
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3207": {
      "fn": "MockMoolaStakingRewards.withdraw",
      "offset": [
        950,
        987
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "3208": {
      "fn": "MockMoolaStakingRewards.withdraw",
      "offset": [
        950,
        987
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3209": {
      "fn": "MockMoolaStakingRewards.withdraw",
      "offset": [
        950,
        987
      ],
      "op": "LT",
      "path": "6"
    },
    "3210": {
      "fn": "MockMoolaStakingRewards.withdraw",
      "offset": [
        950,
        987
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xC92"
    },
    "3213": {
      "fn": "MockMoolaStakingRewards.withdraw",
      "offset": [
        950,
        987
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "3214": {
      "fn": "MockMoolaStakingRewards.withdraw",
      "offset": [
        950,
        987
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "3216": {
      "fn": "MockMoolaStakingRewards.withdraw",
      "offset": [
        950,
        987
      ],
      "op": "DUP1",
      "path": "6"
    },
    "3217": {
      "fn": "MockMoolaStakingRewards.withdraw",
      "offset": [
        950,
        987
      ],
      "op": "REVERT",
      "path": "6"
    },
    "3218": {
      "fn": "MockMoolaStakingRewards.withdraw",
      "offset": [
        950,
        987
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3219": {
      "fn": "MockMoolaStakingRewards.withdraw",
      "offset": [
        950,
        987
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "3221": {
      "fn": "MockMoolaStakingRewards.withdraw",
      "offset": [
        950,
        987
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "3222": {
      "fn": "MockMoolaStakingRewards.withdraw",
      "offset": [
        950,
        987
      ],
      "op": "DUP3",
      "path": "6"
    },
    "3223": {
      "fn": "MockMoolaStakingRewards.withdraw",
      "offset": [
        950,
        987
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3224": {
      "fn": "MockMoolaStakingRewards.withdraw",
      "offset": [
        950,
        987
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "3226": {
      "fn": "MockMoolaStakingRewards.withdraw",
      "offset": [
        950,
        987
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3227": {
      "fn": "MockMoolaStakingRewards.withdraw",
      "offset": [
        950,
        987
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "3228": {
      "fn": "MockMoolaStakingRewards.withdraw",
      "offset": [
        950,
        987
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "3229": {
      "fn": "MockMoolaStakingRewards.withdraw",
      "offset": [
        950,
        987
      ],
      "op": "ADD",
      "path": "6"
    },
    "3230": {
      "fn": "MockMoolaStakingRewards.withdraw",
      "offset": [
        950,
        987
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "3231": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3233": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3235": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3237": {
      "op": "SHL"
    },
    "3238": {
      "op": "SUB"
    },
    "3239": {
      "offset": [
        950,
        987
      ],
      "op": "AND",
      "path": "6"
    },
    "3240": {
      "fn": "MockMoolaStakingRewards.withdraw",
      "offset": [
        950,
        987
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3241": {
      "op": "POP"
    },
    "3242": {
      "offset": [
        950,
        987
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3243": {
      "fn": "MockMoolaStakingRewards.withdraw",
      "jump": "o",
      "offset": [
        950,
        987
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3244": {
      "fn": "MockMoolaStakingRewards.notifyRewardAmount",
      "offset": [
        6974,
        8047
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3245": {
      "offset": [
        1837,
        1856
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x2"
    },
    "3247": {
      "fn": "MockMoolaStakingRewards.notifyRewardAmount",
      "offset": [
        1837,
        1856
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "3248": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3250": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3252": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3254": {
      "op": "SHL"
    },
    "3255": {
      "op": "SUB"
    },
    "3256": {
      "offset": [
        1837,
        1856
      ],
      "op": "AND",
      "path": "7"
    },
    "3257": {
      "offset": [
        1823,
        1833
      ],
      "op": "CALLER",
      "path": "7"
    },
    "3258": {
      "offset": [
        1823,
        1856
      ],
      "op": "EQ",
      "path": "7"
    },
    "3259": {
      "offset": [
        1815,
        1903
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xD19"
    },
    "3262": {
      "offset": [
        1815,
        1903
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "3263": {
      "fn": "MockMoolaStakingRewards.notifyRewardAmount",
      "offset": [
        1815,
        1903
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "3265": {
      "fn": "MockMoolaStakingRewards.notifyRewardAmount",
      "offset": [
        1815,
        1903
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "3266": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3270": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3272": {
      "op": "SHL"
    },
    "3273": {
      "offset": [
        1815,
        1903
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3274": {
      "fn": "MockMoolaStakingRewards.notifyRewardAmount",
      "offset": [
        1815,
        1903
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3275": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3277": {
      "offset": [
        1815,
        1903
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "3279": {
      "fn": "MockMoolaStakingRewards.notifyRewardAmount",
      "offset": [
        1815,
        1903
      ],
      "op": "DUP3",
      "path": "7"
    },
    "3280": {
      "fn": "MockMoolaStakingRewards.notifyRewardAmount",
      "offset": [
        1815,
        1903
      ],
      "op": "ADD",
      "path": "7"
    },
    "3281": {
      "op": "MSTORE"
    },
    "3282": {
      "op": "PUSH1",
      "value": "0x2A"
    },
    "3284": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3286": {
      "op": "DUP3"
    },
    "3287": {
      "op": "ADD"
    },
    "3288": {
      "op": "MSTORE"
    },
    "3289": {
      "op": "PUSH32",
      "value": "0x43616C6C6572206973206E6F742052657761726473446973747269627574696F"
    },
    "3322": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3324": {
      "op": "DUP3"
    },
    "3325": {
      "op": "ADD"
    },
    "3326": {
      "op": "MSTORE"
    },
    "3327": {
      "op": "PUSH10",
      "value": "0x1B8818DBDB9D1C9858DD"
    },
    "3338": {
      "op": "PUSH1",
      "value": "0xB2"
    },
    "3340": {
      "op": "SHL"
    },
    "3341": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3343": {
      "op": "DUP3"
    },
    "3344": {
      "op": "ADD"
    },
    "3345": {
      "op": "MSTORE"
    },
    "3346": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3348": {
      "op": "ADD"
    },
    "3349": {
      "offset": [
        1815,
        1903
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xA9F"
    },
    "3352": {
      "op": "JUMP"
    },
    "3353": {
      "offset": [
        1815,
        1903
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3354": {
      "fn": "MockMoolaStakingRewards.notifyRewardAmount",
      "offset": [
        7081,
        7082
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "3356": {
      "offset": [
        9182,
        9198
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xD23"
    },
    "3359": {
      "offset": [
        9182,
        9196
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x17C8"
    },
    "3362": {
      "jump": "i",
      "offset": [
        9182,
        9198
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3363": {
      "fn": "MockMoolaStakingRewards.notifyRewardAmount",
      "offset": [
        9182,
        9198
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3364": {
      "offset": [
        9159,
        9179
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x9"
    },
    "3366": {
      "offset": [
        9159,
        9198
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "3367": {
      "offset": [
        9225,
        9251
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xD2E"
    },
    "3370": {
      "offset": [
        9225,
        9249
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x133C"
    },
    "3373": {
      "jump": "i",
      "offset": [
        9225,
        9251
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3374": {
      "fn": "MockMoolaStakingRewards.notifyRewardAmount",
      "offset": [
        9225,
        9251
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3375": {
      "offset": [
        9208,
        9222
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x8"
    },
    "3377": {
      "offset": [
        9208,
        9251
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "3378": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3380": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3382": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3384": {
      "op": "SHL"
    },
    "3385": {
      "op": "SUB"
    },
    "3386": {
      "offset": [
        9265,
        9286
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3387": {
      "fn": "MockMoolaStakingRewards.notifyRewardAmount",
      "offset": [
        9265,
        9286
      ],
      "op": "AND",
      "path": "6"
    },
    "3388": {
      "fn": "MockMoolaStakingRewards.notifyRewardAmount",
      "offset": [
        9265,
        9286
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "3389": {
      "offset": [
        9261,
        9452
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xD7F"
    },
    "3392": {
      "offset": [
        9261,
        9452
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "3393": {
      "offset": [
        9321,
        9336
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xD49"
    },
    "3396": {
      "offset": [
        9328,
        9335
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3397": {
      "offset": [
        9321,
        9327
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x4B1"
    },
    "3400": {
      "jump": "i",
      "offset": [
        9321,
        9336
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3401": {
      "fn": "MockMoolaStakingRewards.notifyRewardAmount",
      "offset": [
        9321,
        9336
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3402": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3404": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3406": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3408": {
      "op": "SHL"
    },
    "3409": {
      "op": "SUB"
    },
    "3410": {
      "offset": [
        9302,
        9318
      ],
      "op": "DUP3",
      "path": "6"
    },
    "3411": {
      "fn": "MockMoolaStakingRewards.notifyRewardAmount",
      "offset": [
        9302,
        9318
      ],
      "op": "AND",
      "path": "6"
    },
    "3412": {
      "fn": "MockMoolaStakingRewards.notifyRewardAmount",
      "offset": [
        9302,
        9318
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "3414": {
      "fn": "MockMoolaStakingRewards.notifyRewardAmount",
      "offset": [
        9302,
        9318
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3415": {
      "fn": "MockMoolaStakingRewards.notifyRewardAmount",
      "offset": [
        9302,
        9318
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3416": {
      "fn": "MockMoolaStakingRewards.notifyRewardAmount",
      "offset": [
        9302,
        9318
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3417": {
      "offset": [
        9302,
        9309
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xB"
    },
    "3419": {
      "offset": [
        9302,
        9318
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "3421": {
      "fn": "MockMoolaStakingRewards.notifyRewardAmount",
      "offset": [
        9302,
        9318
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3422": {
      "fn": "MockMoolaStakingRewards.notifyRewardAmount",
      "offset": [
        9302,
        9318
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3423": {
      "fn": "MockMoolaStakingRewards.notifyRewardAmount",
      "offset": [
        9302,
        9318
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3424": {
      "fn": "MockMoolaStakingRewards.notifyRewardAmount",
      "offset": [
        9302,
        9318
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "3426": {
      "fn": "MockMoolaStakingRewards.notifyRewardAmount",
      "offset": [
        9302,
        9318
      ],
      "op": "DUP1",
      "path": "6"
    },
    "3427": {
      "fn": "MockMoolaStakingRewards.notifyRewardAmount",
      "offset": [
        9302,
        9318
      ],
      "op": "DUP4",
      "path": "6"
    },
    "3428": {
      "fn": "MockMoolaStakingRewards.notifyRewardAmount",
      "offset": [
        9302,
        9318
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "3429": {
      "offset": [
        9302,
        9336
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "3430": {
      "fn": "MockMoolaStakingRewards.notifyRewardAmount",
      "offset": [
        9302,
        9336
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3431": {
      "fn": "MockMoolaStakingRewards.notifyRewardAmount",
      "offset": [
        9302,
        9336
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "3432": {
      "fn": "MockMoolaStakingRewards.notifyRewardAmount",
      "offset": [
        9302,
        9336
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "3433": {
      "offset": [
        9384,
        9404
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x9"
    },
    "3435": {
      "fn": "MockMoolaStakingRewards.notifyRewardAmount",
      "offset": [
        9384,
        9404
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "3436": {
      "offset": [
        9350,
        9372
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xA"
    },
    "3438": {
      "offset": [
        9350,
        9381
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3439": {
      "fn": "MockMoolaStakingRewards.notifyRewardAmount",
      "offset": [
        9350,
        9381
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "3440": {
      "fn": "MockMoolaStakingRewards.notifyRewardAmount",
      "offset": [
        9350,
        9381
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3441": {
      "fn": "MockMoolaStakingRewards.notifyRewardAmount",
      "offset": [
        9350,
        9381
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "3442": {
      "fn": "MockMoolaStakingRewards.notifyRewardAmount",
      "offset": [
        9350,
        9381
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3443": {
      "fn": "MockMoolaStakingRewards.notifyRewardAmount",
      "offset": [
        9350,
        9381
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "3444": {
      "offset": [
        9350,
        9404
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "3445": {
      "offset": [
        9418,
        9441
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xD7D"
    },
    "3448": {
      "offset": [
        9310,
        9317
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3449": {
      "offset": [
        9418,
        9432
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x5D4"
    },
    "3452": {
      "jump": "i",
      "offset": [
        9418,
        9441
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3453": {
      "fn": "MockMoolaStakingRewards.notifyRewardAmount",
      "offset": [
        9418,
        9441
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3454": {
      "fn": "MockMoolaStakingRewards.notifyRewardAmount",
      "offset": [
        9418,
        9441
      ],
      "op": "POP",
      "path": "6"
    },
    "3455": {
      "offset": [
        9261,
        9452
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3456": {
      "fn": "MockMoolaStakingRewards.notifyRewardAmount",
      "offset": [
        7118,
        7130
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x5"
    },
    "3458": {
      "fn": "MockMoolaStakingRewards.notifyRewardAmount",
      "offset": [
        7118,
        7130
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "3459": {
      "fn": "MockMoolaStakingRewards.notifyRewardAmount",
      "offset": [
        7099,
        7114
      ],
      "op": "TIMESTAMP",
      "path": "6"
    },
    "3460": {
      "branch": 77,
      "fn": "MockMoolaStakingRewards.notifyRewardAmount",
      "offset": [
        7099,
        7130
      ],
      "op": "LT",
      "path": "6"
    },
    "3461": {
      "fn": "MockMoolaStakingRewards.notifyRewardAmount",
      "offset": [
        7095,
        7407
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xD9E"
    },
    "3464": {
      "branch": 77,
      "fn": "MockMoolaStakingRewards.notifyRewardAmount",
      "offset": [
        7095,
        7407
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "3465": {
      "fn": "MockMoolaStakingRewards.notifyRewardAmount",
      "offset": [
        7170,
        7185
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 23,
      "value": "0x7"
    },
    "3467": {
      "fn": "MockMoolaStakingRewards.notifyRewardAmount",
      "offset": [
        7170,
        7185
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "3468": {
      "fn": "MockMoolaStakingRewards.notifyRewardAmount",
      "offset": [
        7159,
        7186
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xD96"
    },
    "3471": {
      "fn": "MockMoolaStakingRewards.notifyRewardAmount",
      "offset": [
        7159,
        7186
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3472": {
      "fn": "MockMoolaStakingRewards.notifyRewardAmount",
      "offset": [
        7159,
        7165
      ],
      "op": "DUP4",
      "path": "6"
    },
    "3473": {
      "fn": "MockMoolaStakingRewards.notifyRewardAmount",
      "offset": [
        7159,
        7165
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3474": {
      "fn": "MockMoolaStakingRewards.notifyRewardAmount",
      "offset": [
        7159,
        7169
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1856"
    },
    "3477": {
      "fn": "MockMoolaStakingRewards.notifyRewardAmount",
      "jump": "i",
      "offset": [
        7159,
        7186
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3478": {
      "fn": "MockMoolaStakingRewards.notifyRewardAmount",
      "offset": [
        7159,
        7186
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3479": {
      "fn": "MockMoolaStakingRewards.notifyRewardAmount",
      "offset": [
        7146,
        7156
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x6"
    },
    "3481": {
      "fn": "MockMoolaStakingRewards.notifyRewardAmount",
      "offset": [
        7146,
        7186
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "3482": {
      "fn": "MockMoolaStakingRewards.notifyRewardAmount",
      "offset": [
        7095,
        7407
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xDE1"
    },
    "3485": {
      "fn": "MockMoolaStakingRewards.notifyRewardAmount",
      "offset": [
        7095,
        7407
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3486": {
      "fn": "MockMoolaStakingRewards.notifyRewardAmount",
      "offset": [
        7095,
        7407
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3487": {
      "fn": "MockMoolaStakingRewards.notifyRewardAmount",
      "offset": [
        7237,
        7249
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x5"
    },
    "3489": {
      "fn": "MockMoolaStakingRewards.notifyRewardAmount",
      "offset": [
        7237,
        7249
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "3490": {
      "fn": "MockMoolaStakingRewards.notifyRewardAmount",
      "offset": [
        7217,
        7234
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "3492": {
      "fn": "MockMoolaStakingRewards.notifyRewardAmount",
      "offset": [
        7217,
        7234
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3493": {
      "fn": "MockMoolaStakingRewards.notifyRewardAmount",
      "offset": [
        7237,
        7270
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xDAE"
    },
    "3496": {
      "fn": "MockMoolaStakingRewards.notifyRewardAmount",
      "offset": [
        7237,
        7270
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3497": {
      "fn": "MockMoolaStakingRewards.notifyRewardAmount",
      "offset": [
        7254,
        7269
      ],
      "op": "TIMESTAMP",
      "path": "6"
    },
    "3498": {
      "fn": "MockMoolaStakingRewards.notifyRewardAmount",
      "offset": [
        7237,
        7253
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1837"
    },
    "3501": {
      "fn": "MockMoolaStakingRewards.notifyRewardAmount",
      "jump": "i",
      "offset": [
        7237,
        7270
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3502": {
      "fn": "MockMoolaStakingRewards.notifyRewardAmount",
      "offset": [
        7237,
        7270
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3503": {
      "fn": "MockMoolaStakingRewards.notifyRewardAmount",
      "offset": [
        7217,
        7270
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3504": {
      "fn": "MockMoolaStakingRewards.notifyRewardAmount",
      "offset": [
        7217,
        7270
      ],
      "op": "POP",
      "path": "6"
    },
    "3505": {
      "fn": "MockMoolaStakingRewards.notifyRewardAmount",
      "offset": [
        7284,
        7300
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "3507": {
      "fn": "MockMoolaStakingRewards.notifyRewardAmount",
      "offset": [
        7303,
        7328
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xDC7"
    },
    "3510": {
      "fn": "MockMoolaStakingRewards.notifyRewardAmount",
      "offset": [
        7317,
        7327
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x6"
    },
    "3512": {
      "fn": "MockMoolaStakingRewards.notifyRewardAmount",
      "offset": [
        7317,
        7327
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "3513": {
      "fn": "MockMoolaStakingRewards.notifyRewardAmount",
      "offset": [
        7303,
        7312
      ],
      "op": "DUP4",
      "path": "6"
    },
    "3514": {
      "fn": "MockMoolaStakingRewards.notifyRewardAmount",
      "offset": [
        7303,
        7316
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x184A"
    },
    "3517": {
      "fn": "MockMoolaStakingRewards.notifyRewardAmount",
      "offset": [
        7303,
        7316
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3518": {
      "fn": "MockMoolaStakingRewards.notifyRewardAmount",
      "offset": [
        7303,
        7328
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "3519": {
      "fn": "MockMoolaStakingRewards.notifyRewardAmount",
      "offset": [
        7303,
        7328
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3520": {
      "fn": "MockMoolaStakingRewards.notifyRewardAmount",
      "offset": [
        7303,
        7328
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xFFFFFFFF"
    },
    "3525": {
      "fn": "MockMoolaStakingRewards.notifyRewardAmount",
      "offset": [
        7303,
        7328
      ],
      "op": "AND",
      "path": "6"
    },
    "3526": {
      "fn": "MockMoolaStakingRewards.notifyRewardAmount",
      "jump": "i",
      "offset": [
        7303,
        7328
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3527": {
      "fn": "MockMoolaStakingRewards.notifyRewardAmount",
      "offset": [
        7303,
        7328
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3528": {
      "fn": "MockMoolaStakingRewards.notifyRewardAmount",
      "offset": [
        7380,
        7395
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 24,
      "value": "0x7"
    },
    "3530": {
      "fn": "MockMoolaStakingRewards.notifyRewardAmount",
      "offset": [
        7380,
        7395
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "3531": {
      "fn": "MockMoolaStakingRewards.notifyRewardAmount",
      "offset": [
        7284,
        7328
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3532": {
      "fn": "MockMoolaStakingRewards.notifyRewardAmount",
      "offset": [
        7284,
        7328
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "3533": {
      "op": "POP"
    },
    "3534": {
      "fn": "MockMoolaStakingRewards.notifyRewardAmount",
      "offset": [
        7355,
        7396
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xDDB"
    },
    "3537": {
      "fn": "MockMoolaStakingRewards.notifyRewardAmount",
      "offset": [
        7355,
        7396
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3538": {
      "fn": "MockMoolaStakingRewards.notifyRewardAmount",
      "offset": [
        7355,
        7375
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x51D"
    },
    "3541": {
      "fn": "MockMoolaStakingRewards.notifyRewardAmount",
      "offset": [
        7355,
        7361
      ],
      "op": "DUP7",
      "path": "6"
    },
    "3542": {
      "fn": "MockMoolaStakingRewards.notifyRewardAmount",
      "offset": [
        7284,
        7328
      ],
      "op": "DUP5",
      "path": "6"
    },
    "3543": {
      "fn": "MockMoolaStakingRewards.notifyRewardAmount",
      "offset": [
        7355,
        7365
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1862"
    },
    "3546": {
      "fn": "MockMoolaStakingRewards.notifyRewardAmount",
      "jump": "i",
      "offset": [
        7355,
        7375
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3547": {
      "fn": "MockMoolaStakingRewards.notifyRewardAmount",
      "offset": [
        7355,
        7396
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3548": {
      "fn": "MockMoolaStakingRewards.notifyRewardAmount",
      "offset": [
        7342,
        7352
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x6"
    },
    "3550": {
      "fn": "MockMoolaStakingRewards.notifyRewardAmount",
      "offset": [
        7342,
        7396
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "3551": {
      "op": "POP"
    },
    "3552": {
      "op": "POP"
    },
    "3553": {
      "fn": "MockMoolaStakingRewards.notifyRewardAmount",
      "offset": [
        7095,
        7407
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3554": {
      "fn": "MockMoolaStakingRewards.notifyRewardAmount",
      "offset": [
        7776,
        7813
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "3556": {
      "fn": "MockMoolaStakingRewards.notifyRewardAmount",
      "offset": [
        7776,
        7813
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "3557": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "3562": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3564": {
      "op": "SHL"
    },
    "3565": {
      "fn": "MockMoolaStakingRewards.notifyRewardAmount",
      "offset": [
        7776,
        7813
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3566": {
      "fn": "MockMoolaStakingRewards.notifyRewardAmount",
      "offset": [
        7776,
        7813
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3567": {
      "fn": "MockMoolaStakingRewards.notifyRewardAmount",
      "offset": [
        7807,
        7811
      ],
      "op": "ADDRESS",
      "path": "6"
    },
    "3568": {
      "fn": "MockMoolaStakingRewards.notifyRewardAmount",
      "offset": [
        7776,
        7813
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "3570": {
      "fn": "MockMoolaStakingRewards.notifyRewardAmount",
      "offset": [
        7776,
        7813
      ],
      "op": "DUP3",
      "path": "6"
    },
    "3571": {
      "fn": "MockMoolaStakingRewards.notifyRewardAmount",
      "offset": [
        7776,
        7813
      ],
      "op": "ADD",
      "path": "6"
    },
    "3572": {
      "op": "MSTORE"
    },
    "3573": {
      "fn": "MockMoolaStakingRewards.notifyRewardAmount",
      "offset": [
        7761,
        7773
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "3575": {
      "fn": "MockMoolaStakingRewards.notifyRewardAmount",
      "offset": [
        7761,
        7773
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3576": {
      "fn": "MockMoolaStakingRewards.notifyRewardAmount",
      "offset": [
        7776,
        7788
      ],
      "op": "PUSH32",
      "path": "6",
      "value": "0x0"
    },
    "3609": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3611": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3613": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3615": {
      "op": "SHL"
    },
    "3616": {
      "op": "SUB"
    },
    "3617": {
      "fn": "MockMoolaStakingRewards.notifyRewardAmount",
      "offset": [
        7776,
        7798
      ],
      "op": "AND",
      "path": "6"
    },
    "3618": {
      "fn": "MockMoolaStakingRewards.notifyRewardAmount",
      "offset": [
        7776,
        7798
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3619": {
      "fn": "MockMoolaStakingRewards.notifyRewardAmount",
      "offset": [
        7776,
        7798
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x70A08231"
    },
    "3624": {
      "fn": "MockMoolaStakingRewards.notifyRewardAmount",
      "offset": [
        7776,
        7798
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3625": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3627": {
      "op": "ADD"
    },
    "3628": {
      "fn": "MockMoolaStakingRewards.notifyRewardAmount",
      "offset": [
        7776,
        7813
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "3630": {
      "fn": "MockMoolaStakingRewards.notifyRewardAmount",
      "offset": [
        7776,
        7813
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "3632": {
      "fn": "MockMoolaStakingRewards.notifyRewardAmount",
      "offset": [
        7776,
        7813
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "3633": {
      "fn": "MockMoolaStakingRewards.notifyRewardAmount",
      "offset": [
        7776,
        7813
      ],
      "op": "DUP1",
      "path": "6"
    },
    "3634": {
      "fn": "MockMoolaStakingRewards.notifyRewardAmount",
      "offset": [
        7776,
        7813
      ],
      "op": "DUP4",
      "path": "6"
    },
    "3635": {
      "fn": "MockMoolaStakingRewards.notifyRewardAmount",
      "offset": [
        7776,
        7813
      ],
      "op": "SUB",
      "path": "6"
    },
    "3636": {
      "fn": "MockMoolaStakingRewards.notifyRewardAmount",
      "offset": [
        7776,
        7813
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3637": {
      "fn": "MockMoolaStakingRewards.notifyRewardAmount",
      "offset": [
        7776,
        7813
      ],
      "op": "DUP7",
      "path": "6"
    },
    "3638": {
      "fn": "MockMoolaStakingRewards.notifyRewardAmount",
      "offset": [
        7776,
        7813
      ],
      "op": "DUP1",
      "path": "6"
    },
    "3639": {
      "fn": "MockMoolaStakingRewards.notifyRewardAmount",
      "offset": [
        7776,
        7813
      ],
      "op": "EXTCODESIZE",
      "path": "6"
    },
    "3640": {
      "fn": "MockMoolaStakingRewards.notifyRewardAmount",
      "offset": [
        7776,
        7813
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "3641": {
      "fn": "MockMoolaStakingRewards.notifyRewardAmount",
      "offset": [
        7776,
        7813
      ],
      "op": "DUP1",
      "path": "6"
    },
    "3642": {
      "fn": "MockMoolaStakingRewards.notifyRewardAmount",
      "offset": [
        7776,
        7813
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "3643": {
      "fn": "MockMoolaStakingRewards.notifyRewardAmount",
      "offset": [
        7776,
        7813
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xE43"
    },
    "3646": {
      "fn": "MockMoolaStakingRewards.notifyRewardAmount",
      "offset": [
        7776,
        7813
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "3647": {
      "fn": "MockMoolaStakingRewards.notifyRewardAmount",
      "offset": [
        7776,
        7813
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "3649": {
      "fn": "MockMoolaStakingRewards.notifyRewardAmount",
      "offset": [
        7776,
        7813
      ],
      "op": "DUP1",
      "path": "6"
    },
    "3650": {
      "fn": "MockMoolaStakingRewards.notifyRewardAmount",
      "offset": [
        7776,
        7813
      ],
      "op": "REVERT",
      "path": "6"
    },
    "3651": {
      "fn": "MockMoolaStakingRewards.notifyRewardAmount",
      "offset": [
        7776,
        7813
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3652": {
      "fn": "MockMoolaStakingRewards.notifyRewardAmount",
      "offset": [
        7776,
        7813
      ],
      "op": "POP",
      "path": "6"
    },
    "3653": {
      "fn": "MockMoolaStakingRewards.notifyRewardAmount",
      "offset": [
        7776,
        7813
      ],
      "op": "GAS",
      "path": "6"
    },
    "3654": {
      "fn": "MockMoolaStakingRewards.notifyRewardAmount",
      "offset": [
        7776,
        7813
      ],
      "op": "STATICCALL",
      "path": "6"
    },
    "3655": {
      "fn": "MockMoolaStakingRewards.notifyRewardAmount",
      "offset": [
        7776,
        7813
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "3656": {
      "fn": "MockMoolaStakingRewards.notifyRewardAmount",
      "offset": [
        7776,
        7813
      ],
      "op": "DUP1",
      "path": "6"
    },
    "3657": {
      "fn": "MockMoolaStakingRewards.notifyRewardAmount",
      "offset": [
        7776,
        7813
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "3658": {
      "fn": "MockMoolaStakingRewards.notifyRewardAmount",
      "offset": [
        7776,
        7813
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xE57"
    },
    "3661": {
      "fn": "MockMoolaStakingRewards.notifyRewardAmount",
      "offset": [
        7776,
        7813
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "3662": {
      "fn": "MockMoolaStakingRewards.notifyRewardAmount",
      "offset": [
        7776,
        7813
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "3663": {
      "fn": "MockMoolaStakingRewards.notifyRewardAmount",
      "offset": [
        7776,
        7813
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "3665": {
      "fn": "MockMoolaStakingRewards.notifyRewardAmount",
      "offset": [
        7776,
        7813
      ],
      "op": "DUP1",
      "path": "6"
    },
    "3666": {
      "fn": "MockMoolaStakingRewards.notifyRewardAmount",
      "offset": [
        7776,
        7813
      ],
      "op": "RETURNDATACOPY",
      "path": "6"
    },
    "3667": {
      "fn": "MockMoolaStakingRewards.notifyRewardAmount",
      "offset": [
        7776,
        7813
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "3668": {
      "fn": "MockMoolaStakingRewards.notifyRewardAmount",
      "offset": [
        7776,
        7813
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "3670": {
      "fn": "MockMoolaStakingRewards.notifyRewardAmount",
      "offset": [
        7776,
        7813
      ],
      "op": "REVERT",
      "path": "6"
    },
    "3671": {
      "fn": "MockMoolaStakingRewards.notifyRewardAmount",
      "offset": [
        7776,
        7813
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3672": {
      "fn": "MockMoolaStakingRewards.notifyRewardAmount",
      "offset": [
        7776,
        7813
      ],
      "op": "POP",
      "path": "6"
    },
    "3673": {
      "fn": "MockMoolaStakingRewards.notifyRewardAmount",
      "offset": [
        7776,
        7813
      ],
      "op": "POP",
      "path": "6"
    },
    "3674": {
      "fn": "MockMoolaStakingRewards.notifyRewardAmount",
      "offset": [
        7776,
        7813
      ],
      "op": "POP",
      "path": "6"
    },
    "3675": {
      "fn": "MockMoolaStakingRewards.notifyRewardAmount",
      "offset": [
        7776,
        7813
      ],
      "op": "POP",
      "path": "6"
    },
    "3676": {
      "fn": "MockMoolaStakingRewards.notifyRewardAmount",
      "offset": [
        7776,
        7813
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "3678": {
      "fn": "MockMoolaStakingRewards.notifyRewardAmount",
      "offset": [
        7776,
        7813
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "3679": {
      "fn": "MockMoolaStakingRewards.notifyRewardAmount",
      "offset": [
        7776,
        7813
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "3680": {
      "fn": "MockMoolaStakingRewards.notifyRewardAmount",
      "offset": [
        7776,
        7813
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1F"
    },
    "3682": {
      "fn": "MockMoolaStakingRewards.notifyRewardAmount",
      "offset": [
        7776,
        7813
      ],
      "op": "NOT",
      "path": "6"
    },
    "3683": {
      "fn": "MockMoolaStakingRewards.notifyRewardAmount",
      "offset": [
        7776,
        7813
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1F"
    },
    "3685": {
      "fn": "MockMoolaStakingRewards.notifyRewardAmount",
      "offset": [
        7776,
        7813
      ],
      "op": "DUP3",
      "path": "6"
    },
    "3686": {
      "fn": "MockMoolaStakingRewards.notifyRewardAmount",
      "offset": [
        7776,
        7813
      ],
      "op": "ADD",
      "path": "6"
    },
    "3687": {
      "fn": "MockMoolaStakingRewards.notifyRewardAmount",
      "offset": [
        7776,
        7813
      ],
      "op": "AND",
      "path": "6"
    },
    "3688": {
      "fn": "MockMoolaStakingRewards.notifyRewardAmount",
      "offset": [
        7776,
        7813
      ],
      "op": "DUP3",
      "path": "6"
    },
    "3689": {
      "fn": "MockMoolaStakingRewards.notifyRewardAmount",
      "offset": [
        7776,
        7813
      ],
      "op": "ADD",
      "path": "6"
    },
    "3690": {
      "fn": "MockMoolaStakingRewards.notifyRewardAmount",
      "offset": [
        7776,
        7813
      ],
      "op": "DUP1",
      "path": "6"
    },
    "3691": {
      "fn": "MockMoolaStakingRewards.notifyRewardAmount",
      "offset": [
        7776,
        7813
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "3693": {
      "fn": "MockMoolaStakingRewards.notifyRewardAmount",
      "offset": [
        7776,
        7813
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3694": {
      "fn": "MockMoolaStakingRewards.notifyRewardAmount",
      "offset": [
        7776,
        7813
      ],
      "op": "POP",
      "path": "6"
    },
    "3695": {
      "fn": "MockMoolaStakingRewards.notifyRewardAmount",
      "offset": [
        7776,
        7813
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3696": {
      "fn": "MockMoolaStakingRewards.notifyRewardAmount",
      "offset": [
        7776,
        7813
      ],
      "op": "ADD",
      "path": "6"
    },
    "3697": {
      "fn": "MockMoolaStakingRewards.notifyRewardAmount",
      "offset": [
        7776,
        7813
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3698": {
      "fn": "MockMoolaStakingRewards.notifyRewardAmount",
      "offset": [
        7776,
        7813
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xE7B"
    },
    "3701": {
      "fn": "MockMoolaStakingRewards.notifyRewardAmount",
      "offset": [
        7776,
        7813
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "3702": {
      "fn": "MockMoolaStakingRewards.notifyRewardAmount",
      "offset": [
        7776,
        7813
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3703": {
      "fn": "MockMoolaStakingRewards.notifyRewardAmount",
      "offset": [
        7776,
        7813
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1CA3"
    },
    "3706": {
      "fn": "MockMoolaStakingRewards.notifyRewardAmount",
      "jump": "i",
      "offset": [
        7776,
        7813
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3707": {
      "fn": "MockMoolaStakingRewards.notifyRewardAmount",
      "offset": [
        7776,
        7813
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3708": {
      "fn": "MockMoolaStakingRewards.notifyRewardAmount",
      "offset": [
        7761,
        7813
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3709": {
      "fn": "MockMoolaStakingRewards.notifyRewardAmount",
      "offset": [
        7761,
        7813
      ],
      "op": "POP",
      "path": "6"
    },
    "3710": {
      "fn": "MockMoolaStakingRewards.notifyRewardAmount",
      "offset": [
        7845,
        7873
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 25,
      "value": "0xE92"
    },
    "3713": {
      "fn": "MockMoolaStakingRewards.notifyRewardAmount",
      "offset": [
        7857,
        7872
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x7"
    },
    "3715": {
      "fn": "MockMoolaStakingRewards.notifyRewardAmount",
      "offset": [
        7857,
        7872
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "3716": {
      "fn": "MockMoolaStakingRewards.notifyRewardAmount",
      "offset": [
        7845,
        7852
      ],
      "op": "DUP3",
      "path": "6"
    },
    "3717": {
      "fn": "MockMoolaStakingRewards.notifyRewardAmount",
      "offset": [
        7845,
        7856
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1856"
    },
    "3720": {
      "fn": "MockMoolaStakingRewards.notifyRewardAmount",
      "offset": [
        7845,
        7856
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3721": {
      "fn": "MockMoolaStakingRewards.notifyRewardAmount",
      "offset": [
        7845,
        7873
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "3722": {
      "fn": "MockMoolaStakingRewards.notifyRewardAmount",
      "offset": [
        7845,
        7873
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3723": {
      "fn": "MockMoolaStakingRewards.notifyRewardAmount",
      "offset": [
        7845,
        7873
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xFFFFFFFF"
    },
    "3728": {
      "fn": "MockMoolaStakingRewards.notifyRewardAmount",
      "offset": [
        7845,
        7873
      ],
      "op": "AND",
      "path": "6"
    },
    "3729": {
      "fn": "MockMoolaStakingRewards.notifyRewardAmount",
      "jump": "i",
      "offset": [
        7845,
        7873
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3730": {
      "fn": "MockMoolaStakingRewards.notifyRewardAmount",
      "offset": [
        7845,
        7873
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3731": {
      "fn": "MockMoolaStakingRewards.notifyRewardAmount",
      "offset": [
        7831,
        7841
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x6"
    },
    "3733": {
      "fn": "MockMoolaStakingRewards.notifyRewardAmount",
      "offset": [
        7831,
        7841
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "3734": {
      "fn": "MockMoolaStakingRewards.notifyRewardAmount",
      "offset": [
        7831,
        7873
      ],
      "op": "GT",
      "path": "6"
    },
    "3735": {
      "branch": 78,
      "fn": "MockMoolaStakingRewards.notifyRewardAmount",
      "offset": [
        7831,
        7873
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "3736": {
      "fn": "MockMoolaStakingRewards.notifyRewardAmount",
      "offset": [
        7823,
        7902
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xEE3"
    },
    "3739": {
      "branch": 78,
      "fn": "MockMoolaStakingRewards.notifyRewardAmount",
      "offset": [
        7823,
        7902
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "3740": {
      "fn": "MockMoolaStakingRewards.notifyRewardAmount",
      "offset": [
        7823,
        7902
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "3742": {
      "fn": "MockMoolaStakingRewards.notifyRewardAmount",
      "offset": [
        7823,
        7902
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "3743": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3747": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3749": {
      "op": "SHL"
    },
    "3750": {
      "fn": "MockMoolaStakingRewards.notifyRewardAmount",
      "offset": [
        7823,
        7902
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3751": {
      "fn": "MockMoolaStakingRewards.notifyRewardAmount",
      "offset": [
        7823,
        7902
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3752": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3754": {
      "fn": "MockMoolaStakingRewards.notifyRewardAmount",
      "offset": [
        7823,
        7902
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "3756": {
      "fn": "MockMoolaStakingRewards.notifyRewardAmount",
      "offset": [
        7823,
        7902
      ],
      "op": "DUP3",
      "path": "6"
    },
    "3757": {
      "fn": "MockMoolaStakingRewards.notifyRewardAmount",
      "offset": [
        7823,
        7902
      ],
      "op": "ADD",
      "path": "6"
    },
    "3758": {
      "op": "MSTORE"
    },
    "3759": {
      "op": "PUSH1",
      "value": "0x18"
    },
    "3761": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3763": {
      "op": "DUP3"
    },
    "3764": {
      "op": "ADD"
    },
    "3765": {
      "op": "MSTORE"
    },
    "3766": {
      "op": "PUSH32",
      "value": "0x50726F76696465642072657761726420746F6F20686967680000000000000000"
    },
    "3799": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3801": {
      "op": "DUP3"
    },
    "3802": {
      "op": "ADD"
    },
    "3803": {
      "op": "MSTORE"
    },
    "3804": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3806": {
      "op": "ADD"
    },
    "3807": {
      "fn": "MockMoolaStakingRewards.notifyRewardAmount",
      "offset": [
        7823,
        7902
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xA9F"
    },
    "3810": {
      "op": "JUMP"
    },
    "3811": {
      "fn": "MockMoolaStakingRewards.notifyRewardAmount",
      "offset": [
        7823,
        7902
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3812": {
      "fn": "MockMoolaStakingRewards.notifyRewardAmount",
      "offset": [
        7930,
        7945
      ],
      "op": "TIMESTAMP",
      "path": "6",
      "statement": 26
    },
    "3813": {
      "fn": "MockMoolaStakingRewards.notifyRewardAmount",
      "offset": [
        7913,
        7927
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x8"
    },
    "3815": {
      "fn": "MockMoolaStakingRewards.notifyRewardAmount",
      "offset": [
        7913,
        7945
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3816": {
      "fn": "MockMoolaStakingRewards.notifyRewardAmount",
      "offset": [
        7913,
        7945
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3817": {
      "fn": "MockMoolaStakingRewards.notifyRewardAmount",
      "offset": [
        7913,
        7945
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "3818": {
      "fn": "MockMoolaStakingRewards.notifyRewardAmount",
      "offset": [
        7990,
        8005
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 27,
      "value": "0x7"
    },
    "3820": {
      "fn": "MockMoolaStakingRewards.notifyRewardAmount",
      "offset": [
        7990,
        8005
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "3821": {
      "fn": "MockMoolaStakingRewards.notifyRewardAmount",
      "offset": [
        7970,
        8006
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xEF6"
    },
    "3824": {
      "fn": "MockMoolaStakingRewards.notifyRewardAmount",
      "offset": [
        7970,
        8006
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "3825": {
      "fn": "MockMoolaStakingRewards.notifyRewardAmount",
      "offset": [
        7930,
        7945
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3826": {
      "fn": "MockMoolaStakingRewards.notifyRewardAmount",
      "offset": [
        7970,
        7989
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1862"
    },
    "3829": {
      "fn": "MockMoolaStakingRewards.notifyRewardAmount",
      "jump": "i",
      "offset": [
        7970,
        8006
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3830": {
      "fn": "MockMoolaStakingRewards.notifyRewardAmount",
      "offset": [
        7970,
        8006
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3831": {
      "fn": "MockMoolaStakingRewards.notifyRewardAmount",
      "offset": [
        7955,
        7967
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x5"
    },
    "3833": {
      "fn": "MockMoolaStakingRewards.notifyRewardAmount",
      "offset": [
        7955,
        8006
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "3834": {
      "fn": "MockMoolaStakingRewards.notifyRewardAmount",
      "offset": [
        8021,
        8040
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 28,
      "value": "0x40"
    },
    "3836": {
      "fn": "MockMoolaStakingRewards.notifyRewardAmount",
      "offset": [
        8021,
        8040
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "3837": {
      "op": "DUP4"
    },
    "3838": {
      "op": "DUP2"
    },
    "3839": {
      "op": "MSTORE"
    },
    "3840": {
      "fn": "MockMoolaStakingRewards.notifyRewardAmount",
      "offset": [
        8021,
        8040
      ],
      "op": "PUSH32",
      "path": "6",
      "value": "0xDE88A922E0D3B88B24E9623EFEB464919C6BF9F66857A65E2BFCF2CE87A9433D"
    },
    "3873": {
      "fn": "MockMoolaStakingRewards.notifyRewardAmount",
      "offset": [
        8021,
        8040
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3874": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3876": {
      "op": "ADD"
    },
    "3877": {
      "fn": "MockMoolaStakingRewards.notifyRewardAmount",
      "offset": [
        8021,
        8040
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "3879": {
      "fn": "MockMoolaStakingRewards.notifyRewardAmount",
      "offset": [
        8021,
        8040
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "3880": {
      "fn": "MockMoolaStakingRewards.notifyRewardAmount",
      "offset": [
        8021,
        8040
      ],
      "op": "DUP1",
      "path": "6"
    },
    "3881": {
      "fn": "MockMoolaStakingRewards.notifyRewardAmount",
      "offset": [
        8021,
        8040
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "3882": {
      "fn": "MockMoolaStakingRewards.notifyRewardAmount",
      "offset": [
        8021,
        8040
      ],
      "op": "SUB",
      "path": "6"
    },
    "3883": {
      "fn": "MockMoolaStakingRewards.notifyRewardAmount",
      "offset": [
        8021,
        8040
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3884": {
      "fn": "MockMoolaStakingRewards.notifyRewardAmount",
      "offset": [
        8021,
        8040
      ],
      "op": "LOG1",
      "path": "6"
    },
    "3885": {
      "fn": "MockMoolaStakingRewards.notifyRewardAmount",
      "offset": [
        7085,
        8047
      ],
      "op": "POP",
      "path": "6"
    },
    "3886": {
      "offset": [
        1913,
        1914
      ],
      "op": "POP",
      "path": "7"
    },
    "3887": {
      "fn": "MockMoolaStakingRewards.notifyRewardAmount",
      "offset": [
        6974,
        8047
      ],
      "op": "POP",
      "path": "6"
    },
    "3888": {
      "fn": "MockMoolaStakingRewards.notifyRewardAmount",
      "jump": "o",
      "offset": [
        6974,
        8047
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3889": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        5966,
        6805
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3890": {
      "offset": [
        1680,
        1681
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "3892": {
      "offset": [
        2260,
        2267
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "3894": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        2260,
        2267
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3895": {
      "offset": [
        2260,
        2279
      ],
      "op": "EQ",
      "path": "0"
    },
    "3896": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        2260,
        2279
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3897": {
      "offset": [
        2252,
        2315
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF54"
    },
    "3900": {
      "offset": [
        2252,
        2315
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3901": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        2252,
        2315
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3903": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        2252,
        2315
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3904": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3908": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3910": {
      "op": "SHL"
    },
    "3911": {
      "offset": [
        2252,
        2315
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3912": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        2252,
        2315
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3913": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        2252,
        2315
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3915": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        2252,
        2315
      ],
      "op": "ADD",
      "path": "0"
    },
    "3916": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        2252,
        2315
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA9F"
    },
    "3919": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        2252,
        2315
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3920": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        2252,
        2315
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1D4F"
    },
    "3923": {
      "fn": "MockMoolaStakingRewards.getReward",
      "jump": "i",
      "offset": [
        2252,
        2315
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3924": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        2252,
        2315
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3925": {
      "offset": [
        1680,
        1681
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "3927": {
      "offset": [
        2390,
        2397
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "3929": {
      "offset": [
        2390,
        2408
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "3930": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        6029,
        6039
      ],
      "op": "CALLER",
      "path": "6"
    },
    "3931": {
      "offset": [
        9182,
        9198
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xF62"
    },
    "3934": {
      "offset": [
        9182,
        9196
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x17C8"
    },
    "3937": {
      "jump": "i",
      "offset": [
        9182,
        9198
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3938": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        9182,
        9198
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3939": {
      "offset": [
        9159,
        9179
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x9"
    },
    "3941": {
      "offset": [
        9159,
        9198
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "3942": {
      "offset": [
        9225,
        9251
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xF6D"
    },
    "3945": {
      "offset": [
        9225,
        9249
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x133C"
    },
    "3948": {
      "jump": "i",
      "offset": [
        9225,
        9251
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3949": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        9225,
        9251
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3950": {
      "offset": [
        9208,
        9222
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x8"
    },
    "3952": {
      "offset": [
        9208,
        9251
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "3953": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3955": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3957": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3959": {
      "op": "SHL"
    },
    "3960": {
      "op": "SUB"
    },
    "3961": {
      "offset": [
        9265,
        9286
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3962": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        9265,
        9286
      ],
      "op": "AND",
      "path": "6"
    },
    "3963": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        9265,
        9286
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "3964": {
      "offset": [
        9261,
        9452
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xFBE"
    },
    "3967": {
      "offset": [
        9261,
        9452
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "3968": {
      "offset": [
        9321,
        9336
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xF88"
    },
    "3971": {
      "offset": [
        9328,
        9335
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3972": {
      "offset": [
        9321,
        9327
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x4B1"
    },
    "3975": {
      "jump": "i",
      "offset": [
        9321,
        9336
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3976": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        9321,
        9336
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3977": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3979": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3981": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3983": {
      "op": "SHL"
    },
    "3984": {
      "op": "SUB"
    },
    "3985": {
      "offset": [
        9302,
        9318
      ],
      "op": "DUP3",
      "path": "6"
    },
    "3986": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        9302,
        9318
      ],
      "op": "AND",
      "path": "6"
    },
    "3987": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        9302,
        9318
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "3989": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        9302,
        9318
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3990": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        9302,
        9318
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3991": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        9302,
        9318
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3992": {
      "offset": [
        9302,
        9309
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xB"
    },
    "3994": {
      "offset": [
        9302,
        9318
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "3996": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        9302,
        9318
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3997": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        9302,
        9318
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3998": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        9302,
        9318
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3999": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        9302,
        9318
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "4001": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        9302,
        9318
      ],
      "op": "DUP1",
      "path": "6"
    },
    "4002": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        9302,
        9318
      ],
      "op": "DUP4",
      "path": "6"
    },
    "4003": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        9302,
        9318
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "4004": {
      "offset": [
        9302,
        9336
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "4005": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        9302,
        9336
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4006": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        9302,
        9336
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "4007": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        9302,
        9336
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "4008": {
      "offset": [
        9384,
        9404
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x9"
    },
    "4010": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        9384,
        9404
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "4011": {
      "offset": [
        9350,
        9372
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xA"
    },
    "4013": {
      "offset": [
        9350,
        9381
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4014": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        9350,
        9381
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "4015": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        9350,
        9381
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4016": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        9350,
        9381
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "4017": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        9350,
        9381
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4018": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        9350,
        9381
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "4019": {
      "offset": [
        9350,
        9404
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "4020": {
      "offset": [
        9418,
        9441
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xFBC"
    },
    "4023": {
      "offset": [
        9310,
        9317
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4024": {
      "offset": [
        9418,
        9432
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x5D4"
    },
    "4027": {
      "jump": "i",
      "offset": [
        9418,
        9441
      ],
      "op": "JUMP",
      "path": "6"
    },
    "4028": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        9418,
        9441
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4029": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        9418,
        9441
      ],
      "op": "POP",
      "path": "6"
    },
    "4030": {
      "offset": [
        9261,
        9452
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4031": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        6076,
        6086
      ],
      "op": "CALLER",
      "path": "6"
    },
    "4032": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        6051,
        6065
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "4034": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        6068,
        6087
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4035": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        6068,
        6087
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4036": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        6068,
        6087
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4037": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        6068,
        6075
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xB"
    },
    "4039": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        6068,
        6087
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "4041": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        6068,
        6087
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4042": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        6068,
        6087
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4043": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        6068,
        6087
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4044": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        6068,
        6087
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "4046": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        6068,
        6087
      ],
      "op": "DUP1",
      "path": "6"
    },
    "4047": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        6068,
        6087
      ],
      "op": "DUP4",
      "path": "6"
    },
    "4048": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        6068,
        6087
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "4049": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        6068,
        6087
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "4050": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        6130,
        6151
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "4052": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        6097,
        6151
      ],
      "op": "DUP1",
      "path": "6"
    },
    "4053": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        6097,
        6151
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "4054": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        6097,
        6151
      ],
      "op": "DUP4",
      "path": "6"
    },
    "4055": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        6097,
        6151
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "4056": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        6097,
        6151
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4057": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        6097,
        6151
      ],
      "op": "DUP7",
      "path": "6"
    },
    "4058": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        6097,
        6151
      ],
      "op": "MUL",
      "path": "6"
    },
    "4059": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        6097,
        6151
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4060": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        6097,
        6151
      ],
      "op": "ADD",
      "path": "6"
    },
    "4061": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        6097,
        6151
      ],
      "op": "DUP7",
      "path": "6"
    },
    "4062": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        6097,
        6151
      ],
      "op": "ADD",
      "path": "6"
    },
    "4063": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        6097,
        6151
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4064": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        6097,
        6151
      ],
      "op": "SWAP5",
      "path": "6"
    },
    "4065": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        6097,
        6151
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4066": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        6097,
        6151
      ],
      "op": "DUP1",
      "path": "6"
    },
    "4067": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        6097,
        6151
      ],
      "op": "DUP5",
      "path": "6"
    },
    "4068": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        6097,
        6151
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4069": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        6068,
        6087
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "4070": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        6068,
        6087
      ],
      "op": "SWAP5",
      "path": "6"
    },
    "4071": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        6051,
        6065
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "4072": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        6130,
        6151
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4073": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        6130,
        6151
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "4074": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        6097,
        6151
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4075": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        6097,
        6151
      ],
      "op": "DUP4",
      "path": "6"
    },
    "4076": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        6097,
        6151
      ],
      "op": "ADD",
      "path": "6"
    },
    "4077": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        6130,
        6151
      ],
      "op": "DUP3",
      "path": "6"
    },
    "4078": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        6097,
        6151
      ],
      "op": "DUP3",
      "path": "6"
    },
    "4079": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        6097,
        6151
      ],
      "op": "DUP1",
      "path": "6"
    },
    "4080": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        6097,
        6151
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "4081": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        6097,
        6151
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1023"
    },
    "4084": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        6097,
        6151
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "4085": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        6097,
        6151
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "4087": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        6097,
        6151
      ],
      "op": "MUL",
      "path": "6"
    },
    "4088": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        6097,
        6151
      ],
      "op": "DUP3",
      "path": "6"
    },
    "4089": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        6097,
        6151
      ],
      "op": "ADD",
      "path": "6"
    },
    "4090": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        6097,
        6151
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "4091": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        6097,
        6151
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4092": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        6097,
        6151
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "4094": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        6097,
        6151
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4095": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        6097,
        6151
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "4097": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        6097,
        6151
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "4099": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        6097,
        6151
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "4100": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        6097,
        6151
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4101": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        6097,
        6151
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4102": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        6097,
        6151
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4103": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        6097,
        6151
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "4104": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4106": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4108": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4110": {
      "op": "SHL"
    },
    "4111": {
      "op": "SUB"
    },
    "4112": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        6097,
        6151
      ],
      "op": "AND",
      "path": "6"
    },
    "4113": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        6097,
        6151
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4114": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        6097,
        6151
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4115": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        6097,
        6151
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "4117": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        6097,
        6151
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4118": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        6097,
        6151
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "4119": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        6097,
        6151
      ],
      "op": "ADD",
      "path": "6"
    },
    "4120": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        6097,
        6151
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4121": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        6097,
        6151
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "4123": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        6097,
        6151
      ],
      "op": "ADD",
      "path": "6"
    },
    "4124": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        6097,
        6151
      ],
      "op": "DUP1",
      "path": "6"
    },
    "4125": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        6097,
        6151
      ],
      "op": "DUP4",
      "path": "6"
    },
    "4126": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        6097,
        6151
      ],
      "op": "GT",
      "path": "6"
    },
    "4127": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        6097,
        6151
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1005"
    },
    "4130": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        6097,
        6151
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "4131": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        6097,
        6151
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4132": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        6097,
        6151
      ],
      "op": "POP",
      "path": "6"
    },
    "4133": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        6097,
        6151
      ],
      "op": "POP",
      "path": "6"
    },
    "4134": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        6097,
        6151
      ],
      "op": "POP",
      "path": "6"
    },
    "4135": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        6097,
        6151
      ],
      "op": "POP",
      "path": "6"
    },
    "4136": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        6097,
        6151
      ],
      "op": "POP",
      "path": "6"
    },
    "4137": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        6097,
        6151
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4138": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        6097,
        6151
      ],
      "op": "POP",
      "path": "6"
    },
    "4139": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        6175,
        6176
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "4141": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        6166,
        6172
      ],
      "op": "DUP3",
      "path": "6"
    },
    "4142": {
      "branch": 79,
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        6166,
        6176
      ],
      "op": "GT",
      "path": "6"
    },
    "4143": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        6162,
        6334
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "4144": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        6162,
        6334
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x10AE"
    },
    "4147": {
      "branch": 79,
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        6162,
        6334
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "4148": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        6200,
        6210
      ],
      "op": "CALLER",
      "path": "6",
      "statement": 29
    },
    "4149": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        6214,
        6215
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "4151": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        6192,
        6211
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4152": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        6192,
        6211
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4153": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        6192,
        6211
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4154": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        6192,
        6199
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xB"
    },
    "4156": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        6192,
        6211
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "4158": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        6192,
        6211
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4159": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        6192,
        6211
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "4161": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        6192,
        6211
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4162": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        6192,
        6211
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "4163": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        6192,
        6215
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "4164": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        6229,
        6274
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 30,
      "value": "0x1078"
    },
    "4167": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        6229,
        6274
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4168": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        6229,
        6241
      ],
      "op": "PUSH32",
      "path": "6",
      "value": "0x0"
    },
    "4201": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4203": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4205": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4207": {
      "op": "SHL"
    },
    "4208": {
      "op": "SUB"
    },
    "4209": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        6229,
        6254
      ],
      "op": "AND",
      "path": "6"
    },
    "4210": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        6229,
        6254
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4211": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        6267,
        6273
      ],
      "op": "DUP5",
      "path": "6"
    },
    "4212": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        6229,
        6254
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x18E0"
    },
    "4215": {
      "fn": "MockMoolaStakingRewards.getReward",
      "jump": "i",
      "offset": [
        6229,
        6274
      ],
      "op": "JUMP",
      "path": "6"
    },
    "4216": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        6229,
        6274
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4217": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        6293,
        6323
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 31,
      "value": "0x40"
    },
    "4219": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        6293,
        6323
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "4220": {
      "op": "DUP3"
    },
    "4221": {
      "op": "DUP2"
    },
    "4222": {
      "op": "MSTORE"
    },
    "4223": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        6304,
        6314
      ],
      "op": "CALLER",
      "path": "6"
    },
    "4224": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        6304,
        6314
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4225": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        6293,
        6323
      ],
      "op": "PUSH32",
      "path": "6",
      "value": "0xE2403640BA68FED3A2F88B7557551D1993F84B99BB10FF833F0CF8DB0C5E0486"
    },
    "4258": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        6293,
        6323
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4259": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4261": {
      "op": "ADD"
    },
    "4262": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        6293,
        6323
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "4264": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        6293,
        6323
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "4265": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        6293,
        6323
      ],
      "op": "DUP1",
      "path": "6"
    },
    "4266": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        6293,
        6323
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "4267": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        6293,
        6323
      ],
      "op": "SUB",
      "path": "6"
    },
    "4268": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        6293,
        6323
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4269": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        6293,
        6323
      ],
      "op": "LOG2",
      "path": "6"
    },
    "4270": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        6162,
        6334
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4271": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        6349,
        6358
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "4273": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        6344,
        6799
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4274": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        6368,
        6382
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4275": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        6368,
        6389
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "4276": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        6364,
        6365
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4277": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        6364,
        6389
      ],
      "op": "LT",
      "path": "6"
    },
    "4278": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        6344,
        6799
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "4279": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        6344,
        6799
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1182"
    },
    "4282": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        6344,
        6799
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "4283": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        6410,
        6430
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "4285": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        6433,
        6447
      ],
      "op": "DUP3",
      "path": "6"
    },
    "4286": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        6448,
        6449
      ],
      "op": "DUP3",
      "path": "6"
    },
    "4287": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        6433,
        6450
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4288": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        6433,
        6450
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "4289": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        6433,
        6450
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4290": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        6433,
        6450
      ],
      "op": "LT",
      "path": "6"
    },
    "4291": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        6433,
        6450
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x10CE"
    },
    "4294": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        6433,
        6450
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "4295": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        6433,
        6450
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x10CE"
    },
    "4298": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        6433,
        6450
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1E53"
    },
    "4301": {
      "fn": "MockMoolaStakingRewards.getReward",
      "jump": "i",
      "offset": [
        6433,
        6450
      ],
      "op": "JUMP",
      "path": "6"
    },
    "4302": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        6433,
        6450
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4303": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        6433,
        6450
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "4305": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        6433,
        6450
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4306": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        6433,
        6450
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4307": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        6433,
        6450
      ],
      "op": "MUL",
      "path": "6"
    },
    "4308": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        6433,
        6450
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "4309": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        6433,
        6450
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4310": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        6433,
        6450
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "4311": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        6433,
        6450
      ],
      "op": "ADD",
      "path": "6"
    },
    "4312": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        6433,
        6450
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4313": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        6433,
        6450
      ],
      "op": "ADD",
      "path": "6"
    },
    "4314": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        6433,
        6450
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "4315": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        6505,
        6515
      ],
      "op": "CALLER",
      "path": "6"
    },
    "4316": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        6464,
        6486
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "4318": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        6489,
        6516
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4319": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        6489,
        6516
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4320": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        6489,
        6516
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4321": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        6489,
        6504
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xC"
    },
    "4323": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        6489,
        6516
      ],
      "op": "DUP4",
      "path": "6"
    },
    "4324": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        6489,
        6516
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4325": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        6489,
        6516
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "4327": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        6489,
        6516
      ],
      "op": "DUP1",
      "path": "6"
    },
    "4328": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        6489,
        6516
      ],
      "op": "DUP3",
      "path": "6"
    },
    "4329": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        6489,
        6516
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "4330": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4332": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4334": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4336": {
      "op": "SHL"
    },
    "4337": {
      "op": "SUB"
    },
    "4338": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        6489,
        6531
      ],
      "op": "DUP5",
      "path": "6"
    },
    "4339": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        6489,
        6531
      ],
      "op": "AND",
      "path": "6"
    },
    "4340": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        6489,
        6531
      ],
      "op": "DUP4",
      "path": "6"
    },
    "4341": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        6489,
        6531
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4342": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        6489,
        6531
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4343": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        6489,
        6531
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "4344": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        6489,
        6531
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4345": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        6489,
        6531
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "4346": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        6489,
        6531
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4347": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        6489,
        6531
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "4348": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        6489,
        6531
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "4349": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        6489,
        6531
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "4350": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        6433,
        6450
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4351": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        6433,
        6450
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "4352": {
      "op": "POP"
    },
    "4353": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        6549,
        6567
      ],
      "op": "DUP1",
      "path": "6"
    },
    "4354": {
      "branch": 80,
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        6549,
        6567
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "4355": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        6545,
        6789
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x116D"
    },
    "4358": {
      "branch": 80,
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        6545,
        6789
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "4359": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        6603,
        6613
      ],
      "op": "CALLER",
      "path": "6",
      "statement": 32
    },
    "4360": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        6632,
        6633
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "4362": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        6587,
        6614
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4363": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        6587,
        6614
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4364": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        6587,
        6614
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4365": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        6587,
        6602
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xC"
    },
    "4367": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        6587,
        6614
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "4369": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        6587,
        6614
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4370": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        6587,
        6614
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4371": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        6587,
        6614
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4372": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        6587,
        6614
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "4374": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        6587,
        6614
      ],
      "op": "DUP1",
      "path": "6"
    },
    "4375": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        6587,
        6614
      ],
      "op": "DUP4",
      "path": "6"
    },
    "4376": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        6587,
        6614
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "4377": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4379": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4381": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4383": {
      "op": "SHL"
    },
    "4384": {
      "op": "SUB"
    },
    "4385": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        6587,
        6629
      ],
      "op": "DUP8",
      "path": "6"
    },
    "4386": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        6587,
        6629
      ],
      "op": "AND",
      "path": "6"
    },
    "4387": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        6587,
        6629
      ],
      "op": "DUP1",
      "path": "6"
    },
    "4388": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        6587,
        6629
      ],
      "op": "DUP6",
      "path": "6"
    },
    "4389": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        6587,
        6629
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4390": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        6587,
        6629
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "4391": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        6587,
        6629
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4392": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        6587,
        6629
      ],
      "op": "DUP3",
      "path": "6"
    },
    "4393": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        6587,
        6629
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "4394": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        6587,
        6633
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "4395": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        6587,
        6633
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4396": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        6587,
        6633
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "4397": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        6587,
        6633
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "4398": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        6651,
        6705
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 33,
      "value": "0x1137"
    },
    "4401": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        6651,
        6705
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "4402": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        6690,
        6704
      ],
      "op": "DUP4",
      "path": "6"
    },
    "4403": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        6651,
        6677
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x18E0"
    },
    "4406": {
      "fn": "MockMoolaStakingRewards.getReward",
      "jump": "i",
      "offset": [
        6651,
        6705
      ],
      "op": "JUMP",
      "path": "6"
    },
    "4407": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        6651,
        6705
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4408": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        6728,
        6774
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 34,
      "value": "0x40"
    },
    "4410": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        6728,
        6774
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "4411": {
      "op": "DUP2"
    },
    "4412": {
      "op": "DUP2"
    },
    "4413": {
      "op": "MSTORE"
    },
    "4414": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        6747,
        6757
      ],
      "op": "CALLER",
      "path": "6"
    },
    "4415": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        6747,
        6757
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4416": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        6728,
        6774
      ],
      "op": "PUSH32",
      "path": "6",
      "value": "0xCE68CDB84849C4239FA00C1E372FDA2AE0F55014178702ABF36B26508D863959"
    },
    "4449": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        6728,
        6774
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4450": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4452": {
      "op": "ADD"
    },
    "4453": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        6728,
        6774
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "4455": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        6728,
        6774
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "4456": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        6728,
        6774
      ],
      "op": "DUP1",
      "path": "6"
    },
    "4457": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        6728,
        6774
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "4458": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        6728,
        6774
      ],
      "op": "SUB",
      "path": "6"
    },
    "4459": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        6728,
        6774
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4460": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        6728,
        6774
      ],
      "op": "LOG2",
      "path": "6"
    },
    "4461": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        6545,
        6789
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4462": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        6396,
        6799
      ],
      "op": "POP",
      "path": "6"
    },
    "4463": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        6396,
        6799
      ],
      "op": "POP",
      "path": "6"
    },
    "4464": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        6391,
        6394
      ],
      "op": "DUP1",
      "path": "6",
      "statement": 35
    },
    "4465": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        6391,
        6394
      ],
      "op": "DUP1",
      "path": "6"
    },
    "4466": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        6391,
        6394
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x117A"
    },
    "4469": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        6391,
        6394
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4470": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        6391,
        6394
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1E22"
    },
    "4473": {
      "fn": "MockMoolaStakingRewards.getReward",
      "jump": "i",
      "offset": [
        6391,
        6394
      ],
      "op": "JUMP",
      "path": "6"
    },
    "4474": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        6391,
        6394
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4475": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        6391,
        6394
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "4476": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        6391,
        6394
      ],
      "op": "POP",
      "path": "6"
    },
    "4477": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        6391,
        6394
      ],
      "op": "POP",
      "path": "6"
    },
    "4478": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        6344,
        6799
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x10B1"
    },
    "4481": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        6344,
        6799
      ],
      "op": "JUMP",
      "path": "6"
    },
    "4482": {
      "fn": "MockMoolaStakingRewards.getReward",
      "offset": [
        6344,
        6799
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4483": {
      "op": "POP"
    },
    "4484": {
      "op": "POP"
    },
    "4485": {
      "offset": [
        1637,
        1638
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "4487": {
      "offset": [
        2563,
        2570
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "4489": {
      "offset": [
        2563,
        2585
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "4490": {
      "op": "POP"
    },
    "4491": {
      "op": "POP"
    },
    "4492": {
      "fn": "MockMoolaStakingRewards.getReward",
      "jump": "o",
      "offset": [
        5966,
        6805
      ],
      "op": "JUMP",
      "path": "6"
    },
    "4493": {
      "fn": "MockMoolaStakingRewards.updatePeriodFinish",
      "offset": [
        8089,
        8292
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4494": {
      "offset": [
        1238,
        1250
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1195"
    },
    "4497": {
      "offset": [
        1238,
        1248
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x186E"
    },
    "4500": {
      "jump": "i",
      "offset": [
        1238,
        1250
      ],
      "op": "JUMP",
      "path": "7"
    },
    "4501": {
      "fn": "MockMoolaStakingRewards.updatePeriodFinish",
      "offset": [
        1238,
        1250
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "4502": {
      "fn": "MockMoolaStakingRewards.updatePeriodFinish",
      "offset": [
        8173,
        8174
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "4504": {
      "offset": [
        9182,
        9198
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x119F"
    },
    "4507": {
      "offset": [
        9182,
        9196
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x17C8"
    },
    "4510": {
      "jump": "i",
      "offset": [
        9182,
        9198
      ],
      "op": "JUMP",
      "path": "6"
    },
    "4511": {
      "fn": "MockMoolaStakingRewards.updatePeriodFinish",
      "offset": [
        9182,
        9198
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4512": {
      "offset": [
        9159,
        9179
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x9"
    },
    "4514": {
      "offset": [
        9159,
        9198
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "4515": {
      "offset": [
        9225,
        9251
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x11AA"
    },
    "4518": {
      "offset": [
        9225,
        9249
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x133C"
    },
    "4521": {
      "jump": "i",
      "offset": [
        9225,
        9251
      ],
      "op": "JUMP",
      "path": "6"
    },
    "4522": {
      "fn": "MockMoolaStakingRewards.updatePeriodFinish",
      "offset": [
        9225,
        9251
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4523": {
      "offset": [
        9208,
        9222
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x8"
    },
    "4525": {
      "offset": [
        9208,
        9251
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "4526": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4528": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4530": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4532": {
      "op": "SHL"
    },
    "4533": {
      "op": "SUB"
    },
    "4534": {
      "offset": [
        9265,
        9286
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4535": {
      "fn": "MockMoolaStakingRewards.updatePeriodFinish",
      "offset": [
        9265,
        9286
      ],
      "op": "AND",
      "path": "6"
    },
    "4536": {
      "fn": "MockMoolaStakingRewards.updatePeriodFinish",
      "offset": [
        9265,
        9286
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "4537": {
      "offset": [
        9261,
        9452
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x11FB"
    },
    "4540": {
      "offset": [
        9261,
        9452
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "4541": {
      "offset": [
        9321,
        9336
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x11C5"
    },
    "4544": {
      "offset": [
        9328,
        9335
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4545": {
      "offset": [
        9321,
        9327
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x4B1"
    },
    "4548": {
      "jump": "i",
      "offset": [
        9321,
        9336
      ],
      "op": "JUMP",
      "path": "6"
    },
    "4549": {
      "fn": "MockMoolaStakingRewards.updatePeriodFinish",
      "offset": [
        9321,
        9336
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4550": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4552": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4554": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4556": {
      "op": "SHL"
    },
    "4557": {
      "op": "SUB"
    },
    "4558": {
      "offset": [
        9302,
        9318
      ],
      "op": "DUP3",
      "path": "6"
    },
    "4559": {
      "fn": "MockMoolaStakingRewards.updatePeriodFinish",
      "offset": [
        9302,
        9318
      ],
      "op": "AND",
      "path": "6"
    },
    "4560": {
      "fn": "MockMoolaStakingRewards.updatePeriodFinish",
      "offset": [
        9302,
        9318
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "4562": {
      "fn": "MockMoolaStakingRewards.updatePeriodFinish",
      "offset": [
        9302,
        9318
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4563": {
      "fn": "MockMoolaStakingRewards.updatePeriodFinish",
      "offset": [
        9302,
        9318
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4564": {
      "fn": "MockMoolaStakingRewards.updatePeriodFinish",
      "offset": [
        9302,
        9318
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4565": {
      "offset": [
        9302,
        9309
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xB"
    },
    "4567": {
      "offset": [
        9302,
        9318
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "4569": {
      "fn": "MockMoolaStakingRewards.updatePeriodFinish",
      "offset": [
        9302,
        9318
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4570": {
      "fn": "MockMoolaStakingRewards.updatePeriodFinish",
      "offset": [
        9302,
        9318
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4571": {
      "fn": "MockMoolaStakingRewards.updatePeriodFinish",
      "offset": [
        9302,
        9318
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4572": {
      "fn": "MockMoolaStakingRewards.updatePeriodFinish",
      "offset": [
        9302,
        9318
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "4574": {
      "fn": "MockMoolaStakingRewards.updatePeriodFinish",
      "offset": [
        9302,
        9318
      ],
      "op": "DUP1",
      "path": "6"
    },
    "4575": {
      "fn": "MockMoolaStakingRewards.updatePeriodFinish",
      "offset": [
        9302,
        9318
      ],
      "op": "DUP4",
      "path": "6"
    },
    "4576": {
      "fn": "MockMoolaStakingRewards.updatePeriodFinish",
      "offset": [
        9302,
        9318
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "4577": {
      "offset": [
        9302,
        9336
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "4578": {
      "fn": "MockMoolaStakingRewards.updatePeriodFinish",
      "offset": [
        9302,
        9336
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4579": {
      "fn": "MockMoolaStakingRewards.updatePeriodFinish",
      "offset": [
        9302,
        9336
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "4580": {
      "fn": "MockMoolaStakingRewards.updatePeriodFinish",
      "offset": [
        9302,
        9336
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "4581": {
      "offset": [
        9384,
        9404
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x9"
    },
    "4583": {
      "fn": "MockMoolaStakingRewards.updatePeriodFinish",
      "offset": [
        9384,
        9404
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "4584": {
      "offset": [
        9350,
        9372
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xA"
    },
    "4586": {
      "offset": [
        9350,
        9381
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4587": {
      "fn": "MockMoolaStakingRewards.updatePeriodFinish",
      "offset": [
        9350,
        9381
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "4588": {
      "fn": "MockMoolaStakingRewards.updatePeriodFinish",
      "offset": [
        9350,
        9381
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4589": {
      "fn": "MockMoolaStakingRewards.updatePeriodFinish",
      "offset": [
        9350,
        9381
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "4590": {
      "fn": "MockMoolaStakingRewards.updatePeriodFinish",
      "offset": [
        9350,
        9381
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4591": {
      "fn": "MockMoolaStakingRewards.updatePeriodFinish",
      "offset": [
        9350,
        9381
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "4592": {
      "offset": [
        9350,
        9404
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "4593": {
      "offset": [
        9418,
        9441
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x11F9"
    },
    "4596": {
      "offset": [
        9310,
        9317
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4597": {
      "offset": [
        9418,
        9432
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x5D4"
    },
    "4600": {
      "jump": "i",
      "offset": [
        9418,
        9441
      ],
      "op": "JUMP",
      "path": "6"
    },
    "4601": {
      "fn": "MockMoolaStakingRewards.updatePeriodFinish",
      "offset": [
        9418,
        9441
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4602": {
      "fn": "MockMoolaStakingRewards.updatePeriodFinish",
      "offset": [
        9418,
        9441
      ],
      "op": "POP",
      "path": "6"
    },
    "4603": {
      "offset": [
        9261,
        9452
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4604": {
      "fn": "MockMoolaStakingRewards.updatePeriodFinish",
      "offset": [
        8207,
        8221
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 36,
      "value": "0x8"
    },
    "4606": {
      "fn": "MockMoolaStakingRewards.updatePeriodFinish",
      "offset": [
        8207,
        8221
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "4607": {
      "fn": "MockMoolaStakingRewards.updatePeriodFinish",
      "offset": [
        8195,
        8204
      ],
      "op": "DUP3",
      "path": "6"
    },
    "4608": {
      "branch": 81,
      "fn": "MockMoolaStakingRewards.updatePeriodFinish",
      "offset": [
        8195,
        8221
      ],
      "op": "GT",
      "path": "6"
    },
    "4609": {
      "fn": "MockMoolaStakingRewards.updatePeriodFinish",
      "offset": [
        8187,
        8251
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x124C"
    },
    "4612": {
      "branch": 81,
      "fn": "MockMoolaStakingRewards.updatePeriodFinish",
      "offset": [
        8187,
        8251
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "4613": {
      "fn": "MockMoolaStakingRewards.updatePeriodFinish",
      "offset": [
        8187,
        8251
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "4615": {
      "fn": "MockMoolaStakingRewards.updatePeriodFinish",
      "offset": [
        8187,
        8251
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "4616": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4620": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4622": {
      "op": "SHL"
    },
    "4623": {
      "fn": "MockMoolaStakingRewards.updatePeriodFinish",
      "offset": [
        8187,
        8251
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4624": {
      "fn": "MockMoolaStakingRewards.updatePeriodFinish",
      "offset": [
        8187,
        8251
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4625": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4627": {
      "fn": "MockMoolaStakingRewards.updatePeriodFinish",
      "offset": [
        8187,
        8251
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "4629": {
      "fn": "MockMoolaStakingRewards.updatePeriodFinish",
      "offset": [
        8187,
        8251
      ],
      "op": "DUP3",
      "path": "6"
    },
    "4630": {
      "fn": "MockMoolaStakingRewards.updatePeriodFinish",
      "offset": [
        8187,
        8251
      ],
      "op": "ADD",
      "path": "6"
    },
    "4631": {
      "op": "MSTORE"
    },
    "4632": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "4634": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4636": {
      "op": "DUP3"
    },
    "4637": {
      "op": "ADD"
    },
    "4638": {
      "op": "MSTORE"
    },
    "4639": {
      "op": "PUSH32",
      "value": "0x496E76616C6964206E657720706572696F642066696E69736800000000000000"
    },
    "4672": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4674": {
      "op": "DUP3"
    },
    "4675": {
      "op": "ADD"
    },
    "4676": {
      "op": "MSTORE"
    },
    "4677": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4679": {
      "op": "ADD"
    },
    "4680": {
      "fn": "MockMoolaStakingRewards.updatePeriodFinish",
      "offset": [
        8187,
        8251
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xA9F"
    },
    "4683": {
      "op": "JUMP"
    },
    "4684": {
      "fn": "MockMoolaStakingRewards.updatePeriodFinish",
      "offset": [
        8187,
        8251
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4685": {
      "op": "POP"
    },
    "4686": {
      "fn": "MockMoolaStakingRewards.updatePeriodFinish",
      "offset": [
        8261,
        8273
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 37,
      "value": "0x5"
    },
    "4688": {
      "fn": "MockMoolaStakingRewards.updatePeriodFinish",
      "offset": [
        8261,
        8285
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "4689": {
      "fn": "MockMoolaStakingRewards.updatePeriodFinish",
      "jump": "o",
      "offset": [
        8089,
        8292
      ],
      "op": "JUMP",
      "path": "6"
    },
    "4690": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        937,
        1203
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "4691": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        1005,
        1019
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 38,
      "value": "0x1"
    },
    "4693": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        1005,
        1019
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "4694": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4696": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4698": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4700": {
      "op": "SHL"
    },
    "4701": {
      "op": "SUB"
    },
    "4702": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        1005,
        1019
      ],
      "op": "AND",
      "path": "7"
    },
    "4703": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        991,
        1001
      ],
      "op": "CALLER",
      "path": "7"
    },
    "4704": {
      "branch": 91,
      "fn": "Owned.acceptOwnership",
      "offset": [
        991,
        1019
      ],
      "op": "EQ",
      "path": "7"
    },
    "4705": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        983,
        1077
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x12CA"
    },
    "4708": {
      "branch": 91,
      "fn": "Owned.acceptOwnership",
      "offset": [
        983,
        1077
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "4709": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        983,
        1077
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "4711": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        983,
        1077
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "4712": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4716": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4718": {
      "op": "SHL"
    },
    "4719": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        983,
        1077
      ],
      "op": "DUP2",
      "path": "7"
    },
    "4720": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        983,
        1077
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "4721": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4723": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        983,
        1077
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "4725": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        983,
        1077
      ],
      "op": "DUP3",
      "path": "7"
    },
    "4726": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        983,
        1077
      ],
      "op": "ADD",
      "path": "7"
    },
    "4727": {
      "op": "MSTORE"
    },
    "4728": {
      "op": "PUSH1",
      "value": "0x35"
    },
    "4730": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4732": {
      "op": "DUP3"
    },
    "4733": {
      "op": "ADD"
    },
    "4734": {
      "op": "MSTORE"
    },
    "4735": {
      "op": "PUSH32",
      "value": "0x596F75206D757374206265206E6F6D696E61746564206265666F726520796F75"
    },
    "4768": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4770": {
      "op": "DUP3"
    },
    "4771": {
      "op": "ADD"
    },
    "4772": {
      "op": "MSTORE"
    },
    "4773": {
      "op": "PUSH21",
      "value": "0x2063616E20616363657074206F776E65727368697"
    },
    "4795": {
      "op": "PUSH1",
      "value": "0x5C"
    },
    "4797": {
      "op": "SHL"
    },
    "4798": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4800": {
      "op": "DUP3"
    },
    "4801": {
      "op": "ADD"
    },
    "4802": {
      "op": "MSTORE"
    },
    "4803": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "4805": {
      "op": "ADD"
    },
    "4806": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        983,
        1077
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xA9F"
    },
    "4809": {
      "op": "JUMP"
    },
    "4810": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        983,
        1077
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "4811": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        1105,
        1110
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 39,
      "value": "0x0"
    },
    "4813": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        1105,
        1110
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "4814": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        1105,
        1110
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1"
    },
    "4816": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        1112,
        1126
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "4817": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        1092,
        1127
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "4819": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        1092,
        1127
      ],
      "op": "DUP1",
      "path": "7"
    },
    "4820": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        1092,
        1127
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "4821": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4823": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4825": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4827": {
      "op": "SHL"
    },
    "4828": {
      "op": "SUB"
    },
    "4829": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        1105,
        1110
      ],
      "op": "SWAP4",
      "path": "7"
    },
    "4830": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        1105,
        1110
      ],
      "op": "DUP5",
      "path": "7"
    },
    "4831": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        1105,
        1110
      ],
      "op": "AND",
      "path": "7"
    },
    "4832": {
      "op": "DUP2"
    },
    "4833": {
      "op": "MSTORE"
    },
    "4834": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        1112,
        1126
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "4835": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        1112,
        1126
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "4836": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        1112,
        1126
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "4837": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        1112,
        1126
      ],
      "op": "AND",
      "path": "7"
    },
    "4838": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4840": {
      "op": "DUP4"
    },
    "4841": {
      "op": "ADD"
    },
    "4842": {
      "op": "MSTORE"
    },
    "4843": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        1092,
        1127
      ],
      "op": "PUSH32",
      "path": "7",
      "value": "0xB532073B38C83145E3E5135377A08BF9AAB55BC0FD7C1179CD4FB995D2A5159C"
    },
    "4876": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        1092,
        1127
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "4877": {
      "op": "ADD"
    },
    "4878": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        1092,
        1127
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "4880": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        1092,
        1127
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "4881": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        1092,
        1127
      ],
      "op": "DUP1",
      "path": "7"
    },
    "4882": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        1092,
        1127
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "4883": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        1092,
        1127
      ],
      "op": "SUB",
      "path": "7"
    },
    "4884": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        1092,
        1127
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "4885": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        1092,
        1127
      ],
      "op": "LOG1",
      "path": "7"
    },
    "4886": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        1145,
        1159
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 40,
      "value": "0x1"
    },
    "4888": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        1145,
        1159
      ],
      "op": "DUP1",
      "path": "7"
    },
    "4889": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        1145,
        1159
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "4890": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        1145,
        1159
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "4892": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        1137,
        1159
      ],
      "op": "DUP1",
      "path": "7"
    },
    "4893": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        1137,
        1159
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "4894": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4896": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4898": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4900": {
      "op": "SHL"
    },
    "4901": {
      "op": "SUB"
    },
    "4902": {
      "op": "NOT"
    },
    "4903": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        1137,
        1159
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "4904": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        1137,
        1159
      ],
      "op": "DUP2",
      "path": "7"
    },
    "4905": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        1137,
        1159
      ],
      "op": "AND",
      "path": "7"
    },
    "4906": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4908": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4910": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4912": {
      "op": "SHL"
    },
    "4913": {
      "op": "SUB"
    },
    "4914": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        1145,
        1159
      ],
      "op": "DUP5",
      "path": "7"
    },
    "4915": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        1145,
        1159
      ],
      "op": "AND",
      "path": "7"
    },
    "4916": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        1137,
        1159
      ],
      "op": "OR",
      "path": "7"
    },
    "4917": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        1137,
        1159
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "4918": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        1137,
        1159
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "4919": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        1137,
        1159
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "4920": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        1169,
        1196
      ],
      "op": "AND",
      "path": "7",
      "statement": 41
    },
    "4921": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        1169,
        1196
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "4922": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        1169,
        1196
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "4923": {
      "fn": "Owned.acceptOwnership",
      "jump": "o",
      "offset": [
        937,
        1203
      ],
      "op": "JUMP",
      "path": "7"
    },
    "4924": {
      "fn": "MockMoolaStakingRewards.lastTimeRewardApplicable",
      "offset": [
        2592,
        2730
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4925": {
      "fn": "MockMoolaStakingRewards.lastTimeRewardApplicable",
      "offset": [
        2658,
        2665
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "4927": {
      "fn": "MockMoolaStakingRewards.lastTimeRewardApplicable",
      "offset": [
        2684,
        2723
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 42,
      "value": "0x5CF"
    },
    "4930": {
      "fn": "MockMoolaStakingRewards.lastTimeRewardApplicable",
      "offset": [
        2693,
        2708
      ],
      "op": "TIMESTAMP",
      "path": "6"
    },
    "4931": {
      "fn": "MockMoolaStakingRewards.lastTimeRewardApplicable",
      "offset": [
        2710,
        2722
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x5"
    },
    "4933": {
      "fn": "MockMoolaStakingRewards.lastTimeRewardApplicable",
      "offset": [
        2710,
        2722
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "4934": {
      "fn": "MockMoolaStakingRewards.lastTimeRewardApplicable",
      "offset": [
        2684,
        2692
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1948"
    },
    "4937": {
      "fn": "MockMoolaStakingRewards.lastTimeRewardApplicable",
      "jump": "i",
      "offset": [
        2684,
        2723
      ],
      "op": "JUMP",
      "path": "6"
    },
    "4938": {
      "fn": "MockMoolaStakingRewards.recoverERC20",
      "offset": [
        8404,
        8702
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4939": {
      "offset": [
        1238,
        1250
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1352"
    },
    "4942": {
      "offset": [
        1238,
        1248
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x186E"
    },
    "4945": {
      "jump": "i",
      "offset": [
        1238,
        1250
      ],
      "op": "JUMP",
      "path": "7"
    },
    "4946": {
      "fn": "MockMoolaStakingRewards.recoverERC20",
      "offset": [
        1238,
        1250
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "4947": {
      "fn": "MockMoolaStakingRewards.recoverERC20",
      "offset": [
        8530,
        8542
      ],
      "op": "PUSH32",
      "path": "6",
      "statement": 43,
      "value": "0x0"
    },
    "4980": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4982": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4984": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4986": {
      "op": "SHL"
    },
    "4987": {
      "op": "SUB"
    },
    "4988": {
      "fn": "MockMoolaStakingRewards.recoverERC20",
      "offset": [
        8506,
        8543
      ],
      "op": "AND",
      "path": "6"
    },
    "4989": {
      "fn": "MockMoolaStakingRewards.recoverERC20",
      "offset": [
        8506,
        8518
      ],
      "op": "DUP3",
      "path": "6"
    },
    "4990": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4992": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4994": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4996": {
      "op": "SHL"
    },
    "4997": {
      "op": "SUB"
    },
    "4998": {
      "fn": "MockMoolaStakingRewards.recoverERC20",
      "offset": [
        8506,
        8543
      ],
      "op": "AND",
      "path": "6"
    },
    "4999": {
      "fn": "MockMoolaStakingRewards.recoverERC20",
      "offset": [
        8506,
        8543
      ],
      "op": "EQ",
      "path": "6"
    },
    "5000": {
      "branch": 82,
      "fn": "MockMoolaStakingRewards.recoverERC20",
      "offset": [
        8506,
        8543
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "5001": {
      "fn": "MockMoolaStakingRewards.recoverERC20",
      "offset": [
        8498,
        8581
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x13DE"
    },
    "5004": {
      "branch": 82,
      "fn": "MockMoolaStakingRewards.recoverERC20",
      "offset": [
        8498,
        8581
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "5005": {
      "fn": "MockMoolaStakingRewards.recoverERC20",
      "offset": [
        8498,
        8581
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "5007": {
      "fn": "MockMoolaStakingRewards.recoverERC20",
      "offset": [
        8498,
        8581
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "5008": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5012": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5014": {
      "op": "SHL"
    },
    "5015": {
      "fn": "MockMoolaStakingRewards.recoverERC20",
      "offset": [
        8498,
        8581
      ],
      "op": "DUP2",
      "path": "6"
    },
    "5016": {
      "fn": "MockMoolaStakingRewards.recoverERC20",
      "offset": [
        8498,
        8581
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "5017": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5019": {
      "fn": "MockMoolaStakingRewards.recoverERC20",
      "offset": [
        8498,
        8581
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "5021": {
      "fn": "MockMoolaStakingRewards.recoverERC20",
      "offset": [
        8498,
        8581
      ],
      "op": "DUP3",
      "path": "6"
    },
    "5022": {
      "fn": "MockMoolaStakingRewards.recoverERC20",
      "offset": [
        8498,
        8581
      ],
      "op": "ADD",
      "path": "6"
    },
    "5023": {
      "op": "MSTORE"
    },
    "5024": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "5026": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5028": {
      "op": "DUP3"
    },
    "5029": {
      "op": "ADD"
    },
    "5030": {
      "op": "MSTORE"
    },
    "5031": {
      "op": "PUSH32",
      "value": "0x43616E6E6F7420776974686472617720746865207374616B696E6720746F6B65"
    },
    "5064": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5066": {
      "op": "DUP3"
    },
    "5067": {
      "op": "ADD"
    },
    "5068": {
      "op": "MSTORE"
    },
    "5069": {
      "op": "PUSH1",
      "value": "0x37"
    },
    "5071": {
      "op": "PUSH1",
      "value": "0xF9"
    },
    "5073": {
      "op": "SHL"
    },
    "5074": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5076": {
      "op": "DUP3"
    },
    "5077": {
      "op": "ADD"
    },
    "5078": {
      "op": "MSTORE"
    },
    "5079": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "5081": {
      "op": "ADD"
    },
    "5082": {
      "fn": "MockMoolaStakingRewards.recoverERC20",
      "offset": [
        8498,
        8581
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xA9F"
    },
    "5085": {
      "op": "JUMP"
    },
    "5086": {
      "fn": "MockMoolaStakingRewards.recoverERC20",
      "offset": [
        8498,
        8581
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "5087": {
      "fn": "MockMoolaStakingRewards.recoverERC20",
      "offset": [
        8625,
        8630
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 44,
      "value": "0x0"
    },
    "5089": {
      "fn": "MockMoolaStakingRewards.recoverERC20",
      "offset": [
        8625,
        8630
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "5090": {
      "fn": "MockMoolaStakingRewards.recoverERC20",
      "offset": [
        8591,
        8644
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x13F8"
    },
    "5093": {
      "fn": "MockMoolaStakingRewards.recoverERC20",
      "offset": [
        8591,
        8644
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5094": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5096": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5098": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5100": {
      "op": "SHL"
    },
    "5101": {
      "op": "SUB"
    },
    "5102": {
      "fn": "MockMoolaStakingRewards.recoverERC20",
      "offset": [
        8591,
        8624
      ],
      "op": "DUP5",
      "path": "6"
    },
    "5103": {
      "fn": "MockMoolaStakingRewards.recoverERC20",
      "offset": [
        8591,
        8624
      ],
      "op": "DUP2",
      "path": "6"
    },
    "5104": {
      "fn": "MockMoolaStakingRewards.recoverERC20",
      "offset": [
        8591,
        8624
      ],
      "op": "AND",
      "path": "6"
    },
    "5105": {
      "fn": "MockMoolaStakingRewards.recoverERC20",
      "offset": [
        8591,
        8624
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "5106": {
      "fn": "MockMoolaStakingRewards.recoverERC20",
      "offset": [
        8625,
        8630
      ],
      "op": "AND",
      "path": "6"
    },
    "5107": {
      "fn": "MockMoolaStakingRewards.recoverERC20",
      "offset": [
        8632,
        8643
      ],
      "op": "DUP4",
      "path": "6"
    },
    "5108": {
      "fn": "MockMoolaStakingRewards.recoverERC20",
      "offset": [
        8591,
        8624
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x18E0"
    },
    "5111": {
      "fn": "MockMoolaStakingRewards.recoverERC20",
      "jump": "i",
      "offset": [
        8591,
        8644
      ],
      "op": "JUMP",
      "path": "6"
    },
    "5112": {
      "fn": "MockMoolaStakingRewards.recoverERC20",
      "offset": [
        8591,
        8644
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "5113": {
      "fn": "MockMoolaStakingRewards.recoverERC20",
      "offset": [
        8659,
        8695
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 45,
      "value": "0x40"
    },
    "5115": {
      "fn": "MockMoolaStakingRewards.recoverERC20",
      "offset": [
        8659,
        8695
      ],
      "op": "DUP1",
      "path": "6"
    },
    "5116": {
      "fn": "MockMoolaStakingRewards.recoverERC20",
      "offset": [
        8659,
        8695
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "5117": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5119": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5121": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5123": {
      "op": "SHL"
    },
    "5124": {
      "op": "SUB"
    },
    "5125": {
      "op": "DUP5"
    },
    "5126": {
      "op": "AND"
    },
    "5127": {
      "op": "DUP2"
    },
    "5128": {
      "op": "MSTORE"
    },
    "5129": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5131": {
      "op": "DUP2"
    },
    "5132": {
      "op": "ADD"
    },
    "5133": {
      "op": "DUP4"
    },
    "5134": {
      "op": "SWAP1"
    },
    "5135": {
      "op": "MSTORE"
    },
    "5136": {
      "fn": "MockMoolaStakingRewards.recoverERC20",
      "offset": [
        8659,
        8695
      ],
      "op": "PUSH32",
      "path": "6",
      "value": "0x8C1256B8896378CD5044F80C202F9772B9D77DC85C8A6EB51967210B09BFAA28"
    },
    "5169": {
      "fn": "MockMoolaStakingRewards.recoverERC20",
      "offset": [
        8659,
        8695
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "5170": {
      "op": "ADD"
    },
    "5171": {
      "fn": "MockMoolaStakingRewards.recoverERC20",
      "offset": [
        8659,
        8695
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "5173": {
      "fn": "MockMoolaStakingRewards.recoverERC20",
      "offset": [
        8659,
        8695
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "5174": {
      "fn": "MockMoolaStakingRewards.recoverERC20",
      "offset": [
        8659,
        8695
      ],
      "op": "DUP1",
      "path": "6"
    },
    "5175": {
      "fn": "MockMoolaStakingRewards.recoverERC20",
      "offset": [
        8659,
        8695
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "5176": {
      "fn": "MockMoolaStakingRewards.recoverERC20",
      "offset": [
        8659,
        8695
      ],
      "op": "SUB",
      "path": "6"
    },
    "5177": {
      "fn": "MockMoolaStakingRewards.recoverERC20",
      "offset": [
        8659,
        8695
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5178": {
      "fn": "MockMoolaStakingRewards.recoverERC20",
      "offset": [
        8659,
        8695
      ],
      "op": "LOG1",
      "path": "6"
    },
    "5179": {
      "fn": "MockMoolaStakingRewards.recoverERC20",
      "offset": [
        8404,
        8702
      ],
      "op": "POP",
      "path": "6"
    },
    "5180": {
      "fn": "MockMoolaStakingRewards.recoverERC20",
      "offset": [
        8404,
        8702
      ],
      "op": "POP",
      "path": "6"
    },
    "5181": {
      "fn": "MockMoolaStakingRewards.recoverERC20",
      "jump": "o",
      "offset": [
        8404,
        8702
      ],
      "op": "JUMP",
      "path": "6"
    },
    "5182": {
      "fn": "MockMoolaStakingRewards.stake",
      "offset": [
        5056,
        5545
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "5183": {
      "offset": [
        1680,
        1681
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "5185": {
      "offset": [
        2260,
        2267
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "5187": {
      "fn": "MockMoolaStakingRewards.stake",
      "offset": [
        2260,
        2267
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "5188": {
      "offset": [
        2260,
        2279
      ],
      "op": "EQ",
      "path": "0"
    },
    "5189": {
      "branch": 93,
      "fn": "MockMoolaStakingRewards.stake",
      "offset": [
        2260,
        2279
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "5190": {
      "offset": [
        2252,
        2315
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1461"
    },
    "5193": {
      "branch": 93,
      "offset": [
        2252,
        2315
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5194": {
      "fn": "MockMoolaStakingRewards.stake",
      "offset": [
        2252,
        2315
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5196": {
      "fn": "MockMoolaStakingRewards.stake",
      "offset": [
        2252,
        2315
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5197": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5201": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5203": {
      "op": "SHL"
    },
    "5204": {
      "offset": [
        2252,
        2315
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5205": {
      "fn": "MockMoolaStakingRewards.stake",
      "offset": [
        2252,
        2315
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5206": {
      "fn": "MockMoolaStakingRewards.stake",
      "offset": [
        2252,
        2315
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "5208": {
      "fn": "MockMoolaStakingRewards.stake",
      "offset": [
        2252,
        2315
      ],
      "op": "ADD",
      "path": "0"
    },
    "5209": {
      "fn": "MockMoolaStakingRewards.stake",
      "offset": [
        2252,
        2315
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA9F"
    },
    "5212": {
      "fn": "MockMoolaStakingRewards.stake",
      "offset": [
        2252,
        2315
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5213": {
      "fn": "MockMoolaStakingRewards.stake",
      "offset": [
        2252,
        2315
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1D4F"
    },
    "5216": {
      "fn": "MockMoolaStakingRewards.stake",
      "jump": "i",
      "offset": [
        2252,
        2315
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5217": {
      "fn": "MockMoolaStakingRewards.stake",
      "offset": [
        2252,
        2315
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5218": {
      "offset": [
        1680,
        1681
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "5220": {
      "offset": [
        2390,
        2397
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "5222": {
      "offset": [
        2390,
        2408
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "5223": {
      "fn": "MockMoolaStakingRewards.stake",
      "offset": [
        5131,
        5141
      ],
      "op": "CALLER",
      "path": "6"
    },
    "5224": {
      "offset": [
        9182,
        9198
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x146F"
    },
    "5227": {
      "offset": [
        9182,
        9196
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x17C8"
    },
    "5230": {
      "jump": "i",
      "offset": [
        9182,
        9198
      ],
      "op": "JUMP",
      "path": "6"
    },
    "5231": {
      "fn": "MockMoolaStakingRewards.stake",
      "offset": [
        9182,
        9198
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "5232": {
      "offset": [
        9159,
        9179
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x9"
    },
    "5234": {
      "offset": [
        9159,
        9198
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "5235": {
      "offset": [
        9225,
        9251
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x147A"
    },
    "5238": {
      "offset": [
        9225,
        9249
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x133C"
    },
    "5241": {
      "jump": "i",
      "offset": [
        9225,
        9251
      ],
      "op": "JUMP",
      "path": "6"
    },
    "5242": {
      "fn": "MockMoolaStakingRewards.stake",
      "offset": [
        9225,
        9251
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "5243": {
      "offset": [
        9208,
        9222
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x8"
    },
    "5245": {
      "offset": [
        9208,
        9251
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "5246": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5248": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5250": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5252": {
      "op": "SHL"
    },
    "5253": {
      "op": "SUB"
    },
    "5254": {
      "offset": [
        9265,
        9286
      ],
      "op": "DUP2",
      "path": "6"
    },
    "5255": {
      "fn": "MockMoolaStakingRewards.stake",
      "offset": [
        9265,
        9286
      ],
      "op": "AND",
      "path": "6"
    },
    "5256": {
      "branch": 83,
      "fn": "MockMoolaStakingRewards.stake",
      "offset": [
        9265,
        9286
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "5257": {
      "offset": [
        9261,
        9452
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x14CB"
    },
    "5260": {
      "branch": 83,
      "offset": [
        9261,
        9452
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "5261": {
      "offset": [
        9321,
        9336
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1495"
    },
    "5264": {
      "offset": [
        9328,
        9335
      ],
      "op": "DUP2",
      "path": "6"
    },
    "5265": {
      "offset": [
        9321,
        9327
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x4B1"
    },
    "5268": {
      "jump": "i",
      "offset": [
        9321,
        9336
      ],
      "op": "JUMP",
      "path": "6"
    },
    "5269": {
      "fn": "MockMoolaStakingRewards.stake",
      "offset": [
        9321,
        9336
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "5270": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5272": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5274": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5276": {
      "op": "SHL"
    },
    "5277": {
      "op": "SUB"
    },
    "5278": {
      "offset": [
        9302,
        9318
      ],
      "op": "DUP3",
      "path": "6"
    },
    "5279": {
      "fn": "MockMoolaStakingRewards.stake",
      "offset": [
        9302,
        9318
      ],
      "op": "AND",
      "path": "6"
    },
    "5280": {
      "fn": "MockMoolaStakingRewards.stake",
      "offset": [
        9302,
        9318
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "5282": {
      "fn": "MockMoolaStakingRewards.stake",
      "offset": [
        9302,
        9318
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5283": {
      "fn": "MockMoolaStakingRewards.stake",
      "offset": [
        9302,
        9318
      ],
      "op": "DUP2",
      "path": "6"
    },
    "5284": {
      "fn": "MockMoolaStakingRewards.stake",
      "offset": [
        9302,
        9318
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "5285": {
      "offset": [
        9302,
        9309
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xB"
    },
    "5287": {
      "offset": [
        9302,
        9318
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "5289": {
      "fn": "MockMoolaStakingRewards.stake",
      "offset": [
        9302,
        9318
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5290": {
      "fn": "MockMoolaStakingRewards.stake",
      "offset": [
        9302,
        9318
      ],
      "op": "DUP2",
      "path": "6"
    },
    "5291": {
      "fn": "MockMoolaStakingRewards.stake",
      "offset": [
        9302,
        9318
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "5292": {
      "fn": "MockMoolaStakingRewards.stake",
      "offset": [
        9302,
        9318
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "5294": {
      "fn": "MockMoolaStakingRewards.stake",
      "offset": [
        9302,
        9318
      ],
      "op": "DUP1",
      "path": "6"
    },
    "5295": {
      "fn": "MockMoolaStakingRewards.stake",
      "offset": [
        9302,
        9318
      ],
      "op": "DUP4",
      "path": "6"
    },
    "5296": {
      "fn": "MockMoolaStakingRewards.stake",
      "offset": [
        9302,
        9318
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "5297": {
      "offset": [
        9302,
        9336
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "5298": {
      "fn": "MockMoolaStakingRewards.stake",
      "offset": [
        9302,
        9336
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5299": {
      "fn": "MockMoolaStakingRewards.stake",
      "offset": [
        9302,
        9336
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "5300": {
      "fn": "MockMoolaStakingRewards.stake",
      "offset": [
        9302,
        9336
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "5301": {
      "offset": [
        9384,
        9404
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x9"
    },
    "5303": {
      "fn": "MockMoolaStakingRewards.stake",
      "offset": [
        9384,
        9404
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "5304": {
      "offset": [
        9350,
        9372
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xA"
    },
    "5306": {
      "offset": [
        9350,
        9381
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5307": {
      "fn": "MockMoolaStakingRewards.stake",
      "offset": [
        9350,
        9381
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "5308": {
      "fn": "MockMoolaStakingRewards.stake",
      "offset": [
        9350,
        9381
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "5309": {
      "fn": "MockMoolaStakingRewards.stake",
      "offset": [
        9350,
        9381
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "5310": {
      "fn": "MockMoolaStakingRewards.stake",
      "offset": [
        9350,
        9381
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5311": {
      "fn": "MockMoolaStakingRewards.stake",
      "offset": [
        9350,
        9381
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "5312": {
      "offset": [
        9350,
        9404
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "5313": {
      "offset": [
        9418,
        9441
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x14C9"
    },
    "5316": {
      "offset": [
        9310,
        9317
      ],
      "op": "DUP2",
      "path": "6"
    },
    "5317": {
      "offset": [
        9418,
        9432
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x5D4"
    },
    "5320": {
      "jump": "i",
      "offset": [
        9418,
        9441
      ],
      "op": "JUMP",
      "path": "6"
    },
    "5321": {
      "fn": "MockMoolaStakingRewards.stake",
      "offset": [
        9418,
        9441
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "5322": {
      "fn": "MockMoolaStakingRewards.stake",
      "offset": [
        9418,
        9441
      ],
      "op": "POP",
      "path": "6"
    },
    "5323": {
      "offset": [
        9261,
        9452
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "5324": {
      "fn": "MockMoolaStakingRewards.stake",
      "offset": [
        5170,
        5171
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 46,
      "value": "0x0"
    },
    "5326": {
      "fn": "MockMoolaStakingRewards.stake",
      "offset": [
        5161,
        5167
      ],
      "op": "DUP3",
      "path": "6"
    },
    "5327": {
      "branch": 84,
      "fn": "MockMoolaStakingRewards.stake",
      "offset": [
        5161,
        5171
      ],
      "op": "GT",
      "path": "6"
    },
    "5328": {
      "fn": "MockMoolaStakingRewards.stake",
      "offset": [
        5153,
        5190
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x150C"
    },
    "5331": {
      "branch": 84,
      "fn": "MockMoolaStakingRewards.stake",
      "offset": [
        5153,
        5190
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "5332": {
      "fn": "MockMoolaStakingRewards.stake",
      "offset": [
        5153,
        5190
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "5334": {
      "fn": "MockMoolaStakingRewards.stake",
      "offset": [
        5153,
        5190
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "5335": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5339": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5341": {
      "op": "SHL"
    },
    "5342": {
      "fn": "MockMoolaStakingRewards.stake",
      "offset": [
        5153,
        5190
      ],
      "op": "DUP2",
      "path": "6"
    },
    "5343": {
      "fn": "MockMoolaStakingRewards.stake",
      "offset": [
        5153,
        5190
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "5344": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5346": {
      "fn": "MockMoolaStakingRewards.stake",
      "offset": [
        5153,
        5190
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "5348": {
      "fn": "MockMoolaStakingRewards.stake",
      "offset": [
        5153,
        5190
      ],
      "op": "DUP3",
      "path": "6"
    },
    "5349": {
      "fn": "MockMoolaStakingRewards.stake",
      "offset": [
        5153,
        5190
      ],
      "op": "ADD",
      "path": "6"
    },
    "5350": {
      "op": "MSTORE"
    },
    "5351": {
      "op": "PUSH1",
      "value": "0xE"
    },
    "5353": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5355": {
      "op": "DUP3"
    },
    "5356": {
      "op": "ADD"
    },
    "5357": {
      "op": "MSTORE"
    },
    "5358": {
      "op": "PUSH14",
      "value": "0x43616E6E6F74207374616B65203"
    },
    "5373": {
      "op": "PUSH1",
      "value": "0x94"
    },
    "5375": {
      "op": "SHL"
    },
    "5376": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5378": {
      "op": "DUP3"
    },
    "5379": {
      "op": "ADD"
    },
    "5380": {
      "op": "MSTORE"
    },
    "5381": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5383": {
      "op": "ADD"
    },
    "5384": {
      "fn": "MockMoolaStakingRewards.stake",
      "offset": [
        5153,
        5190
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xA9F"
    },
    "5387": {
      "op": "JUMP"
    },
    "5388": {
      "fn": "MockMoolaStakingRewards.stake",
      "offset": [
        5153,
        5190
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "5389": {
      "fn": "MockMoolaStakingRewards.stake",
      "offset": [
        5215,
        5227
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 47,
      "value": "0xF"
    },
    "5391": {
      "fn": "MockMoolaStakingRewards.stake",
      "offset": [
        5215,
        5227
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "5392": {
      "fn": "MockMoolaStakingRewards.stake",
      "offset": [
        5215,
        5239
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1519"
    },
    "5395": {
      "fn": "MockMoolaStakingRewards.stake",
      "offset": [
        5215,
        5239
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5396": {
      "fn": "MockMoolaStakingRewards.stake",
      "offset": [
        5232,
        5238
      ],
      "op": "DUP4",
      "path": "6"
    },
    "5397": {
      "fn": "MockMoolaStakingRewards.stake",
      "offset": [
        5215,
        5231
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1862"
    },
    "5400": {
      "fn": "MockMoolaStakingRewards.stake",
      "jump": "i",
      "offset": [
        5215,
        5239
      ],
      "op": "JUMP",
      "path": "6"
    },
    "5401": {
      "fn": "MockMoolaStakingRewards.stake",
      "offset": [
        5215,
        5239
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "5402": {
      "fn": "MockMoolaStakingRewards.stake",
      "offset": [
        5200,
        5212
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xF"
    },
    "5404": {
      "fn": "MockMoolaStakingRewards.stake",
      "offset": [
        5200,
        5239
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "5405": {
      "fn": "MockMoolaStakingRewards.stake",
      "offset": [
        5283,
        5293
      ],
      "op": "CALLER",
      "path": "6",
      "statement": 48
    },
    "5406": {
      "fn": "MockMoolaStakingRewards.stake",
      "offset": [
        5273,
        5294
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "5408": {
      "fn": "MockMoolaStakingRewards.stake",
      "offset": [
        5273,
        5294
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5409": {
      "fn": "MockMoolaStakingRewards.stake",
      "offset": [
        5273,
        5294
      ],
      "op": "DUP2",
      "path": "6"
    },
    "5410": {
      "fn": "MockMoolaStakingRewards.stake",
      "offset": [
        5273,
        5294
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "5411": {
      "fn": "MockMoolaStakingRewards.stake",
      "offset": [
        5273,
        5282
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x10"
    },
    "5413": {
      "fn": "MockMoolaStakingRewards.stake",
      "offset": [
        5273,
        5294
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "5415": {
      "fn": "MockMoolaStakingRewards.stake",
      "offset": [
        5273,
        5294
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "5416": {
      "fn": "MockMoolaStakingRewards.stake",
      "offset": [
        5273,
        5294
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "5418": {
      "fn": "MockMoolaStakingRewards.stake",
      "offset": [
        5273,
        5294
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5419": {
      "fn": "MockMoolaStakingRewards.stake",
      "offset": [
        5273,
        5294
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "5420": {
      "fn": "MockMoolaStakingRewards.stake",
      "offset": [
        5273,
        5294
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "5421": {
      "fn": "MockMoolaStakingRewards.stake",
      "offset": [
        5273,
        5306
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1536"
    },
    "5424": {
      "fn": "MockMoolaStakingRewards.stake",
      "offset": [
        5273,
        5306
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5425": {
      "fn": "MockMoolaStakingRewards.stake",
      "offset": [
        5299,
        5305
      ],
      "op": "DUP4",
      "path": "6"
    },
    "5426": {
      "fn": "MockMoolaStakingRewards.stake",
      "offset": [
        5273,
        5298
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1862"
    },
    "5429": {
      "fn": "MockMoolaStakingRewards.stake",
      "jump": "i",
      "offset": [
        5273,
        5306
      ],
      "op": "JUMP",
      "path": "6"
    },
    "5430": {
      "fn": "MockMoolaStakingRewards.stake",
      "offset": [
        5273,
        5306
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "5431": {
      "fn": "MockMoolaStakingRewards.stake",
      "offset": [
        5259,
        5269
      ],
      "op": "CALLER",
      "path": "6"
    },
    "5432": {
      "fn": "MockMoolaStakingRewards.stake",
      "offset": [
        5249,
        5270
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "5434": {
      "fn": "MockMoolaStakingRewards.stake",
      "offset": [
        5249,
        5270
      ],
      "op": "DUP2",
      "path": "6"
    },
    "5435": {
      "fn": "MockMoolaStakingRewards.stake",
      "offset": [
        5249,
        5270
      ],
      "op": "DUP2",
      "path": "6"
    },
    "5436": {
      "fn": "MockMoolaStakingRewards.stake",
      "offset": [
        5249,
        5270
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "5437": {
      "fn": "MockMoolaStakingRewards.stake",
      "offset": [
        5249,
        5258
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x10"
    },
    "5439": {
      "fn": "MockMoolaStakingRewards.stake",
      "offset": [
        5249,
        5270
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "5441": {
      "fn": "MockMoolaStakingRewards.stake",
      "offset": [
        5249,
        5270
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "5442": {
      "fn": "MockMoolaStakingRewards.stake",
      "offset": [
        5249,
        5270
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "5444": {
      "fn": "MockMoolaStakingRewards.stake",
      "offset": [
        5249,
        5270
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5445": {
      "fn": "MockMoolaStakingRewards.stake",
      "offset": [
        5249,
        5270
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "5446": {
      "fn": "MockMoolaStakingRewards.stake",
      "offset": [
        5249,
        5306
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "5447": {
      "fn": "MockMoolaStakingRewards.stake",
      "offset": [
        5249,
        5306
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5448": {
      "fn": "MockMoolaStakingRewards.stake",
      "offset": [
        5249,
        5306
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "5449": {
      "fn": "MockMoolaStakingRewards.stake",
      "offset": [
        5249,
        5306
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "5450": {
      "fn": "MockMoolaStakingRewards.stake",
      "offset": [
        5316,
        5380
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 49,
      "value": "0x157F"
    },
    "5453": {
      "fn": "MockMoolaStakingRewards.stake",
      "offset": [
        5316,
        5380
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5454": {
      "fn": "MockMoolaStakingRewards.stake",
      "offset": [
        5316,
        5328
      ],
      "op": "PUSH32",
      "path": "6",
      "value": "0x0"
    },
    "5487": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5489": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5491": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5493": {
      "op": "SHL"
    },
    "5494": {
      "op": "SUB"
    },
    "5495": {
      "fn": "MockMoolaStakingRewards.stake",
      "offset": [
        5316,
        5345
      ],
      "op": "AND",
      "path": "6"
    },
    "5496": {
      "fn": "MockMoolaStakingRewards.stake",
      "offset": [
        5316,
        5345
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5497": {
      "fn": "MockMoolaStakingRewards.stake",
      "offset": [
        5366,
        5370
      ],
      "op": "ADDRESS",
      "path": "6"
    },
    "5498": {
      "fn": "MockMoolaStakingRewards.stake",
      "offset": [
        5373,
        5379
      ],
      "op": "DUP6",
      "path": "6"
    },
    "5499": {
      "fn": "MockMoolaStakingRewards.stake",
      "offset": [
        5316,
        5345
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x195E"
    },
    "5502": {
      "fn": "MockMoolaStakingRewards.stake",
      "jump": "i",
      "offset": [
        5316,
        5380
      ],
      "op": "JUMP",
      "path": "6"
    },
    "5503": {
      "fn": "MockMoolaStakingRewards.stake",
      "offset": [
        5316,
        5380
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "5504": {
      "fn": "MockMoolaStakingRewards.stake",
      "offset": [
        5390,
        5451
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 50,
      "value": "0x40"
    },
    "5506": {
      "fn": "MockMoolaStakingRewards.stake",
      "offset": [
        5390,
        5451
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "5507": {
      "op": "PUSH4",
      "value": "0x95EA7B3"
    },
    "5512": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5514": {
      "op": "SHL"
    },
    "5515": {
      "fn": "MockMoolaStakingRewards.stake",
      "offset": [
        5390,
        5451
      ],
      "op": "DUP2",
      "path": "6"
    },
    "5516": {
      "fn": "MockMoolaStakingRewards.stake",
      "offset": [
        5390,
        5451
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "5517": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5519": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5521": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5523": {
      "op": "SHL"
    },
    "5524": {
      "op": "SUB"
    },
    "5525": {
      "fn": "MockMoolaStakingRewards.stake",
      "offset": [
        5419,
        5441
      ],
      "op": "PUSH32",
      "path": "6",
      "value": "0x0"
    },
    "5558": {
      "op": "DUP2"
    },
    "5559": {
      "op": "AND"
    },
    "5560": {
      "fn": "MockMoolaStakingRewards.stake",
      "offset": [
        5390,
        5451
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "5562": {
      "fn": "MockMoolaStakingRewards.stake",
      "offset": [
        5390,
        5451
      ],
      "op": "DUP4",
      "path": "6"
    },
    "5563": {
      "fn": "MockMoolaStakingRewards.stake",
      "offset": [
        5390,
        5451
      ],
      "op": "ADD",
      "path": "6"
    },
    "5564": {
      "op": "MSTORE"
    },
    "5565": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5567": {
      "op": "DUP3"
    },
    "5568": {
      "op": "ADD"
    },
    "5569": {
      "op": "DUP5"
    },
    "5570": {
      "op": "SWAP1"
    },
    "5571": {
      "op": "MSTORE"
    },
    "5572": {
      "fn": "MockMoolaStakingRewards.stake",
      "offset": [
        5390,
        5402
      ],
      "op": "PUSH32",
      "path": "6",
      "value": "0x0"
    },
    "5605": {
      "fn": "MockMoolaStakingRewards.stake",
      "offset": [
        5390,
        5410
      ],
      "op": "AND",
      "path": "6"
    },
    "5606": {
      "fn": "MockMoolaStakingRewards.stake",
      "offset": [
        5390,
        5410
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5607": {
      "fn": "MockMoolaStakingRewards.stake",
      "offset": [
        5390,
        5410
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x95EA7B3"
    },
    "5612": {
      "fn": "MockMoolaStakingRewards.stake",
      "offset": [
        5390,
        5410
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5613": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5615": {
      "op": "ADD"
    },
    "5616": {
      "fn": "MockMoolaStakingRewards.stake",
      "offset": [
        5390,
        5451
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "5618": {
      "fn": "MockMoolaStakingRewards.stake",
      "offset": [
        5390,
        5451
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "5620": {
      "fn": "MockMoolaStakingRewards.stake",
      "offset": [
        5390,
        5451
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "5621": {
      "fn": "MockMoolaStakingRewards.stake",
      "offset": [
        5390,
        5451
      ],
      "op": "DUP1",
      "path": "6"
    },
    "5622": {
      "fn": "MockMoolaStakingRewards.stake",
      "offset": [
        5390,
        5451
      ],
      "op": "DUP4",
      "path": "6"
    },
    "5623": {
      "fn": "MockMoolaStakingRewards.stake",
      "offset": [
        5390,
        5451
      ],
      "op": "SUB",
      "path": "6"
    },
    "5624": {
      "fn": "MockMoolaStakingRewards.stake",
      "offset": [
        5390,
        5451
      ],
      "op": "DUP2",
      "path": "6"
    },
    "5625": {
      "fn": "MockMoolaStakingRewards.stake",
      "offset": [
        5390,
        5451
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "5627": {
      "fn": "MockMoolaStakingRewards.stake",
      "offset": [
        5390,
        5451
      ],
      "op": "DUP8",
      "path": "6"
    },
    "5628": {
      "fn": "MockMoolaStakingRewards.stake",
      "offset": [
        5390,
        5451
      ],
      "op": "DUP1",
      "path": "6"
    },
    "5629": {
      "fn": "MockMoolaStakingRewards.stake",
      "offset": [
        5390,
        5451
      ],
      "op": "EXTCODESIZE",
      "path": "6"
    },
    "5630": {
      "fn": "MockMoolaStakingRewards.stake",
      "offset": [
        5390,
        5451
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "5631": {
      "fn": "MockMoolaStakingRewards.stake",
      "offset": [
        5390,
        5451
      ],
      "op": "DUP1",
      "path": "6"
    },
    "5632": {
      "fn": "MockMoolaStakingRewards.stake",
      "offset": [
        5390,
        5451
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "5633": {
      "fn": "MockMoolaStakingRewards.stake",
      "offset": [
        5390,
        5451
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1609"
    },
    "5636": {
      "fn": "MockMoolaStakingRewards.stake",
      "offset": [
        5390,
        5451
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "5637": {
      "fn": "MockMoolaStakingRewards.stake",
      "offset": [
        5390,
        5451
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "5639": {
      "fn": "MockMoolaStakingRewards.stake",
      "offset": [
        5390,
        5451
      ],
      "op": "DUP1",
      "path": "6"
    },
    "5640": {
      "fn": "MockMoolaStakingRewards.stake",
      "offset": [
        5390,
        5451
      ],
      "op": "REVERT",
      "path": "6"
    },
    "5641": {
      "fn": "MockMoolaStakingRewards.stake",
      "offset": [
        5390,
        5451
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "5642": {
      "fn": "MockMoolaStakingRewards.stake",
      "offset": [
        5390,
        5451
      ],
      "op": "POP",
      "path": "6"
    },
    "5643": {
      "fn": "MockMoolaStakingRewards.stake",
      "offset": [
        5390,
        5451
      ],
      "op": "GAS",
      "path": "6"
    },
    "5644": {
      "fn": "MockMoolaStakingRewards.stake",
      "offset": [
        5390,
        5451
      ],
      "op": "CALL",
      "path": "6"
    },
    "5645": {
      "fn": "MockMoolaStakingRewards.stake",
      "offset": [
        5390,
        5451
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "5646": {
      "fn": "MockMoolaStakingRewards.stake",
      "offset": [
        5390,
        5451
      ],
      "op": "DUP1",
      "path": "6"
    },
    "5647": {
      "fn": "MockMoolaStakingRewards.stake",
      "offset": [
        5390,
        5451
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "5648": {
      "fn": "MockMoolaStakingRewards.stake",
      "offset": [
        5390,
        5451
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x161D"
    },
    "5651": {
      "fn": "MockMoolaStakingRewards.stake",
      "offset": [
        5390,
        5451
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "5652": {
      "fn": "MockMoolaStakingRewards.stake",
      "offset": [
        5390,
        5451
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "5653": {
      "fn": "MockMoolaStakingRewards.stake",
      "offset": [
        5390,
        5451
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "5655": {
      "fn": "MockMoolaStakingRewards.stake",
      "offset": [
        5390,
        5451
      ],
      "op": "DUP1",
      "path": "6"
    },
    "5656": {
      "fn": "MockMoolaStakingRewards.stake",
      "offset": [
        5390,
        5451
      ],
      "op": "RETURNDATACOPY",
      "path": "6"
    },
    "5657": {
      "fn": "MockMoolaStakingRewards.stake",
      "offset": [
        5390,
        5451
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "5658": {
      "fn": "MockMoolaStakingRewards.stake",
      "offset": [
        5390,
        5451
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "5660": {
      "fn": "MockMoolaStakingRewards.stake",
      "offset": [
        5390,
        5451
      ],
      "op": "REVERT",
      "path": "6"
    },
    "5661": {
      "fn": "MockMoolaStakingRewards.stake",
      "offset": [
        5390,
        5451
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "5662": {
      "fn": "MockMoolaStakingRewards.stake",
      "offset": [
        5390,
        5451
      ],
      "op": "POP",
      "path": "6"
    },
    "5663": {
      "fn": "MockMoolaStakingRewards.stake",
      "offset": [
        5390,
        5451
      ],
      "op": "POP",
      "path": "6"
    },
    "5664": {
      "fn": "MockMoolaStakingRewards.stake",
      "offset": [
        5390,
        5451
      ],
      "op": "POP",
      "path": "6"
    },
    "5665": {
      "fn": "MockMoolaStakingRewards.stake",
      "offset": [
        5390,
        5451
      ],
      "op": "POP",
      "path": "6"
    },
    "5666": {
      "fn": "MockMoolaStakingRewards.stake",
      "offset": [
        5390,
        5451
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "5668": {
      "fn": "MockMoolaStakingRewards.stake",
      "offset": [
        5390,
        5451
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "5669": {
      "fn": "MockMoolaStakingRewards.stake",
      "offset": [
        5390,
        5451
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "5670": {
      "fn": "MockMoolaStakingRewards.stake",
      "offset": [
        5390,
        5451
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1F"
    },
    "5672": {
      "fn": "MockMoolaStakingRewards.stake",
      "offset": [
        5390,
        5451
      ],
      "op": "NOT",
      "path": "6"
    },
    "5673": {
      "fn": "MockMoolaStakingRewards.stake",
      "offset": [
        5390,
        5451
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1F"
    },
    "5675": {
      "fn": "MockMoolaStakingRewards.stake",
      "offset": [
        5390,
        5451
      ],
      "op": "DUP3",
      "path": "6"
    },
    "5676": {
      "fn": "MockMoolaStakingRewards.stake",
      "offset": [
        5390,
        5451
      ],
      "op": "ADD",
      "path": "6"
    },
    "5677": {
      "fn": "MockMoolaStakingRewards.stake",
      "offset": [
        5390,
        5451
      ],
      "op": "AND",
      "path": "6"
    },
    "5678": {
      "fn": "MockMoolaStakingRewards.stake",
      "offset": [
        5390,
        5451
      ],
      "op": "DUP3",
      "path": "6"
    },
    "5679": {
      "fn": "MockMoolaStakingRewards.stake",
      "offset": [
        5390,
        5451
      ],
      "op": "ADD",
      "path": "6"
    },
    "5680": {
      "fn": "MockMoolaStakingRewards.stake",
      "offset": [
        5390,
        5451
      ],
      "op": "DUP1",
      "path": "6"
    },
    "5681": {
      "fn": "MockMoolaStakingRewards.stake",
      "offset": [
        5390,
        5451
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "5683": {
      "fn": "MockMoolaStakingRewards.stake",
      "offset": [
        5390,
        5451
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "5684": {
      "fn": "MockMoolaStakingRewards.stake",
      "offset": [
        5390,
        5451
      ],
      "op": "POP",
      "path": "6"
    },
    "5685": {
      "fn": "MockMoolaStakingRewards.stake",
      "offset": [
        5390,
        5451
      ],
      "op": "DUP2",
      "path": "6"
    },
    "5686": {
      "fn": "MockMoolaStakingRewards.stake",
      "offset": [
        5390,
        5451
      ],
      "op": "ADD",
      "path": "6"
    },
    "5687": {
      "fn": "MockMoolaStakingRewards.stake",
      "offset": [
        5390,
        5451
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5688": {
      "fn": "MockMoolaStakingRewards.stake",
      "offset": [
        5390,
        5451
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1641"
    },
    "5691": {
      "fn": "MockMoolaStakingRewards.stake",
      "offset": [
        5390,
        5451
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "5692": {
      "fn": "MockMoolaStakingRewards.stake",
      "offset": [
        5390,
        5451
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5693": {
      "fn": "MockMoolaStakingRewards.stake",
      "offset": [
        5390,
        5451
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1C68"
    },
    "5696": {
      "fn": "MockMoolaStakingRewards.stake",
      "jump": "i",
      "offset": [
        5390,
        5451
      ],
      "op": "JUMP",
      "path": "6"
    },
    "5697": {
      "fn": "MockMoolaStakingRewards.stake",
      "offset": [
        5390,
        5451
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "5698": {
      "op": "POP"
    },
    "5699": {
      "fn": "MockMoolaStakingRewards.stake",
      "offset": [
        5461,
        5497
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 51,
      "value": "0x40"
    },
    "5701": {
      "fn": "MockMoolaStakingRewards.stake",
      "offset": [
        5461,
        5497
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "5702": {
      "op": "PUSH4",
      "value": "0x534A7E1D"
    },
    "5707": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "5709": {
      "op": "SHL"
    },
    "5710": {
      "fn": "MockMoolaStakingRewards.stake",
      "offset": [
        5461,
        5497
      ],
      "op": "DUP2",
      "path": "6"
    },
    "5711": {
      "fn": "MockMoolaStakingRewards.stake",
      "offset": [
        5461,
        5497
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "5712": {
      "fn": "MockMoolaStakingRewards.stake",
      "offset": [
        5461,
        5497
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "5714": {
      "fn": "MockMoolaStakingRewards.stake",
      "offset": [
        5461,
        5497
      ],
      "op": "DUP2",
      "path": "6"
    },
    "5715": {
      "fn": "MockMoolaStakingRewards.stake",
      "offset": [
        5461,
        5497
      ],
      "op": "ADD",
      "path": "6"
    },
    "5716": {
      "op": "DUP4"
    },
    "5717": {
      "op": "SWAP1"
    },
    "5718": {
      "op": "MSTORE"
    },
    "5719": {
      "fn": "MockMoolaStakingRewards.stake",
      "offset": [
        5461,
        5483
      ],
      "op": "PUSH32",
      "path": "6",
      "value": "0x0"
    },
    "5752": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5754": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5756": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5758": {
      "op": "SHL"
    },
    "5759": {
      "op": "SUB"
    },
    "5760": {
      "fn": "MockMoolaStakingRewards.stake",
      "offset": [
        5461,
        5489
      ],
      "op": "AND",
      "path": "6"
    },
    "5761": {
      "fn": "MockMoolaStakingRewards.stake",
      "offset": [
        5461,
        5489
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5762": {
      "fn": "MockMoolaStakingRewards.stake",
      "offset": [
        5461,
        5489
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xA694FC3A"
    },
    "5767": {
      "fn": "MockMoolaStakingRewards.stake",
      "offset": [
        5461,
        5489
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5768": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5770": {
      "op": "ADD"
    },
    "5771": {
      "fn": "MockMoolaStakingRewards.stake",
      "offset": [
        5461,
        5497
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "5773": {
      "fn": "MockMoolaStakingRewards.stake",
      "offset": [
        5461,
        5497
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "5775": {
      "fn": "MockMoolaStakingRewards.stake",
      "offset": [
        5461,
        5497
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "5776": {
      "fn": "MockMoolaStakingRewards.stake",
      "offset": [
        5461,
        5497
      ],
      "op": "DUP1",
      "path": "6"
    },
    "5777": {
      "fn": "MockMoolaStakingRewards.stake",
      "offset": [
        5461,
        5497
      ],
      "op": "DUP4",
      "path": "6"
    },
    "5778": {
      "fn": "MockMoolaStakingRewards.stake",
      "offset": [
        5461,
        5497
      ],
      "op": "SUB",
      "path": "6"
    },
    "5779": {
      "fn": "MockMoolaStakingRewards.stake",
      "offset": [
        5461,
        5497
      ],
      "op": "DUP2",
      "path": "6"
    },
    "5780": {
      "fn": "MockMoolaStakingRewards.stake",
      "offset": [
        5461,
        5497
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "5782": {
      "fn": "MockMoolaStakingRewards.stake",
      "offset": [
        5461,
        5497
      ],
      "op": "DUP8",
      "path": "6"
    },
    "5783": {
      "fn": "MockMoolaStakingRewards.stake",
      "offset": [
        5461,
        5497
      ],
      "op": "DUP1",
      "path": "6"
    },
    "5784": {
      "fn": "MockMoolaStakingRewards.stake",
      "offset": [
        5461,
        5497
      ],
      "op": "EXTCODESIZE",
      "path": "6"
    },
    "5785": {
      "fn": "MockMoolaStakingRewards.stake",
      "offset": [
        5461,
        5497
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "5786": {
      "fn": "MockMoolaStakingRewards.stake",
      "offset": [
        5461,
        5497
      ],
      "op": "DUP1",
      "path": "6"
    },
    "5787": {
      "fn": "MockMoolaStakingRewards.stake",
      "offset": [
        5461,
        5497
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "5788": {
      "fn": "MockMoolaStakingRewards.stake",
      "offset": [
        5461,
        5497
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x16A4"
    },
    "5791": {
      "fn": "MockMoolaStakingRewards.stake",
      "offset": [
        5461,
        5497
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "5792": {
      "fn": "MockMoolaStakingRewards.stake",
      "offset": [
        5461,
        5497
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "5794": {
      "fn": "MockMoolaStakingRewards.stake",
      "offset": [
        5461,
        5497
      ],
      "op": "DUP1",
      "path": "6"
    },
    "5795": {
      "fn": "MockMoolaStakingRewards.stake",
      "offset": [
        5461,
        5497
      ],
      "op": "REVERT",
      "path": "6"
    },
    "5796": {
      "fn": "MockMoolaStakingRewards.stake",
      "offset": [
        5461,
        5497
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "5797": {
      "fn": "MockMoolaStakingRewards.stake",
      "offset": [
        5461,
        5497
      ],
      "op": "POP",
      "path": "6"
    },
    "5798": {
      "fn": "MockMoolaStakingRewards.stake",
      "offset": [
        5461,
        5497
      ],
      "op": "GAS",
      "path": "6"
    },
    "5799": {
      "fn": "MockMoolaStakingRewards.stake",
      "offset": [
        5461,
        5497
      ],
      "op": "CALL",
      "path": "6"
    },
    "5800": {
      "fn": "MockMoolaStakingRewards.stake",
      "offset": [
        5461,
        5497
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "5801": {
      "fn": "MockMoolaStakingRewards.stake",
      "offset": [
        5461,
        5497
      ],
      "op": "DUP1",
      "path": "6"
    },
    "5802": {
      "fn": "MockMoolaStakingRewards.stake",
      "offset": [
        5461,
        5497
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "5803": {
      "fn": "MockMoolaStakingRewards.stake",
      "offset": [
        5461,
        5497
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x16B8"
    },
    "5806": {
      "fn": "MockMoolaStakingRewards.stake",
      "offset": [
        5461,
        5497
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "5807": {
      "fn": "MockMoolaStakingRewards.stake",
      "offset": [
        5461,
        5497
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "5808": {
      "fn": "MockMoolaStakingRewards.stake",
      "offset": [
        5461,
        5497
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "5810": {
      "fn": "MockMoolaStakingRewards.stake",
      "offset": [
        5461,
        5497
      ],
      "op": "DUP1",
      "path": "6"
    },
    "5811": {
      "fn": "MockMoolaStakingRewards.stake",
      "offset": [
        5461,
        5497
      ],
      "op": "RETURNDATACOPY",
      "path": "6"
    },
    "5812": {
      "fn": "MockMoolaStakingRewards.stake",
      "offset": [
        5461,
        5497
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "5813": {
      "fn": "MockMoolaStakingRewards.stake",
      "offset": [
        5461,
        5497
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "5815": {
      "fn": "MockMoolaStakingRewards.stake",
      "offset": [
        5461,
        5497
      ],
      "op": "REVERT",
      "path": "6"
    },
    "5816": {
      "fn": "MockMoolaStakingRewards.stake",
      "offset": [
        5461,
        5497
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "5817": {
      "op": "POP"
    },
    "5818": {
      "op": "POP"
    },
    "5819": {
      "fn": "MockMoolaStakingRewards.stake",
      "offset": [
        5512,
        5538
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 52,
      "value": "0x40"
    },
    "5821": {
      "fn": "MockMoolaStakingRewards.stake",
      "offset": [
        5512,
        5538
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "5822": {
      "op": "DUP5"
    },
    "5823": {
      "op": "DUP2"
    },
    "5824": {
      "op": "MSTORE"
    },
    "5825": {
      "fn": "MockMoolaStakingRewards.stake",
      "offset": [
        5519,
        5529
      ],
      "op": "CALLER",
      "path": "6"
    },
    "5826": {
      "fn": "MockMoolaStakingRewards.stake",
      "offset": [
        5519,
        5529
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "5827": {
      "op": "POP"
    },
    "5828": {
      "fn": "MockMoolaStakingRewards.stake",
      "offset": [
        5512,
        5538
      ],
      "op": "PUSH32",
      "path": "6",
      "value": "0x9E71BC8EEA02A63969F509818F2DAFB9254532904319F9DBDA79B67BD34A5F3D"
    },
    "5861": {
      "fn": "MockMoolaStakingRewards.stake",
      "offset": [
        5512,
        5538
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "5862": {
      "op": "POP"
    },
    "5863": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5865": {
      "op": "ADD"
    },
    "5866": {
      "fn": "MockMoolaStakingRewards.stake",
      "offset": [
        5512,
        5538
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xC71"
    },
    "5869": {
      "op": "JUMP"
    },
    "5870": {
      "fn": "MockMoolaStakingRewards.setRewardsDuration",
      "offset": [
        8708,
        9061
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "5871": {
      "offset": [
        1238,
        1250
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x16F6"
    },
    "5874": {
      "offset": [
        1238,
        1248
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x186E"
    },
    "5877": {
      "jump": "i",
      "offset": [
        1238,
        1250
      ],
      "op": "JUMP",
      "path": "7"
    },
    "5878": {
      "fn": "MockMoolaStakingRewards.setRewardsDuration",
      "offset": [
        1238,
        1250
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "5879": {
      "fn": "MockMoolaStakingRewards.setRewardsDuration",
      "offset": [
        8830,
        8842
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 53,
      "value": "0x5"
    },
    "5881": {
      "fn": "MockMoolaStakingRewards.setRewardsDuration",
      "offset": [
        8830,
        8842
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "5882": {
      "fn": "MockMoolaStakingRewards.setRewardsDuration",
      "offset": [
        8812,
        8827
      ],
      "op": "TIMESTAMP",
      "path": "6"
    },
    "5883": {
      "branch": 85,
      "fn": "MockMoolaStakingRewards.setRewardsDuration",
      "offset": [
        8812,
        8842
      ],
      "op": "GT",
      "path": "6"
    },
    "5884": {
      "fn": "MockMoolaStakingRewards.setRewardsDuration",
      "offset": [
        8791,
        8956
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1793"
    },
    "5887": {
      "branch": 85,
      "fn": "MockMoolaStakingRewards.setRewardsDuration",
      "offset": [
        8791,
        8956
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "5888": {
      "fn": "MockMoolaStakingRewards.setRewardsDuration",
      "offset": [
        8791,
        8956
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "5890": {
      "fn": "MockMoolaStakingRewards.setRewardsDuration",
      "offset": [
        8791,
        8956
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "5891": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5895": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5897": {
      "op": "SHL"
    },
    "5898": {
      "fn": "MockMoolaStakingRewards.setRewardsDuration",
      "offset": [
        8791,
        8956
      ],
      "op": "DUP2",
      "path": "6"
    },
    "5899": {
      "fn": "MockMoolaStakingRewards.setRewardsDuration",
      "offset": [
        8791,
        8956
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "5900": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5902": {
      "fn": "MockMoolaStakingRewards.setRewardsDuration",
      "offset": [
        8791,
        8956
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "5904": {
      "fn": "MockMoolaStakingRewards.setRewardsDuration",
      "offset": [
        8791,
        8956
      ],
      "op": "DUP3",
      "path": "6"
    },
    "5905": {
      "fn": "MockMoolaStakingRewards.setRewardsDuration",
      "offset": [
        8791,
        8956
      ],
      "op": "ADD",
      "path": "6"
    },
    "5906": {
      "op": "MSTORE"
    },
    "5907": {
      "op": "PUSH1",
      "value": "0x58"
    },
    "5909": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5911": {
      "op": "DUP3"
    },
    "5912": {
      "op": "ADD"
    },
    "5913": {
      "op": "MSTORE"
    },
    "5914": {
      "op": "PUSH32",
      "value": "0x50726576696F7573207265776172647320706572696F64206D75737420626520"
    },
    "5947": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5949": {
      "op": "DUP3"
    },
    "5950": {
      "op": "ADD"
    },
    "5951": {
      "op": "MSTORE"
    },
    "5952": {
      "op": "PUSH32",
      "value": "0x636F6D706C657465206265666F7265206368616E67696E672074686520647572"
    },
    "5985": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5987": {
      "op": "DUP3"
    },
    "5988": {
      "op": "ADD"
    },
    "5989": {
      "op": "MSTORE"
    },
    "5990": {
      "op": "PUSH32",
      "value": "0x6174696F6E20666F7220746865206E657720706572696F640000000000000000"
    },
    "6023": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "6025": {
      "op": "DUP3"
    },
    "6026": {
      "op": "ADD"
    },
    "6027": {
      "op": "MSTORE"
    },
    "6028": {
      "op": "PUSH1",
      "value": "0xA4"
    },
    "6030": {
      "op": "ADD"
    },
    "6031": {
      "fn": "MockMoolaStakingRewards.setRewardsDuration",
      "offset": [
        8791,
        8956
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xA9F"
    },
    "6034": {
      "op": "JUMP"
    },
    "6035": {
      "fn": "MockMoolaStakingRewards.setRewardsDuration",
      "offset": [
        8791,
        8956
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "6036": {
      "fn": "MockMoolaStakingRewards.setRewardsDuration",
      "offset": [
        8966,
        8981
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 54,
      "value": "0x7"
    },
    "6038": {
      "fn": "MockMoolaStakingRewards.setRewardsDuration",
      "offset": [
        8966,
        9000
      ],
      "op": "DUP2",
      "path": "6"
    },
    "6039": {
      "fn": "MockMoolaStakingRewards.setRewardsDuration",
      "offset": [
        8966,
        9000
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "6040": {
      "fn": "MockMoolaStakingRewards.setRewardsDuration",
      "offset": [
        8966,
        9000
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "6041": {
      "fn": "MockMoolaStakingRewards.setRewardsDuration",
      "offset": [
        9015,
        9054
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 55,
      "value": "0x40"
    },
    "6043": {
      "fn": "MockMoolaStakingRewards.setRewardsDuration",
      "offset": [
        9015,
        9054
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "6044": {
      "op": "DUP2"
    },
    "6045": {
      "op": "DUP2"
    },
    "6046": {
      "op": "MSTORE"
    },
    "6047": {
      "fn": "MockMoolaStakingRewards.setRewardsDuration",
      "offset": [
        9015,
        9054
      ],
      "op": "PUSH32",
      "path": "6",
      "value": "0xFB46CA5A5E06D4540D6387B930A7C978BCE0DB5F449EC6B3F5D07C6E1D44F2D3"
    },
    "6080": {
      "fn": "MockMoolaStakingRewards.setRewardsDuration",
      "offset": [
        9015,
        9054
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "6081": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6083": {
      "op": "ADD"
    },
    "6084": {
      "fn": "MockMoolaStakingRewards.setRewardsDuration",
      "offset": [
        9015,
        9054
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x581"
    },
    "6087": {
      "op": "JUMP"
    },
    "6088": {
      "fn": "MockMoolaStakingRewards.rewardPerToken",
      "offset": [
        2736,
        3067
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "6089": {
      "fn": "MockMoolaStakingRewards.rewardPerToken",
      "offset": [
        2792,
        2799
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "6091": {
      "fn": "MockMoolaStakingRewards.rewardPerToken",
      "offset": [
        2815,
        2827
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xF"
    },
    "6093": {
      "fn": "MockMoolaStakingRewards.rewardPerToken",
      "offset": [
        2815,
        2827
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "6094": {
      "fn": "MockMoolaStakingRewards.rewardPerToken",
      "offset": [
        2831,
        2832
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "6096": {
      "branch": 86,
      "fn": "MockMoolaStakingRewards.rewardPerToken",
      "offset": [
        2815,
        2832
      ],
      "op": "EQ",
      "path": "6"
    },
    "6097": {
      "fn": "MockMoolaStakingRewards.rewardPerToken",
      "offset": [
        2811,
        2886
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "6098": {
      "fn": "MockMoolaStakingRewards.rewardPerToken",
      "offset": [
        2811,
        2886
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x17DC"
    },
    "6101": {
      "branch": 86,
      "fn": "MockMoolaStakingRewards.rewardPerToken",
      "offset": [
        2811,
        2886
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "6102": {
      "op": "POP"
    },
    "6103": {
      "fn": "MockMoolaStakingRewards.rewardPerToken",
      "offset": [
        2855,
        2875
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 56,
      "value": "0x9"
    },
    "6105": {
      "fn": "MockMoolaStakingRewards.rewardPerToken",
      "offset": [
        2855,
        2875
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "6106": {
      "fn": "MockMoolaStakingRewards.rewardPerToken",
      "offset": [
        2855,
        2875
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "6107": {
      "fn": "MockMoolaStakingRewards.rewardPerToken",
      "jump": "o",
      "offset": [
        2736,
        3067
      ],
      "op": "JUMP",
      "path": "6"
    },
    "6108": {
      "fn": "MockMoolaStakingRewards.rewardPerToken",
      "offset": [
        2811,
        2886
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "6109": {
      "fn": "MockMoolaStakingRewards.rewardPerToken",
      "offset": [
        2914,
        3060
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 57,
      "value": "0x5CF"
    },
    "6112": {
      "fn": "MockMoolaStakingRewards.rewardPerToken",
      "offset": [
        2956,
        3046
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x180B"
    },
    "6115": {
      "fn": "MockMoolaStakingRewards.rewardPerToken",
      "offset": [
        3033,
        3045
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xF"
    },
    "6117": {
      "fn": "MockMoolaStakingRewards.rewardPerToken",
      "offset": [
        3033,
        3045
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "6118": {
      "fn": "MockMoolaStakingRewards.rewardPerToken",
      "offset": [
        2956,
        3028
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x51D"
    },
    "6121": {
      "fn": "MockMoolaStakingRewards.rewardPerToken",
      "offset": [
        3023,
        3027
      ],
      "op": "PUSH8",
      "path": "6",
      "value": "0xDE0B6B3A7640000"
    },
    "6130": {
      "fn": "MockMoolaStakingRewards.rewardPerToken",
      "offset": [
        2956,
        3018
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1805"
    },
    "6133": {
      "fn": "MockMoolaStakingRewards.rewardPerToken",
      "offset": [
        3007,
        3017
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x6"
    },
    "6135": {
      "fn": "MockMoolaStakingRewards.rewardPerToken",
      "offset": [
        3007,
        3017
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "6136": {
      "fn": "MockMoolaStakingRewards.rewardPerToken",
      "offset": [
        2956,
        3002
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1805"
    },
    "6139": {
      "fn": "MockMoolaStakingRewards.rewardPerToken",
      "offset": [
        2987,
        3001
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x8"
    },
    "6141": {
      "fn": "MockMoolaStakingRewards.rewardPerToken",
      "offset": [
        2987,
        3001
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "6142": {
      "fn": "MockMoolaStakingRewards.rewardPerToken",
      "offset": [
        2956,
        2982
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x4F8"
    },
    "6145": {
      "fn": "MockMoolaStakingRewards.rewardPerToken",
      "offset": [
        2956,
        2980
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x133C"
    },
    "6148": {
      "fn": "MockMoolaStakingRewards.rewardPerToken",
      "jump": "i",
      "offset": [
        2956,
        2982
      ],
      "op": "JUMP",
      "path": "6"
    },
    "6149": {
      "fn": "MockMoolaStakingRewards.rewardPerToken",
      "offset": [
        2956,
        3002
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "6150": {
      "fn": "MockMoolaStakingRewards.rewardPerToken",
      "offset": [
        2956,
        3006
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "6151": {
      "fn": "MockMoolaStakingRewards.rewardPerToken",
      "offset": [
        2956,
        3006
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x184A"
    },
    "6154": {
      "fn": "MockMoolaStakingRewards.rewardPerToken",
      "jump": "i",
      "offset": [
        2956,
        3018
      ],
      "op": "JUMP",
      "path": "6"
    },
    "6155": {
      "fn": "MockMoolaStakingRewards.rewardPerToken",
      "offset": [
        2956,
        3046
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "6156": {
      "fn": "MockMoolaStakingRewards.rewardPerToken",
      "offset": [
        2914,
        2934
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x9"
    },
    "6158": {
      "fn": "MockMoolaStakingRewards.rewardPerToken",
      "offset": [
        2914,
        2934
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "6159": {
      "fn": "MockMoolaStakingRewards.rewardPerToken",
      "offset": [
        2914,
        2934
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "6160": {
      "fn": "MockMoolaStakingRewards.rewardPerToken",
      "offset": [
        2914,
        2938
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1862"
    },
    "6163": {
      "fn": "MockMoolaStakingRewards.rewardPerToken",
      "jump": "i",
      "offset": [
        2914,
        3060
      ],
      "op": "JUMP",
      "path": "6"
    },
    "6164": {
      "fn": "MockMoolaStakingRewards.exit",
      "offset": [
        6811,
        6914
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "6165": {
      "fn": "MockMoolaStakingRewards.exit",
      "offset": [
        6874,
        6884
      ],
      "op": "CALLER",
      "path": "6",
      "statement": 58
    },
    "6166": {
      "fn": "MockMoolaStakingRewards.exit",
      "offset": [
        6864,
        6885
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "6168": {
      "fn": "MockMoolaStakingRewards.exit",
      "offset": [
        6864,
        6885
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "6169": {
      "fn": "MockMoolaStakingRewards.exit",
      "offset": [
        6864,
        6885
      ],
      "op": "DUP2",
      "path": "6"
    },
    "6170": {
      "fn": "MockMoolaStakingRewards.exit",
      "offset": [
        6864,
        6885
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "6171": {
      "fn": "MockMoolaStakingRewards.exit",
      "offset": [
        6864,
        6873
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x10"
    },
    "6173": {
      "fn": "MockMoolaStakingRewards.exit",
      "offset": [
        6864,
        6885
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "6175": {
      "fn": "MockMoolaStakingRewards.exit",
      "offset": [
        6864,
        6885
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "6176": {
      "fn": "MockMoolaStakingRewards.exit",
      "offset": [
        6864,
        6885
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "6178": {
      "fn": "MockMoolaStakingRewards.exit",
      "offset": [
        6864,
        6885
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "6179": {
      "fn": "MockMoolaStakingRewards.exit",
      "offset": [
        6864,
        6885
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "6180": {
      "fn": "MockMoolaStakingRewards.exit",
      "offset": [
        6864,
        6885
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "6181": {
      "fn": "MockMoolaStakingRewards.exit",
      "offset": [
        6855,
        6886
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x182D"
    },
    "6184": {
      "fn": "MockMoolaStakingRewards.exit",
      "offset": [
        6855,
        6886
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "6185": {
      "fn": "MockMoolaStakingRewards.exit",
      "offset": [
        6855,
        6863
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xA7C"
    },
    "6188": {
      "fn": "MockMoolaStakingRewards.exit",
      "jump": "i",
      "offset": [
        6855,
        6886
      ],
      "op": "JUMP",
      "path": "6"
    },
    "6189": {
      "fn": "MockMoolaStakingRewards.exit",
      "offset": [
        6855,
        6886
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "6190": {
      "fn": "MockMoolaStakingRewards.exit",
      "offset": [
        6896,
        6907
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 59,
      "value": "0x1835"
    },
    "6193": {
      "fn": "MockMoolaStakingRewards.exit",
      "offset": [
        6896,
        6905
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xF31"
    },
    "6196": {
      "fn": "MockMoolaStakingRewards.exit",
      "jump": "i",
      "offset": [
        6896,
        6907
      ],
      "op": "JUMP",
      "path": "6"
    },
    "6197": {
      "fn": "MockMoolaStakingRewards.exit",
      "offset": [
        6896,
        6907
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "6198": {
      "fn": "MockMoolaStakingRewards.exit",
      "jump": "o",
      "offset": [
        6811,
        6914
      ],
      "op": "JUMP",
      "path": "6"
    },
    "6199": {
      "fn": "SafeMath.sub",
      "offset": [
        3039,
        3135
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "6200": {
      "fn": "SafeMath.sub",
      "offset": [
        3097,
        3104
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "6202": {
      "fn": "SafeMath.sub",
      "offset": [
        3123,
        3128
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 60,
      "value": "0x1843"
    },
    "6205": {
      "fn": "SafeMath.sub",
      "offset": [
        3127,
        3128
      ],
      "op": "DUP3",
      "path": "5"
    },
    "6206": {
      "fn": "SafeMath.sub",
      "offset": [
        3123,
        3124
      ],
      "op": "DUP5",
      "path": "5"
    },
    "6207": {
      "fn": "SafeMath.sub",
      "offset": [
        3123,
        3128
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1DDF"
    },
    "6210": {
      "fn": "SafeMath.sub",
      "jump": "i",
      "offset": [
        3123,
        3128
      ],
      "op": "JUMP",
      "path": "5"
    },
    "6211": {
      "fn": "SafeMath.sub",
      "offset": [
        3123,
        3128
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "6212": {
      "fn": "SafeMath.sub",
      "offset": [
        3116,
        3128
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "6213": {
      "fn": "SafeMath.sub",
      "offset": [
        3039,
        3135
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "6214": {
      "op": "POP"
    },
    "6215": {
      "op": "POP"
    },
    "6216": {
      "op": "POP"
    },
    "6217": {
      "fn": "SafeMath.sub",
      "jump": "o",
      "offset": [
        3039,
        3135
      ],
      "op": "JUMP",
      "path": "5"
    },
    "6218": {
      "fn": "SafeMath.mul",
      "offset": [
        3382,
        3478
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "6219": {
      "fn": "SafeMath.mul",
      "offset": [
        3440,
        3447
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "6221": {
      "fn": "SafeMath.mul",
      "offset": [
        3466,
        3471
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 61,
      "value": "0x1843"
    },
    "6224": {
      "fn": "SafeMath.mul",
      "offset": [
        3470,
        3471
      ],
      "op": "DUP3",
      "path": "5"
    },
    "6225": {
      "fn": "SafeMath.mul",
      "offset": [
        3466,
        3467
      ],
      "op": "DUP5",
      "path": "5"
    },
    "6226": {
      "fn": "SafeMath.mul",
      "offset": [
        3466,
        3471
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1DC0"
    },
    "6229": {
      "fn": "SafeMath.mul",
      "jump": "i",
      "offset": [
        3466,
        3471
      ],
      "op": "JUMP",
      "path": "5"
    },
    "6230": {
      "fn": "SafeMath.div",
      "offset": [
        3767,
        3863
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "6231": {
      "fn": "SafeMath.div",
      "offset": [
        3825,
        3832
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "6233": {
      "fn": "SafeMath.div",
      "offset": [
        3851,
        3856
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 62,
      "value": "0x1843"
    },
    "6236": {
      "fn": "SafeMath.div",
      "offset": [
        3855,
        3856
      ],
      "op": "DUP3",
      "path": "5"
    },
    "6237": {
      "fn": "SafeMath.div",
      "offset": [
        3851,
        3852
      ],
      "op": "DUP5",
      "path": "5"
    },
    "6238": {
      "fn": "SafeMath.div",
      "offset": [
        3851,
        3856
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1D9E"
    },
    "6241": {
      "fn": "SafeMath.div",
      "jump": "i",
      "offset": [
        3851,
        3856
      ],
      "op": "JUMP",
      "path": "5"
    },
    "6242": {
      "fn": "SafeMath.add",
      "offset": [
        2672,
        2768
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "6243": {
      "fn": "SafeMath.add",
      "offset": [
        2730,
        2737
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "6245": {
      "fn": "SafeMath.add",
      "offset": [
        2756,
        2761
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 63,
      "value": "0x1843"
    },
    "6248": {
      "fn": "SafeMath.add",
      "offset": [
        2760,
        2761
      ],
      "op": "DUP3",
      "path": "5"
    },
    "6249": {
      "fn": "SafeMath.add",
      "offset": [
        2756,
        2757
      ],
      "op": "DUP5",
      "path": "5"
    },
    "6250": {
      "fn": "SafeMath.add",
      "offset": [
        2756,
        2761
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1D86"
    },
    "6253": {
      "fn": "SafeMath.add",
      "jump": "i",
      "offset": [
        2756,
        2761
      ],
      "op": "JUMP",
      "path": "5"
    },
    "6254": {
      "fn": "Owned._onlyOwner",
      "offset": [
        1274,
        1405
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "6255": {
      "fn": "Owned._onlyOwner",
      "offset": [
        1341,
        1346
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 64,
      "value": "0x0"
    },
    "6257": {
      "fn": "Owned._onlyOwner",
      "offset": [
        1341,
        1346
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "6258": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6260": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6262": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6264": {
      "op": "SHL"
    },
    "6265": {
      "op": "SUB"
    },
    "6266": {
      "fn": "Owned._onlyOwner",
      "offset": [
        1341,
        1346
      ],
      "op": "AND",
      "path": "7"
    },
    "6267": {
      "fn": "Owned._onlyOwner",
      "offset": [
        1327,
        1337
      ],
      "op": "CALLER",
      "path": "7"
    },
    "6268": {
      "branch": 92,
      "fn": "Owned._onlyOwner",
      "offset": [
        1327,
        1346
      ],
      "op": "EQ",
      "path": "7"
    },
    "6269": {
      "fn": "Owned._onlyOwner",
      "offset": [
        1319,
        1398
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1835"
    },
    "6272": {
      "branch": 92,
      "fn": "Owned._onlyOwner",
      "offset": [
        1319,
        1398
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "6273": {
      "fn": "Owned._onlyOwner",
      "offset": [
        1319,
        1398
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "6275": {
      "fn": "Owned._onlyOwner",
      "offset": [
        1319,
        1398
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "6276": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6280": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6282": {
      "op": "SHL"
    },
    "6283": {
      "fn": "Owned._onlyOwner",
      "offset": [
        1319,
        1398
      ],
      "op": "DUP2",
      "path": "7"
    },
    "6284": {
      "fn": "Owned._onlyOwner",
      "offset": [
        1319,
        1398
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "6285": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6287": {
      "fn": "Owned._onlyOwner",
      "offset": [
        1319,
        1398
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "6289": {
      "fn": "Owned._onlyOwner",
      "offset": [
        1319,
        1398
      ],
      "op": "DUP3",
      "path": "7"
    },
    "6290": {
      "fn": "Owned._onlyOwner",
      "offset": [
        1319,
        1398
      ],
      "op": "ADD",
      "path": "7"
    },
    "6291": {
      "op": "MSTORE"
    },
    "6292": {
      "op": "PUSH1",
      "value": "0x2F"
    },
    "6294": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6296": {
      "op": "DUP3"
    },
    "6297": {
      "op": "ADD"
    },
    "6298": {
      "op": "MSTORE"
    },
    "6299": {
      "op": "PUSH32",
      "value": "0x4F6E6C792074686520636F6E7472616374206F776E6572206D61792070657266"
    },
    "6332": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6334": {
      "op": "DUP3"
    },
    "6335": {
      "op": "ADD"
    },
    "6336": {
      "op": "MSTORE"
    },
    "6337": {
      "op": "PUSH15",
      "value": "0x37B936903A3434B99030B1BA34B7B7"
    },
    "6353": {
      "op": "PUSH1",
      "value": "0x89"
    },
    "6355": {
      "op": "SHL"
    },
    "6356": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6358": {
      "op": "DUP3"
    },
    "6359": {
      "op": "ADD"
    },
    "6360": {
      "op": "MSTORE"
    },
    "6361": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "6363": {
      "op": "ADD"
    },
    "6364": {
      "fn": "Owned._onlyOwner",
      "offset": [
        1319,
        1398
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xA9F"
    },
    "6367": {
      "op": "JUMP"
    },
    "6368": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        634,
        809
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6369": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        743,
        801
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 65,
      "value": "0x40"
    },
    "6371": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        743,
        801
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6372": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6374": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6376": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6378": {
      "op": "SHL"
    },
    "6379": {
      "op": "SUB"
    },
    "6380": {
      "op": "DUP4"
    },
    "6381": {
      "op": "AND"
    },
    "6382": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        743,
        801
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x24"
    },
    "6384": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        743,
        801
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6385": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        743,
        801
      ],
      "op": "ADD",
      "path": "2"
    },
    "6386": {
      "op": "MSTORE"
    },
    "6387": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6389": {
      "op": "DUP2"
    },
    "6390": {
      "op": "ADD"
    },
    "6391": {
      "op": "DUP3"
    },
    "6392": {
      "op": "SWAP1"
    },
    "6393": {
      "op": "MSTORE"
    },
    "6394": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        716,
        802
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1943"
    },
    "6397": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        716,
        802
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6398": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        736,
        741
      ],
      "op": "DUP5",
      "path": "2"
    },
    "6399": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        736,
        741
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6400": {
      "op": "PUSH4",
      "value": "0xA9059CBB"
    },
    "6405": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6407": {
      "op": "SHL"
    },
    "6408": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        766,
        789
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6409": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6411": {
      "op": "ADD"
    },
    "6412": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        743,
        801
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6413": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        743,
        801
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6415": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        743,
        801
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6416": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        743,
        801
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6417": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "6419": {
      "op": "NOT"
    },
    "6420": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        743,
        801
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6421": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        743,
        801
      ],
      "op": "DUP5",
      "path": "2"
    },
    "6422": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        743,
        801
      ],
      "op": "SUB",
      "path": "2"
    },
    "6423": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        743,
        801
      ],
      "op": "ADD",
      "path": "2"
    },
    "6424": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        743,
        801
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6425": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        743,
        801
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6426": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        743,
        801
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6427": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        743,
        801
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6428": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        743,
        801
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6429": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        743,
        801
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6431": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        743,
        801
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6432": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        743,
        801
      ],
      "op": "ADD",
      "path": "2"
    },
    "6433": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        743,
        801
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6434": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        743,
        801
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6435": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6437": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6439": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6441": {
      "op": "SHL"
    },
    "6442": {
      "op": "SUB"
    },
    "6443": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        743,
        801
      ],
      "op": "AND",
      "path": "2"
    },
    "6444": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6446": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6448": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6450": {
      "op": "SHL"
    },
    "6451": {
      "op": "SUB"
    },
    "6452": {
      "op": "NOT"
    },
    "6453": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        743,
        801
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6454": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        743,
        801
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "6455": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        743,
        801
      ],
      "op": "AND",
      "path": "2"
    },
    "6456": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        743,
        801
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "6457": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        743,
        801
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6458": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        743,
        801
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "6459": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        743,
        801
      ],
      "op": "OR",
      "path": "2"
    },
    "6460": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        743,
        801
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6461": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        743,
        801
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6462": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        743,
        801
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6463": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        716,
        735
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x199C"
    },
    "6466": {
      "fn": "SafeERC20.safeTransfer",
      "jump": "i",
      "offset": [
        716,
        802
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6467": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        716,
        802
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6468": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        634,
        809
      ],
      "op": "POP",
      "path": "2"
    },
    "6469": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        634,
        809
      ],
      "op": "POP",
      "path": "2"
    },
    "6470": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        634,
        809
      ],
      "op": "POP",
      "path": "2"
    },
    "6471": {
      "fn": "SafeERC20.safeTransfer",
      "jump": "o",
      "offset": [
        634,
        809
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6472": {
      "fn": "Math.min",
      "offset": [
        391,
        495
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "6473": {
      "fn": "Math.min",
      "offset": [
        449,
        456
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "6475": {
      "fn": "Math.min",
      "offset": [
        479,
        480
      ],
      "op": "DUP2",
      "path": "4",
      "statement": 66
    },
    "6476": {
      "fn": "Math.min",
      "offset": [
        475,
        476
      ],
      "op": "DUP4",
      "path": "4"
    },
    "6477": {
      "branch": 90,
      "fn": "Math.min",
      "offset": [
        475,
        480
      ],
      "op": "LT",
      "path": "4"
    },
    "6478": {
      "fn": "Math.min",
      "offset": [
        475,
        488
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1957"
    },
    "6481": {
      "branch": 90,
      "fn": "Math.min",
      "offset": [
        475,
        488
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "6482": {
      "fn": "Math.min",
      "offset": [
        487,
        488
      ],
      "op": "DUP2",
      "path": "4"
    },
    "6483": {
      "fn": "Math.min",
      "offset": [
        475,
        488
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1843"
    },
    "6486": {
      "fn": "Math.min",
      "offset": [
        475,
        488
      ],
      "op": "JUMP",
      "path": "4"
    },
    "6487": {
      "fn": "Math.min",
      "offset": [
        475,
        488
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "6488": {
      "op": "POP"
    },
    "6489": {
      "fn": "Math.min",
      "offset": [
        483,
        484
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "6490": {
      "fn": "Math.min",
      "offset": [
        483,
        484
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "6491": {
      "fn": "Math.min",
      "offset": [
        391,
        495
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "6492": {
      "op": "POP"
    },
    "6493": {
      "fn": "Math.min",
      "jump": "o",
      "offset": [
        391,
        495
      ],
      "op": "JUMP",
      "path": "4"
    },
    "6494": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        815,
        1018
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6495": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        942,
        1010
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 67,
      "value": "0x40"
    },
    "6497": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        942,
        1010
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6498": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6500": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6502": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6504": {
      "op": "SHL"
    },
    "6505": {
      "op": "SUB"
    },
    "6506": {
      "op": "DUP1"
    },
    "6507": {
      "op": "DUP6"
    },
    "6508": {
      "op": "AND"
    },
    "6509": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        942,
        1010
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x24"
    },
    "6511": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        942,
        1010
      ],
      "op": "DUP4",
      "path": "2"
    },
    "6512": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        942,
        1010
      ],
      "op": "ADD",
      "path": "2"
    },
    "6513": {
      "op": "MSTORE"
    },
    "6514": {
      "op": "DUP4"
    },
    "6515": {
      "op": "AND"
    },
    "6516": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6518": {
      "op": "DUP3"
    },
    "6519": {
      "op": "ADD"
    },
    "6520": {
      "op": "MSTORE"
    },
    "6521": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6523": {
      "op": "DUP2"
    },
    "6524": {
      "op": "ADD"
    },
    "6525": {
      "op": "DUP3"
    },
    "6526": {
      "op": "SWAP1"
    },
    "6527": {
      "op": "MSTORE"
    },
    "6528": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        915,
        1011
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1996"
    },
    "6531": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        915,
        1011
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6532": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        935,
        940
      ],
      "op": "DUP6",
      "path": "2"
    },
    "6533": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        935,
        940
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6534": {
      "op": "PUSH4",
      "value": "0x23B872DD"
    },
    "6539": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6541": {
      "op": "SHL"
    },
    "6542": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        965,
        992
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6543": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "6545": {
      "op": "ADD"
    },
    "6546": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        942,
        1010
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x190C"
    },
    "6549": {
      "op": "JUMP"
    },
    "6550": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        915,
        1011
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6551": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        815,
        1018
      ],
      "op": "POP",
      "path": "2"
    },
    "6552": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        815,
        1018
      ],
      "op": "POP",
      "path": "2"
    },
    "6553": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        815,
        1018
      ],
      "op": "POP",
      "path": "2"
    },
    "6554": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        815,
        1018
      ],
      "op": "POP",
      "path": "2"
    },
    "6555": {
      "fn": "SafeERC20.safeTransferFrom",
      "jump": "o",
      "offset": [
        815,
        1018
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6556": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3022,
        3773
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6557": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3441,
        3464
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6559": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3467,
        3536
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x19F1"
    },
    "6562": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3495,
        3499
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6563": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3467,
        3536
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6565": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3467,
        3536
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6566": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3467,
        3536
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6567": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3467,
        3536
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6569": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3467,
        3536
      ],
      "op": "ADD",
      "path": "2"
    },
    "6570": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3467,
        3536
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6572": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3467,
        3536
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6573": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3467,
        3536
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6574": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3467,
        3536
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6576": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3467,
        3536
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6577": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3467,
        3536
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6578": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3467,
        3536
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6580": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3467,
        3536
      ],
      "op": "ADD",
      "path": "2"
    },
    "6581": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3467,
        3536
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564"
    },
    "6614": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3467,
        3536
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6615": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3467,
        3536
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6616": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3467,
        3536
      ],
      "op": "POP",
      "path": "2"
    },
    "6617": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3475,
        3480
      ],
      "op": "DUP6",
      "path": "2"
    },
    "6618": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6620": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6622": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6624": {
      "op": "SHL"
    },
    "6625": {
      "op": "SUB"
    },
    "6626": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3467,
        3494
      ],
      "op": "AND",
      "path": "2"
    },
    "6627": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3467,
        3494
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1A6E"
    },
    "6630": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3467,
        3494
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6631": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3467,
        3536
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "6632": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3467,
        3536
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6633": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3467,
        3536
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6634": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3467,
        3536
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xFFFFFFFF"
    },
    "6639": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3467,
        3536
      ],
      "op": "AND",
      "path": "2"
    },
    "6640": {
      "fn": "SafeERC20._callOptionalReturn",
      "jump": "i",
      "offset": [
        3467,
        3536
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6641": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3467,
        3536
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6642": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3550,
        3567
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6643": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3550,
        3567
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6644": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3441,
        3536
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6645": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3441,
        3536
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6646": {
      "op": "POP"
    },
    "6647": {
      "branch": 94,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3550,
        3571
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "6648": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3546,
        3767
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1943"
    },
    "6651": {
      "branch": 94,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3546,
        3767
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6652": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3690,
        3700
      ],
      "op": "DUP1",
      "path": "2",
      "statement": 68
    },
    "6653": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3679,
        3709
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6654": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3679,
        3709
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6656": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3679,
        3709
      ],
      "op": "ADD",
      "path": "2"
    },
    "6657": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3679,
        3709
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6658": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3679,
        3709
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6659": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3679,
        3709
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6660": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3679,
        3709
      ],
      "op": "ADD",
      "path": "2"
    },
    "6661": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3679,
        3709
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6662": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3679,
        3709
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1A0F"
    },
    "6665": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3679,
        3709
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6666": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3679,
        3709
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6667": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3679,
        3709
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1C68"
    },
    "6670": {
      "fn": "SafeERC20._callOptionalReturn",
      "jump": "i",
      "offset": [
        3679,
        3709
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6671": {
      "branch": 95,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3679,
        3709
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6672": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3671,
        3756
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1943"
    },
    "6675": {
      "branch": 95,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3671,
        3756
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6676": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3671,
        3756
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6678": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3671,
        3756
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6679": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6683": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6685": {
      "op": "SHL"
    },
    "6686": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3671,
        3756
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6687": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3671,
        3756
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6688": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6690": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3671,
        3756
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "6692": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3671,
        3756
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6693": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3671,
        3756
      ],
      "op": "ADD",
      "path": "2"
    },
    "6694": {
      "op": "MSTORE"
    },
    "6695": {
      "op": "PUSH1",
      "value": "0x2A"
    },
    "6697": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6699": {
      "op": "DUP3"
    },
    "6700": {
      "op": "ADD"
    },
    "6701": {
      "op": "MSTORE"
    },
    "6702": {
      "op": "PUSH32",
      "value": "0x5361666545524332303A204552433230206F7065726174696F6E20646964206E"
    },
    "6735": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6737": {
      "op": "DUP3"
    },
    "6738": {
      "op": "ADD"
    },
    "6739": {
      "op": "MSTORE"
    },
    "6740": {
      "op": "PUSH10",
      "value": "0x1BDD081CDD58D8D95959"
    },
    "6751": {
      "op": "PUSH1",
      "value": "0xB2"
    },
    "6753": {
      "op": "SHL"
    },
    "6754": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6756": {
      "op": "DUP3"
    },
    "6757": {
      "op": "ADD"
    },
    "6758": {
      "op": "MSTORE"
    },
    "6759": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "6761": {
      "op": "ADD"
    },
    "6762": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3671,
        3756
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xA9F"
    },
    "6765": {
      "op": "JUMP"
    },
    "6766": {
      "fn": "Address.functionCall",
      "offset": [
        3573,
        3766
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6767": {
      "fn": "Address.functionCall",
      "offset": [
        3676,
        3688
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x60"
    },
    "6769": {
      "fn": "Address.functionCall",
      "offset": [
        3707,
        3759
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 69,
      "value": "0x1A7D"
    },
    "6772": {
      "fn": "Address.functionCall",
      "offset": [
        3729,
        3735
      ],
      "op": "DUP5",
      "path": "3"
    },
    "6773": {
      "fn": "Address.functionCall",
      "offset": [
        3737,
        3741
      ],
      "op": "DUP5",
      "path": "3"
    },
    "6774": {
      "fn": "Address.functionCall",
      "offset": [
        3743,
        3744
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "6776": {
      "fn": "Address.functionCall",
      "offset": [
        3746,
        3758
      ],
      "op": "DUP6",
      "path": "3"
    },
    "6777": {
      "fn": "Address.functionCall",
      "offset": [
        3707,
        3728
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1A85"
    },
    "6780": {
      "fn": "Address.functionCall",
      "jump": "i",
      "offset": [
        3707,
        3759
      ],
      "op": "JUMP",
      "path": "3"
    },
    "6781": {
      "fn": "Address.functionCall",
      "offset": [
        3707,
        3759
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6782": {
      "fn": "Address.functionCall",
      "offset": [
        3700,
        3759
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "6783": {
      "fn": "Address.functionCall",
      "offset": [
        3573,
        3766
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "6784": {
      "op": "POP"
    },
    "6785": {
      "op": "POP"
    },
    "6786": {
      "op": "POP"
    },
    "6787": {
      "op": "POP"
    },
    "6788": {
      "fn": "Address.functionCall",
      "jump": "o",
      "offset": [
        3573,
        3766
      ],
      "op": "JUMP",
      "path": "3"
    },
    "6789": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4600,
        5123
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6790": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4727,
        4739
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x60"
    },
    "6792": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4784,
        4789
      ],
      "op": "DUP3",
      "path": "3",
      "statement": 70
    },
    "6793": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4780
      ],
      "op": "SELFBALANCE",
      "path": "3"
    },
    "6794": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4789
      ],
      "op": "LT",
      "path": "3"
    },
    "6795": {
      "branch": 87,
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4789
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "6796": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4751,
        4832
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1AE6"
    },
    "6799": {
      "branch": 87,
      "fn": "Address.functionCallWithValue",
      "offset": [
        4751,
        4832
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "6800": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4751,
        4832
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "6802": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4751,
        4832
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "6803": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6807": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6809": {
      "op": "SHL"
    },
    "6810": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4751,
        4832
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6811": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4751,
        4832
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6812": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6814": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4751,
        4832
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "6816": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4751,
        4832
      ],
      "op": "DUP3",
      "path": "3"
    },
    "6817": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4751,
        4832
      ],
      "op": "ADD",
      "path": "3"
    },
    "6818": {
      "op": "MSTORE"
    },
    "6819": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "6821": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6823": {
      "op": "DUP3"
    },
    "6824": {
      "op": "ADD"
    },
    "6825": {
      "op": "MSTORE"
    },
    "6826": {
      "op": "PUSH32",
      "value": "0x416464726573733A20696E73756666696369656E742062616C616E636520666F"
    },
    "6859": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6861": {
      "op": "DUP3"
    },
    "6862": {
      "op": "ADD"
    },
    "6863": {
      "op": "MSTORE"
    },
    "6864": {
      "op": "PUSH6",
      "value": "0x1C8818D85B1B"
    },
    "6871": {
      "op": "PUSH1",
      "value": "0xD2"
    },
    "6873": {
      "op": "SHL"
    },
    "6874": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6876": {
      "op": "DUP3"
    },
    "6877": {
      "op": "ADD"
    },
    "6878": {
      "op": "MSTORE"
    },
    "6879": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "6881": {
      "op": "ADD"
    },
    "6882": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4751,
        4832
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xA9F"
    },
    "6885": {
      "op": "JUMP"
    },
    "6886": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4751,
        4832
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6887": {
      "fn": "Address.isContract",
      "offset": [
        1078,
        1098
      ],
      "op": "DUP5",
      "path": "3"
    },
    "6888": {
      "fn": "Address.isContract",
      "offset": [
        1078,
        1098
      ],
      "op": "EXTCODESIZE",
      "path": "3"
    },
    "6889": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4842,
        4902
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 71,
      "value": "0x1B34"
    },
    "6892": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4842,
        4902
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "6893": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4842,
        4902
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "6895": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4842,
        4902
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "6896": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6900": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6902": {
      "op": "SHL"
    },
    "6903": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4842,
        4902
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6904": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4842,
        4902
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6905": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6907": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4842,
        4902
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "6909": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4842,
        4902
      ],
      "op": "DUP3",
      "path": "3"
    },
    "6910": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4842,
        4902
      ],
      "op": "ADD",
      "path": "3"
    },
    "6911": {
      "op": "MSTORE"
    },
    "6912": {
      "op": "PUSH1",
      "value": "0x1D"
    },
    "6914": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6916": {
      "op": "DUP3"
    },
    "6917": {
      "op": "ADD"
    },
    "6918": {
      "op": "MSTORE"
    },
    "6919": {
      "op": "PUSH32",
      "value": "0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000"
    },
    "6952": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6954": {
      "op": "DUP3"
    },
    "6955": {
      "op": "ADD"
    },
    "6956": {
      "op": "MSTORE"
    },
    "6957": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6959": {
      "op": "ADD"
    },
    "6960": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4842,
        4902
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xA9F"
    },
    "6963": {
      "op": "JUMP"
    },
    "6964": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4842,
        4902
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6965": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4973,
        4985
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "6967": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4987,
        5010
      ],
      "op": "DUP1",
      "path": "3"
    },
    "6968": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5020
      ],
      "op": "DUP7",
      "path": "3"
    },
    "6969": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6971": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6973": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6975": {
      "op": "SHL"
    },
    "6976": {
      "op": "SUB"
    },
    "6977": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5025
      ],
      "op": "AND",
      "path": "3"
    },
    "6978": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5034,
        5039
      ],
      "op": "DUP6",
      "path": "3"
    },
    "6979": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5042,
        5046
      ],
      "op": "DUP8",
      "path": "3"
    },
    "6980": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "6982": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "6983": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1B50"
    },
    "6986": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "6987": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6988": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1CBC"
    },
    "6991": {
      "fn": "Address.functionCallWithValue",
      "jump": "i",
      "offset": [
        5014,
        5047
      ],
      "op": "JUMP",
      "path": "3"
    },
    "6992": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6993": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "6995": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "6997": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "6998": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "DUP1",
      "path": "3"
    },
    "6999": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "DUP4",
      "path": "3"
    },
    "7000": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "SUB",
      "path": "3"
    },
    "7001": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "DUP2",
      "path": "3"
    },
    "7002": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "DUP6",
      "path": "3"
    },
    "7003": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "DUP8",
      "path": "3"
    },
    "7004": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "GAS",
      "path": "3"
    },
    "7005": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "CALL",
      "path": "3"
    },
    "7006": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "7007": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "POP",
      "path": "3"
    },
    "7008": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "POP",
      "path": "3"
    },
    "7009": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "POP",
      "path": "3"
    },
    "7010": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "7011": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "DUP1",
      "path": "3"
    },
    "7012": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "7014": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "DUP2",
      "path": "3"
    },
    "7015": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "EQ",
      "path": "3"
    },
    "7016": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1B8D"
    },
    "7019": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "7020": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "7022": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "7023": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "7024": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "POP",
      "path": "3"
    },
    "7025": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "7027": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "NOT",
      "path": "3"
    },
    "7028": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x3F"
    },
    "7030": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "7031": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "ADD",
      "path": "3"
    },
    "7032": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "AND",
      "path": "3"
    },
    "7033": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "DUP3",
      "path": "3"
    },
    "7034": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "ADD",
      "path": "3"
    },
    "7035": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "7037": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "7038": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "7039": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "DUP3",
      "path": "3"
    },
    "7040": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "7041": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "7042": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "7044": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "7046": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "DUP5",
      "path": "3"
    },
    "7047": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "ADD",
      "path": "3"
    },
    "7048": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "RETURNDATACOPY",
      "path": "3"
    },
    "7049": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1B92"
    },
    "7052": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "JUMP",
      "path": "3"
    },
    "7053": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "7054": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x60"
    },
    "7056": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "7057": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "POP",
      "path": "3"
    },
    "7058": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "7059": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "POP",
      "path": "3"
    },
    "7060": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4972,
        5047
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "7061": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4972,
        5047
      ],
      "op": "POP",
      "path": "3"
    },
    "7062": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4972,
        5047
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "7063": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4972,
        5047
      ],
      "op": "POP",
      "path": "3"
    },
    "7064": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5064,
        5116
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 72,
      "value": "0x1BA2"
    },
    "7067": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5082,
        5089
      ],
      "op": "DUP3",
      "path": "3"
    },
    "7068": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5091,
        5101
      ],
      "op": "DUP3",
      "path": "3"
    },
    "7069": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5103,
        5115
      ],
      "op": "DUP7",
      "path": "3"
    },
    "7070": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5064,
        5081
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1BAD"
    },
    "7073": {
      "fn": "Address.functionCallWithValue",
      "jump": "i",
      "offset": [
        5064,
        5116
      ],
      "op": "JUMP",
      "path": "3"
    },
    "7074": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5064,
        5116
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "7075": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5057,
        5116
      ],
      "op": "SWAP8",
      "path": "3"
    },
    "7076": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4600,
        5123
      ],
      "op": "SWAP7",
      "path": "3"
    },
    "7077": {
      "op": "POP"
    },
    "7078": {
      "op": "POP"
    },
    "7079": {
      "op": "POP"
    },
    "7080": {
      "op": "POP"
    },
    "7081": {
      "op": "POP"
    },
    "7082": {
      "op": "POP"
    },
    "7083": {
      "op": "POP"
    },
    "7084": {
      "fn": "Address.functionCallWithValue",
      "jump": "o",
      "offset": [
        4600,
        5123
      ],
      "op": "JUMP",
      "path": "3"
    },
    "7085": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7083,
        7808
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "7086": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7198,
        7210
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x60"
    },
    "7088": {
      "branch": 88,
      "fn": "Address._verifyCallResult",
      "offset": [
        7226,
        7233
      ],
      "op": "DUP4",
      "path": "3"
    },
    "7089": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7222,
        7802
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "7090": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7222,
        7802
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1BBC"
    },
    "7093": {
      "branch": 88,
      "fn": "Address._verifyCallResult",
      "offset": [
        7222,
        7802
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "7094": {
      "op": "POP"
    },
    "7095": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7256,
        7266
      ],
      "op": "DUP2",
      "path": "3",
      "statement": 73
    },
    "7096": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7249,
        7266
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1843"
    },
    "7099": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7249,
        7266
      ],
      "op": "JUMP",
      "path": "3"
    },
    "7100": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7222,
        7802
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "7101": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7367,
        7384
      ],
      "op": "DUP3",
      "path": "3"
    },
    "7102": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7367,
        7384
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "7103": {
      "branch": 89,
      "fn": "Address._verifyCallResult",
      "offset": [
        7367,
        7388
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "7104": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7363,
        7792
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1BCC"
    },
    "7107": {
      "branch": 89,
      "fn": "Address._verifyCallResult",
      "offset": [
        7363,
        7792
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "7108": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7625,
        7635
      ],
      "op": "DUP3",
      "path": "3"
    },
    "7109": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7619,
        7636
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "7110": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7685,
        7700
      ],
      "op": "DUP1",
      "path": "3"
    },
    "7111": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7672,
        7682
      ],
      "op": "DUP5",
      "path": "3"
    },
    "7112": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7668,
        7670
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "7114": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7664,
        7683
      ],
      "op": "ADD",
      "path": "3"
    },
    "7115": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7657,
        7701
      ],
      "op": "REVERT",
      "path": "3"
    },
    "7116": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7363,
        7792
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "7117": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7764,
        7776
      ],
      "op": "DUP2",
      "path": "3",
      "statement": 74
    },
    "7118": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7757,
        7777
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "7120": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7757,
        7777
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "7121": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7125": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7127": {
      "op": "SHL"
    },
    "7128": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7757,
        7777
      ],
      "op": "DUP2",
      "path": "3"
    },
    "7129": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7757,
        7777
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "7130": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7757,
        7777
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "7132": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7757,
        7777
      ],
      "op": "ADD",
      "path": "3"
    },
    "7133": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7757,
        7777
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xA9F"
    },
    "7136": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7757,
        7777
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "7137": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7757,
        7777
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7138": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7757,
        7777
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1D1C"
    },
    "7141": {
      "fn": "Address._verifyCallResult",
      "jump": "i",
      "offset": [
        7757,
        7777
      ],
      "op": "JUMP",
      "path": "3"
    },
    "7142": {
      "op": "JUMPDEST"
    },
    "7143": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7145": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7147": {
      "op": "DUP3"
    },
    "7148": {
      "op": "DUP5"
    },
    "7149": {
      "op": "SUB"
    },
    "7150": {
      "op": "SLT"
    },
    "7151": {
      "op": "ISZERO"
    },
    "7152": {
      "op": "PUSH2",
      "value": "0x1BF8"
    },
    "7155": {
      "op": "JUMPI"
    },
    "7156": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7158": {
      "op": "DUP1"
    },
    "7159": {
      "op": "REVERT"
    },
    "7160": {
      "op": "JUMPDEST"
    },
    "7161": {
      "op": "DUP2"
    },
    "7162": {
      "op": "CALLDATALOAD"
    },
    "7163": {
      "op": "PUSH2",
      "value": "0x1843"
    },
    "7166": {
      "op": "DUP2"
    },
    "7167": {
      "op": "PUSH2",
      "value": "0x1E7F"
    },
    "7170": {
      "jump": "i",
      "op": "JUMP"
    },
    "7171": {
      "op": "JUMPDEST"
    },
    "7172": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7174": {
      "op": "DUP1"
    },
    "7175": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7177": {
      "op": "DUP4"
    },
    "7178": {
      "op": "DUP6"
    },
    "7179": {
      "op": "SUB"
    },
    "7180": {
      "op": "SLT"
    },
    "7181": {
      "op": "ISZERO"
    },
    "7182": {
      "op": "PUSH2",
      "value": "0x1C16"
    },
    "7185": {
      "op": "JUMPI"
    },
    "7186": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7188": {
      "op": "DUP1"
    },
    "7189": {
      "op": "REVERT"
    },
    "7190": {
      "op": "JUMPDEST"
    },
    "7191": {
      "op": "DUP3"
    },
    "7192": {
      "op": "CALLDATALOAD"
    },
    "7193": {
      "op": "PUSH2",
      "value": "0x1C21"
    },
    "7196": {
      "op": "DUP2"
    },
    "7197": {
      "op": "PUSH2",
      "value": "0x1E7F"
    },
    "7200": {
      "jump": "i",
      "op": "JUMP"
    },
    "7201": {
      "op": "JUMPDEST"
    },
    "7202": {
      "op": "SWAP2"
    },
    "7203": {
      "op": "POP"
    },
    "7204": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7206": {
      "op": "DUP4"
    },
    "7207": {
      "op": "ADD"
    },
    "7208": {
      "op": "CALLDATALOAD"
    },
    "7209": {
      "op": "PUSH2",
      "value": "0x1C31"
    },
    "7212": {
      "op": "DUP2"
    },
    "7213": {
      "op": "PUSH2",
      "value": "0x1E7F"
    },
    "7216": {
      "jump": "i",
      "op": "JUMP"
    },
    "7217": {
      "op": "JUMPDEST"
    },
    "7218": {
      "op": "DUP1"
    },
    "7219": {
      "op": "SWAP2"
    },
    "7220": {
      "op": "POP"
    },
    "7221": {
      "op": "POP"
    },
    "7222": {
      "op": "SWAP3"
    },
    "7223": {
      "op": "POP"
    },
    "7224": {
      "op": "SWAP3"
    },
    "7225": {
      "op": "SWAP1"
    },
    "7226": {
      "op": "POP"
    },
    "7227": {
      "jump": "o",
      "op": "JUMP"
    },
    "7228": {
      "op": "JUMPDEST"
    },
    "7229": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7231": {
      "op": "DUP1"
    },
    "7232": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7234": {
      "op": "DUP4"
    },
    "7235": {
      "op": "DUP6"
    },
    "7236": {
      "op": "SUB"
    },
    "7237": {
      "op": "SLT"
    },
    "7238": {
      "op": "ISZERO"
    },
    "7239": {
      "op": "PUSH2",
      "value": "0x1C4F"
    },
    "7242": {
      "op": "JUMPI"
    },
    "7243": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7245": {
      "op": "DUP1"
    },
    "7246": {
      "op": "REVERT"
    },
    "7247": {
      "op": "JUMPDEST"
    },
    "7248": {
      "op": "DUP3"
    },
    "7249": {
      "op": "CALLDATALOAD"
    },
    "7250": {
      "op": "PUSH2",
      "value": "0x1C5A"
    },
    "7253": {
      "op": "DUP2"
    },
    "7254": {
      "op": "PUSH2",
      "value": "0x1E7F"
    },
    "7257": {
      "jump": "i",
      "op": "JUMP"
    },
    "7258": {
      "op": "JUMPDEST"
    },
    "7259": {
      "op": "SWAP5"
    },
    "7260": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7262": {
      "op": "SWAP4"
    },
    "7263": {
      "op": "SWAP1"
    },
    "7264": {
      "op": "SWAP4"
    },
    "7265": {
      "op": "ADD"
    },
    "7266": {
      "op": "CALLDATALOAD"
    },
    "7267": {
      "op": "SWAP4"
    },
    "7268": {
      "op": "POP"
    },
    "7269": {
      "op": "POP"
    },
    "7270": {
      "op": "POP"
    },
    "7271": {
      "jump": "o",
      "op": "JUMP"
    },
    "7272": {
      "op": "JUMPDEST"
    },
    "7273": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7275": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7277": {
      "op": "DUP3"
    },
    "7278": {
      "op": "DUP5"
    },
    "7279": {
      "op": "SUB"
    },
    "7280": {
      "op": "SLT"
    },
    "7281": {
      "op": "ISZERO"
    },
    "7282": {
      "op": "PUSH2",
      "value": "0x1C7A"
    },
    "7285": {
      "op": "JUMPI"
    },
    "7286": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7288": {
      "op": "DUP1"
    },
    "7289": {
      "op": "REVERT"
    },
    "7290": {
      "op": "JUMPDEST"
    },
    "7291": {
      "op": "DUP2"
    },
    "7292": {
      "op": "MLOAD"
    },
    "7293": {
      "op": "DUP1"
    },
    "7294": {
      "op": "ISZERO"
    },
    "7295": {
      "op": "ISZERO"
    },
    "7296": {
      "op": "DUP2"
    },
    "7297": {
      "op": "EQ"
    },
    "7298": {
      "op": "PUSH2",
      "value": "0x1843"
    },
    "7301": {
      "op": "JUMPI"
    },
    "7302": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7304": {
      "op": "DUP1"
    },
    "7305": {
      "op": "REVERT"
    },
    "7306": {
      "op": "JUMPDEST"
    },
    "7307": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7309": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7311": {
      "op": "DUP3"
    },
    "7312": {
      "op": "DUP5"
    },
    "7313": {
      "op": "SUB"
    },
    "7314": {
      "op": "SLT"
    },
    "7315": {
      "op": "ISZERO"
    },
    "7316": {
      "op": "PUSH2",
      "value": "0x1C9C"
    },
    "7319": {
      "op": "JUMPI"
    },
    "7320": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7322": {
      "op": "DUP1"
    },
    "7323": {
      "op": "REVERT"
    },
    "7324": {
      "op": "JUMPDEST"
    },
    "7325": {
      "op": "POP"
    },
    "7326": {
      "op": "CALLDATALOAD"
    },
    "7327": {
      "op": "SWAP2"
    },
    "7328": {
      "op": "SWAP1"
    },
    "7329": {
      "op": "POP"
    },
    "7330": {
      "jump": "o",
      "op": "JUMP"
    },
    "7331": {
      "op": "JUMPDEST"
    },
    "7332": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7334": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7336": {
      "op": "DUP3"
    },
    "7337": {
      "op": "DUP5"
    },
    "7338": {
      "op": "SUB"
    },
    "7339": {
      "op": "SLT"
    },
    "7340": {
      "op": "ISZERO"
    },
    "7341": {
      "op": "PUSH2",
      "value": "0x1CB5"
    },
    "7344": {
      "op": "JUMPI"
    },
    "7345": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7347": {
      "op": "DUP1"
    },
    "7348": {
      "op": "REVERT"
    },
    "7349": {
      "op": "JUMPDEST"
    },
    "7350": {
      "op": "POP"
    },
    "7351": {
      "op": "MLOAD"
    },
    "7352": {
      "op": "SWAP2"
    },
    "7353": {
      "op": "SWAP1"
    },
    "7354": {
      "op": "POP"
    },
    "7355": {
      "jump": "o",
      "op": "JUMP"
    },
    "7356": {
      "op": "JUMPDEST"
    },
    "7357": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7359": {
      "op": "DUP3"
    },
    "7360": {
      "op": "MLOAD"
    },
    "7361": {
      "op": "PUSH2",
      "value": "0x1CCE"
    },
    "7364": {
      "op": "DUP2"
    },
    "7365": {
      "op": "DUP5"
    },
    "7366": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7368": {
      "op": "DUP8"
    },
    "7369": {
      "op": "ADD"
    },
    "7370": {
      "op": "PUSH2",
      "value": "0x1DF6"
    },
    "7373": {
      "jump": "i",
      "op": "JUMP"
    },
    "7374": {
      "op": "JUMPDEST"
    },
    "7375": {
      "op": "SWAP2"
    },
    "7376": {
      "op": "SWAP1"
    },
    "7377": {
      "op": "SWAP2"
    },
    "7378": {
      "op": "ADD"
    },
    "7379": {
      "op": "SWAP3"
    },
    "7380": {
      "op": "SWAP2"
    },
    "7381": {
      "op": "POP"
    },
    "7382": {
      "op": "POP"
    },
    "7383": {
      "jump": "o",
      "op": "JUMP"
    },
    "7384": {
      "op": "JUMPDEST"
    },
    "7385": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7387": {
      "op": "DUP1"
    },
    "7388": {
      "op": "DUP3"
    },
    "7389": {
      "op": "MSTORE"
    },
    "7390": {
      "op": "DUP3"
    },
    "7391": {
      "op": "MLOAD"
    },
    "7392": {
      "op": "DUP3"
    },
    "7393": {
      "op": "DUP3"
    },
    "7394": {
      "op": "ADD"
    },
    "7395": {
      "op": "DUP2"
    },
    "7396": {
      "op": "SWAP1"
    },
    "7397": {
      "op": "MSTORE"
    },
    "7398": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7400": {
      "op": "SWAP2"
    },
    "7401": {
      "op": "SWAP1"
    },
    "7402": {
      "op": "DUP5"
    },
    "7403": {
      "op": "DUP3"
    },
    "7404": {
      "op": "ADD"
    },
    "7405": {
      "op": "SWAP1"
    },
    "7406": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7408": {
      "op": "DUP6"
    },
    "7409": {
      "op": "ADD"
    },
    "7410": {
      "op": "SWAP1"
    },
    "7411": {
      "op": "DUP5"
    },
    "7412": {
      "op": "JUMPDEST"
    },
    "7413": {
      "op": "DUP2"
    },
    "7414": {
      "op": "DUP2"
    },
    "7415": {
      "op": "LT"
    },
    "7416": {
      "op": "ISZERO"
    },
    "7417": {
      "op": "PUSH2",
      "value": "0x1D10"
    },
    "7420": {
      "op": "JUMPI"
    },
    "7421": {
      "op": "DUP4"
    },
    "7422": {
      "op": "MLOAD"
    },
    "7423": {
      "op": "DUP4"
    },
    "7424": {
      "op": "MSTORE"
    },
    "7425": {
      "op": "SWAP3"
    },
    "7426": {
      "op": "DUP5"
    },
    "7427": {
      "op": "ADD"
    },
    "7428": {
      "op": "SWAP3"
    },
    "7429": {
      "op": "SWAP2"
    },
    "7430": {
      "op": "DUP5"
    },
    "7431": {
      "op": "ADD"
    },
    "7432": {
      "op": "SWAP2"
    },
    "7433": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7435": {
      "op": "ADD"
    },
    "7436": {
      "op": "PUSH2",
      "value": "0x1CF4"
    },
    "7439": {
      "op": "JUMP"
    },
    "7440": {
      "op": "JUMPDEST"
    },
    "7441": {
      "op": "POP"
    },
    "7442": {
      "op": "SWAP1"
    },
    "7443": {
      "op": "SWAP7"
    },
    "7444": {
      "op": "SWAP6"
    },
    "7445": {
      "op": "POP"
    },
    "7446": {
      "op": "POP"
    },
    "7447": {
      "op": "POP"
    },
    "7448": {
      "op": "POP"
    },
    "7449": {
      "op": "POP"
    },
    "7450": {
      "op": "POP"
    },
    "7451": {
      "jump": "o",
      "op": "JUMP"
    },
    "7452": {
      "op": "JUMPDEST"
    },
    "7453": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7455": {
      "op": "DUP2"
    },
    "7456": {
      "op": "MSTORE"
    },
    "7457": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7459": {
      "op": "DUP3"
    },
    "7460": {
      "op": "MLOAD"
    },
    "7461": {
      "op": "DUP1"
    },
    "7462": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7464": {
      "op": "DUP5"
    },
    "7465": {
      "op": "ADD"
    },
    "7466": {
      "op": "MSTORE"
    },
    "7467": {
      "op": "PUSH2",
      "value": "0x1D3B"
    },
    "7470": {
      "op": "DUP2"
    },
    "7471": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7473": {
      "op": "DUP6"
    },
    "7474": {
      "op": "ADD"
    },
    "7475": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7477": {
      "op": "DUP8"
    },
    "7478": {
      "op": "ADD"
    },
    "7479": {
      "op": "PUSH2",
      "value": "0x1DF6"
    },
    "7482": {
      "jump": "i",
      "op": "JUMP"
    },
    "7483": {
      "op": "JUMPDEST"
    },
    "7484": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "7486": {
      "op": "ADD"
    },
    "7487": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "7489": {
      "op": "NOT"
    },
    "7490": {
      "op": "AND"
    },
    "7491": {
      "op": "SWAP2"
    },
    "7492": {
      "op": "SWAP1"
    },
    "7493": {
      "op": "SWAP2"
    },
    "7494": {
      "op": "ADD"
    },
    "7495": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7497": {
      "op": "ADD"
    },
    "7498": {
      "op": "SWAP3"
    },
    "7499": {
      "op": "SWAP2"
    },
    "7500": {
      "op": "POP"
    },
    "7501": {
      "op": "POP"
    },
    "7502": {
      "jump": "o",
      "op": "JUMP"
    },
    "7503": {
      "op": "JUMPDEST"
    },
    "7504": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7506": {
      "op": "DUP1"
    },
    "7507": {
      "op": "DUP3"
    },
    "7508": {
      "op": "MSTORE"
    },
    "7509": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "7511": {
      "op": "SWAP1"
    },
    "7512": {
      "op": "DUP3"
    },
    "7513": {
      "op": "ADD"
    },
    "7514": {
      "op": "MSTORE"
    },
    "7515": {
      "op": "PUSH32",
      "value": "0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
    },
    "7548": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7550": {
      "op": "DUP3"
    },
    "7551": {
      "op": "ADD"
    },
    "7552": {
      "op": "MSTORE"
    },
    "7553": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "7555": {
      "op": "ADD"
    },
    "7556": {
      "op": "SWAP1"
    },
    "7557": {
      "jump": "o",
      "op": "JUMP"
    },
    "7558": {
      "op": "JUMPDEST"
    },
    "7559": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7561": {
      "op": "DUP3"
    },
    "7562": {
      "op": "NOT"
    },
    "7563": {
      "op": "DUP3"
    },
    "7564": {
      "op": "GT"
    },
    "7565": {
      "op": "ISZERO"
    },
    "7566": {
      "op": "PUSH2",
      "value": "0x1D99"
    },
    "7569": {
      "op": "JUMPI"
    },
    "7570": {
      "op": "PUSH2",
      "value": "0x1D99"
    },
    "7573": {
      "op": "PUSH2",
      "value": "0x1E3D"
    },
    "7576": {
      "jump": "i",
      "op": "JUMP"
    },
    "7577": {
      "op": "JUMPDEST"
    },
    "7578": {
      "op": "POP"
    },
    "7579": {
      "op": "ADD"
    },
    "7580": {
      "op": "SWAP1"
    },
    "7581": {
      "jump": "o",
      "op": "JUMP"
    },
    "7582": {
      "op": "JUMPDEST"
    },
    "7583": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7585": {
      "op": "DUP3"
    },
    "7586": {
      "op": "PUSH2",
      "value": "0x1DBB"
    },
    "7589": {
      "op": "JUMPI"
    },
    "7590": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "7595": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7597": {
      "op": "SHL"
    },
    "7598": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7600": {
      "op": "MSTORE"
    },
    "7601": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "7603": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "7605": {
      "op": "MSTORE"
    },
    "7606": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7608": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7610": {
      "op": "REVERT"
    },
    "7611": {
      "op": "JUMPDEST"
    },
    "7612": {
      "op": "POP"
    },
    "7613": {
      "op": "DIV"
    },
    "7614": {
      "op": "SWAP1"
    },
    "7615": {
      "jump": "o",
      "op": "JUMP"
    },
    "7616": {
      "op": "JUMPDEST"
    },
    "7617": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7619": {
      "op": "DUP2"
    },
    "7620": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7622": {
      "op": "NOT"
    },
    "7623": {
      "op": "DIV"
    },
    "7624": {
      "op": "DUP4"
    },
    "7625": {
      "op": "GT"
    },
    "7626": {
      "op": "DUP3"
    },
    "7627": {
      "op": "ISZERO"
    },
    "7628": {
      "op": "ISZERO"
    },
    "7629": {
      "op": "AND"
    },
    "7630": {
      "op": "ISZERO"
    },
    "7631": {
      "op": "PUSH2",
      "value": "0x1DDA"
    },
    "7634": {
      "op": "JUMPI"
    },
    "7635": {
      "op": "PUSH2",
      "value": "0x1DDA"
    },
    "7638": {
      "op": "PUSH2",
      "value": "0x1E3D"
    },
    "7641": {
      "jump": "i",
      "op": "JUMP"
    },
    "7642": {
      "op": "JUMPDEST"
    },
    "7643": {
      "op": "POP"
    },
    "7644": {
      "op": "MUL"
    },
    "7645": {
      "op": "SWAP1"
    },
    "7646": {
      "jump": "o",
      "op": "JUMP"
    },
    "7647": {
      "op": "JUMPDEST"
    },
    "7648": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7650": {
      "op": "DUP3"
    },
    "7651": {
      "op": "DUP3"
    },
    "7652": {
      "op": "LT"
    },
    "7653": {
      "op": "ISZERO"
    },
    "7654": {
      "op": "PUSH2",
      "value": "0x1DF1"
    },
    "7657": {
      "op": "JUMPI"
    },
    "7658": {
      "op": "PUSH2",
      "value": "0x1DF1"
    },
    "7661": {
      "op": "PUSH2",
      "value": "0x1E3D"
    },
    "7664": {
      "jump": "i",
      "op": "JUMP"
    },
    "7665": {
      "op": "JUMPDEST"
    },
    "7666": {
      "op": "POP"
    },
    "7667": {
      "op": "SUB"
    },
    "7668": {
      "op": "SWAP1"
    },
    "7669": {
      "jump": "o",
      "op": "JUMP"
    },
    "7670": {
      "op": "JUMPDEST"
    },
    "7671": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7673": {
      "op": "JUMPDEST"
    },
    "7674": {
      "op": "DUP4"
    },
    "7675": {
      "op": "DUP2"
    },
    "7676": {
      "op": "LT"
    },
    "7677": {
      "op": "ISZERO"
    },
    "7678": {
      "op": "PUSH2",
      "value": "0x1E11"
    },
    "7681": {
      "op": "JUMPI"
    },
    "7682": {
      "op": "DUP2"
    },
    "7683": {
      "op": "DUP2"
    },
    "7684": {
      "op": "ADD"
    },
    "7685": {
      "op": "MLOAD"
    },
    "7686": {
      "op": "DUP4"
    },
    "7687": {
      "op": "DUP3"
    },
    "7688": {
      "op": "ADD"
    },
    "7689": {
      "op": "MSTORE"
    },
    "7690": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7692": {
      "op": "ADD"
    },
    "7693": {
      "op": "PUSH2",
      "value": "0x1DF9"
    },
    "7696": {
      "op": "JUMP"
    },
    "7697": {
      "op": "JUMPDEST"
    },
    "7698": {
      "op": "DUP4"
    },
    "7699": {
      "op": "DUP2"
    },
    "7700": {
      "op": "GT"
    },
    "7701": {
      "op": "ISZERO"
    },
    "7702": {
      "op": "PUSH2",
      "value": "0x1996"
    },
    "7705": {
      "op": "JUMPI"
    },
    "7706": {
      "op": "POP"
    },
    "7707": {
      "op": "POP"
    },
    "7708": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7710": {
      "op": "SWAP2"
    },
    "7711": {
      "op": "ADD"
    },
    "7712": {
      "op": "MSTORE"
    },
    "7713": {
      "jump": "o",
      "op": "JUMP"
    },
    "7714": {
      "op": "JUMPDEST"
    },
    "7715": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7717": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7719": {
      "op": "NOT"
    },
    "7720": {
      "op": "DUP3"
    },
    "7721": {
      "op": "EQ"
    },
    "7722": {
      "op": "ISZERO"
    },
    "7723": {
      "op": "PUSH2",
      "value": "0x1E36"
    },
    "7726": {
      "op": "JUMPI"
    },
    "7727": {
      "op": "PUSH2",
      "value": "0x1E36"
    },
    "7730": {
      "op": "PUSH2",
      "value": "0x1E3D"
    },
    "7733": {
      "jump": "i",
      "op": "JUMP"
    },
    "7734": {
      "op": "JUMPDEST"
    },
    "7735": {
      "op": "POP"
    },
    "7736": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7738": {
      "op": "ADD"
    },
    "7739": {
      "op": "SWAP1"
    },
    "7740": {
      "jump": "o",
      "op": "JUMP"
    },
    "7741": {
      "op": "JUMPDEST"
    },
    "7742": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "7747": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7749": {
      "op": "SHL"
    },
    "7750": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7752": {
      "op": "MSTORE"
    },
    "7753": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "7755": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "7757": {
      "op": "MSTORE"
    },
    "7758": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7760": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7762": {
      "op": "REVERT"
    },
    "7763": {
      "op": "JUMPDEST"
    },
    "7764": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "7769": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7771": {
      "op": "SHL"
    },
    "7772": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7774": {
      "op": "MSTORE"
    },
    "7775": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "7777": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "7779": {
      "op": "MSTORE"
    },
    "7780": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7782": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7784": {
      "op": "REVERT"
    },
    "7785": {
      "op": "JUMPDEST"
    },
    "7786": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "7791": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7793": {
      "op": "SHL"
    },
    "7794": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7796": {
      "op": "MSTORE"
    },
    "7797": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "7799": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "7801": {
      "op": "MSTORE"
    },
    "7802": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7804": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7806": {
      "op": "REVERT"
    },
    "7807": {
      "op": "JUMPDEST"
    },
    "7808": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7810": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7812": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7814": {
      "op": "SHL"
    },
    "7815": {
      "op": "SUB"
    },
    "7816": {
      "op": "DUP2"
    },
    "7817": {
      "op": "AND"
    },
    "7818": {
      "op": "DUP2"
    },
    "7819": {
      "op": "EQ"
    },
    "7820": {
      "op": "PUSH2",
      "value": "0x1E94"
    },
    "7823": {
      "op": "JUMPI"
    },
    "7824": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7826": {
      "op": "DUP1"
    },
    "7827": {
      "op": "REVERT"
    },
    "7828": {
      "op": "JUMPDEST"
    },
    "7829": {
      "op": "POP"
    },
    "7830": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "2cab09dbee34ff72e28eba8f2c5ef5514ff8d298",
  "source": "// SPDX-License-Identifier: MIT\n// solhint-disable not-rely-on-time\n\npragma solidity ^0.8.3;\n\nimport 'OpenZeppelin/openzeppelin-contracts@4.0.0/contracts/utils/math/SafeMath.sol';\nimport 'OpenZeppelin/openzeppelin-contracts@4.0.0/contracts/utils/math/Math.sol';\nimport 'OpenZeppelin/openzeppelin-contracts@4.0.0/contracts/token/ERC20/utils/SafeERC20.sol';\nimport 'OpenZeppelin/openzeppelin-contracts@4.0.0/contracts/security/ReentrancyGuard.sol';\n\n// Inheritance\nimport \"../../interfaces/IStakingRewards.sol\";\nimport \"../../interfaces/IGetStakingRewards.sol\";\n\nimport \"../../interfaces/IMoolaStakingRewards.sol\";\nimport \"./MockStaking.sol\";\n\ncontract MockMoolaStakingRewards is IMoolaStakingRewards, RewardsDistributionRecipient, ReentrancyGuard {\n    using SafeMath for uint256;\n    using SafeERC20 for IERC20;\n\n    /* ========== STATE VARIABLES ========== */\n\n    IERC20 public immutable rewardsToken;\n    IERC20 public immutable stakingToken;\n    IERC20[] public externalRewardsTokens;\n    uint256 public periodFinish = 0;\n    uint256 public rewardRate = 0;\n    uint256 public rewardsDuration = 7 days;\n    uint256 public lastUpdateTime;\n    uint256 public rewardPerTokenStored;\n\n    mapping(address => uint256) public userRewardPerTokenPaid;\n    mapping(address => uint256) public rewards;\n    mapping(address => mapping(IERC20 => uint256)) public externalRewards;\n\n    mapping(IERC20 => uint256) private externalRewardPerTokenStoredWad;\n    mapping(address => mapping(IERC20 => uint256)) private externalUserRewardPerTokenPaidWad;\n\n    uint256 private _totalSupply;\n    mapping(address => uint256) private _balances;\n\n    IStakingRewards public immutable externalStakingRewards;\n    /* ========== CONSTRUCTOR ========== */\n\n    constructor(\n        address _owner,\n        address _rewardsDistribution,\n        IERC20 _rewardsToken,\n        IStakingRewards _externalStakingRewards,\n        IERC20[] memory _externalRewardsTokens, \n        address _staking\n    ) Owned(_owner) {\n        require(_externalRewardsTokens.length > 0, \"Empty externalRewardsTokens\");\n        rewardsToken = _rewardsToken;\n        rewardsDistribution = _rewardsDistribution;\n        externalStakingRewards = _externalStakingRewards;\n        externalRewardsTokens = _externalRewardsTokens;\n        stakingToken = IERC20(_staking);\n    }\n\n    /* ========== VIEWS ========== */\n\n    function totalSupply() external view override returns (uint256) {\n        return _totalSupply;\n    }\n\n    function balanceOf(address account) external view override returns (uint256) {\n        return _balances[account];\n    }\n\n    function lastTimeRewardApplicable() public view override returns (uint256) {\n        return Math.min(block.timestamp, periodFinish);\n    }\n\n    function rewardPerToken() public view override returns (uint256) {\n        if (_totalSupply == 0) {\n            return rewardPerTokenStored;\n        }\n        return\n            rewardPerTokenStored.add(\n                lastTimeRewardApplicable().sub(lastUpdateTime).mul(rewardRate).mul(1e18).div(_totalSupply)\n            );\n    }\n\n    function earned(address account) public view override returns (uint256) {\n        return _balances[account].mul(rewardPerToken().sub(userRewardPerTokenPaid[account])).div(1e18).add(rewards[account]);\n    }\n\n    function earnedExternal(address account) public override returns (uint256[] memory result) {\n        IERC20[] memory externalTokens = externalRewardsTokens;\n        uint256[] memory externalOldTotalRewards = new uint256[](externalTokens.length);\n        result = new uint256[](externalTokens.length);\n\n        for (uint256 i = 0; i < externalTokens.length; i++) {\n            externalOldTotalRewards[i] = externalTokens[i].balanceOf(address(this));\n        }\n\n        externalStakingRewards.getReward();\n\n        for (uint256 i = 0; i < externalTokens.length; i++) {\n            IERC20 externalToken = externalTokens[i];\n            uint256 externalTotalRewards = externalToken.balanceOf(address(this));\n\n            uint256 newExternalRewardsAmount = externalTotalRewards.sub(externalOldTotalRewards[i]);\n            \n            if (_totalSupply > 0) {\n                externalRewardPerTokenStoredWad[externalToken] =\n                    externalRewardPerTokenStoredWad[externalToken].add(newExternalRewardsAmount.mul(1e18).div(_totalSupply));\n            }\n\n            result[i] =\n                _balances[account]\n                .mul(externalRewardPerTokenStoredWad[externalToken].sub(externalUserRewardPerTokenPaidWad[account][externalToken]))\n                .div(1e18).add(externalRewards[account][externalToken]);\n\n            externalUserRewardPerTokenPaidWad[account][externalToken] = externalRewardPerTokenStoredWad[externalToken];\n            externalRewards[account][externalToken] = result[i];\n        }\n\n        return result;\n    }\n\n    function getRewardForDuration() external view override returns (uint256) {\n        return rewardRate.mul(rewardsDuration);\n    }\n\n    /* ========== MUTATIVE FUNCTIONS ========== */\n\n    // XXX: removed notPaused\n    function stake(uint256 amount) external override nonReentrant updateReward(msg.sender) {\n        require(amount > 0, \"Cannot stake 0\");\n        _totalSupply = _totalSupply.add(amount);\n        _balances[msg.sender] = _balances[msg.sender].add(amount);\n        stakingToken.safeTransferFrom(msg.sender, address(this), amount);\n        stakingToken.approve(address(externalStakingRewards), amount);\n        externalStakingRewards.stake(amount);\n        emit Staked(msg.sender, amount);\n    }\n\n    function withdraw(uint256 amount) public override nonReentrant updateReward(msg.sender) {\n        require(amount > 0, \"Cannot withdraw 0\");\n        _totalSupply = _totalSupply.sub(amount);\n        _balances[msg.sender] = _balances[msg.sender].sub(amount);\n        externalStakingRewards.withdraw(amount);\n        stakingToken.safeTransfer(msg.sender, amount);\n        emit Withdrawn(msg.sender, amount);\n    }\n\n    function getReward() public override nonReentrant updateReward(msg.sender) {\n        uint256 reward = rewards[msg.sender];\n        IERC20[] memory externalTokens = externalRewardsTokens;\n\n        if (reward > 0) {\n            rewards[msg.sender] = 0;\n            rewardsToken.safeTransfer(msg.sender, reward);\n            emit RewardPaid(msg.sender, reward);\n        }\n\n        for (uint256 i = 0; i < externalTokens.length; i++) {\n            IERC20 externalToken = externalTokens[i];\n            uint256 externalReward = externalRewards[msg.sender][externalToken];\n            if (externalReward > 0) {\n                externalRewards[msg.sender][externalToken] = 0;\n                externalToken.safeTransfer(msg.sender, externalReward);\n                emit ExternalRewardPaid(msg.sender, externalReward);\n            }\n        }\n    }\n\n    function exit() external override {\n        withdraw(_balances[msg.sender]);\n        getReward();\n    }\n\n    /* ========== RESTRICTED FUNCTIONS ========== */\n\n    function notifyRewardAmount(uint256 reward) external override onlyRewardsDistribution updateReward(address(0)) {\n        if (block.timestamp >= periodFinish) {\n            rewardRate = reward.div(rewardsDuration);\n        } else {\n            uint256 remaining = periodFinish.sub(block.timestamp);\n            uint256 leftover = remaining.mul(rewardRate);\n            rewardRate = reward.add(leftover).div(rewardsDuration);\n        }\n\n        // Ensure the provided reward amount is not more than the balance in the contract.\n        // This keeps the reward rate in the right range, preventing overflows due to\n        // very high values of rewardRate in the earned and rewardsPerToken functions;\n        // Reward + leftover must be less than 2^256 / 10^18 to avoid overflow.\n        uint balance = rewardsToken.balanceOf(address(this));\n        require(rewardRate <= balance.div(rewardsDuration), \"Provided reward too high\");\n\n        lastUpdateTime = block.timestamp;\n        periodFinish = block.timestamp.add(rewardsDuration);\n        emit RewardAdded(reward);\n    }\n\n    // End rewards emission earlier\n    function updatePeriodFinish(uint timestamp) external onlyOwner updateReward(address(0)) {\n        require(timestamp > lastUpdateTime, \"Invalid new period finish\");\n        periodFinish = timestamp;\n    }\n\n    // Added to support recovering LP Rewards from other systems such as BAL to be distributed to holders\n    function recoverERC20(address tokenAddress, uint256 tokenAmount) external onlyOwner {\n        require(tokenAddress != address(stakingToken), \"Cannot withdraw the staking token\");\n        IERC20(tokenAddress).safeTransfer(owner, tokenAmount);\n        emit Recovered(tokenAddress, tokenAmount);\n    }\n\n    function setRewardsDuration(uint256 _rewardsDuration) external onlyOwner {\n        require(\n            block.timestamp > periodFinish,\n            \"Previous rewards period must be complete before changing the duration for the new period\"\n        );\n        rewardsDuration = _rewardsDuration;\n        emit RewardsDurationUpdated(rewardsDuration);\n    }\n\n    /* ========== MODIFIERS ========== */\n\n    modifier updateReward(address account) {\n        rewardPerTokenStored = rewardPerToken();\n        lastUpdateTime = lastTimeRewardApplicable();\n        if (account != address(0)) {\n            rewards[account] = earned(account);\n            userRewardPerTokenPaid[account] = rewardPerTokenStored;\n            earnedExternal(account);\n        }\n        _;\n    }\n\n    /* ========== EVENTS ========== */\n\n    event RewardAdded(uint256 reward);\n    event Staked(address indexed user, uint256 amount);\n    event Withdrawn(address indexed user, uint256 amount);\n    event RewardPaid(address indexed user, uint256 reward);\n    event ExternalRewardPaid(address indexed user, uint256 reward);\n    event RewardsDurationUpdated(uint256 newDuration);\n    event Recovered(address token, uint256 amount);\n}",
  "sourceMap": "642:9259:6:-:0;;;1023:1;993:31;;1058:1;1030:29;;1098:6;1065:39;;1733:583;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1973:6;-1:-1:-1;;;;;659:20:7;;651:58;;;;-1:-1:-1;;;651:58:7;;2485:2:11;651:58:7;;;2467:21:11;2524:2;2504:18;;;2497:30;2563:27;2543:18;;;2536:55;2608:18;;651:58:7;;;;;;;;;719:5;:14;;-1:-1:-1;;;;;;719:14:7;-1:-1:-1;;;;;719:14:7;;;;;;;748:32;;;2186:34:11;;;2251:2;2236:18;;2229:43;;;;748:32:7;;2121:18:11;748:32:7;;;;;;;-1:-1:-1;1637:1:0;1743:7;:22;1999:29:6;;1991:73:::1;;;::::0;-1:-1:-1;;;1991:73:6;;2839:2:11;1991:73:6::1;::::0;::::1;2821:21:11::0;2878:2;2858:18;;;2851:30;2917:29;2897:18;;;2890:57;2964:18;;1991:73:6::1;2637:351:11::0;1991:73:6::1;-1:-1:-1::0;;;;;;2074:28:6::1;::::0;;;;;::::1;::::0;2112:19:::1;:42:::0;;-1:-1:-1;;;;;2112:42:6;::::1;-1:-1:-1::0;;;;;;2112:42:6;;::::1;;::::0;;2164:48;;;;::::1;::::0;2222:46;;::::1;::::0;:21:::1;::::0;:46:::1;::::0;::::1;::::0;::::1;:::i;:::-;-1:-1:-1::0;2278:31:6::1;::::0;-1:-1:-1;;;;;;2278:31:6;::::1;::::0;-1:-1:-1;642:9259:6;;-1:-1:-1;;;;642:9259:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;642:9259:6;-1:-1:-1;;;;;642:9259:6;;;;;;;;;;;-1:-1:-1;642:9259:6;;;;;;;-1:-1:-1;642:9259:6;;;-1:-1:-1;642:9259:6;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:138:11;93:13;;115:31;93:13;115:31;:::i;:::-;14:138;;;:::o;157:1812::-;351:6;359;367;375;383;391;444:3;432:9;423:7;419:23;415:33;412:53;;;461:1;458;451:12;412:53;493:9;487:16;512:31;537:5;512:31;:::i;:::-;562:5;552:15;;;586:2;633;622:9;618:18;612:25;646:33;671:7;646:33;:::i;:::-;750:2;735:18;;729:25;698:7;;-1:-1:-1;763:33:11;729:25;763:33;:::i;:::-;867:2;852:18;;846:25;815:7;;-1:-1:-1;880:33:11;846:25;880:33;:::i;:::-;983:3;968:19;;962:26;932:7;;-1:-1:-1;;;;;;1037:14:11;;;1034:34;;;1064:1;1061;1054:12;1034:34;1102:6;1091:9;1087:22;1077:32;;1147:7;1140:4;1136:2;1132:13;1128:27;1118:55;;1169:1;1166;1159:12;1118:55;1198:2;1192:9;1220:2;1216;1213:10;1210:36;;;1226:18;;:::i;:::-;1272:2;1269:1;1265:10;1304:2;1298:9;1367:2;1363:7;1358:2;1354;1350:11;1346:25;1338:6;1334:38;1422:6;1410:10;1407:22;1402:2;1390:10;1387:18;1384:46;1381:72;;;1433:18;;:::i;:::-;1469:2;1462:22;1519:18;;;1553:15;;;;-1:-1:-1;1588:11:11;;;1618;;;1614:20;;1611:33;-1:-1:-1;1608:53:11;;;1657:1;1654;1647:12;1608:53;1679:1;1670:10;;1689:180;1703:2;1700:1;1697:9;1689:180;;;1760:34;1790:3;1760:34;:::i;:::-;1748:47;;1721:1;1714:9;;;;;1815:12;;;;1847;;1689:180;;;1693:3;1888:6;1878:16;;;;;;;;1913:50;1958:3;1947:9;1943:19;1913:50;:::i;:::-;1903:60;;157:1812;;;;;;;;:::o;2993:127::-;3054:10;3049:3;3045:20;3042:1;3035:31;3085:4;3082:1;3075:15;3109:4;3106:1;3099:15;3125:131;-1:-1:-1;;;;;3200:31:11;;3190:42;;3180:70;;3246:1;3243;3236:12;3180:70;3125:131;:::o;:::-;642:9259:6;;;;;;;;;;;;;;;;;;;;;;;;",
  "sourcePath": "contracts/mock/MockMoolaStakingRewards.sol",
  "type": "contract"
}