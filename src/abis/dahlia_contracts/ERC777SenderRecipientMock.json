{
  "abi": [
    {
      "anonymous": false,
      "inputs": [],
      "name": "BeforeTokenTransfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "operatorData",
          "type": "bytes"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "fromBalance",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "toBalance",
          "type": "uint256"
        }
      ],
      "name": "TokensReceivedCalled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "operatorData",
          "type": "bytes"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "fromBalance",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "toBalance",
          "type": "uint256"
        }
      ],
      "name": "TokensToSendCalled",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC777",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "interfaceHash",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "canImplementInterfaceForAddress",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "recipientFor",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        }
      ],
      "name": "registerRecipient",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "registerSender",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC777",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "send",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "senderFor",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "shouldRevert",
          "type": "bool"
        }
      ],
      "name": "setShouldRevertReceive",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "shouldRevert",
          "type": "bool"
        }
      ],
      "name": "setShouldRevertSend",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "userData",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "operatorData",
          "type": "bytes"
        }
      ],
      "name": "tokensReceived",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "userData",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "operatorData",
          "type": "bytes"
        }
      ],
      "name": "tokensToSend",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "115": "contracts/openzeppelin/token/ERC777/IERC777.sol",
    "116": "contracts/openzeppelin/token/ERC777/IERC777Recipient.sol",
    "117": "contracts/openzeppelin/token/ERC777/IERC777Sender.sol",
    "120": "contracts/openzeppelin/utils/Context.sol",
    "14": "contracts/openzeppelin/introspection/ERC1820Implementer.sol",
    "16": "contracts/openzeppelin/introspection/IERC1820Implementer.sol",
    "17": "contracts/openzeppelin/introspection/IERC1820Registry.sol",
    "57": "contracts/openzeppelin/mocks/ERC777SenderRecipientMock.sol"
  },
  "ast": {
    "absolutePath": "contracts/openzeppelin/mocks/ERC777SenderRecipientMock.sol",
    "exportedSymbols": {
      "ERC777SenderRecipientMock": [
        4508
      ]
    },
    "id": 4509,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 4169,
        "literals": [
          "solidity",
          ">=",
          "0.6",
          ".0",
          "<",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:31:57"
      },
      {
        "absolutePath": "contracts/openzeppelin/utils/Context.sol",
        "file": "../utils/Context.sol",
        "id": 4170,
        "nodeType": "ImportDirective",
        "scope": 4509,
        "sourceUnit": 12604,
        "src": "66:30:57",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/openzeppelin/token/ERC777/IERC777.sol",
        "file": "../token/ERC777/IERC777.sol",
        "id": 4171,
        "nodeType": "ImportDirective",
        "scope": 4509,
        "sourceUnit": 12541,
        "src": "97:37:57",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/openzeppelin/token/ERC777/IERC777Sender.sol",
        "file": "../token/ERC777/IERC777Sender.sol",
        "id": 4172,
        "nodeType": "ImportDirective",
        "scope": 4509,
        "sourceUnit": 12581,
        "src": "135:43:57",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/openzeppelin/token/ERC777/IERC777Recipient.sol",
        "file": "../token/ERC777/IERC777Recipient.sol",
        "id": 4173,
        "nodeType": "ImportDirective",
        "scope": 4509,
        "sourceUnit": 12561,
        "src": "179:46:57",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/openzeppelin/introspection/IERC1820Registry.sol",
        "file": "../introspection/IERC1820Registry.sol",
        "id": 4174,
        "nodeType": "ImportDirective",
        "scope": 4509,
        "sourceUnit": 1960,
        "src": "226:47:57",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/openzeppelin/introspection/ERC1820Implementer.sol",
        "file": "../introspection/ERC1820Implementer.sol",
        "id": 4175,
        "nodeType": "ImportDirective",
        "scope": 4509,
        "sourceUnit": 1844,
        "src": "274:49:57",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 4176,
              "name": "Context",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 12603,
              "src": "363:7:57",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Context_$12603",
                "typeString": "contract Context"
              }
            },
            "id": 4177,
            "nodeType": "InheritanceSpecifier",
            "src": "363:7:57"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 4178,
              "name": "IERC777Sender",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 12580,
              "src": "372:13:57",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC777Sender_$12580",
                "typeString": "contract IERC777Sender"
              }
            },
            "id": 4179,
            "nodeType": "InheritanceSpecifier",
            "src": "372:13:57"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 4180,
              "name": "IERC777Recipient",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 12560,
              "src": "387:16:57",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC777Recipient_$12560",
                "typeString": "contract IERC777Recipient"
              }
            },
            "id": 4181,
            "nodeType": "InheritanceSpecifier",
            "src": "387:16:57"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 4182,
              "name": "ERC1820Implementer",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1843,
              "src": "405:18:57",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC1820Implementer_$1843",
                "typeString": "contract ERC1820Implementer"
              }
            },
            "id": 4183,
            "nodeType": "InheritanceSpecifier",
            "src": "405:18:57"
          }
        ],
        "contractDependencies": [
          1843,
          1869,
          12560,
          12580,
          12603
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 4508,
        "linearizedBaseContracts": [
          4508,
          1843,
          1869,
          12560,
          12580,
          12603
        ],
        "name": "ERC777SenderRecipientMock",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "documentation": null,
            "id": 4203,
            "name": "TokensToSendCalled",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 4202,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4185,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "operator",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4203,
                  "src": "464:16:57",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4184,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "464:7:57",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4187,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4203,
                  "src": "490:12:57",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4186,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "490:7:57",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4189,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4203,
                  "src": "512:10:57",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4188,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "512:7:57",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4191,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4203,
                  "src": "532:14:57",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4190,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "532:7:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4193,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "data",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4203,
                  "src": "556:10:57",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 4192,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "556:5:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4195,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "operatorData",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4203,
                  "src": "576:18:57",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 4194,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "576:5:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4197,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "token",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4203,
                  "src": "604:13:57",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4196,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "604:7:57",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4199,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "fromBalance",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4203,
                  "src": "627:19:57",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4198,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "627:7:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4201,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "toBalance",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4203,
                  "src": "656:17:57",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4200,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "656:7:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "454:225:57"
            },
            "src": "430:250:57"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 4223,
            "name": "TokensReceivedCalled",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 4222,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4205,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "operator",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4223,
                  "src": "722:16:57",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4204,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "722:7:57",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4207,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4223,
                  "src": "748:12:57",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4206,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "748:7:57",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4209,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4223,
                  "src": "770:10:57",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4208,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "770:7:57",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4211,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4223,
                  "src": "790:14:57",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4210,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "790:7:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4213,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "data",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4223,
                  "src": "814:10:57",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 4212,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "814:5:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4215,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "operatorData",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4223,
                  "src": "834:18:57",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 4214,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "834:5:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4217,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "token",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4223,
                  "src": "862:13:57",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4216,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "862:7:57",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4219,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "fromBalance",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4223,
                  "src": "885:19:57",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4218,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "885:7:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4221,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "toBalance",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4223,
                  "src": "914:17:57",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4220,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "914:7:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "712:225:57"
            },
            "src": "686:252:57"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 4225,
            "name": "BeforeTokenTransfer",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 4224,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1024:2:57"
            },
            "src": "999:28:57"
          },
          {
            "constant": false,
            "id": 4227,
            "mutability": "mutable",
            "name": "_shouldRevertSend",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 4508,
            "src": "1033:30:57",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 4226,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "1033:4:57",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 4229,
            "mutability": "mutable",
            "name": "_shouldRevertReceive",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 4508,
            "src": "1069:33:57",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 4228,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "1069:4:57",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 4234,
            "mutability": "mutable",
            "name": "_erc1820",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 4508,
            "src": "1109:96:57",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC1820Registry_$1959",
              "typeString": "contract IERC1820Registry"
            },
            "typeName": {
              "contractScope": null,
              "id": 4230,
              "name": "IERC1820Registry",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1959,
              "src": "1109:16:57",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC1820Registry_$1959",
                "typeString": "contract IERC1820Registry"
              }
            },
            "value": {
              "argumentTypes": null,
              "arguments": [
                {
                  "argumentTypes": null,
                  "hexValue": "307831383230613442373631384264453731446365386364633733614142364339353930356661443234",
                  "id": 4232,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1162:42:57",
                  "subdenomination": null,
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "value": "0x1820a4B7618BdE71Dce8cdc73aAB6C95905faD24"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  }
                ],
                "id": 4231,
                "name": "IERC1820Registry",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 1959,
                "src": "1145:16:57",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_contract$_IERC1820Registry_$1959_$",
                  "typeString": "type(contract IERC1820Registry)"
                }
              },
              "id": 4233,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1145:60:57",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC1820Registry_$1959",
                "typeString": "contract IERC1820Registry"
              }
            },
            "visibility": "private"
          },
          {
            "constant": true,
            "id": 4239,
            "mutability": "constant",
            "name": "_TOKENS_SENDER_INTERFACE_HASH",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 4508,
            "src": "1212:88:57",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 4235,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "1212:7:57",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "argumentTypes": null,
              "arguments": [
                {
                  "argumentTypes": null,
                  "hexValue": "455243373737546f6b656e7353656e646572",
                  "id": 4237,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1279:20:57",
                  "subdenomination": null,
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_29ddb589b1fb5fc7cf394961c1adf5f8c6454761adf795e67fe149f658abe895",
                    "typeString": "literal_string \"ERC777TokensSender\""
                  },
                  "value": "ERC777TokensSender"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_29ddb589b1fb5fc7cf394961c1adf5f8c6454761adf795e67fe149f658abe895",
                    "typeString": "literal_string \"ERC777TokensSender\""
                  }
                ],
                "id": 4236,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": -8,
                "src": "1269:9:57",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 4238,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1269:31:57",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "private"
          },
          {
            "constant": true,
            "id": 4244,
            "mutability": "constant",
            "name": "_TOKENS_RECIPIENT_INTERFACE_HASH",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 4508,
            "src": "1306:94:57",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 4240,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "1306:7:57",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "argumentTypes": null,
              "arguments": [
                {
                  "argumentTypes": null,
                  "hexValue": "455243373737546f6b656e73526563697069656e74",
                  "id": 4242,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1376:23:57",
                  "subdenomination": null,
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_b281fc8c12954d22544db45de3159a39272895b169a852b314f9cc762e44c53b",
                    "typeString": "literal_string \"ERC777TokensRecipient\""
                  },
                  "value": "ERC777TokensRecipient"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_b281fc8c12954d22544db45de3159a39272895b169a852b314f9cc762e44c53b",
                    "typeString": "literal_string \"ERC777TokensRecipient\""
                  }
                ],
                "id": 4241,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": -8,
                "src": "1366:9:57",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 4243,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1366:34:57",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "private"
          },
          {
            "baseFunctions": [
              12579
            ],
            "body": {
              "id": 4302,
              "nodeType": "Block",
              "src": "1615:563:57",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "id": 4260,
                    "name": "_shouldRevertSend",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 4227,
                    "src": "1629:17:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 4265,
                  "nodeType": "IfStatement",
                  "src": "1625:56:57",
                  "trueBody": {
                    "id": 4264,
                    "nodeType": "Block",
                    "src": "1648:33:57",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 4261,
                            "name": "revert",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -19,
                              -19
                            ],
                            "referencedDeclaration": -19,
                            "src": "1662:6:57",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_revert_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 4262,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1662:8:57",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 4263,
                        "nodeType": "ExpressionStatement",
                        "src": "1662:8:57"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    4267
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4267,
                      "mutability": "mutable",
                      "name": "token",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 4302,
                      "src": "1691:13:57",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC777_$12540",
                        "typeString": "contract IERC777"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 4266,
                        "name": "IERC777",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 12540,
                        "src": "1691:7:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC777_$12540",
                          "typeString": "contract IERC777"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 4272,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 4269,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12591,
                          "src": "1715:10:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                            "typeString": "function () view returns (address payable)"
                          }
                        },
                        "id": 4270,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1715:12:57",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 4268,
                      "name": "IERC777",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12540,
                      "src": "1707:7:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IERC777_$12540_$",
                        "typeString": "type(contract IERC777)"
                      }
                    },
                    "id": 4271,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1707:21:57",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC777_$12540",
                      "typeString": "contract IERC777"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1691:37:57"
                },
                {
                  "assignments": [
                    4274
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4274,
                      "mutability": "mutable",
                      "name": "fromBalance",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 4302,
                      "src": "1739:19:57",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 4273,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1739:7:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 4279,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 4277,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4248,
                        "src": "1777:4:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 4275,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4267,
                        "src": "1761:5:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC777_$12540",
                          "typeString": "contract IERC777"
                        }
                      },
                      "id": 4276,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12416,
                      "src": "1761:15:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 4278,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1761:21:57",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1739:43:57"
                },
                {
                  "assignments": [
                    4281
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4281,
                      "mutability": "mutable",
                      "name": "toBalance",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 4302,
                      "src": "1888:17:57",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 4280,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1888:7:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 4286,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 4284,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4250,
                        "src": "1924:2:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 4282,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4267,
                        "src": "1908:5:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC777_$12540",
                          "typeString": "contract IERC777"
                        }
                      },
                      "id": 4283,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12416,
                      "src": "1908:15:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 4285,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1908:19:57",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1888:39:57"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 4288,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4246,
                        "src": "1975:8:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 4289,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4248,
                        "src": "1997:4:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 4290,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4250,
                        "src": "2015:2:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 4291,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4252,
                        "src": "2031:6:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 4292,
                        "name": "userData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4254,
                        "src": "2051:8:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 4293,
                        "name": "operatorData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4256,
                        "src": "2073:12:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 4296,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4267,
                            "src": "2107:5:57",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC777_$12540",
                              "typeString": "contract IERC777"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IERC777_$12540",
                              "typeString": "contract IERC777"
                            }
                          ],
                          "id": 4295,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2099:7:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 4294,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2099:7:57",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 4297,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2099:14:57",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 4298,
                        "name": "fromBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4274,
                        "src": "2127:11:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 4299,
                        "name": "toBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4281,
                        "src": "2152:9:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        },
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 4287,
                      "name": "TokensToSendCalled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4203,
                      "src": "1943:18:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address,uint256,bytes memory,bytes memory,address,uint256,uint256)"
                      }
                    },
                    "id": 4300,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1943:228:57",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4301,
                  "nodeType": "EmitStatement",
                  "src": "1938:233:57"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "75ab9782",
            "id": 4303,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tokensToSend",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 4258,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1606:8:57"
            },
            "parameters": {
              "id": 4257,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4246,
                  "mutability": "mutable",
                  "name": "operator",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4303,
                  "src": "1438:16:57",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4245,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1438:7:57",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4248,
                  "mutability": "mutable",
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4303,
                  "src": "1464:12:57",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4247,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1464:7:57",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4250,
                  "mutability": "mutable",
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4303,
                  "src": "1486:10:57",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4249,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1486:7:57",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4252,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4303,
                  "src": "1506:14:57",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4251,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1506:7:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4254,
                  "mutability": "mutable",
                  "name": "userData",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4303,
                  "src": "1530:23:57",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 4253,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1530:5:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4256,
                  "mutability": "mutable",
                  "name": "operatorData",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4303,
                  "src": "1563:27:57",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 4255,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1563:5:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1428:168:57"
            },
            "returnParameters": {
              "id": 4259,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1615:0:57"
            },
            "scope": 4508,
            "src": "1407:771:57",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              12559
            ],
            "body": {
              "id": 4361,
              "nodeType": "Block",
              "src": "2394:568:57",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "id": 4319,
                    "name": "_shouldRevertReceive",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 4229,
                    "src": "2408:20:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 4324,
                  "nodeType": "IfStatement",
                  "src": "2404:59:57",
                  "trueBody": {
                    "id": 4323,
                    "nodeType": "Block",
                    "src": "2430:33:57",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 4320,
                            "name": "revert",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -19,
                              -19
                            ],
                            "referencedDeclaration": -19,
                            "src": "2444:6:57",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_revert_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 4321,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2444:8:57",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 4322,
                        "nodeType": "ExpressionStatement",
                        "src": "2444:8:57"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    4326
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4326,
                      "mutability": "mutable",
                      "name": "token",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 4361,
                      "src": "2473:13:57",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC777_$12540",
                        "typeString": "contract IERC777"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 4325,
                        "name": "IERC777",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 12540,
                        "src": "2473:7:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC777_$12540",
                          "typeString": "contract IERC777"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 4331,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 4328,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12591,
                          "src": "2497:10:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                            "typeString": "function () view returns (address payable)"
                          }
                        },
                        "id": 4329,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2497:12:57",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 4327,
                      "name": "IERC777",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12540,
                      "src": "2489:7:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IERC777_$12540_$",
                        "typeString": "type(contract IERC777)"
                      }
                    },
                    "id": 4330,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2489:21:57",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC777_$12540",
                      "typeString": "contract IERC777"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2473:37:57"
                },
                {
                  "assignments": [
                    4333
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4333,
                      "mutability": "mutable",
                      "name": "fromBalance",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 4361,
                      "src": "2521:19:57",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 4332,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2521:7:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 4338,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 4336,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4307,
                        "src": "2559:4:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 4334,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4326,
                        "src": "2543:5:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC777_$12540",
                          "typeString": "contract IERC777"
                        }
                      },
                      "id": 4335,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12416,
                      "src": "2543:15:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 4337,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2543:21:57",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2521:43:57"
                },
                {
                  "assignments": [
                    4340
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4340,
                      "mutability": "mutable",
                      "name": "toBalance",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 4361,
                      "src": "2670:17:57",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 4339,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2670:7:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 4345,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 4343,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4309,
                        "src": "2706:2:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 4341,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4326,
                        "src": "2690:5:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC777_$12540",
                          "typeString": "contract IERC777"
                        }
                      },
                      "id": 4342,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12416,
                      "src": "2690:15:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 4344,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2690:19:57",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2670:39:57"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 4347,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4305,
                        "src": "2759:8:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 4348,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4307,
                        "src": "2781:4:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 4349,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4309,
                        "src": "2799:2:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 4350,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4311,
                        "src": "2815:6:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 4351,
                        "name": "userData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4313,
                        "src": "2835:8:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 4352,
                        "name": "operatorData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4315,
                        "src": "2857:12:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 4355,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4326,
                            "src": "2891:5:57",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC777_$12540",
                              "typeString": "contract IERC777"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IERC777_$12540",
                              "typeString": "contract IERC777"
                            }
                          ],
                          "id": 4354,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2883:7:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 4353,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2883:7:57",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 4356,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2883:14:57",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 4357,
                        "name": "fromBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4333,
                        "src": "2911:11:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 4358,
                        "name": "toBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4340,
                        "src": "2936:9:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        },
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 4346,
                      "name": "TokensReceivedCalled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4223,
                      "src": "2725:20:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address,uint256,bytes memory,bytes memory,address,uint256,uint256)"
                      }
                    },
                    "id": 4359,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2725:230:57",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4360,
                  "nodeType": "EmitStatement",
                  "src": "2720:235:57"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "0023de29",
            "id": 4362,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tokensReceived",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 4317,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2385:8:57"
            },
            "parameters": {
              "id": 4316,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4305,
                  "mutability": "mutable",
                  "name": "operator",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4362,
                  "src": "2217:16:57",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4304,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2217:7:57",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4307,
                  "mutability": "mutable",
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4362,
                  "src": "2243:12:57",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4306,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2243:7:57",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4309,
                  "mutability": "mutable",
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4362,
                  "src": "2265:10:57",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4308,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2265:7:57",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4311,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4362,
                  "src": "2285:14:57",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4310,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2285:7:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4313,
                  "mutability": "mutable",
                  "name": "userData",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4362,
                  "src": "2309:23:57",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 4312,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2309:5:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4315,
                  "mutability": "mutable",
                  "name": "operatorData",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4362,
                  "src": "2342:27:57",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 4314,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2342:5:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2207:168:57"
            },
            "returnParameters": {
              "id": 4318,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2394:0:57"
            },
            "scope": 4508,
            "src": "2184:778:57",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 4388,
              "nodeType": "Block",
              "src": "3011:199:57",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 4368,
                        "name": "_TOKENS_SENDER_INTERFACE_HASH",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4239,
                        "src": "3050:29:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 4369,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4364,
                        "src": "3081:7:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 4367,
                      "name": "_registerInterfaceForAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1842,
                      "src": "3021:28:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 4370,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3021:68:57",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4371,
                  "nodeType": "ExpressionStatement",
                  "src": "3021:68:57"
                },
                {
                  "assignments": [
                    4373
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4373,
                      "mutability": "mutable",
                      "name": "self",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 4388,
                      "src": "3100:12:57",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 4372,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3100:7:57",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 4378,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 4376,
                        "name": "this",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -28,
                        "src": "3123:4:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC777SenderRecipientMock_$4508",
                          "typeString": "contract ERC777SenderRecipientMock"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ERC777SenderRecipientMock_$4508",
                          "typeString": "contract ERC777SenderRecipientMock"
                        }
                      ],
                      "id": 4375,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "3115:7:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 4374,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3115:7:57",
                        "typeDescriptions": {
                          "typeIdentifier": null,
                          "typeString": null
                        }
                      }
                    },
                    "id": 4377,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3115:13:57",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3100:28:57"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 4381,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 4379,
                      "name": "account",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4364,
                      "src": "3142:7:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 4380,
                      "name": "self",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4373,
                      "src": "3153:4:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3142:15:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 4387,
                  "nodeType": "IfStatement",
                  "src": "3138:66:57",
                  "trueBody": {
                    "id": 4386,
                    "nodeType": "Block",
                    "src": "3159:45:57",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 4383,
                              "name": "self",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4373,
                              "src": "3188:4:57",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 4382,
                            "name": "registerSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4406,
                            "src": "3173:14:57",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 4384,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3173:20:57",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 4385,
                        "nodeType": "ExpressionStatement",
                        "src": "3173:20:57"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "functionSelector": "d2de6474",
            "id": 4389,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "senderFor",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 4365,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4364,
                  "mutability": "mutable",
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4389,
                  "src": "2987:15:57",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4363,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2987:7:57",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2986:17:57"
            },
            "returnParameters": {
              "id": 4366,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3011:0:57"
            },
            "scope": 4508,
            "src": "2968:242:57",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4405,
              "nodeType": "Block",
              "src": "3263:103:57",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 4399,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "3314:4:57",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC777SenderRecipientMock_$4508",
                              "typeString": "contract ERC777SenderRecipientMock"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC777SenderRecipientMock_$4508",
                              "typeString": "contract ERC777SenderRecipientMock"
                            }
                          ],
                          "id": 4398,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3306:7:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 4397,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3306:7:57",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 4400,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3306:13:57",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 4401,
                        "name": "_TOKENS_SENDER_INTERFACE_HASH",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4239,
                        "src": "3321:29:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 4402,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4391,
                        "src": "3352:6:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 4394,
                        "name": "_erc1820",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4234,
                        "src": "3273:8:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC1820Registry_$1959",
                          "typeString": "contract IERC1820Registry"
                        }
                      },
                      "id": 4396,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setInterfaceImplementer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1898,
                      "src": "3273:32:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (address,bytes32,address) external"
                      }
                    },
                    "id": 4403,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3273:86:57",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4404,
                  "nodeType": "ExpressionStatement",
                  "src": "3273:86:57"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "e1ecbd30",
            "id": 4406,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "registerSender",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 4392,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4391,
                  "mutability": "mutable",
                  "name": "sender",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4406,
                  "src": "3240:14:57",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4390,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3240:7:57",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3239:16:57"
            },
            "returnParameters": {
              "id": 4393,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3263:0:57"
            },
            "scope": 4508,
            "src": "3216:150:57",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4432,
              "nodeType": "Block",
              "src": "3418:205:57",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 4412,
                        "name": "_TOKENS_RECIPIENT_INTERFACE_HASH",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4244,
                        "src": "3457:32:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 4413,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4408,
                        "src": "3491:7:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 4411,
                      "name": "_registerInterfaceForAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1842,
                      "src": "3428:28:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 4414,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3428:71:57",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4415,
                  "nodeType": "ExpressionStatement",
                  "src": "3428:71:57"
                },
                {
                  "assignments": [
                    4417
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4417,
                      "mutability": "mutable",
                      "name": "self",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 4432,
                      "src": "3510:12:57",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 4416,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3510:7:57",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 4422,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 4420,
                        "name": "this",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -28,
                        "src": "3533:4:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC777SenderRecipientMock_$4508",
                          "typeString": "contract ERC777SenderRecipientMock"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ERC777SenderRecipientMock_$4508",
                          "typeString": "contract ERC777SenderRecipientMock"
                        }
                      ],
                      "id": 4419,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "3525:7:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 4418,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3525:7:57",
                        "typeDescriptions": {
                          "typeIdentifier": null,
                          "typeString": null
                        }
                      }
                    },
                    "id": 4421,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3525:13:57",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3510:28:57"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 4425,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 4423,
                      "name": "account",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4408,
                      "src": "3552:7:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 4424,
                      "name": "self",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4417,
                      "src": "3563:4:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3552:15:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 4431,
                  "nodeType": "IfStatement",
                  "src": "3548:69:57",
                  "trueBody": {
                    "id": 4430,
                    "nodeType": "Block",
                    "src": "3569:48:57",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 4427,
                              "name": "self",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4417,
                              "src": "3601:4:57",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 4426,
                            "name": "registerRecipient",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4450,
                            "src": "3583:17:57",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 4428,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3583:23:57",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 4429,
                        "nodeType": "ExpressionStatement",
                        "src": "3583:23:57"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "functionSelector": "e0eb2180",
            "id": 4433,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "recipientFor",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 4409,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4408,
                  "mutability": "mutable",
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4433,
                  "src": "3394:15:57",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4407,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3394:7:57",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3393:17:57"
            },
            "returnParameters": {
              "id": 4410,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3418:0:57"
            },
            "scope": 4508,
            "src": "3372:251:57",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4449,
              "nodeType": "Block",
              "src": "3682:109:57",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 4443,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "3733:4:57",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC777SenderRecipientMock_$4508",
                              "typeString": "contract ERC777SenderRecipientMock"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC777SenderRecipientMock_$4508",
                              "typeString": "contract ERC777SenderRecipientMock"
                            }
                          ],
                          "id": 4442,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3725:7:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 4441,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3725:7:57",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 4444,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3725:13:57",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 4445,
                        "name": "_TOKENS_RECIPIENT_INTERFACE_HASH",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4244,
                        "src": "3740:32:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 4446,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4435,
                        "src": "3774:9:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 4438,
                        "name": "_erc1820",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4234,
                        "src": "3692:8:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC1820Registry_$1959",
                          "typeString": "contract IERC1820Registry"
                        }
                      },
                      "id": 4440,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setInterfaceImplementer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1898,
                      "src": "3692:32:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (address,bytes32,address) external"
                      }
                    },
                    "id": 4447,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3692:92:57",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4448,
                  "nodeType": "ExpressionStatement",
                  "src": "3692:92:57"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "a8badaa5",
            "id": 4450,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "registerRecipient",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 4436,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4435,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4450,
                  "src": "3656:17:57",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4434,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3656:7:57",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3655:19:57"
            },
            "returnParameters": {
              "id": 4437,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3682:0:57"
            },
            "scope": 4508,
            "src": "3629:162:57",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4459,
              "nodeType": "Block",
              "src": "3852:49:57",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4457,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 4455,
                      "name": "_shouldRevertSend",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4227,
                      "src": "3862:17:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 4456,
                      "name": "shouldRevert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4452,
                      "src": "3882:12:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "3862:32:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 4458,
                  "nodeType": "ExpressionStatement",
                  "src": "3862:32:57"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "4e4ae5a5",
            "id": 4460,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setShouldRevertSend",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 4453,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4452,
                  "mutability": "mutable",
                  "name": "shouldRevert",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4460,
                  "src": "3826:17:57",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 4451,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3826:4:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3825:19:57"
            },
            "returnParameters": {
              "id": 4454,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3852:0:57"
            },
            "scope": 4508,
            "src": "3797:104:57",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4469,
              "nodeType": "Block",
              "src": "3965:52:57",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4467,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 4465,
                      "name": "_shouldRevertReceive",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4229,
                      "src": "3975:20:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 4466,
                      "name": "shouldRevert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4462,
                      "src": "3998:12:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "3975:35:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 4468,
                  "nodeType": "ExpressionStatement",
                  "src": "3975:35:57"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "c97e18fc",
            "id": 4470,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setShouldRevertReceive",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 4463,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4462,
                  "mutability": "mutable",
                  "name": "shouldRevert",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4470,
                  "src": "3939:17:57",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 4461,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3939:4:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3938:19:57"
            },
            "returnParameters": {
              "id": 4464,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3965:0:57"
            },
            "scope": 4508,
            "src": "3907:110:57",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4489,
              "nodeType": "Block",
              "src": "4106:158:57",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 4484,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4474,
                        "src": "4198:2:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 4485,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4476,
                        "src": "4202:6:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 4486,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4478,
                        "src": "4210:4:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 4481,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4472,
                        "src": "4187:5:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC777_$12540",
                          "typeString": "contract IERC777"
                        }
                      },
                      "id": 4483,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "send",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12426,
                      "src": "4187:10:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,bytes memory) external"
                      }
                    },
                    "id": 4487,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4187:28:57",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4488,
                  "nodeType": "ExpressionStatement",
                  "src": "4187:28:57"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "3836ef89",
            "id": 4490,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "send",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 4479,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4472,
                  "mutability": "mutable",
                  "name": "token",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4490,
                  "src": "4037:13:57",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC777_$12540",
                    "typeString": "contract IERC777"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 4471,
                    "name": "IERC777",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 12540,
                    "src": "4037:7:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC777_$12540",
                      "typeString": "contract IERC777"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4474,
                  "mutability": "mutable",
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4490,
                  "src": "4052:10:57",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4473,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4052:7:57",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4476,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4490,
                  "src": "4064:14:57",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4475,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4064:7:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4478,
                  "mutability": "mutable",
                  "name": "data",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4490,
                  "src": "4080:17:57",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 4477,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "4080:5:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4036:62:57"
            },
            "returnParameters": {
              "id": 4480,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4106:0:57"
            },
            "scope": 4508,
            "src": "4023:241:57",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4506,
              "nodeType": "Block",
              "src": "4341:41:57",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 4502,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4494,
                        "src": "4362:6:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 4503,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4496,
                        "src": "4370:4:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 4499,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4492,
                        "src": "4351:5:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC777_$12540",
                          "typeString": "contract IERC777"
                        }
                      },
                      "id": 4501,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "burn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12434,
                      "src": "4351:10:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,bytes memory) external"
                      }
                    },
                    "id": 4504,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4351:24:57",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4505,
                  "nodeType": "ExpressionStatement",
                  "src": "4351:24:57"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "44d17187",
            "id": 4507,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "burn",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 4497,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4492,
                  "mutability": "mutable",
                  "name": "token",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4507,
                  "src": "4284:13:57",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC777_$12540",
                    "typeString": "contract IERC777"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 4491,
                    "name": "IERC777",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 12540,
                    "src": "4284:7:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC777_$12540",
                      "typeString": "contract IERC777"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4494,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4507,
                  "src": "4299:14:57",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4493,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4299:7:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4496,
                  "mutability": "mutable",
                  "name": "data",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4507,
                  "src": "4315:17:57",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 4495,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "4315:5:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4283:50:57"
            },
            "returnParameters": {
              "id": 4498,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4341:0:57"
            },
            "scope": 4508,
            "src": "4270:112:57",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 4509,
        "src": "325:4059:57"
      }
    ],
    "src": "33:4353:57"
  },
  "bytecode": "60806040526001805462010000600160b01b031916751820a4b7618bde71dce8cdc73aab6c95905fad24000017905534801561003a57600080fd5b50610da58061004a6000396000f3fe608060405234801561001057600080fd5b50600436106100a85760003560e01c806375ab97821161007157806375ab97821461036f578063a8badaa514610455578063c97e18fc1461047b578063d2de64741461049a578063e0eb2180146104c0578063e1ecbd30146104e6576100a8565b806223de29146100ad578063249cb3fa146101955780633836ef89146101d357806344d17187146102975780634e4ae5a514610350575b600080fd5b610193600480360360c08110156100c357600080fd5b6001600160a01b03823581169260208101358216926040820135909216916060820135919081019060a081016080820135600160201b81111561010557600080fd5b82018360208201111561011757600080fd5b803590602001918460018302840111600160201b8311171561013857600080fd5b919390929091602081019035600160201b81111561015557600080fd5b82018360208201111561016757600080fd5b803590602001918460018302840111600160201b8311171561018857600080fd5b50909250905061050c565b005b6101c1600480360360408110156101ab57600080fd5b50803590602001356001600160a01b031661072a565b60408051918252519081900360200190f35b610193600480360360808110156101e957600080fd5b6001600160a01b03823581169260208101359091169160408201359190810190608081016060820135600160201b81111561022357600080fd5b82018360208201111561023557600080fd5b803590602001918460018302840111600160201b8311171561025657600080fd5b91908080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092955061079f945050505050565b610193600480360360608110156102ad57600080fd5b6001600160a01b0382351691602081013591810190606081016040820135600160201b8111156102dc57600080fd5b8201836020820111156102ee57600080fd5b803590602001918460018302840111600160201b8311171561030f57600080fd5b91908080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092955061087e945050505050565b6101936004803603602081101561036657600080fd5b5035151561094c565b610193600480360360c081101561038557600080fd5b6001600160a01b03823581169260208101358216926040820135909216916060820135919081019060a081016080820135600160201b8111156103c757600080fd5b8201836020820111156103d957600080fd5b803590602001918460018302840111600160201b831117156103fa57600080fd5b919390929091602081019035600160201b81111561041757600080fd5b82018360208201111561042957600080fd5b803590602001918460018302840111600160201b8311171561044a57600080fd5b50909250905061095f565b6101936004803603602081101561046b57600080fd5b50356001600160a01b0316610b78565b6101936004803603602081101561049157600080fd5b50351515610c14565b610193600480360360208110156104b057600080fd5b50356001600160a01b0316610c2e565b610193600480360360208110156104d657600080fd5b50356001600160a01b0316610c77565b610193600480360360208110156104fc57600080fd5b50356001600160a01b0316610cbc565b600154610100900460ff161561052157600080fd5b600061052b610d3d565b90506000816001600160a01b03166370a082318a6040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b15801561057c57600080fd5b505afa158015610590573d6000803e3d6000fd5b505050506040513d60208110156105a657600080fd5b5051604080516370a0823160e01b81526001600160a01b038b811660048301529151929350600092918516916370a0823191602480820192602092909190829003018186803b1580156105f857600080fd5b505afa15801561060c573d6000803e3d6000fd5b505050506040513d602081101561062257600080fd5b810190808051906020019092919050505090507f47e915878c47f3ec4d7ff646a2becb229f64fd2abe4d2b5e2bb4275b0cf50d4e8b8b8b8b8b8b8b8b8b8b8b604051808c6001600160a01b031681526020018b6001600160a01b031681526020018a6001600160a01b031681526020018981526020018060200180602001866001600160a01b0316815260200185815260200184815260200183810383528a8a82818152602001925080828437600083820152601f01601f191690910184810383528881526020019050888880828437600083820152604051601f909101601f19169092018290039f50909d5050505050505050505050505050a15050505050505050505050565b6000828152602081815260408083206001600160a01b038516845290915281205460ff16610759576000610798565b604051602001808073455243313832305f4143434550545f4d4147494360601b8152506014019050604051602081830303815290604052805190602001205b9392505050565b836001600160a01b0316639bd9bbc68484846040518463ffffffff1660e01b815260040180846001600160a01b0316815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b838110156108125781810151838201526020016107fa565b50505050905090810190601f16801561083f5780820380516001836020036101000a031916815260200191505b50945050505050600060405180830381600087803b15801561086057600080fd5b505af1158015610874573d6000803e3d6000fd5b5050505050505050565b6040805163fe9d930360e01b815260048101848152602482019283528351604483015283516001600160a01b0387169363fe9d9303938793879390929160640190602085019080838360005b838110156108e25781810151838201526020016108ca565b50505050905090810190601f16801561090f5780820380516001836020036101000a031916815260200191505b509350505050600060405180830381600087803b15801561092f57600080fd5b505af1158015610943573d6000803e3d6000fd5b50505050505050565b6001805460ff1916911515919091179055565b60015460ff161561096f57600080fd5b6000610979610d3d565b90506000816001600160a01b03166370a082318a6040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b1580156109ca57600080fd5b505afa1580156109de573d6000803e3d6000fd5b505050506040513d60208110156109f457600080fd5b5051604080516370a0823160e01b81526001600160a01b038b811660048301529151929350600092918516916370a0823191602480820192602092909190829003018186803b158015610a4657600080fd5b505afa158015610a5a573d6000803e3d6000fd5b505050506040513d6020811015610a7057600080fd5b810190808051906020019092919050505090507faa3e88aca472e90221daf7d3d601abafb62b120319089d7a2c2f63588da855298b8b8b8b8b8b8b8b8b8b8b604051808c6001600160a01b031681526020018b6001600160a01b031681526020018a6001600160a01b031681526020018981526020018060200180602001866001600160a01b0316815260200185815260200184815260200183810383528a8a82818152602001925080828437600083820152601f01601f191690910184810383528881526020019050888880828437600083820152604051601f909101601f19169092018290039f50909d5050505050505050505050505050a15050505050505050505050565b600154604080516329965a1d60e01b81523060048201527fb281fc8c12954d22544db45de3159a39272895b169a852b314f9cc762e44c53b60248201526001600160a01b038481166044830152915162010000909304909116916329965a1d9160648082019260009290919082900301818387803b158015610bf957600080fd5b505af1158015610c0d573d6000803e3d6000fd5b5050505050565b600180549115156101000261ff0019909216919091179055565b610c587f29ddb589b1fb5fc7cf394961c1adf5f8c6454761adf795e67fe149f658abe89582610d41565b306001600160a01b038216811415610c7357610c7381610cbc565b5050565b610ca17fb281fc8c12954d22544db45de3159a39272895b169a852b314f9cc762e44c53b82610d41565b306001600160a01b038216811415610c7357610c7381610b78565b600154604080516329965a1d60e01b81523060048201527f29ddb589b1fb5fc7cf394961c1adf5f8c6454761adf795e67fe149f658abe89560248201526001600160a01b038481166044830152915162010000909304909116916329965a1d9160648082019260009290919082900301818387803b158015610bf957600080fd5b3390565b6000918252602082815260408084206001600160a01b0390931684529190529020805460ff1916600117905556fea2646970667358221220f37df225ce93deb1dbc01858c3948cbbe393a62764aae134d7cca012e3f1c2a464736f6c634300060c0033",
  "bytecodeSha1": "f3f1cc83a9575ce5a39a61f996a0d6eac5c9b3cb",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.6.12+commit.27d51765"
  },
  "contractName": "ERC777SenderRecipientMock",
  "coverageMap": {
    "branches": {
      "115": {},
      "116": {},
      "117": {},
      "120": {},
      "14": {
        "ERC1820Implementer.canImplementInterfaceForAddress": {
          "21": [
            883,
            927,
            true
          ]
        }
      },
      "16": {},
      "17": {},
      "57": {
        "ERC777SenderRecipientMock.recipientFor": {
          "20": [
            3552,
            3567,
            false
          ]
        },
        "ERC777SenderRecipientMock.senderFor": {
          "19": [
            3142,
            3157,
            false
          ]
        },
        "ERC777SenderRecipientMock.tokensReceived": {
          "17": [
            2408,
            2428,
            false
          ]
        },
        "ERC777SenderRecipientMock.tokensToSend": {
          "18": [
            1629,
            1646,
            false
          ]
        }
      }
    },
    "statements": {
      "115": {},
      "116": {},
      "117": {},
      "120": {
        "Context._msgSender": {
          "15": [
            678,
            695
          ]
        }
      },
      "14": {
        "ERC1820Implementer._registerInterfaceForAddress": {
          "16": [
            1314,
            1365
          ]
        },
        "ERC1820Implementer.canImplementInterfaceForAddress": {
          "2": [
            876,
            967
          ]
        }
      },
      "16": {},
      "17": {},
      "57": {
        "ERC777SenderRecipientMock.burn": {
          "4": [
            4351,
            4375
          ]
        },
        "ERC777SenderRecipientMock.recipientFor": {
          "12": [
            3428,
            3499
          ],
          "13": [
            3583,
            3606
          ]
        },
        "ERC777SenderRecipientMock.registerRecipient": {
          "8": [
            3692,
            3784
          ]
        },
        "ERC777SenderRecipientMock.registerSender": {
          "14": [
            3273,
            3359
          ]
        },
        "ERC777SenderRecipientMock.send": {
          "3": [
            4187,
            4215
          ]
        },
        "ERC777SenderRecipientMock.senderFor": {
          "10": [
            3021,
            3089
          ],
          "11": [
            3173,
            3193
          ]
        },
        "ERC777SenderRecipientMock.setShouldRevertReceive": {
          "9": [
            3975,
            4010
          ]
        },
        "ERC777SenderRecipientMock.setShouldRevertSend": {
          "5": [
            3862,
            3894
          ]
        },
        "ERC777SenderRecipientMock.tokensReceived": {
          "0": [
            2444,
            2452
          ],
          "1": [
            2720,
            2955
          ]
        },
        "ERC777SenderRecipientMock.tokensToSend": {
          "6": [
            1662,
            1670
          ],
          "7": [
            1938,
            2171
          ]
        }
      }
    }
  },
  "dependencies": [
    "Context",
    "ERC1820Implementer",
    "IERC1820Implementer",
    "IERC1820Registry",
    "IERC777",
    "IERC777Recipient",
    "IERC777Sender"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106100a85760003560e01c806375ab97821161007157806375ab97821461036f578063a8badaa514610455578063c97e18fc1461047b578063d2de64741461049a578063e0eb2180146104c0578063e1ecbd30146104e6576100a8565b806223de29146100ad578063249cb3fa146101955780633836ef89146101d357806344d17187146102975780634e4ae5a514610350575b600080fd5b610193600480360360c08110156100c357600080fd5b6001600160a01b03823581169260208101358216926040820135909216916060820135919081019060a081016080820135600160201b81111561010557600080fd5b82018360208201111561011757600080fd5b803590602001918460018302840111600160201b8311171561013857600080fd5b919390929091602081019035600160201b81111561015557600080fd5b82018360208201111561016757600080fd5b803590602001918460018302840111600160201b8311171561018857600080fd5b50909250905061050c565b005b6101c1600480360360408110156101ab57600080fd5b50803590602001356001600160a01b031661072a565b60408051918252519081900360200190f35b610193600480360360808110156101e957600080fd5b6001600160a01b03823581169260208101359091169160408201359190810190608081016060820135600160201b81111561022357600080fd5b82018360208201111561023557600080fd5b803590602001918460018302840111600160201b8311171561025657600080fd5b91908080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092955061079f945050505050565b610193600480360360608110156102ad57600080fd5b6001600160a01b0382351691602081013591810190606081016040820135600160201b8111156102dc57600080fd5b8201836020820111156102ee57600080fd5b803590602001918460018302840111600160201b8311171561030f57600080fd5b91908080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092955061087e945050505050565b6101936004803603602081101561036657600080fd5b5035151561094c565b610193600480360360c081101561038557600080fd5b6001600160a01b03823581169260208101358216926040820135909216916060820135919081019060a081016080820135600160201b8111156103c757600080fd5b8201836020820111156103d957600080fd5b803590602001918460018302840111600160201b831117156103fa57600080fd5b919390929091602081019035600160201b81111561041757600080fd5b82018360208201111561042957600080fd5b803590602001918460018302840111600160201b8311171561044a57600080fd5b50909250905061095f565b6101936004803603602081101561046b57600080fd5b50356001600160a01b0316610b78565b6101936004803603602081101561049157600080fd5b50351515610c14565b610193600480360360208110156104b057600080fd5b50356001600160a01b0316610c2e565b610193600480360360208110156104d657600080fd5b50356001600160a01b0316610c77565b610193600480360360208110156104fc57600080fd5b50356001600160a01b0316610cbc565b600154610100900460ff161561052157600080fd5b600061052b610d3d565b90506000816001600160a01b03166370a082318a6040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b15801561057c57600080fd5b505afa158015610590573d6000803e3d6000fd5b505050506040513d60208110156105a657600080fd5b5051604080516370a0823160e01b81526001600160a01b038b811660048301529151929350600092918516916370a0823191602480820192602092909190829003018186803b1580156105f857600080fd5b505afa15801561060c573d6000803e3d6000fd5b505050506040513d602081101561062257600080fd5b810190808051906020019092919050505090507f47e915878c47f3ec4d7ff646a2becb229f64fd2abe4d2b5e2bb4275b0cf50d4e8b8b8b8b8b8b8b8b8b8b8b604051808c6001600160a01b031681526020018b6001600160a01b031681526020018a6001600160a01b031681526020018981526020018060200180602001866001600160a01b0316815260200185815260200184815260200183810383528a8a82818152602001925080828437600083820152601f01601f191690910184810383528881526020019050888880828437600083820152604051601f909101601f19169092018290039f50909d5050505050505050505050505050a15050505050505050505050565b6000828152602081815260408083206001600160a01b038516845290915281205460ff16610759576000610798565b604051602001808073455243313832305f4143434550545f4d4147494360601b8152506014019050604051602081830303815290604052805190602001205b9392505050565b836001600160a01b0316639bd9bbc68484846040518463ffffffff1660e01b815260040180846001600160a01b0316815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b838110156108125781810151838201526020016107fa565b50505050905090810190601f16801561083f5780820380516001836020036101000a031916815260200191505b50945050505050600060405180830381600087803b15801561086057600080fd5b505af1158015610874573d6000803e3d6000fd5b5050505050505050565b6040805163fe9d930360e01b815260048101848152602482019283528351604483015283516001600160a01b0387169363fe9d9303938793879390929160640190602085019080838360005b838110156108e25781810151838201526020016108ca565b50505050905090810190601f16801561090f5780820380516001836020036101000a031916815260200191505b509350505050600060405180830381600087803b15801561092f57600080fd5b505af1158015610943573d6000803e3d6000fd5b50505050505050565b6001805460ff1916911515919091179055565b60015460ff161561096f57600080fd5b6000610979610d3d565b90506000816001600160a01b03166370a082318a6040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b1580156109ca57600080fd5b505afa1580156109de573d6000803e3d6000fd5b505050506040513d60208110156109f457600080fd5b5051604080516370a0823160e01b81526001600160a01b038b811660048301529151929350600092918516916370a0823191602480820192602092909190829003018186803b158015610a4657600080fd5b505afa158015610a5a573d6000803e3d6000fd5b505050506040513d6020811015610a7057600080fd5b810190808051906020019092919050505090507faa3e88aca472e90221daf7d3d601abafb62b120319089d7a2c2f63588da855298b8b8b8b8b8b8b8b8b8b8b604051808c6001600160a01b031681526020018b6001600160a01b031681526020018a6001600160a01b031681526020018981526020018060200180602001866001600160a01b0316815260200185815260200184815260200183810383528a8a82818152602001925080828437600083820152601f01601f191690910184810383528881526020019050888880828437600083820152604051601f909101601f19169092018290039f50909d5050505050505050505050505050a15050505050505050505050565b600154604080516329965a1d60e01b81523060048201527fb281fc8c12954d22544db45de3159a39272895b169a852b314f9cc762e44c53b60248201526001600160a01b038481166044830152915162010000909304909116916329965a1d9160648082019260009290919082900301818387803b158015610bf957600080fd5b505af1158015610c0d573d6000803e3d6000fd5b5050505050565b600180549115156101000261ff0019909216919091179055565b610c587f29ddb589b1fb5fc7cf394961c1adf5f8c6454761adf795e67fe149f658abe89582610d41565b306001600160a01b038216811415610c7357610c7381610cbc565b5050565b610ca17fb281fc8c12954d22544db45de3159a39272895b169a852b314f9cc762e44c53b82610d41565b306001600160a01b038216811415610c7357610c7381610b78565b600154604080516329965a1d60e01b81523060048201527f29ddb589b1fb5fc7cf394961c1adf5f8c6454761adf795e67fe149f658abe89560248201526001600160a01b038481166044830152915162010000909304909116916329965a1d9160648082019260009290919082900301818387803b158015610bf957600080fd5b3390565b6000918252602082815260408084206001600160a01b0390931684529190529020805460ff1916600117905556fea2646970667358221220f37df225ce93deb1dbc01858c3948cbbe393a62764aae134d7cca012e3f1c2a464736f6c634300060c0033",
  "deployedSourceMap": "325:4059:57:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2184:778;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2184:778:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2184:778:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2184:778:57;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2184:778:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2184:778:57;;;;;;;;;;-1:-1:-1;2184:778:57;;-1:-1:-1;2184:778:57;-1:-1:-1;2184:778:57;:::i;:::-;;738:236:14;;;;;;;;;;;;;;;;-1:-1:-1;738:236:14;;;;;;-1:-1:-1;;;;;738:236:14;;:::i;:::-;;;;;;;;;;;;;;;;4023:241:57;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4023:241:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;4023:241:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;4023:241:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4023:241:57;;-1:-1:-1;4023:241:57;;-1:-1:-1;;;;;4023:241:57:i;4270:112::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4270:112:57;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;4270:112:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;4270:112:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4270:112:57;;-1:-1:-1;4270:112:57;;-1:-1:-1;;;;;4270:112:57:i;3797:104::-;;;;;;;;;;;;;;;;-1:-1:-1;3797:104:57;;;;:::i;1407:771::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1407:771:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1407:771:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1407:771:57;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1407:771:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1407:771:57;;;;;;;;;;-1:-1:-1;1407:771:57;;-1:-1:-1;1407:771:57;-1:-1:-1;1407:771:57;:::i;3629:162::-;;;;;;;;;;;;;;;;-1:-1:-1;3629:162:57;-1:-1:-1;;;;;3629:162:57;;:::i;3907:110::-;;;;;;;;;;;;;;;;-1:-1:-1;3907:110:57;;;;:::i;2968:242::-;;;;;;;;;;;;;;;;-1:-1:-1;2968:242:57;-1:-1:-1;;;;;2968:242:57;;:::i;3372:251::-;;;;;;;;;;;;;;;;-1:-1:-1;3372:251:57;-1:-1:-1;;;;;3372:251:57;;:::i;3216:150::-;;;;;;;;;;;;;;;;-1:-1:-1;3216:150:57;-1:-1:-1;;;;;3216:150:57;;:::i;2184:778::-;2408:20;;;;;;;2404:59;;;2444:8;;;2404:59;2473:13;2497:12;:10;:12::i;:::-;2473:37;;2521:19;2543:5;-1:-1:-1;;;;;2543:15:57;;2559:4;2543:21;;;;;;;;;;;;;-1:-1:-1;;;;;2543:21:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2543:21:57;2690:19;;;-1:-1:-1;;;2690:19:57;;-1:-1:-1;;;;;2690:19:57;;;;;;;;;2543:21;;-1:-1:-1;2670:17:57;;2690:15;;;;;;:19;;;;;2543:21;;2690:19;;;;;;;;:15;:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2670:39;;2725:230;2759:8;2781:4;2799:2;2815:6;2835:8;;2857:12;;2891:5;2911:11;2936:9;2725:230;;;;-1:-1:-1;;;;;2725:230:57;;;;;;-1:-1:-1;;;;;2725:230:57;;;;;;-1:-1:-1;;;;;2725:230:57;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2725:230:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2725:230:57;;;;;;;;;;;;;;;-1:-1:-1;2725:230:57;;;;;;;;;;;;;;;;;-1:-1:-1;;2725:230:57;;;;;;;;-1:-1:-1;2725:230:57;;-1:-1:-1;;;;;;;;;;;;;;2725:230:57;2184:778;;;;;;;;;;;:::o;738:236:14:-;857:7;883:35;;;;;;;;;;;-1:-1:-1;;;;;883:44:14;;;;;;;;;;;;:84;;962:4;883:84;;;528:40;;;;;;-1:-1:-1;;;528:40:14;;;;;;;;;;;;;;;;;;;518:51;;;;;;883:84;876:91;738:236;-1:-1:-1;;;738:236:14:o;4023:241:57:-;4187:5;-1:-1:-1;;;;;4187:10:57;;4198:2;4202:6;4210:4;4187:28;;;;;;;;;;;;;-1:-1:-1;;;;;4187:28:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4023:241;;;;:::o;4270:112::-;4351:24;;;-1:-1:-1;;;4351:24:57;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4351:10:57;;;;;4362:6;;4370:4;;4351:24;;;;;;;;;;;;;-1:-1:-1;4351:24:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4270:112;;;:::o;3797:104::-;3862:17;:32;;-1:-1:-1;;3862:32:57;;;;;;;;;;3797:104::o;1407:771::-;1629:17;;;;1625:56;;;1662:8;;;1625:56;1691:13;1715:12;:10;:12::i;:::-;1691:37;;1739:19;1761:5;-1:-1:-1;;;;;1761:15:57;;1777:4;1761:21;;;;;;;;;;;;;-1:-1:-1;;;;;1761:21:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1761:21:57;1908:19;;;-1:-1:-1;;;1908:19:57;;-1:-1:-1;;;;;1908:19:57;;;;;;;;;1761:21;;-1:-1:-1;1888:17:57;;1908:15;;;;;;:19;;;;;1761:21;;1908:19;;;;;;;;:15;:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1888:39;;1943:228;1975:8;1997:4;2015:2;2031:6;2051:8;;2073:12;;2107:5;2127:11;2152:9;1943:228;;;;-1:-1:-1;;;;;1943:228:57;;;;;;-1:-1:-1;;;;;1943:228:57;;;;;;-1:-1:-1;;;;;1943:228:57;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1943:228:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1943:228:57;;;;;;;;;;;;;;;-1:-1:-1;1943:228:57;;;;;;;;;;;;;;;;;-1:-1:-1;;1943:228:57;;;;;;;;-1:-1:-1;1943:228:57;;-1:-1:-1;;;;;;;;;;;;;;1943:228:57;1407:771;;;;;;;;;;;:::o;3629:162::-;3692:8;;:92;;;-1:-1:-1;;;3692:92:57;;3733:4;3692:92;;;;1366:34;3692:92;;;;-1:-1:-1;;;;;3692:92:57;;;;;;;;;:8;;;;;;;;:32;;:92;;;;;-1:-1:-1;;3692:92:57;;;;;;;;-1:-1:-1;3692:8:57;:92;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3629:162;:::o;3907:110::-;3975:20;:35;;;;;;;-1:-1:-1;;3975:35:57;;;;;;;;;3907:110::o;2968:242::-;3021:68;1269:31;3081:7;3021:28;:68::i;:::-;3123:4;-1:-1:-1;;;;;3142:15:57;;;;3138:66;;;3173:20;3188:4;3173:14;:20::i;:::-;2968:242;;:::o;3372:251::-;3428:71;1366:34;3491:7;3428:28;:71::i;:::-;3533:4;-1:-1:-1;;;;;3552:15:57;;;;3548:69;;;3583:23;3601:4;3583:17;:23::i;3216:150::-;3273:8;;:86;;;-1:-1:-1;;;3273:86:57;;3314:4;3273:86;;;;1269:31;3273:86;;;;-1:-1:-1;;;;;3273:86:57;;;;;;;;;:8;;;;;;;;:32;;:86;;;;;-1:-1:-1;;3273:86:57;;;;;;;;-1:-1:-1;3273:8:57;:86;;;;;;;;;;598:104:120;685:10;598:104;:::o;1209:163:14:-;1314:20;:35;;;;;;;;;;;-1:-1:-1;;;;;1314:44:14;;;;;;;;;;:51;;-1:-1:-1;;1314:51:14;1361:4;1314:51;;;1209:163::o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {
      "canImplementInterfaceForAddress(bytes32,address)": {
        "notice": "See {IERC1820Implementer-canImplementInterfaceForAddress}."
      },
      "tokensReceived(address,address,address,uint256,bytes,bytes)": {
        "details": "Called by an {IERC777} token contract whenever tokens are being moved or created into a registered account (`to`). The type of operation is conveyed by `from` being the zero address or not. This call occurs _after_ the token contract's state is updated, so {IERC777-balanceOf}, etc., can be used to query the post-operation state. This function may revert to prevent the operation from being executed."
      },
      "tokensToSend(address,address,address,uint256,bytes,bytes)": {
        "details": "Called by an {IERC777} token contract whenever a registered holder's (`from`) tokens are about to be moved or destroyed. The type of operation is conveyed by `to` being the zero address or not. This call occurs _before_ the token contract's state is updated, so {IERC777-balanceOf}, etc., can be used to query the pre-operation state. This function may revert to prevent the operation from being executed."
      }
    },
    "version": 1
  },
  "offset": [
    325,
    4384
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA8 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x75AB9782 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x75AB9782 EQ PUSH2 0x36F JUMPI DUP1 PUSH4 0xA8BADAA5 EQ PUSH2 0x455 JUMPI DUP1 PUSH4 0xC97E18FC EQ PUSH2 0x47B JUMPI DUP1 PUSH4 0xD2DE6474 EQ PUSH2 0x49A JUMPI DUP1 PUSH4 0xE0EB2180 EQ PUSH2 0x4C0 JUMPI DUP1 PUSH4 0xE1ECBD30 EQ PUSH2 0x4E6 JUMPI PUSH2 0xA8 JUMP JUMPDEST DUP1 PUSH3 0x23DE29 EQ PUSH2 0xAD JUMPI DUP1 PUSH4 0x249CB3FA EQ PUSH2 0x195 JUMPI DUP1 PUSH4 0x3836EF89 EQ PUSH2 0x1D3 JUMPI DUP1 PUSH4 0x44D17187 EQ PUSH2 0x297 JUMPI DUP1 PUSH4 0x4E4AE5A5 EQ PUSH2 0x350 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x193 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xC0 DUP2 LT ISZERO PUSH2 0xC3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 CALLDATALOAD DUP2 AND SWAP3 PUSH1 0x20 DUP2 ADD CALLDATALOAD DUP3 AND SWAP3 PUSH1 0x40 DUP3 ADD CALLDATALOAD SWAP1 SWAP3 AND SWAP2 PUSH1 0x60 DUP3 ADD CALLDATALOAD SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH1 0xA0 DUP2 ADD PUSH1 0x80 DUP3 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x20 SHL DUP2 GT ISZERO PUSH2 0x105 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x117 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH1 0x1 PUSH1 0x20 SHL DUP4 GT OR ISZERO PUSH2 0x138 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 PUSH1 0x20 DUP2 ADD SWAP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x20 SHL DUP2 GT ISZERO PUSH2 0x155 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x167 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH1 0x1 PUSH1 0x20 SHL DUP4 GT OR ISZERO PUSH2 0x188 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x50C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1C1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x1AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x72A JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x193 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x80 DUP2 LT ISZERO PUSH2 0x1E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 CALLDATALOAD DUP2 AND SWAP3 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP2 PUSH1 0x40 DUP3 ADD CALLDATALOAD SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH1 0x80 DUP2 ADD PUSH1 0x60 DUP3 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x20 SHL DUP2 GT ISZERO PUSH2 0x223 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x235 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH1 0x1 PUSH1 0x20 SHL DUP4 GT OR ISZERO PUSH2 0x256 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 POP PUSH2 0x79F SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x193 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x2AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 CALLDATALOAD AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP2 DUP2 ADD SWAP1 PUSH1 0x60 DUP2 ADD PUSH1 0x40 DUP3 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x20 SHL DUP2 GT ISZERO PUSH2 0x2DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x2EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH1 0x1 PUSH1 0x20 SHL DUP4 GT OR ISZERO PUSH2 0x30F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 POP PUSH2 0x87E SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x193 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x366 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD ISZERO ISZERO PUSH2 0x94C JUMP JUMPDEST PUSH2 0x193 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xC0 DUP2 LT ISZERO PUSH2 0x385 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 CALLDATALOAD DUP2 AND SWAP3 PUSH1 0x20 DUP2 ADD CALLDATALOAD DUP3 AND SWAP3 PUSH1 0x40 DUP3 ADD CALLDATALOAD SWAP1 SWAP3 AND SWAP2 PUSH1 0x60 DUP3 ADD CALLDATALOAD SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH1 0xA0 DUP2 ADD PUSH1 0x80 DUP3 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x20 SHL DUP2 GT ISZERO PUSH2 0x3C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x3D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH1 0x1 PUSH1 0x20 SHL DUP4 GT OR ISZERO PUSH2 0x3FA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 PUSH1 0x20 DUP2 ADD SWAP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x20 SHL DUP2 GT ISZERO PUSH2 0x417 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x429 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH1 0x1 PUSH1 0x20 SHL DUP4 GT OR ISZERO PUSH2 0x44A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x95F JUMP JUMPDEST PUSH2 0x193 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x46B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xB78 JUMP JUMPDEST PUSH2 0x193 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x491 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD ISZERO ISZERO PUSH2 0xC14 JUMP JUMPDEST PUSH2 0x193 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x4B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xC2E JUMP JUMPDEST PUSH2 0x193 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x4D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xC77 JUMP JUMPDEST PUSH2 0x193 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x4FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xCBC JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x521 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x52B PUSH2 0xD3D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x70A08231 DUP11 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x57C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x590 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x5A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE SWAP2 MLOAD SWAP3 SWAP4 POP PUSH1 0x0 SWAP3 SWAP2 DUP6 AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x5F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x60C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x622 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP PUSH32 0x47E915878C47F3EC4D7FF646A2BECB229F64FD2ABE4D2B5E2BB4275B0CF50D4E DUP12 DUP12 DUP12 DUP12 DUP12 DUP12 DUP12 DUP12 DUP12 DUP12 DUP12 PUSH1 0x40 MLOAD DUP1 DUP13 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP12 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP11 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP10 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 SUB DUP4 MSTORE DUP11 DUP11 DUP3 DUP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP4 DUP3 ADD MSTORE PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP1 SWAP2 ADD DUP5 DUP2 SUB DUP4 MSTORE DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 POP DUP9 DUP9 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP4 DUP3 ADD MSTORE PUSH1 0x40 MLOAD PUSH1 0x1F SWAP1 SWAP2 ADD PUSH1 0x1F NOT AND SWAP1 SWAP3 ADD DUP3 SWAP1 SUB SWAP16 POP SWAP1 SWAP14 POP POP POP POP POP POP POP POP POP POP POP POP POP POP LOG1 POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x759 JUMPI PUSH1 0x0 PUSH2 0x798 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP1 PUSH20 0x455243313832305F4143434550545F4D41474943 PUSH1 0x60 SHL DUP2 MSTORE POP PUSH1 0x14 ADD SWAP1 POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x9BD9BBC6 DUP5 DUP5 DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x812 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x7FA JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x83F JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP5 POP POP POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x860 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x874 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0xFE9D9303 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 DUP2 MSTORE PUSH1 0x24 DUP3 ADD SWAP3 DUP4 MSTORE DUP4 MLOAD PUSH1 0x44 DUP4 ADD MSTORE DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND SWAP4 PUSH4 0xFE9D9303 SWAP4 DUP8 SWAP4 DUP8 SWAP4 SWAP1 SWAP3 SWAP2 PUSH1 0x64 ADD SWAP1 PUSH1 0x20 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x8E2 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x8CA JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x90F JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP4 POP POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x92F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x943 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x96F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x979 PUSH2 0xD3D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x70A08231 DUP11 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x9CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x9DE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x9F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE SWAP2 MLOAD SWAP3 SWAP4 POP PUSH1 0x0 SWAP3 SWAP2 DUP6 AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA46 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA5A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xA70 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP PUSH32 0xAA3E88ACA472E90221DAF7D3D601ABAFB62B120319089D7A2C2F63588DA85529 DUP12 DUP12 DUP12 DUP12 DUP12 DUP12 DUP12 DUP12 DUP12 DUP12 DUP12 PUSH1 0x40 MLOAD DUP1 DUP13 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP12 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP11 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP10 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 SUB DUP4 MSTORE DUP11 DUP11 DUP3 DUP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP4 DUP3 ADD MSTORE PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP1 SWAP2 ADD DUP5 DUP2 SUB DUP4 MSTORE DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 POP DUP9 DUP9 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP4 DUP3 ADD MSTORE PUSH1 0x40 MLOAD PUSH1 0x1F SWAP1 SWAP2 ADD PUSH1 0x1F NOT AND SWAP1 SWAP3 ADD DUP3 SWAP1 SUB SWAP16 POP SWAP1 SWAP14 POP POP POP POP POP POP POP POP POP POP POP POP POP POP LOG1 POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x29965A1D PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH32 0xB281FC8C12954D22544DB45DE3159A39272895B169A852B314F9CC762E44C53B PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x44 DUP4 ADD MSTORE SWAP2 MLOAD PUSH3 0x10000 SWAP1 SWAP4 DIV SWAP1 SWAP2 AND SWAP2 PUSH4 0x29965A1D SWAP2 PUSH1 0x64 DUP1 DUP3 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xBF9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xC0D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD SWAP2 ISZERO ISZERO PUSH2 0x100 MUL PUSH2 0xFF00 NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0xC58 PUSH32 0x29DDB589B1FB5FC7CF394961C1ADF5F8C6454761ADF795E67FE149F658ABE895 DUP3 PUSH2 0xD41 JUMP JUMPDEST ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP2 EQ ISZERO PUSH2 0xC73 JUMPI PUSH2 0xC73 DUP2 PUSH2 0xCBC JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xCA1 PUSH32 0xB281FC8C12954D22544DB45DE3159A39272895B169A852B314F9CC762E44C53B DUP3 PUSH2 0xD41 JUMP JUMPDEST ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP2 EQ ISZERO PUSH2 0xC73 JUMPI PUSH2 0xC73 DUP2 PUSH2 0xB78 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x29965A1D PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH32 0x29DDB589B1FB5FC7CF394961C1ADF5F8C6454761ADF795E67FE149F658ABE895 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x44 DUP4 ADD MSTORE SWAP2 MLOAD PUSH3 0x10000 SWAP1 SWAP4 DIV SWAP1 SWAP2 AND SWAP2 PUSH4 0x29965A1D SWAP2 PUSH1 0x64 DUP1 DUP3 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xBF9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND DUP5 MSTORE SWAP2 SWAP1 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURN PUSH30 0xF225CE93DEB1DBC01858C3948CBBE393A62764AAE134D7CCA012E3F1C2A4 PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        325,
        4384
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        325,
        4384
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        325,
        4384
      ],
      "op": "MSTORE",
      "path": "57"
    },
    "5": {
      "fn": null,
      "offset": [
        325,
        4384
      ],
      "op": "CALLVALUE",
      "path": "57"
    },
    "6": {
      "fn": null,
      "offset": [
        325,
        4384
      ],
      "op": "DUP1",
      "path": "57"
    },
    "7": {
      "fn": null,
      "offset": [
        325,
        4384
      ],
      "op": "ISZERO",
      "path": "57"
    },
    "8": {
      "fn": null,
      "offset": [
        325,
        4384
      ],
      "op": "PUSH2",
      "path": "57",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        325,
        4384
      ],
      "op": "JUMPI",
      "path": "57"
    },
    "12": {
      "fn": null,
      "offset": [
        325,
        4384
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        325,
        4384
      ],
      "op": "DUP1",
      "path": "57"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        325,
        4384
      ],
      "op": "REVERT",
      "path": "57"
    },
    "16": {
      "fn": null,
      "offset": [
        325,
        4384
      ],
      "op": "JUMPDEST",
      "path": "57"
    },
    "17": {
      "fn": null,
      "offset": [
        325,
        4384
      ],
      "op": "POP",
      "path": "57"
    },
    "18": {
      "fn": null,
      "offset": [
        325,
        4384
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        325,
        4384
      ],
      "op": "CALLDATASIZE",
      "path": "57"
    },
    "21": {
      "fn": null,
      "offset": [
        325,
        4384
      ],
      "op": "LT",
      "path": "57"
    },
    "22": {
      "fn": null,
      "offset": [
        325,
        4384
      ],
      "op": "PUSH2",
      "path": "57",
      "value": "0xA8"
    },
    "25": {
      "fn": null,
      "offset": [
        325,
        4384
      ],
      "op": "JUMPI",
      "path": "57"
    },
    "26": {
      "fn": null,
      "offset": [
        325,
        4384
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        325,
        4384
      ],
      "op": "CALLDATALOAD",
      "path": "57"
    },
    "29": {
      "fn": null,
      "offset": [
        325,
        4384
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        325,
        4384
      ],
      "op": "SHR",
      "path": "57"
    },
    "32": {
      "fn": null,
      "offset": [
        325,
        4384
      ],
      "op": "DUP1",
      "path": "57"
    },
    "33": {
      "fn": null,
      "offset": [
        325,
        4384
      ],
      "op": "PUSH4",
      "path": "57",
      "value": "0x75AB9782"
    },
    "38": {
      "fn": null,
      "offset": [
        325,
        4384
      ],
      "op": "GT",
      "path": "57"
    },
    "39": {
      "fn": null,
      "offset": [
        325,
        4384
      ],
      "op": "PUSH2",
      "path": "57",
      "value": "0x71"
    },
    "42": {
      "fn": null,
      "offset": [
        325,
        4384
      ],
      "op": "JUMPI",
      "path": "57"
    },
    "43": {
      "fn": null,
      "offset": [
        325,
        4384
      ],
      "op": "DUP1",
      "path": "57"
    },
    "44": {
      "fn": null,
      "offset": [
        325,
        4384
      ],
      "op": "PUSH4",
      "path": "57",
      "value": "0x75AB9782"
    },
    "49": {
      "fn": null,
      "offset": [
        325,
        4384
      ],
      "op": "EQ",
      "path": "57"
    },
    "50": {
      "fn": null,
      "offset": [
        325,
        4384
      ],
      "op": "PUSH2",
      "path": "57",
      "value": "0x36F"
    },
    "53": {
      "fn": null,
      "offset": [
        325,
        4384
      ],
      "op": "JUMPI",
      "path": "57"
    },
    "54": {
      "fn": null,
      "offset": [
        325,
        4384
      ],
      "op": "DUP1",
      "path": "57"
    },
    "55": {
      "fn": null,
      "offset": [
        325,
        4384
      ],
      "op": "PUSH4",
      "path": "57",
      "value": "0xA8BADAA5"
    },
    "60": {
      "fn": null,
      "offset": [
        325,
        4384
      ],
      "op": "EQ",
      "path": "57"
    },
    "61": {
      "fn": null,
      "offset": [
        325,
        4384
      ],
      "op": "PUSH2",
      "path": "57",
      "value": "0x455"
    },
    "64": {
      "fn": null,
      "offset": [
        325,
        4384
      ],
      "op": "JUMPI",
      "path": "57"
    },
    "65": {
      "fn": null,
      "offset": [
        325,
        4384
      ],
      "op": "DUP1",
      "path": "57"
    },
    "66": {
      "fn": null,
      "offset": [
        325,
        4384
      ],
      "op": "PUSH4",
      "path": "57",
      "value": "0xC97E18FC"
    },
    "71": {
      "fn": null,
      "offset": [
        325,
        4384
      ],
      "op": "EQ",
      "path": "57"
    },
    "72": {
      "fn": null,
      "offset": [
        325,
        4384
      ],
      "op": "PUSH2",
      "path": "57",
      "value": "0x47B"
    },
    "75": {
      "fn": null,
      "offset": [
        325,
        4384
      ],
      "op": "JUMPI",
      "path": "57"
    },
    "76": {
      "fn": null,
      "offset": [
        325,
        4384
      ],
      "op": "DUP1",
      "path": "57"
    },
    "77": {
      "fn": null,
      "offset": [
        325,
        4384
      ],
      "op": "PUSH4",
      "path": "57",
      "value": "0xD2DE6474"
    },
    "82": {
      "fn": null,
      "offset": [
        325,
        4384
      ],
      "op": "EQ",
      "path": "57"
    },
    "83": {
      "fn": null,
      "offset": [
        325,
        4384
      ],
      "op": "PUSH2",
      "path": "57",
      "value": "0x49A"
    },
    "86": {
      "fn": null,
      "offset": [
        325,
        4384
      ],
      "op": "JUMPI",
      "path": "57"
    },
    "87": {
      "fn": null,
      "offset": [
        325,
        4384
      ],
      "op": "DUP1",
      "path": "57"
    },
    "88": {
      "fn": null,
      "offset": [
        325,
        4384
      ],
      "op": "PUSH4",
      "path": "57",
      "value": "0xE0EB2180"
    },
    "93": {
      "fn": null,
      "offset": [
        325,
        4384
      ],
      "op": "EQ",
      "path": "57"
    },
    "94": {
      "fn": null,
      "offset": [
        325,
        4384
      ],
      "op": "PUSH2",
      "path": "57",
      "value": "0x4C0"
    },
    "97": {
      "fn": null,
      "offset": [
        325,
        4384
      ],
      "op": "JUMPI",
      "path": "57"
    },
    "98": {
      "fn": null,
      "offset": [
        325,
        4384
      ],
      "op": "DUP1",
      "path": "57"
    },
    "99": {
      "fn": null,
      "offset": [
        325,
        4384
      ],
      "op": "PUSH4",
      "path": "57",
      "value": "0xE1ECBD30"
    },
    "104": {
      "fn": null,
      "offset": [
        325,
        4384
      ],
      "op": "EQ",
      "path": "57"
    },
    "105": {
      "fn": null,
      "offset": [
        325,
        4384
      ],
      "op": "PUSH2",
      "path": "57",
      "value": "0x4E6"
    },
    "108": {
      "fn": null,
      "offset": [
        325,
        4384
      ],
      "op": "JUMPI",
      "path": "57"
    },
    "109": {
      "fn": null,
      "offset": [
        325,
        4384
      ],
      "op": "PUSH2",
      "path": "57",
      "value": "0xA8"
    },
    "112": {
      "fn": null,
      "offset": [
        325,
        4384
      ],
      "op": "JUMP",
      "path": "57"
    },
    "113": {
      "fn": null,
      "offset": [
        325,
        4384
      ],
      "op": "JUMPDEST",
      "path": "57"
    },
    "114": {
      "fn": null,
      "offset": [
        325,
        4384
      ],
      "op": "DUP1",
      "path": "57"
    },
    "115": {
      "fn": null,
      "offset": [
        325,
        4384
      ],
      "op": "PUSH3",
      "path": "57",
      "value": "0x23DE29"
    },
    "119": {
      "fn": null,
      "offset": [
        325,
        4384
      ],
      "op": "EQ",
      "path": "57"
    },
    "120": {
      "fn": null,
      "offset": [
        325,
        4384
      ],
      "op": "PUSH2",
      "path": "57",
      "value": "0xAD"
    },
    "123": {
      "fn": null,
      "offset": [
        325,
        4384
      ],
      "op": "JUMPI",
      "path": "57"
    },
    "124": {
      "fn": null,
      "offset": [
        325,
        4384
      ],
      "op": "DUP1",
      "path": "57"
    },
    "125": {
      "fn": null,
      "offset": [
        325,
        4384
      ],
      "op": "PUSH4",
      "path": "57",
      "value": "0x249CB3FA"
    },
    "130": {
      "fn": null,
      "offset": [
        325,
        4384
      ],
      "op": "EQ",
      "path": "57"
    },
    "131": {
      "fn": null,
      "offset": [
        325,
        4384
      ],
      "op": "PUSH2",
      "path": "57",
      "value": "0x195"
    },
    "134": {
      "fn": null,
      "offset": [
        325,
        4384
      ],
      "op": "JUMPI",
      "path": "57"
    },
    "135": {
      "fn": null,
      "offset": [
        325,
        4384
      ],
      "op": "DUP1",
      "path": "57"
    },
    "136": {
      "fn": null,
      "offset": [
        325,
        4384
      ],
      "op": "PUSH4",
      "path": "57",
      "value": "0x3836EF89"
    },
    "141": {
      "fn": null,
      "offset": [
        325,
        4384
      ],
      "op": "EQ",
      "path": "57"
    },
    "142": {
      "fn": null,
      "offset": [
        325,
        4384
      ],
      "op": "PUSH2",
      "path": "57",
      "value": "0x1D3"
    },
    "145": {
      "fn": null,
      "offset": [
        325,
        4384
      ],
      "op": "JUMPI",
      "path": "57"
    },
    "146": {
      "fn": null,
      "offset": [
        325,
        4384
      ],
      "op": "DUP1",
      "path": "57"
    },
    "147": {
      "fn": null,
      "offset": [
        325,
        4384
      ],
      "op": "PUSH4",
      "path": "57",
      "value": "0x44D17187"
    },
    "152": {
      "fn": null,
      "offset": [
        325,
        4384
      ],
      "op": "EQ",
      "path": "57"
    },
    "153": {
      "fn": null,
      "offset": [
        325,
        4384
      ],
      "op": "PUSH2",
      "path": "57",
      "value": "0x297"
    },
    "156": {
      "fn": null,
      "offset": [
        325,
        4384
      ],
      "op": "JUMPI",
      "path": "57"
    },
    "157": {
      "fn": null,
      "offset": [
        325,
        4384
      ],
      "op": "DUP1",
      "path": "57"
    },
    "158": {
      "fn": null,
      "offset": [
        325,
        4384
      ],
      "op": "PUSH4",
      "path": "57",
      "value": "0x4E4AE5A5"
    },
    "163": {
      "fn": null,
      "offset": [
        325,
        4384
      ],
      "op": "EQ",
      "path": "57"
    },
    "164": {
      "fn": null,
      "offset": [
        325,
        4384
      ],
      "op": "PUSH2",
      "path": "57",
      "value": "0x350"
    },
    "167": {
      "fn": null,
      "offset": [
        325,
        4384
      ],
      "op": "JUMPI",
      "path": "57"
    },
    "168": {
      "fn": null,
      "offset": [
        325,
        4384
      ],
      "op": "JUMPDEST",
      "path": "57"
    },
    "169": {
      "fn": null,
      "offset": [
        325,
        4384
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x0"
    },
    "171": {
      "fn": null,
      "offset": [
        325,
        4384
      ],
      "op": "DUP1",
      "path": "57"
    },
    "172": {
      "first_revert": true,
      "fn": null,
      "offset": [
        325,
        4384
      ],
      "op": "REVERT",
      "path": "57"
    },
    "173": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2184,
        2962
      ],
      "op": "JUMPDEST",
      "path": "57"
    },
    "174": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2184,
        2962
      ],
      "op": "PUSH2",
      "path": "57",
      "value": "0x193"
    },
    "177": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2184,
        2962
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x4"
    },
    "179": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2184,
        2962
      ],
      "op": "DUP1",
      "path": "57"
    },
    "180": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2184,
        2962
      ],
      "op": "CALLDATASIZE",
      "path": "57"
    },
    "181": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2184,
        2962
      ],
      "op": "SUB",
      "path": "57"
    },
    "182": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2184,
        2962
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0xC0"
    },
    "184": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2184,
        2962
      ],
      "op": "DUP2",
      "path": "57"
    },
    "185": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2184,
        2962
      ],
      "op": "LT",
      "path": "57"
    },
    "186": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2184,
        2962
      ],
      "op": "ISZERO",
      "path": "57"
    },
    "187": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2184,
        2962
      ],
      "op": "PUSH2",
      "path": "57",
      "value": "0xC3"
    },
    "190": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2184,
        2962
      ],
      "op": "JUMPI",
      "path": "57"
    },
    "191": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2184,
        2962
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x0"
    },
    "193": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2184,
        2962
      ],
      "op": "DUP1",
      "path": "57"
    },
    "194": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2184,
        2962
      ],
      "op": "REVERT",
      "path": "57"
    },
    "195": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2184,
        2962
      ],
      "op": "JUMPDEST",
      "path": "57"
    },
    "196": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "198": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "200": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "202": {
      "op": "SHL"
    },
    "203": {
      "op": "SUB"
    },
    "204": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2184,
        2962
      ],
      "op": "DUP3",
      "path": "57"
    },
    "205": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2184,
        2962
      ],
      "op": "CALLDATALOAD",
      "path": "57"
    },
    "206": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2184,
        2962
      ],
      "op": "DUP2",
      "path": "57"
    },
    "207": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2184,
        2962
      ],
      "op": "AND",
      "path": "57"
    },
    "208": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2184,
        2962
      ],
      "op": "SWAP3",
      "path": "57"
    },
    "209": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2184,
        2962
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x20"
    },
    "211": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2184,
        2962
      ],
      "op": "DUP2",
      "path": "57"
    },
    "212": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2184,
        2962
      ],
      "op": "ADD",
      "path": "57"
    },
    "213": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2184,
        2962
      ],
      "op": "CALLDATALOAD",
      "path": "57"
    },
    "214": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2184,
        2962
      ],
      "op": "DUP3",
      "path": "57"
    },
    "215": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2184,
        2962
      ],
      "op": "AND",
      "path": "57"
    },
    "216": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2184,
        2962
      ],
      "op": "SWAP3",
      "path": "57"
    },
    "217": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2184,
        2962
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x40"
    },
    "219": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2184,
        2962
      ],
      "op": "DUP3",
      "path": "57"
    },
    "220": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2184,
        2962
      ],
      "op": "ADD",
      "path": "57"
    },
    "221": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2184,
        2962
      ],
      "op": "CALLDATALOAD",
      "path": "57"
    },
    "222": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2184,
        2962
      ],
      "op": "SWAP1",
      "path": "57"
    },
    "223": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2184,
        2962
      ],
      "op": "SWAP3",
      "path": "57"
    },
    "224": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2184,
        2962
      ],
      "op": "AND",
      "path": "57"
    },
    "225": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2184,
        2962
      ],
      "op": "SWAP2",
      "path": "57"
    },
    "226": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2184,
        2962
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x60"
    },
    "228": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2184,
        2962
      ],
      "op": "DUP3",
      "path": "57"
    },
    "229": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2184,
        2962
      ],
      "op": "ADD",
      "path": "57"
    },
    "230": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2184,
        2962
      ],
      "op": "CALLDATALOAD",
      "path": "57"
    },
    "231": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2184,
        2962
      ],
      "op": "SWAP2",
      "path": "57"
    },
    "232": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2184,
        2962
      ],
      "op": "SWAP1",
      "path": "57"
    },
    "233": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2184,
        2962
      ],
      "op": "DUP2",
      "path": "57"
    },
    "234": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2184,
        2962
      ],
      "op": "ADD",
      "path": "57"
    },
    "235": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2184,
        2962
      ],
      "op": "SWAP1",
      "path": "57"
    },
    "236": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2184,
        2962
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0xA0"
    },
    "238": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2184,
        2962
      ],
      "op": "DUP2",
      "path": "57"
    },
    "239": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2184,
        2962
      ],
      "op": "ADD",
      "path": "57"
    },
    "240": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2184,
        2962
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x80"
    },
    "242": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2184,
        2962
      ],
      "op": "DUP3",
      "path": "57"
    },
    "243": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2184,
        2962
      ],
      "op": "ADD",
      "path": "57"
    },
    "244": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2184,
        2962
      ],
      "op": "CALLDATALOAD",
      "path": "57"
    },
    "245": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "247": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "249": {
      "op": "SHL"
    },
    "250": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2184,
        2962
      ],
      "op": "DUP2",
      "path": "57"
    },
    "251": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2184,
        2962
      ],
      "op": "GT",
      "path": "57"
    },
    "252": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2184,
        2962
      ],
      "op": "ISZERO",
      "path": "57"
    },
    "253": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2184,
        2962
      ],
      "op": "PUSH2",
      "path": "57",
      "value": "0x105"
    },
    "256": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2184,
        2962
      ],
      "op": "JUMPI",
      "path": "57"
    },
    "257": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2184,
        2962
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x0"
    },
    "259": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2184,
        2962
      ],
      "op": "DUP1",
      "path": "57"
    },
    "260": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2184,
        2962
      ],
      "op": "REVERT",
      "path": "57"
    },
    "261": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2184,
        2962
      ],
      "op": "JUMPDEST",
      "path": "57"
    },
    "262": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2184,
        2962
      ],
      "op": "DUP3",
      "path": "57"
    },
    "263": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2184,
        2962
      ],
      "op": "ADD",
      "path": "57"
    },
    "264": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2184,
        2962
      ],
      "op": "DUP4",
      "path": "57"
    },
    "265": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2184,
        2962
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x20"
    },
    "267": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2184,
        2962
      ],
      "op": "DUP3",
      "path": "57"
    },
    "268": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2184,
        2962
      ],
      "op": "ADD",
      "path": "57"
    },
    "269": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2184,
        2962
      ],
      "op": "GT",
      "path": "57"
    },
    "270": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2184,
        2962
      ],
      "op": "ISZERO",
      "path": "57"
    },
    "271": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2184,
        2962
      ],
      "op": "PUSH2",
      "path": "57",
      "value": "0x117"
    },
    "274": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2184,
        2962
      ],
      "op": "JUMPI",
      "path": "57"
    },
    "275": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2184,
        2962
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x0"
    },
    "277": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2184,
        2962
      ],
      "op": "DUP1",
      "path": "57"
    },
    "278": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2184,
        2962
      ],
      "op": "REVERT",
      "path": "57"
    },
    "279": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2184,
        2962
      ],
      "op": "JUMPDEST",
      "path": "57"
    },
    "280": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2184,
        2962
      ],
      "op": "DUP1",
      "path": "57"
    },
    "281": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2184,
        2962
      ],
      "op": "CALLDATALOAD",
      "path": "57"
    },
    "282": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2184,
        2962
      ],
      "op": "SWAP1",
      "path": "57"
    },
    "283": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2184,
        2962
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x20"
    },
    "285": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2184,
        2962
      ],
      "op": "ADD",
      "path": "57"
    },
    "286": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2184,
        2962
      ],
      "op": "SWAP2",
      "path": "57"
    },
    "287": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2184,
        2962
      ],
      "op": "DUP5",
      "path": "57"
    },
    "288": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2184,
        2962
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x1"
    },
    "290": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2184,
        2962
      ],
      "op": "DUP4",
      "path": "57"
    },
    "291": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2184,
        2962
      ],
      "op": "MUL",
      "path": "57"
    },
    "292": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2184,
        2962
      ],
      "op": "DUP5",
      "path": "57"
    },
    "293": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2184,
        2962
      ],
      "op": "ADD",
      "path": "57"
    },
    "294": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2184,
        2962
      ],
      "op": "GT",
      "path": "57"
    },
    "295": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "297": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "299": {
      "op": "SHL"
    },
    "300": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2184,
        2962
      ],
      "op": "DUP4",
      "path": "57"
    },
    "301": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2184,
        2962
      ],
      "op": "GT",
      "path": "57"
    },
    "302": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2184,
        2962
      ],
      "op": "OR",
      "path": "57"
    },
    "303": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2184,
        2962
      ],
      "op": "ISZERO",
      "path": "57"
    },
    "304": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2184,
        2962
      ],
      "op": "PUSH2",
      "path": "57",
      "value": "0x138"
    },
    "307": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2184,
        2962
      ],
      "op": "JUMPI",
      "path": "57"
    },
    "308": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2184,
        2962
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x0"
    },
    "310": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2184,
        2962
      ],
      "op": "DUP1",
      "path": "57"
    },
    "311": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2184,
        2962
      ],
      "op": "REVERT",
      "path": "57"
    },
    "312": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2184,
        2962
      ],
      "op": "JUMPDEST",
      "path": "57"
    },
    "313": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2184,
        2962
      ],
      "op": "SWAP2",
      "path": "57"
    },
    "314": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2184,
        2962
      ],
      "op": "SWAP4",
      "path": "57"
    },
    "315": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2184,
        2962
      ],
      "op": "SWAP1",
      "path": "57"
    },
    "316": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2184,
        2962
      ],
      "op": "SWAP3",
      "path": "57"
    },
    "317": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2184,
        2962
      ],
      "op": "SWAP1",
      "path": "57"
    },
    "318": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2184,
        2962
      ],
      "op": "SWAP2",
      "path": "57"
    },
    "319": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2184,
        2962
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x20"
    },
    "321": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2184,
        2962
      ],
      "op": "DUP2",
      "path": "57"
    },
    "322": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2184,
        2962
      ],
      "op": "ADD",
      "path": "57"
    },
    "323": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2184,
        2962
      ],
      "op": "SWAP1",
      "path": "57"
    },
    "324": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2184,
        2962
      ],
      "op": "CALLDATALOAD",
      "path": "57"
    },
    "325": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "327": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "329": {
      "op": "SHL"
    },
    "330": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2184,
        2962
      ],
      "op": "DUP2",
      "path": "57"
    },
    "331": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2184,
        2962
      ],
      "op": "GT",
      "path": "57"
    },
    "332": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2184,
        2962
      ],
      "op": "ISZERO",
      "path": "57"
    },
    "333": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2184,
        2962
      ],
      "op": "PUSH2",
      "path": "57",
      "value": "0x155"
    },
    "336": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2184,
        2962
      ],
      "op": "JUMPI",
      "path": "57"
    },
    "337": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2184,
        2962
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x0"
    },
    "339": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2184,
        2962
      ],
      "op": "DUP1",
      "path": "57"
    },
    "340": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2184,
        2962
      ],
      "op": "REVERT",
      "path": "57"
    },
    "341": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2184,
        2962
      ],
      "op": "JUMPDEST",
      "path": "57"
    },
    "342": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2184,
        2962
      ],
      "op": "DUP3",
      "path": "57"
    },
    "343": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2184,
        2962
      ],
      "op": "ADD",
      "path": "57"
    },
    "344": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2184,
        2962
      ],
      "op": "DUP4",
      "path": "57"
    },
    "345": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2184,
        2962
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x20"
    },
    "347": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2184,
        2962
      ],
      "op": "DUP3",
      "path": "57"
    },
    "348": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2184,
        2962
      ],
      "op": "ADD",
      "path": "57"
    },
    "349": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2184,
        2962
      ],
      "op": "GT",
      "path": "57"
    },
    "350": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2184,
        2962
      ],
      "op": "ISZERO",
      "path": "57"
    },
    "351": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2184,
        2962
      ],
      "op": "PUSH2",
      "path": "57",
      "value": "0x167"
    },
    "354": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2184,
        2962
      ],
      "op": "JUMPI",
      "path": "57"
    },
    "355": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2184,
        2962
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x0"
    },
    "357": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2184,
        2962
      ],
      "op": "DUP1",
      "path": "57"
    },
    "358": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2184,
        2962
      ],
      "op": "REVERT",
      "path": "57"
    },
    "359": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2184,
        2962
      ],
      "op": "JUMPDEST",
      "path": "57"
    },
    "360": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2184,
        2962
      ],
      "op": "DUP1",
      "path": "57"
    },
    "361": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2184,
        2962
      ],
      "op": "CALLDATALOAD",
      "path": "57"
    },
    "362": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2184,
        2962
      ],
      "op": "SWAP1",
      "path": "57"
    },
    "363": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2184,
        2962
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x20"
    },
    "365": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2184,
        2962
      ],
      "op": "ADD",
      "path": "57"
    },
    "366": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2184,
        2962
      ],
      "op": "SWAP2",
      "path": "57"
    },
    "367": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2184,
        2962
      ],
      "op": "DUP5",
      "path": "57"
    },
    "368": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2184,
        2962
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x1"
    },
    "370": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2184,
        2962
      ],
      "op": "DUP4",
      "path": "57"
    },
    "371": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2184,
        2962
      ],
      "op": "MUL",
      "path": "57"
    },
    "372": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2184,
        2962
      ],
      "op": "DUP5",
      "path": "57"
    },
    "373": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2184,
        2962
      ],
      "op": "ADD",
      "path": "57"
    },
    "374": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2184,
        2962
      ],
      "op": "GT",
      "path": "57"
    },
    "375": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "377": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "379": {
      "op": "SHL"
    },
    "380": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2184,
        2962
      ],
      "op": "DUP4",
      "path": "57"
    },
    "381": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2184,
        2962
      ],
      "op": "GT",
      "path": "57"
    },
    "382": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2184,
        2962
      ],
      "op": "OR",
      "path": "57"
    },
    "383": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2184,
        2962
      ],
      "op": "ISZERO",
      "path": "57"
    },
    "384": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2184,
        2962
      ],
      "op": "PUSH2",
      "path": "57",
      "value": "0x188"
    },
    "387": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2184,
        2962
      ],
      "op": "JUMPI",
      "path": "57"
    },
    "388": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2184,
        2962
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x0"
    },
    "390": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2184,
        2962
      ],
      "op": "DUP1",
      "path": "57"
    },
    "391": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2184,
        2962
      ],
      "op": "REVERT",
      "path": "57"
    },
    "392": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2184,
        2962
      ],
      "op": "JUMPDEST",
      "path": "57"
    },
    "393": {
      "op": "POP"
    },
    "394": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2184,
        2962
      ],
      "op": "SWAP1",
      "path": "57"
    },
    "395": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2184,
        2962
      ],
      "op": "SWAP3",
      "path": "57"
    },
    "396": {
      "op": "POP"
    },
    "397": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2184,
        2962
      ],
      "op": "SWAP1",
      "path": "57"
    },
    "398": {
      "op": "POP"
    },
    "399": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2184,
        2962
      ],
      "op": "PUSH2",
      "path": "57",
      "value": "0x50C"
    },
    "402": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "jump": "i",
      "offset": [
        2184,
        2962
      ],
      "op": "JUMP",
      "path": "57"
    },
    "403": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2184,
        2962
      ],
      "op": "JUMPDEST",
      "path": "57"
    },
    "404": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2184,
        2962
      ],
      "op": "STOP",
      "path": "57"
    },
    "405": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        738,
        974
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "406": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        738,
        974
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1C1"
    },
    "409": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        738,
        974
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "411": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        738,
        974
      ],
      "op": "DUP1",
      "path": "14"
    },
    "412": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        738,
        974
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "413": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        738,
        974
      ],
      "op": "SUB",
      "path": "14"
    },
    "414": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        738,
        974
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "416": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        738,
        974
      ],
      "op": "DUP2",
      "path": "14"
    },
    "417": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        738,
        974
      ],
      "op": "LT",
      "path": "14"
    },
    "418": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        738,
        974
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "419": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        738,
        974
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1AB"
    },
    "422": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        738,
        974
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "423": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        738,
        974
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "425": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        738,
        974
      ],
      "op": "DUP1",
      "path": "14"
    },
    "426": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        738,
        974
      ],
      "op": "REVERT",
      "path": "14"
    },
    "427": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        738,
        974
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "428": {
      "op": "POP"
    },
    "429": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        738,
        974
      ],
      "op": "DUP1",
      "path": "14"
    },
    "430": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        738,
        974
      ],
      "op": "CALLDATALOAD",
      "path": "14"
    },
    "431": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        738,
        974
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "432": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        738,
        974
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "434": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        738,
        974
      ],
      "op": "ADD",
      "path": "14"
    },
    "435": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        738,
        974
      ],
      "op": "CALLDATALOAD",
      "path": "14"
    },
    "436": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "438": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "440": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "442": {
      "op": "SHL"
    },
    "443": {
      "op": "SUB"
    },
    "444": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        738,
        974
      ],
      "op": "AND",
      "path": "14"
    },
    "445": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        738,
        974
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x72A"
    },
    "448": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "jump": "i",
      "offset": [
        738,
        974
      ],
      "op": "JUMP",
      "path": "14"
    },
    "449": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        738,
        974
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "450": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        738,
        974
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "452": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        738,
        974
      ],
      "op": "DUP1",
      "path": "14"
    },
    "453": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        738,
        974
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "454": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        738,
        974
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "455": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        738,
        974
      ],
      "op": "DUP3",
      "path": "14"
    },
    "456": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        738,
        974
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "457": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        738,
        974
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "458": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        738,
        974
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "459": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        738,
        974
      ],
      "op": "DUP2",
      "path": "14"
    },
    "460": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        738,
        974
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "461": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        738,
        974
      ],
      "op": "SUB",
      "path": "14"
    },
    "462": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        738,
        974
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "464": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        738,
        974
      ],
      "op": "ADD",
      "path": "14"
    },
    "465": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        738,
        974
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "466": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        738,
        974
      ],
      "op": "RETURN",
      "path": "14"
    },
    "467": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4023,
        4264
      ],
      "op": "JUMPDEST",
      "path": "57"
    },
    "468": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4023,
        4264
      ],
      "op": "PUSH2",
      "path": "57",
      "value": "0x193"
    },
    "471": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4023,
        4264
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x4"
    },
    "473": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4023,
        4264
      ],
      "op": "DUP1",
      "path": "57"
    },
    "474": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4023,
        4264
      ],
      "op": "CALLDATASIZE",
      "path": "57"
    },
    "475": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4023,
        4264
      ],
      "op": "SUB",
      "path": "57"
    },
    "476": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4023,
        4264
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x80"
    },
    "478": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4023,
        4264
      ],
      "op": "DUP2",
      "path": "57"
    },
    "479": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4023,
        4264
      ],
      "op": "LT",
      "path": "57"
    },
    "480": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4023,
        4264
      ],
      "op": "ISZERO",
      "path": "57"
    },
    "481": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4023,
        4264
      ],
      "op": "PUSH2",
      "path": "57",
      "value": "0x1E9"
    },
    "484": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4023,
        4264
      ],
      "op": "JUMPI",
      "path": "57"
    },
    "485": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4023,
        4264
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x0"
    },
    "487": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4023,
        4264
      ],
      "op": "DUP1",
      "path": "57"
    },
    "488": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4023,
        4264
      ],
      "op": "REVERT",
      "path": "57"
    },
    "489": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4023,
        4264
      ],
      "op": "JUMPDEST",
      "path": "57"
    },
    "490": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "492": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "494": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "496": {
      "op": "SHL"
    },
    "497": {
      "op": "SUB"
    },
    "498": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4023,
        4264
      ],
      "op": "DUP3",
      "path": "57"
    },
    "499": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4023,
        4264
      ],
      "op": "CALLDATALOAD",
      "path": "57"
    },
    "500": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4023,
        4264
      ],
      "op": "DUP2",
      "path": "57"
    },
    "501": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4023,
        4264
      ],
      "op": "AND",
      "path": "57"
    },
    "502": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4023,
        4264
      ],
      "op": "SWAP3",
      "path": "57"
    },
    "503": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4023,
        4264
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x20"
    },
    "505": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4023,
        4264
      ],
      "op": "DUP2",
      "path": "57"
    },
    "506": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4023,
        4264
      ],
      "op": "ADD",
      "path": "57"
    },
    "507": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4023,
        4264
      ],
      "op": "CALLDATALOAD",
      "path": "57"
    },
    "508": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4023,
        4264
      ],
      "op": "SWAP1",
      "path": "57"
    },
    "509": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4023,
        4264
      ],
      "op": "SWAP2",
      "path": "57"
    },
    "510": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4023,
        4264
      ],
      "op": "AND",
      "path": "57"
    },
    "511": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4023,
        4264
      ],
      "op": "SWAP2",
      "path": "57"
    },
    "512": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4023,
        4264
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x40"
    },
    "514": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4023,
        4264
      ],
      "op": "DUP3",
      "path": "57"
    },
    "515": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4023,
        4264
      ],
      "op": "ADD",
      "path": "57"
    },
    "516": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4023,
        4264
      ],
      "op": "CALLDATALOAD",
      "path": "57"
    },
    "517": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4023,
        4264
      ],
      "op": "SWAP2",
      "path": "57"
    },
    "518": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4023,
        4264
      ],
      "op": "SWAP1",
      "path": "57"
    },
    "519": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4023,
        4264
      ],
      "op": "DUP2",
      "path": "57"
    },
    "520": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4023,
        4264
      ],
      "op": "ADD",
      "path": "57"
    },
    "521": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4023,
        4264
      ],
      "op": "SWAP1",
      "path": "57"
    },
    "522": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4023,
        4264
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x80"
    },
    "524": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4023,
        4264
      ],
      "op": "DUP2",
      "path": "57"
    },
    "525": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4023,
        4264
      ],
      "op": "ADD",
      "path": "57"
    },
    "526": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4023,
        4264
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x60"
    },
    "528": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4023,
        4264
      ],
      "op": "DUP3",
      "path": "57"
    },
    "529": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4023,
        4264
      ],
      "op": "ADD",
      "path": "57"
    },
    "530": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4023,
        4264
      ],
      "op": "CALLDATALOAD",
      "path": "57"
    },
    "531": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "533": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "535": {
      "op": "SHL"
    },
    "536": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4023,
        4264
      ],
      "op": "DUP2",
      "path": "57"
    },
    "537": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4023,
        4264
      ],
      "op": "GT",
      "path": "57"
    },
    "538": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4023,
        4264
      ],
      "op": "ISZERO",
      "path": "57"
    },
    "539": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4023,
        4264
      ],
      "op": "PUSH2",
      "path": "57",
      "value": "0x223"
    },
    "542": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4023,
        4264
      ],
      "op": "JUMPI",
      "path": "57"
    },
    "543": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4023,
        4264
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x0"
    },
    "545": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4023,
        4264
      ],
      "op": "DUP1",
      "path": "57"
    },
    "546": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4023,
        4264
      ],
      "op": "REVERT",
      "path": "57"
    },
    "547": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4023,
        4264
      ],
      "op": "JUMPDEST",
      "path": "57"
    },
    "548": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4023,
        4264
      ],
      "op": "DUP3",
      "path": "57"
    },
    "549": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4023,
        4264
      ],
      "op": "ADD",
      "path": "57"
    },
    "550": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4023,
        4264
      ],
      "op": "DUP4",
      "path": "57"
    },
    "551": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4023,
        4264
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x20"
    },
    "553": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4023,
        4264
      ],
      "op": "DUP3",
      "path": "57"
    },
    "554": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4023,
        4264
      ],
      "op": "ADD",
      "path": "57"
    },
    "555": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4023,
        4264
      ],
      "op": "GT",
      "path": "57"
    },
    "556": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4023,
        4264
      ],
      "op": "ISZERO",
      "path": "57"
    },
    "557": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4023,
        4264
      ],
      "op": "PUSH2",
      "path": "57",
      "value": "0x235"
    },
    "560": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4023,
        4264
      ],
      "op": "JUMPI",
      "path": "57"
    },
    "561": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4023,
        4264
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x0"
    },
    "563": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4023,
        4264
      ],
      "op": "DUP1",
      "path": "57"
    },
    "564": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4023,
        4264
      ],
      "op": "REVERT",
      "path": "57"
    },
    "565": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4023,
        4264
      ],
      "op": "JUMPDEST",
      "path": "57"
    },
    "566": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4023,
        4264
      ],
      "op": "DUP1",
      "path": "57"
    },
    "567": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4023,
        4264
      ],
      "op": "CALLDATALOAD",
      "path": "57"
    },
    "568": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4023,
        4264
      ],
      "op": "SWAP1",
      "path": "57"
    },
    "569": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4023,
        4264
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x20"
    },
    "571": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4023,
        4264
      ],
      "op": "ADD",
      "path": "57"
    },
    "572": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4023,
        4264
      ],
      "op": "SWAP2",
      "path": "57"
    },
    "573": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4023,
        4264
      ],
      "op": "DUP5",
      "path": "57"
    },
    "574": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4023,
        4264
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x1"
    },
    "576": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4023,
        4264
      ],
      "op": "DUP4",
      "path": "57"
    },
    "577": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4023,
        4264
      ],
      "op": "MUL",
      "path": "57"
    },
    "578": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4023,
        4264
      ],
      "op": "DUP5",
      "path": "57"
    },
    "579": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4023,
        4264
      ],
      "op": "ADD",
      "path": "57"
    },
    "580": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4023,
        4264
      ],
      "op": "GT",
      "path": "57"
    },
    "581": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "583": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "585": {
      "op": "SHL"
    },
    "586": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4023,
        4264
      ],
      "op": "DUP4",
      "path": "57"
    },
    "587": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4023,
        4264
      ],
      "op": "GT",
      "path": "57"
    },
    "588": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4023,
        4264
      ],
      "op": "OR",
      "path": "57"
    },
    "589": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4023,
        4264
      ],
      "op": "ISZERO",
      "path": "57"
    },
    "590": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4023,
        4264
      ],
      "op": "PUSH2",
      "path": "57",
      "value": "0x256"
    },
    "593": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4023,
        4264
      ],
      "op": "JUMPI",
      "path": "57"
    },
    "594": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4023,
        4264
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x0"
    },
    "596": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4023,
        4264
      ],
      "op": "DUP1",
      "path": "57"
    },
    "597": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4023,
        4264
      ],
      "op": "REVERT",
      "path": "57"
    },
    "598": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4023,
        4264
      ],
      "op": "JUMPDEST",
      "path": "57"
    },
    "599": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4023,
        4264
      ],
      "op": "SWAP2",
      "path": "57"
    },
    "600": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4023,
        4264
      ],
      "op": "SWAP1",
      "path": "57"
    },
    "601": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4023,
        4264
      ],
      "op": "DUP1",
      "path": "57"
    },
    "602": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4023,
        4264
      ],
      "op": "DUP1",
      "path": "57"
    },
    "603": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4023,
        4264
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x1F"
    },
    "605": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4023,
        4264
      ],
      "op": "ADD",
      "path": "57"
    },
    "606": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4023,
        4264
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x20"
    },
    "608": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4023,
        4264
      ],
      "op": "DUP1",
      "path": "57"
    },
    "609": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4023,
        4264
      ],
      "op": "SWAP2",
      "path": "57"
    },
    "610": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4023,
        4264
      ],
      "op": "DIV",
      "path": "57"
    },
    "611": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4023,
        4264
      ],
      "op": "MUL",
      "path": "57"
    },
    "612": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4023,
        4264
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x20"
    },
    "614": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4023,
        4264
      ],
      "op": "ADD",
      "path": "57"
    },
    "615": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4023,
        4264
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x40"
    },
    "617": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4023,
        4264
      ],
      "op": "MLOAD",
      "path": "57"
    },
    "618": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4023,
        4264
      ],
      "op": "SWAP1",
      "path": "57"
    },
    "619": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4023,
        4264
      ],
      "op": "DUP2",
      "path": "57"
    },
    "620": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4023,
        4264
      ],
      "op": "ADD",
      "path": "57"
    },
    "621": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4023,
        4264
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x40"
    },
    "623": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4023,
        4264
      ],
      "op": "MSTORE",
      "path": "57"
    },
    "624": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4023,
        4264
      ],
      "op": "DUP1",
      "path": "57"
    },
    "625": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4023,
        4264
      ],
      "op": "SWAP4",
      "path": "57"
    },
    "626": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4023,
        4264
      ],
      "op": "SWAP3",
      "path": "57"
    },
    "627": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4023,
        4264
      ],
      "op": "SWAP2",
      "path": "57"
    },
    "628": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4023,
        4264
      ],
      "op": "SWAP1",
      "path": "57"
    },
    "629": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4023,
        4264
      ],
      "op": "DUP2",
      "path": "57"
    },
    "630": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4023,
        4264
      ],
      "op": "DUP2",
      "path": "57"
    },
    "631": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4023,
        4264
      ],
      "op": "MSTORE",
      "path": "57"
    },
    "632": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4023,
        4264
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x20"
    },
    "634": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4023,
        4264
      ],
      "op": "ADD",
      "path": "57"
    },
    "635": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4023,
        4264
      ],
      "op": "DUP4",
      "path": "57"
    },
    "636": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4023,
        4264
      ],
      "op": "DUP4",
      "path": "57"
    },
    "637": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4023,
        4264
      ],
      "op": "DUP1",
      "path": "57"
    },
    "638": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4023,
        4264
      ],
      "op": "DUP3",
      "path": "57"
    },
    "639": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4023,
        4264
      ],
      "op": "DUP5",
      "path": "57"
    },
    "640": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4023,
        4264
      ],
      "op": "CALLDATACOPY",
      "path": "57"
    },
    "641": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4023,
        4264
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x0"
    },
    "643": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4023,
        4264
      ],
      "op": "SWAP3",
      "path": "57"
    },
    "644": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4023,
        4264
      ],
      "op": "ADD",
      "path": "57"
    },
    "645": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4023,
        4264
      ],
      "op": "SWAP2",
      "path": "57"
    },
    "646": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4023,
        4264
      ],
      "op": "SWAP1",
      "path": "57"
    },
    "647": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4023,
        4264
      ],
      "op": "SWAP2",
      "path": "57"
    },
    "648": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4023,
        4264
      ],
      "op": "MSTORE",
      "path": "57"
    },
    "649": {
      "op": "POP"
    },
    "650": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4023,
        4264
      ],
      "op": "SWAP3",
      "path": "57"
    },
    "651": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4023,
        4264
      ],
      "op": "SWAP6",
      "path": "57"
    },
    "652": {
      "op": "POP"
    },
    "653": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4023,
        4264
      ],
      "op": "PUSH2",
      "path": "57",
      "value": "0x79F"
    },
    "656": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4023,
        4264
      ],
      "op": "SWAP5",
      "path": "57"
    },
    "657": {
      "op": "POP"
    },
    "658": {
      "op": "POP"
    },
    "659": {
      "op": "POP"
    },
    "660": {
      "op": "POP"
    },
    "661": {
      "op": "POP"
    },
    "662": {
      "fn": "ERC777SenderRecipientMock.send",
      "jump": "i",
      "offset": [
        4023,
        4264
      ],
      "op": "JUMP",
      "path": "57"
    },
    "663": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4270,
        4382
      ],
      "op": "JUMPDEST",
      "path": "57"
    },
    "664": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4270,
        4382
      ],
      "op": "PUSH2",
      "path": "57",
      "value": "0x193"
    },
    "667": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4270,
        4382
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x4"
    },
    "669": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4270,
        4382
      ],
      "op": "DUP1",
      "path": "57"
    },
    "670": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4270,
        4382
      ],
      "op": "CALLDATASIZE",
      "path": "57"
    },
    "671": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4270,
        4382
      ],
      "op": "SUB",
      "path": "57"
    },
    "672": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4270,
        4382
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x60"
    },
    "674": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4270,
        4382
      ],
      "op": "DUP2",
      "path": "57"
    },
    "675": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4270,
        4382
      ],
      "op": "LT",
      "path": "57"
    },
    "676": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4270,
        4382
      ],
      "op": "ISZERO",
      "path": "57"
    },
    "677": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4270,
        4382
      ],
      "op": "PUSH2",
      "path": "57",
      "value": "0x2AD"
    },
    "680": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4270,
        4382
      ],
      "op": "JUMPI",
      "path": "57"
    },
    "681": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4270,
        4382
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x0"
    },
    "683": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4270,
        4382
      ],
      "op": "DUP1",
      "path": "57"
    },
    "684": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4270,
        4382
      ],
      "op": "REVERT",
      "path": "57"
    },
    "685": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4270,
        4382
      ],
      "op": "JUMPDEST",
      "path": "57"
    },
    "686": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "688": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "690": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "692": {
      "op": "SHL"
    },
    "693": {
      "op": "SUB"
    },
    "694": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4270,
        4382
      ],
      "op": "DUP3",
      "path": "57"
    },
    "695": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4270,
        4382
      ],
      "op": "CALLDATALOAD",
      "path": "57"
    },
    "696": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4270,
        4382
      ],
      "op": "AND",
      "path": "57"
    },
    "697": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4270,
        4382
      ],
      "op": "SWAP2",
      "path": "57"
    },
    "698": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4270,
        4382
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x20"
    },
    "700": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4270,
        4382
      ],
      "op": "DUP2",
      "path": "57"
    },
    "701": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4270,
        4382
      ],
      "op": "ADD",
      "path": "57"
    },
    "702": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4270,
        4382
      ],
      "op": "CALLDATALOAD",
      "path": "57"
    },
    "703": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4270,
        4382
      ],
      "op": "SWAP2",
      "path": "57"
    },
    "704": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4270,
        4382
      ],
      "op": "DUP2",
      "path": "57"
    },
    "705": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4270,
        4382
      ],
      "op": "ADD",
      "path": "57"
    },
    "706": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4270,
        4382
      ],
      "op": "SWAP1",
      "path": "57"
    },
    "707": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4270,
        4382
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x60"
    },
    "709": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4270,
        4382
      ],
      "op": "DUP2",
      "path": "57"
    },
    "710": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4270,
        4382
      ],
      "op": "ADD",
      "path": "57"
    },
    "711": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4270,
        4382
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x40"
    },
    "713": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4270,
        4382
      ],
      "op": "DUP3",
      "path": "57"
    },
    "714": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4270,
        4382
      ],
      "op": "ADD",
      "path": "57"
    },
    "715": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4270,
        4382
      ],
      "op": "CALLDATALOAD",
      "path": "57"
    },
    "716": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "718": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "720": {
      "op": "SHL"
    },
    "721": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4270,
        4382
      ],
      "op": "DUP2",
      "path": "57"
    },
    "722": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4270,
        4382
      ],
      "op": "GT",
      "path": "57"
    },
    "723": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4270,
        4382
      ],
      "op": "ISZERO",
      "path": "57"
    },
    "724": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4270,
        4382
      ],
      "op": "PUSH2",
      "path": "57",
      "value": "0x2DC"
    },
    "727": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4270,
        4382
      ],
      "op": "JUMPI",
      "path": "57"
    },
    "728": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4270,
        4382
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x0"
    },
    "730": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4270,
        4382
      ],
      "op": "DUP1",
      "path": "57"
    },
    "731": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4270,
        4382
      ],
      "op": "REVERT",
      "path": "57"
    },
    "732": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4270,
        4382
      ],
      "op": "JUMPDEST",
      "path": "57"
    },
    "733": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4270,
        4382
      ],
      "op": "DUP3",
      "path": "57"
    },
    "734": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4270,
        4382
      ],
      "op": "ADD",
      "path": "57"
    },
    "735": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4270,
        4382
      ],
      "op": "DUP4",
      "path": "57"
    },
    "736": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4270,
        4382
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x20"
    },
    "738": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4270,
        4382
      ],
      "op": "DUP3",
      "path": "57"
    },
    "739": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4270,
        4382
      ],
      "op": "ADD",
      "path": "57"
    },
    "740": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4270,
        4382
      ],
      "op": "GT",
      "path": "57"
    },
    "741": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4270,
        4382
      ],
      "op": "ISZERO",
      "path": "57"
    },
    "742": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4270,
        4382
      ],
      "op": "PUSH2",
      "path": "57",
      "value": "0x2EE"
    },
    "745": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4270,
        4382
      ],
      "op": "JUMPI",
      "path": "57"
    },
    "746": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4270,
        4382
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x0"
    },
    "748": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4270,
        4382
      ],
      "op": "DUP1",
      "path": "57"
    },
    "749": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4270,
        4382
      ],
      "op": "REVERT",
      "path": "57"
    },
    "750": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4270,
        4382
      ],
      "op": "JUMPDEST",
      "path": "57"
    },
    "751": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4270,
        4382
      ],
      "op": "DUP1",
      "path": "57"
    },
    "752": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4270,
        4382
      ],
      "op": "CALLDATALOAD",
      "path": "57"
    },
    "753": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4270,
        4382
      ],
      "op": "SWAP1",
      "path": "57"
    },
    "754": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4270,
        4382
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x20"
    },
    "756": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4270,
        4382
      ],
      "op": "ADD",
      "path": "57"
    },
    "757": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4270,
        4382
      ],
      "op": "SWAP2",
      "path": "57"
    },
    "758": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4270,
        4382
      ],
      "op": "DUP5",
      "path": "57"
    },
    "759": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4270,
        4382
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x1"
    },
    "761": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4270,
        4382
      ],
      "op": "DUP4",
      "path": "57"
    },
    "762": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4270,
        4382
      ],
      "op": "MUL",
      "path": "57"
    },
    "763": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4270,
        4382
      ],
      "op": "DUP5",
      "path": "57"
    },
    "764": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4270,
        4382
      ],
      "op": "ADD",
      "path": "57"
    },
    "765": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4270,
        4382
      ],
      "op": "GT",
      "path": "57"
    },
    "766": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "768": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "770": {
      "op": "SHL"
    },
    "771": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4270,
        4382
      ],
      "op": "DUP4",
      "path": "57"
    },
    "772": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4270,
        4382
      ],
      "op": "GT",
      "path": "57"
    },
    "773": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4270,
        4382
      ],
      "op": "OR",
      "path": "57"
    },
    "774": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4270,
        4382
      ],
      "op": "ISZERO",
      "path": "57"
    },
    "775": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4270,
        4382
      ],
      "op": "PUSH2",
      "path": "57",
      "value": "0x30F"
    },
    "778": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4270,
        4382
      ],
      "op": "JUMPI",
      "path": "57"
    },
    "779": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4270,
        4382
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x0"
    },
    "781": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4270,
        4382
      ],
      "op": "DUP1",
      "path": "57"
    },
    "782": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4270,
        4382
      ],
      "op": "REVERT",
      "path": "57"
    },
    "783": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4270,
        4382
      ],
      "op": "JUMPDEST",
      "path": "57"
    },
    "784": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4270,
        4382
      ],
      "op": "SWAP2",
      "path": "57"
    },
    "785": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4270,
        4382
      ],
      "op": "SWAP1",
      "path": "57"
    },
    "786": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4270,
        4382
      ],
      "op": "DUP1",
      "path": "57"
    },
    "787": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4270,
        4382
      ],
      "op": "DUP1",
      "path": "57"
    },
    "788": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4270,
        4382
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x1F"
    },
    "790": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4270,
        4382
      ],
      "op": "ADD",
      "path": "57"
    },
    "791": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4270,
        4382
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x20"
    },
    "793": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4270,
        4382
      ],
      "op": "DUP1",
      "path": "57"
    },
    "794": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4270,
        4382
      ],
      "op": "SWAP2",
      "path": "57"
    },
    "795": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4270,
        4382
      ],
      "op": "DIV",
      "path": "57"
    },
    "796": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4270,
        4382
      ],
      "op": "MUL",
      "path": "57"
    },
    "797": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4270,
        4382
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x20"
    },
    "799": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4270,
        4382
      ],
      "op": "ADD",
      "path": "57"
    },
    "800": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4270,
        4382
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x40"
    },
    "802": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4270,
        4382
      ],
      "op": "MLOAD",
      "path": "57"
    },
    "803": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4270,
        4382
      ],
      "op": "SWAP1",
      "path": "57"
    },
    "804": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4270,
        4382
      ],
      "op": "DUP2",
      "path": "57"
    },
    "805": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4270,
        4382
      ],
      "op": "ADD",
      "path": "57"
    },
    "806": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4270,
        4382
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x40"
    },
    "808": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4270,
        4382
      ],
      "op": "MSTORE",
      "path": "57"
    },
    "809": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4270,
        4382
      ],
      "op": "DUP1",
      "path": "57"
    },
    "810": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4270,
        4382
      ],
      "op": "SWAP4",
      "path": "57"
    },
    "811": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4270,
        4382
      ],
      "op": "SWAP3",
      "path": "57"
    },
    "812": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4270,
        4382
      ],
      "op": "SWAP2",
      "path": "57"
    },
    "813": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4270,
        4382
      ],
      "op": "SWAP1",
      "path": "57"
    },
    "814": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4270,
        4382
      ],
      "op": "DUP2",
      "path": "57"
    },
    "815": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4270,
        4382
      ],
      "op": "DUP2",
      "path": "57"
    },
    "816": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4270,
        4382
      ],
      "op": "MSTORE",
      "path": "57"
    },
    "817": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4270,
        4382
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x20"
    },
    "819": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4270,
        4382
      ],
      "op": "ADD",
      "path": "57"
    },
    "820": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4270,
        4382
      ],
      "op": "DUP4",
      "path": "57"
    },
    "821": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4270,
        4382
      ],
      "op": "DUP4",
      "path": "57"
    },
    "822": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4270,
        4382
      ],
      "op": "DUP1",
      "path": "57"
    },
    "823": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4270,
        4382
      ],
      "op": "DUP3",
      "path": "57"
    },
    "824": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4270,
        4382
      ],
      "op": "DUP5",
      "path": "57"
    },
    "825": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4270,
        4382
      ],
      "op": "CALLDATACOPY",
      "path": "57"
    },
    "826": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4270,
        4382
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x0"
    },
    "828": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4270,
        4382
      ],
      "op": "SWAP3",
      "path": "57"
    },
    "829": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4270,
        4382
      ],
      "op": "ADD",
      "path": "57"
    },
    "830": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4270,
        4382
      ],
      "op": "SWAP2",
      "path": "57"
    },
    "831": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4270,
        4382
      ],
      "op": "SWAP1",
      "path": "57"
    },
    "832": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4270,
        4382
      ],
      "op": "SWAP2",
      "path": "57"
    },
    "833": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4270,
        4382
      ],
      "op": "MSTORE",
      "path": "57"
    },
    "834": {
      "op": "POP"
    },
    "835": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4270,
        4382
      ],
      "op": "SWAP3",
      "path": "57"
    },
    "836": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4270,
        4382
      ],
      "op": "SWAP6",
      "path": "57"
    },
    "837": {
      "op": "POP"
    },
    "838": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4270,
        4382
      ],
      "op": "PUSH2",
      "path": "57",
      "value": "0x87E"
    },
    "841": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4270,
        4382
      ],
      "op": "SWAP5",
      "path": "57"
    },
    "842": {
      "op": "POP"
    },
    "843": {
      "op": "POP"
    },
    "844": {
      "op": "POP"
    },
    "845": {
      "op": "POP"
    },
    "846": {
      "op": "POP"
    },
    "847": {
      "fn": "ERC777SenderRecipientMock.burn",
      "jump": "i",
      "offset": [
        4270,
        4382
      ],
      "op": "JUMP",
      "path": "57"
    },
    "848": {
      "fn": "ERC777SenderRecipientMock.setShouldRevertSend",
      "offset": [
        3797,
        3901
      ],
      "op": "JUMPDEST",
      "path": "57"
    },
    "849": {
      "fn": "ERC777SenderRecipientMock.setShouldRevertSend",
      "offset": [
        3797,
        3901
      ],
      "op": "PUSH2",
      "path": "57",
      "value": "0x193"
    },
    "852": {
      "fn": "ERC777SenderRecipientMock.setShouldRevertSend",
      "offset": [
        3797,
        3901
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x4"
    },
    "854": {
      "fn": "ERC777SenderRecipientMock.setShouldRevertSend",
      "offset": [
        3797,
        3901
      ],
      "op": "DUP1",
      "path": "57"
    },
    "855": {
      "fn": "ERC777SenderRecipientMock.setShouldRevertSend",
      "offset": [
        3797,
        3901
      ],
      "op": "CALLDATASIZE",
      "path": "57"
    },
    "856": {
      "fn": "ERC777SenderRecipientMock.setShouldRevertSend",
      "offset": [
        3797,
        3901
      ],
      "op": "SUB",
      "path": "57"
    },
    "857": {
      "fn": "ERC777SenderRecipientMock.setShouldRevertSend",
      "offset": [
        3797,
        3901
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x20"
    },
    "859": {
      "fn": "ERC777SenderRecipientMock.setShouldRevertSend",
      "offset": [
        3797,
        3901
      ],
      "op": "DUP2",
      "path": "57"
    },
    "860": {
      "fn": "ERC777SenderRecipientMock.setShouldRevertSend",
      "offset": [
        3797,
        3901
      ],
      "op": "LT",
      "path": "57"
    },
    "861": {
      "fn": "ERC777SenderRecipientMock.setShouldRevertSend",
      "offset": [
        3797,
        3901
      ],
      "op": "ISZERO",
      "path": "57"
    },
    "862": {
      "fn": "ERC777SenderRecipientMock.setShouldRevertSend",
      "offset": [
        3797,
        3901
      ],
      "op": "PUSH2",
      "path": "57",
      "value": "0x366"
    },
    "865": {
      "fn": "ERC777SenderRecipientMock.setShouldRevertSend",
      "offset": [
        3797,
        3901
      ],
      "op": "JUMPI",
      "path": "57"
    },
    "866": {
      "fn": "ERC777SenderRecipientMock.setShouldRevertSend",
      "offset": [
        3797,
        3901
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x0"
    },
    "868": {
      "fn": "ERC777SenderRecipientMock.setShouldRevertSend",
      "offset": [
        3797,
        3901
      ],
      "op": "DUP1",
      "path": "57"
    },
    "869": {
      "fn": "ERC777SenderRecipientMock.setShouldRevertSend",
      "offset": [
        3797,
        3901
      ],
      "op": "REVERT",
      "path": "57"
    },
    "870": {
      "fn": "ERC777SenderRecipientMock.setShouldRevertSend",
      "offset": [
        3797,
        3901
      ],
      "op": "JUMPDEST",
      "path": "57"
    },
    "871": {
      "op": "POP"
    },
    "872": {
      "fn": "ERC777SenderRecipientMock.setShouldRevertSend",
      "offset": [
        3797,
        3901
      ],
      "op": "CALLDATALOAD",
      "path": "57"
    },
    "873": {
      "fn": "ERC777SenderRecipientMock.setShouldRevertSend",
      "offset": [
        3797,
        3901
      ],
      "op": "ISZERO",
      "path": "57"
    },
    "874": {
      "fn": "ERC777SenderRecipientMock.setShouldRevertSend",
      "offset": [
        3797,
        3901
      ],
      "op": "ISZERO",
      "path": "57"
    },
    "875": {
      "fn": "ERC777SenderRecipientMock.setShouldRevertSend",
      "offset": [
        3797,
        3901
      ],
      "op": "PUSH2",
      "path": "57",
      "value": "0x94C"
    },
    "878": {
      "fn": "ERC777SenderRecipientMock.setShouldRevertSend",
      "jump": "i",
      "offset": [
        3797,
        3901
      ],
      "op": "JUMP",
      "path": "57"
    },
    "879": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1407,
        2178
      ],
      "op": "JUMPDEST",
      "path": "57"
    },
    "880": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1407,
        2178
      ],
      "op": "PUSH2",
      "path": "57",
      "value": "0x193"
    },
    "883": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1407,
        2178
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x4"
    },
    "885": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1407,
        2178
      ],
      "op": "DUP1",
      "path": "57"
    },
    "886": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1407,
        2178
      ],
      "op": "CALLDATASIZE",
      "path": "57"
    },
    "887": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1407,
        2178
      ],
      "op": "SUB",
      "path": "57"
    },
    "888": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1407,
        2178
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0xC0"
    },
    "890": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1407,
        2178
      ],
      "op": "DUP2",
      "path": "57"
    },
    "891": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1407,
        2178
      ],
      "op": "LT",
      "path": "57"
    },
    "892": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1407,
        2178
      ],
      "op": "ISZERO",
      "path": "57"
    },
    "893": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1407,
        2178
      ],
      "op": "PUSH2",
      "path": "57",
      "value": "0x385"
    },
    "896": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1407,
        2178
      ],
      "op": "JUMPI",
      "path": "57"
    },
    "897": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1407,
        2178
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x0"
    },
    "899": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1407,
        2178
      ],
      "op": "DUP1",
      "path": "57"
    },
    "900": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1407,
        2178
      ],
      "op": "REVERT",
      "path": "57"
    },
    "901": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1407,
        2178
      ],
      "op": "JUMPDEST",
      "path": "57"
    },
    "902": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "904": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "906": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "908": {
      "op": "SHL"
    },
    "909": {
      "op": "SUB"
    },
    "910": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1407,
        2178
      ],
      "op": "DUP3",
      "path": "57"
    },
    "911": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1407,
        2178
      ],
      "op": "CALLDATALOAD",
      "path": "57"
    },
    "912": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1407,
        2178
      ],
      "op": "DUP2",
      "path": "57"
    },
    "913": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1407,
        2178
      ],
      "op": "AND",
      "path": "57"
    },
    "914": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1407,
        2178
      ],
      "op": "SWAP3",
      "path": "57"
    },
    "915": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1407,
        2178
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x20"
    },
    "917": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1407,
        2178
      ],
      "op": "DUP2",
      "path": "57"
    },
    "918": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1407,
        2178
      ],
      "op": "ADD",
      "path": "57"
    },
    "919": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1407,
        2178
      ],
      "op": "CALLDATALOAD",
      "path": "57"
    },
    "920": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1407,
        2178
      ],
      "op": "DUP3",
      "path": "57"
    },
    "921": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1407,
        2178
      ],
      "op": "AND",
      "path": "57"
    },
    "922": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1407,
        2178
      ],
      "op": "SWAP3",
      "path": "57"
    },
    "923": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1407,
        2178
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x40"
    },
    "925": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1407,
        2178
      ],
      "op": "DUP3",
      "path": "57"
    },
    "926": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1407,
        2178
      ],
      "op": "ADD",
      "path": "57"
    },
    "927": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1407,
        2178
      ],
      "op": "CALLDATALOAD",
      "path": "57"
    },
    "928": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1407,
        2178
      ],
      "op": "SWAP1",
      "path": "57"
    },
    "929": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1407,
        2178
      ],
      "op": "SWAP3",
      "path": "57"
    },
    "930": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1407,
        2178
      ],
      "op": "AND",
      "path": "57"
    },
    "931": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1407,
        2178
      ],
      "op": "SWAP2",
      "path": "57"
    },
    "932": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1407,
        2178
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x60"
    },
    "934": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1407,
        2178
      ],
      "op": "DUP3",
      "path": "57"
    },
    "935": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1407,
        2178
      ],
      "op": "ADD",
      "path": "57"
    },
    "936": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1407,
        2178
      ],
      "op": "CALLDATALOAD",
      "path": "57"
    },
    "937": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1407,
        2178
      ],
      "op": "SWAP2",
      "path": "57"
    },
    "938": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1407,
        2178
      ],
      "op": "SWAP1",
      "path": "57"
    },
    "939": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1407,
        2178
      ],
      "op": "DUP2",
      "path": "57"
    },
    "940": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1407,
        2178
      ],
      "op": "ADD",
      "path": "57"
    },
    "941": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1407,
        2178
      ],
      "op": "SWAP1",
      "path": "57"
    },
    "942": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1407,
        2178
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0xA0"
    },
    "944": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1407,
        2178
      ],
      "op": "DUP2",
      "path": "57"
    },
    "945": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1407,
        2178
      ],
      "op": "ADD",
      "path": "57"
    },
    "946": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1407,
        2178
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x80"
    },
    "948": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1407,
        2178
      ],
      "op": "DUP3",
      "path": "57"
    },
    "949": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1407,
        2178
      ],
      "op": "ADD",
      "path": "57"
    },
    "950": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1407,
        2178
      ],
      "op": "CALLDATALOAD",
      "path": "57"
    },
    "951": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "953": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "955": {
      "op": "SHL"
    },
    "956": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1407,
        2178
      ],
      "op": "DUP2",
      "path": "57"
    },
    "957": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1407,
        2178
      ],
      "op": "GT",
      "path": "57"
    },
    "958": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1407,
        2178
      ],
      "op": "ISZERO",
      "path": "57"
    },
    "959": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1407,
        2178
      ],
      "op": "PUSH2",
      "path": "57",
      "value": "0x3C7"
    },
    "962": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1407,
        2178
      ],
      "op": "JUMPI",
      "path": "57"
    },
    "963": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1407,
        2178
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x0"
    },
    "965": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1407,
        2178
      ],
      "op": "DUP1",
      "path": "57"
    },
    "966": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1407,
        2178
      ],
      "op": "REVERT",
      "path": "57"
    },
    "967": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1407,
        2178
      ],
      "op": "JUMPDEST",
      "path": "57"
    },
    "968": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1407,
        2178
      ],
      "op": "DUP3",
      "path": "57"
    },
    "969": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1407,
        2178
      ],
      "op": "ADD",
      "path": "57"
    },
    "970": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1407,
        2178
      ],
      "op": "DUP4",
      "path": "57"
    },
    "971": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1407,
        2178
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x20"
    },
    "973": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1407,
        2178
      ],
      "op": "DUP3",
      "path": "57"
    },
    "974": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1407,
        2178
      ],
      "op": "ADD",
      "path": "57"
    },
    "975": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1407,
        2178
      ],
      "op": "GT",
      "path": "57"
    },
    "976": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1407,
        2178
      ],
      "op": "ISZERO",
      "path": "57"
    },
    "977": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1407,
        2178
      ],
      "op": "PUSH2",
      "path": "57",
      "value": "0x3D9"
    },
    "980": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1407,
        2178
      ],
      "op": "JUMPI",
      "path": "57"
    },
    "981": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1407,
        2178
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x0"
    },
    "983": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1407,
        2178
      ],
      "op": "DUP1",
      "path": "57"
    },
    "984": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1407,
        2178
      ],
      "op": "REVERT",
      "path": "57"
    },
    "985": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1407,
        2178
      ],
      "op": "JUMPDEST",
      "path": "57"
    },
    "986": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1407,
        2178
      ],
      "op": "DUP1",
      "path": "57"
    },
    "987": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1407,
        2178
      ],
      "op": "CALLDATALOAD",
      "path": "57"
    },
    "988": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1407,
        2178
      ],
      "op": "SWAP1",
      "path": "57"
    },
    "989": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1407,
        2178
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x20"
    },
    "991": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1407,
        2178
      ],
      "op": "ADD",
      "path": "57"
    },
    "992": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1407,
        2178
      ],
      "op": "SWAP2",
      "path": "57"
    },
    "993": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1407,
        2178
      ],
      "op": "DUP5",
      "path": "57"
    },
    "994": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1407,
        2178
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x1"
    },
    "996": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1407,
        2178
      ],
      "op": "DUP4",
      "path": "57"
    },
    "997": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1407,
        2178
      ],
      "op": "MUL",
      "path": "57"
    },
    "998": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1407,
        2178
      ],
      "op": "DUP5",
      "path": "57"
    },
    "999": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1407,
        2178
      ],
      "op": "ADD",
      "path": "57"
    },
    "1000": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1407,
        2178
      ],
      "op": "GT",
      "path": "57"
    },
    "1001": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1003": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1005": {
      "op": "SHL"
    },
    "1006": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1407,
        2178
      ],
      "op": "DUP4",
      "path": "57"
    },
    "1007": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1407,
        2178
      ],
      "op": "GT",
      "path": "57"
    },
    "1008": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1407,
        2178
      ],
      "op": "OR",
      "path": "57"
    },
    "1009": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1407,
        2178
      ],
      "op": "ISZERO",
      "path": "57"
    },
    "1010": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1407,
        2178
      ],
      "op": "PUSH2",
      "path": "57",
      "value": "0x3FA"
    },
    "1013": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1407,
        2178
      ],
      "op": "JUMPI",
      "path": "57"
    },
    "1014": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1407,
        2178
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x0"
    },
    "1016": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1407,
        2178
      ],
      "op": "DUP1",
      "path": "57"
    },
    "1017": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1407,
        2178
      ],
      "op": "REVERT",
      "path": "57"
    },
    "1018": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1407,
        2178
      ],
      "op": "JUMPDEST",
      "path": "57"
    },
    "1019": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1407,
        2178
      ],
      "op": "SWAP2",
      "path": "57"
    },
    "1020": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1407,
        2178
      ],
      "op": "SWAP4",
      "path": "57"
    },
    "1021": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1407,
        2178
      ],
      "op": "SWAP1",
      "path": "57"
    },
    "1022": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1407,
        2178
      ],
      "op": "SWAP3",
      "path": "57"
    },
    "1023": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1407,
        2178
      ],
      "op": "SWAP1",
      "path": "57"
    },
    "1024": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1407,
        2178
      ],
      "op": "SWAP2",
      "path": "57"
    },
    "1025": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1407,
        2178
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x20"
    },
    "1027": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1407,
        2178
      ],
      "op": "DUP2",
      "path": "57"
    },
    "1028": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1407,
        2178
      ],
      "op": "ADD",
      "path": "57"
    },
    "1029": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1407,
        2178
      ],
      "op": "SWAP1",
      "path": "57"
    },
    "1030": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1407,
        2178
      ],
      "op": "CALLDATALOAD",
      "path": "57"
    },
    "1031": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1033": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1035": {
      "op": "SHL"
    },
    "1036": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1407,
        2178
      ],
      "op": "DUP2",
      "path": "57"
    },
    "1037": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1407,
        2178
      ],
      "op": "GT",
      "path": "57"
    },
    "1038": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1407,
        2178
      ],
      "op": "ISZERO",
      "path": "57"
    },
    "1039": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1407,
        2178
      ],
      "op": "PUSH2",
      "path": "57",
      "value": "0x417"
    },
    "1042": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1407,
        2178
      ],
      "op": "JUMPI",
      "path": "57"
    },
    "1043": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1407,
        2178
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x0"
    },
    "1045": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1407,
        2178
      ],
      "op": "DUP1",
      "path": "57"
    },
    "1046": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1407,
        2178
      ],
      "op": "REVERT",
      "path": "57"
    },
    "1047": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1407,
        2178
      ],
      "op": "JUMPDEST",
      "path": "57"
    },
    "1048": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1407,
        2178
      ],
      "op": "DUP3",
      "path": "57"
    },
    "1049": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1407,
        2178
      ],
      "op": "ADD",
      "path": "57"
    },
    "1050": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1407,
        2178
      ],
      "op": "DUP4",
      "path": "57"
    },
    "1051": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1407,
        2178
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x20"
    },
    "1053": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1407,
        2178
      ],
      "op": "DUP3",
      "path": "57"
    },
    "1054": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1407,
        2178
      ],
      "op": "ADD",
      "path": "57"
    },
    "1055": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1407,
        2178
      ],
      "op": "GT",
      "path": "57"
    },
    "1056": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1407,
        2178
      ],
      "op": "ISZERO",
      "path": "57"
    },
    "1057": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1407,
        2178
      ],
      "op": "PUSH2",
      "path": "57",
      "value": "0x429"
    },
    "1060": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1407,
        2178
      ],
      "op": "JUMPI",
      "path": "57"
    },
    "1061": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1407,
        2178
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x0"
    },
    "1063": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1407,
        2178
      ],
      "op": "DUP1",
      "path": "57"
    },
    "1064": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1407,
        2178
      ],
      "op": "REVERT",
      "path": "57"
    },
    "1065": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1407,
        2178
      ],
      "op": "JUMPDEST",
      "path": "57"
    },
    "1066": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1407,
        2178
      ],
      "op": "DUP1",
      "path": "57"
    },
    "1067": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1407,
        2178
      ],
      "op": "CALLDATALOAD",
      "path": "57"
    },
    "1068": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1407,
        2178
      ],
      "op": "SWAP1",
      "path": "57"
    },
    "1069": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1407,
        2178
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x20"
    },
    "1071": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1407,
        2178
      ],
      "op": "ADD",
      "path": "57"
    },
    "1072": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1407,
        2178
      ],
      "op": "SWAP2",
      "path": "57"
    },
    "1073": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1407,
        2178
      ],
      "op": "DUP5",
      "path": "57"
    },
    "1074": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1407,
        2178
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x1"
    },
    "1076": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1407,
        2178
      ],
      "op": "DUP4",
      "path": "57"
    },
    "1077": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1407,
        2178
      ],
      "op": "MUL",
      "path": "57"
    },
    "1078": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1407,
        2178
      ],
      "op": "DUP5",
      "path": "57"
    },
    "1079": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1407,
        2178
      ],
      "op": "ADD",
      "path": "57"
    },
    "1080": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1407,
        2178
      ],
      "op": "GT",
      "path": "57"
    },
    "1081": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1083": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1085": {
      "op": "SHL"
    },
    "1086": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1407,
        2178
      ],
      "op": "DUP4",
      "path": "57"
    },
    "1087": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1407,
        2178
      ],
      "op": "GT",
      "path": "57"
    },
    "1088": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1407,
        2178
      ],
      "op": "OR",
      "path": "57"
    },
    "1089": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1407,
        2178
      ],
      "op": "ISZERO",
      "path": "57"
    },
    "1090": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1407,
        2178
      ],
      "op": "PUSH2",
      "path": "57",
      "value": "0x44A"
    },
    "1093": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1407,
        2178
      ],
      "op": "JUMPI",
      "path": "57"
    },
    "1094": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1407,
        2178
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x0"
    },
    "1096": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1407,
        2178
      ],
      "op": "DUP1",
      "path": "57"
    },
    "1097": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1407,
        2178
      ],
      "op": "REVERT",
      "path": "57"
    },
    "1098": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1407,
        2178
      ],
      "op": "JUMPDEST",
      "path": "57"
    },
    "1099": {
      "op": "POP"
    },
    "1100": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1407,
        2178
      ],
      "op": "SWAP1",
      "path": "57"
    },
    "1101": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1407,
        2178
      ],
      "op": "SWAP3",
      "path": "57"
    },
    "1102": {
      "op": "POP"
    },
    "1103": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1407,
        2178
      ],
      "op": "SWAP1",
      "path": "57"
    },
    "1104": {
      "op": "POP"
    },
    "1105": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1407,
        2178
      ],
      "op": "PUSH2",
      "path": "57",
      "value": "0x95F"
    },
    "1108": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "jump": "i",
      "offset": [
        1407,
        2178
      ],
      "op": "JUMP",
      "path": "57"
    },
    "1109": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3629,
        3791
      ],
      "op": "JUMPDEST",
      "path": "57"
    },
    "1110": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3629,
        3791
      ],
      "op": "PUSH2",
      "path": "57",
      "value": "0x193"
    },
    "1113": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3629,
        3791
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x4"
    },
    "1115": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3629,
        3791
      ],
      "op": "DUP1",
      "path": "57"
    },
    "1116": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3629,
        3791
      ],
      "op": "CALLDATASIZE",
      "path": "57"
    },
    "1117": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3629,
        3791
      ],
      "op": "SUB",
      "path": "57"
    },
    "1118": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3629,
        3791
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x20"
    },
    "1120": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3629,
        3791
      ],
      "op": "DUP2",
      "path": "57"
    },
    "1121": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3629,
        3791
      ],
      "op": "LT",
      "path": "57"
    },
    "1122": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3629,
        3791
      ],
      "op": "ISZERO",
      "path": "57"
    },
    "1123": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3629,
        3791
      ],
      "op": "PUSH2",
      "path": "57",
      "value": "0x46B"
    },
    "1126": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3629,
        3791
      ],
      "op": "JUMPI",
      "path": "57"
    },
    "1127": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3629,
        3791
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x0"
    },
    "1129": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3629,
        3791
      ],
      "op": "DUP1",
      "path": "57"
    },
    "1130": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3629,
        3791
      ],
      "op": "REVERT",
      "path": "57"
    },
    "1131": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3629,
        3791
      ],
      "op": "JUMPDEST",
      "path": "57"
    },
    "1132": {
      "op": "POP"
    },
    "1133": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3629,
        3791
      ],
      "op": "CALLDATALOAD",
      "path": "57"
    },
    "1134": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1136": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1138": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1140": {
      "op": "SHL"
    },
    "1141": {
      "op": "SUB"
    },
    "1142": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3629,
        3791
      ],
      "op": "AND",
      "path": "57"
    },
    "1143": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3629,
        3791
      ],
      "op": "PUSH2",
      "path": "57",
      "value": "0xB78"
    },
    "1146": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "jump": "i",
      "offset": [
        3629,
        3791
      ],
      "op": "JUMP",
      "path": "57"
    },
    "1147": {
      "fn": "ERC777SenderRecipientMock.setShouldRevertReceive",
      "offset": [
        3907,
        4017
      ],
      "op": "JUMPDEST",
      "path": "57"
    },
    "1148": {
      "fn": "ERC777SenderRecipientMock.setShouldRevertReceive",
      "offset": [
        3907,
        4017
      ],
      "op": "PUSH2",
      "path": "57",
      "value": "0x193"
    },
    "1151": {
      "fn": "ERC777SenderRecipientMock.setShouldRevertReceive",
      "offset": [
        3907,
        4017
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x4"
    },
    "1153": {
      "fn": "ERC777SenderRecipientMock.setShouldRevertReceive",
      "offset": [
        3907,
        4017
      ],
      "op": "DUP1",
      "path": "57"
    },
    "1154": {
      "fn": "ERC777SenderRecipientMock.setShouldRevertReceive",
      "offset": [
        3907,
        4017
      ],
      "op": "CALLDATASIZE",
      "path": "57"
    },
    "1155": {
      "fn": "ERC777SenderRecipientMock.setShouldRevertReceive",
      "offset": [
        3907,
        4017
      ],
      "op": "SUB",
      "path": "57"
    },
    "1156": {
      "fn": "ERC777SenderRecipientMock.setShouldRevertReceive",
      "offset": [
        3907,
        4017
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x20"
    },
    "1158": {
      "fn": "ERC777SenderRecipientMock.setShouldRevertReceive",
      "offset": [
        3907,
        4017
      ],
      "op": "DUP2",
      "path": "57"
    },
    "1159": {
      "fn": "ERC777SenderRecipientMock.setShouldRevertReceive",
      "offset": [
        3907,
        4017
      ],
      "op": "LT",
      "path": "57"
    },
    "1160": {
      "fn": "ERC777SenderRecipientMock.setShouldRevertReceive",
      "offset": [
        3907,
        4017
      ],
      "op": "ISZERO",
      "path": "57"
    },
    "1161": {
      "fn": "ERC777SenderRecipientMock.setShouldRevertReceive",
      "offset": [
        3907,
        4017
      ],
      "op": "PUSH2",
      "path": "57",
      "value": "0x491"
    },
    "1164": {
      "fn": "ERC777SenderRecipientMock.setShouldRevertReceive",
      "offset": [
        3907,
        4017
      ],
      "op": "JUMPI",
      "path": "57"
    },
    "1165": {
      "fn": "ERC777SenderRecipientMock.setShouldRevertReceive",
      "offset": [
        3907,
        4017
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x0"
    },
    "1167": {
      "fn": "ERC777SenderRecipientMock.setShouldRevertReceive",
      "offset": [
        3907,
        4017
      ],
      "op": "DUP1",
      "path": "57"
    },
    "1168": {
      "fn": "ERC777SenderRecipientMock.setShouldRevertReceive",
      "offset": [
        3907,
        4017
      ],
      "op": "REVERT",
      "path": "57"
    },
    "1169": {
      "fn": "ERC777SenderRecipientMock.setShouldRevertReceive",
      "offset": [
        3907,
        4017
      ],
      "op": "JUMPDEST",
      "path": "57"
    },
    "1170": {
      "op": "POP"
    },
    "1171": {
      "fn": "ERC777SenderRecipientMock.setShouldRevertReceive",
      "offset": [
        3907,
        4017
      ],
      "op": "CALLDATALOAD",
      "path": "57"
    },
    "1172": {
      "fn": "ERC777SenderRecipientMock.setShouldRevertReceive",
      "offset": [
        3907,
        4017
      ],
      "op": "ISZERO",
      "path": "57"
    },
    "1173": {
      "fn": "ERC777SenderRecipientMock.setShouldRevertReceive",
      "offset": [
        3907,
        4017
      ],
      "op": "ISZERO",
      "path": "57"
    },
    "1174": {
      "fn": "ERC777SenderRecipientMock.setShouldRevertReceive",
      "offset": [
        3907,
        4017
      ],
      "op": "PUSH2",
      "path": "57",
      "value": "0xC14"
    },
    "1177": {
      "fn": "ERC777SenderRecipientMock.setShouldRevertReceive",
      "jump": "i",
      "offset": [
        3907,
        4017
      ],
      "op": "JUMP",
      "path": "57"
    },
    "1178": {
      "fn": "ERC777SenderRecipientMock.senderFor",
      "offset": [
        2968,
        3210
      ],
      "op": "JUMPDEST",
      "path": "57"
    },
    "1179": {
      "fn": "ERC777SenderRecipientMock.senderFor",
      "offset": [
        2968,
        3210
      ],
      "op": "PUSH2",
      "path": "57",
      "value": "0x193"
    },
    "1182": {
      "fn": "ERC777SenderRecipientMock.senderFor",
      "offset": [
        2968,
        3210
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x4"
    },
    "1184": {
      "fn": "ERC777SenderRecipientMock.senderFor",
      "offset": [
        2968,
        3210
      ],
      "op": "DUP1",
      "path": "57"
    },
    "1185": {
      "fn": "ERC777SenderRecipientMock.senderFor",
      "offset": [
        2968,
        3210
      ],
      "op": "CALLDATASIZE",
      "path": "57"
    },
    "1186": {
      "fn": "ERC777SenderRecipientMock.senderFor",
      "offset": [
        2968,
        3210
      ],
      "op": "SUB",
      "path": "57"
    },
    "1187": {
      "fn": "ERC777SenderRecipientMock.senderFor",
      "offset": [
        2968,
        3210
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x20"
    },
    "1189": {
      "fn": "ERC777SenderRecipientMock.senderFor",
      "offset": [
        2968,
        3210
      ],
      "op": "DUP2",
      "path": "57"
    },
    "1190": {
      "fn": "ERC777SenderRecipientMock.senderFor",
      "offset": [
        2968,
        3210
      ],
      "op": "LT",
      "path": "57"
    },
    "1191": {
      "fn": "ERC777SenderRecipientMock.senderFor",
      "offset": [
        2968,
        3210
      ],
      "op": "ISZERO",
      "path": "57"
    },
    "1192": {
      "fn": "ERC777SenderRecipientMock.senderFor",
      "offset": [
        2968,
        3210
      ],
      "op": "PUSH2",
      "path": "57",
      "value": "0x4B0"
    },
    "1195": {
      "fn": "ERC777SenderRecipientMock.senderFor",
      "offset": [
        2968,
        3210
      ],
      "op": "JUMPI",
      "path": "57"
    },
    "1196": {
      "fn": "ERC777SenderRecipientMock.senderFor",
      "offset": [
        2968,
        3210
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x0"
    },
    "1198": {
      "fn": "ERC777SenderRecipientMock.senderFor",
      "offset": [
        2968,
        3210
      ],
      "op": "DUP1",
      "path": "57"
    },
    "1199": {
      "fn": "ERC777SenderRecipientMock.senderFor",
      "offset": [
        2968,
        3210
      ],
      "op": "REVERT",
      "path": "57"
    },
    "1200": {
      "fn": "ERC777SenderRecipientMock.senderFor",
      "offset": [
        2968,
        3210
      ],
      "op": "JUMPDEST",
      "path": "57"
    },
    "1201": {
      "op": "POP"
    },
    "1202": {
      "fn": "ERC777SenderRecipientMock.senderFor",
      "offset": [
        2968,
        3210
      ],
      "op": "CALLDATALOAD",
      "path": "57"
    },
    "1203": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1205": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1207": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1209": {
      "op": "SHL"
    },
    "1210": {
      "op": "SUB"
    },
    "1211": {
      "fn": "ERC777SenderRecipientMock.senderFor",
      "offset": [
        2968,
        3210
      ],
      "op": "AND",
      "path": "57"
    },
    "1212": {
      "fn": "ERC777SenderRecipientMock.senderFor",
      "offset": [
        2968,
        3210
      ],
      "op": "PUSH2",
      "path": "57",
      "value": "0xC2E"
    },
    "1215": {
      "fn": "ERC777SenderRecipientMock.senderFor",
      "jump": "i",
      "offset": [
        2968,
        3210
      ],
      "op": "JUMP",
      "path": "57"
    },
    "1216": {
      "fn": "ERC777SenderRecipientMock.recipientFor",
      "offset": [
        3372,
        3623
      ],
      "op": "JUMPDEST",
      "path": "57"
    },
    "1217": {
      "fn": "ERC777SenderRecipientMock.recipientFor",
      "offset": [
        3372,
        3623
      ],
      "op": "PUSH2",
      "path": "57",
      "value": "0x193"
    },
    "1220": {
      "fn": "ERC777SenderRecipientMock.recipientFor",
      "offset": [
        3372,
        3623
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x4"
    },
    "1222": {
      "fn": "ERC777SenderRecipientMock.recipientFor",
      "offset": [
        3372,
        3623
      ],
      "op": "DUP1",
      "path": "57"
    },
    "1223": {
      "fn": "ERC777SenderRecipientMock.recipientFor",
      "offset": [
        3372,
        3623
      ],
      "op": "CALLDATASIZE",
      "path": "57"
    },
    "1224": {
      "fn": "ERC777SenderRecipientMock.recipientFor",
      "offset": [
        3372,
        3623
      ],
      "op": "SUB",
      "path": "57"
    },
    "1225": {
      "fn": "ERC777SenderRecipientMock.recipientFor",
      "offset": [
        3372,
        3623
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x20"
    },
    "1227": {
      "fn": "ERC777SenderRecipientMock.recipientFor",
      "offset": [
        3372,
        3623
      ],
      "op": "DUP2",
      "path": "57"
    },
    "1228": {
      "fn": "ERC777SenderRecipientMock.recipientFor",
      "offset": [
        3372,
        3623
      ],
      "op": "LT",
      "path": "57"
    },
    "1229": {
      "fn": "ERC777SenderRecipientMock.recipientFor",
      "offset": [
        3372,
        3623
      ],
      "op": "ISZERO",
      "path": "57"
    },
    "1230": {
      "fn": "ERC777SenderRecipientMock.recipientFor",
      "offset": [
        3372,
        3623
      ],
      "op": "PUSH2",
      "path": "57",
      "value": "0x4D6"
    },
    "1233": {
      "fn": "ERC777SenderRecipientMock.recipientFor",
      "offset": [
        3372,
        3623
      ],
      "op": "JUMPI",
      "path": "57"
    },
    "1234": {
      "fn": "ERC777SenderRecipientMock.recipientFor",
      "offset": [
        3372,
        3623
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x0"
    },
    "1236": {
      "fn": "ERC777SenderRecipientMock.recipientFor",
      "offset": [
        3372,
        3623
      ],
      "op": "DUP1",
      "path": "57"
    },
    "1237": {
      "fn": "ERC777SenderRecipientMock.recipientFor",
      "offset": [
        3372,
        3623
      ],
      "op": "REVERT",
      "path": "57"
    },
    "1238": {
      "fn": "ERC777SenderRecipientMock.recipientFor",
      "offset": [
        3372,
        3623
      ],
      "op": "JUMPDEST",
      "path": "57"
    },
    "1239": {
      "op": "POP"
    },
    "1240": {
      "fn": "ERC777SenderRecipientMock.recipientFor",
      "offset": [
        3372,
        3623
      ],
      "op": "CALLDATALOAD",
      "path": "57"
    },
    "1241": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1243": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1245": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1247": {
      "op": "SHL"
    },
    "1248": {
      "op": "SUB"
    },
    "1249": {
      "fn": "ERC777SenderRecipientMock.recipientFor",
      "offset": [
        3372,
        3623
      ],
      "op": "AND",
      "path": "57"
    },
    "1250": {
      "fn": "ERC777SenderRecipientMock.recipientFor",
      "offset": [
        3372,
        3623
      ],
      "op": "PUSH2",
      "path": "57",
      "value": "0xC77"
    },
    "1253": {
      "fn": "ERC777SenderRecipientMock.recipientFor",
      "jump": "i",
      "offset": [
        3372,
        3623
      ],
      "op": "JUMP",
      "path": "57"
    },
    "1254": {
      "fn": "ERC777SenderRecipientMock.registerSender",
      "offset": [
        3216,
        3366
      ],
      "op": "JUMPDEST",
      "path": "57"
    },
    "1255": {
      "fn": "ERC777SenderRecipientMock.registerSender",
      "offset": [
        3216,
        3366
      ],
      "op": "PUSH2",
      "path": "57",
      "value": "0x193"
    },
    "1258": {
      "fn": "ERC777SenderRecipientMock.registerSender",
      "offset": [
        3216,
        3366
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x4"
    },
    "1260": {
      "fn": "ERC777SenderRecipientMock.registerSender",
      "offset": [
        3216,
        3366
      ],
      "op": "DUP1",
      "path": "57"
    },
    "1261": {
      "fn": "ERC777SenderRecipientMock.registerSender",
      "offset": [
        3216,
        3366
      ],
      "op": "CALLDATASIZE",
      "path": "57"
    },
    "1262": {
      "fn": "ERC777SenderRecipientMock.registerSender",
      "offset": [
        3216,
        3366
      ],
      "op": "SUB",
      "path": "57"
    },
    "1263": {
      "fn": "ERC777SenderRecipientMock.registerSender",
      "offset": [
        3216,
        3366
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x20"
    },
    "1265": {
      "fn": "ERC777SenderRecipientMock.registerSender",
      "offset": [
        3216,
        3366
      ],
      "op": "DUP2",
      "path": "57"
    },
    "1266": {
      "fn": "ERC777SenderRecipientMock.registerSender",
      "offset": [
        3216,
        3366
      ],
      "op": "LT",
      "path": "57"
    },
    "1267": {
      "fn": "ERC777SenderRecipientMock.registerSender",
      "offset": [
        3216,
        3366
      ],
      "op": "ISZERO",
      "path": "57"
    },
    "1268": {
      "fn": "ERC777SenderRecipientMock.registerSender",
      "offset": [
        3216,
        3366
      ],
      "op": "PUSH2",
      "path": "57",
      "value": "0x4FC"
    },
    "1271": {
      "fn": "ERC777SenderRecipientMock.registerSender",
      "offset": [
        3216,
        3366
      ],
      "op": "JUMPI",
      "path": "57"
    },
    "1272": {
      "fn": "ERC777SenderRecipientMock.registerSender",
      "offset": [
        3216,
        3366
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x0"
    },
    "1274": {
      "fn": "ERC777SenderRecipientMock.registerSender",
      "offset": [
        3216,
        3366
      ],
      "op": "DUP1",
      "path": "57"
    },
    "1275": {
      "fn": "ERC777SenderRecipientMock.registerSender",
      "offset": [
        3216,
        3366
      ],
      "op": "REVERT",
      "path": "57"
    },
    "1276": {
      "fn": "ERC777SenderRecipientMock.registerSender",
      "offset": [
        3216,
        3366
      ],
      "op": "JUMPDEST",
      "path": "57"
    },
    "1277": {
      "op": "POP"
    },
    "1278": {
      "fn": "ERC777SenderRecipientMock.registerSender",
      "offset": [
        3216,
        3366
      ],
      "op": "CALLDATALOAD",
      "path": "57"
    },
    "1279": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1281": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1283": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1285": {
      "op": "SHL"
    },
    "1286": {
      "op": "SUB"
    },
    "1287": {
      "fn": "ERC777SenderRecipientMock.registerSender",
      "offset": [
        3216,
        3366
      ],
      "op": "AND",
      "path": "57"
    },
    "1288": {
      "fn": "ERC777SenderRecipientMock.registerSender",
      "offset": [
        3216,
        3366
      ],
      "op": "PUSH2",
      "path": "57",
      "value": "0xCBC"
    },
    "1291": {
      "fn": "ERC777SenderRecipientMock.registerSender",
      "jump": "i",
      "offset": [
        3216,
        3366
      ],
      "op": "JUMP",
      "path": "57"
    },
    "1292": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2184,
        2962
      ],
      "op": "JUMPDEST",
      "path": "57"
    },
    "1293": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2408,
        2428
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x1"
    },
    "1295": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2408,
        2428
      ],
      "op": "SLOAD",
      "path": "57"
    },
    "1296": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2408,
        2428
      ],
      "op": "PUSH2",
      "path": "57",
      "value": "0x100"
    },
    "1299": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2408,
        2428
      ],
      "op": "SWAP1",
      "path": "57"
    },
    "1300": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2408,
        2428
      ],
      "op": "DIV",
      "path": "57"
    },
    "1301": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2408,
        2428
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0xFF"
    },
    "1303": {
      "branch": 17,
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2408,
        2428
      ],
      "op": "AND",
      "path": "57"
    },
    "1304": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2404,
        2463
      ],
      "op": "ISZERO",
      "path": "57"
    },
    "1305": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2404,
        2463
      ],
      "op": "PUSH2",
      "path": "57",
      "value": "0x521"
    },
    "1308": {
      "branch": 17,
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2404,
        2463
      ],
      "op": "JUMPI",
      "path": "57"
    },
    "1309": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2444,
        2452
      ],
      "op": "PUSH1",
      "path": "57",
      "statement": 0,
      "value": "0x0"
    },
    "1311": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2444,
        2452
      ],
      "op": "DUP1",
      "path": "57"
    },
    "1312": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2444,
        2452
      ],
      "op": "REVERT",
      "path": "57"
    },
    "1313": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2404,
        2463
      ],
      "op": "JUMPDEST",
      "path": "57"
    },
    "1314": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2473,
        2486
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x0"
    },
    "1316": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2497,
        2509
      ],
      "op": "PUSH2",
      "path": "57",
      "value": "0x52B"
    },
    "1319": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2497,
        2507
      ],
      "op": "PUSH2",
      "path": "57",
      "value": "0xD3D"
    },
    "1322": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "jump": "i",
      "offset": [
        2497,
        2509
      ],
      "op": "JUMP",
      "path": "57"
    },
    "1323": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2497,
        2509
      ],
      "op": "JUMPDEST",
      "path": "57"
    },
    "1324": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2473,
        2510
      ],
      "op": "SWAP1",
      "path": "57"
    },
    "1325": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2473,
        2510
      ],
      "op": "POP",
      "path": "57"
    },
    "1326": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2521,
        2540
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x0"
    },
    "1328": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2543,
        2548
      ],
      "op": "DUP2",
      "path": "57"
    },
    "1329": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1331": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1333": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1335": {
      "op": "SHL"
    },
    "1336": {
      "op": "SUB"
    },
    "1337": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2543,
        2558
      ],
      "op": "AND",
      "path": "57"
    },
    "1338": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2543,
        2558
      ],
      "op": "PUSH4",
      "path": "57",
      "value": "0x70A08231"
    },
    "1343": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2559,
        2563
      ],
      "op": "DUP11",
      "path": "57"
    },
    "1344": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2543,
        2564
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x40"
    },
    "1346": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2543,
        2564
      ],
      "op": "MLOAD",
      "path": "57"
    },
    "1347": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2543,
        2564
      ],
      "op": "DUP3",
      "path": "57"
    },
    "1348": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2543,
        2564
      ],
      "op": "PUSH4",
      "path": "57",
      "value": "0xFFFFFFFF"
    },
    "1353": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2543,
        2564
      ],
      "op": "AND",
      "path": "57"
    },
    "1354": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2543,
        2564
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0xE0"
    },
    "1356": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2543,
        2564
      ],
      "op": "SHL",
      "path": "57"
    },
    "1357": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2543,
        2564
      ],
      "op": "DUP2",
      "path": "57"
    },
    "1358": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2543,
        2564
      ],
      "op": "MSTORE",
      "path": "57"
    },
    "1359": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2543,
        2564
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x4"
    },
    "1361": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2543,
        2564
      ],
      "op": "ADD",
      "path": "57"
    },
    "1362": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2543,
        2564
      ],
      "op": "DUP1",
      "path": "57"
    },
    "1363": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2543,
        2564
      ],
      "op": "DUP3",
      "path": "57"
    },
    "1364": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1366": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1368": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1370": {
      "op": "SHL"
    },
    "1371": {
      "op": "SUB"
    },
    "1372": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2543,
        2564
      ],
      "op": "AND",
      "path": "57"
    },
    "1373": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2543,
        2564
      ],
      "op": "DUP2",
      "path": "57"
    },
    "1374": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2543,
        2564
      ],
      "op": "MSTORE",
      "path": "57"
    },
    "1375": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2543,
        2564
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x20"
    },
    "1377": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2543,
        2564
      ],
      "op": "ADD",
      "path": "57"
    },
    "1378": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2543,
        2564
      ],
      "op": "SWAP2",
      "path": "57"
    },
    "1379": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2543,
        2564
      ],
      "op": "POP",
      "path": "57"
    },
    "1380": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2543,
        2564
      ],
      "op": "POP",
      "path": "57"
    },
    "1381": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2543,
        2564
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x20"
    },
    "1383": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2543,
        2564
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x40"
    },
    "1385": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2543,
        2564
      ],
      "op": "MLOAD",
      "path": "57"
    },
    "1386": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2543,
        2564
      ],
      "op": "DUP1",
      "path": "57"
    },
    "1387": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2543,
        2564
      ],
      "op": "DUP4",
      "path": "57"
    },
    "1388": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2543,
        2564
      ],
      "op": "SUB",
      "path": "57"
    },
    "1389": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2543,
        2564
      ],
      "op": "DUP2",
      "path": "57"
    },
    "1390": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2543,
        2564
      ],
      "op": "DUP7",
      "path": "57"
    },
    "1391": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2543,
        2564
      ],
      "op": "DUP1",
      "path": "57"
    },
    "1392": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2543,
        2564
      ],
      "op": "EXTCODESIZE",
      "path": "57"
    },
    "1393": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2543,
        2564
      ],
      "op": "ISZERO",
      "path": "57"
    },
    "1394": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2543,
        2564
      ],
      "op": "DUP1",
      "path": "57"
    },
    "1395": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2543,
        2564
      ],
      "op": "ISZERO",
      "path": "57"
    },
    "1396": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2543,
        2564
      ],
      "op": "PUSH2",
      "path": "57",
      "value": "0x57C"
    },
    "1399": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2543,
        2564
      ],
      "op": "JUMPI",
      "path": "57"
    },
    "1400": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2543,
        2564
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x0"
    },
    "1402": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2543,
        2564
      ],
      "op": "DUP1",
      "path": "57"
    },
    "1403": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2543,
        2564
      ],
      "op": "REVERT",
      "path": "57"
    },
    "1404": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2543,
        2564
      ],
      "op": "JUMPDEST",
      "path": "57"
    },
    "1405": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2543,
        2564
      ],
      "op": "POP",
      "path": "57"
    },
    "1406": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2543,
        2564
      ],
      "op": "GAS",
      "path": "57"
    },
    "1407": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2543,
        2564
      ],
      "op": "STATICCALL",
      "path": "57"
    },
    "1408": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2543,
        2564
      ],
      "op": "ISZERO",
      "path": "57"
    },
    "1409": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2543,
        2564
      ],
      "op": "DUP1",
      "path": "57"
    },
    "1410": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2543,
        2564
      ],
      "op": "ISZERO",
      "path": "57"
    },
    "1411": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2543,
        2564
      ],
      "op": "PUSH2",
      "path": "57",
      "value": "0x590"
    },
    "1414": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2543,
        2564
      ],
      "op": "JUMPI",
      "path": "57"
    },
    "1415": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2543,
        2564
      ],
      "op": "RETURNDATASIZE",
      "path": "57"
    },
    "1416": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2543,
        2564
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x0"
    },
    "1418": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2543,
        2564
      ],
      "op": "DUP1",
      "path": "57"
    },
    "1419": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2543,
        2564
      ],
      "op": "RETURNDATACOPY",
      "path": "57"
    },
    "1420": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2543,
        2564
      ],
      "op": "RETURNDATASIZE",
      "path": "57"
    },
    "1421": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2543,
        2564
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x0"
    },
    "1423": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2543,
        2564
      ],
      "op": "REVERT",
      "path": "57"
    },
    "1424": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2543,
        2564
      ],
      "op": "JUMPDEST",
      "path": "57"
    },
    "1425": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2543,
        2564
      ],
      "op": "POP",
      "path": "57"
    },
    "1426": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2543,
        2564
      ],
      "op": "POP",
      "path": "57"
    },
    "1427": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2543,
        2564
      ],
      "op": "POP",
      "path": "57"
    },
    "1428": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2543,
        2564
      ],
      "op": "POP",
      "path": "57"
    },
    "1429": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2543,
        2564
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x40"
    },
    "1431": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2543,
        2564
      ],
      "op": "MLOAD",
      "path": "57"
    },
    "1432": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2543,
        2564
      ],
      "op": "RETURNDATASIZE",
      "path": "57"
    },
    "1433": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2543,
        2564
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x20"
    },
    "1435": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2543,
        2564
      ],
      "op": "DUP2",
      "path": "57"
    },
    "1436": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2543,
        2564
      ],
      "op": "LT",
      "path": "57"
    },
    "1437": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2543,
        2564
      ],
      "op": "ISZERO",
      "path": "57"
    },
    "1438": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2543,
        2564
      ],
      "op": "PUSH2",
      "path": "57",
      "value": "0x5A6"
    },
    "1441": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2543,
        2564
      ],
      "op": "JUMPI",
      "path": "57"
    },
    "1442": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2543,
        2564
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x0"
    },
    "1444": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2543,
        2564
      ],
      "op": "DUP1",
      "path": "57"
    },
    "1445": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2543,
        2564
      ],
      "op": "REVERT",
      "path": "57"
    },
    "1446": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2543,
        2564
      ],
      "op": "JUMPDEST",
      "path": "57"
    },
    "1447": {
      "op": "POP"
    },
    "1448": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2543,
        2564
      ],
      "op": "MLOAD",
      "path": "57"
    },
    "1449": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2690,
        2709
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x40"
    },
    "1451": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2690,
        2709
      ],
      "op": "DUP1",
      "path": "57"
    },
    "1452": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2690,
        2709
      ],
      "op": "MLOAD",
      "path": "57"
    },
    "1453": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "1458": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1460": {
      "op": "SHL"
    },
    "1461": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2690,
        2709
      ],
      "op": "DUP2",
      "path": "57"
    },
    "1462": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2690,
        2709
      ],
      "op": "MSTORE",
      "path": "57"
    },
    "1463": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1465": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1467": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1469": {
      "op": "SHL"
    },
    "1470": {
      "op": "SUB"
    },
    "1471": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2690,
        2709
      ],
      "op": "DUP12",
      "path": "57"
    },
    "1472": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2690,
        2709
      ],
      "op": "DUP2",
      "path": "57"
    },
    "1473": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2690,
        2709
      ],
      "op": "AND",
      "path": "57"
    },
    "1474": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2690,
        2709
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x4"
    },
    "1476": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2690,
        2709
      ],
      "op": "DUP4",
      "path": "57"
    },
    "1477": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2690,
        2709
      ],
      "op": "ADD",
      "path": "57"
    },
    "1478": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2690,
        2709
      ],
      "op": "MSTORE",
      "path": "57"
    },
    "1479": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2690,
        2709
      ],
      "op": "SWAP2",
      "path": "57"
    },
    "1480": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2690,
        2709
      ],
      "op": "MLOAD",
      "path": "57"
    },
    "1481": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2543,
        2564
      ],
      "op": "SWAP3",
      "path": "57"
    },
    "1482": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2543,
        2564
      ],
      "op": "SWAP4",
      "path": "57"
    },
    "1483": {
      "op": "POP"
    },
    "1484": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2670,
        2687
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x0"
    },
    "1486": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2670,
        2687
      ],
      "op": "SWAP3",
      "path": "57"
    },
    "1487": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2690,
        2705
      ],
      "op": "SWAP2",
      "path": "57"
    },
    "1488": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2690,
        2705
      ],
      "op": "DUP6",
      "path": "57"
    },
    "1489": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2690,
        2705
      ],
      "op": "AND",
      "path": "57"
    },
    "1490": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2690,
        2705
      ],
      "op": "SWAP2",
      "path": "57"
    },
    "1491": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2690,
        2705
      ],
      "op": "PUSH4",
      "path": "57",
      "value": "0x70A08231"
    },
    "1496": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2690,
        2705
      ],
      "op": "SWAP2",
      "path": "57"
    },
    "1497": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2690,
        2709
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x24"
    },
    "1499": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2690,
        2709
      ],
      "op": "DUP1",
      "path": "57"
    },
    "1500": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2690,
        2709
      ],
      "op": "DUP3",
      "path": "57"
    },
    "1501": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2690,
        2709
      ],
      "op": "ADD",
      "path": "57"
    },
    "1502": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2690,
        2709
      ],
      "op": "SWAP3",
      "path": "57"
    },
    "1503": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2543,
        2564
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x20"
    },
    "1505": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2543,
        2564
      ],
      "op": "SWAP3",
      "path": "57"
    },
    "1506": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2690,
        2709
      ],
      "op": "SWAP1",
      "path": "57"
    },
    "1507": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2690,
        2709
      ],
      "op": "SWAP2",
      "path": "57"
    },
    "1508": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2690,
        2709
      ],
      "op": "SWAP1",
      "path": "57"
    },
    "1509": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2690,
        2709
      ],
      "op": "DUP3",
      "path": "57"
    },
    "1510": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2690,
        2709
      ],
      "op": "SWAP1",
      "path": "57"
    },
    "1511": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2690,
        2709
      ],
      "op": "SUB",
      "path": "57"
    },
    "1512": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2690,
        2709
      ],
      "op": "ADD",
      "path": "57"
    },
    "1513": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2690,
        2709
      ],
      "op": "DUP2",
      "path": "57"
    },
    "1514": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2690,
        2705
      ],
      "op": "DUP7",
      "path": "57"
    },
    "1515": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2690,
        2709
      ],
      "op": "DUP1",
      "path": "57"
    },
    "1516": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2690,
        2709
      ],
      "op": "EXTCODESIZE",
      "path": "57"
    },
    "1517": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2690,
        2709
      ],
      "op": "ISZERO",
      "path": "57"
    },
    "1518": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2690,
        2709
      ],
      "op": "DUP1",
      "path": "57"
    },
    "1519": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2690,
        2709
      ],
      "op": "ISZERO",
      "path": "57"
    },
    "1520": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2690,
        2709
      ],
      "op": "PUSH2",
      "path": "57",
      "value": "0x5F8"
    },
    "1523": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2690,
        2709
      ],
      "op": "JUMPI",
      "path": "57"
    },
    "1524": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2690,
        2709
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x0"
    },
    "1526": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2690,
        2709
      ],
      "op": "DUP1",
      "path": "57"
    },
    "1527": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2690,
        2709
      ],
      "op": "REVERT",
      "path": "57"
    },
    "1528": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2690,
        2709
      ],
      "op": "JUMPDEST",
      "path": "57"
    },
    "1529": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2690,
        2709
      ],
      "op": "POP",
      "path": "57"
    },
    "1530": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2690,
        2709
      ],
      "op": "GAS",
      "path": "57"
    },
    "1531": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2690,
        2709
      ],
      "op": "STATICCALL",
      "path": "57"
    },
    "1532": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2690,
        2709
      ],
      "op": "ISZERO",
      "path": "57"
    },
    "1533": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2690,
        2709
      ],
      "op": "DUP1",
      "path": "57"
    },
    "1534": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2690,
        2709
      ],
      "op": "ISZERO",
      "path": "57"
    },
    "1535": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2690,
        2709
      ],
      "op": "PUSH2",
      "path": "57",
      "value": "0x60C"
    },
    "1538": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2690,
        2709
      ],
      "op": "JUMPI",
      "path": "57"
    },
    "1539": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2690,
        2709
      ],
      "op": "RETURNDATASIZE",
      "path": "57"
    },
    "1540": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2690,
        2709
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x0"
    },
    "1542": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2690,
        2709
      ],
      "op": "DUP1",
      "path": "57"
    },
    "1543": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2690,
        2709
      ],
      "op": "RETURNDATACOPY",
      "path": "57"
    },
    "1544": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2690,
        2709
      ],
      "op": "RETURNDATASIZE",
      "path": "57"
    },
    "1545": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2690,
        2709
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x0"
    },
    "1547": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2690,
        2709
      ],
      "op": "REVERT",
      "path": "57"
    },
    "1548": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2690,
        2709
      ],
      "op": "JUMPDEST",
      "path": "57"
    },
    "1549": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2690,
        2709
      ],
      "op": "POP",
      "path": "57"
    },
    "1550": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2690,
        2709
      ],
      "op": "POP",
      "path": "57"
    },
    "1551": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2690,
        2709
      ],
      "op": "POP",
      "path": "57"
    },
    "1552": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2690,
        2709
      ],
      "op": "POP",
      "path": "57"
    },
    "1553": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2690,
        2709
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x40"
    },
    "1555": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2690,
        2709
      ],
      "op": "MLOAD",
      "path": "57"
    },
    "1556": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2690,
        2709
      ],
      "op": "RETURNDATASIZE",
      "path": "57"
    },
    "1557": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2690,
        2709
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x20"
    },
    "1559": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2690,
        2709
      ],
      "op": "DUP2",
      "path": "57"
    },
    "1560": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2690,
        2709
      ],
      "op": "LT",
      "path": "57"
    },
    "1561": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2690,
        2709
      ],
      "op": "ISZERO",
      "path": "57"
    },
    "1562": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2690,
        2709
      ],
      "op": "PUSH2",
      "path": "57",
      "value": "0x622"
    },
    "1565": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2690,
        2709
      ],
      "op": "JUMPI",
      "path": "57"
    },
    "1566": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2690,
        2709
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x0"
    },
    "1568": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2690,
        2709
      ],
      "op": "DUP1",
      "path": "57"
    },
    "1569": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2690,
        2709
      ],
      "op": "REVERT",
      "path": "57"
    },
    "1570": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2690,
        2709
      ],
      "op": "JUMPDEST",
      "path": "57"
    },
    "1571": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2690,
        2709
      ],
      "op": "DUP2",
      "path": "57"
    },
    "1572": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2690,
        2709
      ],
      "op": "ADD",
      "path": "57"
    },
    "1573": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2690,
        2709
      ],
      "op": "SWAP1",
      "path": "57"
    },
    "1574": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2690,
        2709
      ],
      "op": "DUP1",
      "path": "57"
    },
    "1575": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2690,
        2709
      ],
      "op": "DUP1",
      "path": "57"
    },
    "1576": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2690,
        2709
      ],
      "op": "MLOAD",
      "path": "57"
    },
    "1577": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2690,
        2709
      ],
      "op": "SWAP1",
      "path": "57"
    },
    "1578": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2690,
        2709
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x20"
    },
    "1580": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2690,
        2709
      ],
      "op": "ADD",
      "path": "57"
    },
    "1581": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2690,
        2709
      ],
      "op": "SWAP1",
      "path": "57"
    },
    "1582": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2690,
        2709
      ],
      "op": "SWAP3",
      "path": "57"
    },
    "1583": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2690,
        2709
      ],
      "op": "SWAP2",
      "path": "57"
    },
    "1584": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2690,
        2709
      ],
      "op": "SWAP1",
      "path": "57"
    },
    "1585": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2690,
        2709
      ],
      "op": "POP",
      "path": "57"
    },
    "1586": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2690,
        2709
      ],
      "op": "POP",
      "path": "57"
    },
    "1587": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2690,
        2709
      ],
      "op": "POP",
      "path": "57"
    },
    "1588": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2670,
        2709
      ],
      "op": "SWAP1",
      "path": "57"
    },
    "1589": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2670,
        2709
      ],
      "op": "POP",
      "path": "57"
    },
    "1590": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2725,
        2955
      ],
      "op": "PUSH32",
      "path": "57",
      "statement": 1,
      "value": "0x47E915878C47F3EC4D7FF646A2BECB229F64FD2ABE4D2B5E2BB4275B0CF50D4E"
    },
    "1623": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2759,
        2767
      ],
      "op": "DUP12",
      "path": "57"
    },
    "1624": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2781,
        2785
      ],
      "op": "DUP12",
      "path": "57"
    },
    "1625": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2799,
        2801
      ],
      "op": "DUP12",
      "path": "57"
    },
    "1626": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2815,
        2821
      ],
      "op": "DUP12",
      "path": "57"
    },
    "1627": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2835,
        2843
      ],
      "op": "DUP12",
      "path": "57"
    },
    "1628": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2835,
        2843
      ],
      "op": "DUP12",
      "path": "57"
    },
    "1629": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2857,
        2869
      ],
      "op": "DUP12",
      "path": "57"
    },
    "1630": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2857,
        2869
      ],
      "op": "DUP12",
      "path": "57"
    },
    "1631": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2891,
        2896
      ],
      "op": "DUP12",
      "path": "57"
    },
    "1632": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2911,
        2922
      ],
      "op": "DUP12",
      "path": "57"
    },
    "1633": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2936,
        2945
      ],
      "op": "DUP12",
      "path": "57"
    },
    "1634": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2725,
        2955
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x40"
    },
    "1636": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2725,
        2955
      ],
      "op": "MLOAD",
      "path": "57"
    },
    "1637": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2725,
        2955
      ],
      "op": "DUP1",
      "path": "57"
    },
    "1638": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2725,
        2955
      ],
      "op": "DUP13",
      "path": "57"
    },
    "1639": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1641": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1643": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1645": {
      "op": "SHL"
    },
    "1646": {
      "op": "SUB"
    },
    "1647": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2725,
        2955
      ],
      "op": "AND",
      "path": "57"
    },
    "1648": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2725,
        2955
      ],
      "op": "DUP2",
      "path": "57"
    },
    "1649": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2725,
        2955
      ],
      "op": "MSTORE",
      "path": "57"
    },
    "1650": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2725,
        2955
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x20"
    },
    "1652": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2725,
        2955
      ],
      "op": "ADD",
      "path": "57"
    },
    "1653": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2725,
        2955
      ],
      "op": "DUP12",
      "path": "57"
    },
    "1654": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1656": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1658": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1660": {
      "op": "SHL"
    },
    "1661": {
      "op": "SUB"
    },
    "1662": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2725,
        2955
      ],
      "op": "AND",
      "path": "57"
    },
    "1663": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2725,
        2955
      ],
      "op": "DUP2",
      "path": "57"
    },
    "1664": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2725,
        2955
      ],
      "op": "MSTORE",
      "path": "57"
    },
    "1665": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2725,
        2955
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x20"
    },
    "1667": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2725,
        2955
      ],
      "op": "ADD",
      "path": "57"
    },
    "1668": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2725,
        2955
      ],
      "op": "DUP11",
      "path": "57"
    },
    "1669": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1671": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1673": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1675": {
      "op": "SHL"
    },
    "1676": {
      "op": "SUB"
    },
    "1677": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2725,
        2955
      ],
      "op": "AND",
      "path": "57"
    },
    "1678": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2725,
        2955
      ],
      "op": "DUP2",
      "path": "57"
    },
    "1679": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2725,
        2955
      ],
      "op": "MSTORE",
      "path": "57"
    },
    "1680": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2725,
        2955
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x20"
    },
    "1682": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2725,
        2955
      ],
      "op": "ADD",
      "path": "57"
    },
    "1683": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2725,
        2955
      ],
      "op": "DUP10",
      "path": "57"
    },
    "1684": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2725,
        2955
      ],
      "op": "DUP2",
      "path": "57"
    },
    "1685": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2725,
        2955
      ],
      "op": "MSTORE",
      "path": "57"
    },
    "1686": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2725,
        2955
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x20"
    },
    "1688": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2725,
        2955
      ],
      "op": "ADD",
      "path": "57"
    },
    "1689": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2725,
        2955
      ],
      "op": "DUP1",
      "path": "57"
    },
    "1690": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2725,
        2955
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x20"
    },
    "1692": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2725,
        2955
      ],
      "op": "ADD",
      "path": "57"
    },
    "1693": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2725,
        2955
      ],
      "op": "DUP1",
      "path": "57"
    },
    "1694": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2725,
        2955
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x20"
    },
    "1696": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2725,
        2955
      ],
      "op": "ADD",
      "path": "57"
    },
    "1697": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2725,
        2955
      ],
      "op": "DUP7",
      "path": "57"
    },
    "1698": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1700": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1702": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1704": {
      "op": "SHL"
    },
    "1705": {
      "op": "SUB"
    },
    "1706": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2725,
        2955
      ],
      "op": "AND",
      "path": "57"
    },
    "1707": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2725,
        2955
      ],
      "op": "DUP2",
      "path": "57"
    },
    "1708": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2725,
        2955
      ],
      "op": "MSTORE",
      "path": "57"
    },
    "1709": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2725,
        2955
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x20"
    },
    "1711": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2725,
        2955
      ],
      "op": "ADD",
      "path": "57"
    },
    "1712": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2725,
        2955
      ],
      "op": "DUP6",
      "path": "57"
    },
    "1713": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2725,
        2955
      ],
      "op": "DUP2",
      "path": "57"
    },
    "1714": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2725,
        2955
      ],
      "op": "MSTORE",
      "path": "57"
    },
    "1715": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2725,
        2955
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x20"
    },
    "1717": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2725,
        2955
      ],
      "op": "ADD",
      "path": "57"
    },
    "1718": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2725,
        2955
      ],
      "op": "DUP5",
      "path": "57"
    },
    "1719": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2725,
        2955
      ],
      "op": "DUP2",
      "path": "57"
    },
    "1720": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2725,
        2955
      ],
      "op": "MSTORE",
      "path": "57"
    },
    "1721": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2725,
        2955
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x20"
    },
    "1723": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2725,
        2955
      ],
      "op": "ADD",
      "path": "57"
    },
    "1724": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2725,
        2955
      ],
      "op": "DUP4",
      "path": "57"
    },
    "1725": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2725,
        2955
      ],
      "op": "DUP2",
      "path": "57"
    },
    "1726": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2725,
        2955
      ],
      "op": "SUB",
      "path": "57"
    },
    "1727": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2725,
        2955
      ],
      "op": "DUP4",
      "path": "57"
    },
    "1728": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2725,
        2955
      ],
      "op": "MSTORE",
      "path": "57"
    },
    "1729": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2725,
        2955
      ],
      "op": "DUP11",
      "path": "57"
    },
    "1730": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2725,
        2955
      ],
      "op": "DUP11",
      "path": "57"
    },
    "1731": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2725,
        2955
      ],
      "op": "DUP3",
      "path": "57"
    },
    "1732": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2725,
        2955
      ],
      "op": "DUP2",
      "path": "57"
    },
    "1733": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2725,
        2955
      ],
      "op": "DUP2",
      "path": "57"
    },
    "1734": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2725,
        2955
      ],
      "op": "MSTORE",
      "path": "57"
    },
    "1735": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2725,
        2955
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x20"
    },
    "1737": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2725,
        2955
      ],
      "op": "ADD",
      "path": "57"
    },
    "1738": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2725,
        2955
      ],
      "op": "SWAP3",
      "path": "57"
    },
    "1739": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2725,
        2955
      ],
      "op": "POP",
      "path": "57"
    },
    "1740": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2725,
        2955
      ],
      "op": "DUP1",
      "path": "57"
    },
    "1741": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2725,
        2955
      ],
      "op": "DUP3",
      "path": "57"
    },
    "1742": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2725,
        2955
      ],
      "op": "DUP5",
      "path": "57"
    },
    "1743": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2725,
        2955
      ],
      "op": "CALLDATACOPY",
      "path": "57"
    },
    "1744": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2725,
        2955
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x0"
    },
    "1746": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2725,
        2955
      ],
      "op": "DUP4",
      "path": "57"
    },
    "1747": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2725,
        2955
      ],
      "op": "DUP3",
      "path": "57"
    },
    "1748": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2725,
        2955
      ],
      "op": "ADD",
      "path": "57"
    },
    "1749": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2725,
        2955
      ],
      "op": "MSTORE",
      "path": "57"
    },
    "1750": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2725,
        2955
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x1F"
    },
    "1752": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2725,
        2955
      ],
      "op": "ADD",
      "path": "57"
    },
    "1753": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1755": {
      "op": "NOT"
    },
    "1756": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2725,
        2955
      ],
      "op": "AND",
      "path": "57"
    },
    "1757": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2725,
        2955
      ],
      "op": "SWAP1",
      "path": "57"
    },
    "1758": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2725,
        2955
      ],
      "op": "SWAP2",
      "path": "57"
    },
    "1759": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2725,
        2955
      ],
      "op": "ADD",
      "path": "57"
    },
    "1760": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2725,
        2955
      ],
      "op": "DUP5",
      "path": "57"
    },
    "1761": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2725,
        2955
      ],
      "op": "DUP2",
      "path": "57"
    },
    "1762": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2725,
        2955
      ],
      "op": "SUB",
      "path": "57"
    },
    "1763": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2725,
        2955
      ],
      "op": "DUP4",
      "path": "57"
    },
    "1764": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2725,
        2955
      ],
      "op": "MSTORE",
      "path": "57"
    },
    "1765": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2725,
        2955
      ],
      "op": "DUP9",
      "path": "57"
    },
    "1766": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2725,
        2955
      ],
      "op": "DUP2",
      "path": "57"
    },
    "1767": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2725,
        2955
      ],
      "op": "MSTORE",
      "path": "57"
    },
    "1768": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2725,
        2955
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x20"
    },
    "1770": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2725,
        2955
      ],
      "op": "ADD",
      "path": "57"
    },
    "1771": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2725,
        2955
      ],
      "op": "SWAP1",
      "path": "57"
    },
    "1772": {
      "op": "POP"
    },
    "1773": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2725,
        2955
      ],
      "op": "DUP9",
      "path": "57"
    },
    "1774": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2725,
        2955
      ],
      "op": "DUP9",
      "path": "57"
    },
    "1775": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2725,
        2955
      ],
      "op": "DUP1",
      "path": "57"
    },
    "1776": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2725,
        2955
      ],
      "op": "DUP3",
      "path": "57"
    },
    "1777": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2725,
        2955
      ],
      "op": "DUP5",
      "path": "57"
    },
    "1778": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2725,
        2955
      ],
      "op": "CALLDATACOPY",
      "path": "57"
    },
    "1779": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2725,
        2955
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x0"
    },
    "1781": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2725,
        2955
      ],
      "op": "DUP4",
      "path": "57"
    },
    "1782": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2725,
        2955
      ],
      "op": "DUP3",
      "path": "57"
    },
    "1783": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2725,
        2955
      ],
      "op": "ADD",
      "path": "57"
    },
    "1784": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2725,
        2955
      ],
      "op": "MSTORE",
      "path": "57"
    },
    "1785": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2725,
        2955
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x40"
    },
    "1787": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2725,
        2955
      ],
      "op": "MLOAD",
      "path": "57"
    },
    "1788": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2725,
        2955
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x1F"
    },
    "1790": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2725,
        2955
      ],
      "op": "SWAP1",
      "path": "57"
    },
    "1791": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2725,
        2955
      ],
      "op": "SWAP2",
      "path": "57"
    },
    "1792": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2725,
        2955
      ],
      "op": "ADD",
      "path": "57"
    },
    "1793": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1795": {
      "op": "NOT"
    },
    "1796": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2725,
        2955
      ],
      "op": "AND",
      "path": "57"
    },
    "1797": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2725,
        2955
      ],
      "op": "SWAP1",
      "path": "57"
    },
    "1798": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2725,
        2955
      ],
      "op": "SWAP3",
      "path": "57"
    },
    "1799": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2725,
        2955
      ],
      "op": "ADD",
      "path": "57"
    },
    "1800": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2725,
        2955
      ],
      "op": "DUP3",
      "path": "57"
    },
    "1801": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2725,
        2955
      ],
      "op": "SWAP1",
      "path": "57"
    },
    "1802": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2725,
        2955
      ],
      "op": "SUB",
      "path": "57"
    },
    "1803": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2725,
        2955
      ],
      "op": "SWAP16",
      "path": "57"
    },
    "1804": {
      "op": "POP"
    },
    "1805": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2725,
        2955
      ],
      "op": "SWAP1",
      "path": "57"
    },
    "1806": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2725,
        2955
      ],
      "op": "SWAP14",
      "path": "57"
    },
    "1807": {
      "op": "POP"
    },
    "1808": {
      "op": "POP"
    },
    "1809": {
      "op": "POP"
    },
    "1810": {
      "op": "POP"
    },
    "1811": {
      "op": "POP"
    },
    "1812": {
      "op": "POP"
    },
    "1813": {
      "op": "POP"
    },
    "1814": {
      "op": "POP"
    },
    "1815": {
      "op": "POP"
    },
    "1816": {
      "op": "POP"
    },
    "1817": {
      "op": "POP"
    },
    "1818": {
      "op": "POP"
    },
    "1819": {
      "op": "POP"
    },
    "1820": {
      "op": "POP"
    },
    "1821": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2725,
        2955
      ],
      "op": "LOG1",
      "path": "57"
    },
    "1822": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2184,
        2962
      ],
      "op": "POP",
      "path": "57"
    },
    "1823": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2184,
        2962
      ],
      "op": "POP",
      "path": "57"
    },
    "1824": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2184,
        2962
      ],
      "op": "POP",
      "path": "57"
    },
    "1825": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2184,
        2962
      ],
      "op": "POP",
      "path": "57"
    },
    "1826": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2184,
        2962
      ],
      "op": "POP",
      "path": "57"
    },
    "1827": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2184,
        2962
      ],
      "op": "POP",
      "path": "57"
    },
    "1828": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2184,
        2962
      ],
      "op": "POP",
      "path": "57"
    },
    "1829": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2184,
        2962
      ],
      "op": "POP",
      "path": "57"
    },
    "1830": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2184,
        2962
      ],
      "op": "POP",
      "path": "57"
    },
    "1831": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2184,
        2962
      ],
      "op": "POP",
      "path": "57"
    },
    "1832": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2184,
        2962
      ],
      "op": "POP",
      "path": "57"
    },
    "1833": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "jump": "o",
      "offset": [
        2184,
        2962
      ],
      "op": "JUMP",
      "path": "57"
    },
    "1834": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        738,
        974
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1835": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        857,
        864
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "1837": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        883,
        918
      ],
      "op": "DUP3",
      "path": "14",
      "statement": 2
    },
    "1838": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        883,
        918
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1839": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        883,
        918
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1840": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        883,
        918
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "1842": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        883,
        918
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1843": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        883,
        918
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1844": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        883,
        918
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1845": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        883,
        918
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "1847": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        883,
        918
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1848": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        883,
        918
      ],
      "op": "DUP4",
      "path": "14"
    },
    "1849": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        883,
        918
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "1850": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1852": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1854": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1856": {
      "op": "SHL"
    },
    "1857": {
      "op": "SUB"
    },
    "1858": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        883,
        927
      ],
      "op": "DUP6",
      "path": "14"
    },
    "1859": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        883,
        927
      ],
      "op": "AND",
      "path": "14"
    },
    "1860": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        883,
        927
      ],
      "op": "DUP5",
      "path": "14"
    },
    "1861": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        883,
        927
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1862": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        883,
        927
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1863": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        883,
        927
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "1864": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        883,
        927
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1865": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        883,
        927
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1866": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        883,
        927
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "1867": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        883,
        927
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "1868": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        883,
        927
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xFF"
    },
    "1870": {
      "branch": 21,
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        883,
        927
      ],
      "op": "AND",
      "path": "14"
    },
    "1871": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        883,
        967
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x759"
    },
    "1874": {
      "branch": 21,
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        883,
        967
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "1875": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        962,
        966
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "1877": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        883,
        967
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x798"
    },
    "1880": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        883,
        967
      ],
      "op": "JUMP",
      "path": "14"
    },
    "1881": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        883,
        967
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1882": {
      "offset": [
        528,
        568
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "1884": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        528,
        568
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "1885": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        528,
        568
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "1887": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        528,
        568
      ],
      "op": "ADD",
      "path": "14"
    },
    "1888": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        528,
        568
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1889": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        528,
        568
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1890": {
      "op": "PUSH20",
      "value": "0x455243313832305F4143434550545F4D41474943"
    },
    "1911": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1913": {
      "op": "SHL"
    },
    "1914": {
      "offset": [
        528,
        568
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1915": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        528,
        568
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1916": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        528,
        568
      ],
      "op": "POP",
      "path": "14"
    },
    "1917": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        528,
        568
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x14"
    },
    "1919": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        528,
        568
      ],
      "op": "ADD",
      "path": "14"
    },
    "1920": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        528,
        568
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1921": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        528,
        568
      ],
      "op": "POP",
      "path": "14"
    },
    "1922": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        528,
        568
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "1924": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        528,
        568
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "1925": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        528,
        568
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "1927": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        528,
        568
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1928": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        528,
        568
      ],
      "op": "DUP4",
      "path": "14"
    },
    "1929": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        528,
        568
      ],
      "op": "SUB",
      "path": "14"
    },
    "1930": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        528,
        568
      ],
      "op": "SUB",
      "path": "14"
    },
    "1931": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        528,
        568
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1932": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        528,
        568
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1933": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        528,
        568
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1934": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        528,
        568
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "1936": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        528,
        568
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1937": {
      "offset": [
        518,
        569
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1938": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        518,
        569
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "1939": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        518,
        569
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1940": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        518,
        569
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "1942": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        518,
        569
      ],
      "op": "ADD",
      "path": "14"
    },
    "1943": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        518,
        569
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "1944": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        883,
        967
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1945": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        876,
        967
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "1946": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        738,
        974
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "1947": {
      "op": "POP"
    },
    "1948": {
      "op": "POP"
    },
    "1949": {
      "op": "POP"
    },
    "1950": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "jump": "o",
      "offset": [
        738,
        974
      ],
      "op": "JUMP",
      "path": "14"
    },
    "1951": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4023,
        4264
      ],
      "op": "JUMPDEST",
      "path": "57"
    },
    "1952": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4187,
        4192
      ],
      "op": "DUP4",
      "path": "57",
      "statement": 3
    },
    "1953": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1955": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1957": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1959": {
      "op": "SHL"
    },
    "1960": {
      "op": "SUB"
    },
    "1961": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4187,
        4197
      ],
      "op": "AND",
      "path": "57"
    },
    "1962": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4187,
        4197
      ],
      "op": "PUSH4",
      "path": "57",
      "value": "0x9BD9BBC6"
    },
    "1967": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4198,
        4200
      ],
      "op": "DUP5",
      "path": "57"
    },
    "1968": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4202,
        4208
      ],
      "op": "DUP5",
      "path": "57"
    },
    "1969": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4210,
        4214
      ],
      "op": "DUP5",
      "path": "57"
    },
    "1970": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4187,
        4215
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x40"
    },
    "1972": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4187,
        4215
      ],
      "op": "MLOAD",
      "path": "57"
    },
    "1973": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4187,
        4215
      ],
      "op": "DUP5",
      "path": "57"
    },
    "1974": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4187,
        4215
      ],
      "op": "PUSH4",
      "path": "57",
      "value": "0xFFFFFFFF"
    },
    "1979": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4187,
        4215
      ],
      "op": "AND",
      "path": "57"
    },
    "1980": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4187,
        4215
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0xE0"
    },
    "1982": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4187,
        4215
      ],
      "op": "SHL",
      "path": "57"
    },
    "1983": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4187,
        4215
      ],
      "op": "DUP2",
      "path": "57"
    },
    "1984": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4187,
        4215
      ],
      "op": "MSTORE",
      "path": "57"
    },
    "1985": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4187,
        4215
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x4"
    },
    "1987": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4187,
        4215
      ],
      "op": "ADD",
      "path": "57"
    },
    "1988": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4187,
        4215
      ],
      "op": "DUP1",
      "path": "57"
    },
    "1989": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4187,
        4215
      ],
      "op": "DUP5",
      "path": "57"
    },
    "1990": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1992": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1994": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1996": {
      "op": "SHL"
    },
    "1997": {
      "op": "SUB"
    },
    "1998": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4187,
        4215
      ],
      "op": "AND",
      "path": "57"
    },
    "1999": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4187,
        4215
      ],
      "op": "DUP2",
      "path": "57"
    },
    "2000": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4187,
        4215
      ],
      "op": "MSTORE",
      "path": "57"
    },
    "2001": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4187,
        4215
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x20"
    },
    "2003": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4187,
        4215
      ],
      "op": "ADD",
      "path": "57"
    },
    "2004": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4187,
        4215
      ],
      "op": "DUP4",
      "path": "57"
    },
    "2005": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4187,
        4215
      ],
      "op": "DUP2",
      "path": "57"
    },
    "2006": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4187,
        4215
      ],
      "op": "MSTORE",
      "path": "57"
    },
    "2007": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4187,
        4215
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x20"
    },
    "2009": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4187,
        4215
      ],
      "op": "ADD",
      "path": "57"
    },
    "2010": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4187,
        4215
      ],
      "op": "DUP1",
      "path": "57"
    },
    "2011": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4187,
        4215
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x20"
    },
    "2013": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4187,
        4215
      ],
      "op": "ADD",
      "path": "57"
    },
    "2014": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4187,
        4215
      ],
      "op": "DUP3",
      "path": "57"
    },
    "2015": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4187,
        4215
      ],
      "op": "DUP2",
      "path": "57"
    },
    "2016": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4187,
        4215
      ],
      "op": "SUB",
      "path": "57"
    },
    "2017": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4187,
        4215
      ],
      "op": "DUP3",
      "path": "57"
    },
    "2018": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4187,
        4215
      ],
      "op": "MSTORE",
      "path": "57"
    },
    "2019": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4187,
        4215
      ],
      "op": "DUP4",
      "path": "57"
    },
    "2020": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4187,
        4215
      ],
      "op": "DUP2",
      "path": "57"
    },
    "2021": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4187,
        4215
      ],
      "op": "DUP2",
      "path": "57"
    },
    "2022": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4187,
        4215
      ],
      "op": "MLOAD",
      "path": "57"
    },
    "2023": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4187,
        4215
      ],
      "op": "DUP2",
      "path": "57"
    },
    "2024": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4187,
        4215
      ],
      "op": "MSTORE",
      "path": "57"
    },
    "2025": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4187,
        4215
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x20"
    },
    "2027": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4187,
        4215
      ],
      "op": "ADD",
      "path": "57"
    },
    "2028": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4187,
        4215
      ],
      "op": "SWAP2",
      "path": "57"
    },
    "2029": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4187,
        4215
      ],
      "op": "POP",
      "path": "57"
    },
    "2030": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4187,
        4215
      ],
      "op": "DUP1",
      "path": "57"
    },
    "2031": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4187,
        4215
      ],
      "op": "MLOAD",
      "path": "57"
    },
    "2032": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4187,
        4215
      ],
      "op": "SWAP1",
      "path": "57"
    },
    "2033": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4187,
        4215
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x20"
    },
    "2035": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4187,
        4215
      ],
      "op": "ADD",
      "path": "57"
    },
    "2036": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4187,
        4215
      ],
      "op": "SWAP1",
      "path": "57"
    },
    "2037": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4187,
        4215
      ],
      "op": "DUP1",
      "path": "57"
    },
    "2038": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4187,
        4215
      ],
      "op": "DUP4",
      "path": "57"
    },
    "2039": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4187,
        4215
      ],
      "op": "DUP4",
      "path": "57"
    },
    "2040": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4187,
        4215
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x0"
    },
    "2042": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4187,
        4215
      ],
      "op": "JUMPDEST",
      "path": "57"
    },
    "2043": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4187,
        4215
      ],
      "op": "DUP4",
      "path": "57"
    },
    "2044": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4187,
        4215
      ],
      "op": "DUP2",
      "path": "57"
    },
    "2045": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4187,
        4215
      ],
      "op": "LT",
      "path": "57"
    },
    "2046": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4187,
        4215
      ],
      "op": "ISZERO",
      "path": "57"
    },
    "2047": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4187,
        4215
      ],
      "op": "PUSH2",
      "path": "57",
      "value": "0x812"
    },
    "2050": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4187,
        4215
      ],
      "op": "JUMPI",
      "path": "57"
    },
    "2051": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4187,
        4215
      ],
      "op": "DUP2",
      "path": "57"
    },
    "2052": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4187,
        4215
      ],
      "op": "DUP2",
      "path": "57"
    },
    "2053": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4187,
        4215
      ],
      "op": "ADD",
      "path": "57"
    },
    "2054": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4187,
        4215
      ],
      "op": "MLOAD",
      "path": "57"
    },
    "2055": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4187,
        4215
      ],
      "op": "DUP4",
      "path": "57"
    },
    "2056": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4187,
        4215
      ],
      "op": "DUP3",
      "path": "57"
    },
    "2057": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4187,
        4215
      ],
      "op": "ADD",
      "path": "57"
    },
    "2058": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4187,
        4215
      ],
      "op": "MSTORE",
      "path": "57"
    },
    "2059": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4187,
        4215
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x20"
    },
    "2061": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4187,
        4215
      ],
      "op": "ADD",
      "path": "57"
    },
    "2062": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4187,
        4215
      ],
      "op": "PUSH2",
      "path": "57",
      "value": "0x7FA"
    },
    "2065": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4187,
        4215
      ],
      "op": "JUMP",
      "path": "57"
    },
    "2066": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4187,
        4215
      ],
      "op": "JUMPDEST",
      "path": "57"
    },
    "2067": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4187,
        4215
      ],
      "op": "POP",
      "path": "57"
    },
    "2068": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4187,
        4215
      ],
      "op": "POP",
      "path": "57"
    },
    "2069": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4187,
        4215
      ],
      "op": "POP",
      "path": "57"
    },
    "2070": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4187,
        4215
      ],
      "op": "POP",
      "path": "57"
    },
    "2071": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4187,
        4215
      ],
      "op": "SWAP1",
      "path": "57"
    },
    "2072": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4187,
        4215
      ],
      "op": "POP",
      "path": "57"
    },
    "2073": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4187,
        4215
      ],
      "op": "SWAP1",
      "path": "57"
    },
    "2074": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4187,
        4215
      ],
      "op": "DUP2",
      "path": "57"
    },
    "2075": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4187,
        4215
      ],
      "op": "ADD",
      "path": "57"
    },
    "2076": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4187,
        4215
      ],
      "op": "SWAP1",
      "path": "57"
    },
    "2077": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4187,
        4215
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x1F"
    },
    "2079": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4187,
        4215
      ],
      "op": "AND",
      "path": "57"
    },
    "2080": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4187,
        4215
      ],
      "op": "DUP1",
      "path": "57"
    },
    "2081": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4187,
        4215
      ],
      "op": "ISZERO",
      "path": "57"
    },
    "2082": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4187,
        4215
      ],
      "op": "PUSH2",
      "path": "57",
      "value": "0x83F"
    },
    "2085": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4187,
        4215
      ],
      "op": "JUMPI",
      "path": "57"
    },
    "2086": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4187,
        4215
      ],
      "op": "DUP1",
      "path": "57"
    },
    "2087": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4187,
        4215
      ],
      "op": "DUP3",
      "path": "57"
    },
    "2088": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4187,
        4215
      ],
      "op": "SUB",
      "path": "57"
    },
    "2089": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4187,
        4215
      ],
      "op": "DUP1",
      "path": "57"
    },
    "2090": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4187,
        4215
      ],
      "op": "MLOAD",
      "path": "57"
    },
    "2091": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4187,
        4215
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x1"
    },
    "2093": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4187,
        4215
      ],
      "op": "DUP4",
      "path": "57"
    },
    "2094": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4187,
        4215
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x20"
    },
    "2096": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4187,
        4215
      ],
      "op": "SUB",
      "path": "57"
    },
    "2097": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4187,
        4215
      ],
      "op": "PUSH2",
      "path": "57",
      "value": "0x100"
    },
    "2100": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4187,
        4215
      ],
      "op": "EXP",
      "path": "57"
    },
    "2101": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4187,
        4215
      ],
      "op": "SUB",
      "path": "57"
    },
    "2102": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4187,
        4215
      ],
      "op": "NOT",
      "path": "57"
    },
    "2103": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4187,
        4215
      ],
      "op": "AND",
      "path": "57"
    },
    "2104": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4187,
        4215
      ],
      "op": "DUP2",
      "path": "57"
    },
    "2105": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4187,
        4215
      ],
      "op": "MSTORE",
      "path": "57"
    },
    "2106": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4187,
        4215
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x20"
    },
    "2108": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4187,
        4215
      ],
      "op": "ADD",
      "path": "57"
    },
    "2109": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4187,
        4215
      ],
      "op": "SWAP2",
      "path": "57"
    },
    "2110": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4187,
        4215
      ],
      "op": "POP",
      "path": "57"
    },
    "2111": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4187,
        4215
      ],
      "op": "JUMPDEST",
      "path": "57"
    },
    "2112": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4187,
        4215
      ],
      "op": "POP",
      "path": "57"
    },
    "2113": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4187,
        4215
      ],
      "op": "SWAP5",
      "path": "57"
    },
    "2114": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4187,
        4215
      ],
      "op": "POP",
      "path": "57"
    },
    "2115": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4187,
        4215
      ],
      "op": "POP",
      "path": "57"
    },
    "2116": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4187,
        4215
      ],
      "op": "POP",
      "path": "57"
    },
    "2117": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4187,
        4215
      ],
      "op": "POP",
      "path": "57"
    },
    "2118": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4187,
        4215
      ],
      "op": "POP",
      "path": "57"
    },
    "2119": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4187,
        4215
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x0"
    },
    "2121": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4187,
        4215
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x40"
    },
    "2123": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4187,
        4215
      ],
      "op": "MLOAD",
      "path": "57"
    },
    "2124": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4187,
        4215
      ],
      "op": "DUP1",
      "path": "57"
    },
    "2125": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4187,
        4215
      ],
      "op": "DUP4",
      "path": "57"
    },
    "2126": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4187,
        4215
      ],
      "op": "SUB",
      "path": "57"
    },
    "2127": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4187,
        4215
      ],
      "op": "DUP2",
      "path": "57"
    },
    "2128": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4187,
        4215
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x0"
    },
    "2130": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4187,
        4215
      ],
      "op": "DUP8",
      "path": "57"
    },
    "2131": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4187,
        4215
      ],
      "op": "DUP1",
      "path": "57"
    },
    "2132": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4187,
        4215
      ],
      "op": "EXTCODESIZE",
      "path": "57"
    },
    "2133": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4187,
        4215
      ],
      "op": "ISZERO",
      "path": "57"
    },
    "2134": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4187,
        4215
      ],
      "op": "DUP1",
      "path": "57"
    },
    "2135": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4187,
        4215
      ],
      "op": "ISZERO",
      "path": "57"
    },
    "2136": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4187,
        4215
      ],
      "op": "PUSH2",
      "path": "57",
      "value": "0x860"
    },
    "2139": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4187,
        4215
      ],
      "op": "JUMPI",
      "path": "57"
    },
    "2140": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4187,
        4215
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x0"
    },
    "2142": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4187,
        4215
      ],
      "op": "DUP1",
      "path": "57"
    },
    "2143": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4187,
        4215
      ],
      "op": "REVERT",
      "path": "57"
    },
    "2144": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4187,
        4215
      ],
      "op": "JUMPDEST",
      "path": "57"
    },
    "2145": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4187,
        4215
      ],
      "op": "POP",
      "path": "57"
    },
    "2146": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4187,
        4215
      ],
      "op": "GAS",
      "path": "57"
    },
    "2147": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4187,
        4215
      ],
      "op": "CALL",
      "path": "57"
    },
    "2148": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4187,
        4215
      ],
      "op": "ISZERO",
      "path": "57"
    },
    "2149": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4187,
        4215
      ],
      "op": "DUP1",
      "path": "57"
    },
    "2150": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4187,
        4215
      ],
      "op": "ISZERO",
      "path": "57"
    },
    "2151": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4187,
        4215
      ],
      "op": "PUSH2",
      "path": "57",
      "value": "0x874"
    },
    "2154": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4187,
        4215
      ],
      "op": "JUMPI",
      "path": "57"
    },
    "2155": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4187,
        4215
      ],
      "op": "RETURNDATASIZE",
      "path": "57"
    },
    "2156": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4187,
        4215
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x0"
    },
    "2158": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4187,
        4215
      ],
      "op": "DUP1",
      "path": "57"
    },
    "2159": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4187,
        4215
      ],
      "op": "RETURNDATACOPY",
      "path": "57"
    },
    "2160": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4187,
        4215
      ],
      "op": "RETURNDATASIZE",
      "path": "57"
    },
    "2161": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4187,
        4215
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x0"
    },
    "2163": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4187,
        4215
      ],
      "op": "REVERT",
      "path": "57"
    },
    "2164": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4187,
        4215
      ],
      "op": "JUMPDEST",
      "path": "57"
    },
    "2165": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4187,
        4215
      ],
      "op": "POP",
      "path": "57"
    },
    "2166": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4187,
        4215
      ],
      "op": "POP",
      "path": "57"
    },
    "2167": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4187,
        4215
      ],
      "op": "POP",
      "path": "57"
    },
    "2168": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4187,
        4215
      ],
      "op": "POP",
      "path": "57"
    },
    "2169": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4023,
        4264
      ],
      "op": "POP",
      "path": "57"
    },
    "2170": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4023,
        4264
      ],
      "op": "POP",
      "path": "57"
    },
    "2171": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4023,
        4264
      ],
      "op": "POP",
      "path": "57"
    },
    "2172": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4023,
        4264
      ],
      "op": "POP",
      "path": "57"
    },
    "2173": {
      "fn": "ERC777SenderRecipientMock.send",
      "jump": "o",
      "offset": [
        4023,
        4264
      ],
      "op": "JUMP",
      "path": "57"
    },
    "2174": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4270,
        4382
      ],
      "op": "JUMPDEST",
      "path": "57"
    },
    "2175": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4351,
        4375
      ],
      "op": "PUSH1",
      "path": "57",
      "statement": 4,
      "value": "0x40"
    },
    "2177": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4351,
        4375
      ],
      "op": "DUP1",
      "path": "57"
    },
    "2178": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4351,
        4375
      ],
      "op": "MLOAD",
      "path": "57"
    },
    "2179": {
      "op": "PUSH4",
      "value": "0xFE9D9303"
    },
    "2184": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2186": {
      "op": "SHL"
    },
    "2187": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4351,
        4375
      ],
      "op": "DUP2",
      "path": "57"
    },
    "2188": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4351,
        4375
      ],
      "op": "MSTORE",
      "path": "57"
    },
    "2189": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4351,
        4375
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x4"
    },
    "2191": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4351,
        4375
      ],
      "op": "DUP2",
      "path": "57"
    },
    "2192": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4351,
        4375
      ],
      "op": "ADD",
      "path": "57"
    },
    "2193": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4351,
        4375
      ],
      "op": "DUP5",
      "path": "57"
    },
    "2194": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4351,
        4375
      ],
      "op": "DUP2",
      "path": "57"
    },
    "2195": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4351,
        4375
      ],
      "op": "MSTORE",
      "path": "57"
    },
    "2196": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4351,
        4375
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x24"
    },
    "2198": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4351,
        4375
      ],
      "op": "DUP3",
      "path": "57"
    },
    "2199": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4351,
        4375
      ],
      "op": "ADD",
      "path": "57"
    },
    "2200": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4351,
        4375
      ],
      "op": "SWAP3",
      "path": "57"
    },
    "2201": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4351,
        4375
      ],
      "op": "DUP4",
      "path": "57"
    },
    "2202": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4351,
        4375
      ],
      "op": "MSTORE",
      "path": "57"
    },
    "2203": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4351,
        4375
      ],
      "op": "DUP4",
      "path": "57"
    },
    "2204": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4351,
        4375
      ],
      "op": "MLOAD",
      "path": "57"
    },
    "2205": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4351,
        4375
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x44"
    },
    "2207": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4351,
        4375
      ],
      "op": "DUP4",
      "path": "57"
    },
    "2208": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4351,
        4375
      ],
      "op": "ADD",
      "path": "57"
    },
    "2209": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4351,
        4375
      ],
      "op": "MSTORE",
      "path": "57"
    },
    "2210": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4351,
        4375
      ],
      "op": "DUP4",
      "path": "57"
    },
    "2211": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4351,
        4375
      ],
      "op": "MLOAD",
      "path": "57"
    },
    "2212": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2214": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2216": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2218": {
      "op": "SHL"
    },
    "2219": {
      "op": "SUB"
    },
    "2220": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4351,
        4361
      ],
      "op": "DUP8",
      "path": "57"
    },
    "2221": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4351,
        4361
      ],
      "op": "AND",
      "path": "57"
    },
    "2222": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4351,
        4361
      ],
      "op": "SWAP4",
      "path": "57"
    },
    "2223": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4351,
        4361
      ],
      "op": "PUSH4",
      "path": "57",
      "value": "0xFE9D9303"
    },
    "2228": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4351,
        4361
      ],
      "op": "SWAP4",
      "path": "57"
    },
    "2229": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4362,
        4368
      ],
      "op": "DUP8",
      "path": "57"
    },
    "2230": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4362,
        4368
      ],
      "op": "SWAP4",
      "path": "57"
    },
    "2231": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4370,
        4374
      ],
      "op": "DUP8",
      "path": "57"
    },
    "2232": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4370,
        4374
      ],
      "op": "SWAP4",
      "path": "57"
    },
    "2233": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4351,
        4375
      ],
      "op": "SWAP1",
      "path": "57"
    },
    "2234": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4351,
        4375
      ],
      "op": "SWAP3",
      "path": "57"
    },
    "2235": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4351,
        4375
      ],
      "op": "SWAP2",
      "path": "57"
    },
    "2236": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4351,
        4375
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x64"
    },
    "2238": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4351,
        4375
      ],
      "op": "ADD",
      "path": "57"
    },
    "2239": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4351,
        4375
      ],
      "op": "SWAP1",
      "path": "57"
    },
    "2240": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4351,
        4375
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x20"
    },
    "2242": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4351,
        4375
      ],
      "op": "DUP6",
      "path": "57"
    },
    "2243": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4351,
        4375
      ],
      "op": "ADD",
      "path": "57"
    },
    "2244": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4351,
        4375
      ],
      "op": "SWAP1",
      "path": "57"
    },
    "2245": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4351,
        4375
      ],
      "op": "DUP1",
      "path": "57"
    },
    "2246": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4351,
        4375
      ],
      "op": "DUP4",
      "path": "57"
    },
    "2247": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4351,
        4375
      ],
      "op": "DUP4",
      "path": "57"
    },
    "2248": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2250": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4351,
        4375
      ],
      "op": "JUMPDEST",
      "path": "57"
    },
    "2251": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4351,
        4375
      ],
      "op": "DUP4",
      "path": "57"
    },
    "2252": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4351,
        4375
      ],
      "op": "DUP2",
      "path": "57"
    },
    "2253": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4351,
        4375
      ],
      "op": "LT",
      "path": "57"
    },
    "2254": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4351,
        4375
      ],
      "op": "ISZERO",
      "path": "57"
    },
    "2255": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4351,
        4375
      ],
      "op": "PUSH2",
      "path": "57",
      "value": "0x8E2"
    },
    "2258": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4351,
        4375
      ],
      "op": "JUMPI",
      "path": "57"
    },
    "2259": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4351,
        4375
      ],
      "op": "DUP2",
      "path": "57"
    },
    "2260": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4351,
        4375
      ],
      "op": "DUP2",
      "path": "57"
    },
    "2261": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4351,
        4375
      ],
      "op": "ADD",
      "path": "57"
    },
    "2262": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4351,
        4375
      ],
      "op": "MLOAD",
      "path": "57"
    },
    "2263": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4351,
        4375
      ],
      "op": "DUP4",
      "path": "57"
    },
    "2264": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4351,
        4375
      ],
      "op": "DUP3",
      "path": "57"
    },
    "2265": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4351,
        4375
      ],
      "op": "ADD",
      "path": "57"
    },
    "2266": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4351,
        4375
      ],
      "op": "MSTORE",
      "path": "57"
    },
    "2267": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4351,
        4375
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x20"
    },
    "2269": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4351,
        4375
      ],
      "op": "ADD",
      "path": "57"
    },
    "2270": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4351,
        4375
      ],
      "op": "PUSH2",
      "path": "57",
      "value": "0x8CA"
    },
    "2273": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4351,
        4375
      ],
      "op": "JUMP",
      "path": "57"
    },
    "2274": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4351,
        4375
      ],
      "op": "JUMPDEST",
      "path": "57"
    },
    "2275": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4351,
        4375
      ],
      "op": "POP",
      "path": "57"
    },
    "2276": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4351,
        4375
      ],
      "op": "POP",
      "path": "57"
    },
    "2277": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4351,
        4375
      ],
      "op": "POP",
      "path": "57"
    },
    "2278": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4351,
        4375
      ],
      "op": "POP",
      "path": "57"
    },
    "2279": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4351,
        4375
      ],
      "op": "SWAP1",
      "path": "57"
    },
    "2280": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4351,
        4375
      ],
      "op": "POP",
      "path": "57"
    },
    "2281": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4351,
        4375
      ],
      "op": "SWAP1",
      "path": "57"
    },
    "2282": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4351,
        4375
      ],
      "op": "DUP2",
      "path": "57"
    },
    "2283": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4351,
        4375
      ],
      "op": "ADD",
      "path": "57"
    },
    "2284": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4351,
        4375
      ],
      "op": "SWAP1",
      "path": "57"
    },
    "2285": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4351,
        4375
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x1F"
    },
    "2287": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4351,
        4375
      ],
      "op": "AND",
      "path": "57"
    },
    "2288": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4351,
        4375
      ],
      "op": "DUP1",
      "path": "57"
    },
    "2289": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4351,
        4375
      ],
      "op": "ISZERO",
      "path": "57"
    },
    "2290": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4351,
        4375
      ],
      "op": "PUSH2",
      "path": "57",
      "value": "0x90F"
    },
    "2293": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4351,
        4375
      ],
      "op": "JUMPI",
      "path": "57"
    },
    "2294": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4351,
        4375
      ],
      "op": "DUP1",
      "path": "57"
    },
    "2295": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4351,
        4375
      ],
      "op": "DUP3",
      "path": "57"
    },
    "2296": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4351,
        4375
      ],
      "op": "SUB",
      "path": "57"
    },
    "2297": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4351,
        4375
      ],
      "op": "DUP1",
      "path": "57"
    },
    "2298": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4351,
        4375
      ],
      "op": "MLOAD",
      "path": "57"
    },
    "2299": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4351,
        4375
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x1"
    },
    "2301": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4351,
        4375
      ],
      "op": "DUP4",
      "path": "57"
    },
    "2302": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4351,
        4375
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x20"
    },
    "2304": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4351,
        4375
      ],
      "op": "SUB",
      "path": "57"
    },
    "2305": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4351,
        4375
      ],
      "op": "PUSH2",
      "path": "57",
      "value": "0x100"
    },
    "2308": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4351,
        4375
      ],
      "op": "EXP",
      "path": "57"
    },
    "2309": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4351,
        4375
      ],
      "op": "SUB",
      "path": "57"
    },
    "2310": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4351,
        4375
      ],
      "op": "NOT",
      "path": "57"
    },
    "2311": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4351,
        4375
      ],
      "op": "AND",
      "path": "57"
    },
    "2312": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4351,
        4375
      ],
      "op": "DUP2",
      "path": "57"
    },
    "2313": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4351,
        4375
      ],
      "op": "MSTORE",
      "path": "57"
    },
    "2314": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4351,
        4375
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x20"
    },
    "2316": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4351,
        4375
      ],
      "op": "ADD",
      "path": "57"
    },
    "2317": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4351,
        4375
      ],
      "op": "SWAP2",
      "path": "57"
    },
    "2318": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4351,
        4375
      ],
      "op": "POP",
      "path": "57"
    },
    "2319": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4351,
        4375
      ],
      "op": "JUMPDEST",
      "path": "57"
    },
    "2320": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4351,
        4375
      ],
      "op": "POP",
      "path": "57"
    },
    "2321": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4351,
        4375
      ],
      "op": "SWAP4",
      "path": "57"
    },
    "2322": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4351,
        4375
      ],
      "op": "POP",
      "path": "57"
    },
    "2323": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4351,
        4375
      ],
      "op": "POP",
      "path": "57"
    },
    "2324": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4351,
        4375
      ],
      "op": "POP",
      "path": "57"
    },
    "2325": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4351,
        4375
      ],
      "op": "POP",
      "path": "57"
    },
    "2326": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4351,
        4375
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x0"
    },
    "2328": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4351,
        4375
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x40"
    },
    "2330": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4351,
        4375
      ],
      "op": "MLOAD",
      "path": "57"
    },
    "2331": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4351,
        4375
      ],
      "op": "DUP1",
      "path": "57"
    },
    "2332": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4351,
        4375
      ],
      "op": "DUP4",
      "path": "57"
    },
    "2333": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4351,
        4375
      ],
      "op": "SUB",
      "path": "57"
    },
    "2334": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4351,
        4375
      ],
      "op": "DUP2",
      "path": "57"
    },
    "2335": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4351,
        4375
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x0"
    },
    "2337": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4351,
        4375
      ],
      "op": "DUP8",
      "path": "57"
    },
    "2338": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4351,
        4375
      ],
      "op": "DUP1",
      "path": "57"
    },
    "2339": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4351,
        4375
      ],
      "op": "EXTCODESIZE",
      "path": "57"
    },
    "2340": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4351,
        4375
      ],
      "op": "ISZERO",
      "path": "57"
    },
    "2341": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4351,
        4375
      ],
      "op": "DUP1",
      "path": "57"
    },
    "2342": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4351,
        4375
      ],
      "op": "ISZERO",
      "path": "57"
    },
    "2343": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4351,
        4375
      ],
      "op": "PUSH2",
      "path": "57",
      "value": "0x92F"
    },
    "2346": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4351,
        4375
      ],
      "op": "JUMPI",
      "path": "57"
    },
    "2347": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4351,
        4375
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x0"
    },
    "2349": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4351,
        4375
      ],
      "op": "DUP1",
      "path": "57"
    },
    "2350": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4351,
        4375
      ],
      "op": "REVERT",
      "path": "57"
    },
    "2351": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4351,
        4375
      ],
      "op": "JUMPDEST",
      "path": "57"
    },
    "2352": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4351,
        4375
      ],
      "op": "POP",
      "path": "57"
    },
    "2353": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4351,
        4375
      ],
      "op": "GAS",
      "path": "57"
    },
    "2354": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4351,
        4375
      ],
      "op": "CALL",
      "path": "57"
    },
    "2355": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4351,
        4375
      ],
      "op": "ISZERO",
      "path": "57"
    },
    "2356": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4351,
        4375
      ],
      "op": "DUP1",
      "path": "57"
    },
    "2357": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4351,
        4375
      ],
      "op": "ISZERO",
      "path": "57"
    },
    "2358": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4351,
        4375
      ],
      "op": "PUSH2",
      "path": "57",
      "value": "0x943"
    },
    "2361": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4351,
        4375
      ],
      "op": "JUMPI",
      "path": "57"
    },
    "2362": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4351,
        4375
      ],
      "op": "RETURNDATASIZE",
      "path": "57"
    },
    "2363": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4351,
        4375
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x0"
    },
    "2365": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4351,
        4375
      ],
      "op": "DUP1",
      "path": "57"
    },
    "2366": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4351,
        4375
      ],
      "op": "RETURNDATACOPY",
      "path": "57"
    },
    "2367": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4351,
        4375
      ],
      "op": "RETURNDATASIZE",
      "path": "57"
    },
    "2368": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4351,
        4375
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x0"
    },
    "2370": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4351,
        4375
      ],
      "op": "REVERT",
      "path": "57"
    },
    "2371": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4351,
        4375
      ],
      "op": "JUMPDEST",
      "path": "57"
    },
    "2372": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4351,
        4375
      ],
      "op": "POP",
      "path": "57"
    },
    "2373": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4351,
        4375
      ],
      "op": "POP",
      "path": "57"
    },
    "2374": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4351,
        4375
      ],
      "op": "POP",
      "path": "57"
    },
    "2375": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4351,
        4375
      ],
      "op": "POP",
      "path": "57"
    },
    "2376": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4270,
        4382
      ],
      "op": "POP",
      "path": "57"
    },
    "2377": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4270,
        4382
      ],
      "op": "POP",
      "path": "57"
    },
    "2378": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4270,
        4382
      ],
      "op": "POP",
      "path": "57"
    },
    "2379": {
      "fn": "ERC777SenderRecipientMock.burn",
      "jump": "o",
      "offset": [
        4270,
        4382
      ],
      "op": "JUMP",
      "path": "57"
    },
    "2380": {
      "fn": "ERC777SenderRecipientMock.setShouldRevertSend",
      "offset": [
        3797,
        3901
      ],
      "op": "JUMPDEST",
      "path": "57"
    },
    "2381": {
      "fn": "ERC777SenderRecipientMock.setShouldRevertSend",
      "offset": [
        3862,
        3879
      ],
      "op": "PUSH1",
      "path": "57",
      "statement": 5,
      "value": "0x1"
    },
    "2383": {
      "fn": "ERC777SenderRecipientMock.setShouldRevertSend",
      "offset": [
        3862,
        3894
      ],
      "op": "DUP1",
      "path": "57"
    },
    "2384": {
      "fn": "ERC777SenderRecipientMock.setShouldRevertSend",
      "offset": [
        3862,
        3894
      ],
      "op": "SLOAD",
      "path": "57"
    },
    "2385": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "2387": {
      "op": "NOT"
    },
    "2388": {
      "fn": "ERC777SenderRecipientMock.setShouldRevertSend",
      "offset": [
        3862,
        3894
      ],
      "op": "AND",
      "path": "57"
    },
    "2389": {
      "fn": "ERC777SenderRecipientMock.setShouldRevertSend",
      "offset": [
        3862,
        3894
      ],
      "op": "SWAP2",
      "path": "57"
    },
    "2390": {
      "fn": "ERC777SenderRecipientMock.setShouldRevertSend",
      "offset": [
        3862,
        3894
      ],
      "op": "ISZERO",
      "path": "57"
    },
    "2391": {
      "fn": "ERC777SenderRecipientMock.setShouldRevertSend",
      "offset": [
        3862,
        3894
      ],
      "op": "ISZERO",
      "path": "57"
    },
    "2392": {
      "fn": "ERC777SenderRecipientMock.setShouldRevertSend",
      "offset": [
        3862,
        3894
      ],
      "op": "SWAP2",
      "path": "57"
    },
    "2393": {
      "fn": "ERC777SenderRecipientMock.setShouldRevertSend",
      "offset": [
        3862,
        3894
      ],
      "op": "SWAP1",
      "path": "57"
    },
    "2394": {
      "fn": "ERC777SenderRecipientMock.setShouldRevertSend",
      "offset": [
        3862,
        3894
      ],
      "op": "SWAP2",
      "path": "57"
    },
    "2395": {
      "fn": "ERC777SenderRecipientMock.setShouldRevertSend",
      "offset": [
        3862,
        3894
      ],
      "op": "OR",
      "path": "57"
    },
    "2396": {
      "fn": "ERC777SenderRecipientMock.setShouldRevertSend",
      "offset": [
        3862,
        3894
      ],
      "op": "SWAP1",
      "path": "57"
    },
    "2397": {
      "fn": "ERC777SenderRecipientMock.setShouldRevertSend",
      "offset": [
        3862,
        3894
      ],
      "op": "SSTORE",
      "path": "57"
    },
    "2398": {
      "fn": "ERC777SenderRecipientMock.setShouldRevertSend",
      "jump": "o",
      "offset": [
        3797,
        3901
      ],
      "op": "JUMP",
      "path": "57"
    },
    "2399": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1407,
        2178
      ],
      "op": "JUMPDEST",
      "path": "57"
    },
    "2400": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1629,
        1646
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x1"
    },
    "2402": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1629,
        1646
      ],
      "op": "SLOAD",
      "path": "57"
    },
    "2403": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1629,
        1646
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0xFF"
    },
    "2405": {
      "branch": 18,
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1629,
        1646
      ],
      "op": "AND",
      "path": "57"
    },
    "2406": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1625,
        1681
      ],
      "op": "ISZERO",
      "path": "57"
    },
    "2407": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1625,
        1681
      ],
      "op": "PUSH2",
      "path": "57",
      "value": "0x96F"
    },
    "2410": {
      "branch": 18,
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1625,
        1681
      ],
      "op": "JUMPI",
      "path": "57"
    },
    "2411": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1662,
        1670
      ],
      "op": "PUSH1",
      "path": "57",
      "statement": 6,
      "value": "0x0"
    },
    "2413": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1662,
        1670
      ],
      "op": "DUP1",
      "path": "57"
    },
    "2414": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1662,
        1670
      ],
      "op": "REVERT",
      "path": "57"
    },
    "2415": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1625,
        1681
      ],
      "op": "JUMPDEST",
      "path": "57"
    },
    "2416": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1691,
        1704
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x0"
    },
    "2418": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1715,
        1727
      ],
      "op": "PUSH2",
      "path": "57",
      "value": "0x979"
    },
    "2421": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1715,
        1725
      ],
      "op": "PUSH2",
      "path": "57",
      "value": "0xD3D"
    },
    "2424": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "jump": "i",
      "offset": [
        1715,
        1727
      ],
      "op": "JUMP",
      "path": "57"
    },
    "2425": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1715,
        1727
      ],
      "op": "JUMPDEST",
      "path": "57"
    },
    "2426": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1691,
        1728
      ],
      "op": "SWAP1",
      "path": "57"
    },
    "2427": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1691,
        1728
      ],
      "op": "POP",
      "path": "57"
    },
    "2428": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1739,
        1758
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x0"
    },
    "2430": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1761,
        1766
      ],
      "op": "DUP2",
      "path": "57"
    },
    "2431": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2433": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2435": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2437": {
      "op": "SHL"
    },
    "2438": {
      "op": "SUB"
    },
    "2439": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1761,
        1776
      ],
      "op": "AND",
      "path": "57"
    },
    "2440": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1761,
        1776
      ],
      "op": "PUSH4",
      "path": "57",
      "value": "0x70A08231"
    },
    "2445": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1777,
        1781
      ],
      "op": "DUP11",
      "path": "57"
    },
    "2446": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1761,
        1782
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x40"
    },
    "2448": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1761,
        1782
      ],
      "op": "MLOAD",
      "path": "57"
    },
    "2449": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1761,
        1782
      ],
      "op": "DUP3",
      "path": "57"
    },
    "2450": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1761,
        1782
      ],
      "op": "PUSH4",
      "path": "57",
      "value": "0xFFFFFFFF"
    },
    "2455": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1761,
        1782
      ],
      "op": "AND",
      "path": "57"
    },
    "2456": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1761,
        1782
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0xE0"
    },
    "2458": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1761,
        1782
      ],
      "op": "SHL",
      "path": "57"
    },
    "2459": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1761,
        1782
      ],
      "op": "DUP2",
      "path": "57"
    },
    "2460": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1761,
        1782
      ],
      "op": "MSTORE",
      "path": "57"
    },
    "2461": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1761,
        1782
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x4"
    },
    "2463": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1761,
        1782
      ],
      "op": "ADD",
      "path": "57"
    },
    "2464": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1761,
        1782
      ],
      "op": "DUP1",
      "path": "57"
    },
    "2465": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1761,
        1782
      ],
      "op": "DUP3",
      "path": "57"
    },
    "2466": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2468": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2470": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2472": {
      "op": "SHL"
    },
    "2473": {
      "op": "SUB"
    },
    "2474": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1761,
        1782
      ],
      "op": "AND",
      "path": "57"
    },
    "2475": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1761,
        1782
      ],
      "op": "DUP2",
      "path": "57"
    },
    "2476": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1761,
        1782
      ],
      "op": "MSTORE",
      "path": "57"
    },
    "2477": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1761,
        1782
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x20"
    },
    "2479": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1761,
        1782
      ],
      "op": "ADD",
      "path": "57"
    },
    "2480": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1761,
        1782
      ],
      "op": "SWAP2",
      "path": "57"
    },
    "2481": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1761,
        1782
      ],
      "op": "POP",
      "path": "57"
    },
    "2482": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1761,
        1782
      ],
      "op": "POP",
      "path": "57"
    },
    "2483": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1761,
        1782
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x20"
    },
    "2485": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1761,
        1782
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x40"
    },
    "2487": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1761,
        1782
      ],
      "op": "MLOAD",
      "path": "57"
    },
    "2488": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1761,
        1782
      ],
      "op": "DUP1",
      "path": "57"
    },
    "2489": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1761,
        1782
      ],
      "op": "DUP4",
      "path": "57"
    },
    "2490": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1761,
        1782
      ],
      "op": "SUB",
      "path": "57"
    },
    "2491": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1761,
        1782
      ],
      "op": "DUP2",
      "path": "57"
    },
    "2492": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1761,
        1782
      ],
      "op": "DUP7",
      "path": "57"
    },
    "2493": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1761,
        1782
      ],
      "op": "DUP1",
      "path": "57"
    },
    "2494": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1761,
        1782
      ],
      "op": "EXTCODESIZE",
      "path": "57"
    },
    "2495": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1761,
        1782
      ],
      "op": "ISZERO",
      "path": "57"
    },
    "2496": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1761,
        1782
      ],
      "op": "DUP1",
      "path": "57"
    },
    "2497": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1761,
        1782
      ],
      "op": "ISZERO",
      "path": "57"
    },
    "2498": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1761,
        1782
      ],
      "op": "PUSH2",
      "path": "57",
      "value": "0x9CA"
    },
    "2501": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1761,
        1782
      ],
      "op": "JUMPI",
      "path": "57"
    },
    "2502": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1761,
        1782
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x0"
    },
    "2504": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1761,
        1782
      ],
      "op": "DUP1",
      "path": "57"
    },
    "2505": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1761,
        1782
      ],
      "op": "REVERT",
      "path": "57"
    },
    "2506": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1761,
        1782
      ],
      "op": "JUMPDEST",
      "path": "57"
    },
    "2507": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1761,
        1782
      ],
      "op": "POP",
      "path": "57"
    },
    "2508": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1761,
        1782
      ],
      "op": "GAS",
      "path": "57"
    },
    "2509": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1761,
        1782
      ],
      "op": "STATICCALL",
      "path": "57"
    },
    "2510": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1761,
        1782
      ],
      "op": "ISZERO",
      "path": "57"
    },
    "2511": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1761,
        1782
      ],
      "op": "DUP1",
      "path": "57"
    },
    "2512": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1761,
        1782
      ],
      "op": "ISZERO",
      "path": "57"
    },
    "2513": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1761,
        1782
      ],
      "op": "PUSH2",
      "path": "57",
      "value": "0x9DE"
    },
    "2516": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1761,
        1782
      ],
      "op": "JUMPI",
      "path": "57"
    },
    "2517": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1761,
        1782
      ],
      "op": "RETURNDATASIZE",
      "path": "57"
    },
    "2518": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1761,
        1782
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x0"
    },
    "2520": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1761,
        1782
      ],
      "op": "DUP1",
      "path": "57"
    },
    "2521": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1761,
        1782
      ],
      "op": "RETURNDATACOPY",
      "path": "57"
    },
    "2522": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1761,
        1782
      ],
      "op": "RETURNDATASIZE",
      "path": "57"
    },
    "2523": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1761,
        1782
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x0"
    },
    "2525": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1761,
        1782
      ],
      "op": "REVERT",
      "path": "57"
    },
    "2526": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1761,
        1782
      ],
      "op": "JUMPDEST",
      "path": "57"
    },
    "2527": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1761,
        1782
      ],
      "op": "POP",
      "path": "57"
    },
    "2528": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1761,
        1782
      ],
      "op": "POP",
      "path": "57"
    },
    "2529": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1761,
        1782
      ],
      "op": "POP",
      "path": "57"
    },
    "2530": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1761,
        1782
      ],
      "op": "POP",
      "path": "57"
    },
    "2531": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1761,
        1782
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x40"
    },
    "2533": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1761,
        1782
      ],
      "op": "MLOAD",
      "path": "57"
    },
    "2534": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1761,
        1782
      ],
      "op": "RETURNDATASIZE",
      "path": "57"
    },
    "2535": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1761,
        1782
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x20"
    },
    "2537": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1761,
        1782
      ],
      "op": "DUP2",
      "path": "57"
    },
    "2538": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1761,
        1782
      ],
      "op": "LT",
      "path": "57"
    },
    "2539": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1761,
        1782
      ],
      "op": "ISZERO",
      "path": "57"
    },
    "2540": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1761,
        1782
      ],
      "op": "PUSH2",
      "path": "57",
      "value": "0x9F4"
    },
    "2543": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1761,
        1782
      ],
      "op": "JUMPI",
      "path": "57"
    },
    "2544": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1761,
        1782
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x0"
    },
    "2546": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1761,
        1782
      ],
      "op": "DUP1",
      "path": "57"
    },
    "2547": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1761,
        1782
      ],
      "op": "REVERT",
      "path": "57"
    },
    "2548": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1761,
        1782
      ],
      "op": "JUMPDEST",
      "path": "57"
    },
    "2549": {
      "op": "POP"
    },
    "2550": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1761,
        1782
      ],
      "op": "MLOAD",
      "path": "57"
    },
    "2551": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1908,
        1927
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x40"
    },
    "2553": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1908,
        1927
      ],
      "op": "DUP1",
      "path": "57"
    },
    "2554": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1908,
        1927
      ],
      "op": "MLOAD",
      "path": "57"
    },
    "2555": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "2560": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2562": {
      "op": "SHL"
    },
    "2563": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1908,
        1927
      ],
      "op": "DUP2",
      "path": "57"
    },
    "2564": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1908,
        1927
      ],
      "op": "MSTORE",
      "path": "57"
    },
    "2565": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2567": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2569": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2571": {
      "op": "SHL"
    },
    "2572": {
      "op": "SUB"
    },
    "2573": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1908,
        1927
      ],
      "op": "DUP12",
      "path": "57"
    },
    "2574": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1908,
        1927
      ],
      "op": "DUP2",
      "path": "57"
    },
    "2575": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1908,
        1927
      ],
      "op": "AND",
      "path": "57"
    },
    "2576": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1908,
        1927
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x4"
    },
    "2578": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1908,
        1927
      ],
      "op": "DUP4",
      "path": "57"
    },
    "2579": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1908,
        1927
      ],
      "op": "ADD",
      "path": "57"
    },
    "2580": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1908,
        1927
      ],
      "op": "MSTORE",
      "path": "57"
    },
    "2581": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1908,
        1927
      ],
      "op": "SWAP2",
      "path": "57"
    },
    "2582": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1908,
        1927
      ],
      "op": "MLOAD",
      "path": "57"
    },
    "2583": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1761,
        1782
      ],
      "op": "SWAP3",
      "path": "57"
    },
    "2584": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1761,
        1782
      ],
      "op": "SWAP4",
      "path": "57"
    },
    "2585": {
      "op": "POP"
    },
    "2586": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1888,
        1905
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x0"
    },
    "2588": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1888,
        1905
      ],
      "op": "SWAP3",
      "path": "57"
    },
    "2589": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1908,
        1923
      ],
      "op": "SWAP2",
      "path": "57"
    },
    "2590": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1908,
        1923
      ],
      "op": "DUP6",
      "path": "57"
    },
    "2591": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1908,
        1923
      ],
      "op": "AND",
      "path": "57"
    },
    "2592": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1908,
        1923
      ],
      "op": "SWAP2",
      "path": "57"
    },
    "2593": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1908,
        1923
      ],
      "op": "PUSH4",
      "path": "57",
      "value": "0x70A08231"
    },
    "2598": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1908,
        1923
      ],
      "op": "SWAP2",
      "path": "57"
    },
    "2599": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1908,
        1927
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x24"
    },
    "2601": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1908,
        1927
      ],
      "op": "DUP1",
      "path": "57"
    },
    "2602": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1908,
        1927
      ],
      "op": "DUP3",
      "path": "57"
    },
    "2603": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1908,
        1927
      ],
      "op": "ADD",
      "path": "57"
    },
    "2604": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1908,
        1927
      ],
      "op": "SWAP3",
      "path": "57"
    },
    "2605": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1761,
        1782
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x20"
    },
    "2607": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1761,
        1782
      ],
      "op": "SWAP3",
      "path": "57"
    },
    "2608": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1908,
        1927
      ],
      "op": "SWAP1",
      "path": "57"
    },
    "2609": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1908,
        1927
      ],
      "op": "SWAP2",
      "path": "57"
    },
    "2610": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1908,
        1927
      ],
      "op": "SWAP1",
      "path": "57"
    },
    "2611": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1908,
        1927
      ],
      "op": "DUP3",
      "path": "57"
    },
    "2612": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1908,
        1927
      ],
      "op": "SWAP1",
      "path": "57"
    },
    "2613": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1908,
        1927
      ],
      "op": "SUB",
      "path": "57"
    },
    "2614": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1908,
        1927
      ],
      "op": "ADD",
      "path": "57"
    },
    "2615": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1908,
        1927
      ],
      "op": "DUP2",
      "path": "57"
    },
    "2616": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1908,
        1923
      ],
      "op": "DUP7",
      "path": "57"
    },
    "2617": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1908,
        1927
      ],
      "op": "DUP1",
      "path": "57"
    },
    "2618": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1908,
        1927
      ],
      "op": "EXTCODESIZE",
      "path": "57"
    },
    "2619": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1908,
        1927
      ],
      "op": "ISZERO",
      "path": "57"
    },
    "2620": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1908,
        1927
      ],
      "op": "DUP1",
      "path": "57"
    },
    "2621": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1908,
        1927
      ],
      "op": "ISZERO",
      "path": "57"
    },
    "2622": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1908,
        1927
      ],
      "op": "PUSH2",
      "path": "57",
      "value": "0xA46"
    },
    "2625": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1908,
        1927
      ],
      "op": "JUMPI",
      "path": "57"
    },
    "2626": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1908,
        1927
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x0"
    },
    "2628": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1908,
        1927
      ],
      "op": "DUP1",
      "path": "57"
    },
    "2629": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1908,
        1927
      ],
      "op": "REVERT",
      "path": "57"
    },
    "2630": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1908,
        1927
      ],
      "op": "JUMPDEST",
      "path": "57"
    },
    "2631": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1908,
        1927
      ],
      "op": "POP",
      "path": "57"
    },
    "2632": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1908,
        1927
      ],
      "op": "GAS",
      "path": "57"
    },
    "2633": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1908,
        1927
      ],
      "op": "STATICCALL",
      "path": "57"
    },
    "2634": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1908,
        1927
      ],
      "op": "ISZERO",
      "path": "57"
    },
    "2635": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1908,
        1927
      ],
      "op": "DUP1",
      "path": "57"
    },
    "2636": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1908,
        1927
      ],
      "op": "ISZERO",
      "path": "57"
    },
    "2637": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1908,
        1927
      ],
      "op": "PUSH2",
      "path": "57",
      "value": "0xA5A"
    },
    "2640": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1908,
        1927
      ],
      "op": "JUMPI",
      "path": "57"
    },
    "2641": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1908,
        1927
      ],
      "op": "RETURNDATASIZE",
      "path": "57"
    },
    "2642": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1908,
        1927
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x0"
    },
    "2644": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1908,
        1927
      ],
      "op": "DUP1",
      "path": "57"
    },
    "2645": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1908,
        1927
      ],
      "op": "RETURNDATACOPY",
      "path": "57"
    },
    "2646": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1908,
        1927
      ],
      "op": "RETURNDATASIZE",
      "path": "57"
    },
    "2647": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1908,
        1927
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x0"
    },
    "2649": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1908,
        1927
      ],
      "op": "REVERT",
      "path": "57"
    },
    "2650": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1908,
        1927
      ],
      "op": "JUMPDEST",
      "path": "57"
    },
    "2651": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1908,
        1927
      ],
      "op": "POP",
      "path": "57"
    },
    "2652": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1908,
        1927
      ],
      "op": "POP",
      "path": "57"
    },
    "2653": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1908,
        1927
      ],
      "op": "POP",
      "path": "57"
    },
    "2654": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1908,
        1927
      ],
      "op": "POP",
      "path": "57"
    },
    "2655": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1908,
        1927
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x40"
    },
    "2657": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1908,
        1927
      ],
      "op": "MLOAD",
      "path": "57"
    },
    "2658": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1908,
        1927
      ],
      "op": "RETURNDATASIZE",
      "path": "57"
    },
    "2659": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1908,
        1927
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x20"
    },
    "2661": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1908,
        1927
      ],
      "op": "DUP2",
      "path": "57"
    },
    "2662": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1908,
        1927
      ],
      "op": "LT",
      "path": "57"
    },
    "2663": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1908,
        1927
      ],
      "op": "ISZERO",
      "path": "57"
    },
    "2664": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1908,
        1927
      ],
      "op": "PUSH2",
      "path": "57",
      "value": "0xA70"
    },
    "2667": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1908,
        1927
      ],
      "op": "JUMPI",
      "path": "57"
    },
    "2668": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1908,
        1927
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x0"
    },
    "2670": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1908,
        1927
      ],
      "op": "DUP1",
      "path": "57"
    },
    "2671": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1908,
        1927
      ],
      "op": "REVERT",
      "path": "57"
    },
    "2672": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1908,
        1927
      ],
      "op": "JUMPDEST",
      "path": "57"
    },
    "2673": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1908,
        1927
      ],
      "op": "DUP2",
      "path": "57"
    },
    "2674": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1908,
        1927
      ],
      "op": "ADD",
      "path": "57"
    },
    "2675": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1908,
        1927
      ],
      "op": "SWAP1",
      "path": "57"
    },
    "2676": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1908,
        1927
      ],
      "op": "DUP1",
      "path": "57"
    },
    "2677": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1908,
        1927
      ],
      "op": "DUP1",
      "path": "57"
    },
    "2678": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1908,
        1927
      ],
      "op": "MLOAD",
      "path": "57"
    },
    "2679": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1908,
        1927
      ],
      "op": "SWAP1",
      "path": "57"
    },
    "2680": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1908,
        1927
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x20"
    },
    "2682": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1908,
        1927
      ],
      "op": "ADD",
      "path": "57"
    },
    "2683": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1908,
        1927
      ],
      "op": "SWAP1",
      "path": "57"
    },
    "2684": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1908,
        1927
      ],
      "op": "SWAP3",
      "path": "57"
    },
    "2685": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1908,
        1927
      ],
      "op": "SWAP2",
      "path": "57"
    },
    "2686": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1908,
        1927
      ],
      "op": "SWAP1",
      "path": "57"
    },
    "2687": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1908,
        1927
      ],
      "op": "POP",
      "path": "57"
    },
    "2688": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1908,
        1927
      ],
      "op": "POP",
      "path": "57"
    },
    "2689": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1908,
        1927
      ],
      "op": "POP",
      "path": "57"
    },
    "2690": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1888,
        1927
      ],
      "op": "SWAP1",
      "path": "57"
    },
    "2691": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1888,
        1927
      ],
      "op": "POP",
      "path": "57"
    },
    "2692": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1943,
        2171
      ],
      "op": "PUSH32",
      "path": "57",
      "statement": 7,
      "value": "0xAA3E88ACA472E90221DAF7D3D601ABAFB62B120319089D7A2C2F63588DA85529"
    },
    "2725": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1975,
        1983
      ],
      "op": "DUP12",
      "path": "57"
    },
    "2726": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1997,
        2001
      ],
      "op": "DUP12",
      "path": "57"
    },
    "2727": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        2015,
        2017
      ],
      "op": "DUP12",
      "path": "57"
    },
    "2728": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        2031,
        2037
      ],
      "op": "DUP12",
      "path": "57"
    },
    "2729": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        2051,
        2059
      ],
      "op": "DUP12",
      "path": "57"
    },
    "2730": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        2051,
        2059
      ],
      "op": "DUP12",
      "path": "57"
    },
    "2731": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        2073,
        2085
      ],
      "op": "DUP12",
      "path": "57"
    },
    "2732": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        2073,
        2085
      ],
      "op": "DUP12",
      "path": "57"
    },
    "2733": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        2107,
        2112
      ],
      "op": "DUP12",
      "path": "57"
    },
    "2734": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        2127,
        2138
      ],
      "op": "DUP12",
      "path": "57"
    },
    "2735": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        2152,
        2161
      ],
      "op": "DUP12",
      "path": "57"
    },
    "2736": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1943,
        2171
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x40"
    },
    "2738": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1943,
        2171
      ],
      "op": "MLOAD",
      "path": "57"
    },
    "2739": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1943,
        2171
      ],
      "op": "DUP1",
      "path": "57"
    },
    "2740": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1943,
        2171
      ],
      "op": "DUP13",
      "path": "57"
    },
    "2741": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2743": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2745": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2747": {
      "op": "SHL"
    },
    "2748": {
      "op": "SUB"
    },
    "2749": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1943,
        2171
      ],
      "op": "AND",
      "path": "57"
    },
    "2750": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1943,
        2171
      ],
      "op": "DUP2",
      "path": "57"
    },
    "2751": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1943,
        2171
      ],
      "op": "MSTORE",
      "path": "57"
    },
    "2752": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1943,
        2171
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x20"
    },
    "2754": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1943,
        2171
      ],
      "op": "ADD",
      "path": "57"
    },
    "2755": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1943,
        2171
      ],
      "op": "DUP12",
      "path": "57"
    },
    "2756": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2758": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2760": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2762": {
      "op": "SHL"
    },
    "2763": {
      "op": "SUB"
    },
    "2764": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1943,
        2171
      ],
      "op": "AND",
      "path": "57"
    },
    "2765": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1943,
        2171
      ],
      "op": "DUP2",
      "path": "57"
    },
    "2766": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1943,
        2171
      ],
      "op": "MSTORE",
      "path": "57"
    },
    "2767": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1943,
        2171
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x20"
    },
    "2769": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1943,
        2171
      ],
      "op": "ADD",
      "path": "57"
    },
    "2770": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1943,
        2171
      ],
      "op": "DUP11",
      "path": "57"
    },
    "2771": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2773": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2775": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2777": {
      "op": "SHL"
    },
    "2778": {
      "op": "SUB"
    },
    "2779": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1943,
        2171
      ],
      "op": "AND",
      "path": "57"
    },
    "2780": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1943,
        2171
      ],
      "op": "DUP2",
      "path": "57"
    },
    "2781": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1943,
        2171
      ],
      "op": "MSTORE",
      "path": "57"
    },
    "2782": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1943,
        2171
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x20"
    },
    "2784": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1943,
        2171
      ],
      "op": "ADD",
      "path": "57"
    },
    "2785": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1943,
        2171
      ],
      "op": "DUP10",
      "path": "57"
    },
    "2786": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1943,
        2171
      ],
      "op": "DUP2",
      "path": "57"
    },
    "2787": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1943,
        2171
      ],
      "op": "MSTORE",
      "path": "57"
    },
    "2788": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1943,
        2171
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x20"
    },
    "2790": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1943,
        2171
      ],
      "op": "ADD",
      "path": "57"
    },
    "2791": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1943,
        2171
      ],
      "op": "DUP1",
      "path": "57"
    },
    "2792": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1943,
        2171
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x20"
    },
    "2794": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1943,
        2171
      ],
      "op": "ADD",
      "path": "57"
    },
    "2795": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1943,
        2171
      ],
      "op": "DUP1",
      "path": "57"
    },
    "2796": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1943,
        2171
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x20"
    },
    "2798": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1943,
        2171
      ],
      "op": "ADD",
      "path": "57"
    },
    "2799": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1943,
        2171
      ],
      "op": "DUP7",
      "path": "57"
    },
    "2800": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2802": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2804": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2806": {
      "op": "SHL"
    },
    "2807": {
      "op": "SUB"
    },
    "2808": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1943,
        2171
      ],
      "op": "AND",
      "path": "57"
    },
    "2809": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1943,
        2171
      ],
      "op": "DUP2",
      "path": "57"
    },
    "2810": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1943,
        2171
      ],
      "op": "MSTORE",
      "path": "57"
    },
    "2811": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1943,
        2171
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x20"
    },
    "2813": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1943,
        2171
      ],
      "op": "ADD",
      "path": "57"
    },
    "2814": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1943,
        2171
      ],
      "op": "DUP6",
      "path": "57"
    },
    "2815": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1943,
        2171
      ],
      "op": "DUP2",
      "path": "57"
    },
    "2816": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1943,
        2171
      ],
      "op": "MSTORE",
      "path": "57"
    },
    "2817": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1943,
        2171
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x20"
    },
    "2819": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1943,
        2171
      ],
      "op": "ADD",
      "path": "57"
    },
    "2820": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1943,
        2171
      ],
      "op": "DUP5",
      "path": "57"
    },
    "2821": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1943,
        2171
      ],
      "op": "DUP2",
      "path": "57"
    },
    "2822": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1943,
        2171
      ],
      "op": "MSTORE",
      "path": "57"
    },
    "2823": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1943,
        2171
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x20"
    },
    "2825": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1943,
        2171
      ],
      "op": "ADD",
      "path": "57"
    },
    "2826": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1943,
        2171
      ],
      "op": "DUP4",
      "path": "57"
    },
    "2827": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1943,
        2171
      ],
      "op": "DUP2",
      "path": "57"
    },
    "2828": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1943,
        2171
      ],
      "op": "SUB",
      "path": "57"
    },
    "2829": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1943,
        2171
      ],
      "op": "DUP4",
      "path": "57"
    },
    "2830": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1943,
        2171
      ],
      "op": "MSTORE",
      "path": "57"
    },
    "2831": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1943,
        2171
      ],
      "op": "DUP11",
      "path": "57"
    },
    "2832": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1943,
        2171
      ],
      "op": "DUP11",
      "path": "57"
    },
    "2833": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1943,
        2171
      ],
      "op": "DUP3",
      "path": "57"
    },
    "2834": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1943,
        2171
      ],
      "op": "DUP2",
      "path": "57"
    },
    "2835": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1943,
        2171
      ],
      "op": "DUP2",
      "path": "57"
    },
    "2836": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1943,
        2171
      ],
      "op": "MSTORE",
      "path": "57"
    },
    "2837": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1943,
        2171
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x20"
    },
    "2839": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1943,
        2171
      ],
      "op": "ADD",
      "path": "57"
    },
    "2840": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1943,
        2171
      ],
      "op": "SWAP3",
      "path": "57"
    },
    "2841": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1943,
        2171
      ],
      "op": "POP",
      "path": "57"
    },
    "2842": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1943,
        2171
      ],
      "op": "DUP1",
      "path": "57"
    },
    "2843": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1943,
        2171
      ],
      "op": "DUP3",
      "path": "57"
    },
    "2844": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1943,
        2171
      ],
      "op": "DUP5",
      "path": "57"
    },
    "2845": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1943,
        2171
      ],
      "op": "CALLDATACOPY",
      "path": "57"
    },
    "2846": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1943,
        2171
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x0"
    },
    "2848": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1943,
        2171
      ],
      "op": "DUP4",
      "path": "57"
    },
    "2849": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1943,
        2171
      ],
      "op": "DUP3",
      "path": "57"
    },
    "2850": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1943,
        2171
      ],
      "op": "ADD",
      "path": "57"
    },
    "2851": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1943,
        2171
      ],
      "op": "MSTORE",
      "path": "57"
    },
    "2852": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1943,
        2171
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x1F"
    },
    "2854": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1943,
        2171
      ],
      "op": "ADD",
      "path": "57"
    },
    "2855": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2857": {
      "op": "NOT"
    },
    "2858": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1943,
        2171
      ],
      "op": "AND",
      "path": "57"
    },
    "2859": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1943,
        2171
      ],
      "op": "SWAP1",
      "path": "57"
    },
    "2860": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1943,
        2171
      ],
      "op": "SWAP2",
      "path": "57"
    },
    "2861": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1943,
        2171
      ],
      "op": "ADD",
      "path": "57"
    },
    "2862": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1943,
        2171
      ],
      "op": "DUP5",
      "path": "57"
    },
    "2863": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1943,
        2171
      ],
      "op": "DUP2",
      "path": "57"
    },
    "2864": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1943,
        2171
      ],
      "op": "SUB",
      "path": "57"
    },
    "2865": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1943,
        2171
      ],
      "op": "DUP4",
      "path": "57"
    },
    "2866": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1943,
        2171
      ],
      "op": "MSTORE",
      "path": "57"
    },
    "2867": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1943,
        2171
      ],
      "op": "DUP9",
      "path": "57"
    },
    "2868": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1943,
        2171
      ],
      "op": "DUP2",
      "path": "57"
    },
    "2869": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1943,
        2171
      ],
      "op": "MSTORE",
      "path": "57"
    },
    "2870": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1943,
        2171
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x20"
    },
    "2872": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1943,
        2171
      ],
      "op": "ADD",
      "path": "57"
    },
    "2873": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1943,
        2171
      ],
      "op": "SWAP1",
      "path": "57"
    },
    "2874": {
      "op": "POP"
    },
    "2875": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1943,
        2171
      ],
      "op": "DUP9",
      "path": "57"
    },
    "2876": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1943,
        2171
      ],
      "op": "DUP9",
      "path": "57"
    },
    "2877": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1943,
        2171
      ],
      "op": "DUP1",
      "path": "57"
    },
    "2878": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1943,
        2171
      ],
      "op": "DUP3",
      "path": "57"
    },
    "2879": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1943,
        2171
      ],
      "op": "DUP5",
      "path": "57"
    },
    "2880": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1943,
        2171
      ],
      "op": "CALLDATACOPY",
      "path": "57"
    },
    "2881": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1943,
        2171
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x0"
    },
    "2883": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1943,
        2171
      ],
      "op": "DUP4",
      "path": "57"
    },
    "2884": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1943,
        2171
      ],
      "op": "DUP3",
      "path": "57"
    },
    "2885": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1943,
        2171
      ],
      "op": "ADD",
      "path": "57"
    },
    "2886": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1943,
        2171
      ],
      "op": "MSTORE",
      "path": "57"
    },
    "2887": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1943,
        2171
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x40"
    },
    "2889": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1943,
        2171
      ],
      "op": "MLOAD",
      "path": "57"
    },
    "2890": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1943,
        2171
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x1F"
    },
    "2892": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1943,
        2171
      ],
      "op": "SWAP1",
      "path": "57"
    },
    "2893": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1943,
        2171
      ],
      "op": "SWAP2",
      "path": "57"
    },
    "2894": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1943,
        2171
      ],
      "op": "ADD",
      "path": "57"
    },
    "2895": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2897": {
      "op": "NOT"
    },
    "2898": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1943,
        2171
      ],
      "op": "AND",
      "path": "57"
    },
    "2899": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1943,
        2171
      ],
      "op": "SWAP1",
      "path": "57"
    },
    "2900": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1943,
        2171
      ],
      "op": "SWAP3",
      "path": "57"
    },
    "2901": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1943,
        2171
      ],
      "op": "ADD",
      "path": "57"
    },
    "2902": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1943,
        2171
      ],
      "op": "DUP3",
      "path": "57"
    },
    "2903": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1943,
        2171
      ],
      "op": "SWAP1",
      "path": "57"
    },
    "2904": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1943,
        2171
      ],
      "op": "SUB",
      "path": "57"
    },
    "2905": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1943,
        2171
      ],
      "op": "SWAP16",
      "path": "57"
    },
    "2906": {
      "op": "POP"
    },
    "2907": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1943,
        2171
      ],
      "op": "SWAP1",
      "path": "57"
    },
    "2908": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1943,
        2171
      ],
      "op": "SWAP14",
      "path": "57"
    },
    "2909": {
      "op": "POP"
    },
    "2910": {
      "op": "POP"
    },
    "2911": {
      "op": "POP"
    },
    "2912": {
      "op": "POP"
    },
    "2913": {
      "op": "POP"
    },
    "2914": {
      "op": "POP"
    },
    "2915": {
      "op": "POP"
    },
    "2916": {
      "op": "POP"
    },
    "2917": {
      "op": "POP"
    },
    "2918": {
      "op": "POP"
    },
    "2919": {
      "op": "POP"
    },
    "2920": {
      "op": "POP"
    },
    "2921": {
      "op": "POP"
    },
    "2922": {
      "op": "POP"
    },
    "2923": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1943,
        2171
      ],
      "op": "LOG1",
      "path": "57"
    },
    "2924": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1407,
        2178
      ],
      "op": "POP",
      "path": "57"
    },
    "2925": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1407,
        2178
      ],
      "op": "POP",
      "path": "57"
    },
    "2926": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1407,
        2178
      ],
      "op": "POP",
      "path": "57"
    },
    "2927": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1407,
        2178
      ],
      "op": "POP",
      "path": "57"
    },
    "2928": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1407,
        2178
      ],
      "op": "POP",
      "path": "57"
    },
    "2929": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1407,
        2178
      ],
      "op": "POP",
      "path": "57"
    },
    "2930": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1407,
        2178
      ],
      "op": "POP",
      "path": "57"
    },
    "2931": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1407,
        2178
      ],
      "op": "POP",
      "path": "57"
    },
    "2932": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1407,
        2178
      ],
      "op": "POP",
      "path": "57"
    },
    "2933": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1407,
        2178
      ],
      "op": "POP",
      "path": "57"
    },
    "2934": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1407,
        2178
      ],
      "op": "POP",
      "path": "57"
    },
    "2935": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "jump": "o",
      "offset": [
        1407,
        2178
      ],
      "op": "JUMP",
      "path": "57"
    },
    "2936": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3629,
        3791
      ],
      "op": "JUMPDEST",
      "path": "57"
    },
    "2937": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3692,
        3700
      ],
      "op": "PUSH1",
      "path": "57",
      "statement": 8,
      "value": "0x1"
    },
    "2939": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3692,
        3700
      ],
      "op": "SLOAD",
      "path": "57"
    },
    "2940": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3692,
        3784
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x40"
    },
    "2942": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3692,
        3784
      ],
      "op": "DUP1",
      "path": "57"
    },
    "2943": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3692,
        3784
      ],
      "op": "MLOAD",
      "path": "57"
    },
    "2944": {
      "op": "PUSH4",
      "value": "0x29965A1D"
    },
    "2949": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2951": {
      "op": "SHL"
    },
    "2952": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3692,
        3784
      ],
      "op": "DUP2",
      "path": "57"
    },
    "2953": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3692,
        3784
      ],
      "op": "MSTORE",
      "path": "57"
    },
    "2954": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3733,
        3737
      ],
      "op": "ADDRESS",
      "path": "57"
    },
    "2955": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3692,
        3784
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x4"
    },
    "2957": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3692,
        3784
      ],
      "op": "DUP3",
      "path": "57"
    },
    "2958": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3692,
        3784
      ],
      "op": "ADD",
      "path": "57"
    },
    "2959": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3692,
        3784
      ],
      "op": "MSTORE",
      "path": "57"
    },
    "2960": {
      "offset": [
        1366,
        1400
      ],
      "op": "PUSH32",
      "path": "57",
      "value": "0xB281FC8C12954D22544DB45DE3159A39272895B169A852B314F9CC762E44C53B"
    },
    "2993": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3692,
        3784
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x24"
    },
    "2995": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3692,
        3784
      ],
      "op": "DUP3",
      "path": "57"
    },
    "2996": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3692,
        3784
      ],
      "op": "ADD",
      "path": "57"
    },
    "2997": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3692,
        3784
      ],
      "op": "MSTORE",
      "path": "57"
    },
    "2998": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3000": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3002": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3004": {
      "op": "SHL"
    },
    "3005": {
      "op": "SUB"
    },
    "3006": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3692,
        3784
      ],
      "op": "DUP5",
      "path": "57"
    },
    "3007": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3692,
        3784
      ],
      "op": "DUP2",
      "path": "57"
    },
    "3008": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3692,
        3784
      ],
      "op": "AND",
      "path": "57"
    },
    "3009": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3692,
        3784
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x44"
    },
    "3011": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3692,
        3784
      ],
      "op": "DUP4",
      "path": "57"
    },
    "3012": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3692,
        3784
      ],
      "op": "ADD",
      "path": "57"
    },
    "3013": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3692,
        3784
      ],
      "op": "MSTORE",
      "path": "57"
    },
    "3014": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3692,
        3784
      ],
      "op": "SWAP2",
      "path": "57"
    },
    "3015": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3692,
        3784
      ],
      "op": "MLOAD",
      "path": "57"
    },
    "3016": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3692,
        3700
      ],
      "op": "PUSH3",
      "path": "57",
      "value": "0x10000"
    },
    "3020": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3692,
        3700
      ],
      "op": "SWAP1",
      "path": "57"
    },
    "3021": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3692,
        3700
      ],
      "op": "SWAP4",
      "path": "57"
    },
    "3022": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3692,
        3700
      ],
      "op": "DIV",
      "path": "57"
    },
    "3023": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3692,
        3700
      ],
      "op": "SWAP1",
      "path": "57"
    },
    "3024": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3692,
        3700
      ],
      "op": "SWAP2",
      "path": "57"
    },
    "3025": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3692,
        3700
      ],
      "op": "AND",
      "path": "57"
    },
    "3026": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3692,
        3700
      ],
      "op": "SWAP2",
      "path": "57"
    },
    "3027": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3692,
        3724
      ],
      "op": "PUSH4",
      "path": "57",
      "value": "0x29965A1D"
    },
    "3032": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3692,
        3724
      ],
      "op": "SWAP2",
      "path": "57"
    },
    "3033": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3692,
        3784
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x64"
    },
    "3035": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3692,
        3784
      ],
      "op": "DUP1",
      "path": "57"
    },
    "3036": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3692,
        3784
      ],
      "op": "DUP3",
      "path": "57"
    },
    "3037": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3692,
        3784
      ],
      "op": "ADD",
      "path": "57"
    },
    "3038": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3692,
        3784
      ],
      "op": "SWAP3",
      "path": "57"
    },
    "3039": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3041": {
      "op": "SWAP3"
    },
    "3042": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3692,
        3784
      ],
      "op": "SWAP1",
      "path": "57"
    },
    "3043": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3692,
        3784
      ],
      "op": "SWAP2",
      "path": "57"
    },
    "3044": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3692,
        3784
      ],
      "op": "SWAP1",
      "path": "57"
    },
    "3045": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3692,
        3784
      ],
      "op": "DUP3",
      "path": "57"
    },
    "3046": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3692,
        3784
      ],
      "op": "SWAP1",
      "path": "57"
    },
    "3047": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3692,
        3784
      ],
      "op": "SUB",
      "path": "57"
    },
    "3048": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3692,
        3784
      ],
      "op": "ADD",
      "path": "57"
    },
    "3049": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3692,
        3784
      ],
      "op": "DUP2",
      "path": "57"
    },
    "3050": {
      "op": "DUP4"
    },
    "3051": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3692,
        3700
      ],
      "op": "DUP8",
      "path": "57"
    },
    "3052": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3692,
        3784
      ],
      "op": "DUP1",
      "path": "57"
    },
    "3053": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3692,
        3784
      ],
      "op": "EXTCODESIZE",
      "path": "57"
    },
    "3054": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3692,
        3784
      ],
      "op": "ISZERO",
      "path": "57"
    },
    "3055": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3692,
        3784
      ],
      "op": "DUP1",
      "path": "57"
    },
    "3056": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3692,
        3784
      ],
      "op": "ISZERO",
      "path": "57"
    },
    "3057": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3692,
        3784
      ],
      "op": "PUSH2",
      "path": "57",
      "value": "0xBF9"
    },
    "3060": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3692,
        3784
      ],
      "op": "JUMPI",
      "path": "57"
    },
    "3061": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3692,
        3784
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x0"
    },
    "3063": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3692,
        3784
      ],
      "op": "DUP1",
      "path": "57"
    },
    "3064": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3692,
        3784
      ],
      "op": "REVERT",
      "path": "57"
    },
    "3065": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3692,
        3784
      ],
      "op": "JUMPDEST",
      "path": "57"
    },
    "3066": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3692,
        3784
      ],
      "op": "POP",
      "path": "57"
    },
    "3067": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3692,
        3784
      ],
      "op": "GAS",
      "path": "57"
    },
    "3068": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3692,
        3784
      ],
      "op": "CALL",
      "path": "57"
    },
    "3069": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3692,
        3784
      ],
      "op": "ISZERO",
      "path": "57"
    },
    "3070": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3692,
        3784
      ],
      "op": "DUP1",
      "path": "57"
    },
    "3071": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3692,
        3784
      ],
      "op": "ISZERO",
      "path": "57"
    },
    "3072": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3692,
        3784
      ],
      "op": "PUSH2",
      "path": "57",
      "value": "0xC0D"
    },
    "3075": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3692,
        3784
      ],
      "op": "JUMPI",
      "path": "57"
    },
    "3076": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3692,
        3784
      ],
      "op": "RETURNDATASIZE",
      "path": "57"
    },
    "3077": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3692,
        3784
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x0"
    },
    "3079": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3692,
        3784
      ],
      "op": "DUP1",
      "path": "57"
    },
    "3080": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3692,
        3784
      ],
      "op": "RETURNDATACOPY",
      "path": "57"
    },
    "3081": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3692,
        3784
      ],
      "op": "RETURNDATASIZE",
      "path": "57"
    },
    "3082": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3692,
        3784
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x0"
    },
    "3084": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3692,
        3784
      ],
      "op": "REVERT",
      "path": "57"
    },
    "3085": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3692,
        3784
      ],
      "op": "JUMPDEST",
      "path": "57"
    },
    "3086": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3692,
        3784
      ],
      "op": "POP",
      "path": "57"
    },
    "3087": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3692,
        3784
      ],
      "op": "POP",
      "path": "57"
    },
    "3088": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3692,
        3784
      ],
      "op": "POP",
      "path": "57"
    },
    "3089": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3692,
        3784
      ],
      "op": "POP",
      "path": "57"
    },
    "3090": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3629,
        3791
      ],
      "op": "POP",
      "path": "57"
    },
    "3091": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "jump": "o",
      "offset": [
        3629,
        3791
      ],
      "op": "JUMP",
      "path": "57"
    },
    "3092": {
      "fn": "ERC777SenderRecipientMock.setShouldRevertReceive",
      "offset": [
        3907,
        4017
      ],
      "op": "JUMPDEST",
      "path": "57"
    },
    "3093": {
      "fn": "ERC777SenderRecipientMock.setShouldRevertReceive",
      "offset": [
        3975,
        3995
      ],
      "op": "PUSH1",
      "path": "57",
      "statement": 9,
      "value": "0x1"
    },
    "3095": {
      "fn": "ERC777SenderRecipientMock.setShouldRevertReceive",
      "offset": [
        3975,
        4010
      ],
      "op": "DUP1",
      "path": "57"
    },
    "3096": {
      "fn": "ERC777SenderRecipientMock.setShouldRevertReceive",
      "offset": [
        3975,
        4010
      ],
      "op": "SLOAD",
      "path": "57"
    },
    "3097": {
      "fn": "ERC777SenderRecipientMock.setShouldRevertReceive",
      "offset": [
        3975,
        4010
      ],
      "op": "SWAP2",
      "path": "57"
    },
    "3098": {
      "fn": "ERC777SenderRecipientMock.setShouldRevertReceive",
      "offset": [
        3975,
        4010
      ],
      "op": "ISZERO",
      "path": "57"
    },
    "3099": {
      "fn": "ERC777SenderRecipientMock.setShouldRevertReceive",
      "offset": [
        3975,
        4010
      ],
      "op": "ISZERO",
      "path": "57"
    },
    "3100": {
      "fn": "ERC777SenderRecipientMock.setShouldRevertReceive",
      "offset": [
        3975,
        4010
      ],
      "op": "PUSH2",
      "path": "57",
      "value": "0x100"
    },
    "3103": {
      "fn": "ERC777SenderRecipientMock.setShouldRevertReceive",
      "offset": [
        3975,
        4010
      ],
      "op": "MUL",
      "path": "57"
    },
    "3104": {
      "op": "PUSH2",
      "value": "0xFF00"
    },
    "3107": {
      "op": "NOT"
    },
    "3108": {
      "fn": "ERC777SenderRecipientMock.setShouldRevertReceive",
      "offset": [
        3975,
        4010
      ],
      "op": "SWAP1",
      "path": "57"
    },
    "3109": {
      "fn": "ERC777SenderRecipientMock.setShouldRevertReceive",
      "offset": [
        3975,
        4010
      ],
      "op": "SWAP3",
      "path": "57"
    },
    "3110": {
      "fn": "ERC777SenderRecipientMock.setShouldRevertReceive",
      "offset": [
        3975,
        4010
      ],
      "op": "AND",
      "path": "57"
    },
    "3111": {
      "fn": "ERC777SenderRecipientMock.setShouldRevertReceive",
      "offset": [
        3975,
        4010
      ],
      "op": "SWAP2",
      "path": "57"
    },
    "3112": {
      "fn": "ERC777SenderRecipientMock.setShouldRevertReceive",
      "offset": [
        3975,
        4010
      ],
      "op": "SWAP1",
      "path": "57"
    },
    "3113": {
      "fn": "ERC777SenderRecipientMock.setShouldRevertReceive",
      "offset": [
        3975,
        4010
      ],
      "op": "SWAP2",
      "path": "57"
    },
    "3114": {
      "fn": "ERC777SenderRecipientMock.setShouldRevertReceive",
      "offset": [
        3975,
        4010
      ],
      "op": "OR",
      "path": "57"
    },
    "3115": {
      "fn": "ERC777SenderRecipientMock.setShouldRevertReceive",
      "offset": [
        3975,
        4010
      ],
      "op": "SWAP1",
      "path": "57"
    },
    "3116": {
      "fn": "ERC777SenderRecipientMock.setShouldRevertReceive",
      "offset": [
        3975,
        4010
      ],
      "op": "SSTORE",
      "path": "57"
    },
    "3117": {
      "fn": "ERC777SenderRecipientMock.setShouldRevertReceive",
      "jump": "o",
      "offset": [
        3907,
        4017
      ],
      "op": "JUMP",
      "path": "57"
    },
    "3118": {
      "fn": "ERC777SenderRecipientMock.senderFor",
      "offset": [
        2968,
        3210
      ],
      "op": "JUMPDEST",
      "path": "57"
    },
    "3119": {
      "fn": "ERC777SenderRecipientMock.senderFor",
      "offset": [
        3021,
        3089
      ],
      "op": "PUSH2",
      "path": "57",
      "statement": 10,
      "value": "0xC58"
    },
    "3122": {
      "offset": [
        1269,
        1300
      ],
      "op": "PUSH32",
      "path": "57",
      "value": "0x29DDB589B1FB5FC7CF394961C1ADF5F8C6454761ADF795E67FE149F658ABE895"
    },
    "3155": {
      "fn": "ERC777SenderRecipientMock.senderFor",
      "offset": [
        3081,
        3088
      ],
      "op": "DUP3",
      "path": "57"
    },
    "3156": {
      "fn": "ERC777SenderRecipientMock.senderFor",
      "offset": [
        3021,
        3049
      ],
      "op": "PUSH2",
      "path": "57",
      "value": "0xD41"
    },
    "3159": {
      "fn": "ERC777SenderRecipientMock.senderFor",
      "jump": "i",
      "offset": [
        3021,
        3089
      ],
      "op": "JUMP",
      "path": "57"
    },
    "3160": {
      "fn": "ERC777SenderRecipientMock.senderFor",
      "offset": [
        3021,
        3089
      ],
      "op": "JUMPDEST",
      "path": "57"
    },
    "3161": {
      "fn": "ERC777SenderRecipientMock.senderFor",
      "offset": [
        3123,
        3127
      ],
      "op": "ADDRESS",
      "path": "57"
    },
    "3162": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3164": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3166": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3168": {
      "op": "SHL"
    },
    "3169": {
      "op": "SUB"
    },
    "3170": {
      "fn": "ERC777SenderRecipientMock.senderFor",
      "offset": [
        3142,
        3157
      ],
      "op": "DUP3",
      "path": "57"
    },
    "3171": {
      "fn": "ERC777SenderRecipientMock.senderFor",
      "offset": [
        3142,
        3157
      ],
      "op": "AND",
      "path": "57"
    },
    "3172": {
      "fn": "ERC777SenderRecipientMock.senderFor",
      "offset": [
        3142,
        3157
      ],
      "op": "DUP2",
      "path": "57"
    },
    "3173": {
      "branch": 19,
      "fn": "ERC777SenderRecipientMock.senderFor",
      "offset": [
        3142,
        3157
      ],
      "op": "EQ",
      "path": "57"
    },
    "3174": {
      "fn": "ERC777SenderRecipientMock.senderFor",
      "offset": [
        3138,
        3204
      ],
      "op": "ISZERO",
      "path": "57"
    },
    "3175": {
      "fn": "ERC777SenderRecipientMock.senderFor",
      "offset": [
        3138,
        3204
      ],
      "op": "PUSH2",
      "path": "57",
      "value": "0xC73"
    },
    "3178": {
      "branch": 19,
      "fn": "ERC777SenderRecipientMock.senderFor",
      "offset": [
        3138,
        3204
      ],
      "op": "JUMPI",
      "path": "57"
    },
    "3179": {
      "fn": "ERC777SenderRecipientMock.senderFor",
      "offset": [
        3173,
        3193
      ],
      "op": "PUSH2",
      "path": "57",
      "statement": 11,
      "value": "0xC73"
    },
    "3182": {
      "fn": "ERC777SenderRecipientMock.senderFor",
      "offset": [
        3188,
        3192
      ],
      "op": "DUP2",
      "path": "57"
    },
    "3183": {
      "fn": "ERC777SenderRecipientMock.senderFor",
      "offset": [
        3173,
        3187
      ],
      "op": "PUSH2",
      "path": "57",
      "value": "0xCBC"
    },
    "3186": {
      "fn": "ERC777SenderRecipientMock.senderFor",
      "jump": "i",
      "offset": [
        3173,
        3193
      ],
      "op": "JUMP",
      "path": "57"
    },
    "3187": {
      "fn": "ERC777SenderRecipientMock.senderFor",
      "offset": [
        3173,
        3193
      ],
      "op": "JUMPDEST",
      "path": "57"
    },
    "3188": {
      "fn": "ERC777SenderRecipientMock.senderFor",
      "offset": [
        2968,
        3210
      ],
      "op": "POP",
      "path": "57"
    },
    "3189": {
      "fn": "ERC777SenderRecipientMock.senderFor",
      "offset": [
        2968,
        3210
      ],
      "op": "POP",
      "path": "57"
    },
    "3190": {
      "fn": "ERC777SenderRecipientMock.senderFor",
      "jump": "o",
      "offset": [
        2968,
        3210
      ],
      "op": "JUMP",
      "path": "57"
    },
    "3191": {
      "fn": "ERC777SenderRecipientMock.recipientFor",
      "offset": [
        3372,
        3623
      ],
      "op": "JUMPDEST",
      "path": "57"
    },
    "3192": {
      "fn": "ERC777SenderRecipientMock.recipientFor",
      "offset": [
        3428,
        3499
      ],
      "op": "PUSH2",
      "path": "57",
      "statement": 12,
      "value": "0xCA1"
    },
    "3195": {
      "offset": [
        1366,
        1400
      ],
      "op": "PUSH32",
      "path": "57",
      "value": "0xB281FC8C12954D22544DB45DE3159A39272895B169A852B314F9CC762E44C53B"
    },
    "3228": {
      "fn": "ERC777SenderRecipientMock.recipientFor",
      "offset": [
        3491,
        3498
      ],
      "op": "DUP3",
      "path": "57"
    },
    "3229": {
      "fn": "ERC777SenderRecipientMock.recipientFor",
      "offset": [
        3428,
        3456
      ],
      "op": "PUSH2",
      "path": "57",
      "value": "0xD41"
    },
    "3232": {
      "fn": "ERC777SenderRecipientMock.recipientFor",
      "jump": "i",
      "offset": [
        3428,
        3499
      ],
      "op": "JUMP",
      "path": "57"
    },
    "3233": {
      "fn": "ERC777SenderRecipientMock.recipientFor",
      "offset": [
        3428,
        3499
      ],
      "op": "JUMPDEST",
      "path": "57"
    },
    "3234": {
      "fn": "ERC777SenderRecipientMock.recipientFor",
      "offset": [
        3533,
        3537
      ],
      "op": "ADDRESS",
      "path": "57"
    },
    "3235": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3237": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3239": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3241": {
      "op": "SHL"
    },
    "3242": {
      "op": "SUB"
    },
    "3243": {
      "fn": "ERC777SenderRecipientMock.recipientFor",
      "offset": [
        3552,
        3567
      ],
      "op": "DUP3",
      "path": "57"
    },
    "3244": {
      "fn": "ERC777SenderRecipientMock.recipientFor",
      "offset": [
        3552,
        3567
      ],
      "op": "AND",
      "path": "57"
    },
    "3245": {
      "fn": "ERC777SenderRecipientMock.recipientFor",
      "offset": [
        3552,
        3567
      ],
      "op": "DUP2",
      "path": "57"
    },
    "3246": {
      "branch": 20,
      "fn": "ERC777SenderRecipientMock.recipientFor",
      "offset": [
        3552,
        3567
      ],
      "op": "EQ",
      "path": "57"
    },
    "3247": {
      "fn": "ERC777SenderRecipientMock.recipientFor",
      "offset": [
        3548,
        3617
      ],
      "op": "ISZERO",
      "path": "57"
    },
    "3248": {
      "fn": "ERC777SenderRecipientMock.recipientFor",
      "offset": [
        3548,
        3617
      ],
      "op": "PUSH2",
      "path": "57",
      "value": "0xC73"
    },
    "3251": {
      "branch": 20,
      "fn": "ERC777SenderRecipientMock.recipientFor",
      "offset": [
        3548,
        3617
      ],
      "op": "JUMPI",
      "path": "57"
    },
    "3252": {
      "fn": "ERC777SenderRecipientMock.recipientFor",
      "offset": [
        3583,
        3606
      ],
      "op": "PUSH2",
      "path": "57",
      "statement": 13,
      "value": "0xC73"
    },
    "3255": {
      "fn": "ERC777SenderRecipientMock.recipientFor",
      "offset": [
        3601,
        3605
      ],
      "op": "DUP2",
      "path": "57"
    },
    "3256": {
      "fn": "ERC777SenderRecipientMock.recipientFor",
      "offset": [
        3583,
        3600
      ],
      "op": "PUSH2",
      "path": "57",
      "value": "0xB78"
    },
    "3259": {
      "fn": "ERC777SenderRecipientMock.recipientFor",
      "jump": "i",
      "offset": [
        3583,
        3606
      ],
      "op": "JUMP",
      "path": "57"
    },
    "3260": {
      "fn": "ERC777SenderRecipientMock.registerSender",
      "offset": [
        3216,
        3366
      ],
      "op": "JUMPDEST",
      "path": "57"
    },
    "3261": {
      "fn": "ERC777SenderRecipientMock.registerSender",
      "offset": [
        3273,
        3281
      ],
      "op": "PUSH1",
      "path": "57",
      "statement": 14,
      "value": "0x1"
    },
    "3263": {
      "fn": "ERC777SenderRecipientMock.registerSender",
      "offset": [
        3273,
        3281
      ],
      "op": "SLOAD",
      "path": "57"
    },
    "3264": {
      "fn": "ERC777SenderRecipientMock.registerSender",
      "offset": [
        3273,
        3359
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x40"
    },
    "3266": {
      "fn": "ERC777SenderRecipientMock.registerSender",
      "offset": [
        3273,
        3359
      ],
      "op": "DUP1",
      "path": "57"
    },
    "3267": {
      "fn": "ERC777SenderRecipientMock.registerSender",
      "offset": [
        3273,
        3359
      ],
      "op": "MLOAD",
      "path": "57"
    },
    "3268": {
      "op": "PUSH4",
      "value": "0x29965A1D"
    },
    "3273": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3275": {
      "op": "SHL"
    },
    "3276": {
      "fn": "ERC777SenderRecipientMock.registerSender",
      "offset": [
        3273,
        3359
      ],
      "op": "DUP2",
      "path": "57"
    },
    "3277": {
      "fn": "ERC777SenderRecipientMock.registerSender",
      "offset": [
        3273,
        3359
      ],
      "op": "MSTORE",
      "path": "57"
    },
    "3278": {
      "fn": "ERC777SenderRecipientMock.registerSender",
      "offset": [
        3314,
        3318
      ],
      "op": "ADDRESS",
      "path": "57"
    },
    "3279": {
      "fn": "ERC777SenderRecipientMock.registerSender",
      "offset": [
        3273,
        3359
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x4"
    },
    "3281": {
      "fn": "ERC777SenderRecipientMock.registerSender",
      "offset": [
        3273,
        3359
      ],
      "op": "DUP3",
      "path": "57"
    },
    "3282": {
      "fn": "ERC777SenderRecipientMock.registerSender",
      "offset": [
        3273,
        3359
      ],
      "op": "ADD",
      "path": "57"
    },
    "3283": {
      "fn": "ERC777SenderRecipientMock.registerSender",
      "offset": [
        3273,
        3359
      ],
      "op": "MSTORE",
      "path": "57"
    },
    "3284": {
      "offset": [
        1269,
        1300
      ],
      "op": "PUSH32",
      "path": "57",
      "value": "0x29DDB589B1FB5FC7CF394961C1ADF5F8C6454761ADF795E67FE149F658ABE895"
    },
    "3317": {
      "fn": "ERC777SenderRecipientMock.registerSender",
      "offset": [
        3273,
        3359
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x24"
    },
    "3319": {
      "fn": "ERC777SenderRecipientMock.registerSender",
      "offset": [
        3273,
        3359
      ],
      "op": "DUP3",
      "path": "57"
    },
    "3320": {
      "fn": "ERC777SenderRecipientMock.registerSender",
      "offset": [
        3273,
        3359
      ],
      "op": "ADD",
      "path": "57"
    },
    "3321": {
      "fn": "ERC777SenderRecipientMock.registerSender",
      "offset": [
        3273,
        3359
      ],
      "op": "MSTORE",
      "path": "57"
    },
    "3322": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3324": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3326": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3328": {
      "op": "SHL"
    },
    "3329": {
      "op": "SUB"
    },
    "3330": {
      "fn": "ERC777SenderRecipientMock.registerSender",
      "offset": [
        3273,
        3359
      ],
      "op": "DUP5",
      "path": "57"
    },
    "3331": {
      "fn": "ERC777SenderRecipientMock.registerSender",
      "offset": [
        3273,
        3359
      ],
      "op": "DUP2",
      "path": "57"
    },
    "3332": {
      "fn": "ERC777SenderRecipientMock.registerSender",
      "offset": [
        3273,
        3359
      ],
      "op": "AND",
      "path": "57"
    },
    "3333": {
      "fn": "ERC777SenderRecipientMock.registerSender",
      "offset": [
        3273,
        3359
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x44"
    },
    "3335": {
      "fn": "ERC777SenderRecipientMock.registerSender",
      "offset": [
        3273,
        3359
      ],
      "op": "DUP4",
      "path": "57"
    },
    "3336": {
      "fn": "ERC777SenderRecipientMock.registerSender",
      "offset": [
        3273,
        3359
      ],
      "op": "ADD",
      "path": "57"
    },
    "3337": {
      "fn": "ERC777SenderRecipientMock.registerSender",
      "offset": [
        3273,
        3359
      ],
      "op": "MSTORE",
      "path": "57"
    },
    "3338": {
      "fn": "ERC777SenderRecipientMock.registerSender",
      "offset": [
        3273,
        3359
      ],
      "op": "SWAP2",
      "path": "57"
    },
    "3339": {
      "fn": "ERC777SenderRecipientMock.registerSender",
      "offset": [
        3273,
        3359
      ],
      "op": "MLOAD",
      "path": "57"
    },
    "3340": {
      "fn": "ERC777SenderRecipientMock.registerSender",
      "offset": [
        3273,
        3281
      ],
      "op": "PUSH3",
      "path": "57",
      "value": "0x10000"
    },
    "3344": {
      "fn": "ERC777SenderRecipientMock.registerSender",
      "offset": [
        3273,
        3281
      ],
      "op": "SWAP1",
      "path": "57"
    },
    "3345": {
      "fn": "ERC777SenderRecipientMock.registerSender",
      "offset": [
        3273,
        3281
      ],
      "op": "SWAP4",
      "path": "57"
    },
    "3346": {
      "fn": "ERC777SenderRecipientMock.registerSender",
      "offset": [
        3273,
        3281
      ],
      "op": "DIV",
      "path": "57"
    },
    "3347": {
      "fn": "ERC777SenderRecipientMock.registerSender",
      "offset": [
        3273,
        3281
      ],
      "op": "SWAP1",
      "path": "57"
    },
    "3348": {
      "fn": "ERC777SenderRecipientMock.registerSender",
      "offset": [
        3273,
        3281
      ],
      "op": "SWAP2",
      "path": "57"
    },
    "3349": {
      "fn": "ERC777SenderRecipientMock.registerSender",
      "offset": [
        3273,
        3281
      ],
      "op": "AND",
      "path": "57"
    },
    "3350": {
      "fn": "ERC777SenderRecipientMock.registerSender",
      "offset": [
        3273,
        3281
      ],
      "op": "SWAP2",
      "path": "57"
    },
    "3351": {
      "fn": "ERC777SenderRecipientMock.registerSender",
      "offset": [
        3273,
        3305
      ],
      "op": "PUSH4",
      "path": "57",
      "value": "0x29965A1D"
    },
    "3356": {
      "fn": "ERC777SenderRecipientMock.registerSender",
      "offset": [
        3273,
        3305
      ],
      "op": "SWAP2",
      "path": "57"
    },
    "3357": {
      "fn": "ERC777SenderRecipientMock.registerSender",
      "offset": [
        3273,
        3359
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x64"
    },
    "3359": {
      "fn": "ERC777SenderRecipientMock.registerSender",
      "offset": [
        3273,
        3359
      ],
      "op": "DUP1",
      "path": "57"
    },
    "3360": {
      "fn": "ERC777SenderRecipientMock.registerSender",
      "offset": [
        3273,
        3359
      ],
      "op": "DUP3",
      "path": "57"
    },
    "3361": {
      "fn": "ERC777SenderRecipientMock.registerSender",
      "offset": [
        3273,
        3359
      ],
      "op": "ADD",
      "path": "57"
    },
    "3362": {
      "fn": "ERC777SenderRecipientMock.registerSender",
      "offset": [
        3273,
        3359
      ],
      "op": "SWAP3",
      "path": "57"
    },
    "3363": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3365": {
      "op": "SWAP3"
    },
    "3366": {
      "fn": "ERC777SenderRecipientMock.registerSender",
      "offset": [
        3273,
        3359
      ],
      "op": "SWAP1",
      "path": "57"
    },
    "3367": {
      "fn": "ERC777SenderRecipientMock.registerSender",
      "offset": [
        3273,
        3359
      ],
      "op": "SWAP2",
      "path": "57"
    },
    "3368": {
      "fn": "ERC777SenderRecipientMock.registerSender",
      "offset": [
        3273,
        3359
      ],
      "op": "SWAP1",
      "path": "57"
    },
    "3369": {
      "fn": "ERC777SenderRecipientMock.registerSender",
      "offset": [
        3273,
        3359
      ],
      "op": "DUP3",
      "path": "57"
    },
    "3370": {
      "fn": "ERC777SenderRecipientMock.registerSender",
      "offset": [
        3273,
        3359
      ],
      "op": "SWAP1",
      "path": "57"
    },
    "3371": {
      "fn": "ERC777SenderRecipientMock.registerSender",
      "offset": [
        3273,
        3359
      ],
      "op": "SUB",
      "path": "57"
    },
    "3372": {
      "fn": "ERC777SenderRecipientMock.registerSender",
      "offset": [
        3273,
        3359
      ],
      "op": "ADD",
      "path": "57"
    },
    "3373": {
      "fn": "ERC777SenderRecipientMock.registerSender",
      "offset": [
        3273,
        3359
      ],
      "op": "DUP2",
      "path": "57"
    },
    "3374": {
      "op": "DUP4"
    },
    "3375": {
      "fn": "ERC777SenderRecipientMock.registerSender",
      "offset": [
        3273,
        3281
      ],
      "op": "DUP8",
      "path": "57"
    },
    "3376": {
      "fn": "ERC777SenderRecipientMock.registerSender",
      "offset": [
        3273,
        3359
      ],
      "op": "DUP1",
      "path": "57"
    },
    "3377": {
      "fn": "ERC777SenderRecipientMock.registerSender",
      "offset": [
        3273,
        3359
      ],
      "op": "EXTCODESIZE",
      "path": "57"
    },
    "3378": {
      "fn": "ERC777SenderRecipientMock.registerSender",
      "offset": [
        3273,
        3359
      ],
      "op": "ISZERO",
      "path": "57"
    },
    "3379": {
      "fn": "ERC777SenderRecipientMock.registerSender",
      "offset": [
        3273,
        3359
      ],
      "op": "DUP1",
      "path": "57"
    },
    "3380": {
      "fn": "ERC777SenderRecipientMock.registerSender",
      "offset": [
        3273,
        3359
      ],
      "op": "ISZERO",
      "path": "57"
    },
    "3381": {
      "fn": "ERC777SenderRecipientMock.registerSender",
      "offset": [
        3273,
        3359
      ],
      "op": "PUSH2",
      "path": "57",
      "value": "0xBF9"
    },
    "3384": {
      "fn": "ERC777SenderRecipientMock.registerSender",
      "offset": [
        3273,
        3359
      ],
      "op": "JUMPI",
      "path": "57"
    },
    "3385": {
      "fn": "ERC777SenderRecipientMock.registerSender",
      "offset": [
        3273,
        3359
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x0"
    },
    "3387": {
      "fn": "ERC777SenderRecipientMock.registerSender",
      "offset": [
        3273,
        3359
      ],
      "op": "DUP1",
      "path": "57"
    },
    "3388": {
      "fn": "ERC777SenderRecipientMock.registerSender",
      "offset": [
        3273,
        3359
      ],
      "op": "REVERT",
      "path": "57"
    },
    "3389": {
      "fn": "Context._msgSender",
      "offset": [
        598,
        702
      ],
      "op": "JUMPDEST",
      "path": "120"
    },
    "3390": {
      "fn": "Context._msgSender",
      "offset": [
        685,
        695
      ],
      "op": "CALLER",
      "path": "120",
      "statement": 15
    },
    "3391": {
      "fn": "Context._msgSender",
      "offset": [
        598,
        702
      ],
      "op": "SWAP1",
      "path": "120"
    },
    "3392": {
      "fn": "Context._msgSender",
      "jump": "o",
      "offset": [
        598,
        702
      ],
      "op": "JUMP",
      "path": "120"
    },
    "3393": {
      "fn": "ERC1820Implementer._registerInterfaceForAddress",
      "offset": [
        1209,
        1372
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "3394": {
      "fn": "ERC1820Implementer._registerInterfaceForAddress",
      "offset": [
        1314,
        1334
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 16,
      "value": "0x0"
    },
    "3396": {
      "fn": "ERC1820Implementer._registerInterfaceForAddress",
      "offset": [
        1314,
        1349
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "3397": {
      "fn": "ERC1820Implementer._registerInterfaceForAddress",
      "offset": [
        1314,
        1349
      ],
      "op": "DUP3",
      "path": "14"
    },
    "3398": {
      "fn": "ERC1820Implementer._registerInterfaceForAddress",
      "offset": [
        1314,
        1349
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3399": {
      "fn": "ERC1820Implementer._registerInterfaceForAddress",
      "offset": [
        1314,
        1349
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "3401": {
      "fn": "ERC1820Implementer._registerInterfaceForAddress",
      "offset": [
        1314,
        1349
      ],
      "op": "DUP3",
      "path": "14"
    },
    "3402": {
      "fn": "ERC1820Implementer._registerInterfaceForAddress",
      "offset": [
        1314,
        1349
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3403": {
      "fn": "ERC1820Implementer._registerInterfaceForAddress",
      "offset": [
        1314,
        1349
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3404": {
      "fn": "ERC1820Implementer._registerInterfaceForAddress",
      "offset": [
        1314,
        1349
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "3406": {
      "fn": "ERC1820Implementer._registerInterfaceForAddress",
      "offset": [
        1314,
        1349
      ],
      "op": "DUP1",
      "path": "14"
    },
    "3407": {
      "fn": "ERC1820Implementer._registerInterfaceForAddress",
      "offset": [
        1314,
        1349
      ],
      "op": "DUP5",
      "path": "14"
    },
    "3408": {
      "fn": "ERC1820Implementer._registerInterfaceForAddress",
      "offset": [
        1314,
        1349
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "3409": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3411": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3413": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3415": {
      "op": "SHL"
    },
    "3416": {
      "op": "SUB"
    },
    "3417": {
      "fn": "ERC1820Implementer._registerInterfaceForAddress",
      "offset": [
        1314,
        1358
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3418": {
      "fn": "ERC1820Implementer._registerInterfaceForAddress",
      "offset": [
        1314,
        1358
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "3419": {
      "fn": "ERC1820Implementer._registerInterfaceForAddress",
      "offset": [
        1314,
        1358
      ],
      "op": "AND",
      "path": "14"
    },
    "3420": {
      "fn": "ERC1820Implementer._registerInterfaceForAddress",
      "offset": [
        1314,
        1358
      ],
      "op": "DUP5",
      "path": "14"
    },
    "3421": {
      "fn": "ERC1820Implementer._registerInterfaceForAddress",
      "offset": [
        1314,
        1358
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3422": {
      "fn": "ERC1820Implementer._registerInterfaceForAddress",
      "offset": [
        1314,
        1358
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "3423": {
      "fn": "ERC1820Implementer._registerInterfaceForAddress",
      "offset": [
        1314,
        1358
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3424": {
      "fn": "ERC1820Implementer._registerInterfaceForAddress",
      "offset": [
        1314,
        1358
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3425": {
      "fn": "ERC1820Implementer._registerInterfaceForAddress",
      "offset": [
        1314,
        1358
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3426": {
      "fn": "ERC1820Implementer._registerInterfaceForAddress",
      "offset": [
        1314,
        1358
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "3427": {
      "fn": "ERC1820Implementer._registerInterfaceForAddress",
      "offset": [
        1314,
        1365
      ],
      "op": "DUP1",
      "path": "14"
    },
    "3428": {
      "fn": "ERC1820Implementer._registerInterfaceForAddress",
      "offset": [
        1314,
        1365
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "3429": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "3431": {
      "op": "NOT"
    },
    "3432": {
      "fn": "ERC1820Implementer._registerInterfaceForAddress",
      "offset": [
        1314,
        1365
      ],
      "op": "AND",
      "path": "14"
    },
    "3433": {
      "fn": "ERC1820Implementer._registerInterfaceForAddress",
      "offset": [
        1361,
        1365
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1"
    },
    "3435": {
      "fn": "ERC1820Implementer._registerInterfaceForAddress",
      "offset": [
        1314,
        1365
      ],
      "op": "OR",
      "path": "14"
    },
    "3436": {
      "fn": "ERC1820Implementer._registerInterfaceForAddress",
      "offset": [
        1314,
        1365
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3437": {
      "fn": "ERC1820Implementer._registerInterfaceForAddress",
      "offset": [
        1314,
        1365
      ],
      "op": "SSTORE",
      "path": "14"
    },
    "3438": {
      "fn": "ERC1820Implementer._registerInterfaceForAddress",
      "jump": "o",
      "offset": [
        1209,
        1372
      ],
      "op": "JUMP",
      "path": "14"
    }
  },
  "sha1": "933cabc0c0ef52d17ca95cd8019af19f2d356b26",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.0 <0.8.0;\n\nimport \"../utils/Context.sol\";\nimport \"../token/ERC777/IERC777.sol\";\nimport \"../token/ERC777/IERC777Sender.sol\";\nimport \"../token/ERC777/IERC777Recipient.sol\";\nimport \"../introspection/IERC1820Registry.sol\";\nimport \"../introspection/ERC1820Implementer.sol\";\n\ncontract ERC777SenderRecipientMock is Context, IERC777Sender, IERC777Recipient, ERC1820Implementer {\n    event TokensToSendCalled(\n        address operator,\n        address from,\n        address to,\n        uint256 amount,\n        bytes data,\n        bytes operatorData,\n        address token,\n        uint256 fromBalance,\n        uint256 toBalance\n    );\n\n    event TokensReceivedCalled(\n        address operator,\n        address from,\n        address to,\n        uint256 amount,\n        bytes data,\n        bytes operatorData,\n        address token,\n        uint256 fromBalance,\n        uint256 toBalance\n    );\n\n    // Emitted in ERC777Mock. Here for easier decoding\n    event BeforeTokenTransfer();\n\n    bool private _shouldRevertSend;\n    bool private _shouldRevertReceive;\n\n    IERC1820Registry private _erc1820 = IERC1820Registry(0x1820a4B7618BdE71Dce8cdc73aAB6C95905faD24);\n\n    bytes32 constant private _TOKENS_SENDER_INTERFACE_HASH = keccak256(\"ERC777TokensSender\");\n    bytes32 constant private _TOKENS_RECIPIENT_INTERFACE_HASH = keccak256(\"ERC777TokensRecipient\");\n\n    function tokensToSend(\n        address operator,\n        address from,\n        address to,\n        uint256 amount,\n        bytes calldata userData,\n        bytes calldata operatorData\n    ) external override {\n        if (_shouldRevertSend) {\n            revert();\n        }\n\n        IERC777 token = IERC777(_msgSender());\n\n        uint256 fromBalance = token.balanceOf(from);\n        // when called due to burn, to will be the zero address, which will have a balance of 0\n        uint256 toBalance = token.balanceOf(to);\n\n        emit TokensToSendCalled(\n            operator,\n            from,\n            to,\n            amount,\n            userData,\n            operatorData,\n            address(token),\n            fromBalance,\n            toBalance\n        );\n    }\n\n    function tokensReceived(\n        address operator,\n        address from,\n        address to,\n        uint256 amount,\n        bytes calldata userData,\n        bytes calldata operatorData\n    ) external override {\n        if (_shouldRevertReceive) {\n            revert();\n        }\n\n        IERC777 token = IERC777(_msgSender());\n\n        uint256 fromBalance = token.balanceOf(from);\n        // when called due to burn, to will be the zero address, which will have a balance of 0\n        uint256 toBalance = token.balanceOf(to);\n\n        emit TokensReceivedCalled(\n            operator,\n            from,\n            to,\n            amount,\n            userData,\n            operatorData,\n            address(token),\n            fromBalance,\n            toBalance\n        );\n    }\n\n    function senderFor(address account) public {\n        _registerInterfaceForAddress(_TOKENS_SENDER_INTERFACE_HASH, account);\n\n        address self = address(this);\n        if (account == self) {\n            registerSender(self);\n        }\n    }\n\n    function registerSender(address sender) public {\n        _erc1820.setInterfaceImplementer(address(this), _TOKENS_SENDER_INTERFACE_HASH, sender);\n    }\n\n    function recipientFor(address account) public {\n        _registerInterfaceForAddress(_TOKENS_RECIPIENT_INTERFACE_HASH, account);\n\n        address self = address(this);\n        if (account == self) {\n            registerRecipient(self);\n        }\n    }\n\n    function registerRecipient(address recipient) public {\n        _erc1820.setInterfaceImplementer(address(this), _TOKENS_RECIPIENT_INTERFACE_HASH, recipient);\n    }\n\n    function setShouldRevertSend(bool shouldRevert) public {\n        _shouldRevertSend = shouldRevert;\n    }\n\n    function setShouldRevertReceive(bool shouldRevert) public {\n        _shouldRevertReceive = shouldRevert;\n    }\n\n    function send(IERC777 token, address to, uint256 amount, bytes memory data) public {\n        // This is 777's send function, not the Solidity send function\n        token.send(to, amount, data); // solhint-disable-line check-send-result\n    }\n\n    function burn(IERC777 token, uint256 amount, bytes memory data) public {\n        token.burn(amount, data);\n    }\n}\n\n",
  "sourceMap": "325:4059:57:-:0;;;1109:96;;;-1:-1:-1;;;;;;1109:96:57;;;;;325:4059;;;;;;;;;;;;;;;;",
  "sourcePath": "contracts/openzeppelin/mocks/ERC777SenderRecipientMock.sol",
  "type": "contract"
}