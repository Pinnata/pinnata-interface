{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_logic",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "stateMutability": "payable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "implementation",
          "type": "address"
        }
      ],
      "name": "Upgraded",
      "type": "event"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "allSourcePaths": {
    "128": "contracts/openzeppelin/proxy/Proxy.sol",
    "132": "contracts/openzeppelin/proxy/UpgradeableProxy.sol",
    "161": "contracts/openzeppelin/utils/Address.sol"
  },
  "ast": {
    "absolutePath": "contracts/openzeppelin/proxy/UpgradeableProxy.sol",
    "exportedSymbols": {
      "UpgradeableProxy": [
        19582
      ]
    },
    "id": 19583,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 19477,
        "literals": [
          "solidity",
          ">=",
          "0.6",
          ".0",
          "<",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:31:132"
      },
      {
        "absolutePath": "contracts/openzeppelin/proxy/Proxy.sol",
        "file": "./Proxy.sol",
        "id": 19478,
        "nodeType": "ImportDirective",
        "scope": 19583,
        "sourceUnit": 19065,
        "src": "66:21:132",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/openzeppelin/utils/Address.sol",
        "file": "../utils/Address.sol",
        "id": 19479,
        "nodeType": "ImportDirective",
        "scope": 19583,
        "sourceUnit": 25115,
        "src": "88:30:132",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 19481,
              "name": "Proxy",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 19064,
              "src": "667:5:132",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Proxy_$19064",
                "typeString": "contract Proxy"
              }
            },
            "id": 19482,
            "nodeType": "InheritanceSpecifier",
            "src": "667:5:132"
          }
        ],
        "contractDependencies": [
          19064
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 19480,
          "nodeType": "StructuredDocumentation",
          "src": "120:517:132",
          "text": " @dev This contract implements an upgradeable proxy. It is upgradeable because calls are delegated to an\n implementation address that can be changed. This address is stored in storage in the location specified by\n https://eips.ethereum.org/EIPS/eip-1967[EIP1967], so that it doesn't conflict with the storage layout of the\n implementation behind the proxy.\n Upgradeability is only provided internally through {_upgradeTo}. For an externally upgradeable proxy see\n {TransparentUpgradeableProxy}."
        },
        "fullyImplemented": true,
        "id": 19582,
        "linearizedBaseContracts": [
          19582,
          19064
        ],
        "name": "UpgradeableProxy",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 19523,
              "nodeType": "Block",
              "src": "1082:246:132",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 19503,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 19491,
                          "name": "_IMPLEMENTATION_SLOT",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 19533,
                          "src": "1099:20:132",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 19501,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "arguments": [
                                      {
                                        "argumentTypes": null,
                                        "hexValue": "656970313936372e70726f78792e696d706c656d656e746174696f6e",
                                        "id": 19497,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "string",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "1149:30:132",
                                        "subdenomination": null,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_stringliteral_360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbd",
                                          "typeString": "literal_string \"eip1967.proxy.implementation\""
                                        },
                                        "value": "eip1967.proxy.implementation"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_stringliteral_360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbd",
                                          "typeString": "literal_string \"eip1967.proxy.implementation\""
                                        }
                                      ],
                                      "id": 19496,
                                      "name": "keccak256",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -8,
                                      "src": "1139:9:132",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                        "typeString": "function (bytes memory) pure returns (bytes32)"
                                      }
                                    },
                                    "id": 19498,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "1139:41:132",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  ],
                                  "id": 19495,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "1131:7:132",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_uint256_$",
                                    "typeString": "type(uint256)"
                                  },
                                  "typeName": {
                                    "id": 19494,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "1131:7:132",
                                    "typeDescriptions": {
                                      "typeIdentifier": null,
                                      "typeString": null
                                    }
                                  }
                                },
                                "id": 19499,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1131:50:132",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "argumentTypes": null,
                                "hexValue": "31",
                                "id": 19500,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1184:1:132",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              },
                              "src": "1131:54:132",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 19493,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1123:7:132",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_bytes32_$",
                              "typeString": "type(bytes32)"
                            },
                            "typeName": {
                              "id": 19492,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "1123:7:132",
                              "typeDescriptions": {
                                "typeIdentifier": null,
                                "typeString": null
                              }
                            }
                          },
                          "id": 19502,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1123:63:132",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "1099:87:132",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 19490,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -3,
                      "src": "1092:6:132",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 19504,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1092:95:132",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 19505,
                  "nodeType": "ExpressionStatement",
                  "src": "1092:95:132"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 19507,
                        "name": "_logic",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19485,
                        "src": "1216:6:132",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 19506,
                      "name": "_setImplementation",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19581,
                      "src": "1197:18:132",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 19508,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1197:26:132",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 19509,
                  "nodeType": "ExpressionStatement",
                  "src": "1197:26:132"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 19513,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 19510,
                        "name": "_data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19487,
                        "src": "1236:5:132",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      "id": 19511,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1236:12:132",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 19512,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1251:1:132",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1236:16:132",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 19522,
                  "nodeType": "IfStatement",
                  "src": "1233:89:132",
                  "trueBody": {
                    "id": 19521,
                    "nodeType": "Block",
                    "src": "1254:68:132",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 19517,
                              "name": "_logic",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 19485,
                              "src": "1297:6:132",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 19518,
                              "name": "_data",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 19487,
                              "src": "1305:5:132",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 19514,
                              "name": "Address",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 25114,
                              "src": "1268:7:132",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_Address_$25114_$",
                                "typeString": "type(library Address)"
                              }
                            },
                            "id": 19516,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "functionDelegateCall",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 25048,
                            "src": "1268:28:132",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function (address,bytes memory) returns (bytes memory)"
                            }
                          },
                          "id": 19519,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1268:43:132",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "id": 19520,
                        "nodeType": "ExpressionStatement",
                        "src": "1268:43:132"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 19483,
              "nodeType": "StructuredDocumentation",
              "src": "679:335:132",
              "text": " @dev Initializes the upgradeable proxy with an initial implementation specified by `_logic`.\n If `_data` is nonempty, it's used as data in a delegate call to `_logic`. This will typically be an encoded\n function call, and allows initializating the storage of the proxy like a Solidity constructor."
            },
            "id": 19524,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 19488,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 19485,
                  "mutability": "mutable",
                  "name": "_logic",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 19524,
                  "src": "1031:14:132",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 19484,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1031:7:132",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 19487,
                  "mutability": "mutable",
                  "name": "_data",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 19524,
                  "src": "1047:18:132",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 19486,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1047:5:132",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1030:36:132"
            },
            "returnParameters": {
              "id": 19489,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1082:0:132"
            },
            "scope": 19582,
            "src": "1019:309:132",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 19525,
              "nodeType": "StructuredDocumentation",
              "src": "1334:68:132",
              "text": " @dev Emitted when the implementation is upgraded."
            },
            "id": 19529,
            "name": "Upgraded",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 19528,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 19527,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "implementation",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 19529,
                  "src": "1422:30:132",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 19526,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1422:7:132",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1421:32:132"
            },
            "src": "1407:47:132"
          },
          {
            "constant": true,
            "documentation": {
              "id": 19530,
              "nodeType": "StructuredDocumentation",
              "src": "1460:214:132",
              "text": " @dev Storage slot with the address of the current implementation.\n This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1, and is\n validated in the constructor."
            },
            "id": 19533,
            "mutability": "constant",
            "name": "_IMPLEMENTATION_SLOT",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 19582,
            "src": "1679:114:132",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 19531,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "1679:7:132",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "307833363038393461313362613161333231303636376338323834393264623938646361336532303736636333373335613932306133636135303564333832626263",
              "id": 19532,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1727:66:132",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_24440054405305269366569402256811496959409073762505157381672968839269610695612_by_1",
                "typeString": "int_const 2444...(69 digits omitted)...5612"
              },
              "value": "0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc"
            },
            "visibility": "private"
          },
          {
            "baseFunctions": [
              19029
            ],
            "body": {
              "id": 19545,
              "nodeType": "Block",
              "src": "1953:169:132",
              "statements": [
                {
                  "assignments": [
                    19541
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 19541,
                      "mutability": "mutable",
                      "name": "slot",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 19545,
                      "src": "1963:12:132",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 19540,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1963:7:132",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 19543,
                  "initialValue": {
                    "argumentTypes": null,
                    "id": 19542,
                    "name": "_IMPLEMENTATION_SLOT",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 19533,
                    "src": "1978:20:132",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1963:35:132"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "2073:43:132",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "2087:19:132",
                        "value": {
                          "arguments": [
                            {
                              "name": "slot",
                              "nodeType": "YulIdentifier",
                              "src": "2101:4:132"
                            }
                          ],
                          "functionName": {
                            "name": "sload",
                            "nodeType": "YulIdentifier",
                            "src": "2095:5:132"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2095:11:132"
                        },
                        "variableNames": [
                          {
                            "name": "impl",
                            "nodeType": "YulIdentifier",
                            "src": "2087:4:132"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "istanbul",
                  "externalReferences": [
                    {
                      "declaration": 19538,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "2087:4:132",
                      "valueSize": 1
                    },
                    {
                      "declaration": 19541,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "2101:4:132",
                      "valueSize": 1
                    }
                  ],
                  "id": 19544,
                  "nodeType": "InlineAssembly",
                  "src": "2064:52:132"
                }
              ]
            },
            "documentation": {
              "id": 19534,
              "nodeType": "StructuredDocumentation",
              "src": "1800:67:132",
              "text": " @dev Returns the current implementation address."
            },
            "id": 19546,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_implementation",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 19536,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1921:8:132"
            },
            "parameters": {
              "id": 19535,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1896:2:132"
            },
            "returnParameters": {
              "id": 19539,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 19538,
                  "mutability": "mutable",
                  "name": "impl",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 19546,
                  "src": "1939:12:132",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 19537,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1939:7:132",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1938:14:132"
            },
            "scope": 19582,
            "src": "1872:250:132",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 19560,
              "nodeType": "Block",
              "src": "2305:96:132",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 19553,
                        "name": "newImplementation",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19549,
                        "src": "2334:17:132",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 19552,
                      "name": "_setImplementation",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19581,
                      "src": "2315:18:132",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 19554,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2315:37:132",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 19555,
                  "nodeType": "ExpressionStatement",
                  "src": "2315:37:132"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 19557,
                        "name": "newImplementation",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19549,
                        "src": "2376:17:132",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 19556,
                      "name": "Upgraded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19529,
                      "src": "2367:8:132",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 19558,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2367:27:132",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 19559,
                  "nodeType": "EmitStatement",
                  "src": "2362:32:132"
                }
              ]
            },
            "documentation": {
              "id": 19547,
              "nodeType": "StructuredDocumentation",
              "src": "2128:108:132",
              "text": " @dev Upgrades the proxy to a new implementation.\n Emits an {Upgraded} event."
            },
            "id": 19561,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_upgradeTo",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 19550,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 19549,
                  "mutability": "mutable",
                  "name": "newImplementation",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 19561,
                  "src": "2261:25:132",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 19548,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2261:7:132",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2260:27:132"
            },
            "returnParameters": {
              "id": 19551,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2305:0:132"
            },
            "scope": 19582,
            "src": "2241:160:132",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 19580,
              "nodeType": "Block",
              "src": "2555:297:132",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 19570,
                            "name": "newImplementation",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 19564,
                            "src": "2592:17:132",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 19568,
                            "name": "Address",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 25114,
                            "src": "2573:7:132",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_Address_$25114_$",
                              "typeString": "type(library Address)"
                            }
                          },
                          "id": 19569,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isContract",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 24838,
                          "src": "2573:18:132",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view returns (bool)"
                          }
                        },
                        "id": 19571,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2573:37:132",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5570677261646561626c6550726f78793a206e657720696d706c656d656e746174696f6e206973206e6f74206120636f6e7472616374",
                        "id": 19572,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2612:56:132",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a962afc8125c78a56caf50b104c38b8318717478c281b4e59e7fb3e32af3a877",
                          "typeString": "literal_string \"UpgradeableProxy: new implementation is not a contract\""
                        },
                        "value": "UpgradeableProxy: new implementation is not a contract"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a962afc8125c78a56caf50b104c38b8318717478c281b4e59e7fb3e32af3a877",
                          "typeString": "literal_string \"UpgradeableProxy: new implementation is not a contract\""
                        }
                      ],
                      "id": 19567,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2565:7:132",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 19573,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2565:104:132",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 19574,
                  "nodeType": "ExpressionStatement",
                  "src": "2565:104:132"
                },
                {
                  "assignments": [
                    19576
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 19576,
                      "mutability": "mutable",
                      "name": "slot",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 19580,
                      "src": "2680:12:132",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 19575,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "2680:7:132",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 19578,
                  "initialValue": {
                    "argumentTypes": null,
                    "id": 19577,
                    "name": "_IMPLEMENTATION_SLOT",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 19533,
                    "src": "2695:20:132",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2680:35:132"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "2791:55:132",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "slot",
                              "nodeType": "YulIdentifier",
                              "src": "2812:4:132"
                            },
                            {
                              "name": "newImplementation",
                              "nodeType": "YulIdentifier",
                              "src": "2818:17:132"
                            }
                          ],
                          "functionName": {
                            "name": "sstore",
                            "nodeType": "YulIdentifier",
                            "src": "2805:6:132"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2805:31:132"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2805:31:132"
                      }
                    ]
                  },
                  "evmVersion": "istanbul",
                  "externalReferences": [
                    {
                      "declaration": 19564,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "2818:17:132",
                      "valueSize": 1
                    },
                    {
                      "declaration": 19576,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "2812:4:132",
                      "valueSize": 1
                    }
                  ],
                  "id": 19579,
                  "nodeType": "InlineAssembly",
                  "src": "2782:64:132"
                }
              ]
            },
            "documentation": {
              "id": 19562,
              "nodeType": "StructuredDocumentation",
              "src": "2407:80:132",
              "text": " @dev Stores a new address in the EIP1967 implementation slot."
            },
            "id": 19581,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_setImplementation",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 19565,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 19564,
                  "mutability": "mutable",
                  "name": "newImplementation",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 19581,
                  "src": "2520:25:132",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 19563,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2520:7:132",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2519:27:132"
            },
            "returnParameters": {
              "id": 19566,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2555:0:132"
            },
            "scope": 19582,
            "src": "2492:360:132",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          }
        ],
        "scope": 19583,
        "src": "638:2216:132"
      }
    ],
    "src": "33:2822:132"
  },
  "bytecode": "60806040526040516106c43803806106c48339818101604052604081101561002657600080fd5b81516020830180516040519294929383019291908464010000000082111561004d57600080fd5b90830190602082018581111561006257600080fd5b825164010000000081118282018810171561007c57600080fd5b82525081516020918201929091019080838360005b838110156100a9578181015183820152602001610091565b50505050905090810190601f1680156100d65780820380516001836020036101000a031916815260200191505b50604052506100e3915050565b6100ec82610110565b80511561010957610107828261018260201b6100311760201c565b505b505061035c565b610123816101ae60201b61005d1760201c565b61015e5760405162461bcd60e51b81526004018080602001828103825260368152602001806106686036913960400191505060405180910390fd5b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc55565b60606101a78383604051806060016040528060278152602001610641602791396101b4565b9392505050565b3b151590565b60606101bf846101ae565b6101fa5760405162461bcd60e51b815260040180806020018281038252602681526020018061069e6026913960400191505060405180910390fd5b60006060856001600160a01b0316856040518082805190602001908083835b602083106102385780518252601f199092019160209182019101610219565b6001836020036101000a038019825116818451168082178552505050505050905001915050600060405180830381855af49150503d8060008114610298576040519150601f19603f3d011682016040523d82523d6000602084013e61029d565b606091505b5090925090506102ae8282866102b8565b9695505050505050565b606083156102c75750816101a7565b8251156102d75782518084602001fd5b8160405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610321578181015183820152602001610309565b50505050905090810190601f16801561034e5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b6102d68061036b6000396000f3fe60806040523661001357610011610017565b005b6100115b61001f61002f565b61002f61002a610063565b610088565b565b60606100568383604051806060016040528060278152602001610254602791396100ac565b9392505050565b3b151590565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5490565b3660008037600080366000845af43d6000803e8080156100a7573d6000f35b3d6000fd5b60606100b78461005d565b6100f25760405162461bcd60e51b815260040180806020018281038252602681526020018061027b6026913960400191505060405180910390fd5b60006060856001600160a01b0316856040518082805190602001908083835b602083106101305780518252601f199092019160209182019101610111565b6001836020036101000a038019825116818451168082178552505050505050905001915050600060405180830381855af49150503d8060008114610190576040519150601f19603f3d011682016040523d82523d6000602084013e610195565b606091505b50915091506101a58282866101af565b9695505050505050565b606083156101be575081610056565b8251156101ce5782518084602001fd5b8160405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610218578181015183820152602001610200565b50505050905090810190601f1680156102455780820380516001836020036101000a031916815260200191505b509250505060405180910390fdfe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374a2646970667358221220e8a3b2ed9d2db5fb5f6da3f98546b9a05166896f88cf22d76ecc12c150113c6d64736f6c634300060c0033416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c65645570677261646561626c6550726f78793a206e657720696d706c656d656e746174696f6e206973206e6f74206120636f6e7472616374416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374",
  "bytecodeSha1": "da39a3ee5e6b4b0d3255bfef95601890afd80709",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.6.12+commit.27d51765"
  },
  "contractName": "UpgradeableProxy",
  "coverageMap": {
    "branches": {
      "128": {},
      "132": {},
      "161": {
        "Address._verifyCallResult": {
          "11": [
            7234,
            7241,
            false
          ],
          "12": [
            7375,
            7396,
            false
          ]
        },
        "Address.functionDelegateCall": {
          "10": [
            6811,
            6829,
            true
          ]
        }
      }
    },
    "statements": {
      "128": {
        "Proxy.<fallback>": {
          "1": [
            2619,
            2630
          ]
        },
        "Proxy.<receive>": {
          "0": [
            2843,
            2854
          ]
        },
        "Proxy._fallback": {
          "2": [
            2313,
            2330
          ],
          "3": [
            2340,
            2368
          ]
        }
      },
      "132": {},
      "161": {
        "Address._verifyCallResult": {
          "8": [
            7257,
            7274
          ],
          "9": [
            7765,
            7785
          ]
        },
        "Address.functionDelegateCall": {
          "4": [
            6391,
            6475
          ],
          "6": [
            6803,
            6872
          ],
          "7": [
            7019,
            7078
          ]
        },
        "Address.isContract": {
          "5": [
            1117,
            1132
          ]
        }
      }
    }
  },
  "dependencies": [
    "Address",
    "Proxy"
  ],
  "deployedBytecode": "60806040523661001357610011610017565b005b6100115b61001f61002f565b61002f61002a610063565b610088565b565b60606100568383604051806060016040528060278152602001610254602791396100ac565b9392505050565b3b151590565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5490565b3660008037600080366000845af43d6000803e8080156100a7573d6000f35b3d6000fd5b60606100b78461005d565b6100f25760405162461bcd60e51b815260040180806020018281038252602681526020018061027b6026913960400191505060405180910390fd5b60006060856001600160a01b0316856040518082805190602001908083835b602083106101305780518252601f199092019160209182019101610111565b6001836020036101000a038019825116818451168082178552505050505050905001915050600060405180830381855af49150503d8060008114610190576040519150601f19603f3d011682016040523d82523d6000602084013e610195565b606091505b50915091506101a58282866101af565b9695505050505050565b606083156101be575081610056565b8251156101ce5782518084602001fd5b8160405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610218578181015183820152602001610200565b50505050905090810190601f1680156102455780820380516001836020036101000a031916815260200191505b509250505060405180910390fdfe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374a2646970667358221220e8a3b2ed9d2db5fb5f6da3f98546b9a05166896f88cf22d76ecc12c150113c6d64736f6c634300060c0033",
  "deployedSourceMap": "638:2216:132:-:0;;;;;;2843:11:128;:9;:11::i;:::-;638:2216:132;;2619:11:128;2265:110;2313:17;:15;:17::i;:::-;2340:28;2350:17;:15;:17::i;:::-;2340:9;:28::i;:::-;2265:110::o;6284:198:161:-;6367:12;6398:77;6419:6;6427:4;6398:77;;;;;;;;;;;;;;;;;:20;:77::i;:::-;6391:84;6284:198;-1:-1:-1;;;6284:198:161:o;726:413::-;1086:20;1124:8;;;726:413::o;1872:250:132:-;1727:66;2095:11;;2073:43::o;891:895:128:-;1285:14;1282:1;1279;1266:34;1499:1;1496;1480:14;1477:1;1461:14;1454:5;1441:60;1575:16;1572:1;1569;1554:38;1613:6;1680:38;;;;1751:16;1748:1;1741:27;1680:38;1699:16;1696:1;1689:27;6668:417:161;6779:12;6811:18;6822:6;6811:10;:18::i;:::-;6803:69;;;;-1:-1:-1;;;6803:69:161;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6943:12;6957:23;6984:6;-1:-1:-1;;;;;6984:19:161;7004:4;6984:25;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6984:25:161;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6942:67;;;;7026:52;7044:7;7053:10;7065:12;7026:17;:52::i;:::-;7019:59;6668:417;-1:-1:-1;;;;;;6668:417:161:o;7091:725::-;7206:12;7234:7;7230:580;;;-1:-1:-1;7264:10:161;7257:17;;7230:580;7375:17;;:21;7371:429;;7633:10;7627:17;7693:15;7680:10;7676:2;7672:19;7665:44;7582:145;7772:12;7765:20;;-1:-1:-1;;;7765:20:161;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
  "language": "Solidity",
  "natspec": {
    "details": "This contract implements an upgradeable proxy. It is upgradeable because calls are delegated to an implementation address that can be changed. This address is stored in storage in the location specified by https://eips.ethereum.org/EIPS/eip-1967[EIP1967], so that it doesn't conflict with the storage layout of the implementation behind the proxy. Upgradeability is only provided internally through {_upgradeTo}. For an externally upgradeable proxy see {TransparentUpgradeableProxy}.",
    "events": {
      "Upgraded(address)": {
        "details": "Emitted when the implementation is upgraded."
      }
    },
    "kind": "dev",
    "methods": {
      "constructor": {
        "details": "Initializes the upgradeable proxy with an initial implementation specified by `_logic`. If `_data` is nonempty, it's used as data in a delegate call to `_logic`. This will typically be an encoded function call, and allows initializating the storage of the proxy like a Solidity constructor."
      }
    },
    "stateVariables": {
      "_IMPLEMENTATION_SLOT": {
        "details": "Storage slot with the address of the current implementation. This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1, and is validated in the constructor."
      }
    },
    "version": 1
  },
  "offset": [
    638,
    2854
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLDATASIZE PUSH2 0x13 JUMPI PUSH2 0x11 PUSH2 0x17 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x11 JUMPDEST PUSH2 0x1F PUSH2 0x2F JUMP JUMPDEST PUSH2 0x2F PUSH2 0x2A PUSH2 0x63 JUMP JUMPDEST PUSH2 0x88 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x60 PUSH2 0x56 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x254 PUSH1 0x27 SWAP2 CODECOPY PUSH2 0xAC JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST EXTCODESIZE ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SLOAD SWAP1 JUMP JUMPDEST CALLDATASIZE PUSH1 0x0 DUP1 CALLDATACOPY PUSH1 0x0 DUP1 CALLDATASIZE PUSH1 0x0 DUP5 GAS DELEGATECALL RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY DUP1 DUP1 ISZERO PUSH2 0xA7 JUMPI RETURNDATASIZE PUSH1 0x0 RETURN JUMPDEST RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST PUSH1 0x60 PUSH2 0xB7 DUP5 PUSH2 0x5D JUMP JUMPDEST PUSH2 0xF2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x27B PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x130 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x1F NOT SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x111 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x190 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x195 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x1A5 DUP3 DUP3 DUP7 PUSH2 0x1AF JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x1BE JUMPI POP DUP2 PUSH2 0x56 JUMP JUMPDEST DUP3 MLOAD ISZERO PUSH2 0x1CE JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x218 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x200 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x245 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT INVALID COINBASE PUSH5 0x6472657373 GASPRICE KECCAK256 PUSH13 0x6F772D6C6576656C2064656C65 PUSH8 0x6174652063616C6C KECCAK256 PUSH7 0x61696C65644164 PUSH5 0x726573733A KECCAK256 PUSH5 0x656C656761 PUSH21 0x652063616C6C20746F206E6F6E2D636F6E74726163 PUSH21 0xA2646970667358221220E8A3B2ED9D2DB5FB5F6DA3 0xF9 DUP6 CHAINID 0xB9 LOG0 MLOAD PUSH7 0x896F88CF22D76E 0xCC SLT 0xC1 POP GT EXTCODECOPY PUSH14 0x64736F6C634300060C0033000000 ",
  "pcMap": {
    "0": {
      "offset": [
        638,
        2854
      ],
      "op": "PUSH1",
      "path": "132",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        638,
        2854
      ],
      "op": "PUSH1",
      "path": "132",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        638,
        2854
      ],
      "op": "MSTORE",
      "path": "132"
    },
    "5": {
      "fn": null,
      "offset": [
        638,
        2854
      ],
      "op": "CALLDATASIZE",
      "path": "132"
    },
    "6": {
      "fn": null,
      "offset": [
        638,
        2854
      ],
      "op": "PUSH2",
      "path": "132",
      "value": "0x13"
    },
    "9": {
      "fn": null,
      "offset": [
        638,
        2854
      ],
      "op": "JUMPI",
      "path": "132"
    },
    "10": {
      "fn": "Proxy.<receive>",
      "offset": [
        2843,
        2854
      ],
      "op": "PUSH2",
      "path": "128",
      "statement": 0,
      "value": "0x11"
    },
    "13": {
      "fn": "Proxy.<receive>",
      "offset": [
        2843,
        2852
      ],
      "op": "PUSH2",
      "path": "128",
      "value": "0x17"
    },
    "16": {
      "fn": "Proxy.<receive>",
      "jump": "i",
      "offset": [
        2843,
        2854
      ],
      "op": "JUMP",
      "path": "128"
    },
    "17": {
      "fn": "Proxy.<receive>",
      "offset": [
        2843,
        2854
      ],
      "op": "JUMPDEST",
      "path": "128"
    },
    "18": {
      "offset": [
        638,
        2854
      ],
      "op": "STOP",
      "path": "132"
    },
    "19": {
      "fn": "Proxy.<receive>",
      "offset": [
        638,
        2854
      ],
      "op": "JUMPDEST",
      "path": "132"
    },
    "20": {
      "fn": "Proxy.<fallback>",
      "offset": [
        2619,
        2630
      ],
      "op": "PUSH2",
      "path": "128",
      "statement": 1,
      "value": "0x11"
    },
    "23": {
      "fn": "Proxy._fallback",
      "offset": [
        2265,
        2375
      ],
      "op": "JUMPDEST",
      "path": "128"
    },
    "24": {
      "fn": "Proxy._fallback",
      "offset": [
        2313,
        2330
      ],
      "op": "PUSH2",
      "path": "128",
      "statement": 2,
      "value": "0x1F"
    },
    "27": {
      "fn": "Proxy._fallback",
      "offset": [
        2313,
        2328
      ],
      "op": "PUSH2",
      "path": "128",
      "value": "0x2F"
    },
    "30": {
      "fn": "Proxy._fallback",
      "jump": "i",
      "offset": [
        2313,
        2330
      ],
      "op": "JUMP",
      "path": "128"
    },
    "31": {
      "fn": "Proxy._fallback",
      "offset": [
        2313,
        2330
      ],
      "op": "JUMPDEST",
      "path": "128"
    },
    "32": {
      "fn": "Proxy._fallback",
      "offset": [
        2340,
        2368
      ],
      "op": "PUSH2",
      "path": "128",
      "statement": 3,
      "value": "0x2F"
    },
    "35": {
      "fn": "Proxy._fallback",
      "offset": [
        2350,
        2367
      ],
      "op": "PUSH2",
      "path": "128",
      "value": "0x2A"
    },
    "38": {
      "fn": "Proxy._fallback",
      "offset": [
        2350,
        2365
      ],
      "op": "PUSH2",
      "path": "128",
      "value": "0x63"
    },
    "41": {
      "fn": "Proxy._fallback",
      "jump": "i",
      "offset": [
        2350,
        2367
      ],
      "op": "JUMP",
      "path": "128"
    },
    "42": {
      "fn": "Proxy._fallback",
      "offset": [
        2350,
        2367
      ],
      "op": "JUMPDEST",
      "path": "128"
    },
    "43": {
      "fn": "Proxy._fallback",
      "offset": [
        2340,
        2349
      ],
      "op": "PUSH2",
      "path": "128",
      "value": "0x88"
    },
    "46": {
      "fn": "Proxy._fallback",
      "jump": "i",
      "offset": [
        2340,
        2368
      ],
      "op": "JUMP",
      "path": "128"
    },
    "47": {
      "fn": "Proxy._fallback",
      "offset": [
        2340,
        2368
      ],
      "op": "JUMPDEST",
      "path": "128"
    },
    "48": {
      "fn": "Proxy._fallback",
      "jump": "o",
      "offset": [
        2265,
        2375
      ],
      "op": "JUMP",
      "path": "128"
    },
    "49": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6284,
        6482
      ],
      "op": "JUMPDEST",
      "path": "161"
    },
    "50": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6367,
        6379
      ],
      "op": "PUSH1",
      "path": "161",
      "value": "0x60"
    },
    "52": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6398,
        6475
      ],
      "op": "PUSH2",
      "path": "161",
      "statement": 4,
      "value": "0x56"
    },
    "55": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6419,
        6425
      ],
      "op": "DUP4",
      "path": "161"
    },
    "56": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6427,
        6431
      ],
      "op": "DUP4",
      "path": "161"
    },
    "57": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6398,
        6475
      ],
      "op": "PUSH1",
      "path": "161",
      "value": "0x40"
    },
    "59": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6398,
        6475
      ],
      "op": "MLOAD",
      "path": "161"
    },
    "60": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6398,
        6475
      ],
      "op": "DUP1",
      "path": "161"
    },
    "61": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6398,
        6475
      ],
      "op": "PUSH1",
      "path": "161",
      "value": "0x60"
    },
    "63": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6398,
        6475
      ],
      "op": "ADD",
      "path": "161"
    },
    "64": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6398,
        6475
      ],
      "op": "PUSH1",
      "path": "161",
      "value": "0x40"
    },
    "66": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6398,
        6475
      ],
      "op": "MSTORE",
      "path": "161"
    },
    "67": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6398,
        6475
      ],
      "op": "DUP1",
      "path": "161"
    },
    "68": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6398,
        6475
      ],
      "op": "PUSH1",
      "path": "161",
      "value": "0x27"
    },
    "70": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6398,
        6475
      ],
      "op": "DUP2",
      "path": "161"
    },
    "71": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6398,
        6475
      ],
      "op": "MSTORE",
      "path": "161"
    },
    "72": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6398,
        6475
      ],
      "op": "PUSH1",
      "path": "161",
      "value": "0x20"
    },
    "74": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6398,
        6475
      ],
      "op": "ADD",
      "path": "161"
    },
    "75": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6398,
        6475
      ],
      "op": "PUSH2",
      "path": "161",
      "value": "0x254"
    },
    "78": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6398,
        6475
      ],
      "op": "PUSH1",
      "path": "161",
      "value": "0x27"
    },
    "80": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6398,
        6475
      ],
      "op": "SWAP2",
      "path": "161"
    },
    "81": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6398,
        6475
      ],
      "op": "CODECOPY",
      "path": "161"
    },
    "82": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6398,
        6418
      ],
      "op": "PUSH2",
      "path": "161",
      "value": "0xAC"
    },
    "85": {
      "fn": "Address.functionDelegateCall",
      "jump": "i",
      "offset": [
        6398,
        6475
      ],
      "op": "JUMP",
      "path": "161"
    },
    "86": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6398,
        6475
      ],
      "op": "JUMPDEST",
      "path": "161"
    },
    "87": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6391,
        6475
      ],
      "op": "SWAP4",
      "path": "161"
    },
    "88": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6284,
        6482
      ],
      "op": "SWAP3",
      "path": "161"
    },
    "89": {
      "op": "POP"
    },
    "90": {
      "op": "POP"
    },
    "91": {
      "op": "POP"
    },
    "92": {
      "fn": "Address.functionDelegateCall",
      "jump": "o",
      "offset": [
        6284,
        6482
      ],
      "op": "JUMP",
      "path": "161"
    },
    "93": {
      "fn": "Address.isContract",
      "offset": [
        726,
        1139
      ],
      "op": "JUMPDEST",
      "path": "161"
    },
    "94": {
      "fn": "Address.isContract",
      "offset": [
        1086,
        1106
      ],
      "op": "EXTCODESIZE",
      "path": "161"
    },
    "95": {
      "fn": "Address.isContract",
      "offset": [
        1124,
        1132
      ],
      "op": "ISZERO",
      "path": "161",
      "statement": 5
    },
    "96": {
      "fn": "Address.isContract",
      "offset": [
        1124,
        1132
      ],
      "op": "ISZERO",
      "path": "161"
    },
    "97": {
      "fn": "Address.isContract",
      "offset": [
        1124,
        1132
      ],
      "op": "SWAP1",
      "path": "161"
    },
    "98": {
      "fn": "Address.isContract",
      "jump": "o",
      "offset": [
        726,
        1139
      ],
      "op": "JUMP",
      "path": "161"
    },
    "99": {
      "fn": "UpgradeableProxy._implementation",
      "offset": [
        1872,
        2122
      ],
      "op": "JUMPDEST",
      "path": "132"
    },
    "100": {
      "offset": [
        1727,
        1793
      ],
      "op": "PUSH32",
      "path": "132",
      "value": "0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC"
    },
    "133": {
      "fn": "UpgradeableProxy._implementation",
      "offset": [
        2095,
        2106
      ],
      "op": "SLOAD",
      "path": "132"
    },
    "134": {
      "fn": "UpgradeableProxy._implementation",
      "offset": [
        2095,
        2106
      ],
      "op": "SWAP1",
      "path": "132"
    },
    "135": {
      "fn": "UpgradeableProxy._implementation",
      "jump": "o",
      "offset": [
        2073,
        2116
      ],
      "op": "JUMP",
      "path": "132"
    },
    "136": {
      "fn": "Proxy._delegate",
      "offset": [
        891,
        1786
      ],
      "op": "JUMPDEST",
      "path": "128"
    },
    "137": {
      "fn": "Proxy._delegate",
      "offset": [
        1285,
        1299
      ],
      "op": "CALLDATASIZE",
      "path": "128"
    },
    "138": {
      "fn": "Proxy._delegate",
      "offset": [
        1282,
        1283
      ],
      "op": "PUSH1",
      "path": "128",
      "value": "0x0"
    },
    "140": {
      "fn": "Proxy._delegate",
      "offset": [
        1279,
        1280
      ],
      "op": "DUP1",
      "path": "128"
    },
    "141": {
      "fn": "Proxy._delegate",
      "offset": [
        1266,
        1300
      ],
      "op": "CALLDATACOPY",
      "path": "128"
    },
    "142": {
      "fn": "Proxy._delegate",
      "offset": [
        1499,
        1500
      ],
      "op": "PUSH1",
      "path": "128",
      "value": "0x0"
    },
    "144": {
      "fn": "Proxy._delegate",
      "offset": [
        1496,
        1497
      ],
      "op": "DUP1",
      "path": "128"
    },
    "145": {
      "fn": "Proxy._delegate",
      "offset": [
        1480,
        1494
      ],
      "op": "CALLDATASIZE",
      "path": "128"
    },
    "146": {
      "fn": "Proxy._delegate",
      "offset": [
        1477,
        1478
      ],
      "op": "PUSH1",
      "path": "128",
      "value": "0x0"
    },
    "148": {
      "fn": "Proxy._delegate",
      "offset": [
        1461,
        1475
      ],
      "op": "DUP5",
      "path": "128"
    },
    "149": {
      "fn": "Proxy._delegate",
      "offset": [
        1454,
        1459
      ],
      "op": "GAS",
      "path": "128"
    },
    "150": {
      "fn": "Proxy._delegate",
      "offset": [
        1441,
        1501
      ],
      "op": "DELEGATECALL",
      "path": "128"
    },
    "151": {
      "fn": "Proxy._delegate",
      "offset": [
        1575,
        1591
      ],
      "op": "RETURNDATASIZE",
      "path": "128"
    },
    "152": {
      "fn": "Proxy._delegate",
      "offset": [
        1572,
        1573
      ],
      "op": "PUSH1",
      "path": "128",
      "value": "0x0"
    },
    "154": {
      "fn": "Proxy._delegate",
      "offset": [
        1569,
        1570
      ],
      "op": "DUP1",
      "path": "128"
    },
    "155": {
      "fn": "Proxy._delegate",
      "offset": [
        1554,
        1592
      ],
      "op": "RETURNDATACOPY",
      "path": "128"
    },
    "156": {
      "fn": "Proxy._delegate",
      "offset": [
        1613,
        1619
      ],
      "op": "DUP1",
      "path": "128"
    },
    "157": {
      "fn": "Proxy._delegate",
      "offset": [
        1680,
        1718
      ],
      "op": "DUP1",
      "path": "128"
    },
    "158": {
      "fn": "Proxy._delegate",
      "offset": [
        1680,
        1718
      ],
      "op": "ISZERO",
      "path": "128"
    },
    "159": {
      "fn": "Proxy._delegate",
      "offset": [
        1680,
        1718
      ],
      "op": "PUSH2",
      "path": "128",
      "value": "0xA7"
    },
    "162": {
      "fn": "Proxy._delegate",
      "offset": [
        1680,
        1718
      ],
      "op": "JUMPI",
      "path": "128"
    },
    "163": {
      "fn": "Proxy._delegate",
      "offset": [
        1751,
        1767
      ],
      "op": "RETURNDATASIZE",
      "path": "128"
    },
    "164": {
      "fn": "Proxy._delegate",
      "offset": [
        1748,
        1749
      ],
      "op": "PUSH1",
      "path": "128",
      "value": "0x0"
    },
    "166": {
      "fn": "Proxy._delegate",
      "offset": [
        1741,
        1768
      ],
      "op": "RETURN",
      "path": "128"
    },
    "167": {
      "fn": "Proxy._delegate",
      "offset": [
        1680,
        1718
      ],
      "op": "JUMPDEST",
      "path": "128"
    },
    "168": {
      "fn": "Proxy._delegate",
      "offset": [
        1699,
        1715
      ],
      "op": "RETURNDATASIZE",
      "path": "128"
    },
    "169": {
      "fn": "Proxy._delegate",
      "offset": [
        1696,
        1697
      ],
      "op": "PUSH1",
      "path": "128",
      "value": "0x0"
    },
    "171": {
      "fn": "Proxy._delegate",
      "offset": [
        1689,
        1716
      ],
      "op": "REVERT",
      "path": "128"
    },
    "172": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6668,
        7085
      ],
      "op": "JUMPDEST",
      "path": "161"
    },
    "173": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6779,
        6791
      ],
      "op": "PUSH1",
      "path": "161",
      "value": "0x60"
    },
    "175": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6811,
        6829
      ],
      "op": "PUSH2",
      "path": "161",
      "statement": 6,
      "value": "0xB7"
    },
    "178": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6822,
        6828
      ],
      "op": "DUP5",
      "path": "161"
    },
    "179": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6811,
        6821
      ],
      "op": "PUSH2",
      "path": "161",
      "value": "0x5D"
    },
    "182": {
      "fn": "Address.functionDelegateCall",
      "jump": "i",
      "offset": [
        6811,
        6829
      ],
      "op": "JUMP",
      "path": "161"
    },
    "183": {
      "branch": 10,
      "fn": "Address.functionDelegateCall",
      "offset": [
        6811,
        6829
      ],
      "op": "JUMPDEST",
      "path": "161"
    },
    "184": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6803,
        6872
      ],
      "op": "PUSH2",
      "path": "161",
      "value": "0xF2"
    },
    "187": {
      "branch": 10,
      "fn": "Address.functionDelegateCall",
      "offset": [
        6803,
        6872
      ],
      "op": "JUMPI",
      "path": "161"
    },
    "188": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6803,
        6872
      ],
      "op": "PUSH1",
      "path": "161",
      "value": "0x40"
    },
    "190": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6803,
        6872
      ],
      "op": "MLOAD",
      "path": "161"
    },
    "191": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "195": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "197": {
      "op": "SHL"
    },
    "198": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6803,
        6872
      ],
      "op": "DUP2",
      "path": "161"
    },
    "199": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6803,
        6872
      ],
      "op": "MSTORE",
      "path": "161"
    },
    "200": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6803,
        6872
      ],
      "op": "PUSH1",
      "path": "161",
      "value": "0x4"
    },
    "202": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6803,
        6872
      ],
      "op": "ADD",
      "path": "161"
    },
    "203": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6803,
        6872
      ],
      "op": "DUP1",
      "path": "161"
    },
    "204": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6803,
        6872
      ],
      "op": "DUP1",
      "path": "161"
    },
    "205": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6803,
        6872
      ],
      "op": "PUSH1",
      "path": "161",
      "value": "0x20"
    },
    "207": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6803,
        6872
      ],
      "op": "ADD",
      "path": "161"
    },
    "208": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6803,
        6872
      ],
      "op": "DUP3",
      "path": "161"
    },
    "209": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6803,
        6872
      ],
      "op": "DUP2",
      "path": "161"
    },
    "210": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6803,
        6872
      ],
      "op": "SUB",
      "path": "161"
    },
    "211": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6803,
        6872
      ],
      "op": "DUP3",
      "path": "161"
    },
    "212": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6803,
        6872
      ],
      "op": "MSTORE",
      "path": "161"
    },
    "213": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6803,
        6872
      ],
      "op": "PUSH1",
      "path": "161",
      "value": "0x26"
    },
    "215": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6803,
        6872
      ],
      "op": "DUP2",
      "path": "161"
    },
    "216": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6803,
        6872
      ],
      "op": "MSTORE",
      "path": "161"
    },
    "217": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6803,
        6872
      ],
      "op": "PUSH1",
      "path": "161",
      "value": "0x20"
    },
    "219": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6803,
        6872
      ],
      "op": "ADD",
      "path": "161"
    },
    "220": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6803,
        6872
      ],
      "op": "DUP1",
      "path": "161"
    },
    "221": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6803,
        6872
      ],
      "op": "PUSH2",
      "path": "161",
      "value": "0x27B"
    },
    "224": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6803,
        6872
      ],
      "op": "PUSH1",
      "path": "161",
      "value": "0x26"
    },
    "226": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6803,
        6872
      ],
      "op": "SWAP2",
      "path": "161"
    },
    "227": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6803,
        6872
      ],
      "op": "CODECOPY",
      "path": "161"
    },
    "228": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6803,
        6872
      ],
      "op": "PUSH1",
      "path": "161",
      "value": "0x40"
    },
    "230": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6803,
        6872
      ],
      "op": "ADD",
      "path": "161"
    },
    "231": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6803,
        6872
      ],
      "op": "SWAP2",
      "path": "161"
    },
    "232": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6803,
        6872
      ],
      "op": "POP",
      "path": "161"
    },
    "233": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6803,
        6872
      ],
      "op": "POP",
      "path": "161"
    },
    "234": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6803,
        6872
      ],
      "op": "PUSH1",
      "path": "161",
      "value": "0x40"
    },
    "236": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6803,
        6872
      ],
      "op": "MLOAD",
      "path": "161"
    },
    "237": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6803,
        6872
      ],
      "op": "DUP1",
      "path": "161"
    },
    "238": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6803,
        6872
      ],
      "op": "SWAP2",
      "path": "161"
    },
    "239": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6803,
        6872
      ],
      "op": "SUB",
      "path": "161"
    },
    "240": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6803,
        6872
      ],
      "op": "SWAP1",
      "path": "161"
    },
    "241": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6803,
        6872
      ],
      "op": "REVERT",
      "path": "161"
    },
    "242": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6803,
        6872
      ],
      "op": "JUMPDEST",
      "path": "161"
    },
    "243": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6943,
        6955
      ],
      "op": "PUSH1",
      "path": "161",
      "value": "0x0"
    },
    "245": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6957,
        6980
      ],
      "op": "PUSH1",
      "path": "161",
      "value": "0x60"
    },
    "247": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6984,
        6990
      ],
      "op": "DUP6",
      "path": "161"
    },
    "248": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "250": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "252": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "254": {
      "op": "SHL"
    },
    "255": {
      "op": "SUB"
    },
    "256": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6984,
        7003
      ],
      "op": "AND",
      "path": "161"
    },
    "257": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        7004,
        7008
      ],
      "op": "DUP6",
      "path": "161"
    },
    "258": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6984,
        7009
      ],
      "op": "PUSH1",
      "path": "161",
      "value": "0x40"
    },
    "260": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6984,
        7009
      ],
      "op": "MLOAD",
      "path": "161"
    },
    "261": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6984,
        7009
      ],
      "op": "DUP1",
      "path": "161"
    },
    "262": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6984,
        7009
      ],
      "op": "DUP3",
      "path": "161"
    },
    "263": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6984,
        7009
      ],
      "op": "DUP1",
      "path": "161"
    },
    "264": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6984,
        7009
      ],
      "op": "MLOAD",
      "path": "161"
    },
    "265": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6984,
        7009
      ],
      "op": "SWAP1",
      "path": "161"
    },
    "266": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6984,
        7009
      ],
      "op": "PUSH1",
      "path": "161",
      "value": "0x20"
    },
    "268": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6984,
        7009
      ],
      "op": "ADD",
      "path": "161"
    },
    "269": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6984,
        7009
      ],
      "op": "SWAP1",
      "path": "161"
    },
    "270": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6984,
        7009
      ],
      "op": "DUP1",
      "path": "161"
    },
    "271": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6984,
        7009
      ],
      "op": "DUP4",
      "path": "161"
    },
    "272": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6984,
        7009
      ],
      "op": "DUP4",
      "path": "161"
    },
    "273": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6984,
        7009
      ],
      "op": "JUMPDEST",
      "path": "161"
    },
    "274": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6984,
        7009
      ],
      "op": "PUSH1",
      "path": "161",
      "value": "0x20"
    },
    "276": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6984,
        7009
      ],
      "op": "DUP4",
      "path": "161"
    },
    "277": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6984,
        7009
      ],
      "op": "LT",
      "path": "161"
    },
    "278": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6984,
        7009
      ],
      "op": "PUSH2",
      "path": "161",
      "value": "0x130"
    },
    "281": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6984,
        7009
      ],
      "op": "JUMPI",
      "path": "161"
    },
    "282": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6984,
        7009
      ],
      "op": "DUP1",
      "path": "161"
    },
    "283": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6984,
        7009
      ],
      "op": "MLOAD",
      "path": "161"
    },
    "284": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6984,
        7009
      ],
      "op": "DUP3",
      "path": "161"
    },
    "285": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6984,
        7009
      ],
      "op": "MSTORE",
      "path": "161"
    },
    "286": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "288": {
      "op": "NOT"
    },
    "289": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6984,
        7009
      ],
      "op": "SWAP1",
      "path": "161"
    },
    "290": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6984,
        7009
      ],
      "op": "SWAP3",
      "path": "161"
    },
    "291": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6984,
        7009
      ],
      "op": "ADD",
      "path": "161"
    },
    "292": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6984,
        7009
      ],
      "op": "SWAP2",
      "path": "161"
    },
    "293": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6984,
        7009
      ],
      "op": "PUSH1",
      "path": "161",
      "value": "0x20"
    },
    "295": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6984,
        7009
      ],
      "op": "SWAP2",
      "path": "161"
    },
    "296": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6984,
        7009
      ],
      "op": "DUP3",
      "path": "161"
    },
    "297": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6984,
        7009
      ],
      "op": "ADD",
      "path": "161"
    },
    "298": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6984,
        7009
      ],
      "op": "SWAP2",
      "path": "161"
    },
    "299": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6984,
        7009
      ],
      "op": "ADD",
      "path": "161"
    },
    "300": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6984,
        7009
      ],
      "op": "PUSH2",
      "path": "161",
      "value": "0x111"
    },
    "303": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6984,
        7009
      ],
      "op": "JUMP",
      "path": "161"
    },
    "304": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6984,
        7009
      ],
      "op": "JUMPDEST",
      "path": "161"
    },
    "305": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6984,
        7009
      ],
      "op": "PUSH1",
      "path": "161",
      "value": "0x1"
    },
    "307": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6984,
        7009
      ],
      "op": "DUP4",
      "path": "161"
    },
    "308": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6984,
        7009
      ],
      "op": "PUSH1",
      "path": "161",
      "value": "0x20"
    },
    "310": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6984,
        7009
      ],
      "op": "SUB",
      "path": "161"
    },
    "311": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6984,
        7009
      ],
      "op": "PUSH2",
      "path": "161",
      "value": "0x100"
    },
    "314": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6984,
        7009
      ],
      "op": "EXP",
      "path": "161"
    },
    "315": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6984,
        7009
      ],
      "op": "SUB",
      "path": "161"
    },
    "316": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6984,
        7009
      ],
      "op": "DUP1",
      "path": "161"
    },
    "317": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6984,
        7009
      ],
      "op": "NOT",
      "path": "161"
    },
    "318": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6984,
        7009
      ],
      "op": "DUP3",
      "path": "161"
    },
    "319": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6984,
        7009
      ],
      "op": "MLOAD",
      "path": "161"
    },
    "320": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6984,
        7009
      ],
      "op": "AND",
      "path": "161"
    },
    "321": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6984,
        7009
      ],
      "op": "DUP2",
      "path": "161"
    },
    "322": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6984,
        7009
      ],
      "op": "DUP5",
      "path": "161"
    },
    "323": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6984,
        7009
      ],
      "op": "MLOAD",
      "path": "161"
    },
    "324": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6984,
        7009
      ],
      "op": "AND",
      "path": "161"
    },
    "325": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6984,
        7009
      ],
      "op": "DUP1",
      "path": "161"
    },
    "326": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6984,
        7009
      ],
      "op": "DUP3",
      "path": "161"
    },
    "327": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6984,
        7009
      ],
      "op": "OR",
      "path": "161"
    },
    "328": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6984,
        7009
      ],
      "op": "DUP6",
      "path": "161"
    },
    "329": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6984,
        7009
      ],
      "op": "MSTORE",
      "path": "161"
    },
    "330": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6984,
        7009
      ],
      "op": "POP",
      "path": "161"
    },
    "331": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6984,
        7009
      ],
      "op": "POP",
      "path": "161"
    },
    "332": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6984,
        7009
      ],
      "op": "POP",
      "path": "161"
    },
    "333": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6984,
        7009
      ],
      "op": "POP",
      "path": "161"
    },
    "334": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6984,
        7009
      ],
      "op": "POP",
      "path": "161"
    },
    "335": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6984,
        7009
      ],
      "op": "POP",
      "path": "161"
    },
    "336": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6984,
        7009
      ],
      "op": "SWAP1",
      "path": "161"
    },
    "337": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6984,
        7009
      ],
      "op": "POP",
      "path": "161"
    },
    "338": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6984,
        7009
      ],
      "op": "ADD",
      "path": "161"
    },
    "339": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6984,
        7009
      ],
      "op": "SWAP2",
      "path": "161"
    },
    "340": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6984,
        7009
      ],
      "op": "POP",
      "path": "161"
    },
    "341": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6984,
        7009
      ],
      "op": "POP",
      "path": "161"
    },
    "342": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6984,
        7009
      ],
      "op": "PUSH1",
      "path": "161",
      "value": "0x0"
    },
    "344": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6984,
        7009
      ],
      "op": "PUSH1",
      "path": "161",
      "value": "0x40"
    },
    "346": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6984,
        7009
      ],
      "op": "MLOAD",
      "path": "161"
    },
    "347": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6984,
        7009
      ],
      "op": "DUP1",
      "path": "161"
    },
    "348": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6984,
        7009
      ],
      "op": "DUP4",
      "path": "161"
    },
    "349": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6984,
        7009
      ],
      "op": "SUB",
      "path": "161"
    },
    "350": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6984,
        7009
      ],
      "op": "DUP2",
      "path": "161"
    },
    "351": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6984,
        7009
      ],
      "op": "DUP6",
      "path": "161"
    },
    "352": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6984,
        7009
      ],
      "op": "GAS",
      "path": "161"
    },
    "353": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6984,
        7009
      ],
      "op": "DELEGATECALL",
      "path": "161"
    },
    "354": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6984,
        7009
      ],
      "op": "SWAP2",
      "path": "161"
    },
    "355": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6984,
        7009
      ],
      "op": "POP",
      "path": "161"
    },
    "356": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6984,
        7009
      ],
      "op": "POP",
      "path": "161"
    },
    "357": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6984,
        7009
      ],
      "op": "RETURNDATASIZE",
      "path": "161"
    },
    "358": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6984,
        7009
      ],
      "op": "DUP1",
      "path": "161"
    },
    "359": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6984,
        7009
      ],
      "op": "PUSH1",
      "path": "161",
      "value": "0x0"
    },
    "361": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6984,
        7009
      ],
      "op": "DUP2",
      "path": "161"
    },
    "362": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6984,
        7009
      ],
      "op": "EQ",
      "path": "161"
    },
    "363": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6984,
        7009
      ],
      "op": "PUSH2",
      "path": "161",
      "value": "0x190"
    },
    "366": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6984,
        7009
      ],
      "op": "JUMPI",
      "path": "161"
    },
    "367": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6984,
        7009
      ],
      "op": "PUSH1",
      "path": "161",
      "value": "0x40"
    },
    "369": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6984,
        7009
      ],
      "op": "MLOAD",
      "path": "161"
    },
    "370": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6984,
        7009
      ],
      "op": "SWAP2",
      "path": "161"
    },
    "371": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6984,
        7009
      ],
      "op": "POP",
      "path": "161"
    },
    "372": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6984,
        7009
      ],
      "op": "PUSH1",
      "path": "161",
      "value": "0x1F"
    },
    "374": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6984,
        7009
      ],
      "op": "NOT",
      "path": "161"
    },
    "375": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6984,
        7009
      ],
      "op": "PUSH1",
      "path": "161",
      "value": "0x3F"
    },
    "377": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6984,
        7009
      ],
      "op": "RETURNDATASIZE",
      "path": "161"
    },
    "378": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6984,
        7009
      ],
      "op": "ADD",
      "path": "161"
    },
    "379": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6984,
        7009
      ],
      "op": "AND",
      "path": "161"
    },
    "380": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6984,
        7009
      ],
      "op": "DUP3",
      "path": "161"
    },
    "381": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6984,
        7009
      ],
      "op": "ADD",
      "path": "161"
    },
    "382": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6984,
        7009
      ],
      "op": "PUSH1",
      "path": "161",
      "value": "0x40"
    },
    "384": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6984,
        7009
      ],
      "op": "MSTORE",
      "path": "161"
    },
    "385": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6984,
        7009
      ],
      "op": "RETURNDATASIZE",
      "path": "161"
    },
    "386": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6984,
        7009
      ],
      "op": "DUP3",
      "path": "161"
    },
    "387": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6984,
        7009
      ],
      "op": "MSTORE",
      "path": "161"
    },
    "388": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6984,
        7009
      ],
      "op": "RETURNDATASIZE",
      "path": "161"
    },
    "389": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6984,
        7009
      ],
      "op": "PUSH1",
      "path": "161",
      "value": "0x0"
    },
    "391": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6984,
        7009
      ],
      "op": "PUSH1",
      "path": "161",
      "value": "0x20"
    },
    "393": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6984,
        7009
      ],
      "op": "DUP5",
      "path": "161"
    },
    "394": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6984,
        7009
      ],
      "op": "ADD",
      "path": "161"
    },
    "395": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6984,
        7009
      ],
      "op": "RETURNDATACOPY",
      "path": "161"
    },
    "396": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6984,
        7009
      ],
      "op": "PUSH2",
      "path": "161",
      "value": "0x195"
    },
    "399": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6984,
        7009
      ],
      "op": "JUMP",
      "path": "161"
    },
    "400": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6984,
        7009
      ],
      "op": "JUMPDEST",
      "path": "161"
    },
    "401": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6984,
        7009
      ],
      "op": "PUSH1",
      "path": "161",
      "value": "0x60"
    },
    "403": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6984,
        7009
      ],
      "op": "SWAP2",
      "path": "161"
    },
    "404": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6984,
        7009
      ],
      "op": "POP",
      "path": "161"
    },
    "405": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6984,
        7009
      ],
      "op": "JUMPDEST",
      "path": "161"
    },
    "406": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6984,
        7009
      ],
      "op": "POP",
      "path": "161"
    },
    "407": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6942,
        7009
      ],
      "op": "SWAP2",
      "path": "161"
    },
    "408": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6942,
        7009
      ],
      "op": "POP",
      "path": "161"
    },
    "409": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6942,
        7009
      ],
      "op": "SWAP2",
      "path": "161"
    },
    "410": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6942,
        7009
      ],
      "op": "POP",
      "path": "161"
    },
    "411": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        7026,
        7078
      ],
      "op": "PUSH2",
      "path": "161",
      "statement": 7,
      "value": "0x1A5"
    },
    "414": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        7044,
        7051
      ],
      "op": "DUP3",
      "path": "161"
    },
    "415": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        7053,
        7063
      ],
      "op": "DUP3",
      "path": "161"
    },
    "416": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        7065,
        7077
      ],
      "op": "DUP7",
      "path": "161"
    },
    "417": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        7026,
        7043
      ],
      "op": "PUSH2",
      "path": "161",
      "value": "0x1AF"
    },
    "420": {
      "fn": "Address.functionDelegateCall",
      "jump": "i",
      "offset": [
        7026,
        7078
      ],
      "op": "JUMP",
      "path": "161"
    },
    "421": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        7026,
        7078
      ],
      "op": "JUMPDEST",
      "path": "161"
    },
    "422": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        7019,
        7078
      ],
      "op": "SWAP7",
      "path": "161"
    },
    "423": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6668,
        7085
      ],
      "op": "SWAP6",
      "path": "161"
    },
    "424": {
      "op": "POP"
    },
    "425": {
      "op": "POP"
    },
    "426": {
      "op": "POP"
    },
    "427": {
      "op": "POP"
    },
    "428": {
      "op": "POP"
    },
    "429": {
      "op": "POP"
    },
    "430": {
      "fn": "Address.functionDelegateCall",
      "jump": "o",
      "offset": [
        6668,
        7085
      ],
      "op": "JUMP",
      "path": "161"
    },
    "431": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7091,
        7816
      ],
      "op": "JUMPDEST",
      "path": "161"
    },
    "432": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7206,
        7218
      ],
      "op": "PUSH1",
      "path": "161",
      "value": "0x60"
    },
    "434": {
      "branch": 11,
      "fn": "Address._verifyCallResult",
      "offset": [
        7234,
        7241
      ],
      "op": "DUP4",
      "path": "161"
    },
    "435": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7230,
        7810
      ],
      "op": "ISZERO",
      "path": "161"
    },
    "436": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7230,
        7810
      ],
      "op": "PUSH2",
      "path": "161",
      "value": "0x1BE"
    },
    "439": {
      "branch": 11,
      "fn": "Address._verifyCallResult",
      "offset": [
        7230,
        7810
      ],
      "op": "JUMPI",
      "path": "161"
    },
    "440": {
      "op": "POP"
    },
    "441": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7264,
        7274
      ],
      "op": "DUP2",
      "path": "161",
      "statement": 8
    },
    "442": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7257,
        7274
      ],
      "op": "PUSH2",
      "path": "161",
      "value": "0x56"
    },
    "445": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7257,
        7274
      ],
      "op": "JUMP",
      "path": "161"
    },
    "446": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7230,
        7810
      ],
      "op": "JUMPDEST",
      "path": "161"
    },
    "447": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7375,
        7392
      ],
      "op": "DUP3",
      "path": "161"
    },
    "448": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7375,
        7392
      ],
      "op": "MLOAD",
      "path": "161"
    },
    "449": {
      "branch": 12,
      "fn": "Address._verifyCallResult",
      "offset": [
        7375,
        7396
      ],
      "op": "ISZERO",
      "path": "161"
    },
    "450": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7371,
        7800
      ],
      "op": "PUSH2",
      "path": "161",
      "value": "0x1CE"
    },
    "453": {
      "branch": 12,
      "fn": "Address._verifyCallResult",
      "offset": [
        7371,
        7800
      ],
      "op": "JUMPI",
      "path": "161"
    },
    "454": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7633,
        7643
      ],
      "op": "DUP3",
      "path": "161"
    },
    "455": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7627,
        7644
      ],
      "op": "MLOAD",
      "path": "161"
    },
    "456": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7693,
        7708
      ],
      "op": "DUP1",
      "path": "161"
    },
    "457": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7680,
        7690
      ],
      "op": "DUP5",
      "path": "161"
    },
    "458": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7676,
        7678
      ],
      "op": "PUSH1",
      "path": "161",
      "value": "0x20"
    },
    "460": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7672,
        7691
      ],
      "op": "ADD",
      "path": "161"
    },
    "461": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7665,
        7709
      ],
      "op": "REVERT",
      "path": "161"
    },
    "462": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7582,
        7727
      ],
      "op": "JUMPDEST",
      "path": "161"
    },
    "463": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7772,
        7784
      ],
      "op": "DUP2",
      "path": "161",
      "statement": 9
    },
    "464": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "PUSH1",
      "path": "161",
      "value": "0x40"
    },
    "466": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "MLOAD",
      "path": "161"
    },
    "467": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "471": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "473": {
      "op": "SHL"
    },
    "474": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "DUP2",
      "path": "161"
    },
    "475": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "MSTORE",
      "path": "161"
    },
    "476": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "PUSH1",
      "path": "161",
      "value": "0x4"
    },
    "478": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "ADD",
      "path": "161"
    },
    "479": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "DUP1",
      "path": "161"
    },
    "480": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "DUP1",
      "path": "161"
    },
    "481": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "PUSH1",
      "path": "161",
      "value": "0x20"
    },
    "483": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "ADD",
      "path": "161"
    },
    "484": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "DUP3",
      "path": "161"
    },
    "485": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "DUP2",
      "path": "161"
    },
    "486": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "SUB",
      "path": "161"
    },
    "487": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "DUP3",
      "path": "161"
    },
    "488": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "MSTORE",
      "path": "161"
    },
    "489": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "DUP4",
      "path": "161"
    },
    "490": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "DUP2",
      "path": "161"
    },
    "491": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "DUP2",
      "path": "161"
    },
    "492": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "MLOAD",
      "path": "161"
    },
    "493": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "DUP2",
      "path": "161"
    },
    "494": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "MSTORE",
      "path": "161"
    },
    "495": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "PUSH1",
      "path": "161",
      "value": "0x20"
    },
    "497": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "ADD",
      "path": "161"
    },
    "498": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "SWAP2",
      "path": "161"
    },
    "499": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "POP",
      "path": "161"
    },
    "500": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "DUP1",
      "path": "161"
    },
    "501": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "MLOAD",
      "path": "161"
    },
    "502": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "SWAP1",
      "path": "161"
    },
    "503": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "PUSH1",
      "path": "161",
      "value": "0x20"
    },
    "505": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "ADD",
      "path": "161"
    },
    "506": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "SWAP1",
      "path": "161"
    },
    "507": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "DUP1",
      "path": "161"
    },
    "508": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "DUP4",
      "path": "161"
    },
    "509": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "DUP4",
      "path": "161"
    },
    "510": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "PUSH1",
      "path": "161",
      "value": "0x0"
    },
    "512": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "JUMPDEST",
      "path": "161"
    },
    "513": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "DUP4",
      "path": "161"
    },
    "514": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "DUP2",
      "path": "161"
    },
    "515": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "LT",
      "path": "161"
    },
    "516": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "ISZERO",
      "path": "161"
    },
    "517": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "PUSH2",
      "path": "161",
      "value": "0x218"
    },
    "520": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "JUMPI",
      "path": "161"
    },
    "521": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "DUP2",
      "path": "161"
    },
    "522": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "DUP2",
      "path": "161"
    },
    "523": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "ADD",
      "path": "161"
    },
    "524": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "MLOAD",
      "path": "161"
    },
    "525": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "DUP4",
      "path": "161"
    },
    "526": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "DUP3",
      "path": "161"
    },
    "527": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "ADD",
      "path": "161"
    },
    "528": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "MSTORE",
      "path": "161"
    },
    "529": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "PUSH1",
      "path": "161",
      "value": "0x20"
    },
    "531": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "ADD",
      "path": "161"
    },
    "532": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "PUSH2",
      "path": "161",
      "value": "0x200"
    },
    "535": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "JUMP",
      "path": "161"
    },
    "536": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "JUMPDEST",
      "path": "161"
    },
    "537": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "POP",
      "path": "161"
    },
    "538": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "POP",
      "path": "161"
    },
    "539": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "POP",
      "path": "161"
    },
    "540": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "POP",
      "path": "161"
    },
    "541": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "SWAP1",
      "path": "161"
    },
    "542": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "POP",
      "path": "161"
    },
    "543": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "SWAP1",
      "path": "161"
    },
    "544": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "DUP2",
      "path": "161"
    },
    "545": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "ADD",
      "path": "161"
    },
    "546": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "SWAP1",
      "path": "161"
    },
    "547": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "PUSH1",
      "path": "161",
      "value": "0x1F"
    },
    "549": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "AND",
      "path": "161"
    },
    "550": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "DUP1",
      "path": "161"
    },
    "551": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "ISZERO",
      "path": "161"
    },
    "552": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "PUSH2",
      "path": "161",
      "value": "0x245"
    },
    "555": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "JUMPI",
      "path": "161"
    },
    "556": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "DUP1",
      "path": "161"
    },
    "557": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "DUP3",
      "path": "161"
    },
    "558": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "SUB",
      "path": "161"
    },
    "559": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "DUP1",
      "path": "161"
    },
    "560": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "MLOAD",
      "path": "161"
    },
    "561": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "PUSH1",
      "path": "161",
      "value": "0x1"
    },
    "563": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "DUP4",
      "path": "161"
    },
    "564": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "PUSH1",
      "path": "161",
      "value": "0x20"
    },
    "566": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "SUB",
      "path": "161"
    },
    "567": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "PUSH2",
      "path": "161",
      "value": "0x100"
    },
    "570": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "EXP",
      "path": "161"
    },
    "571": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "SUB",
      "path": "161"
    },
    "572": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "NOT",
      "path": "161"
    },
    "573": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "AND",
      "path": "161"
    },
    "574": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "DUP2",
      "path": "161"
    },
    "575": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "MSTORE",
      "path": "161"
    },
    "576": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "PUSH1",
      "path": "161",
      "value": "0x20"
    },
    "578": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "ADD",
      "path": "161"
    },
    "579": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "SWAP2",
      "path": "161"
    },
    "580": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "POP",
      "path": "161"
    },
    "581": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "JUMPDEST",
      "path": "161"
    },
    "582": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "POP",
      "path": "161"
    },
    "583": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "SWAP3",
      "path": "161"
    },
    "584": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "POP",
      "path": "161"
    },
    "585": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "POP",
      "path": "161"
    },
    "586": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "POP",
      "path": "161"
    },
    "587": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "PUSH1",
      "path": "161",
      "value": "0x40"
    },
    "589": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "MLOAD",
      "path": "161"
    },
    "590": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "DUP1",
      "path": "161"
    },
    "591": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "SWAP2",
      "path": "161"
    },
    "592": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "SUB",
      "path": "161"
    },
    "593": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "SWAP1",
      "path": "161"
    },
    "594": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "REVERT",
      "path": "161"
    }
  },
  "sha1": "041cac97fc319383b2fa73e14bcba10a59a9baa5",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.0 <0.8.0;\n\nimport \"./Proxy.sol\";\nimport \"../utils/Address.sol\";\n\n/**\n * @dev This contract implements an upgradeable proxy. It is upgradeable because calls are delegated to an\n * implementation address that can be changed. This address is stored in storage in the location specified by\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967], so that it doesn't conflict with the storage layout of the\n * implementation behind the proxy.\n *\n * Upgradeability is only provided internally through {_upgradeTo}. For an externally upgradeable proxy see\n * {TransparentUpgradeableProxy}.\n */\ncontract UpgradeableProxy is Proxy {\n    /**\n     * @dev Initializes the upgradeable proxy with an initial implementation specified by `_logic`.\n     *\n     * If `_data` is nonempty, it's used as data in a delegate call to `_logic`. This will typically be an encoded\n     * function call, and allows initializating the storage of the proxy like a Solidity constructor.\n     */\n    constructor(address _logic, bytes memory _data) public payable {\n        assert(_IMPLEMENTATION_SLOT == bytes32(uint256(keccak256(\"eip1967.proxy.implementation\")) - 1));\n        _setImplementation(_logic);\n        if(_data.length > 0) {\n            Address.functionDelegateCall(_logic, _data);\n        }\n    }\n\n    /**\n     * @dev Emitted when the implementation is upgraded.\n     */\n    event Upgraded(address indexed implementation);\n\n    /**\n     * @dev Storage slot with the address of the current implementation.\n     * This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1, and is\n     * validated in the constructor.\n     */\n    bytes32 private constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n\n    /**\n     * @dev Returns the current implementation address.\n     */\n    function _implementation() internal view virtual override returns (address impl) {\n        bytes32 slot = _IMPLEMENTATION_SLOT;\n        // solhint-disable-next-line no-inline-assembly\n        assembly {\n            impl := sload(slot)\n        }\n    }\n\n    /**\n     * @dev Upgrades the proxy to a new implementation.\n     *\n     * Emits an {Upgraded} event.\n     */\n    function _upgradeTo(address newImplementation) internal virtual {\n        _setImplementation(newImplementation);\n        emit Upgraded(newImplementation);\n    }\n\n    /**\n     * @dev Stores a new address in the EIP1967 implementation slot.\n     */\n    function _setImplementation(address newImplementation) private {\n        require(Address.isContract(newImplementation), \"UpgradeableProxy: new implementation is not a contract\");\n\n        bytes32 slot = _IMPLEMENTATION_SLOT;\n\n        // solhint-disable-next-line no-inline-assembly\n        assembly {\n            sstore(slot, newImplementation)\n        }\n    }\n}\n",
  "sourceMap": "638:2216:132:-:0;;;1019:309;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1019:309:132;;;;;;;;;;-1:-1:-1;1019:309:132;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1019:309:132;;-1:-1:-1;1092:95:132;;-1:-1:-1;;1092:95:132;;1197:26;1216:6;1197:18;:26::i;:::-;1236:12;;:16;1233:89;;1268:43;1297:6;1305:5;1268:28;;;;;:43;;:::i;:::-;;1233:89;1019:309;;638:2216;;2492:360;2573:37;2592:17;2573:18;;;;;:37;;:::i;:::-;2565:104;;;;-1:-1:-1;;;2565:104:132;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1727:66;2805:31;2791:55::o;6284:198:161:-;6367:12;6398:77;6419:6;6427:4;6398:77;;;;;;;;;;;;;;;;;:20;:77::i;:::-;6391:84;6284:198;-1:-1:-1;;;6284:198:161:o;726:413::-;1086:20;1124:8;;;726:413::o;6668:417::-;6779:12;6811:18;6822:6;6811:10;:18::i;:::-;6803:69;;;;-1:-1:-1;;;6803:69:161;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6943:12;6957:23;6984:6;-1:-1:-1;;;;;6984:19:161;7004:4;6984:25;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6984:25:161;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6942:67:161;;-1:-1:-1;6942:67:161;-1:-1:-1;7026:52:161;6942:67;;7065:12;7026:17;:52::i;:::-;7019:59;6668:417;-1:-1:-1;;;;;;6668:417:161:o;7091:725::-;7206:12;7234:7;7230:580;;;-1:-1:-1;7264:10:161;7257:17;;7230:580;7375:17;;:21;7371:429;;7633:10;7627:17;7693:15;7680:10;7676:2;7672:19;7665:44;7582:145;7772:12;7765:20;;-1:-1:-1;;;7765:20:161;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;638:2216:132;;;;;;;",
  "sourcePath": "contracts/openzeppelin/proxy/UpgradeableProxy.sol",
  "type": "contract"
}