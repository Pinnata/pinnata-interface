{
  "abi": [
    {
      "inputs": [],
      "name": "addMemoryCheck",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "mem",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "divMemoryCheck",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "mem",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "a",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "b",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "errorMessage",
          "type": "string"
        }
      ],
      "name": "divWithMessage",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "a",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "b",
          "type": "uint256"
        }
      ],
      "name": "doAdd",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "a",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "b",
          "type": "uint256"
        }
      ],
      "name": "doDiv",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "a",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "b",
          "type": "uint256"
        }
      ],
      "name": "doMod",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "a",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "b",
          "type": "uint256"
        }
      ],
      "name": "doMul",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "a",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "b",
          "type": "uint256"
        }
      ],
      "name": "doSub",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "modMemoryCheck",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "mem",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "a",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "b",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "errorMessage",
          "type": "string"
        }
      ],
      "name": "modWithMessage",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "mulMemoryCheck",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "mem",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "subMemoryCheck",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "mem",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "a",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "b",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "errorMessage",
          "type": "string"
        }
      ],
      "name": "subWithMessage",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "a",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "b",
          "type": "uint256"
        }
      ],
      "name": "tryAdd",
      "outputs": [
        {
          "internalType": "bool",
          "name": "flag",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "a",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "b",
          "type": "uint256"
        }
      ],
      "name": "tryDiv",
      "outputs": [
        {
          "internalType": "bool",
          "name": "flag",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "a",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "b",
          "type": "uint256"
        }
      ],
      "name": "tryMod",
      "outputs": [
        {
          "internalType": "bool",
          "name": "flag",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "a",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "b",
          "type": "uint256"
        }
      ],
      "name": "tryMul",
      "outputs": [
        {
          "internalType": "bool",
          "name": "flag",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "a",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "b",
          "type": "uint256"
        }
      ],
      "name": "trySub",
      "outputs": [
        {
          "internalType": "bool",
          "name": "flag",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "19": "contracts/openzeppelin/math/SafeMath.sol",
    "76": "contracts/openzeppelin/mocks/SafeMathMock.sol"
  },
  "ast": {
    "absolutePath": "contracts/openzeppelin/mocks/SafeMathMock.sol",
    "exportedSymbols": {
      "SafeMathMock": [
        6640
      ]
    },
    "id": 6641,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 6256,
        "literals": [
          "solidity",
          ">=",
          "0.6",
          ".0",
          "<",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:31:76"
      },
      {
        "absolutePath": "contracts/openzeppelin/math/SafeMath.sol",
        "file": "../math/SafeMath.sol",
        "id": 6257,
        "nodeType": "ImportDirective",
        "scope": 6641,
        "sourceUnit": 13069,
        "src": "66:30:76",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 6640,
        "linearizedBaseContracts": [
          6640
        ],
        "name": "SafeMathMock",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 6274,
              "nodeType": "Block",
              "src": "211:45:76",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 6270,
                        "name": "a",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6259,
                        "src": "244:1:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 6271,
                        "name": "b",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6261,
                        "src": "247:1:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 6268,
                        "name": "SafeMath",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13068,
                        "src": "228:8:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SafeMath_$13068_$",
                          "typeString": "type(library SafeMath)"
                        }
                      },
                      "id": 6269,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "tryAdd",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12747,
                      "src": "228:15:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (bool,uint256)"
                      }
                    },
                    "id": 6272,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "228:21:76",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
                      "typeString": "tuple(bool,uint256)"
                    }
                  },
                  "functionReturnParameters": 6267,
                  "id": 6273,
                  "nodeType": "Return",
                  "src": "221:28:76"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "884557bf",
            "id": 6275,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tryAdd",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 6262,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6259,
                  "mutability": "mutable",
                  "name": "a",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 6275,
                  "src": "142:9:76",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6258,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "142:7:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6261,
                  "mutability": "mutable",
                  "name": "b",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 6275,
                  "src": "153:9:76",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6260,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "153:7:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "141:22:76"
            },
            "returnParameters": {
              "id": 6267,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6264,
                  "mutability": "mutable",
                  "name": "flag",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 6275,
                  "src": "185:9:76",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 6263,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "185:4:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6266,
                  "mutability": "mutable",
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 6275,
                  "src": "196:13:76",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6265,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "196:7:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "184:26:76"
            },
            "scope": 6640,
            "src": "126:130:76",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 6292,
              "nodeType": "Block",
              "src": "347:45:76",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 6288,
                        "name": "a",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6277,
                        "src": "380:1:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 6289,
                        "name": "b",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6279,
                        "src": "383:1:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 6286,
                        "name": "SafeMath",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13068,
                        "src": "364:8:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SafeMath_$13068_$",
                          "typeString": "type(library SafeMath)"
                        }
                      },
                      "id": 6287,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "trySub",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12774,
                      "src": "364:15:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (bool,uint256)"
                      }
                    },
                    "id": 6290,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "364:21:76",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
                      "typeString": "tuple(bool,uint256)"
                    }
                  },
                  "functionReturnParameters": 6285,
                  "id": 6291,
                  "nodeType": "Return",
                  "src": "357:28:76"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "a29962b1",
            "id": 6293,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "trySub",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 6280,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6277,
                  "mutability": "mutable",
                  "name": "a",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 6293,
                  "src": "278:9:76",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6276,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "278:7:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6279,
                  "mutability": "mutable",
                  "name": "b",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 6293,
                  "src": "289:9:76",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6278,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "289:7:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "277:22:76"
            },
            "returnParameters": {
              "id": 6285,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6282,
                  "mutability": "mutable",
                  "name": "flag",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 6293,
                  "src": "321:9:76",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 6281,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "321:4:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6284,
                  "mutability": "mutable",
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 6293,
                  "src": "332:13:76",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6283,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "332:7:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "320:26:76"
            },
            "scope": 6640,
            "src": "262:130:76",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 6310,
              "nodeType": "Block",
              "src": "483:45:76",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 6306,
                        "name": "a",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6295,
                        "src": "516:1:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 6307,
                        "name": "b",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6297,
                        "src": "519:1:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 6304,
                        "name": "SafeMath",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13068,
                        "src": "500:8:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SafeMath_$13068_$",
                          "typeString": "type(library SafeMath)"
                        }
                      },
                      "id": 6305,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "tryMul",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12815,
                      "src": "500:15:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (bool,uint256)"
                      }
                    },
                    "id": 6308,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "500:21:76",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
                      "typeString": "tuple(bool,uint256)"
                    }
                  },
                  "functionReturnParameters": 6303,
                  "id": 6309,
                  "nodeType": "Return",
                  "src": "493:28:76"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "6281efa4",
            "id": 6311,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tryMul",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 6298,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6295,
                  "mutability": "mutable",
                  "name": "a",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 6311,
                  "src": "414:9:76",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6294,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "414:7:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6297,
                  "mutability": "mutable",
                  "name": "b",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 6311,
                  "src": "425:9:76",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6296,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "425:7:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "413:22:76"
            },
            "returnParameters": {
              "id": 6303,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6300,
                  "mutability": "mutable",
                  "name": "flag",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 6311,
                  "src": "457:9:76",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 6299,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "457:4:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6302,
                  "mutability": "mutable",
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 6311,
                  "src": "468:13:76",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6301,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "468:7:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "456:26:76"
            },
            "scope": 6640,
            "src": "398:130:76",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 6328,
              "nodeType": "Block",
              "src": "619:45:76",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 6324,
                        "name": "a",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6313,
                        "src": "652:1:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 6325,
                        "name": "b",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6315,
                        "src": "655:1:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 6322,
                        "name": "SafeMath",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13068,
                        "src": "636:8:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SafeMath_$13068_$",
                          "typeString": "type(library SafeMath)"
                        }
                      },
                      "id": 6323,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "tryDiv",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12842,
                      "src": "636:15:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (bool,uint256)"
                      }
                    },
                    "id": 6326,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "636:21:76",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
                      "typeString": "tuple(bool,uint256)"
                    }
                  },
                  "functionReturnParameters": 6321,
                  "id": 6327,
                  "nodeType": "Return",
                  "src": "629:28:76"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "736ecb18",
            "id": 6329,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tryDiv",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 6316,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6313,
                  "mutability": "mutable",
                  "name": "a",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 6329,
                  "src": "550:9:76",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6312,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "550:7:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6315,
                  "mutability": "mutable",
                  "name": "b",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 6329,
                  "src": "561:9:76",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6314,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "561:7:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "549:22:76"
            },
            "returnParameters": {
              "id": 6321,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6318,
                  "mutability": "mutable",
                  "name": "flag",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 6329,
                  "src": "593:9:76",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 6317,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "593:4:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6320,
                  "mutability": "mutable",
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 6329,
                  "src": "604:13:76",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6319,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "604:7:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "592:26:76"
            },
            "scope": 6640,
            "src": "534:130:76",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 6346,
              "nodeType": "Block",
              "src": "755:45:76",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 6342,
                        "name": "a",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6331,
                        "src": "788:1:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 6343,
                        "name": "b",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6333,
                        "src": "791:1:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 6340,
                        "name": "SafeMath",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13068,
                        "src": "772:8:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SafeMath_$13068_$",
                          "typeString": "type(library SafeMath)"
                        }
                      },
                      "id": 6341,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "tryMod",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12869,
                      "src": "772:15:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (bool,uint256)"
                      }
                    },
                    "id": 6344,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "772:21:76",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
                      "typeString": "tuple(bool,uint256)"
                    }
                  },
                  "functionReturnParameters": 6339,
                  "id": 6345,
                  "nodeType": "Return",
                  "src": "765:28:76"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "38dc0867",
            "id": 6347,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tryMod",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 6334,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6331,
                  "mutability": "mutable",
                  "name": "a",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 6347,
                  "src": "686:9:76",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6330,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "686:7:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6333,
                  "mutability": "mutable",
                  "name": "b",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 6347,
                  "src": "697:9:76",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6332,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "697:7:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "685:22:76"
            },
            "returnParameters": {
              "id": 6339,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6336,
                  "mutability": "mutable",
                  "name": "flag",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 6347,
                  "src": "729:9:76",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 6335,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "729:4:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6338,
                  "mutability": "mutable",
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 6347,
                  "src": "740:13:76",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6337,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "740:7:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "728:26:76"
            },
            "scope": 6640,
            "src": "670:130:76",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 6362,
              "nodeType": "Block",
              "src": "960:42:76",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 6358,
                        "name": "a",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6349,
                        "src": "990:1:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 6359,
                        "name": "b",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6351,
                        "src": "993:1:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 6356,
                        "name": "SafeMath",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13068,
                        "src": "977:8:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SafeMath_$13068_$",
                          "typeString": "type(library SafeMath)"
                        }
                      },
                      "id": 6357,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "add",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12895,
                      "src": "977:12:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 6360,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "977:18:76",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 6355,
                  "id": 6361,
                  "nodeType": "Return",
                  "src": "970:25:76"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "dcc721d2",
            "id": 6363,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "doAdd",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 6352,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6349,
                  "mutability": "mutable",
                  "name": "a",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 6363,
                  "src": "908:9:76",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6348,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "908:7:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6351,
                  "mutability": "mutable",
                  "name": "b",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 6363,
                  "src": "919:9:76",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6350,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "919:7:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "907:22:76"
            },
            "returnParameters": {
              "id": 6355,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6354,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 6363,
                  "src": "951:7:76",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6353,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "951:7:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "950:9:76"
            },
            "scope": 6640,
            "src": "893:109:76",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 6378,
              "nodeType": "Block",
              "src": "1075:42:76",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 6374,
                        "name": "a",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6365,
                        "src": "1105:1:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 6375,
                        "name": "b",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6367,
                        "src": "1108:1:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 6372,
                        "name": "SafeMath",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13068,
                        "src": "1092:8:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SafeMath_$13068_$",
                          "typeString": "type(library SafeMath)"
                        }
                      },
                      "id": 6373,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sub",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12917,
                      "src": "1092:12:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 6376,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1092:18:76",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 6371,
                  "id": 6377,
                  "nodeType": "Return",
                  "src": "1085:25:76"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "6c7ac637",
            "id": 6379,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "doSub",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 6368,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6365,
                  "mutability": "mutable",
                  "name": "a",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 6379,
                  "src": "1023:9:76",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6364,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1023:7:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6367,
                  "mutability": "mutable",
                  "name": "b",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 6379,
                  "src": "1034:9:76",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6366,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1034:7:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1022:22:76"
            },
            "returnParameters": {
              "id": 6371,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6370,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 6379,
                  "src": "1066:7:76",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6369,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1066:7:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1065:9:76"
            },
            "scope": 6640,
            "src": "1008:109:76",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 6394,
              "nodeType": "Block",
              "src": "1190:42:76",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 6390,
                        "name": "a",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6381,
                        "src": "1220:1:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 6391,
                        "name": "b",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6383,
                        "src": "1223:1:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 6388,
                        "name": "SafeMath",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13068,
                        "src": "1207:8:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SafeMath_$13068_$",
                          "typeString": "type(library SafeMath)"
                        }
                      },
                      "id": 6389,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mul",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12951,
                      "src": "1207:12:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 6392,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1207:18:76",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 6387,
                  "id": 6393,
                  "nodeType": "Return",
                  "src": "1200:25:76"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "fb119198",
            "id": 6395,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "doMul",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 6384,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6381,
                  "mutability": "mutable",
                  "name": "a",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 6395,
                  "src": "1138:9:76",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6380,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1138:7:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6383,
                  "mutability": "mutable",
                  "name": "b",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 6395,
                  "src": "1149:9:76",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6382,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1149:7:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1137:22:76"
            },
            "returnParameters": {
              "id": 6387,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6386,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 6395,
                  "src": "1181:7:76",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6385,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1181:7:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1180:9:76"
            },
            "scope": 6640,
            "src": "1123:109:76",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 6410,
              "nodeType": "Block",
              "src": "1305:42:76",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 6406,
                        "name": "a",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6397,
                        "src": "1335:1:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 6407,
                        "name": "b",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6399,
                        "src": "1338:1:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 6404,
                        "name": "SafeMath",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13068,
                        "src": "1322:8:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SafeMath_$13068_$",
                          "typeString": "type(library SafeMath)"
                        }
                      },
                      "id": 6405,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "div",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12973,
                      "src": "1322:12:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 6408,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1322:18:76",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 6403,
                  "id": 6409,
                  "nodeType": "Return",
                  "src": "1315:25:76"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "fc0ce503",
            "id": 6411,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "doDiv",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 6400,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6397,
                  "mutability": "mutable",
                  "name": "a",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 6411,
                  "src": "1253:9:76",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6396,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1253:7:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6399,
                  "mutability": "mutable",
                  "name": "b",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 6411,
                  "src": "1264:9:76",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6398,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1264:7:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1252:22:76"
            },
            "returnParameters": {
              "id": 6403,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6402,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 6411,
                  "src": "1296:7:76",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6401,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1296:7:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1295:9:76"
            },
            "scope": 6640,
            "src": "1238:109:76",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 6426,
              "nodeType": "Block",
              "src": "1420:42:76",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 6422,
                        "name": "a",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6413,
                        "src": "1450:1:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 6423,
                        "name": "b",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6415,
                        "src": "1453:1:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 6420,
                        "name": "SafeMath",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13068,
                        "src": "1437:8:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SafeMath_$13068_$",
                          "typeString": "type(library SafeMath)"
                        }
                      },
                      "id": 6421,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mod",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12995,
                      "src": "1437:12:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 6424,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1437:18:76",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 6419,
                  "id": 6425,
                  "nodeType": "Return",
                  "src": "1430:25:76"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "869f602f",
            "id": 6427,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "doMod",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 6416,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6413,
                  "mutability": "mutable",
                  "name": "a",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 6427,
                  "src": "1368:9:76",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6412,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1368:7:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6415,
                  "mutability": "mutable",
                  "name": "b",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 6427,
                  "src": "1379:9:76",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6414,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1379:7:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1367:22:76"
            },
            "returnParameters": {
              "id": 6419,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6418,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 6427,
                  "src": "1411:7:76",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6417,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1411:7:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1410:9:76"
            },
            "scope": 6640,
            "src": "1353:109:76",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 6445,
              "nodeType": "Block",
              "src": "1572:56:76",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 6440,
                        "name": "a",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6429,
                        "src": "1602:1:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 6441,
                        "name": "b",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6431,
                        "src": "1605:1:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 6442,
                        "name": "errorMessage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6433,
                        "src": "1608:12:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 6438,
                        "name": "SafeMath",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13068,
                        "src": "1589:8:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SafeMath_$13068_$",
                          "typeString": "type(library SafeMath)"
                        }
                      },
                      "id": 6439,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sub",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13019,
                      "src": "1589:12:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
                      }
                    },
                    "id": 6443,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1589:32:76",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 6437,
                  "id": 6444,
                  "nodeType": "Return",
                  "src": "1582:39:76"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "9f5cec89",
            "id": 6446,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "subWithMessage",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 6434,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6429,
                  "mutability": "mutable",
                  "name": "a",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 6446,
                  "src": "1492:9:76",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6428,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1492:7:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6431,
                  "mutability": "mutable",
                  "name": "b",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 6446,
                  "src": "1503:9:76",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6430,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1503:7:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6433,
                  "mutability": "mutable",
                  "name": "errorMessage",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 6446,
                  "src": "1514:26:76",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 6432,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1514:6:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1491:50:76"
            },
            "returnParameters": {
              "id": 6437,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6436,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 6446,
                  "src": "1563:7:76",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6435,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1563:7:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1562:9:76"
            },
            "scope": 6640,
            "src": "1468:160:76",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 6464,
              "nodeType": "Block",
              "src": "1738:56:76",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 6459,
                        "name": "a",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6448,
                        "src": "1768:1:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 6460,
                        "name": "b",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6450,
                        "src": "1771:1:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 6461,
                        "name": "errorMessage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6452,
                        "src": "1774:12:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 6457,
                        "name": "SafeMath",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13068,
                        "src": "1755:8:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SafeMath_$13068_$",
                          "typeString": "type(library SafeMath)"
                        }
                      },
                      "id": 6458,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "div",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13043,
                      "src": "1755:12:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
                      }
                    },
                    "id": 6462,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1755:32:76",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 6456,
                  "id": 6463,
                  "nodeType": "Return",
                  "src": "1748:39:76"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "3449b5fb",
            "id": 6465,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "divWithMessage",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 6453,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6448,
                  "mutability": "mutable",
                  "name": "a",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 6465,
                  "src": "1658:9:76",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6447,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1658:7:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6450,
                  "mutability": "mutable",
                  "name": "b",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 6465,
                  "src": "1669:9:76",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6449,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1669:7:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6452,
                  "mutability": "mutable",
                  "name": "errorMessage",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 6465,
                  "src": "1680:26:76",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 6451,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1680:6:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1657:50:76"
            },
            "returnParameters": {
              "id": 6456,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6455,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 6465,
                  "src": "1729:7:76",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6454,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1729:7:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1728:9:76"
            },
            "scope": 6640,
            "src": "1634:160:76",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 6483,
              "nodeType": "Block",
              "src": "1904:56:76",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 6478,
                        "name": "a",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6467,
                        "src": "1934:1:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 6479,
                        "name": "b",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6469,
                        "src": "1937:1:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 6480,
                        "name": "errorMessage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6471,
                        "src": "1940:12:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 6476,
                        "name": "SafeMath",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13068,
                        "src": "1921:8:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SafeMath_$13068_$",
                          "typeString": "type(library SafeMath)"
                        }
                      },
                      "id": 6477,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mod",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13067,
                      "src": "1921:12:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
                      }
                    },
                    "id": 6481,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1921:32:76",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 6475,
                  "id": 6482,
                  "nodeType": "Return",
                  "src": "1914:39:76"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "a155bd62",
            "id": 6484,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "modWithMessage",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 6472,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6467,
                  "mutability": "mutable",
                  "name": "a",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 6484,
                  "src": "1824:9:76",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6466,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1824:7:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6469,
                  "mutability": "mutable",
                  "name": "b",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 6484,
                  "src": "1835:9:76",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6468,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1835:7:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6471,
                  "mutability": "mutable",
                  "name": "errorMessage",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 6484,
                  "src": "1846:26:76",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 6470,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1846:6:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1823:50:76"
            },
            "returnParameters": {
              "id": 6475,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6474,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 6484,
                  "src": "1895:7:76",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6473,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1895:7:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1894:9:76"
            },
            "scope": 6640,
            "src": "1800:160:76",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 6514,
              "nodeType": "Block",
              "src": "2026:307:76",
              "statements": [
                {
                  "assignments": [
                    6490
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 6490,
                      "mutability": "mutable",
                      "name": "length",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 6514,
                      "src": "2036:14:76",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 6489,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2036:7:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 6492,
                  "initialValue": {
                    "argumentTypes": null,
                    "hexValue": "3332",
                    "id": 6491,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2053:2:76",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_32_by_1",
                      "typeString": "int_const 32"
                    },
                    "value": "32"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2036:19:76"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "2130:22:76",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "2132:18:76",
                        "value": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2145:4:76",
                              "type": "",
                              "value": "0x40"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "2139:5:76"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2139:11:76"
                        },
                        "variableNames": [
                          {
                            "name": "mem",
                            "nodeType": "YulIdentifier",
                            "src": "2132:3:76"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "istanbul",
                  "externalReferences": [
                    {
                      "declaration": 6487,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "2132:3:76",
                      "valueSize": 1
                    }
                  ],
                  "id": 6493,
                  "nodeType": "InlineAssembly",
                  "src": "2121:31:76"
                },
                {
                  "body": {
                    "id": 6511,
                    "nodeType": "Block",
                    "src": "2198:23:76",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "31",
                              "id": 6507,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2213:1:76",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "31",
                              "id": 6508,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2216:1:76",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 6504,
                              "name": "SafeMath",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 13068,
                              "src": "2200:8:76",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_SafeMath_$13068_$",
                                "typeString": "type(library SafeMath)"
                              }
                            },
                            "id": 6506,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "add",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 12895,
                            "src": "2200:12:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 6509,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2200:18:76",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 6510,
                        "nodeType": "ExpressionStatement",
                        "src": "2200:18:76"
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 6500,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 6498,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6495,
                      "src": "2181:1:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 6499,
                      "name": "length",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6490,
                      "src": "2185:6:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2181:10:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 6512,
                  "initializationExpression": {
                    "assignments": [
                      6495
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 6495,
                        "mutability": "mutable",
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 6512,
                        "src": "2166:9:76",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 6494,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2166:7:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 6497,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 6496,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2178:1:76",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "2166:13:76"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 6502,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": true,
                      "src": "2193:3:76",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 6501,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6495,
                        "src": "2195:1:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 6503,
                    "nodeType": "ExpressionStatement",
                    "src": "2193:3:76"
                  },
                  "nodeType": "ForStatement",
                  "src": "2161:60:76"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "2295:32:76",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "2297:28:76",
                        "value": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2314:4:76",
                                  "type": "",
                                  "value": "0x40"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "2308:5:76"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2308:11:76"
                            },
                            {
                              "name": "mem",
                              "nodeType": "YulIdentifier",
                              "src": "2321:3:76"
                            }
                          ],
                          "functionName": {
                            "name": "sub",
                            "nodeType": "YulIdentifier",
                            "src": "2304:3:76"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2304:21:76"
                        },
                        "variableNames": [
                          {
                            "name": "mem",
                            "nodeType": "YulIdentifier",
                            "src": "2297:3:76"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "istanbul",
                  "externalReferences": [
                    {
                      "declaration": 6487,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "2297:3:76",
                      "valueSize": 1
                    },
                    {
                      "declaration": 6487,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "2321:3:76",
                      "valueSize": 1
                    }
                  ],
                  "id": 6513,
                  "nodeType": "InlineAssembly",
                  "src": "2286:41:76"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "fb24c860",
            "id": 6515,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addMemoryCheck",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 6485,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1989:2:76"
            },
            "returnParameters": {
              "id": 6488,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6487,
                  "mutability": "mutable",
                  "name": "mem",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 6515,
                  "src": "2013:11:76",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6486,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2013:7:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2012:13:76"
            },
            "scope": 6640,
            "src": "1966:367:76",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 6545,
              "nodeType": "Block",
              "src": "2399:307:76",
              "statements": [
                {
                  "assignments": [
                    6521
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 6521,
                      "mutability": "mutable",
                      "name": "length",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 6545,
                      "src": "2409:14:76",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 6520,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2409:7:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 6523,
                  "initialValue": {
                    "argumentTypes": null,
                    "hexValue": "3332",
                    "id": 6522,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2426:2:76",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_32_by_1",
                      "typeString": "int_const 32"
                    },
                    "value": "32"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2409:19:76"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "2503:22:76",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "2505:18:76",
                        "value": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2518:4:76",
                              "type": "",
                              "value": "0x40"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "2512:5:76"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2512:11:76"
                        },
                        "variableNames": [
                          {
                            "name": "mem",
                            "nodeType": "YulIdentifier",
                            "src": "2505:3:76"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "istanbul",
                  "externalReferences": [
                    {
                      "declaration": 6518,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "2505:3:76",
                      "valueSize": 1
                    }
                  ],
                  "id": 6524,
                  "nodeType": "InlineAssembly",
                  "src": "2494:31:76"
                },
                {
                  "body": {
                    "id": 6542,
                    "nodeType": "Block",
                    "src": "2571:23:76",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "31",
                              "id": 6538,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2586:1:76",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "31",
                              "id": 6539,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2589:1:76",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 6535,
                              "name": "SafeMath",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 13068,
                              "src": "2573:8:76",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_SafeMath_$13068_$",
                                "typeString": "type(library SafeMath)"
                              }
                            },
                            "id": 6537,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sub",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 12917,
                            "src": "2573:12:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 6540,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2573:18:76",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 6541,
                        "nodeType": "ExpressionStatement",
                        "src": "2573:18:76"
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 6531,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 6529,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6526,
                      "src": "2554:1:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 6530,
                      "name": "length",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6521,
                      "src": "2558:6:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2554:10:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 6543,
                  "initializationExpression": {
                    "assignments": [
                      6526
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 6526,
                        "mutability": "mutable",
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 6543,
                        "src": "2539:9:76",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 6525,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2539:7:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 6528,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 6527,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2551:1:76",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "2539:13:76"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 6533,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": true,
                      "src": "2566:3:76",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 6532,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6526,
                        "src": "2568:1:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 6534,
                    "nodeType": "ExpressionStatement",
                    "src": "2566:3:76"
                  },
                  "nodeType": "ForStatement",
                  "src": "2534:60:76"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "2668:32:76",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "2670:28:76",
                        "value": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2687:4:76",
                                  "type": "",
                                  "value": "0x40"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "2681:5:76"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2681:11:76"
                            },
                            {
                              "name": "mem",
                              "nodeType": "YulIdentifier",
                              "src": "2694:3:76"
                            }
                          ],
                          "functionName": {
                            "name": "sub",
                            "nodeType": "YulIdentifier",
                            "src": "2677:3:76"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2677:21:76"
                        },
                        "variableNames": [
                          {
                            "name": "mem",
                            "nodeType": "YulIdentifier",
                            "src": "2670:3:76"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "istanbul",
                  "externalReferences": [
                    {
                      "declaration": 6518,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "2670:3:76",
                      "valueSize": 1
                    },
                    {
                      "declaration": 6518,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "2694:3:76",
                      "valueSize": 1
                    }
                  ],
                  "id": 6544,
                  "nodeType": "InlineAssembly",
                  "src": "2659:41:76"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "fb999ded",
            "id": 6546,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "subMemoryCheck",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 6516,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2362:2:76"
            },
            "returnParameters": {
              "id": 6519,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6518,
                  "mutability": "mutable",
                  "name": "mem",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 6546,
                  "src": "2386:11:76",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6517,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2386:7:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2385:13:76"
            },
            "scope": 6640,
            "src": "2339:367:76",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 6576,
              "nodeType": "Block",
              "src": "2772:307:76",
              "statements": [
                {
                  "assignments": [
                    6552
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 6552,
                      "mutability": "mutable",
                      "name": "length",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 6576,
                      "src": "2782:14:76",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 6551,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2782:7:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 6554,
                  "initialValue": {
                    "argumentTypes": null,
                    "hexValue": "3332",
                    "id": 6553,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2799:2:76",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_32_by_1",
                      "typeString": "int_const 32"
                    },
                    "value": "32"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2782:19:76"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "2876:22:76",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "2878:18:76",
                        "value": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2891:4:76",
                              "type": "",
                              "value": "0x40"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "2885:5:76"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2885:11:76"
                        },
                        "variableNames": [
                          {
                            "name": "mem",
                            "nodeType": "YulIdentifier",
                            "src": "2878:3:76"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "istanbul",
                  "externalReferences": [
                    {
                      "declaration": 6549,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "2878:3:76",
                      "valueSize": 1
                    }
                  ],
                  "id": 6555,
                  "nodeType": "InlineAssembly",
                  "src": "2867:31:76"
                },
                {
                  "body": {
                    "id": 6573,
                    "nodeType": "Block",
                    "src": "2944:23:76",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "31",
                              "id": 6569,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2959:1:76",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "31",
                              "id": 6570,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2962:1:76",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 6566,
                              "name": "SafeMath",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 13068,
                              "src": "2946:8:76",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_SafeMath_$13068_$",
                                "typeString": "type(library SafeMath)"
                              }
                            },
                            "id": 6568,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "mul",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 12951,
                            "src": "2946:12:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 6571,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2946:18:76",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 6572,
                        "nodeType": "ExpressionStatement",
                        "src": "2946:18:76"
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 6562,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 6560,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6557,
                      "src": "2927:1:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 6561,
                      "name": "length",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6552,
                      "src": "2931:6:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2927:10:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 6574,
                  "initializationExpression": {
                    "assignments": [
                      6557
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 6557,
                        "mutability": "mutable",
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 6574,
                        "src": "2912:9:76",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 6556,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2912:7:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 6559,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 6558,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2924:1:76",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "2912:13:76"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 6564,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": true,
                      "src": "2939:3:76",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 6563,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6557,
                        "src": "2941:1:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 6565,
                    "nodeType": "ExpressionStatement",
                    "src": "2939:3:76"
                  },
                  "nodeType": "ForStatement",
                  "src": "2907:60:76"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "3041:32:76",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "3043:28:76",
                        "value": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "3060:4:76",
                                  "type": "",
                                  "value": "0x40"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "3054:5:76"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3054:11:76"
                            },
                            {
                              "name": "mem",
                              "nodeType": "YulIdentifier",
                              "src": "3067:3:76"
                            }
                          ],
                          "functionName": {
                            "name": "sub",
                            "nodeType": "YulIdentifier",
                            "src": "3050:3:76"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3050:21:76"
                        },
                        "variableNames": [
                          {
                            "name": "mem",
                            "nodeType": "YulIdentifier",
                            "src": "3043:3:76"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "istanbul",
                  "externalReferences": [
                    {
                      "declaration": 6549,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "3043:3:76",
                      "valueSize": 1
                    },
                    {
                      "declaration": 6549,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "3067:3:76",
                      "valueSize": 1
                    }
                  ],
                  "id": 6575,
                  "nodeType": "InlineAssembly",
                  "src": "3032:41:76"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "7e86d25c",
            "id": 6577,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mulMemoryCheck",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 6547,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2735:2:76"
            },
            "returnParameters": {
              "id": 6550,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6549,
                  "mutability": "mutable",
                  "name": "mem",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 6577,
                  "src": "2759:11:76",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6548,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2759:7:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2758:13:76"
            },
            "scope": 6640,
            "src": "2712:367:76",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 6607,
              "nodeType": "Block",
              "src": "3145:307:76",
              "statements": [
                {
                  "assignments": [
                    6583
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 6583,
                      "mutability": "mutable",
                      "name": "length",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 6607,
                      "src": "3155:14:76",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 6582,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3155:7:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 6585,
                  "initialValue": {
                    "argumentTypes": null,
                    "hexValue": "3332",
                    "id": 6584,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3172:2:76",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_32_by_1",
                      "typeString": "int_const 32"
                    },
                    "value": "32"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3155:19:76"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "3249:22:76",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "3251:18:76",
                        "value": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3264:4:76",
                              "type": "",
                              "value": "0x40"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "3258:5:76"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3258:11:76"
                        },
                        "variableNames": [
                          {
                            "name": "mem",
                            "nodeType": "YulIdentifier",
                            "src": "3251:3:76"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "istanbul",
                  "externalReferences": [
                    {
                      "declaration": 6580,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "3251:3:76",
                      "valueSize": 1
                    }
                  ],
                  "id": 6586,
                  "nodeType": "InlineAssembly",
                  "src": "3240:31:76"
                },
                {
                  "body": {
                    "id": 6604,
                    "nodeType": "Block",
                    "src": "3317:23:76",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "31",
                              "id": 6600,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3332:1:76",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "31",
                              "id": 6601,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3335:1:76",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 6597,
                              "name": "SafeMath",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 13068,
                              "src": "3319:8:76",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_SafeMath_$13068_$",
                                "typeString": "type(library SafeMath)"
                              }
                            },
                            "id": 6599,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "div",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 12973,
                            "src": "3319:12:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 6602,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3319:18:76",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 6603,
                        "nodeType": "ExpressionStatement",
                        "src": "3319:18:76"
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 6593,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 6591,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6588,
                      "src": "3300:1:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 6592,
                      "name": "length",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6583,
                      "src": "3304:6:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3300:10:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 6605,
                  "initializationExpression": {
                    "assignments": [
                      6588
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 6588,
                        "mutability": "mutable",
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 6605,
                        "src": "3285:9:76",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 6587,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3285:7:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 6590,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 6589,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3297:1:76",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "3285:13:76"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 6595,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": true,
                      "src": "3312:3:76",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 6594,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6588,
                        "src": "3314:1:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 6596,
                    "nodeType": "ExpressionStatement",
                    "src": "3312:3:76"
                  },
                  "nodeType": "ForStatement",
                  "src": "3280:60:76"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "3414:32:76",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "3416:28:76",
                        "value": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "3433:4:76",
                                  "type": "",
                                  "value": "0x40"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "3427:5:76"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3427:11:76"
                            },
                            {
                              "name": "mem",
                              "nodeType": "YulIdentifier",
                              "src": "3440:3:76"
                            }
                          ],
                          "functionName": {
                            "name": "sub",
                            "nodeType": "YulIdentifier",
                            "src": "3423:3:76"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3423:21:76"
                        },
                        "variableNames": [
                          {
                            "name": "mem",
                            "nodeType": "YulIdentifier",
                            "src": "3416:3:76"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "istanbul",
                  "externalReferences": [
                    {
                      "declaration": 6580,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "3416:3:76",
                      "valueSize": 1
                    },
                    {
                      "declaration": 6580,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "3440:3:76",
                      "valueSize": 1
                    }
                  ],
                  "id": 6606,
                  "nodeType": "InlineAssembly",
                  "src": "3405:41:76"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "c460ae04",
            "id": 6608,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "divMemoryCheck",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 6578,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3108:2:76"
            },
            "returnParameters": {
              "id": 6581,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6580,
                  "mutability": "mutable",
                  "name": "mem",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 6608,
                  "src": "3132:11:76",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6579,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3132:7:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3131:13:76"
            },
            "scope": 6640,
            "src": "3085:367:76",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 6638,
              "nodeType": "Block",
              "src": "3518:307:76",
              "statements": [
                {
                  "assignments": [
                    6614
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 6614,
                      "mutability": "mutable",
                      "name": "length",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 6638,
                      "src": "3528:14:76",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 6613,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3528:7:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 6616,
                  "initialValue": {
                    "argumentTypes": null,
                    "hexValue": "3332",
                    "id": 6615,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3545:2:76",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_32_by_1",
                      "typeString": "int_const 32"
                    },
                    "value": "32"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3528:19:76"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "3622:22:76",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "3624:18:76",
                        "value": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3637:4:76",
                              "type": "",
                              "value": "0x40"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "3631:5:76"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3631:11:76"
                        },
                        "variableNames": [
                          {
                            "name": "mem",
                            "nodeType": "YulIdentifier",
                            "src": "3624:3:76"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "istanbul",
                  "externalReferences": [
                    {
                      "declaration": 6611,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "3624:3:76",
                      "valueSize": 1
                    }
                  ],
                  "id": 6617,
                  "nodeType": "InlineAssembly",
                  "src": "3613:31:76"
                },
                {
                  "body": {
                    "id": 6635,
                    "nodeType": "Block",
                    "src": "3690:23:76",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "31",
                              "id": 6631,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3705:1:76",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "31",
                              "id": 6632,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3708:1:76",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 6628,
                              "name": "SafeMath",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 13068,
                              "src": "3692:8:76",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_SafeMath_$13068_$",
                                "typeString": "type(library SafeMath)"
                              }
                            },
                            "id": 6630,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "mod",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 12995,
                            "src": "3692:12:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 6633,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3692:18:76",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 6634,
                        "nodeType": "ExpressionStatement",
                        "src": "3692:18:76"
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 6624,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 6622,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6619,
                      "src": "3673:1:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 6623,
                      "name": "length",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6614,
                      "src": "3677:6:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3673:10:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 6636,
                  "initializationExpression": {
                    "assignments": [
                      6619
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 6619,
                        "mutability": "mutable",
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 6636,
                        "src": "3658:9:76",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 6618,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3658:7:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 6621,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 6620,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3670:1:76",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "3658:13:76"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 6626,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": true,
                      "src": "3685:3:76",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 6625,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6619,
                        "src": "3687:1:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 6627,
                    "nodeType": "ExpressionStatement",
                    "src": "3685:3:76"
                  },
                  "nodeType": "ForStatement",
                  "src": "3653:60:76"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "3787:32:76",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "3789:28:76",
                        "value": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "3806:4:76",
                                  "type": "",
                                  "value": "0x40"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "3800:5:76"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3800:11:76"
                            },
                            {
                              "name": "mem",
                              "nodeType": "YulIdentifier",
                              "src": "3813:3:76"
                            }
                          ],
                          "functionName": {
                            "name": "sub",
                            "nodeType": "YulIdentifier",
                            "src": "3796:3:76"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3796:21:76"
                        },
                        "variableNames": [
                          {
                            "name": "mem",
                            "nodeType": "YulIdentifier",
                            "src": "3789:3:76"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "istanbul",
                  "externalReferences": [
                    {
                      "declaration": 6611,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "3789:3:76",
                      "valueSize": 1
                    },
                    {
                      "declaration": 6611,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "3813:3:76",
                      "valueSize": 1
                    }
                  ],
                  "id": 6637,
                  "nodeType": "InlineAssembly",
                  "src": "3778:41:76"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "6f91e802",
            "id": 6639,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "modMemoryCheck",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 6609,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3481:2:76"
            },
            "returnParameters": {
              "id": 6612,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6611,
                  "mutability": "mutable",
                  "name": "mem",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 6639,
                  "src": "3505:11:76",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6610,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3505:7:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3504:13:76"
            },
            "scope": 6640,
            "src": "3458:367:76",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 6641,
        "src": "98:3730:76"
      }
    ],
    "src": "33:3796:76"
  },
  "bytecode": "608060405234801561001057600080fd5b50610ac3806100206000396000f3fe608060405234801561001057600080fd5b50600436106101165760003560e01c80639f5cec89116100a2578063dcc721d211610071578063dcc721d21461046b578063fb1191981461048e578063fb24c860146104b1578063fb999ded146104b9578063fc0ce503146104c157610116565b80639f5cec89146102dc578063a155bd621461038e578063a29962b114610440578063c460ae041461046357610116565b80636f91e802116100e95780636f91e80214610263578063736ecb181461026b5780637e86d25c1461028e578063869f602f14610296578063884557bf146102b957610116565b80633449b5fb1461011b57806338dc0867146101df5780636281efa41461021d5780636c7ac63714610240575b600080fd5b6101cd6004803603606081101561013157600080fd5b81359160208101359181019060608101604082013564010000000081111561015857600080fd5b82018360208201111561016a57600080fd5b8035906020019184600183028401116401000000008311171561018c57600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295506104e4945050505050565b60408051918252519081900360200190f35b610202600480360360408110156101f557600080fd5b50803590602001356104f9565b60408051921515835260208301919091528051918290030190f35b6102026004803603604081101561023357600080fd5b5080359060200135610512565b6101cd6004803603604081101561025657600080fd5b508035906020013561051f565b6101cd610534565b6102026004803603604081101561028157600080fd5b5080359060200135610561565b6101cd61056e565b6101cd600480360360408110156102ac57600080fd5b5080359060200135610592565b610202600480360360408110156102cf57600080fd5b508035906020013561059e565b6101cd600480360360608110156102f257600080fd5b81359160208101359181019060608101604082013564010000000081111561031957600080fd5b82018360208201111561032b57600080fd5b8035906020019184600183028401116401000000008311171561034d57600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295506105ab945050505050565b6101cd600480360360608110156103a457600080fd5b8135916020810135918101906060810160408201356401000000008111156103cb57600080fd5b8201836020820111156103dd57600080fd5b803590602001918460018302840111640100000000831117156103ff57600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295506105b8945050505050565b6102026004803603604081101561045657600080fd5b50803590602001356105c5565b6101cd6105d2565b6101cd6004803603604081101561048157600080fd5b50803590602001356105f6565b6101cd600480360360408110156104a457600080fd5b5080359060200135610602565b6101cd61060e565b6101cd610632565b6101cd600480360360408110156104d757600080fd5b5080359060200135610656565b60006104f1848484610662565b949350505050565b6000806105068484610701565b915091505b9250929050565b600080610506848461072b565b600061052b838361076b565b90505b92915050565b604051602060005b818110156105585761054f6001806107c8565b5060010161053c565b50506040510390565b600080610506848461082f565b604051602060005b8181101561055857610589600180610859565b50600101610576565b600061052b83836107c8565b60008061050684846108b2565b60006104f18484846108cd565b60006104f1848484610927565b6000806105068484610989565b604051602060005b81811015610558576105ed6001806109ab565b506001016105da565b600061052b8383610a12565b600061052b8383610859565b604051602060005b8181101561055857610629600180610a12565b50600101610616565b604051602060005b818110156105585761064d60018061076b565b5060010161063a565b600061052b83836109ab565b600081836106ee5760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b838110156106b357818101518382015260200161069b565b50505050905090810190601f1680156106e05780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b508284816106f857fe5b04949350505050565b600080826107145750600090508061050b565b600183858161071f57fe5b06915091509250929050565b6000808361073f575060019050600061050b565b8383028385828161074c57fe5b041461075f57600080925092505061050b565b60019590945092505050565b6000828211156107c2576040805162461bcd60e51b815260206004820152601e60248201527f536166654d6174683a207375627472616374696f6e206f766572666c6f770000604482015290519081900360640190fd5b50900390565b600080821161081e576040805162461bcd60e51b815260206004820152601860248201527f536166654d6174683a206d6f64756c6f206279207a65726f0000000000000000604482015290519081900360640190fd5b81838161082757fe5b069392505050565b600080826108425750600090508061050b565b600183858161084d57fe5b04915091509250929050565b6000826108685750600061052e565b8282028284828161087557fe5b041461052b5760405162461bcd60e51b8152600401808060200182810382526021815260200180610a6d6021913960400191505060405180910390fd5b6000808383018481101561075f57600080925092505061050b565b6000818484111561091f5760405162461bcd60e51b81526020600482018181528351602484015283519092839260449091019190850190808383600083156106b357818101518382015260200161069b565b505050900390565b600081836109765760405162461bcd60e51b81526020600482018181528351602484015283519092839260449091019190850190808383600083156106b357818101518382015260200161069b565b5082848161098057fe5b06949350505050565b6000808383111561099f5750600090508061050b565b50600193919092039150565b6000808211610a01576040805162461bcd60e51b815260206004820152601a60248201527f536166654d6174683a206469766973696f6e206279207a65726f000000000000604482015290519081900360640190fd5b818381610a0a57fe5b049392505050565b60008282018381101561052b576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fdfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77a26469706673582212200737f481d9bbdc4d5f4fa8bf2c367aa8a0ce8b13425ef5af6ec85f777477ef2064736f6c634300060c0033",
  "bytecodeSha1": "de792f09e3e47f80a0d87746b79cdcb033beec85",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.6.12+commit.27d51765"
  },
  "contractName": "SafeMathMock",
  "coverageMap": {
    "branches": {
      "19": {
        "SafeMath.add": {
          "62": [
            2802,
            2808,
            true
          ]
        },
        "SafeMath.div": {
          "48": [
            6365,
            6370,
            true
          ],
          "61": [
            4302,
            4307,
            true
          ]
        },
        "SafeMath.mod": {
          "53": [
            4905,
            4910,
            true
          ],
          "59": [
            7173,
            7178,
            true
          ]
        },
        "SafeMath.mul": {
          "55": [
            3619,
            3625,
            false
          ],
          "56": [
            3680,
            3690,
            true
          ]
        },
        "SafeMath.sub": {
          "52": [
            3221,
            3227,
            true
          ],
          "58": [
            5545,
            5551,
            true
          ]
        },
        "SafeMath.tryAdd": {
          "57": [
            906,
            911,
            false
          ]
        },
        "SafeMath.tryDiv": {
          "54": [
            2082,
            2088,
            false
          ]
        },
        "SafeMath.tryMod": {
          "49": [
            2393,
            2399,
            false
          ]
        },
        "SafeMath.tryMul": {
          "50": [
            1716,
            1722,
            false
          ],
          "51": [
            1781,
            1791,
            false
          ]
        },
        "SafeMath.trySub": {
          "60": [
            1199,
            1204,
            false
          ]
        }
      },
      "76": {}
    },
    "statements": {
      "19": {
        "SafeMath.add": {
          "47": [
            2794,
            2840
          ]
        },
        "SafeMath.div": {
          "23": [
            6357,
            6385
          ],
          "24": [
            6395,
            6407
          ],
          "45": [
            4294,
            4338
          ],
          "46": [
            4348,
            4360
          ]
        },
        "SafeMath.mod": {
          "32": [
            4897,
            4939
          ],
          "33": [
            4949,
            4961
          ],
          "41": [
            7165,
            7193
          ],
          "42": [
            7203,
            7215
          ]
        },
        "SafeMath.mul": {
          "36": [
            3627,
            3635
          ],
          "37": [
            3672,
            3728
          ]
        },
        "SafeMath.sub": {
          "30": [
            3213,
            3262
          ],
          "31": [
            3272,
            3284
          ],
          "39": [
            5537,
            5566
          ],
          "40": [
            5576,
            5588
          ]
        },
        "SafeMath.tryAdd": {
          "38": [
            913,
            930
          ]
        },
        "SafeMath.tryDiv": {
          "34": [
            2090,
            2107
          ],
          "35": [
            2117,
            2137
          ]
        },
        "SafeMath.tryMod": {
          "25": [
            2401,
            2418
          ],
          "26": [
            2428,
            2448
          ]
        },
        "SafeMath.tryMul": {
          "27": [
            1724,
            1740
          ],
          "28": [
            1793,
            1810
          ],
          "29": [
            1820,
            1836
          ]
        },
        "SafeMath.trySub": {
          "43": [
            1206,
            1223
          ],
          "44": [
            1233,
            1253
          ]
        }
      },
      "76": {
        "SafeMathMock.addMemoryCheck": {
          "18": [
            2200,
            2218
          ],
          "19": [
            2193,
            2196
          ]
        },
        "SafeMathMock.divMemoryCheck": {
          "14": [
            3319,
            3337
          ],
          "15": [
            3312,
            3315
          ]
        },
        "SafeMathMock.divWithMessage": {
          "0": [
            1748,
            1787
          ]
        },
        "SafeMathMock.doAdd": {
          "16": [
            970,
            995
          ]
        },
        "SafeMathMock.doDiv": {
          "22": [
            1315,
            1340
          ]
        },
        "SafeMathMock.doMod": {
          "9": [
            1430,
            1455
          ]
        },
        "SafeMathMock.doMul": {
          "17": [
            1200,
            1225
          ]
        },
        "SafeMathMock.doSub": {
          "3": [
            1085,
            1110
          ]
        },
        "SafeMathMock.modMemoryCheck": {
          "4": [
            3692,
            3710
          ],
          "5": [
            3685,
            3688
          ]
        },
        "SafeMathMock.modWithMessage": {
          "12": [
            1914,
            1953
          ]
        },
        "SafeMathMock.mulMemoryCheck": {
          "7": [
            2946,
            2964
          ],
          "8": [
            2939,
            2942
          ]
        },
        "SafeMathMock.subMemoryCheck": {
          "20": [
            2573,
            2591
          ],
          "21": [
            2566,
            2569
          ]
        },
        "SafeMathMock.subWithMessage": {
          "11": [
            1582,
            1621
          ]
        },
        "SafeMathMock.tryAdd": {
          "10": [
            221,
            249
          ]
        },
        "SafeMathMock.tryDiv": {
          "6": [
            629,
            657
          ]
        },
        "SafeMathMock.tryMod": {
          "1": [
            765,
            793
          ]
        },
        "SafeMathMock.tryMul": {
          "2": [
            493,
            521
          ]
        },
        "SafeMathMock.trySub": {
          "13": [
            357,
            385
          ]
        }
      }
    }
  },
  "dependencies": [
    "SafeMath"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106101165760003560e01c80639f5cec89116100a2578063dcc721d211610071578063dcc721d21461046b578063fb1191981461048e578063fb24c860146104b1578063fb999ded146104b9578063fc0ce503146104c157610116565b80639f5cec89146102dc578063a155bd621461038e578063a29962b114610440578063c460ae041461046357610116565b80636f91e802116100e95780636f91e80214610263578063736ecb181461026b5780637e86d25c1461028e578063869f602f14610296578063884557bf146102b957610116565b80633449b5fb1461011b57806338dc0867146101df5780636281efa41461021d5780636c7ac63714610240575b600080fd5b6101cd6004803603606081101561013157600080fd5b81359160208101359181019060608101604082013564010000000081111561015857600080fd5b82018360208201111561016a57600080fd5b8035906020019184600183028401116401000000008311171561018c57600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295506104e4945050505050565b60408051918252519081900360200190f35b610202600480360360408110156101f557600080fd5b50803590602001356104f9565b60408051921515835260208301919091528051918290030190f35b6102026004803603604081101561023357600080fd5b5080359060200135610512565b6101cd6004803603604081101561025657600080fd5b508035906020013561051f565b6101cd610534565b6102026004803603604081101561028157600080fd5b5080359060200135610561565b6101cd61056e565b6101cd600480360360408110156102ac57600080fd5b5080359060200135610592565b610202600480360360408110156102cf57600080fd5b508035906020013561059e565b6101cd600480360360608110156102f257600080fd5b81359160208101359181019060608101604082013564010000000081111561031957600080fd5b82018360208201111561032b57600080fd5b8035906020019184600183028401116401000000008311171561034d57600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295506105ab945050505050565b6101cd600480360360608110156103a457600080fd5b8135916020810135918101906060810160408201356401000000008111156103cb57600080fd5b8201836020820111156103dd57600080fd5b803590602001918460018302840111640100000000831117156103ff57600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295506105b8945050505050565b6102026004803603604081101561045657600080fd5b50803590602001356105c5565b6101cd6105d2565b6101cd6004803603604081101561048157600080fd5b50803590602001356105f6565b6101cd600480360360408110156104a457600080fd5b5080359060200135610602565b6101cd61060e565b6101cd610632565b6101cd600480360360408110156104d757600080fd5b5080359060200135610656565b60006104f1848484610662565b949350505050565b6000806105068484610701565b915091505b9250929050565b600080610506848461072b565b600061052b838361076b565b90505b92915050565b604051602060005b818110156105585761054f6001806107c8565b5060010161053c565b50506040510390565b600080610506848461082f565b604051602060005b8181101561055857610589600180610859565b50600101610576565b600061052b83836107c8565b60008061050684846108b2565b60006104f18484846108cd565b60006104f1848484610927565b6000806105068484610989565b604051602060005b81811015610558576105ed6001806109ab565b506001016105da565b600061052b8383610a12565b600061052b8383610859565b604051602060005b8181101561055857610629600180610a12565b50600101610616565b604051602060005b818110156105585761064d60018061076b565b5060010161063a565b600061052b83836109ab565b600081836106ee5760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b838110156106b357818101518382015260200161069b565b50505050905090810190601f1680156106e05780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b508284816106f857fe5b04949350505050565b600080826107145750600090508061050b565b600183858161071f57fe5b06915091509250929050565b6000808361073f575060019050600061050b565b8383028385828161074c57fe5b041461075f57600080925092505061050b565b60019590945092505050565b6000828211156107c2576040805162461bcd60e51b815260206004820152601e60248201527f536166654d6174683a207375627472616374696f6e206f766572666c6f770000604482015290519081900360640190fd5b50900390565b600080821161081e576040805162461bcd60e51b815260206004820152601860248201527f536166654d6174683a206d6f64756c6f206279207a65726f0000000000000000604482015290519081900360640190fd5b81838161082757fe5b069392505050565b600080826108425750600090508061050b565b600183858161084d57fe5b04915091509250929050565b6000826108685750600061052e565b8282028284828161087557fe5b041461052b5760405162461bcd60e51b8152600401808060200182810382526021815260200180610a6d6021913960400191505060405180910390fd5b6000808383018481101561075f57600080925092505061050b565b6000818484111561091f5760405162461bcd60e51b81526020600482018181528351602484015283519092839260449091019190850190808383600083156106b357818101518382015260200161069b565b505050900390565b600081836109765760405162461bcd60e51b81526020600482018181528351602484015283519092839260449091019190850190808383600083156106b357818101518382015260200161069b565b5082848161098057fe5b06949350505050565b6000808383111561099f5750600090508061050b565b50600193919092039150565b6000808211610a01576040805162461bcd60e51b815260206004820152601a60248201527f536166654d6174683a206469766973696f6e206279207a65726f000000000000604482015290519081900360640190fd5b818381610a0a57fe5b049392505050565b60008282018381101561052b576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fdfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77a26469706673582212200737f481d9bbdc4d5f4fa8bf2c367aa8a0ce8b13425ef5af6ec85f777477ef2064736f6c634300060c0033",
  "deployedSourceMap": "98:3730:76:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1634:160;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1634:160:76;;-1:-1:-1;1634:160:76;;-1:-1:-1;;;;;1634:160:76:i;:::-;;;;;;;;;;;;;;;;670:130;;;;;;;;;;;;;;;;-1:-1:-1;670:130:76;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;398;;;;;;;;;;;;;;;;-1:-1:-1;398:130:76;;;;;;;:::i;1008:109::-;;;;;;;;;;;;;;;;-1:-1:-1;1008:109:76;;;;;;;:::i;3458:367::-;;;:::i;534:130::-;;;;;;;;;;;;;;;;-1:-1:-1;534:130:76;;;;;;;:::i;2712:367::-;;;:::i;1353:109::-;;;;;;;;;;;;;;;;-1:-1:-1;1353:109:76;;;;;;;:::i;126:130::-;;;;;;;;;;;;;;;;-1:-1:-1;126:130:76;;;;;;;:::i;1468:160::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1468:160:76;;-1:-1:-1;1468:160:76;;-1:-1:-1;;;;;1468:160:76:i;1800:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1800:160:76;;-1:-1:-1;1800:160:76;;-1:-1:-1;;;;;1800:160:76:i;262:130::-;;;;;;;;;;;;;;;;-1:-1:-1;262:130:76;;;;;;;:::i;3085:367::-;;;:::i;893:109::-;;;;;;;;;;;;;;;;-1:-1:-1;893:109:76;;;;;;;:::i;1123:::-;;;;;;;;;;;;;;;;-1:-1:-1;1123:109:76;;;;;;;:::i;1966:367::-;;;:::i;2339:::-;;;:::i;1238:109::-;;;;;;;;;;;;;;;;-1:-1:-1;1238:109:76;;;;;;;:::i;1634:160::-;1729:7;1755:32;1768:1;1771;1774:12;1755;:32::i;:::-;1748:39;1634:160;-1:-1:-1;;;;1634:160:76:o;670:130::-;729:9;740:13;772:21;788:1;791;772:15;:21::i;:::-;765:28;;;;670:130;;;;;;:::o;398:::-;457:9;468:13;500:21;516:1;519;500:15;:21::i;1008:109::-;1066:7;1092:18;1105:1;1108;1092:12;:18::i;:::-;1085:25;;1008:109;;;;;:::o;3458:367::-;3637:4;3631:11;3545:2;3505:11;3653:60;3677:6;3673:1;:10;3653:60;;;3692:18;3705:1;3708;3692:12;:18::i;:::-;-1:-1:-1;3685:3:76;;3653:60;;;-1:-1:-1;;3806:4:76;3800:11;3796:21;;3787:32::o;534:130::-;593:9;604:13;636:21;652:1;655;636:15;:21::i;2712:367::-;2891:4;2885:11;2799:2;2759:11;2907:60;2931:6;2927:1;:10;2907:60;;;2946:18;2959:1;2962;2946:12;:18::i;:::-;-1:-1:-1;2939:3:76;;2907:60;;1353:109;1411:7;1437:18;1450:1;1453;1437:12;:18::i;126:130::-;185:9;196:13;228:21;244:1;247;228:15;:21::i;1468:160::-;1563:7;1589:32;1602:1;1605;1608:12;1589;:32::i;1800:160::-;1895:7;1921:32;1934:1;1937;1940:12;1921;:32::i;262:130::-;321:9;332:13;364:21;380:1;383;364:15;:21::i;3085:367::-;3264:4;3258:11;3172:2;3132:11;3280:60;3304:6;3300:1;:10;3280:60;;;3319:18;3332:1;3335;3319:12;:18::i;:::-;-1:-1:-1;3312:3:76;;3280:60;;893:109;951:7;977:18;990:1;993;977:12;:18::i;1123:109::-;1181:7;1207:18;1220:1;1223;1207:12;:18::i;1966:367::-;2145:4;2139:11;2053:2;2013:11;2161:60;2185:6;2181:1;:10;2161:60;;;2200:18;2213:1;2216;2200:12;:18::i;:::-;-1:-1:-1;2193:3:76;;2161:60;;2339:367;2518:4;2512:11;2426:2;2386:11;2534:60;2558:6;2554:1;:10;2534:60;;;2573:18;2586:1;2589;2573:12;:18::i;:::-;-1:-1:-1;2566:3:76;;2534:60;;1238:109;1296:7;1322:18;1335:1;1338;1322:12;:18::i;6252:162:19:-;6338:7;6372:12;6365:5;6357:28;;;;-1:-1:-1;;;6357:28:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6406:1;6402;:5;;;;;;;6252:162;-1:-1:-1;;;;6252:162:19:o;2303:152::-;2364:4;;2393:6;2389:29;;-1:-1:-1;2409:5:19;;-1:-1:-1;2409:5:19;2401:17;;2389:29;2436:4;2446:1;2442;:5;;;;;;2428:20;;;;2303:152;;;;;:::o;1408:435::-;1469:4;;1716:6;1712:28;;-1:-1:-1;1732:4:19;;-1:-1:-1;1738:1:19;1724:16;;1712:28;1762:5;;;1766:1;1762;:5;:1;1781:5;;;;;:10;1777:33;;1801:5;1808:1;1793:17;;;;;;;1777:33;1828:4;;1834:1;;-1:-1:-1;1408:435:19;-1:-1:-1;;;1408:435:19:o;3136:155::-;3194:7;3226:1;3221;:6;;3213:49;;;;;-1:-1:-1;;;3213:49:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3279:5:19;;;3136:155::o;4820:148::-;4878:7;4909:1;4905;:5;4897:42;;;;;-1:-1:-1;;;4897:42:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;4960:1;4956;:5;;;;;;;4820:148;-1:-1:-1;;;4820:148:19:o;1992:152::-;2053:4;;2082:6;2078:29;;-1:-1:-1;2098:5:19;;-1:-1:-1;2098:5:19;2090:17;;2078:29;2125:4;2135:1;2131;:5;;;;;;2117:20;;;;1992:152;;;;;:::o;3538:215::-;3596:7;3619:6;3615:20;;-1:-1:-1;3634:1:19;3627:8;;3615:20;3657:5;;;3661:1;3657;:5;:1;3680:5;;;;;:10;3672:56;;;;-1:-1:-1;;;3672:56:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;789:174;850:4;;887:5;;;906;;;902:28;;;921:5;928:1;913:17;;;;;;;5432:163;5518:7;5553:12;5545:6;;;;5537:29;;;;-1:-1:-1;;;5537:29:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;5583:5:19;;;5432:163::o;7060:162::-;7146:7;7180:12;7173:5;7165:28;;;;-1:-1:-1;;;7165:28:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7214:1;7210;:5;;;;;;;7060:162;-1:-1:-1;;;;7060:162:19:o;1109:151::-;1170:4;1176:7;1203:1;1199;:5;1195:28;;;-1:-1:-1;1214:5:19;;-1:-1:-1;1214:5:19;1206:17;;1195:28;-1:-1:-1;1241:4:19;;1247:5;;;;;-1:-1:-1;1109:151:19:o;4217:150::-;4275:7;4306:1;4302;:5;4294:44;;;;;-1:-1:-1;;;4294:44:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;4359:1;4355;:5;;;;;;;4217:150;-1:-1:-1;;;4217:150:19:o;2690:175::-;2748:7;2779:5;;;2802:6;;;;2794:46;;;;;-1:-1:-1;;;2794:46:19;;;;;;;;;;;;;;;;;;;;;;;;;;",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "offset": [
    98,
    3828
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x116 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9F5CEC89 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xDCC721D2 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xDCC721D2 EQ PUSH2 0x46B JUMPI DUP1 PUSH4 0xFB119198 EQ PUSH2 0x48E JUMPI DUP1 PUSH4 0xFB24C860 EQ PUSH2 0x4B1 JUMPI DUP1 PUSH4 0xFB999DED EQ PUSH2 0x4B9 JUMPI DUP1 PUSH4 0xFC0CE503 EQ PUSH2 0x4C1 JUMPI PUSH2 0x116 JUMP JUMPDEST DUP1 PUSH4 0x9F5CEC89 EQ PUSH2 0x2DC JUMPI DUP1 PUSH4 0xA155BD62 EQ PUSH2 0x38E JUMPI DUP1 PUSH4 0xA29962B1 EQ PUSH2 0x440 JUMPI DUP1 PUSH4 0xC460AE04 EQ PUSH2 0x463 JUMPI PUSH2 0x116 JUMP JUMPDEST DUP1 PUSH4 0x6F91E802 GT PUSH2 0xE9 JUMPI DUP1 PUSH4 0x6F91E802 EQ PUSH2 0x263 JUMPI DUP1 PUSH4 0x736ECB18 EQ PUSH2 0x26B JUMPI DUP1 PUSH4 0x7E86D25C EQ PUSH2 0x28E JUMPI DUP1 PUSH4 0x869F602F EQ PUSH2 0x296 JUMPI DUP1 PUSH4 0x884557BF EQ PUSH2 0x2B9 JUMPI PUSH2 0x116 JUMP JUMPDEST DUP1 PUSH4 0x3449B5FB EQ PUSH2 0x11B JUMPI DUP1 PUSH4 0x38DC0867 EQ PUSH2 0x1DF JUMPI DUP1 PUSH4 0x6281EFA4 EQ PUSH2 0x21D JUMPI DUP1 PUSH4 0x6C7AC637 EQ PUSH2 0x240 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1CD PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x131 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP2 DUP2 ADD SWAP1 PUSH1 0x60 DUP2 ADD PUSH1 0x40 DUP3 ADD CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x158 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x16A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x18C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 POP PUSH2 0x4E4 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x202 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x1F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x4F9 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 ISZERO ISZERO DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB ADD SWAP1 RETURN JUMPDEST PUSH2 0x202 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x233 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x512 JUMP JUMPDEST PUSH2 0x1CD PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x256 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x51F JUMP JUMPDEST PUSH2 0x1CD PUSH2 0x534 JUMP JUMPDEST PUSH2 0x202 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x281 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x561 JUMP JUMPDEST PUSH2 0x1CD PUSH2 0x56E JUMP JUMPDEST PUSH2 0x1CD PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x592 JUMP JUMPDEST PUSH2 0x202 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x59E JUMP JUMPDEST PUSH2 0x1CD PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x2F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP2 DUP2 ADD SWAP1 PUSH1 0x60 DUP2 ADD PUSH1 0x40 DUP3 ADD CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x319 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x32B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x34D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 POP PUSH2 0x5AB SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1CD PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x3A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP2 DUP2 ADD SWAP1 PUSH1 0x60 DUP2 ADD PUSH1 0x40 DUP3 ADD CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x3CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x3DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x3FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 POP PUSH2 0x5B8 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x202 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x456 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x5C5 JUMP JUMPDEST PUSH2 0x1CD PUSH2 0x5D2 JUMP JUMPDEST PUSH2 0x1CD PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x481 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x5F6 JUMP JUMPDEST PUSH2 0x1CD PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x4A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x602 JUMP JUMPDEST PUSH2 0x1CD PUSH2 0x60E JUMP JUMPDEST PUSH2 0x1CD PUSH2 0x632 JUMP JUMPDEST PUSH2 0x1CD PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x4D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x656 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4F1 DUP5 DUP5 DUP5 PUSH2 0x662 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x506 DUP5 DUP5 PUSH2 0x701 JUMP JUMPDEST SWAP2 POP SWAP2 POP JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x506 DUP5 DUP5 PUSH2 0x72B JUMP JUMPDEST PUSH1 0x0 PUSH2 0x52B DUP4 DUP4 PUSH2 0x76B JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x558 JUMPI PUSH2 0x54F PUSH1 0x1 DUP1 PUSH2 0x7C8 JUMP JUMPDEST POP PUSH1 0x1 ADD PUSH2 0x53C JUMP JUMPDEST POP POP PUSH1 0x40 MLOAD SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x506 DUP5 DUP5 PUSH2 0x82F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x558 JUMPI PUSH2 0x589 PUSH1 0x1 DUP1 PUSH2 0x859 JUMP JUMPDEST POP PUSH1 0x1 ADD PUSH2 0x576 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x52B DUP4 DUP4 PUSH2 0x7C8 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x506 DUP5 DUP5 PUSH2 0x8B2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4F1 DUP5 DUP5 DUP5 PUSH2 0x8CD JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4F1 DUP5 DUP5 DUP5 PUSH2 0x927 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x506 DUP5 DUP5 PUSH2 0x989 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x558 JUMPI PUSH2 0x5ED PUSH1 0x1 DUP1 PUSH2 0x9AB JUMP JUMPDEST POP PUSH1 0x1 ADD PUSH2 0x5DA JUMP JUMPDEST PUSH1 0x0 PUSH2 0x52B DUP4 DUP4 PUSH2 0xA12 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x52B DUP4 DUP4 PUSH2 0x859 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x558 JUMPI PUSH2 0x629 PUSH1 0x1 DUP1 PUSH2 0xA12 JUMP JUMPDEST POP PUSH1 0x1 ADD PUSH2 0x616 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x558 JUMPI PUSH2 0x64D PUSH1 0x1 DUP1 PUSH2 0x76B JUMP JUMPDEST POP PUSH1 0x1 ADD PUSH2 0x63A JUMP JUMPDEST PUSH1 0x0 PUSH2 0x52B DUP4 DUP4 PUSH2 0x9AB JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x6EE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x6B3 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x69B JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x6E0 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP DUP3 DUP5 DUP2 PUSH2 0x6F8 JUMPI INVALID JUMPDEST DIV SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH2 0x714 JUMPI POP PUSH1 0x0 SWAP1 POP DUP1 PUSH2 0x50B JUMP JUMPDEST PUSH1 0x1 DUP4 DUP6 DUP2 PUSH2 0x71F JUMPI INVALID JUMPDEST MOD SWAP2 POP SWAP2 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH2 0x73F JUMPI POP PUSH1 0x1 SWAP1 POP PUSH1 0x0 PUSH2 0x50B JUMP JUMPDEST DUP4 DUP4 MUL DUP4 DUP6 DUP3 DUP2 PUSH2 0x74C JUMPI INVALID JUMPDEST DIV EQ PUSH2 0x75F JUMPI PUSH1 0x0 DUP1 SWAP3 POP SWAP3 POP POP PUSH2 0x50B JUMP JUMPDEST PUSH1 0x1 SWAP6 SWAP1 SWAP5 POP SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH2 0x7C2 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 GT PUSH2 0x81E JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206D6F64756C6F206279207A65726F0000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP2 DUP4 DUP2 PUSH2 0x827 JUMPI INVALID JUMPDEST MOD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH2 0x842 JUMPI POP PUSH1 0x0 SWAP1 POP DUP1 PUSH2 0x50B JUMP JUMPDEST PUSH1 0x1 DUP4 DUP6 DUP2 PUSH2 0x84D JUMPI INVALID JUMPDEST DIV SWAP2 POP SWAP2 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x868 JUMPI POP PUSH1 0x0 PUSH2 0x52E JUMP JUMPDEST DUP3 DUP3 MUL DUP3 DUP5 DUP3 DUP2 PUSH2 0x875 JUMPI INVALID JUMPDEST DIV EQ PUSH2 0x52B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xA6D PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 DUP4 ADD DUP5 DUP2 LT ISZERO PUSH2 0x75F JUMPI PUSH1 0x0 DUP1 SWAP3 POP SWAP3 POP POP PUSH2 0x50B JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP5 GT ISZERO PUSH2 0x91F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 DUP2 MSTORE DUP4 MLOAD PUSH1 0x24 DUP5 ADD MSTORE DUP4 MLOAD SWAP1 SWAP3 DUP4 SWAP3 PUSH1 0x44 SWAP1 SWAP2 ADD SWAP2 SWAP1 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 DUP4 ISZERO PUSH2 0x6B3 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x69B JUMP JUMPDEST POP POP POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x976 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 DUP2 MSTORE DUP4 MLOAD PUSH1 0x24 DUP5 ADD MSTORE DUP4 MLOAD SWAP1 SWAP3 DUP4 SWAP3 PUSH1 0x44 SWAP1 SWAP2 ADD SWAP2 SWAP1 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 DUP4 ISZERO PUSH2 0x6B3 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x69B JUMP JUMPDEST POP DUP3 DUP5 DUP2 PUSH2 0x980 JUMPI INVALID JUMPDEST MOD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 DUP4 GT ISZERO PUSH2 0x99F JUMPI POP PUSH1 0x0 SWAP1 POP DUP1 PUSH2 0x50B JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP2 SWAP1 SWAP3 SUB SWAP2 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 GT PUSH2 0xA01 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP2 DUP4 DUP2 PUSH2 0xA0A JUMPI INVALID JUMPDEST DIV SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0x52B JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT INVALID MSTORE8 PUSH2 0x6665 0x4D PUSH2 0x7468 GASPRICE KECCAK256 PUSH14 0x756C7469706C69636174696F6E20 PUSH16 0x766572666C6F77A26469706673582212 KECCAK256 SMOD CALLDATACOPY DELEGATECALL DUP2 0xD9 0xBB 0xDC 0x4D 0x5F 0x4F 0xA8 0xBF 0x2C CALLDATASIZE PUSH27 0xA8A0CE8B13425EF5AF6EC85F777477EF2064736F6C634300060C00 CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        98,
        3828
      ],
      "op": "PUSH1",
      "path": "76",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        98,
        3828
      ],
      "op": "PUSH1",
      "path": "76",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        98,
        3828
      ],
      "op": "MSTORE",
      "path": "76"
    },
    "5": {
      "fn": null,
      "offset": [
        98,
        3828
      ],
      "op": "CALLVALUE",
      "path": "76"
    },
    "6": {
      "fn": null,
      "offset": [
        98,
        3828
      ],
      "op": "DUP1",
      "path": "76"
    },
    "7": {
      "fn": null,
      "offset": [
        98,
        3828
      ],
      "op": "ISZERO",
      "path": "76"
    },
    "8": {
      "fn": null,
      "offset": [
        98,
        3828
      ],
      "op": "PUSH2",
      "path": "76",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        98,
        3828
      ],
      "op": "JUMPI",
      "path": "76"
    },
    "12": {
      "fn": null,
      "offset": [
        98,
        3828
      ],
      "op": "PUSH1",
      "path": "76",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        98,
        3828
      ],
      "op": "DUP1",
      "path": "76"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        98,
        3828
      ],
      "op": "REVERT",
      "path": "76"
    },
    "16": {
      "fn": null,
      "offset": [
        98,
        3828
      ],
      "op": "JUMPDEST",
      "path": "76"
    },
    "17": {
      "fn": null,
      "offset": [
        98,
        3828
      ],
      "op": "POP",
      "path": "76"
    },
    "18": {
      "fn": null,
      "offset": [
        98,
        3828
      ],
      "op": "PUSH1",
      "path": "76",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        98,
        3828
      ],
      "op": "CALLDATASIZE",
      "path": "76"
    },
    "21": {
      "fn": null,
      "offset": [
        98,
        3828
      ],
      "op": "LT",
      "path": "76"
    },
    "22": {
      "fn": null,
      "offset": [
        98,
        3828
      ],
      "op": "PUSH2",
      "path": "76",
      "value": "0x116"
    },
    "25": {
      "fn": null,
      "offset": [
        98,
        3828
      ],
      "op": "JUMPI",
      "path": "76"
    },
    "26": {
      "fn": null,
      "offset": [
        98,
        3828
      ],
      "op": "PUSH1",
      "path": "76",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        98,
        3828
      ],
      "op": "CALLDATALOAD",
      "path": "76"
    },
    "29": {
      "fn": null,
      "offset": [
        98,
        3828
      ],
      "op": "PUSH1",
      "path": "76",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        98,
        3828
      ],
      "op": "SHR",
      "path": "76"
    },
    "32": {
      "fn": null,
      "offset": [
        98,
        3828
      ],
      "op": "DUP1",
      "path": "76"
    },
    "33": {
      "fn": null,
      "offset": [
        98,
        3828
      ],
      "op": "PUSH4",
      "path": "76",
      "value": "0x9F5CEC89"
    },
    "38": {
      "fn": null,
      "offset": [
        98,
        3828
      ],
      "op": "GT",
      "path": "76"
    },
    "39": {
      "fn": null,
      "offset": [
        98,
        3828
      ],
      "op": "PUSH2",
      "path": "76",
      "value": "0xA2"
    },
    "42": {
      "fn": null,
      "offset": [
        98,
        3828
      ],
      "op": "JUMPI",
      "path": "76"
    },
    "43": {
      "fn": null,
      "offset": [
        98,
        3828
      ],
      "op": "DUP1",
      "path": "76"
    },
    "44": {
      "fn": null,
      "offset": [
        98,
        3828
      ],
      "op": "PUSH4",
      "path": "76",
      "value": "0xDCC721D2"
    },
    "49": {
      "fn": null,
      "offset": [
        98,
        3828
      ],
      "op": "GT",
      "path": "76"
    },
    "50": {
      "fn": null,
      "offset": [
        98,
        3828
      ],
      "op": "PUSH2",
      "path": "76",
      "value": "0x71"
    },
    "53": {
      "fn": null,
      "offset": [
        98,
        3828
      ],
      "op": "JUMPI",
      "path": "76"
    },
    "54": {
      "fn": null,
      "offset": [
        98,
        3828
      ],
      "op": "DUP1",
      "path": "76"
    },
    "55": {
      "fn": null,
      "offset": [
        98,
        3828
      ],
      "op": "PUSH4",
      "path": "76",
      "value": "0xDCC721D2"
    },
    "60": {
      "fn": null,
      "offset": [
        98,
        3828
      ],
      "op": "EQ",
      "path": "76"
    },
    "61": {
      "fn": null,
      "offset": [
        98,
        3828
      ],
      "op": "PUSH2",
      "path": "76",
      "value": "0x46B"
    },
    "64": {
      "fn": null,
      "offset": [
        98,
        3828
      ],
      "op": "JUMPI",
      "path": "76"
    },
    "65": {
      "fn": null,
      "offset": [
        98,
        3828
      ],
      "op": "DUP1",
      "path": "76"
    },
    "66": {
      "fn": null,
      "offset": [
        98,
        3828
      ],
      "op": "PUSH4",
      "path": "76",
      "value": "0xFB119198"
    },
    "71": {
      "fn": null,
      "offset": [
        98,
        3828
      ],
      "op": "EQ",
      "path": "76"
    },
    "72": {
      "fn": null,
      "offset": [
        98,
        3828
      ],
      "op": "PUSH2",
      "path": "76",
      "value": "0x48E"
    },
    "75": {
      "fn": null,
      "offset": [
        98,
        3828
      ],
      "op": "JUMPI",
      "path": "76"
    },
    "76": {
      "fn": null,
      "offset": [
        98,
        3828
      ],
      "op": "DUP1",
      "path": "76"
    },
    "77": {
      "fn": null,
      "offset": [
        98,
        3828
      ],
      "op": "PUSH4",
      "path": "76",
      "value": "0xFB24C860"
    },
    "82": {
      "fn": null,
      "offset": [
        98,
        3828
      ],
      "op": "EQ",
      "path": "76"
    },
    "83": {
      "fn": null,
      "offset": [
        98,
        3828
      ],
      "op": "PUSH2",
      "path": "76",
      "value": "0x4B1"
    },
    "86": {
      "fn": null,
      "offset": [
        98,
        3828
      ],
      "op": "JUMPI",
      "path": "76"
    },
    "87": {
      "fn": null,
      "offset": [
        98,
        3828
      ],
      "op": "DUP1",
      "path": "76"
    },
    "88": {
      "fn": null,
      "offset": [
        98,
        3828
      ],
      "op": "PUSH4",
      "path": "76",
      "value": "0xFB999DED"
    },
    "93": {
      "fn": null,
      "offset": [
        98,
        3828
      ],
      "op": "EQ",
      "path": "76"
    },
    "94": {
      "fn": null,
      "offset": [
        98,
        3828
      ],
      "op": "PUSH2",
      "path": "76",
      "value": "0x4B9"
    },
    "97": {
      "fn": null,
      "offset": [
        98,
        3828
      ],
      "op": "JUMPI",
      "path": "76"
    },
    "98": {
      "fn": null,
      "offset": [
        98,
        3828
      ],
      "op": "DUP1",
      "path": "76"
    },
    "99": {
      "fn": null,
      "offset": [
        98,
        3828
      ],
      "op": "PUSH4",
      "path": "76",
      "value": "0xFC0CE503"
    },
    "104": {
      "fn": null,
      "offset": [
        98,
        3828
      ],
      "op": "EQ",
      "path": "76"
    },
    "105": {
      "fn": null,
      "offset": [
        98,
        3828
      ],
      "op": "PUSH2",
      "path": "76",
      "value": "0x4C1"
    },
    "108": {
      "fn": null,
      "offset": [
        98,
        3828
      ],
      "op": "JUMPI",
      "path": "76"
    },
    "109": {
      "fn": null,
      "offset": [
        98,
        3828
      ],
      "op": "PUSH2",
      "path": "76",
      "value": "0x116"
    },
    "112": {
      "fn": null,
      "offset": [
        98,
        3828
      ],
      "op": "JUMP",
      "path": "76"
    },
    "113": {
      "fn": null,
      "offset": [
        98,
        3828
      ],
      "op": "JUMPDEST",
      "path": "76"
    },
    "114": {
      "fn": null,
      "offset": [
        98,
        3828
      ],
      "op": "DUP1",
      "path": "76"
    },
    "115": {
      "fn": null,
      "offset": [
        98,
        3828
      ],
      "op": "PUSH4",
      "path": "76",
      "value": "0x9F5CEC89"
    },
    "120": {
      "fn": null,
      "offset": [
        98,
        3828
      ],
      "op": "EQ",
      "path": "76"
    },
    "121": {
      "fn": null,
      "offset": [
        98,
        3828
      ],
      "op": "PUSH2",
      "path": "76",
      "value": "0x2DC"
    },
    "124": {
      "fn": null,
      "offset": [
        98,
        3828
      ],
      "op": "JUMPI",
      "path": "76"
    },
    "125": {
      "fn": null,
      "offset": [
        98,
        3828
      ],
      "op": "DUP1",
      "path": "76"
    },
    "126": {
      "fn": null,
      "offset": [
        98,
        3828
      ],
      "op": "PUSH4",
      "path": "76",
      "value": "0xA155BD62"
    },
    "131": {
      "fn": null,
      "offset": [
        98,
        3828
      ],
      "op": "EQ",
      "path": "76"
    },
    "132": {
      "fn": null,
      "offset": [
        98,
        3828
      ],
      "op": "PUSH2",
      "path": "76",
      "value": "0x38E"
    },
    "135": {
      "fn": null,
      "offset": [
        98,
        3828
      ],
      "op": "JUMPI",
      "path": "76"
    },
    "136": {
      "fn": null,
      "offset": [
        98,
        3828
      ],
      "op": "DUP1",
      "path": "76"
    },
    "137": {
      "fn": null,
      "offset": [
        98,
        3828
      ],
      "op": "PUSH4",
      "path": "76",
      "value": "0xA29962B1"
    },
    "142": {
      "fn": null,
      "offset": [
        98,
        3828
      ],
      "op": "EQ",
      "path": "76"
    },
    "143": {
      "fn": null,
      "offset": [
        98,
        3828
      ],
      "op": "PUSH2",
      "path": "76",
      "value": "0x440"
    },
    "146": {
      "fn": null,
      "offset": [
        98,
        3828
      ],
      "op": "JUMPI",
      "path": "76"
    },
    "147": {
      "fn": null,
      "offset": [
        98,
        3828
      ],
      "op": "DUP1",
      "path": "76"
    },
    "148": {
      "fn": null,
      "offset": [
        98,
        3828
      ],
      "op": "PUSH4",
      "path": "76",
      "value": "0xC460AE04"
    },
    "153": {
      "fn": null,
      "offset": [
        98,
        3828
      ],
      "op": "EQ",
      "path": "76"
    },
    "154": {
      "fn": null,
      "offset": [
        98,
        3828
      ],
      "op": "PUSH2",
      "path": "76",
      "value": "0x463"
    },
    "157": {
      "fn": null,
      "offset": [
        98,
        3828
      ],
      "op": "JUMPI",
      "path": "76"
    },
    "158": {
      "fn": null,
      "offset": [
        98,
        3828
      ],
      "op": "PUSH2",
      "path": "76",
      "value": "0x116"
    },
    "161": {
      "fn": null,
      "offset": [
        98,
        3828
      ],
      "op": "JUMP",
      "path": "76"
    },
    "162": {
      "fn": null,
      "offset": [
        98,
        3828
      ],
      "op": "JUMPDEST",
      "path": "76"
    },
    "163": {
      "fn": null,
      "offset": [
        98,
        3828
      ],
      "op": "DUP1",
      "path": "76"
    },
    "164": {
      "fn": null,
      "offset": [
        98,
        3828
      ],
      "op": "PUSH4",
      "path": "76",
      "value": "0x6F91E802"
    },
    "169": {
      "fn": null,
      "offset": [
        98,
        3828
      ],
      "op": "GT",
      "path": "76"
    },
    "170": {
      "fn": null,
      "offset": [
        98,
        3828
      ],
      "op": "PUSH2",
      "path": "76",
      "value": "0xE9"
    },
    "173": {
      "fn": null,
      "offset": [
        98,
        3828
      ],
      "op": "JUMPI",
      "path": "76"
    },
    "174": {
      "fn": null,
      "offset": [
        98,
        3828
      ],
      "op": "DUP1",
      "path": "76"
    },
    "175": {
      "fn": null,
      "offset": [
        98,
        3828
      ],
      "op": "PUSH4",
      "path": "76",
      "value": "0x6F91E802"
    },
    "180": {
      "fn": null,
      "offset": [
        98,
        3828
      ],
      "op": "EQ",
      "path": "76"
    },
    "181": {
      "fn": null,
      "offset": [
        98,
        3828
      ],
      "op": "PUSH2",
      "path": "76",
      "value": "0x263"
    },
    "184": {
      "fn": null,
      "offset": [
        98,
        3828
      ],
      "op": "JUMPI",
      "path": "76"
    },
    "185": {
      "fn": null,
      "offset": [
        98,
        3828
      ],
      "op": "DUP1",
      "path": "76"
    },
    "186": {
      "fn": null,
      "offset": [
        98,
        3828
      ],
      "op": "PUSH4",
      "path": "76",
      "value": "0x736ECB18"
    },
    "191": {
      "fn": null,
      "offset": [
        98,
        3828
      ],
      "op": "EQ",
      "path": "76"
    },
    "192": {
      "fn": null,
      "offset": [
        98,
        3828
      ],
      "op": "PUSH2",
      "path": "76",
      "value": "0x26B"
    },
    "195": {
      "fn": null,
      "offset": [
        98,
        3828
      ],
      "op": "JUMPI",
      "path": "76"
    },
    "196": {
      "fn": null,
      "offset": [
        98,
        3828
      ],
      "op": "DUP1",
      "path": "76"
    },
    "197": {
      "fn": null,
      "offset": [
        98,
        3828
      ],
      "op": "PUSH4",
      "path": "76",
      "value": "0x7E86D25C"
    },
    "202": {
      "fn": null,
      "offset": [
        98,
        3828
      ],
      "op": "EQ",
      "path": "76"
    },
    "203": {
      "fn": null,
      "offset": [
        98,
        3828
      ],
      "op": "PUSH2",
      "path": "76",
      "value": "0x28E"
    },
    "206": {
      "fn": null,
      "offset": [
        98,
        3828
      ],
      "op": "JUMPI",
      "path": "76"
    },
    "207": {
      "fn": null,
      "offset": [
        98,
        3828
      ],
      "op": "DUP1",
      "path": "76"
    },
    "208": {
      "fn": null,
      "offset": [
        98,
        3828
      ],
      "op": "PUSH4",
      "path": "76",
      "value": "0x869F602F"
    },
    "213": {
      "fn": null,
      "offset": [
        98,
        3828
      ],
      "op": "EQ",
      "path": "76"
    },
    "214": {
      "fn": null,
      "offset": [
        98,
        3828
      ],
      "op": "PUSH2",
      "path": "76",
      "value": "0x296"
    },
    "217": {
      "fn": null,
      "offset": [
        98,
        3828
      ],
      "op": "JUMPI",
      "path": "76"
    },
    "218": {
      "fn": null,
      "offset": [
        98,
        3828
      ],
      "op": "DUP1",
      "path": "76"
    },
    "219": {
      "fn": null,
      "offset": [
        98,
        3828
      ],
      "op": "PUSH4",
      "path": "76",
      "value": "0x884557BF"
    },
    "224": {
      "fn": null,
      "offset": [
        98,
        3828
      ],
      "op": "EQ",
      "path": "76"
    },
    "225": {
      "fn": null,
      "offset": [
        98,
        3828
      ],
      "op": "PUSH2",
      "path": "76",
      "value": "0x2B9"
    },
    "228": {
      "fn": null,
      "offset": [
        98,
        3828
      ],
      "op": "JUMPI",
      "path": "76"
    },
    "229": {
      "fn": null,
      "offset": [
        98,
        3828
      ],
      "op": "PUSH2",
      "path": "76",
      "value": "0x116"
    },
    "232": {
      "fn": null,
      "offset": [
        98,
        3828
      ],
      "op": "JUMP",
      "path": "76"
    },
    "233": {
      "fn": null,
      "offset": [
        98,
        3828
      ],
      "op": "JUMPDEST",
      "path": "76"
    },
    "234": {
      "fn": null,
      "offset": [
        98,
        3828
      ],
      "op": "DUP1",
      "path": "76"
    },
    "235": {
      "fn": null,
      "offset": [
        98,
        3828
      ],
      "op": "PUSH4",
      "path": "76",
      "value": "0x3449B5FB"
    },
    "240": {
      "fn": null,
      "offset": [
        98,
        3828
      ],
      "op": "EQ",
      "path": "76"
    },
    "241": {
      "fn": null,
      "offset": [
        98,
        3828
      ],
      "op": "PUSH2",
      "path": "76",
      "value": "0x11B"
    },
    "244": {
      "fn": null,
      "offset": [
        98,
        3828
      ],
      "op": "JUMPI",
      "path": "76"
    },
    "245": {
      "fn": null,
      "offset": [
        98,
        3828
      ],
      "op": "DUP1",
      "path": "76"
    },
    "246": {
      "fn": null,
      "offset": [
        98,
        3828
      ],
      "op": "PUSH4",
      "path": "76",
      "value": "0x38DC0867"
    },
    "251": {
      "fn": null,
      "offset": [
        98,
        3828
      ],
      "op": "EQ",
      "path": "76"
    },
    "252": {
      "fn": null,
      "offset": [
        98,
        3828
      ],
      "op": "PUSH2",
      "path": "76",
      "value": "0x1DF"
    },
    "255": {
      "fn": null,
      "offset": [
        98,
        3828
      ],
      "op": "JUMPI",
      "path": "76"
    },
    "256": {
      "fn": null,
      "offset": [
        98,
        3828
      ],
      "op": "DUP1",
      "path": "76"
    },
    "257": {
      "fn": null,
      "offset": [
        98,
        3828
      ],
      "op": "PUSH4",
      "path": "76",
      "value": "0x6281EFA4"
    },
    "262": {
      "fn": null,
      "offset": [
        98,
        3828
      ],
      "op": "EQ",
      "path": "76"
    },
    "263": {
      "fn": null,
      "offset": [
        98,
        3828
      ],
      "op": "PUSH2",
      "path": "76",
      "value": "0x21D"
    },
    "266": {
      "fn": null,
      "offset": [
        98,
        3828
      ],
      "op": "JUMPI",
      "path": "76"
    },
    "267": {
      "fn": null,
      "offset": [
        98,
        3828
      ],
      "op": "DUP1",
      "path": "76"
    },
    "268": {
      "fn": null,
      "offset": [
        98,
        3828
      ],
      "op": "PUSH4",
      "path": "76",
      "value": "0x6C7AC637"
    },
    "273": {
      "fn": null,
      "offset": [
        98,
        3828
      ],
      "op": "EQ",
      "path": "76"
    },
    "274": {
      "fn": null,
      "offset": [
        98,
        3828
      ],
      "op": "PUSH2",
      "path": "76",
      "value": "0x240"
    },
    "277": {
      "fn": null,
      "offset": [
        98,
        3828
      ],
      "op": "JUMPI",
      "path": "76"
    },
    "278": {
      "fn": null,
      "offset": [
        98,
        3828
      ],
      "op": "JUMPDEST",
      "path": "76"
    },
    "279": {
      "fn": null,
      "offset": [
        98,
        3828
      ],
      "op": "PUSH1",
      "path": "76",
      "value": "0x0"
    },
    "281": {
      "fn": null,
      "offset": [
        98,
        3828
      ],
      "op": "DUP1",
      "path": "76"
    },
    "282": {
      "first_revert": true,
      "fn": null,
      "offset": [
        98,
        3828
      ],
      "op": "REVERT",
      "path": "76"
    },
    "283": {
      "fn": "SafeMathMock.divWithMessage",
      "offset": [
        1634,
        1794
      ],
      "op": "JUMPDEST",
      "path": "76"
    },
    "284": {
      "fn": "SafeMathMock.divWithMessage",
      "offset": [
        1634,
        1794
      ],
      "op": "PUSH2",
      "path": "76",
      "value": "0x1CD"
    },
    "287": {
      "fn": "SafeMathMock.divWithMessage",
      "offset": [
        1634,
        1794
      ],
      "op": "PUSH1",
      "path": "76",
      "value": "0x4"
    },
    "289": {
      "fn": "SafeMathMock.divWithMessage",
      "offset": [
        1634,
        1794
      ],
      "op": "DUP1",
      "path": "76"
    },
    "290": {
      "fn": "SafeMathMock.divWithMessage",
      "offset": [
        1634,
        1794
      ],
      "op": "CALLDATASIZE",
      "path": "76"
    },
    "291": {
      "fn": "SafeMathMock.divWithMessage",
      "offset": [
        1634,
        1794
      ],
      "op": "SUB",
      "path": "76"
    },
    "292": {
      "fn": "SafeMathMock.divWithMessage",
      "offset": [
        1634,
        1794
      ],
      "op": "PUSH1",
      "path": "76",
      "value": "0x60"
    },
    "294": {
      "fn": "SafeMathMock.divWithMessage",
      "offset": [
        1634,
        1794
      ],
      "op": "DUP2",
      "path": "76"
    },
    "295": {
      "fn": "SafeMathMock.divWithMessage",
      "offset": [
        1634,
        1794
      ],
      "op": "LT",
      "path": "76"
    },
    "296": {
      "fn": "SafeMathMock.divWithMessage",
      "offset": [
        1634,
        1794
      ],
      "op": "ISZERO",
      "path": "76"
    },
    "297": {
      "fn": "SafeMathMock.divWithMessage",
      "offset": [
        1634,
        1794
      ],
      "op": "PUSH2",
      "path": "76",
      "value": "0x131"
    },
    "300": {
      "fn": "SafeMathMock.divWithMessage",
      "offset": [
        1634,
        1794
      ],
      "op": "JUMPI",
      "path": "76"
    },
    "301": {
      "fn": "SafeMathMock.divWithMessage",
      "offset": [
        1634,
        1794
      ],
      "op": "PUSH1",
      "path": "76",
      "value": "0x0"
    },
    "303": {
      "fn": "SafeMathMock.divWithMessage",
      "offset": [
        1634,
        1794
      ],
      "op": "DUP1",
      "path": "76"
    },
    "304": {
      "fn": "SafeMathMock.divWithMessage",
      "offset": [
        1634,
        1794
      ],
      "op": "REVERT",
      "path": "76"
    },
    "305": {
      "fn": "SafeMathMock.divWithMessage",
      "offset": [
        1634,
        1794
      ],
      "op": "JUMPDEST",
      "path": "76"
    },
    "306": {
      "fn": "SafeMathMock.divWithMessage",
      "offset": [
        1634,
        1794
      ],
      "op": "DUP2",
      "path": "76"
    },
    "307": {
      "fn": "SafeMathMock.divWithMessage",
      "offset": [
        1634,
        1794
      ],
      "op": "CALLDATALOAD",
      "path": "76"
    },
    "308": {
      "fn": "SafeMathMock.divWithMessage",
      "offset": [
        1634,
        1794
      ],
      "op": "SWAP2",
      "path": "76"
    },
    "309": {
      "fn": "SafeMathMock.divWithMessage",
      "offset": [
        1634,
        1794
      ],
      "op": "PUSH1",
      "path": "76",
      "value": "0x20"
    },
    "311": {
      "fn": "SafeMathMock.divWithMessage",
      "offset": [
        1634,
        1794
      ],
      "op": "DUP2",
      "path": "76"
    },
    "312": {
      "fn": "SafeMathMock.divWithMessage",
      "offset": [
        1634,
        1794
      ],
      "op": "ADD",
      "path": "76"
    },
    "313": {
      "fn": "SafeMathMock.divWithMessage",
      "offset": [
        1634,
        1794
      ],
      "op": "CALLDATALOAD",
      "path": "76"
    },
    "314": {
      "fn": "SafeMathMock.divWithMessage",
      "offset": [
        1634,
        1794
      ],
      "op": "SWAP2",
      "path": "76"
    },
    "315": {
      "fn": "SafeMathMock.divWithMessage",
      "offset": [
        1634,
        1794
      ],
      "op": "DUP2",
      "path": "76"
    },
    "316": {
      "fn": "SafeMathMock.divWithMessage",
      "offset": [
        1634,
        1794
      ],
      "op": "ADD",
      "path": "76"
    },
    "317": {
      "fn": "SafeMathMock.divWithMessage",
      "offset": [
        1634,
        1794
      ],
      "op": "SWAP1",
      "path": "76"
    },
    "318": {
      "fn": "SafeMathMock.divWithMessage",
      "offset": [
        1634,
        1794
      ],
      "op": "PUSH1",
      "path": "76",
      "value": "0x60"
    },
    "320": {
      "fn": "SafeMathMock.divWithMessage",
      "offset": [
        1634,
        1794
      ],
      "op": "DUP2",
      "path": "76"
    },
    "321": {
      "fn": "SafeMathMock.divWithMessage",
      "offset": [
        1634,
        1794
      ],
      "op": "ADD",
      "path": "76"
    },
    "322": {
      "fn": "SafeMathMock.divWithMessage",
      "offset": [
        1634,
        1794
      ],
      "op": "PUSH1",
      "path": "76",
      "value": "0x40"
    },
    "324": {
      "fn": "SafeMathMock.divWithMessage",
      "offset": [
        1634,
        1794
      ],
      "op": "DUP3",
      "path": "76"
    },
    "325": {
      "fn": "SafeMathMock.divWithMessage",
      "offset": [
        1634,
        1794
      ],
      "op": "ADD",
      "path": "76"
    },
    "326": {
      "fn": "SafeMathMock.divWithMessage",
      "offset": [
        1634,
        1794
      ],
      "op": "CALLDATALOAD",
      "path": "76"
    },
    "327": {
      "fn": "SafeMathMock.divWithMessage",
      "offset": [
        1634,
        1794
      ],
      "op": "PUSH5",
      "path": "76",
      "value": "0x100000000"
    },
    "333": {
      "fn": "SafeMathMock.divWithMessage",
      "offset": [
        1634,
        1794
      ],
      "op": "DUP2",
      "path": "76"
    },
    "334": {
      "fn": "SafeMathMock.divWithMessage",
      "offset": [
        1634,
        1794
      ],
      "op": "GT",
      "path": "76"
    },
    "335": {
      "fn": "SafeMathMock.divWithMessage",
      "offset": [
        1634,
        1794
      ],
      "op": "ISZERO",
      "path": "76"
    },
    "336": {
      "fn": "SafeMathMock.divWithMessage",
      "offset": [
        1634,
        1794
      ],
      "op": "PUSH2",
      "path": "76",
      "value": "0x158"
    },
    "339": {
      "fn": "SafeMathMock.divWithMessage",
      "offset": [
        1634,
        1794
      ],
      "op": "JUMPI",
      "path": "76"
    },
    "340": {
      "fn": "SafeMathMock.divWithMessage",
      "offset": [
        1634,
        1794
      ],
      "op": "PUSH1",
      "path": "76",
      "value": "0x0"
    },
    "342": {
      "fn": "SafeMathMock.divWithMessage",
      "offset": [
        1634,
        1794
      ],
      "op": "DUP1",
      "path": "76"
    },
    "343": {
      "fn": "SafeMathMock.divWithMessage",
      "offset": [
        1634,
        1794
      ],
      "op": "REVERT",
      "path": "76"
    },
    "344": {
      "fn": "SafeMathMock.divWithMessage",
      "offset": [
        1634,
        1794
      ],
      "op": "JUMPDEST",
      "path": "76"
    },
    "345": {
      "fn": "SafeMathMock.divWithMessage",
      "offset": [
        1634,
        1794
      ],
      "op": "DUP3",
      "path": "76"
    },
    "346": {
      "fn": "SafeMathMock.divWithMessage",
      "offset": [
        1634,
        1794
      ],
      "op": "ADD",
      "path": "76"
    },
    "347": {
      "fn": "SafeMathMock.divWithMessage",
      "offset": [
        1634,
        1794
      ],
      "op": "DUP4",
      "path": "76"
    },
    "348": {
      "fn": "SafeMathMock.divWithMessage",
      "offset": [
        1634,
        1794
      ],
      "op": "PUSH1",
      "path": "76",
      "value": "0x20"
    },
    "350": {
      "fn": "SafeMathMock.divWithMessage",
      "offset": [
        1634,
        1794
      ],
      "op": "DUP3",
      "path": "76"
    },
    "351": {
      "fn": "SafeMathMock.divWithMessage",
      "offset": [
        1634,
        1794
      ],
      "op": "ADD",
      "path": "76"
    },
    "352": {
      "fn": "SafeMathMock.divWithMessage",
      "offset": [
        1634,
        1794
      ],
      "op": "GT",
      "path": "76"
    },
    "353": {
      "fn": "SafeMathMock.divWithMessage",
      "offset": [
        1634,
        1794
      ],
      "op": "ISZERO",
      "path": "76"
    },
    "354": {
      "fn": "SafeMathMock.divWithMessage",
      "offset": [
        1634,
        1794
      ],
      "op": "PUSH2",
      "path": "76",
      "value": "0x16A"
    },
    "357": {
      "fn": "SafeMathMock.divWithMessage",
      "offset": [
        1634,
        1794
      ],
      "op": "JUMPI",
      "path": "76"
    },
    "358": {
      "fn": "SafeMathMock.divWithMessage",
      "offset": [
        1634,
        1794
      ],
      "op": "PUSH1",
      "path": "76",
      "value": "0x0"
    },
    "360": {
      "fn": "SafeMathMock.divWithMessage",
      "offset": [
        1634,
        1794
      ],
      "op": "DUP1",
      "path": "76"
    },
    "361": {
      "fn": "SafeMathMock.divWithMessage",
      "offset": [
        1634,
        1794
      ],
      "op": "REVERT",
      "path": "76"
    },
    "362": {
      "fn": "SafeMathMock.divWithMessage",
      "offset": [
        1634,
        1794
      ],
      "op": "JUMPDEST",
      "path": "76"
    },
    "363": {
      "fn": "SafeMathMock.divWithMessage",
      "offset": [
        1634,
        1794
      ],
      "op": "DUP1",
      "path": "76"
    },
    "364": {
      "fn": "SafeMathMock.divWithMessage",
      "offset": [
        1634,
        1794
      ],
      "op": "CALLDATALOAD",
      "path": "76"
    },
    "365": {
      "fn": "SafeMathMock.divWithMessage",
      "offset": [
        1634,
        1794
      ],
      "op": "SWAP1",
      "path": "76"
    },
    "366": {
      "fn": "SafeMathMock.divWithMessage",
      "offset": [
        1634,
        1794
      ],
      "op": "PUSH1",
      "path": "76",
      "value": "0x20"
    },
    "368": {
      "fn": "SafeMathMock.divWithMessage",
      "offset": [
        1634,
        1794
      ],
      "op": "ADD",
      "path": "76"
    },
    "369": {
      "fn": "SafeMathMock.divWithMessage",
      "offset": [
        1634,
        1794
      ],
      "op": "SWAP2",
      "path": "76"
    },
    "370": {
      "fn": "SafeMathMock.divWithMessage",
      "offset": [
        1634,
        1794
      ],
      "op": "DUP5",
      "path": "76"
    },
    "371": {
      "fn": "SafeMathMock.divWithMessage",
      "offset": [
        1634,
        1794
      ],
      "op": "PUSH1",
      "path": "76",
      "value": "0x1"
    },
    "373": {
      "fn": "SafeMathMock.divWithMessage",
      "offset": [
        1634,
        1794
      ],
      "op": "DUP4",
      "path": "76"
    },
    "374": {
      "fn": "SafeMathMock.divWithMessage",
      "offset": [
        1634,
        1794
      ],
      "op": "MUL",
      "path": "76"
    },
    "375": {
      "fn": "SafeMathMock.divWithMessage",
      "offset": [
        1634,
        1794
      ],
      "op": "DUP5",
      "path": "76"
    },
    "376": {
      "fn": "SafeMathMock.divWithMessage",
      "offset": [
        1634,
        1794
      ],
      "op": "ADD",
      "path": "76"
    },
    "377": {
      "fn": "SafeMathMock.divWithMessage",
      "offset": [
        1634,
        1794
      ],
      "op": "GT",
      "path": "76"
    },
    "378": {
      "fn": "SafeMathMock.divWithMessage",
      "offset": [
        1634,
        1794
      ],
      "op": "PUSH5",
      "path": "76",
      "value": "0x100000000"
    },
    "384": {
      "fn": "SafeMathMock.divWithMessage",
      "offset": [
        1634,
        1794
      ],
      "op": "DUP4",
      "path": "76"
    },
    "385": {
      "fn": "SafeMathMock.divWithMessage",
      "offset": [
        1634,
        1794
      ],
      "op": "GT",
      "path": "76"
    },
    "386": {
      "fn": "SafeMathMock.divWithMessage",
      "offset": [
        1634,
        1794
      ],
      "op": "OR",
      "path": "76"
    },
    "387": {
      "fn": "SafeMathMock.divWithMessage",
      "offset": [
        1634,
        1794
      ],
      "op": "ISZERO",
      "path": "76"
    },
    "388": {
      "fn": "SafeMathMock.divWithMessage",
      "offset": [
        1634,
        1794
      ],
      "op": "PUSH2",
      "path": "76",
      "value": "0x18C"
    },
    "391": {
      "fn": "SafeMathMock.divWithMessage",
      "offset": [
        1634,
        1794
      ],
      "op": "JUMPI",
      "path": "76"
    },
    "392": {
      "fn": "SafeMathMock.divWithMessage",
      "offset": [
        1634,
        1794
      ],
      "op": "PUSH1",
      "path": "76",
      "value": "0x0"
    },
    "394": {
      "fn": "SafeMathMock.divWithMessage",
      "offset": [
        1634,
        1794
      ],
      "op": "DUP1",
      "path": "76"
    },
    "395": {
      "fn": "SafeMathMock.divWithMessage",
      "offset": [
        1634,
        1794
      ],
      "op": "REVERT",
      "path": "76"
    },
    "396": {
      "fn": "SafeMathMock.divWithMessage",
      "offset": [
        1634,
        1794
      ],
      "op": "JUMPDEST",
      "path": "76"
    },
    "397": {
      "fn": "SafeMathMock.divWithMessage",
      "offset": [
        1634,
        1794
      ],
      "op": "SWAP2",
      "path": "76"
    },
    "398": {
      "fn": "SafeMathMock.divWithMessage",
      "offset": [
        1634,
        1794
      ],
      "op": "SWAP1",
      "path": "76"
    },
    "399": {
      "fn": "SafeMathMock.divWithMessage",
      "offset": [
        1634,
        1794
      ],
      "op": "DUP1",
      "path": "76"
    },
    "400": {
      "fn": "SafeMathMock.divWithMessage",
      "offset": [
        1634,
        1794
      ],
      "op": "DUP1",
      "path": "76"
    },
    "401": {
      "fn": "SafeMathMock.divWithMessage",
      "offset": [
        1634,
        1794
      ],
      "op": "PUSH1",
      "path": "76",
      "value": "0x1F"
    },
    "403": {
      "fn": "SafeMathMock.divWithMessage",
      "offset": [
        1634,
        1794
      ],
      "op": "ADD",
      "path": "76"
    },
    "404": {
      "fn": "SafeMathMock.divWithMessage",
      "offset": [
        1634,
        1794
      ],
      "op": "PUSH1",
      "path": "76",
      "value": "0x20"
    },
    "406": {
      "fn": "SafeMathMock.divWithMessage",
      "offset": [
        1634,
        1794
      ],
      "op": "DUP1",
      "path": "76"
    },
    "407": {
      "fn": "SafeMathMock.divWithMessage",
      "offset": [
        1634,
        1794
      ],
      "op": "SWAP2",
      "path": "76"
    },
    "408": {
      "fn": "SafeMathMock.divWithMessage",
      "offset": [
        1634,
        1794
      ],
      "op": "DIV",
      "path": "76"
    },
    "409": {
      "fn": "SafeMathMock.divWithMessage",
      "offset": [
        1634,
        1794
      ],
      "op": "MUL",
      "path": "76"
    },
    "410": {
      "fn": "SafeMathMock.divWithMessage",
      "offset": [
        1634,
        1794
      ],
      "op": "PUSH1",
      "path": "76",
      "value": "0x20"
    },
    "412": {
      "fn": "SafeMathMock.divWithMessage",
      "offset": [
        1634,
        1794
      ],
      "op": "ADD",
      "path": "76"
    },
    "413": {
      "fn": "SafeMathMock.divWithMessage",
      "offset": [
        1634,
        1794
      ],
      "op": "PUSH1",
      "path": "76",
      "value": "0x40"
    },
    "415": {
      "fn": "SafeMathMock.divWithMessage",
      "offset": [
        1634,
        1794
      ],
      "op": "MLOAD",
      "path": "76"
    },
    "416": {
      "fn": "SafeMathMock.divWithMessage",
      "offset": [
        1634,
        1794
      ],
      "op": "SWAP1",
      "path": "76"
    },
    "417": {
      "fn": "SafeMathMock.divWithMessage",
      "offset": [
        1634,
        1794
      ],
      "op": "DUP2",
      "path": "76"
    },
    "418": {
      "fn": "SafeMathMock.divWithMessage",
      "offset": [
        1634,
        1794
      ],
      "op": "ADD",
      "path": "76"
    },
    "419": {
      "fn": "SafeMathMock.divWithMessage",
      "offset": [
        1634,
        1794
      ],
      "op": "PUSH1",
      "path": "76",
      "value": "0x40"
    },
    "421": {
      "fn": "SafeMathMock.divWithMessage",
      "offset": [
        1634,
        1794
      ],
      "op": "MSTORE",
      "path": "76"
    },
    "422": {
      "fn": "SafeMathMock.divWithMessage",
      "offset": [
        1634,
        1794
      ],
      "op": "DUP1",
      "path": "76"
    },
    "423": {
      "fn": "SafeMathMock.divWithMessage",
      "offset": [
        1634,
        1794
      ],
      "op": "SWAP4",
      "path": "76"
    },
    "424": {
      "fn": "SafeMathMock.divWithMessage",
      "offset": [
        1634,
        1794
      ],
      "op": "SWAP3",
      "path": "76"
    },
    "425": {
      "fn": "SafeMathMock.divWithMessage",
      "offset": [
        1634,
        1794
      ],
      "op": "SWAP2",
      "path": "76"
    },
    "426": {
      "fn": "SafeMathMock.divWithMessage",
      "offset": [
        1634,
        1794
      ],
      "op": "SWAP1",
      "path": "76"
    },
    "427": {
      "fn": "SafeMathMock.divWithMessage",
      "offset": [
        1634,
        1794
      ],
      "op": "DUP2",
      "path": "76"
    },
    "428": {
      "fn": "SafeMathMock.divWithMessage",
      "offset": [
        1634,
        1794
      ],
      "op": "DUP2",
      "path": "76"
    },
    "429": {
      "fn": "SafeMathMock.divWithMessage",
      "offset": [
        1634,
        1794
      ],
      "op": "MSTORE",
      "path": "76"
    },
    "430": {
      "fn": "SafeMathMock.divWithMessage",
      "offset": [
        1634,
        1794
      ],
      "op": "PUSH1",
      "path": "76",
      "value": "0x20"
    },
    "432": {
      "fn": "SafeMathMock.divWithMessage",
      "offset": [
        1634,
        1794
      ],
      "op": "ADD",
      "path": "76"
    },
    "433": {
      "fn": "SafeMathMock.divWithMessage",
      "offset": [
        1634,
        1794
      ],
      "op": "DUP4",
      "path": "76"
    },
    "434": {
      "fn": "SafeMathMock.divWithMessage",
      "offset": [
        1634,
        1794
      ],
      "op": "DUP4",
      "path": "76"
    },
    "435": {
      "fn": "SafeMathMock.divWithMessage",
      "offset": [
        1634,
        1794
      ],
      "op": "DUP1",
      "path": "76"
    },
    "436": {
      "fn": "SafeMathMock.divWithMessage",
      "offset": [
        1634,
        1794
      ],
      "op": "DUP3",
      "path": "76"
    },
    "437": {
      "fn": "SafeMathMock.divWithMessage",
      "offset": [
        1634,
        1794
      ],
      "op": "DUP5",
      "path": "76"
    },
    "438": {
      "fn": "SafeMathMock.divWithMessage",
      "offset": [
        1634,
        1794
      ],
      "op": "CALLDATACOPY",
      "path": "76"
    },
    "439": {
      "fn": "SafeMathMock.divWithMessage",
      "offset": [
        1634,
        1794
      ],
      "op": "PUSH1",
      "path": "76",
      "value": "0x0"
    },
    "441": {
      "fn": "SafeMathMock.divWithMessage",
      "offset": [
        1634,
        1794
      ],
      "op": "SWAP3",
      "path": "76"
    },
    "442": {
      "fn": "SafeMathMock.divWithMessage",
      "offset": [
        1634,
        1794
      ],
      "op": "ADD",
      "path": "76"
    },
    "443": {
      "fn": "SafeMathMock.divWithMessage",
      "offset": [
        1634,
        1794
      ],
      "op": "SWAP2",
      "path": "76"
    },
    "444": {
      "fn": "SafeMathMock.divWithMessage",
      "offset": [
        1634,
        1794
      ],
      "op": "SWAP1",
      "path": "76"
    },
    "445": {
      "fn": "SafeMathMock.divWithMessage",
      "offset": [
        1634,
        1794
      ],
      "op": "SWAP2",
      "path": "76"
    },
    "446": {
      "fn": "SafeMathMock.divWithMessage",
      "offset": [
        1634,
        1794
      ],
      "op": "MSTORE",
      "path": "76"
    },
    "447": {
      "op": "POP"
    },
    "448": {
      "fn": "SafeMathMock.divWithMessage",
      "offset": [
        1634,
        1794
      ],
      "op": "SWAP3",
      "path": "76"
    },
    "449": {
      "fn": "SafeMathMock.divWithMessage",
      "offset": [
        1634,
        1794
      ],
      "op": "SWAP6",
      "path": "76"
    },
    "450": {
      "op": "POP"
    },
    "451": {
      "fn": "SafeMathMock.divWithMessage",
      "offset": [
        1634,
        1794
      ],
      "op": "PUSH2",
      "path": "76",
      "value": "0x4E4"
    },
    "454": {
      "fn": "SafeMathMock.divWithMessage",
      "offset": [
        1634,
        1794
      ],
      "op": "SWAP5",
      "path": "76"
    },
    "455": {
      "op": "POP"
    },
    "456": {
      "op": "POP"
    },
    "457": {
      "op": "POP"
    },
    "458": {
      "op": "POP"
    },
    "459": {
      "op": "POP"
    },
    "460": {
      "fn": "SafeMathMock.divWithMessage",
      "jump": "i",
      "offset": [
        1634,
        1794
      ],
      "op": "JUMP",
      "path": "76"
    },
    "461": {
      "fn": "SafeMathMock.divWithMessage",
      "offset": [
        1634,
        1794
      ],
      "op": "JUMPDEST",
      "path": "76"
    },
    "462": {
      "fn": "SafeMathMock.divWithMessage",
      "offset": [
        1634,
        1794
      ],
      "op": "PUSH1",
      "path": "76",
      "value": "0x40"
    },
    "464": {
      "fn": "SafeMathMock.divWithMessage",
      "offset": [
        1634,
        1794
      ],
      "op": "DUP1",
      "path": "76"
    },
    "465": {
      "fn": "SafeMathMock.divWithMessage",
      "offset": [
        1634,
        1794
      ],
      "op": "MLOAD",
      "path": "76"
    },
    "466": {
      "fn": "SafeMathMock.divWithMessage",
      "offset": [
        1634,
        1794
      ],
      "op": "SWAP2",
      "path": "76"
    },
    "467": {
      "fn": "SafeMathMock.divWithMessage",
      "offset": [
        1634,
        1794
      ],
      "op": "DUP3",
      "path": "76"
    },
    "468": {
      "fn": "SafeMathMock.divWithMessage",
      "offset": [
        1634,
        1794
      ],
      "op": "MSTORE",
      "path": "76"
    },
    "469": {
      "fn": "SafeMathMock.divWithMessage",
      "offset": [
        1634,
        1794
      ],
      "op": "MLOAD",
      "path": "76"
    },
    "470": {
      "fn": "SafeMathMock.divWithMessage",
      "offset": [
        1634,
        1794
      ],
      "op": "SWAP1",
      "path": "76"
    },
    "471": {
      "fn": "SafeMathMock.divWithMessage",
      "offset": [
        1634,
        1794
      ],
      "op": "DUP2",
      "path": "76"
    },
    "472": {
      "fn": "SafeMathMock.divWithMessage",
      "offset": [
        1634,
        1794
      ],
      "op": "SWAP1",
      "path": "76"
    },
    "473": {
      "fn": "SafeMathMock.divWithMessage",
      "offset": [
        1634,
        1794
      ],
      "op": "SUB",
      "path": "76"
    },
    "474": {
      "fn": "SafeMathMock.divWithMessage",
      "offset": [
        1634,
        1794
      ],
      "op": "PUSH1",
      "path": "76",
      "value": "0x20"
    },
    "476": {
      "fn": "SafeMathMock.divWithMessage",
      "offset": [
        1634,
        1794
      ],
      "op": "ADD",
      "path": "76"
    },
    "477": {
      "fn": "SafeMathMock.divWithMessage",
      "offset": [
        1634,
        1794
      ],
      "op": "SWAP1",
      "path": "76"
    },
    "478": {
      "fn": "SafeMathMock.divWithMessage",
      "offset": [
        1634,
        1794
      ],
      "op": "RETURN",
      "path": "76"
    },
    "479": {
      "fn": "SafeMathMock.tryMod",
      "offset": [
        670,
        800
      ],
      "op": "JUMPDEST",
      "path": "76"
    },
    "480": {
      "fn": "SafeMathMock.tryMod",
      "offset": [
        670,
        800
      ],
      "op": "PUSH2",
      "path": "76",
      "value": "0x202"
    },
    "483": {
      "fn": "SafeMathMock.tryMod",
      "offset": [
        670,
        800
      ],
      "op": "PUSH1",
      "path": "76",
      "value": "0x4"
    },
    "485": {
      "fn": "SafeMathMock.tryMod",
      "offset": [
        670,
        800
      ],
      "op": "DUP1",
      "path": "76"
    },
    "486": {
      "fn": "SafeMathMock.tryMod",
      "offset": [
        670,
        800
      ],
      "op": "CALLDATASIZE",
      "path": "76"
    },
    "487": {
      "fn": "SafeMathMock.tryMod",
      "offset": [
        670,
        800
      ],
      "op": "SUB",
      "path": "76"
    },
    "488": {
      "fn": "SafeMathMock.tryMod",
      "offset": [
        670,
        800
      ],
      "op": "PUSH1",
      "path": "76",
      "value": "0x40"
    },
    "490": {
      "fn": "SafeMathMock.tryMod",
      "offset": [
        670,
        800
      ],
      "op": "DUP2",
      "path": "76"
    },
    "491": {
      "fn": "SafeMathMock.tryMod",
      "offset": [
        670,
        800
      ],
      "op": "LT",
      "path": "76"
    },
    "492": {
      "fn": "SafeMathMock.tryMod",
      "offset": [
        670,
        800
      ],
      "op": "ISZERO",
      "path": "76"
    },
    "493": {
      "fn": "SafeMathMock.tryMod",
      "offset": [
        670,
        800
      ],
      "op": "PUSH2",
      "path": "76",
      "value": "0x1F5"
    },
    "496": {
      "fn": "SafeMathMock.tryMod",
      "offset": [
        670,
        800
      ],
      "op": "JUMPI",
      "path": "76"
    },
    "497": {
      "fn": "SafeMathMock.tryMod",
      "offset": [
        670,
        800
      ],
      "op": "PUSH1",
      "path": "76",
      "value": "0x0"
    },
    "499": {
      "fn": "SafeMathMock.tryMod",
      "offset": [
        670,
        800
      ],
      "op": "DUP1",
      "path": "76"
    },
    "500": {
      "fn": "SafeMathMock.tryMod",
      "offset": [
        670,
        800
      ],
      "op": "REVERT",
      "path": "76"
    },
    "501": {
      "fn": "SafeMathMock.tryMod",
      "offset": [
        670,
        800
      ],
      "op": "JUMPDEST",
      "path": "76"
    },
    "502": {
      "op": "POP"
    },
    "503": {
      "fn": "SafeMathMock.tryMod",
      "offset": [
        670,
        800
      ],
      "op": "DUP1",
      "path": "76"
    },
    "504": {
      "fn": "SafeMathMock.tryMod",
      "offset": [
        670,
        800
      ],
      "op": "CALLDATALOAD",
      "path": "76"
    },
    "505": {
      "fn": "SafeMathMock.tryMod",
      "offset": [
        670,
        800
      ],
      "op": "SWAP1",
      "path": "76"
    },
    "506": {
      "fn": "SafeMathMock.tryMod",
      "offset": [
        670,
        800
      ],
      "op": "PUSH1",
      "path": "76",
      "value": "0x20"
    },
    "508": {
      "fn": "SafeMathMock.tryMod",
      "offset": [
        670,
        800
      ],
      "op": "ADD",
      "path": "76"
    },
    "509": {
      "fn": "SafeMathMock.tryMod",
      "offset": [
        670,
        800
      ],
      "op": "CALLDATALOAD",
      "path": "76"
    },
    "510": {
      "fn": "SafeMathMock.tryMod",
      "offset": [
        670,
        800
      ],
      "op": "PUSH2",
      "path": "76",
      "value": "0x4F9"
    },
    "513": {
      "fn": "SafeMathMock.tryMod",
      "jump": "i",
      "offset": [
        670,
        800
      ],
      "op": "JUMP",
      "path": "76"
    },
    "514": {
      "fn": "SafeMathMock.tryMod",
      "offset": [
        670,
        800
      ],
      "op": "JUMPDEST",
      "path": "76"
    },
    "515": {
      "fn": "SafeMathMock.tryMod",
      "offset": [
        670,
        800
      ],
      "op": "PUSH1",
      "path": "76",
      "value": "0x40"
    },
    "517": {
      "fn": "SafeMathMock.tryMod",
      "offset": [
        670,
        800
      ],
      "op": "DUP1",
      "path": "76"
    },
    "518": {
      "fn": "SafeMathMock.tryMod",
      "offset": [
        670,
        800
      ],
      "op": "MLOAD",
      "path": "76"
    },
    "519": {
      "fn": "SafeMathMock.tryMod",
      "offset": [
        670,
        800
      ],
      "op": "SWAP3",
      "path": "76"
    },
    "520": {
      "fn": "SafeMathMock.tryMod",
      "offset": [
        670,
        800
      ],
      "op": "ISZERO",
      "path": "76"
    },
    "521": {
      "fn": "SafeMathMock.tryMod",
      "offset": [
        670,
        800
      ],
      "op": "ISZERO",
      "path": "76"
    },
    "522": {
      "fn": "SafeMathMock.tryMod",
      "offset": [
        670,
        800
      ],
      "op": "DUP4",
      "path": "76"
    },
    "523": {
      "fn": "SafeMathMock.tryMod",
      "offset": [
        670,
        800
      ],
      "op": "MSTORE",
      "path": "76"
    },
    "524": {
      "fn": "SafeMathMock.tryMod",
      "offset": [
        670,
        800
      ],
      "op": "PUSH1",
      "path": "76",
      "value": "0x20"
    },
    "526": {
      "fn": "SafeMathMock.tryMod",
      "offset": [
        670,
        800
      ],
      "op": "DUP4",
      "path": "76"
    },
    "527": {
      "fn": "SafeMathMock.tryMod",
      "offset": [
        670,
        800
      ],
      "op": "ADD",
      "path": "76"
    },
    "528": {
      "fn": "SafeMathMock.tryMod",
      "offset": [
        670,
        800
      ],
      "op": "SWAP2",
      "path": "76"
    },
    "529": {
      "fn": "SafeMathMock.tryMod",
      "offset": [
        670,
        800
      ],
      "op": "SWAP1",
      "path": "76"
    },
    "530": {
      "fn": "SafeMathMock.tryMod",
      "offset": [
        670,
        800
      ],
      "op": "SWAP2",
      "path": "76"
    },
    "531": {
      "fn": "SafeMathMock.tryMod",
      "offset": [
        670,
        800
      ],
      "op": "MSTORE",
      "path": "76"
    },
    "532": {
      "fn": "SafeMathMock.tryMod",
      "offset": [
        670,
        800
      ],
      "op": "DUP1",
      "path": "76"
    },
    "533": {
      "fn": "SafeMathMock.tryMod",
      "offset": [
        670,
        800
      ],
      "op": "MLOAD",
      "path": "76"
    },
    "534": {
      "fn": "SafeMathMock.tryMod",
      "offset": [
        670,
        800
      ],
      "op": "SWAP2",
      "path": "76"
    },
    "535": {
      "fn": "SafeMathMock.tryMod",
      "offset": [
        670,
        800
      ],
      "op": "DUP3",
      "path": "76"
    },
    "536": {
      "fn": "SafeMathMock.tryMod",
      "offset": [
        670,
        800
      ],
      "op": "SWAP1",
      "path": "76"
    },
    "537": {
      "fn": "SafeMathMock.tryMod",
      "offset": [
        670,
        800
      ],
      "op": "SUB",
      "path": "76"
    },
    "538": {
      "fn": "SafeMathMock.tryMod",
      "offset": [
        670,
        800
      ],
      "op": "ADD",
      "path": "76"
    },
    "539": {
      "fn": "SafeMathMock.tryMod",
      "offset": [
        670,
        800
      ],
      "op": "SWAP1",
      "path": "76"
    },
    "540": {
      "fn": "SafeMathMock.tryMod",
      "offset": [
        670,
        800
      ],
      "op": "RETURN",
      "path": "76"
    },
    "541": {
      "fn": "SafeMathMock.tryMul",
      "offset": [
        398,
        528
      ],
      "op": "JUMPDEST",
      "path": "76"
    },
    "542": {
      "fn": "SafeMathMock.tryMul",
      "offset": [
        398,
        528
      ],
      "op": "PUSH2",
      "path": "76",
      "value": "0x202"
    },
    "545": {
      "fn": "SafeMathMock.tryMul",
      "offset": [
        398,
        528
      ],
      "op": "PUSH1",
      "path": "76",
      "value": "0x4"
    },
    "547": {
      "fn": "SafeMathMock.tryMul",
      "offset": [
        398,
        528
      ],
      "op": "DUP1",
      "path": "76"
    },
    "548": {
      "fn": "SafeMathMock.tryMul",
      "offset": [
        398,
        528
      ],
      "op": "CALLDATASIZE",
      "path": "76"
    },
    "549": {
      "fn": "SafeMathMock.tryMul",
      "offset": [
        398,
        528
      ],
      "op": "SUB",
      "path": "76"
    },
    "550": {
      "fn": "SafeMathMock.tryMul",
      "offset": [
        398,
        528
      ],
      "op": "PUSH1",
      "path": "76",
      "value": "0x40"
    },
    "552": {
      "fn": "SafeMathMock.tryMul",
      "offset": [
        398,
        528
      ],
      "op": "DUP2",
      "path": "76"
    },
    "553": {
      "fn": "SafeMathMock.tryMul",
      "offset": [
        398,
        528
      ],
      "op": "LT",
      "path": "76"
    },
    "554": {
      "fn": "SafeMathMock.tryMul",
      "offset": [
        398,
        528
      ],
      "op": "ISZERO",
      "path": "76"
    },
    "555": {
      "fn": "SafeMathMock.tryMul",
      "offset": [
        398,
        528
      ],
      "op": "PUSH2",
      "path": "76",
      "value": "0x233"
    },
    "558": {
      "fn": "SafeMathMock.tryMul",
      "offset": [
        398,
        528
      ],
      "op": "JUMPI",
      "path": "76"
    },
    "559": {
      "fn": "SafeMathMock.tryMul",
      "offset": [
        398,
        528
      ],
      "op": "PUSH1",
      "path": "76",
      "value": "0x0"
    },
    "561": {
      "fn": "SafeMathMock.tryMul",
      "offset": [
        398,
        528
      ],
      "op": "DUP1",
      "path": "76"
    },
    "562": {
      "fn": "SafeMathMock.tryMul",
      "offset": [
        398,
        528
      ],
      "op": "REVERT",
      "path": "76"
    },
    "563": {
      "fn": "SafeMathMock.tryMul",
      "offset": [
        398,
        528
      ],
      "op": "JUMPDEST",
      "path": "76"
    },
    "564": {
      "op": "POP"
    },
    "565": {
      "fn": "SafeMathMock.tryMul",
      "offset": [
        398,
        528
      ],
      "op": "DUP1",
      "path": "76"
    },
    "566": {
      "fn": "SafeMathMock.tryMul",
      "offset": [
        398,
        528
      ],
      "op": "CALLDATALOAD",
      "path": "76"
    },
    "567": {
      "fn": "SafeMathMock.tryMul",
      "offset": [
        398,
        528
      ],
      "op": "SWAP1",
      "path": "76"
    },
    "568": {
      "fn": "SafeMathMock.tryMul",
      "offset": [
        398,
        528
      ],
      "op": "PUSH1",
      "path": "76",
      "value": "0x20"
    },
    "570": {
      "fn": "SafeMathMock.tryMul",
      "offset": [
        398,
        528
      ],
      "op": "ADD",
      "path": "76"
    },
    "571": {
      "fn": "SafeMathMock.tryMul",
      "offset": [
        398,
        528
      ],
      "op": "CALLDATALOAD",
      "path": "76"
    },
    "572": {
      "fn": "SafeMathMock.tryMul",
      "offset": [
        398,
        528
      ],
      "op": "PUSH2",
      "path": "76",
      "value": "0x512"
    },
    "575": {
      "fn": "SafeMathMock.tryMul",
      "jump": "i",
      "offset": [
        398,
        528
      ],
      "op": "JUMP",
      "path": "76"
    },
    "576": {
      "fn": "SafeMathMock.doSub",
      "offset": [
        1008,
        1117
      ],
      "op": "JUMPDEST",
      "path": "76"
    },
    "577": {
      "fn": "SafeMathMock.doSub",
      "offset": [
        1008,
        1117
      ],
      "op": "PUSH2",
      "path": "76",
      "value": "0x1CD"
    },
    "580": {
      "fn": "SafeMathMock.doSub",
      "offset": [
        1008,
        1117
      ],
      "op": "PUSH1",
      "path": "76",
      "value": "0x4"
    },
    "582": {
      "fn": "SafeMathMock.doSub",
      "offset": [
        1008,
        1117
      ],
      "op": "DUP1",
      "path": "76"
    },
    "583": {
      "fn": "SafeMathMock.doSub",
      "offset": [
        1008,
        1117
      ],
      "op": "CALLDATASIZE",
      "path": "76"
    },
    "584": {
      "fn": "SafeMathMock.doSub",
      "offset": [
        1008,
        1117
      ],
      "op": "SUB",
      "path": "76"
    },
    "585": {
      "fn": "SafeMathMock.doSub",
      "offset": [
        1008,
        1117
      ],
      "op": "PUSH1",
      "path": "76",
      "value": "0x40"
    },
    "587": {
      "fn": "SafeMathMock.doSub",
      "offset": [
        1008,
        1117
      ],
      "op": "DUP2",
      "path": "76"
    },
    "588": {
      "fn": "SafeMathMock.doSub",
      "offset": [
        1008,
        1117
      ],
      "op": "LT",
      "path": "76"
    },
    "589": {
      "fn": "SafeMathMock.doSub",
      "offset": [
        1008,
        1117
      ],
      "op": "ISZERO",
      "path": "76"
    },
    "590": {
      "fn": "SafeMathMock.doSub",
      "offset": [
        1008,
        1117
      ],
      "op": "PUSH2",
      "path": "76",
      "value": "0x256"
    },
    "593": {
      "fn": "SafeMathMock.doSub",
      "offset": [
        1008,
        1117
      ],
      "op": "JUMPI",
      "path": "76"
    },
    "594": {
      "fn": "SafeMathMock.doSub",
      "offset": [
        1008,
        1117
      ],
      "op": "PUSH1",
      "path": "76",
      "value": "0x0"
    },
    "596": {
      "fn": "SafeMathMock.doSub",
      "offset": [
        1008,
        1117
      ],
      "op": "DUP1",
      "path": "76"
    },
    "597": {
      "fn": "SafeMathMock.doSub",
      "offset": [
        1008,
        1117
      ],
      "op": "REVERT",
      "path": "76"
    },
    "598": {
      "fn": "SafeMathMock.doSub",
      "offset": [
        1008,
        1117
      ],
      "op": "JUMPDEST",
      "path": "76"
    },
    "599": {
      "op": "POP"
    },
    "600": {
      "fn": "SafeMathMock.doSub",
      "offset": [
        1008,
        1117
      ],
      "op": "DUP1",
      "path": "76"
    },
    "601": {
      "fn": "SafeMathMock.doSub",
      "offset": [
        1008,
        1117
      ],
      "op": "CALLDATALOAD",
      "path": "76"
    },
    "602": {
      "fn": "SafeMathMock.doSub",
      "offset": [
        1008,
        1117
      ],
      "op": "SWAP1",
      "path": "76"
    },
    "603": {
      "fn": "SafeMathMock.doSub",
      "offset": [
        1008,
        1117
      ],
      "op": "PUSH1",
      "path": "76",
      "value": "0x20"
    },
    "605": {
      "fn": "SafeMathMock.doSub",
      "offset": [
        1008,
        1117
      ],
      "op": "ADD",
      "path": "76"
    },
    "606": {
      "fn": "SafeMathMock.doSub",
      "offset": [
        1008,
        1117
      ],
      "op": "CALLDATALOAD",
      "path": "76"
    },
    "607": {
      "fn": "SafeMathMock.doSub",
      "offset": [
        1008,
        1117
      ],
      "op": "PUSH2",
      "path": "76",
      "value": "0x51F"
    },
    "610": {
      "fn": "SafeMathMock.doSub",
      "jump": "i",
      "offset": [
        1008,
        1117
      ],
      "op": "JUMP",
      "path": "76"
    },
    "611": {
      "fn": "SafeMathMock.modMemoryCheck",
      "offset": [
        3458,
        3825
      ],
      "op": "JUMPDEST",
      "path": "76"
    },
    "612": {
      "fn": "SafeMathMock.modMemoryCheck",
      "offset": [
        3458,
        3825
      ],
      "op": "PUSH2",
      "path": "76",
      "value": "0x1CD"
    },
    "615": {
      "fn": "SafeMathMock.modMemoryCheck",
      "offset": [
        3458,
        3825
      ],
      "op": "PUSH2",
      "path": "76",
      "value": "0x534"
    },
    "618": {
      "fn": "SafeMathMock.modMemoryCheck",
      "jump": "i",
      "offset": [
        3458,
        3825
      ],
      "op": "JUMP",
      "path": "76"
    },
    "619": {
      "fn": "SafeMathMock.tryDiv",
      "offset": [
        534,
        664
      ],
      "op": "JUMPDEST",
      "path": "76"
    },
    "620": {
      "fn": "SafeMathMock.tryDiv",
      "offset": [
        534,
        664
      ],
      "op": "PUSH2",
      "path": "76",
      "value": "0x202"
    },
    "623": {
      "fn": "SafeMathMock.tryDiv",
      "offset": [
        534,
        664
      ],
      "op": "PUSH1",
      "path": "76",
      "value": "0x4"
    },
    "625": {
      "fn": "SafeMathMock.tryDiv",
      "offset": [
        534,
        664
      ],
      "op": "DUP1",
      "path": "76"
    },
    "626": {
      "fn": "SafeMathMock.tryDiv",
      "offset": [
        534,
        664
      ],
      "op": "CALLDATASIZE",
      "path": "76"
    },
    "627": {
      "fn": "SafeMathMock.tryDiv",
      "offset": [
        534,
        664
      ],
      "op": "SUB",
      "path": "76"
    },
    "628": {
      "fn": "SafeMathMock.tryDiv",
      "offset": [
        534,
        664
      ],
      "op": "PUSH1",
      "path": "76",
      "value": "0x40"
    },
    "630": {
      "fn": "SafeMathMock.tryDiv",
      "offset": [
        534,
        664
      ],
      "op": "DUP2",
      "path": "76"
    },
    "631": {
      "fn": "SafeMathMock.tryDiv",
      "offset": [
        534,
        664
      ],
      "op": "LT",
      "path": "76"
    },
    "632": {
      "fn": "SafeMathMock.tryDiv",
      "offset": [
        534,
        664
      ],
      "op": "ISZERO",
      "path": "76"
    },
    "633": {
      "fn": "SafeMathMock.tryDiv",
      "offset": [
        534,
        664
      ],
      "op": "PUSH2",
      "path": "76",
      "value": "0x281"
    },
    "636": {
      "fn": "SafeMathMock.tryDiv",
      "offset": [
        534,
        664
      ],
      "op": "JUMPI",
      "path": "76"
    },
    "637": {
      "fn": "SafeMathMock.tryDiv",
      "offset": [
        534,
        664
      ],
      "op": "PUSH1",
      "path": "76",
      "value": "0x0"
    },
    "639": {
      "fn": "SafeMathMock.tryDiv",
      "offset": [
        534,
        664
      ],
      "op": "DUP1",
      "path": "76"
    },
    "640": {
      "fn": "SafeMathMock.tryDiv",
      "offset": [
        534,
        664
      ],
      "op": "REVERT",
      "path": "76"
    },
    "641": {
      "fn": "SafeMathMock.tryDiv",
      "offset": [
        534,
        664
      ],
      "op": "JUMPDEST",
      "path": "76"
    },
    "642": {
      "op": "POP"
    },
    "643": {
      "fn": "SafeMathMock.tryDiv",
      "offset": [
        534,
        664
      ],
      "op": "DUP1",
      "path": "76"
    },
    "644": {
      "fn": "SafeMathMock.tryDiv",
      "offset": [
        534,
        664
      ],
      "op": "CALLDATALOAD",
      "path": "76"
    },
    "645": {
      "fn": "SafeMathMock.tryDiv",
      "offset": [
        534,
        664
      ],
      "op": "SWAP1",
      "path": "76"
    },
    "646": {
      "fn": "SafeMathMock.tryDiv",
      "offset": [
        534,
        664
      ],
      "op": "PUSH1",
      "path": "76",
      "value": "0x20"
    },
    "648": {
      "fn": "SafeMathMock.tryDiv",
      "offset": [
        534,
        664
      ],
      "op": "ADD",
      "path": "76"
    },
    "649": {
      "fn": "SafeMathMock.tryDiv",
      "offset": [
        534,
        664
      ],
      "op": "CALLDATALOAD",
      "path": "76"
    },
    "650": {
      "fn": "SafeMathMock.tryDiv",
      "offset": [
        534,
        664
      ],
      "op": "PUSH2",
      "path": "76",
      "value": "0x561"
    },
    "653": {
      "fn": "SafeMathMock.tryDiv",
      "jump": "i",
      "offset": [
        534,
        664
      ],
      "op": "JUMP",
      "path": "76"
    },
    "654": {
      "fn": "SafeMathMock.mulMemoryCheck",
      "offset": [
        2712,
        3079
      ],
      "op": "JUMPDEST",
      "path": "76"
    },
    "655": {
      "fn": "SafeMathMock.mulMemoryCheck",
      "offset": [
        2712,
        3079
      ],
      "op": "PUSH2",
      "path": "76",
      "value": "0x1CD"
    },
    "658": {
      "fn": "SafeMathMock.mulMemoryCheck",
      "offset": [
        2712,
        3079
      ],
      "op": "PUSH2",
      "path": "76",
      "value": "0x56E"
    },
    "661": {
      "fn": "SafeMathMock.mulMemoryCheck",
      "jump": "i",
      "offset": [
        2712,
        3079
      ],
      "op": "JUMP",
      "path": "76"
    },
    "662": {
      "fn": "SafeMathMock.doMod",
      "offset": [
        1353,
        1462
      ],
      "op": "JUMPDEST",
      "path": "76"
    },
    "663": {
      "fn": "SafeMathMock.doMod",
      "offset": [
        1353,
        1462
      ],
      "op": "PUSH2",
      "path": "76",
      "value": "0x1CD"
    },
    "666": {
      "fn": "SafeMathMock.doMod",
      "offset": [
        1353,
        1462
      ],
      "op": "PUSH1",
      "path": "76",
      "value": "0x4"
    },
    "668": {
      "fn": "SafeMathMock.doMod",
      "offset": [
        1353,
        1462
      ],
      "op": "DUP1",
      "path": "76"
    },
    "669": {
      "fn": "SafeMathMock.doMod",
      "offset": [
        1353,
        1462
      ],
      "op": "CALLDATASIZE",
      "path": "76"
    },
    "670": {
      "fn": "SafeMathMock.doMod",
      "offset": [
        1353,
        1462
      ],
      "op": "SUB",
      "path": "76"
    },
    "671": {
      "fn": "SafeMathMock.doMod",
      "offset": [
        1353,
        1462
      ],
      "op": "PUSH1",
      "path": "76",
      "value": "0x40"
    },
    "673": {
      "fn": "SafeMathMock.doMod",
      "offset": [
        1353,
        1462
      ],
      "op": "DUP2",
      "path": "76"
    },
    "674": {
      "fn": "SafeMathMock.doMod",
      "offset": [
        1353,
        1462
      ],
      "op": "LT",
      "path": "76"
    },
    "675": {
      "fn": "SafeMathMock.doMod",
      "offset": [
        1353,
        1462
      ],
      "op": "ISZERO",
      "path": "76"
    },
    "676": {
      "fn": "SafeMathMock.doMod",
      "offset": [
        1353,
        1462
      ],
      "op": "PUSH2",
      "path": "76",
      "value": "0x2AC"
    },
    "679": {
      "fn": "SafeMathMock.doMod",
      "offset": [
        1353,
        1462
      ],
      "op": "JUMPI",
      "path": "76"
    },
    "680": {
      "fn": "SafeMathMock.doMod",
      "offset": [
        1353,
        1462
      ],
      "op": "PUSH1",
      "path": "76",
      "value": "0x0"
    },
    "682": {
      "fn": "SafeMathMock.doMod",
      "offset": [
        1353,
        1462
      ],
      "op": "DUP1",
      "path": "76"
    },
    "683": {
      "fn": "SafeMathMock.doMod",
      "offset": [
        1353,
        1462
      ],
      "op": "REVERT",
      "path": "76"
    },
    "684": {
      "fn": "SafeMathMock.doMod",
      "offset": [
        1353,
        1462
      ],
      "op": "JUMPDEST",
      "path": "76"
    },
    "685": {
      "op": "POP"
    },
    "686": {
      "fn": "SafeMathMock.doMod",
      "offset": [
        1353,
        1462
      ],
      "op": "DUP1",
      "path": "76"
    },
    "687": {
      "fn": "SafeMathMock.doMod",
      "offset": [
        1353,
        1462
      ],
      "op": "CALLDATALOAD",
      "path": "76"
    },
    "688": {
      "fn": "SafeMathMock.doMod",
      "offset": [
        1353,
        1462
      ],
      "op": "SWAP1",
      "path": "76"
    },
    "689": {
      "fn": "SafeMathMock.doMod",
      "offset": [
        1353,
        1462
      ],
      "op": "PUSH1",
      "path": "76",
      "value": "0x20"
    },
    "691": {
      "fn": "SafeMathMock.doMod",
      "offset": [
        1353,
        1462
      ],
      "op": "ADD",
      "path": "76"
    },
    "692": {
      "fn": "SafeMathMock.doMod",
      "offset": [
        1353,
        1462
      ],
      "op": "CALLDATALOAD",
      "path": "76"
    },
    "693": {
      "fn": "SafeMathMock.doMod",
      "offset": [
        1353,
        1462
      ],
      "op": "PUSH2",
      "path": "76",
      "value": "0x592"
    },
    "696": {
      "fn": "SafeMathMock.doMod",
      "jump": "i",
      "offset": [
        1353,
        1462
      ],
      "op": "JUMP",
      "path": "76"
    },
    "697": {
      "fn": "SafeMathMock.tryAdd",
      "offset": [
        126,
        256
      ],
      "op": "JUMPDEST",
      "path": "76"
    },
    "698": {
      "fn": "SafeMathMock.tryAdd",
      "offset": [
        126,
        256
      ],
      "op": "PUSH2",
      "path": "76",
      "value": "0x202"
    },
    "701": {
      "fn": "SafeMathMock.tryAdd",
      "offset": [
        126,
        256
      ],
      "op": "PUSH1",
      "path": "76",
      "value": "0x4"
    },
    "703": {
      "fn": "SafeMathMock.tryAdd",
      "offset": [
        126,
        256
      ],
      "op": "DUP1",
      "path": "76"
    },
    "704": {
      "fn": "SafeMathMock.tryAdd",
      "offset": [
        126,
        256
      ],
      "op": "CALLDATASIZE",
      "path": "76"
    },
    "705": {
      "fn": "SafeMathMock.tryAdd",
      "offset": [
        126,
        256
      ],
      "op": "SUB",
      "path": "76"
    },
    "706": {
      "fn": "SafeMathMock.tryAdd",
      "offset": [
        126,
        256
      ],
      "op": "PUSH1",
      "path": "76",
      "value": "0x40"
    },
    "708": {
      "fn": "SafeMathMock.tryAdd",
      "offset": [
        126,
        256
      ],
      "op": "DUP2",
      "path": "76"
    },
    "709": {
      "fn": "SafeMathMock.tryAdd",
      "offset": [
        126,
        256
      ],
      "op": "LT",
      "path": "76"
    },
    "710": {
      "fn": "SafeMathMock.tryAdd",
      "offset": [
        126,
        256
      ],
      "op": "ISZERO",
      "path": "76"
    },
    "711": {
      "fn": "SafeMathMock.tryAdd",
      "offset": [
        126,
        256
      ],
      "op": "PUSH2",
      "path": "76",
      "value": "0x2CF"
    },
    "714": {
      "fn": "SafeMathMock.tryAdd",
      "offset": [
        126,
        256
      ],
      "op": "JUMPI",
      "path": "76"
    },
    "715": {
      "fn": "SafeMathMock.tryAdd",
      "offset": [
        126,
        256
      ],
      "op": "PUSH1",
      "path": "76",
      "value": "0x0"
    },
    "717": {
      "fn": "SafeMathMock.tryAdd",
      "offset": [
        126,
        256
      ],
      "op": "DUP1",
      "path": "76"
    },
    "718": {
      "fn": "SafeMathMock.tryAdd",
      "offset": [
        126,
        256
      ],
      "op": "REVERT",
      "path": "76"
    },
    "719": {
      "fn": "SafeMathMock.tryAdd",
      "offset": [
        126,
        256
      ],
      "op": "JUMPDEST",
      "path": "76"
    },
    "720": {
      "op": "POP"
    },
    "721": {
      "fn": "SafeMathMock.tryAdd",
      "offset": [
        126,
        256
      ],
      "op": "DUP1",
      "path": "76"
    },
    "722": {
      "fn": "SafeMathMock.tryAdd",
      "offset": [
        126,
        256
      ],
      "op": "CALLDATALOAD",
      "path": "76"
    },
    "723": {
      "fn": "SafeMathMock.tryAdd",
      "offset": [
        126,
        256
      ],
      "op": "SWAP1",
      "path": "76"
    },
    "724": {
      "fn": "SafeMathMock.tryAdd",
      "offset": [
        126,
        256
      ],
      "op": "PUSH1",
      "path": "76",
      "value": "0x20"
    },
    "726": {
      "fn": "SafeMathMock.tryAdd",
      "offset": [
        126,
        256
      ],
      "op": "ADD",
      "path": "76"
    },
    "727": {
      "fn": "SafeMathMock.tryAdd",
      "offset": [
        126,
        256
      ],
      "op": "CALLDATALOAD",
      "path": "76"
    },
    "728": {
      "fn": "SafeMathMock.tryAdd",
      "offset": [
        126,
        256
      ],
      "op": "PUSH2",
      "path": "76",
      "value": "0x59E"
    },
    "731": {
      "fn": "SafeMathMock.tryAdd",
      "jump": "i",
      "offset": [
        126,
        256
      ],
      "op": "JUMP",
      "path": "76"
    },
    "732": {
      "fn": "SafeMathMock.subWithMessage",
      "offset": [
        1468,
        1628
      ],
      "op": "JUMPDEST",
      "path": "76"
    },
    "733": {
      "fn": "SafeMathMock.subWithMessage",
      "offset": [
        1468,
        1628
      ],
      "op": "PUSH2",
      "path": "76",
      "value": "0x1CD"
    },
    "736": {
      "fn": "SafeMathMock.subWithMessage",
      "offset": [
        1468,
        1628
      ],
      "op": "PUSH1",
      "path": "76",
      "value": "0x4"
    },
    "738": {
      "fn": "SafeMathMock.subWithMessage",
      "offset": [
        1468,
        1628
      ],
      "op": "DUP1",
      "path": "76"
    },
    "739": {
      "fn": "SafeMathMock.subWithMessage",
      "offset": [
        1468,
        1628
      ],
      "op": "CALLDATASIZE",
      "path": "76"
    },
    "740": {
      "fn": "SafeMathMock.subWithMessage",
      "offset": [
        1468,
        1628
      ],
      "op": "SUB",
      "path": "76"
    },
    "741": {
      "fn": "SafeMathMock.subWithMessage",
      "offset": [
        1468,
        1628
      ],
      "op": "PUSH1",
      "path": "76",
      "value": "0x60"
    },
    "743": {
      "fn": "SafeMathMock.subWithMessage",
      "offset": [
        1468,
        1628
      ],
      "op": "DUP2",
      "path": "76"
    },
    "744": {
      "fn": "SafeMathMock.subWithMessage",
      "offset": [
        1468,
        1628
      ],
      "op": "LT",
      "path": "76"
    },
    "745": {
      "fn": "SafeMathMock.subWithMessage",
      "offset": [
        1468,
        1628
      ],
      "op": "ISZERO",
      "path": "76"
    },
    "746": {
      "fn": "SafeMathMock.subWithMessage",
      "offset": [
        1468,
        1628
      ],
      "op": "PUSH2",
      "path": "76",
      "value": "0x2F2"
    },
    "749": {
      "fn": "SafeMathMock.subWithMessage",
      "offset": [
        1468,
        1628
      ],
      "op": "JUMPI",
      "path": "76"
    },
    "750": {
      "fn": "SafeMathMock.subWithMessage",
      "offset": [
        1468,
        1628
      ],
      "op": "PUSH1",
      "path": "76",
      "value": "0x0"
    },
    "752": {
      "fn": "SafeMathMock.subWithMessage",
      "offset": [
        1468,
        1628
      ],
      "op": "DUP1",
      "path": "76"
    },
    "753": {
      "fn": "SafeMathMock.subWithMessage",
      "offset": [
        1468,
        1628
      ],
      "op": "REVERT",
      "path": "76"
    },
    "754": {
      "fn": "SafeMathMock.subWithMessage",
      "offset": [
        1468,
        1628
      ],
      "op": "JUMPDEST",
      "path": "76"
    },
    "755": {
      "fn": "SafeMathMock.subWithMessage",
      "offset": [
        1468,
        1628
      ],
      "op": "DUP2",
      "path": "76"
    },
    "756": {
      "fn": "SafeMathMock.subWithMessage",
      "offset": [
        1468,
        1628
      ],
      "op": "CALLDATALOAD",
      "path": "76"
    },
    "757": {
      "fn": "SafeMathMock.subWithMessage",
      "offset": [
        1468,
        1628
      ],
      "op": "SWAP2",
      "path": "76"
    },
    "758": {
      "fn": "SafeMathMock.subWithMessage",
      "offset": [
        1468,
        1628
      ],
      "op": "PUSH1",
      "path": "76",
      "value": "0x20"
    },
    "760": {
      "fn": "SafeMathMock.subWithMessage",
      "offset": [
        1468,
        1628
      ],
      "op": "DUP2",
      "path": "76"
    },
    "761": {
      "fn": "SafeMathMock.subWithMessage",
      "offset": [
        1468,
        1628
      ],
      "op": "ADD",
      "path": "76"
    },
    "762": {
      "fn": "SafeMathMock.subWithMessage",
      "offset": [
        1468,
        1628
      ],
      "op": "CALLDATALOAD",
      "path": "76"
    },
    "763": {
      "fn": "SafeMathMock.subWithMessage",
      "offset": [
        1468,
        1628
      ],
      "op": "SWAP2",
      "path": "76"
    },
    "764": {
      "fn": "SafeMathMock.subWithMessage",
      "offset": [
        1468,
        1628
      ],
      "op": "DUP2",
      "path": "76"
    },
    "765": {
      "fn": "SafeMathMock.subWithMessage",
      "offset": [
        1468,
        1628
      ],
      "op": "ADD",
      "path": "76"
    },
    "766": {
      "fn": "SafeMathMock.subWithMessage",
      "offset": [
        1468,
        1628
      ],
      "op": "SWAP1",
      "path": "76"
    },
    "767": {
      "fn": "SafeMathMock.subWithMessage",
      "offset": [
        1468,
        1628
      ],
      "op": "PUSH1",
      "path": "76",
      "value": "0x60"
    },
    "769": {
      "fn": "SafeMathMock.subWithMessage",
      "offset": [
        1468,
        1628
      ],
      "op": "DUP2",
      "path": "76"
    },
    "770": {
      "fn": "SafeMathMock.subWithMessage",
      "offset": [
        1468,
        1628
      ],
      "op": "ADD",
      "path": "76"
    },
    "771": {
      "fn": "SafeMathMock.subWithMessage",
      "offset": [
        1468,
        1628
      ],
      "op": "PUSH1",
      "path": "76",
      "value": "0x40"
    },
    "773": {
      "fn": "SafeMathMock.subWithMessage",
      "offset": [
        1468,
        1628
      ],
      "op": "DUP3",
      "path": "76"
    },
    "774": {
      "fn": "SafeMathMock.subWithMessage",
      "offset": [
        1468,
        1628
      ],
      "op": "ADD",
      "path": "76"
    },
    "775": {
      "fn": "SafeMathMock.subWithMessage",
      "offset": [
        1468,
        1628
      ],
      "op": "CALLDATALOAD",
      "path": "76"
    },
    "776": {
      "fn": "SafeMathMock.subWithMessage",
      "offset": [
        1468,
        1628
      ],
      "op": "PUSH5",
      "path": "76",
      "value": "0x100000000"
    },
    "782": {
      "fn": "SafeMathMock.subWithMessage",
      "offset": [
        1468,
        1628
      ],
      "op": "DUP2",
      "path": "76"
    },
    "783": {
      "fn": "SafeMathMock.subWithMessage",
      "offset": [
        1468,
        1628
      ],
      "op": "GT",
      "path": "76"
    },
    "784": {
      "fn": "SafeMathMock.subWithMessage",
      "offset": [
        1468,
        1628
      ],
      "op": "ISZERO",
      "path": "76"
    },
    "785": {
      "fn": "SafeMathMock.subWithMessage",
      "offset": [
        1468,
        1628
      ],
      "op": "PUSH2",
      "path": "76",
      "value": "0x319"
    },
    "788": {
      "fn": "SafeMathMock.subWithMessage",
      "offset": [
        1468,
        1628
      ],
      "op": "JUMPI",
      "path": "76"
    },
    "789": {
      "fn": "SafeMathMock.subWithMessage",
      "offset": [
        1468,
        1628
      ],
      "op": "PUSH1",
      "path": "76",
      "value": "0x0"
    },
    "791": {
      "fn": "SafeMathMock.subWithMessage",
      "offset": [
        1468,
        1628
      ],
      "op": "DUP1",
      "path": "76"
    },
    "792": {
      "fn": "SafeMathMock.subWithMessage",
      "offset": [
        1468,
        1628
      ],
      "op": "REVERT",
      "path": "76"
    },
    "793": {
      "fn": "SafeMathMock.subWithMessage",
      "offset": [
        1468,
        1628
      ],
      "op": "JUMPDEST",
      "path": "76"
    },
    "794": {
      "fn": "SafeMathMock.subWithMessage",
      "offset": [
        1468,
        1628
      ],
      "op": "DUP3",
      "path": "76"
    },
    "795": {
      "fn": "SafeMathMock.subWithMessage",
      "offset": [
        1468,
        1628
      ],
      "op": "ADD",
      "path": "76"
    },
    "796": {
      "fn": "SafeMathMock.subWithMessage",
      "offset": [
        1468,
        1628
      ],
      "op": "DUP4",
      "path": "76"
    },
    "797": {
      "fn": "SafeMathMock.subWithMessage",
      "offset": [
        1468,
        1628
      ],
      "op": "PUSH1",
      "path": "76",
      "value": "0x20"
    },
    "799": {
      "fn": "SafeMathMock.subWithMessage",
      "offset": [
        1468,
        1628
      ],
      "op": "DUP3",
      "path": "76"
    },
    "800": {
      "fn": "SafeMathMock.subWithMessage",
      "offset": [
        1468,
        1628
      ],
      "op": "ADD",
      "path": "76"
    },
    "801": {
      "fn": "SafeMathMock.subWithMessage",
      "offset": [
        1468,
        1628
      ],
      "op": "GT",
      "path": "76"
    },
    "802": {
      "fn": "SafeMathMock.subWithMessage",
      "offset": [
        1468,
        1628
      ],
      "op": "ISZERO",
      "path": "76"
    },
    "803": {
      "fn": "SafeMathMock.subWithMessage",
      "offset": [
        1468,
        1628
      ],
      "op": "PUSH2",
      "path": "76",
      "value": "0x32B"
    },
    "806": {
      "fn": "SafeMathMock.subWithMessage",
      "offset": [
        1468,
        1628
      ],
      "op": "JUMPI",
      "path": "76"
    },
    "807": {
      "fn": "SafeMathMock.subWithMessage",
      "offset": [
        1468,
        1628
      ],
      "op": "PUSH1",
      "path": "76",
      "value": "0x0"
    },
    "809": {
      "fn": "SafeMathMock.subWithMessage",
      "offset": [
        1468,
        1628
      ],
      "op": "DUP1",
      "path": "76"
    },
    "810": {
      "fn": "SafeMathMock.subWithMessage",
      "offset": [
        1468,
        1628
      ],
      "op": "REVERT",
      "path": "76"
    },
    "811": {
      "fn": "SafeMathMock.subWithMessage",
      "offset": [
        1468,
        1628
      ],
      "op": "JUMPDEST",
      "path": "76"
    },
    "812": {
      "fn": "SafeMathMock.subWithMessage",
      "offset": [
        1468,
        1628
      ],
      "op": "DUP1",
      "path": "76"
    },
    "813": {
      "fn": "SafeMathMock.subWithMessage",
      "offset": [
        1468,
        1628
      ],
      "op": "CALLDATALOAD",
      "path": "76"
    },
    "814": {
      "fn": "SafeMathMock.subWithMessage",
      "offset": [
        1468,
        1628
      ],
      "op": "SWAP1",
      "path": "76"
    },
    "815": {
      "fn": "SafeMathMock.subWithMessage",
      "offset": [
        1468,
        1628
      ],
      "op": "PUSH1",
      "path": "76",
      "value": "0x20"
    },
    "817": {
      "fn": "SafeMathMock.subWithMessage",
      "offset": [
        1468,
        1628
      ],
      "op": "ADD",
      "path": "76"
    },
    "818": {
      "fn": "SafeMathMock.subWithMessage",
      "offset": [
        1468,
        1628
      ],
      "op": "SWAP2",
      "path": "76"
    },
    "819": {
      "fn": "SafeMathMock.subWithMessage",
      "offset": [
        1468,
        1628
      ],
      "op": "DUP5",
      "path": "76"
    },
    "820": {
      "fn": "SafeMathMock.subWithMessage",
      "offset": [
        1468,
        1628
      ],
      "op": "PUSH1",
      "path": "76",
      "value": "0x1"
    },
    "822": {
      "fn": "SafeMathMock.subWithMessage",
      "offset": [
        1468,
        1628
      ],
      "op": "DUP4",
      "path": "76"
    },
    "823": {
      "fn": "SafeMathMock.subWithMessage",
      "offset": [
        1468,
        1628
      ],
      "op": "MUL",
      "path": "76"
    },
    "824": {
      "fn": "SafeMathMock.subWithMessage",
      "offset": [
        1468,
        1628
      ],
      "op": "DUP5",
      "path": "76"
    },
    "825": {
      "fn": "SafeMathMock.subWithMessage",
      "offset": [
        1468,
        1628
      ],
      "op": "ADD",
      "path": "76"
    },
    "826": {
      "fn": "SafeMathMock.subWithMessage",
      "offset": [
        1468,
        1628
      ],
      "op": "GT",
      "path": "76"
    },
    "827": {
      "fn": "SafeMathMock.subWithMessage",
      "offset": [
        1468,
        1628
      ],
      "op": "PUSH5",
      "path": "76",
      "value": "0x100000000"
    },
    "833": {
      "fn": "SafeMathMock.subWithMessage",
      "offset": [
        1468,
        1628
      ],
      "op": "DUP4",
      "path": "76"
    },
    "834": {
      "fn": "SafeMathMock.subWithMessage",
      "offset": [
        1468,
        1628
      ],
      "op": "GT",
      "path": "76"
    },
    "835": {
      "fn": "SafeMathMock.subWithMessage",
      "offset": [
        1468,
        1628
      ],
      "op": "OR",
      "path": "76"
    },
    "836": {
      "fn": "SafeMathMock.subWithMessage",
      "offset": [
        1468,
        1628
      ],
      "op": "ISZERO",
      "path": "76"
    },
    "837": {
      "fn": "SafeMathMock.subWithMessage",
      "offset": [
        1468,
        1628
      ],
      "op": "PUSH2",
      "path": "76",
      "value": "0x34D"
    },
    "840": {
      "fn": "SafeMathMock.subWithMessage",
      "offset": [
        1468,
        1628
      ],
      "op": "JUMPI",
      "path": "76"
    },
    "841": {
      "fn": "SafeMathMock.subWithMessage",
      "offset": [
        1468,
        1628
      ],
      "op": "PUSH1",
      "path": "76",
      "value": "0x0"
    },
    "843": {
      "fn": "SafeMathMock.subWithMessage",
      "offset": [
        1468,
        1628
      ],
      "op": "DUP1",
      "path": "76"
    },
    "844": {
      "fn": "SafeMathMock.subWithMessage",
      "offset": [
        1468,
        1628
      ],
      "op": "REVERT",
      "path": "76"
    },
    "845": {
      "fn": "SafeMathMock.subWithMessage",
      "offset": [
        1468,
        1628
      ],
      "op": "JUMPDEST",
      "path": "76"
    },
    "846": {
      "fn": "SafeMathMock.subWithMessage",
      "offset": [
        1468,
        1628
      ],
      "op": "SWAP2",
      "path": "76"
    },
    "847": {
      "fn": "SafeMathMock.subWithMessage",
      "offset": [
        1468,
        1628
      ],
      "op": "SWAP1",
      "path": "76"
    },
    "848": {
      "fn": "SafeMathMock.subWithMessage",
      "offset": [
        1468,
        1628
      ],
      "op": "DUP1",
      "path": "76"
    },
    "849": {
      "fn": "SafeMathMock.subWithMessage",
      "offset": [
        1468,
        1628
      ],
      "op": "DUP1",
      "path": "76"
    },
    "850": {
      "fn": "SafeMathMock.subWithMessage",
      "offset": [
        1468,
        1628
      ],
      "op": "PUSH1",
      "path": "76",
      "value": "0x1F"
    },
    "852": {
      "fn": "SafeMathMock.subWithMessage",
      "offset": [
        1468,
        1628
      ],
      "op": "ADD",
      "path": "76"
    },
    "853": {
      "fn": "SafeMathMock.subWithMessage",
      "offset": [
        1468,
        1628
      ],
      "op": "PUSH1",
      "path": "76",
      "value": "0x20"
    },
    "855": {
      "fn": "SafeMathMock.subWithMessage",
      "offset": [
        1468,
        1628
      ],
      "op": "DUP1",
      "path": "76"
    },
    "856": {
      "fn": "SafeMathMock.subWithMessage",
      "offset": [
        1468,
        1628
      ],
      "op": "SWAP2",
      "path": "76"
    },
    "857": {
      "fn": "SafeMathMock.subWithMessage",
      "offset": [
        1468,
        1628
      ],
      "op": "DIV",
      "path": "76"
    },
    "858": {
      "fn": "SafeMathMock.subWithMessage",
      "offset": [
        1468,
        1628
      ],
      "op": "MUL",
      "path": "76"
    },
    "859": {
      "fn": "SafeMathMock.subWithMessage",
      "offset": [
        1468,
        1628
      ],
      "op": "PUSH1",
      "path": "76",
      "value": "0x20"
    },
    "861": {
      "fn": "SafeMathMock.subWithMessage",
      "offset": [
        1468,
        1628
      ],
      "op": "ADD",
      "path": "76"
    },
    "862": {
      "fn": "SafeMathMock.subWithMessage",
      "offset": [
        1468,
        1628
      ],
      "op": "PUSH1",
      "path": "76",
      "value": "0x40"
    },
    "864": {
      "fn": "SafeMathMock.subWithMessage",
      "offset": [
        1468,
        1628
      ],
      "op": "MLOAD",
      "path": "76"
    },
    "865": {
      "fn": "SafeMathMock.subWithMessage",
      "offset": [
        1468,
        1628
      ],
      "op": "SWAP1",
      "path": "76"
    },
    "866": {
      "fn": "SafeMathMock.subWithMessage",
      "offset": [
        1468,
        1628
      ],
      "op": "DUP2",
      "path": "76"
    },
    "867": {
      "fn": "SafeMathMock.subWithMessage",
      "offset": [
        1468,
        1628
      ],
      "op": "ADD",
      "path": "76"
    },
    "868": {
      "fn": "SafeMathMock.subWithMessage",
      "offset": [
        1468,
        1628
      ],
      "op": "PUSH1",
      "path": "76",
      "value": "0x40"
    },
    "870": {
      "fn": "SafeMathMock.subWithMessage",
      "offset": [
        1468,
        1628
      ],
      "op": "MSTORE",
      "path": "76"
    },
    "871": {
      "fn": "SafeMathMock.subWithMessage",
      "offset": [
        1468,
        1628
      ],
      "op": "DUP1",
      "path": "76"
    },
    "872": {
      "fn": "SafeMathMock.subWithMessage",
      "offset": [
        1468,
        1628
      ],
      "op": "SWAP4",
      "path": "76"
    },
    "873": {
      "fn": "SafeMathMock.subWithMessage",
      "offset": [
        1468,
        1628
      ],
      "op": "SWAP3",
      "path": "76"
    },
    "874": {
      "fn": "SafeMathMock.subWithMessage",
      "offset": [
        1468,
        1628
      ],
      "op": "SWAP2",
      "path": "76"
    },
    "875": {
      "fn": "SafeMathMock.subWithMessage",
      "offset": [
        1468,
        1628
      ],
      "op": "SWAP1",
      "path": "76"
    },
    "876": {
      "fn": "SafeMathMock.subWithMessage",
      "offset": [
        1468,
        1628
      ],
      "op": "DUP2",
      "path": "76"
    },
    "877": {
      "fn": "SafeMathMock.subWithMessage",
      "offset": [
        1468,
        1628
      ],
      "op": "DUP2",
      "path": "76"
    },
    "878": {
      "fn": "SafeMathMock.subWithMessage",
      "offset": [
        1468,
        1628
      ],
      "op": "MSTORE",
      "path": "76"
    },
    "879": {
      "fn": "SafeMathMock.subWithMessage",
      "offset": [
        1468,
        1628
      ],
      "op": "PUSH1",
      "path": "76",
      "value": "0x20"
    },
    "881": {
      "fn": "SafeMathMock.subWithMessage",
      "offset": [
        1468,
        1628
      ],
      "op": "ADD",
      "path": "76"
    },
    "882": {
      "fn": "SafeMathMock.subWithMessage",
      "offset": [
        1468,
        1628
      ],
      "op": "DUP4",
      "path": "76"
    },
    "883": {
      "fn": "SafeMathMock.subWithMessage",
      "offset": [
        1468,
        1628
      ],
      "op": "DUP4",
      "path": "76"
    },
    "884": {
      "fn": "SafeMathMock.subWithMessage",
      "offset": [
        1468,
        1628
      ],
      "op": "DUP1",
      "path": "76"
    },
    "885": {
      "fn": "SafeMathMock.subWithMessage",
      "offset": [
        1468,
        1628
      ],
      "op": "DUP3",
      "path": "76"
    },
    "886": {
      "fn": "SafeMathMock.subWithMessage",
      "offset": [
        1468,
        1628
      ],
      "op": "DUP5",
      "path": "76"
    },
    "887": {
      "fn": "SafeMathMock.subWithMessage",
      "offset": [
        1468,
        1628
      ],
      "op": "CALLDATACOPY",
      "path": "76"
    },
    "888": {
      "fn": "SafeMathMock.subWithMessage",
      "offset": [
        1468,
        1628
      ],
      "op": "PUSH1",
      "path": "76",
      "value": "0x0"
    },
    "890": {
      "fn": "SafeMathMock.subWithMessage",
      "offset": [
        1468,
        1628
      ],
      "op": "SWAP3",
      "path": "76"
    },
    "891": {
      "fn": "SafeMathMock.subWithMessage",
      "offset": [
        1468,
        1628
      ],
      "op": "ADD",
      "path": "76"
    },
    "892": {
      "fn": "SafeMathMock.subWithMessage",
      "offset": [
        1468,
        1628
      ],
      "op": "SWAP2",
      "path": "76"
    },
    "893": {
      "fn": "SafeMathMock.subWithMessage",
      "offset": [
        1468,
        1628
      ],
      "op": "SWAP1",
      "path": "76"
    },
    "894": {
      "fn": "SafeMathMock.subWithMessage",
      "offset": [
        1468,
        1628
      ],
      "op": "SWAP2",
      "path": "76"
    },
    "895": {
      "fn": "SafeMathMock.subWithMessage",
      "offset": [
        1468,
        1628
      ],
      "op": "MSTORE",
      "path": "76"
    },
    "896": {
      "op": "POP"
    },
    "897": {
      "fn": "SafeMathMock.subWithMessage",
      "offset": [
        1468,
        1628
      ],
      "op": "SWAP3",
      "path": "76"
    },
    "898": {
      "fn": "SafeMathMock.subWithMessage",
      "offset": [
        1468,
        1628
      ],
      "op": "SWAP6",
      "path": "76"
    },
    "899": {
      "op": "POP"
    },
    "900": {
      "fn": "SafeMathMock.subWithMessage",
      "offset": [
        1468,
        1628
      ],
      "op": "PUSH2",
      "path": "76",
      "value": "0x5AB"
    },
    "903": {
      "fn": "SafeMathMock.subWithMessage",
      "offset": [
        1468,
        1628
      ],
      "op": "SWAP5",
      "path": "76"
    },
    "904": {
      "op": "POP"
    },
    "905": {
      "op": "POP"
    },
    "906": {
      "op": "POP"
    },
    "907": {
      "op": "POP"
    },
    "908": {
      "op": "POP"
    },
    "909": {
      "fn": "SafeMathMock.subWithMessage",
      "jump": "i",
      "offset": [
        1468,
        1628
      ],
      "op": "JUMP",
      "path": "76"
    },
    "910": {
      "fn": "SafeMathMock.modWithMessage",
      "offset": [
        1800,
        1960
      ],
      "op": "JUMPDEST",
      "path": "76"
    },
    "911": {
      "fn": "SafeMathMock.modWithMessage",
      "offset": [
        1800,
        1960
      ],
      "op": "PUSH2",
      "path": "76",
      "value": "0x1CD"
    },
    "914": {
      "fn": "SafeMathMock.modWithMessage",
      "offset": [
        1800,
        1960
      ],
      "op": "PUSH1",
      "path": "76",
      "value": "0x4"
    },
    "916": {
      "fn": "SafeMathMock.modWithMessage",
      "offset": [
        1800,
        1960
      ],
      "op": "DUP1",
      "path": "76"
    },
    "917": {
      "fn": "SafeMathMock.modWithMessage",
      "offset": [
        1800,
        1960
      ],
      "op": "CALLDATASIZE",
      "path": "76"
    },
    "918": {
      "fn": "SafeMathMock.modWithMessage",
      "offset": [
        1800,
        1960
      ],
      "op": "SUB",
      "path": "76"
    },
    "919": {
      "fn": "SafeMathMock.modWithMessage",
      "offset": [
        1800,
        1960
      ],
      "op": "PUSH1",
      "path": "76",
      "value": "0x60"
    },
    "921": {
      "fn": "SafeMathMock.modWithMessage",
      "offset": [
        1800,
        1960
      ],
      "op": "DUP2",
      "path": "76"
    },
    "922": {
      "fn": "SafeMathMock.modWithMessage",
      "offset": [
        1800,
        1960
      ],
      "op": "LT",
      "path": "76"
    },
    "923": {
      "fn": "SafeMathMock.modWithMessage",
      "offset": [
        1800,
        1960
      ],
      "op": "ISZERO",
      "path": "76"
    },
    "924": {
      "fn": "SafeMathMock.modWithMessage",
      "offset": [
        1800,
        1960
      ],
      "op": "PUSH2",
      "path": "76",
      "value": "0x3A4"
    },
    "927": {
      "fn": "SafeMathMock.modWithMessage",
      "offset": [
        1800,
        1960
      ],
      "op": "JUMPI",
      "path": "76"
    },
    "928": {
      "fn": "SafeMathMock.modWithMessage",
      "offset": [
        1800,
        1960
      ],
      "op": "PUSH1",
      "path": "76",
      "value": "0x0"
    },
    "930": {
      "fn": "SafeMathMock.modWithMessage",
      "offset": [
        1800,
        1960
      ],
      "op": "DUP1",
      "path": "76"
    },
    "931": {
      "fn": "SafeMathMock.modWithMessage",
      "offset": [
        1800,
        1960
      ],
      "op": "REVERT",
      "path": "76"
    },
    "932": {
      "fn": "SafeMathMock.modWithMessage",
      "offset": [
        1800,
        1960
      ],
      "op": "JUMPDEST",
      "path": "76"
    },
    "933": {
      "fn": "SafeMathMock.modWithMessage",
      "offset": [
        1800,
        1960
      ],
      "op": "DUP2",
      "path": "76"
    },
    "934": {
      "fn": "SafeMathMock.modWithMessage",
      "offset": [
        1800,
        1960
      ],
      "op": "CALLDATALOAD",
      "path": "76"
    },
    "935": {
      "fn": "SafeMathMock.modWithMessage",
      "offset": [
        1800,
        1960
      ],
      "op": "SWAP2",
      "path": "76"
    },
    "936": {
      "fn": "SafeMathMock.modWithMessage",
      "offset": [
        1800,
        1960
      ],
      "op": "PUSH1",
      "path": "76",
      "value": "0x20"
    },
    "938": {
      "fn": "SafeMathMock.modWithMessage",
      "offset": [
        1800,
        1960
      ],
      "op": "DUP2",
      "path": "76"
    },
    "939": {
      "fn": "SafeMathMock.modWithMessage",
      "offset": [
        1800,
        1960
      ],
      "op": "ADD",
      "path": "76"
    },
    "940": {
      "fn": "SafeMathMock.modWithMessage",
      "offset": [
        1800,
        1960
      ],
      "op": "CALLDATALOAD",
      "path": "76"
    },
    "941": {
      "fn": "SafeMathMock.modWithMessage",
      "offset": [
        1800,
        1960
      ],
      "op": "SWAP2",
      "path": "76"
    },
    "942": {
      "fn": "SafeMathMock.modWithMessage",
      "offset": [
        1800,
        1960
      ],
      "op": "DUP2",
      "path": "76"
    },
    "943": {
      "fn": "SafeMathMock.modWithMessage",
      "offset": [
        1800,
        1960
      ],
      "op": "ADD",
      "path": "76"
    },
    "944": {
      "fn": "SafeMathMock.modWithMessage",
      "offset": [
        1800,
        1960
      ],
      "op": "SWAP1",
      "path": "76"
    },
    "945": {
      "fn": "SafeMathMock.modWithMessage",
      "offset": [
        1800,
        1960
      ],
      "op": "PUSH1",
      "path": "76",
      "value": "0x60"
    },
    "947": {
      "fn": "SafeMathMock.modWithMessage",
      "offset": [
        1800,
        1960
      ],
      "op": "DUP2",
      "path": "76"
    },
    "948": {
      "fn": "SafeMathMock.modWithMessage",
      "offset": [
        1800,
        1960
      ],
      "op": "ADD",
      "path": "76"
    },
    "949": {
      "fn": "SafeMathMock.modWithMessage",
      "offset": [
        1800,
        1960
      ],
      "op": "PUSH1",
      "path": "76",
      "value": "0x40"
    },
    "951": {
      "fn": "SafeMathMock.modWithMessage",
      "offset": [
        1800,
        1960
      ],
      "op": "DUP3",
      "path": "76"
    },
    "952": {
      "fn": "SafeMathMock.modWithMessage",
      "offset": [
        1800,
        1960
      ],
      "op": "ADD",
      "path": "76"
    },
    "953": {
      "fn": "SafeMathMock.modWithMessage",
      "offset": [
        1800,
        1960
      ],
      "op": "CALLDATALOAD",
      "path": "76"
    },
    "954": {
      "fn": "SafeMathMock.modWithMessage",
      "offset": [
        1800,
        1960
      ],
      "op": "PUSH5",
      "path": "76",
      "value": "0x100000000"
    },
    "960": {
      "fn": "SafeMathMock.modWithMessage",
      "offset": [
        1800,
        1960
      ],
      "op": "DUP2",
      "path": "76"
    },
    "961": {
      "fn": "SafeMathMock.modWithMessage",
      "offset": [
        1800,
        1960
      ],
      "op": "GT",
      "path": "76"
    },
    "962": {
      "fn": "SafeMathMock.modWithMessage",
      "offset": [
        1800,
        1960
      ],
      "op": "ISZERO",
      "path": "76"
    },
    "963": {
      "fn": "SafeMathMock.modWithMessage",
      "offset": [
        1800,
        1960
      ],
      "op": "PUSH2",
      "path": "76",
      "value": "0x3CB"
    },
    "966": {
      "fn": "SafeMathMock.modWithMessage",
      "offset": [
        1800,
        1960
      ],
      "op": "JUMPI",
      "path": "76"
    },
    "967": {
      "fn": "SafeMathMock.modWithMessage",
      "offset": [
        1800,
        1960
      ],
      "op": "PUSH1",
      "path": "76",
      "value": "0x0"
    },
    "969": {
      "fn": "SafeMathMock.modWithMessage",
      "offset": [
        1800,
        1960
      ],
      "op": "DUP1",
      "path": "76"
    },
    "970": {
      "fn": "SafeMathMock.modWithMessage",
      "offset": [
        1800,
        1960
      ],
      "op": "REVERT",
      "path": "76"
    },
    "971": {
      "fn": "SafeMathMock.modWithMessage",
      "offset": [
        1800,
        1960
      ],
      "op": "JUMPDEST",
      "path": "76"
    },
    "972": {
      "fn": "SafeMathMock.modWithMessage",
      "offset": [
        1800,
        1960
      ],
      "op": "DUP3",
      "path": "76"
    },
    "973": {
      "fn": "SafeMathMock.modWithMessage",
      "offset": [
        1800,
        1960
      ],
      "op": "ADD",
      "path": "76"
    },
    "974": {
      "fn": "SafeMathMock.modWithMessage",
      "offset": [
        1800,
        1960
      ],
      "op": "DUP4",
      "path": "76"
    },
    "975": {
      "fn": "SafeMathMock.modWithMessage",
      "offset": [
        1800,
        1960
      ],
      "op": "PUSH1",
      "path": "76",
      "value": "0x20"
    },
    "977": {
      "fn": "SafeMathMock.modWithMessage",
      "offset": [
        1800,
        1960
      ],
      "op": "DUP3",
      "path": "76"
    },
    "978": {
      "fn": "SafeMathMock.modWithMessage",
      "offset": [
        1800,
        1960
      ],
      "op": "ADD",
      "path": "76"
    },
    "979": {
      "fn": "SafeMathMock.modWithMessage",
      "offset": [
        1800,
        1960
      ],
      "op": "GT",
      "path": "76"
    },
    "980": {
      "fn": "SafeMathMock.modWithMessage",
      "offset": [
        1800,
        1960
      ],
      "op": "ISZERO",
      "path": "76"
    },
    "981": {
      "fn": "SafeMathMock.modWithMessage",
      "offset": [
        1800,
        1960
      ],
      "op": "PUSH2",
      "path": "76",
      "value": "0x3DD"
    },
    "984": {
      "fn": "SafeMathMock.modWithMessage",
      "offset": [
        1800,
        1960
      ],
      "op": "JUMPI",
      "path": "76"
    },
    "985": {
      "fn": "SafeMathMock.modWithMessage",
      "offset": [
        1800,
        1960
      ],
      "op": "PUSH1",
      "path": "76",
      "value": "0x0"
    },
    "987": {
      "fn": "SafeMathMock.modWithMessage",
      "offset": [
        1800,
        1960
      ],
      "op": "DUP1",
      "path": "76"
    },
    "988": {
      "fn": "SafeMathMock.modWithMessage",
      "offset": [
        1800,
        1960
      ],
      "op": "REVERT",
      "path": "76"
    },
    "989": {
      "fn": "SafeMathMock.modWithMessage",
      "offset": [
        1800,
        1960
      ],
      "op": "JUMPDEST",
      "path": "76"
    },
    "990": {
      "fn": "SafeMathMock.modWithMessage",
      "offset": [
        1800,
        1960
      ],
      "op": "DUP1",
      "path": "76"
    },
    "991": {
      "fn": "SafeMathMock.modWithMessage",
      "offset": [
        1800,
        1960
      ],
      "op": "CALLDATALOAD",
      "path": "76"
    },
    "992": {
      "fn": "SafeMathMock.modWithMessage",
      "offset": [
        1800,
        1960
      ],
      "op": "SWAP1",
      "path": "76"
    },
    "993": {
      "fn": "SafeMathMock.modWithMessage",
      "offset": [
        1800,
        1960
      ],
      "op": "PUSH1",
      "path": "76",
      "value": "0x20"
    },
    "995": {
      "fn": "SafeMathMock.modWithMessage",
      "offset": [
        1800,
        1960
      ],
      "op": "ADD",
      "path": "76"
    },
    "996": {
      "fn": "SafeMathMock.modWithMessage",
      "offset": [
        1800,
        1960
      ],
      "op": "SWAP2",
      "path": "76"
    },
    "997": {
      "fn": "SafeMathMock.modWithMessage",
      "offset": [
        1800,
        1960
      ],
      "op": "DUP5",
      "path": "76"
    },
    "998": {
      "fn": "SafeMathMock.modWithMessage",
      "offset": [
        1800,
        1960
      ],
      "op": "PUSH1",
      "path": "76",
      "value": "0x1"
    },
    "1000": {
      "fn": "SafeMathMock.modWithMessage",
      "offset": [
        1800,
        1960
      ],
      "op": "DUP4",
      "path": "76"
    },
    "1001": {
      "fn": "SafeMathMock.modWithMessage",
      "offset": [
        1800,
        1960
      ],
      "op": "MUL",
      "path": "76"
    },
    "1002": {
      "fn": "SafeMathMock.modWithMessage",
      "offset": [
        1800,
        1960
      ],
      "op": "DUP5",
      "path": "76"
    },
    "1003": {
      "fn": "SafeMathMock.modWithMessage",
      "offset": [
        1800,
        1960
      ],
      "op": "ADD",
      "path": "76"
    },
    "1004": {
      "fn": "SafeMathMock.modWithMessage",
      "offset": [
        1800,
        1960
      ],
      "op": "GT",
      "path": "76"
    },
    "1005": {
      "fn": "SafeMathMock.modWithMessage",
      "offset": [
        1800,
        1960
      ],
      "op": "PUSH5",
      "path": "76",
      "value": "0x100000000"
    },
    "1011": {
      "fn": "SafeMathMock.modWithMessage",
      "offset": [
        1800,
        1960
      ],
      "op": "DUP4",
      "path": "76"
    },
    "1012": {
      "fn": "SafeMathMock.modWithMessage",
      "offset": [
        1800,
        1960
      ],
      "op": "GT",
      "path": "76"
    },
    "1013": {
      "fn": "SafeMathMock.modWithMessage",
      "offset": [
        1800,
        1960
      ],
      "op": "OR",
      "path": "76"
    },
    "1014": {
      "fn": "SafeMathMock.modWithMessage",
      "offset": [
        1800,
        1960
      ],
      "op": "ISZERO",
      "path": "76"
    },
    "1015": {
      "fn": "SafeMathMock.modWithMessage",
      "offset": [
        1800,
        1960
      ],
      "op": "PUSH2",
      "path": "76",
      "value": "0x3FF"
    },
    "1018": {
      "fn": "SafeMathMock.modWithMessage",
      "offset": [
        1800,
        1960
      ],
      "op": "JUMPI",
      "path": "76"
    },
    "1019": {
      "fn": "SafeMathMock.modWithMessage",
      "offset": [
        1800,
        1960
      ],
      "op": "PUSH1",
      "path": "76",
      "value": "0x0"
    },
    "1021": {
      "fn": "SafeMathMock.modWithMessage",
      "offset": [
        1800,
        1960
      ],
      "op": "DUP1",
      "path": "76"
    },
    "1022": {
      "fn": "SafeMathMock.modWithMessage",
      "offset": [
        1800,
        1960
      ],
      "op": "REVERT",
      "path": "76"
    },
    "1023": {
      "fn": "SafeMathMock.modWithMessage",
      "offset": [
        1800,
        1960
      ],
      "op": "JUMPDEST",
      "path": "76"
    },
    "1024": {
      "fn": "SafeMathMock.modWithMessage",
      "offset": [
        1800,
        1960
      ],
      "op": "SWAP2",
      "path": "76"
    },
    "1025": {
      "fn": "SafeMathMock.modWithMessage",
      "offset": [
        1800,
        1960
      ],
      "op": "SWAP1",
      "path": "76"
    },
    "1026": {
      "fn": "SafeMathMock.modWithMessage",
      "offset": [
        1800,
        1960
      ],
      "op": "DUP1",
      "path": "76"
    },
    "1027": {
      "fn": "SafeMathMock.modWithMessage",
      "offset": [
        1800,
        1960
      ],
      "op": "DUP1",
      "path": "76"
    },
    "1028": {
      "fn": "SafeMathMock.modWithMessage",
      "offset": [
        1800,
        1960
      ],
      "op": "PUSH1",
      "path": "76",
      "value": "0x1F"
    },
    "1030": {
      "fn": "SafeMathMock.modWithMessage",
      "offset": [
        1800,
        1960
      ],
      "op": "ADD",
      "path": "76"
    },
    "1031": {
      "fn": "SafeMathMock.modWithMessage",
      "offset": [
        1800,
        1960
      ],
      "op": "PUSH1",
      "path": "76",
      "value": "0x20"
    },
    "1033": {
      "fn": "SafeMathMock.modWithMessage",
      "offset": [
        1800,
        1960
      ],
      "op": "DUP1",
      "path": "76"
    },
    "1034": {
      "fn": "SafeMathMock.modWithMessage",
      "offset": [
        1800,
        1960
      ],
      "op": "SWAP2",
      "path": "76"
    },
    "1035": {
      "fn": "SafeMathMock.modWithMessage",
      "offset": [
        1800,
        1960
      ],
      "op": "DIV",
      "path": "76"
    },
    "1036": {
      "fn": "SafeMathMock.modWithMessage",
      "offset": [
        1800,
        1960
      ],
      "op": "MUL",
      "path": "76"
    },
    "1037": {
      "fn": "SafeMathMock.modWithMessage",
      "offset": [
        1800,
        1960
      ],
      "op": "PUSH1",
      "path": "76",
      "value": "0x20"
    },
    "1039": {
      "fn": "SafeMathMock.modWithMessage",
      "offset": [
        1800,
        1960
      ],
      "op": "ADD",
      "path": "76"
    },
    "1040": {
      "fn": "SafeMathMock.modWithMessage",
      "offset": [
        1800,
        1960
      ],
      "op": "PUSH1",
      "path": "76",
      "value": "0x40"
    },
    "1042": {
      "fn": "SafeMathMock.modWithMessage",
      "offset": [
        1800,
        1960
      ],
      "op": "MLOAD",
      "path": "76"
    },
    "1043": {
      "fn": "SafeMathMock.modWithMessage",
      "offset": [
        1800,
        1960
      ],
      "op": "SWAP1",
      "path": "76"
    },
    "1044": {
      "fn": "SafeMathMock.modWithMessage",
      "offset": [
        1800,
        1960
      ],
      "op": "DUP2",
      "path": "76"
    },
    "1045": {
      "fn": "SafeMathMock.modWithMessage",
      "offset": [
        1800,
        1960
      ],
      "op": "ADD",
      "path": "76"
    },
    "1046": {
      "fn": "SafeMathMock.modWithMessage",
      "offset": [
        1800,
        1960
      ],
      "op": "PUSH1",
      "path": "76",
      "value": "0x40"
    },
    "1048": {
      "fn": "SafeMathMock.modWithMessage",
      "offset": [
        1800,
        1960
      ],
      "op": "MSTORE",
      "path": "76"
    },
    "1049": {
      "fn": "SafeMathMock.modWithMessage",
      "offset": [
        1800,
        1960
      ],
      "op": "DUP1",
      "path": "76"
    },
    "1050": {
      "fn": "SafeMathMock.modWithMessage",
      "offset": [
        1800,
        1960
      ],
      "op": "SWAP4",
      "path": "76"
    },
    "1051": {
      "fn": "SafeMathMock.modWithMessage",
      "offset": [
        1800,
        1960
      ],
      "op": "SWAP3",
      "path": "76"
    },
    "1052": {
      "fn": "SafeMathMock.modWithMessage",
      "offset": [
        1800,
        1960
      ],
      "op": "SWAP2",
      "path": "76"
    },
    "1053": {
      "fn": "SafeMathMock.modWithMessage",
      "offset": [
        1800,
        1960
      ],
      "op": "SWAP1",
      "path": "76"
    },
    "1054": {
      "fn": "SafeMathMock.modWithMessage",
      "offset": [
        1800,
        1960
      ],
      "op": "DUP2",
      "path": "76"
    },
    "1055": {
      "fn": "SafeMathMock.modWithMessage",
      "offset": [
        1800,
        1960
      ],
      "op": "DUP2",
      "path": "76"
    },
    "1056": {
      "fn": "SafeMathMock.modWithMessage",
      "offset": [
        1800,
        1960
      ],
      "op": "MSTORE",
      "path": "76"
    },
    "1057": {
      "fn": "SafeMathMock.modWithMessage",
      "offset": [
        1800,
        1960
      ],
      "op": "PUSH1",
      "path": "76",
      "value": "0x20"
    },
    "1059": {
      "fn": "SafeMathMock.modWithMessage",
      "offset": [
        1800,
        1960
      ],
      "op": "ADD",
      "path": "76"
    },
    "1060": {
      "fn": "SafeMathMock.modWithMessage",
      "offset": [
        1800,
        1960
      ],
      "op": "DUP4",
      "path": "76"
    },
    "1061": {
      "fn": "SafeMathMock.modWithMessage",
      "offset": [
        1800,
        1960
      ],
      "op": "DUP4",
      "path": "76"
    },
    "1062": {
      "fn": "SafeMathMock.modWithMessage",
      "offset": [
        1800,
        1960
      ],
      "op": "DUP1",
      "path": "76"
    },
    "1063": {
      "fn": "SafeMathMock.modWithMessage",
      "offset": [
        1800,
        1960
      ],
      "op": "DUP3",
      "path": "76"
    },
    "1064": {
      "fn": "SafeMathMock.modWithMessage",
      "offset": [
        1800,
        1960
      ],
      "op": "DUP5",
      "path": "76"
    },
    "1065": {
      "fn": "SafeMathMock.modWithMessage",
      "offset": [
        1800,
        1960
      ],
      "op": "CALLDATACOPY",
      "path": "76"
    },
    "1066": {
      "fn": "SafeMathMock.modWithMessage",
      "offset": [
        1800,
        1960
      ],
      "op": "PUSH1",
      "path": "76",
      "value": "0x0"
    },
    "1068": {
      "fn": "SafeMathMock.modWithMessage",
      "offset": [
        1800,
        1960
      ],
      "op": "SWAP3",
      "path": "76"
    },
    "1069": {
      "fn": "SafeMathMock.modWithMessage",
      "offset": [
        1800,
        1960
      ],
      "op": "ADD",
      "path": "76"
    },
    "1070": {
      "fn": "SafeMathMock.modWithMessage",
      "offset": [
        1800,
        1960
      ],
      "op": "SWAP2",
      "path": "76"
    },
    "1071": {
      "fn": "SafeMathMock.modWithMessage",
      "offset": [
        1800,
        1960
      ],
      "op": "SWAP1",
      "path": "76"
    },
    "1072": {
      "fn": "SafeMathMock.modWithMessage",
      "offset": [
        1800,
        1960
      ],
      "op": "SWAP2",
      "path": "76"
    },
    "1073": {
      "fn": "SafeMathMock.modWithMessage",
      "offset": [
        1800,
        1960
      ],
      "op": "MSTORE",
      "path": "76"
    },
    "1074": {
      "op": "POP"
    },
    "1075": {
      "fn": "SafeMathMock.modWithMessage",
      "offset": [
        1800,
        1960
      ],
      "op": "SWAP3",
      "path": "76"
    },
    "1076": {
      "fn": "SafeMathMock.modWithMessage",
      "offset": [
        1800,
        1960
      ],
      "op": "SWAP6",
      "path": "76"
    },
    "1077": {
      "op": "POP"
    },
    "1078": {
      "fn": "SafeMathMock.modWithMessage",
      "offset": [
        1800,
        1960
      ],
      "op": "PUSH2",
      "path": "76",
      "value": "0x5B8"
    },
    "1081": {
      "fn": "SafeMathMock.modWithMessage",
      "offset": [
        1800,
        1960
      ],
      "op": "SWAP5",
      "path": "76"
    },
    "1082": {
      "op": "POP"
    },
    "1083": {
      "op": "POP"
    },
    "1084": {
      "op": "POP"
    },
    "1085": {
      "op": "POP"
    },
    "1086": {
      "op": "POP"
    },
    "1087": {
      "fn": "SafeMathMock.modWithMessage",
      "jump": "i",
      "offset": [
        1800,
        1960
      ],
      "op": "JUMP",
      "path": "76"
    },
    "1088": {
      "fn": "SafeMathMock.trySub",
      "offset": [
        262,
        392
      ],
      "op": "JUMPDEST",
      "path": "76"
    },
    "1089": {
      "fn": "SafeMathMock.trySub",
      "offset": [
        262,
        392
      ],
      "op": "PUSH2",
      "path": "76",
      "value": "0x202"
    },
    "1092": {
      "fn": "SafeMathMock.trySub",
      "offset": [
        262,
        392
      ],
      "op": "PUSH1",
      "path": "76",
      "value": "0x4"
    },
    "1094": {
      "fn": "SafeMathMock.trySub",
      "offset": [
        262,
        392
      ],
      "op": "DUP1",
      "path": "76"
    },
    "1095": {
      "fn": "SafeMathMock.trySub",
      "offset": [
        262,
        392
      ],
      "op": "CALLDATASIZE",
      "path": "76"
    },
    "1096": {
      "fn": "SafeMathMock.trySub",
      "offset": [
        262,
        392
      ],
      "op": "SUB",
      "path": "76"
    },
    "1097": {
      "fn": "SafeMathMock.trySub",
      "offset": [
        262,
        392
      ],
      "op": "PUSH1",
      "path": "76",
      "value": "0x40"
    },
    "1099": {
      "fn": "SafeMathMock.trySub",
      "offset": [
        262,
        392
      ],
      "op": "DUP2",
      "path": "76"
    },
    "1100": {
      "fn": "SafeMathMock.trySub",
      "offset": [
        262,
        392
      ],
      "op": "LT",
      "path": "76"
    },
    "1101": {
      "fn": "SafeMathMock.trySub",
      "offset": [
        262,
        392
      ],
      "op": "ISZERO",
      "path": "76"
    },
    "1102": {
      "fn": "SafeMathMock.trySub",
      "offset": [
        262,
        392
      ],
      "op": "PUSH2",
      "path": "76",
      "value": "0x456"
    },
    "1105": {
      "fn": "SafeMathMock.trySub",
      "offset": [
        262,
        392
      ],
      "op": "JUMPI",
      "path": "76"
    },
    "1106": {
      "fn": "SafeMathMock.trySub",
      "offset": [
        262,
        392
      ],
      "op": "PUSH1",
      "path": "76",
      "value": "0x0"
    },
    "1108": {
      "fn": "SafeMathMock.trySub",
      "offset": [
        262,
        392
      ],
      "op": "DUP1",
      "path": "76"
    },
    "1109": {
      "fn": "SafeMathMock.trySub",
      "offset": [
        262,
        392
      ],
      "op": "REVERT",
      "path": "76"
    },
    "1110": {
      "fn": "SafeMathMock.trySub",
      "offset": [
        262,
        392
      ],
      "op": "JUMPDEST",
      "path": "76"
    },
    "1111": {
      "op": "POP"
    },
    "1112": {
      "fn": "SafeMathMock.trySub",
      "offset": [
        262,
        392
      ],
      "op": "DUP1",
      "path": "76"
    },
    "1113": {
      "fn": "SafeMathMock.trySub",
      "offset": [
        262,
        392
      ],
      "op": "CALLDATALOAD",
      "path": "76"
    },
    "1114": {
      "fn": "SafeMathMock.trySub",
      "offset": [
        262,
        392
      ],
      "op": "SWAP1",
      "path": "76"
    },
    "1115": {
      "fn": "SafeMathMock.trySub",
      "offset": [
        262,
        392
      ],
      "op": "PUSH1",
      "path": "76",
      "value": "0x20"
    },
    "1117": {
      "fn": "SafeMathMock.trySub",
      "offset": [
        262,
        392
      ],
      "op": "ADD",
      "path": "76"
    },
    "1118": {
      "fn": "SafeMathMock.trySub",
      "offset": [
        262,
        392
      ],
      "op": "CALLDATALOAD",
      "path": "76"
    },
    "1119": {
      "fn": "SafeMathMock.trySub",
      "offset": [
        262,
        392
      ],
      "op": "PUSH2",
      "path": "76",
      "value": "0x5C5"
    },
    "1122": {
      "fn": "SafeMathMock.trySub",
      "jump": "i",
      "offset": [
        262,
        392
      ],
      "op": "JUMP",
      "path": "76"
    },
    "1123": {
      "fn": "SafeMathMock.divMemoryCheck",
      "offset": [
        3085,
        3452
      ],
      "op": "JUMPDEST",
      "path": "76"
    },
    "1124": {
      "fn": "SafeMathMock.divMemoryCheck",
      "offset": [
        3085,
        3452
      ],
      "op": "PUSH2",
      "path": "76",
      "value": "0x1CD"
    },
    "1127": {
      "fn": "SafeMathMock.divMemoryCheck",
      "offset": [
        3085,
        3452
      ],
      "op": "PUSH2",
      "path": "76",
      "value": "0x5D2"
    },
    "1130": {
      "fn": "SafeMathMock.divMemoryCheck",
      "jump": "i",
      "offset": [
        3085,
        3452
      ],
      "op": "JUMP",
      "path": "76"
    },
    "1131": {
      "fn": "SafeMathMock.doAdd",
      "offset": [
        893,
        1002
      ],
      "op": "JUMPDEST",
      "path": "76"
    },
    "1132": {
      "fn": "SafeMathMock.doAdd",
      "offset": [
        893,
        1002
      ],
      "op": "PUSH2",
      "path": "76",
      "value": "0x1CD"
    },
    "1135": {
      "fn": "SafeMathMock.doAdd",
      "offset": [
        893,
        1002
      ],
      "op": "PUSH1",
      "path": "76",
      "value": "0x4"
    },
    "1137": {
      "fn": "SafeMathMock.doAdd",
      "offset": [
        893,
        1002
      ],
      "op": "DUP1",
      "path": "76"
    },
    "1138": {
      "fn": "SafeMathMock.doAdd",
      "offset": [
        893,
        1002
      ],
      "op": "CALLDATASIZE",
      "path": "76"
    },
    "1139": {
      "fn": "SafeMathMock.doAdd",
      "offset": [
        893,
        1002
      ],
      "op": "SUB",
      "path": "76"
    },
    "1140": {
      "fn": "SafeMathMock.doAdd",
      "offset": [
        893,
        1002
      ],
      "op": "PUSH1",
      "path": "76",
      "value": "0x40"
    },
    "1142": {
      "fn": "SafeMathMock.doAdd",
      "offset": [
        893,
        1002
      ],
      "op": "DUP2",
      "path": "76"
    },
    "1143": {
      "fn": "SafeMathMock.doAdd",
      "offset": [
        893,
        1002
      ],
      "op": "LT",
      "path": "76"
    },
    "1144": {
      "fn": "SafeMathMock.doAdd",
      "offset": [
        893,
        1002
      ],
      "op": "ISZERO",
      "path": "76"
    },
    "1145": {
      "fn": "SafeMathMock.doAdd",
      "offset": [
        893,
        1002
      ],
      "op": "PUSH2",
      "path": "76",
      "value": "0x481"
    },
    "1148": {
      "fn": "SafeMathMock.doAdd",
      "offset": [
        893,
        1002
      ],
      "op": "JUMPI",
      "path": "76"
    },
    "1149": {
      "fn": "SafeMathMock.doAdd",
      "offset": [
        893,
        1002
      ],
      "op": "PUSH1",
      "path": "76",
      "value": "0x0"
    },
    "1151": {
      "fn": "SafeMathMock.doAdd",
      "offset": [
        893,
        1002
      ],
      "op": "DUP1",
      "path": "76"
    },
    "1152": {
      "fn": "SafeMathMock.doAdd",
      "offset": [
        893,
        1002
      ],
      "op": "REVERT",
      "path": "76"
    },
    "1153": {
      "fn": "SafeMathMock.doAdd",
      "offset": [
        893,
        1002
      ],
      "op": "JUMPDEST",
      "path": "76"
    },
    "1154": {
      "op": "POP"
    },
    "1155": {
      "fn": "SafeMathMock.doAdd",
      "offset": [
        893,
        1002
      ],
      "op": "DUP1",
      "path": "76"
    },
    "1156": {
      "fn": "SafeMathMock.doAdd",
      "offset": [
        893,
        1002
      ],
      "op": "CALLDATALOAD",
      "path": "76"
    },
    "1157": {
      "fn": "SafeMathMock.doAdd",
      "offset": [
        893,
        1002
      ],
      "op": "SWAP1",
      "path": "76"
    },
    "1158": {
      "fn": "SafeMathMock.doAdd",
      "offset": [
        893,
        1002
      ],
      "op": "PUSH1",
      "path": "76",
      "value": "0x20"
    },
    "1160": {
      "fn": "SafeMathMock.doAdd",
      "offset": [
        893,
        1002
      ],
      "op": "ADD",
      "path": "76"
    },
    "1161": {
      "fn": "SafeMathMock.doAdd",
      "offset": [
        893,
        1002
      ],
      "op": "CALLDATALOAD",
      "path": "76"
    },
    "1162": {
      "fn": "SafeMathMock.doAdd",
      "offset": [
        893,
        1002
      ],
      "op": "PUSH2",
      "path": "76",
      "value": "0x5F6"
    },
    "1165": {
      "fn": "SafeMathMock.doAdd",
      "jump": "i",
      "offset": [
        893,
        1002
      ],
      "op": "JUMP",
      "path": "76"
    },
    "1166": {
      "fn": "SafeMathMock.doMul",
      "offset": [
        1123,
        1232
      ],
      "op": "JUMPDEST",
      "path": "76"
    },
    "1167": {
      "fn": "SafeMathMock.doMul",
      "offset": [
        1123,
        1232
      ],
      "op": "PUSH2",
      "path": "76",
      "value": "0x1CD"
    },
    "1170": {
      "fn": "SafeMathMock.doMul",
      "offset": [
        1123,
        1232
      ],
      "op": "PUSH1",
      "path": "76",
      "value": "0x4"
    },
    "1172": {
      "fn": "SafeMathMock.doMul",
      "offset": [
        1123,
        1232
      ],
      "op": "DUP1",
      "path": "76"
    },
    "1173": {
      "fn": "SafeMathMock.doMul",
      "offset": [
        1123,
        1232
      ],
      "op": "CALLDATASIZE",
      "path": "76"
    },
    "1174": {
      "fn": "SafeMathMock.doMul",
      "offset": [
        1123,
        1232
      ],
      "op": "SUB",
      "path": "76"
    },
    "1175": {
      "fn": "SafeMathMock.doMul",
      "offset": [
        1123,
        1232
      ],
      "op": "PUSH1",
      "path": "76",
      "value": "0x40"
    },
    "1177": {
      "fn": "SafeMathMock.doMul",
      "offset": [
        1123,
        1232
      ],
      "op": "DUP2",
      "path": "76"
    },
    "1178": {
      "fn": "SafeMathMock.doMul",
      "offset": [
        1123,
        1232
      ],
      "op": "LT",
      "path": "76"
    },
    "1179": {
      "fn": "SafeMathMock.doMul",
      "offset": [
        1123,
        1232
      ],
      "op": "ISZERO",
      "path": "76"
    },
    "1180": {
      "fn": "SafeMathMock.doMul",
      "offset": [
        1123,
        1232
      ],
      "op": "PUSH2",
      "path": "76",
      "value": "0x4A4"
    },
    "1183": {
      "fn": "SafeMathMock.doMul",
      "offset": [
        1123,
        1232
      ],
      "op": "JUMPI",
      "path": "76"
    },
    "1184": {
      "fn": "SafeMathMock.doMul",
      "offset": [
        1123,
        1232
      ],
      "op": "PUSH1",
      "path": "76",
      "value": "0x0"
    },
    "1186": {
      "fn": "SafeMathMock.doMul",
      "offset": [
        1123,
        1232
      ],
      "op": "DUP1",
      "path": "76"
    },
    "1187": {
      "fn": "SafeMathMock.doMul",
      "offset": [
        1123,
        1232
      ],
      "op": "REVERT",
      "path": "76"
    },
    "1188": {
      "fn": "SafeMathMock.doMul",
      "offset": [
        1123,
        1232
      ],
      "op": "JUMPDEST",
      "path": "76"
    },
    "1189": {
      "op": "POP"
    },
    "1190": {
      "fn": "SafeMathMock.doMul",
      "offset": [
        1123,
        1232
      ],
      "op": "DUP1",
      "path": "76"
    },
    "1191": {
      "fn": "SafeMathMock.doMul",
      "offset": [
        1123,
        1232
      ],
      "op": "CALLDATALOAD",
      "path": "76"
    },
    "1192": {
      "fn": "SafeMathMock.doMul",
      "offset": [
        1123,
        1232
      ],
      "op": "SWAP1",
      "path": "76"
    },
    "1193": {
      "fn": "SafeMathMock.doMul",
      "offset": [
        1123,
        1232
      ],
      "op": "PUSH1",
      "path": "76",
      "value": "0x20"
    },
    "1195": {
      "fn": "SafeMathMock.doMul",
      "offset": [
        1123,
        1232
      ],
      "op": "ADD",
      "path": "76"
    },
    "1196": {
      "fn": "SafeMathMock.doMul",
      "offset": [
        1123,
        1232
      ],
      "op": "CALLDATALOAD",
      "path": "76"
    },
    "1197": {
      "fn": "SafeMathMock.doMul",
      "offset": [
        1123,
        1232
      ],
      "op": "PUSH2",
      "path": "76",
      "value": "0x602"
    },
    "1200": {
      "fn": "SafeMathMock.doMul",
      "jump": "i",
      "offset": [
        1123,
        1232
      ],
      "op": "JUMP",
      "path": "76"
    },
    "1201": {
      "fn": "SafeMathMock.addMemoryCheck",
      "offset": [
        1966,
        2333
      ],
      "op": "JUMPDEST",
      "path": "76"
    },
    "1202": {
      "fn": "SafeMathMock.addMemoryCheck",
      "offset": [
        1966,
        2333
      ],
      "op": "PUSH2",
      "path": "76",
      "value": "0x1CD"
    },
    "1205": {
      "fn": "SafeMathMock.addMemoryCheck",
      "offset": [
        1966,
        2333
      ],
      "op": "PUSH2",
      "path": "76",
      "value": "0x60E"
    },
    "1208": {
      "fn": "SafeMathMock.addMemoryCheck",
      "jump": "i",
      "offset": [
        1966,
        2333
      ],
      "op": "JUMP",
      "path": "76"
    },
    "1209": {
      "fn": "SafeMathMock.subMemoryCheck",
      "offset": [
        2339,
        2706
      ],
      "op": "JUMPDEST",
      "path": "76"
    },
    "1210": {
      "fn": "SafeMathMock.subMemoryCheck",
      "offset": [
        2339,
        2706
      ],
      "op": "PUSH2",
      "path": "76",
      "value": "0x1CD"
    },
    "1213": {
      "fn": "SafeMathMock.subMemoryCheck",
      "offset": [
        2339,
        2706
      ],
      "op": "PUSH2",
      "path": "76",
      "value": "0x632"
    },
    "1216": {
      "fn": "SafeMathMock.subMemoryCheck",
      "jump": "i",
      "offset": [
        2339,
        2706
      ],
      "op": "JUMP",
      "path": "76"
    },
    "1217": {
      "fn": "SafeMathMock.doDiv",
      "offset": [
        1238,
        1347
      ],
      "op": "JUMPDEST",
      "path": "76"
    },
    "1218": {
      "fn": "SafeMathMock.doDiv",
      "offset": [
        1238,
        1347
      ],
      "op": "PUSH2",
      "path": "76",
      "value": "0x1CD"
    },
    "1221": {
      "fn": "SafeMathMock.doDiv",
      "offset": [
        1238,
        1347
      ],
      "op": "PUSH1",
      "path": "76",
      "value": "0x4"
    },
    "1223": {
      "fn": "SafeMathMock.doDiv",
      "offset": [
        1238,
        1347
      ],
      "op": "DUP1",
      "path": "76"
    },
    "1224": {
      "fn": "SafeMathMock.doDiv",
      "offset": [
        1238,
        1347
      ],
      "op": "CALLDATASIZE",
      "path": "76"
    },
    "1225": {
      "fn": "SafeMathMock.doDiv",
      "offset": [
        1238,
        1347
      ],
      "op": "SUB",
      "path": "76"
    },
    "1226": {
      "fn": "SafeMathMock.doDiv",
      "offset": [
        1238,
        1347
      ],
      "op": "PUSH1",
      "path": "76",
      "value": "0x40"
    },
    "1228": {
      "fn": "SafeMathMock.doDiv",
      "offset": [
        1238,
        1347
      ],
      "op": "DUP2",
      "path": "76"
    },
    "1229": {
      "fn": "SafeMathMock.doDiv",
      "offset": [
        1238,
        1347
      ],
      "op": "LT",
      "path": "76"
    },
    "1230": {
      "fn": "SafeMathMock.doDiv",
      "offset": [
        1238,
        1347
      ],
      "op": "ISZERO",
      "path": "76"
    },
    "1231": {
      "fn": "SafeMathMock.doDiv",
      "offset": [
        1238,
        1347
      ],
      "op": "PUSH2",
      "path": "76",
      "value": "0x4D7"
    },
    "1234": {
      "fn": "SafeMathMock.doDiv",
      "offset": [
        1238,
        1347
      ],
      "op": "JUMPI",
      "path": "76"
    },
    "1235": {
      "fn": "SafeMathMock.doDiv",
      "offset": [
        1238,
        1347
      ],
      "op": "PUSH1",
      "path": "76",
      "value": "0x0"
    },
    "1237": {
      "fn": "SafeMathMock.doDiv",
      "offset": [
        1238,
        1347
      ],
      "op": "DUP1",
      "path": "76"
    },
    "1238": {
      "fn": "SafeMathMock.doDiv",
      "offset": [
        1238,
        1347
      ],
      "op": "REVERT",
      "path": "76"
    },
    "1239": {
      "fn": "SafeMathMock.doDiv",
      "offset": [
        1238,
        1347
      ],
      "op": "JUMPDEST",
      "path": "76"
    },
    "1240": {
      "op": "POP"
    },
    "1241": {
      "fn": "SafeMathMock.doDiv",
      "offset": [
        1238,
        1347
      ],
      "op": "DUP1",
      "path": "76"
    },
    "1242": {
      "fn": "SafeMathMock.doDiv",
      "offset": [
        1238,
        1347
      ],
      "op": "CALLDATALOAD",
      "path": "76"
    },
    "1243": {
      "fn": "SafeMathMock.doDiv",
      "offset": [
        1238,
        1347
      ],
      "op": "SWAP1",
      "path": "76"
    },
    "1244": {
      "fn": "SafeMathMock.doDiv",
      "offset": [
        1238,
        1347
      ],
      "op": "PUSH1",
      "path": "76",
      "value": "0x20"
    },
    "1246": {
      "fn": "SafeMathMock.doDiv",
      "offset": [
        1238,
        1347
      ],
      "op": "ADD",
      "path": "76"
    },
    "1247": {
      "fn": "SafeMathMock.doDiv",
      "offset": [
        1238,
        1347
      ],
      "op": "CALLDATALOAD",
      "path": "76"
    },
    "1248": {
      "fn": "SafeMathMock.doDiv",
      "offset": [
        1238,
        1347
      ],
      "op": "PUSH2",
      "path": "76",
      "value": "0x656"
    },
    "1251": {
      "fn": "SafeMathMock.doDiv",
      "jump": "i",
      "offset": [
        1238,
        1347
      ],
      "op": "JUMP",
      "path": "76"
    },
    "1252": {
      "fn": "SafeMathMock.divWithMessage",
      "offset": [
        1634,
        1794
      ],
      "op": "JUMPDEST",
      "path": "76"
    },
    "1253": {
      "fn": "SafeMathMock.divWithMessage",
      "offset": [
        1729,
        1736
      ],
      "op": "PUSH1",
      "path": "76",
      "value": "0x0"
    },
    "1255": {
      "fn": "SafeMathMock.divWithMessage",
      "offset": [
        1755,
        1787
      ],
      "op": "PUSH2",
      "path": "76",
      "statement": 0,
      "value": "0x4F1"
    },
    "1258": {
      "fn": "SafeMathMock.divWithMessage",
      "offset": [
        1768,
        1769
      ],
      "op": "DUP5",
      "path": "76"
    },
    "1259": {
      "fn": "SafeMathMock.divWithMessage",
      "offset": [
        1771,
        1772
      ],
      "op": "DUP5",
      "path": "76"
    },
    "1260": {
      "fn": "SafeMathMock.divWithMessage",
      "offset": [
        1774,
        1786
      ],
      "op": "DUP5",
      "path": "76"
    },
    "1261": {
      "fn": "SafeMathMock.divWithMessage",
      "offset": [
        1755,
        1767
      ],
      "op": "PUSH2",
      "path": "76",
      "value": "0x662"
    },
    "1264": {
      "fn": "SafeMathMock.divWithMessage",
      "jump": "i",
      "offset": [
        1755,
        1787
      ],
      "op": "JUMP",
      "path": "76"
    },
    "1265": {
      "fn": "SafeMathMock.divWithMessage",
      "offset": [
        1755,
        1787
      ],
      "op": "JUMPDEST",
      "path": "76"
    },
    "1266": {
      "fn": "SafeMathMock.divWithMessage",
      "offset": [
        1748,
        1787
      ],
      "op": "SWAP5",
      "path": "76"
    },
    "1267": {
      "fn": "SafeMathMock.divWithMessage",
      "offset": [
        1634,
        1794
      ],
      "op": "SWAP4",
      "path": "76"
    },
    "1268": {
      "op": "POP"
    },
    "1269": {
      "op": "POP"
    },
    "1270": {
      "op": "POP"
    },
    "1271": {
      "op": "POP"
    },
    "1272": {
      "fn": "SafeMathMock.divWithMessage",
      "jump": "o",
      "offset": [
        1634,
        1794
      ],
      "op": "JUMP",
      "path": "76"
    },
    "1273": {
      "fn": "SafeMathMock.tryMod",
      "offset": [
        670,
        800
      ],
      "op": "JUMPDEST",
      "path": "76"
    },
    "1274": {
      "fn": "SafeMathMock.tryMod",
      "offset": [
        729,
        738
      ],
      "op": "PUSH1",
      "path": "76",
      "value": "0x0"
    },
    "1276": {
      "fn": "SafeMathMock.tryMod",
      "offset": [
        740,
        753
      ],
      "op": "DUP1",
      "path": "76"
    },
    "1277": {
      "fn": "SafeMathMock.tryMod",
      "offset": [
        772,
        793
      ],
      "op": "PUSH2",
      "path": "76",
      "statement": 1,
      "value": "0x506"
    },
    "1280": {
      "fn": "SafeMathMock.tryMod",
      "offset": [
        788,
        789
      ],
      "op": "DUP5",
      "path": "76"
    },
    "1281": {
      "fn": "SafeMathMock.tryMod",
      "offset": [
        791,
        792
      ],
      "op": "DUP5",
      "path": "76"
    },
    "1282": {
      "fn": "SafeMathMock.tryMod",
      "offset": [
        772,
        787
      ],
      "op": "PUSH2",
      "path": "76",
      "value": "0x701"
    },
    "1285": {
      "fn": "SafeMathMock.tryMod",
      "jump": "i",
      "offset": [
        772,
        793
      ],
      "op": "JUMP",
      "path": "76"
    },
    "1286": {
      "fn": "SafeMathMock.tryMod",
      "offset": [
        772,
        793
      ],
      "op": "JUMPDEST",
      "path": "76"
    },
    "1287": {
      "fn": "SafeMathMock.tryMod",
      "offset": [
        765,
        793
      ],
      "op": "SWAP2",
      "path": "76"
    },
    "1288": {
      "fn": "SafeMathMock.tryMod",
      "offset": [
        765,
        793
      ],
      "op": "POP",
      "path": "76"
    },
    "1289": {
      "fn": "SafeMathMock.tryMod",
      "offset": [
        765,
        793
      ],
      "op": "SWAP2",
      "path": "76"
    },
    "1290": {
      "fn": "SafeMathMock.tryMod",
      "offset": [
        765,
        793
      ],
      "op": "POP",
      "path": "76"
    },
    "1291": {
      "fn": "SafeMathMock.tryMod",
      "offset": [
        670,
        800
      ],
      "op": "JUMPDEST",
      "path": "76"
    },
    "1292": {
      "fn": "SafeMathMock.tryMod",
      "offset": [
        670,
        800
      ],
      "op": "SWAP3",
      "path": "76"
    },
    "1293": {
      "fn": "SafeMathMock.tryMod",
      "offset": [
        670,
        800
      ],
      "op": "POP",
      "path": "76"
    },
    "1294": {
      "fn": "SafeMathMock.tryMod",
      "offset": [
        670,
        800
      ],
      "op": "SWAP3",
      "path": "76"
    },
    "1295": {
      "fn": "SafeMathMock.tryMod",
      "offset": [
        670,
        800
      ],
      "op": "SWAP1",
      "path": "76"
    },
    "1296": {
      "fn": "SafeMathMock.tryMod",
      "offset": [
        670,
        800
      ],
      "op": "POP",
      "path": "76"
    },
    "1297": {
      "fn": "SafeMathMock.tryMod",
      "jump": "o",
      "offset": [
        670,
        800
      ],
      "op": "JUMP",
      "path": "76"
    },
    "1298": {
      "fn": "SafeMathMock.tryMul",
      "offset": [
        398,
        528
      ],
      "op": "JUMPDEST",
      "path": "76"
    },
    "1299": {
      "fn": "SafeMathMock.tryMul",
      "offset": [
        457,
        466
      ],
      "op": "PUSH1",
      "path": "76",
      "value": "0x0"
    },
    "1301": {
      "fn": "SafeMathMock.tryMul",
      "offset": [
        468,
        481
      ],
      "op": "DUP1",
      "path": "76"
    },
    "1302": {
      "fn": "SafeMathMock.tryMul",
      "offset": [
        500,
        521
      ],
      "op": "PUSH2",
      "path": "76",
      "statement": 2,
      "value": "0x506"
    },
    "1305": {
      "fn": "SafeMathMock.tryMul",
      "offset": [
        516,
        517
      ],
      "op": "DUP5",
      "path": "76"
    },
    "1306": {
      "fn": "SafeMathMock.tryMul",
      "offset": [
        519,
        520
      ],
      "op": "DUP5",
      "path": "76"
    },
    "1307": {
      "fn": "SafeMathMock.tryMul",
      "offset": [
        500,
        515
      ],
      "op": "PUSH2",
      "path": "76",
      "value": "0x72B"
    },
    "1310": {
      "fn": "SafeMathMock.tryMul",
      "jump": "i",
      "offset": [
        500,
        521
      ],
      "op": "JUMP",
      "path": "76"
    },
    "1311": {
      "fn": "SafeMathMock.doSub",
      "offset": [
        1008,
        1117
      ],
      "op": "JUMPDEST",
      "path": "76"
    },
    "1312": {
      "fn": "SafeMathMock.doSub",
      "offset": [
        1066,
        1073
      ],
      "op": "PUSH1",
      "path": "76",
      "value": "0x0"
    },
    "1314": {
      "fn": "SafeMathMock.doSub",
      "offset": [
        1092,
        1110
      ],
      "op": "PUSH2",
      "path": "76",
      "statement": 3,
      "value": "0x52B"
    },
    "1317": {
      "fn": "SafeMathMock.doSub",
      "offset": [
        1105,
        1106
      ],
      "op": "DUP4",
      "path": "76"
    },
    "1318": {
      "fn": "SafeMathMock.doSub",
      "offset": [
        1108,
        1109
      ],
      "op": "DUP4",
      "path": "76"
    },
    "1319": {
      "fn": "SafeMathMock.doSub",
      "offset": [
        1092,
        1104
      ],
      "op": "PUSH2",
      "path": "76",
      "value": "0x76B"
    },
    "1322": {
      "fn": "SafeMathMock.doSub",
      "jump": "i",
      "offset": [
        1092,
        1110
      ],
      "op": "JUMP",
      "path": "76"
    },
    "1323": {
      "fn": "SafeMathMock.doSub",
      "offset": [
        1092,
        1110
      ],
      "op": "JUMPDEST",
      "path": "76"
    },
    "1324": {
      "fn": "SafeMathMock.doSub",
      "offset": [
        1085,
        1110
      ],
      "op": "SWAP1",
      "path": "76"
    },
    "1325": {
      "fn": "SafeMathMock.doSub",
      "offset": [
        1085,
        1110
      ],
      "op": "POP",
      "path": "76"
    },
    "1326": {
      "fn": "SafeMathMock.doSub",
      "offset": [
        1008,
        1117
      ],
      "op": "JUMPDEST",
      "path": "76"
    },
    "1327": {
      "fn": "SafeMathMock.doSub",
      "offset": [
        1008,
        1117
      ],
      "op": "SWAP3",
      "path": "76"
    },
    "1328": {
      "fn": "SafeMathMock.doSub",
      "offset": [
        1008,
        1117
      ],
      "op": "SWAP2",
      "path": "76"
    },
    "1329": {
      "fn": "SafeMathMock.doSub",
      "offset": [
        1008,
        1117
      ],
      "op": "POP",
      "path": "76"
    },
    "1330": {
      "fn": "SafeMathMock.doSub",
      "offset": [
        1008,
        1117
      ],
      "op": "POP",
      "path": "76"
    },
    "1331": {
      "fn": "SafeMathMock.doSub",
      "jump": "o",
      "offset": [
        1008,
        1117
      ],
      "op": "JUMP",
      "path": "76"
    },
    "1332": {
      "fn": "SafeMathMock.modMemoryCheck",
      "offset": [
        3458,
        3825
      ],
      "op": "JUMPDEST",
      "path": "76"
    },
    "1333": {
      "fn": "SafeMathMock.modMemoryCheck",
      "offset": [
        3637,
        3641
      ],
      "op": "PUSH1",
      "path": "76",
      "value": "0x40"
    },
    "1335": {
      "fn": "SafeMathMock.modMemoryCheck",
      "offset": [
        3631,
        3642
      ],
      "op": "MLOAD",
      "path": "76"
    },
    "1336": {
      "fn": "SafeMathMock.modMemoryCheck",
      "offset": [
        3545,
        3547
      ],
      "op": "PUSH1",
      "path": "76",
      "value": "0x20"
    },
    "1338": {
      "fn": "SafeMathMock.modMemoryCheck",
      "offset": [
        3505,
        3516
      ],
      "op": "PUSH1",
      "path": "76",
      "value": "0x0"
    },
    "1340": {
      "fn": "SafeMathMock.modMemoryCheck",
      "offset": [
        3653,
        3713
      ],
      "op": "JUMPDEST",
      "path": "76"
    },
    "1341": {
      "fn": "SafeMathMock.modMemoryCheck",
      "offset": [
        3677,
        3683
      ],
      "op": "DUP2",
      "path": "76"
    },
    "1342": {
      "fn": "SafeMathMock.modMemoryCheck",
      "offset": [
        3673,
        3674
      ],
      "op": "DUP2",
      "path": "76"
    },
    "1343": {
      "fn": "SafeMathMock.modMemoryCheck",
      "offset": [
        3673,
        3683
      ],
      "op": "LT",
      "path": "76"
    },
    "1344": {
      "fn": "SafeMathMock.modMemoryCheck",
      "offset": [
        3653,
        3713
      ],
      "op": "ISZERO",
      "path": "76"
    },
    "1345": {
      "fn": "SafeMathMock.modMemoryCheck",
      "offset": [
        3653,
        3713
      ],
      "op": "PUSH2",
      "path": "76",
      "value": "0x558"
    },
    "1348": {
      "fn": "SafeMathMock.modMemoryCheck",
      "offset": [
        3653,
        3713
      ],
      "op": "JUMPI",
      "path": "76"
    },
    "1349": {
      "fn": "SafeMathMock.modMemoryCheck",
      "offset": [
        3692,
        3710
      ],
      "op": "PUSH2",
      "path": "76",
      "statement": 4,
      "value": "0x54F"
    },
    "1352": {
      "fn": "SafeMathMock.modMemoryCheck",
      "offset": [
        3705,
        3706
      ],
      "op": "PUSH1",
      "path": "76",
      "value": "0x1"
    },
    "1354": {
      "fn": "SafeMathMock.modMemoryCheck",
      "offset": [
        3708,
        3709
      ],
      "op": "DUP1",
      "path": "76"
    },
    "1355": {
      "fn": "SafeMathMock.modMemoryCheck",
      "offset": [
        3692,
        3704
      ],
      "op": "PUSH2",
      "path": "76",
      "value": "0x7C8"
    },
    "1358": {
      "fn": "SafeMathMock.modMemoryCheck",
      "jump": "i",
      "offset": [
        3692,
        3710
      ],
      "op": "JUMP",
      "path": "76"
    },
    "1359": {
      "fn": "SafeMathMock.modMemoryCheck",
      "offset": [
        3692,
        3710
      ],
      "op": "JUMPDEST",
      "path": "76"
    },
    "1360": {
      "op": "POP"
    },
    "1361": {
      "fn": "SafeMathMock.modMemoryCheck",
      "offset": [
        3685,
        3688
      ],
      "op": "PUSH1",
      "path": "76",
      "statement": 5,
      "value": "0x1"
    },
    "1363": {
      "fn": "SafeMathMock.modMemoryCheck",
      "offset": [
        3685,
        3688
      ],
      "op": "ADD",
      "path": "76"
    },
    "1364": {
      "fn": "SafeMathMock.modMemoryCheck",
      "offset": [
        3653,
        3713
      ],
      "op": "PUSH2",
      "path": "76",
      "value": "0x53C"
    },
    "1367": {
      "fn": "SafeMathMock.modMemoryCheck",
      "offset": [
        3653,
        3713
      ],
      "op": "JUMP",
      "path": "76"
    },
    "1368": {
      "fn": "SafeMathMock.modMemoryCheck",
      "offset": [
        3653,
        3713
      ],
      "op": "JUMPDEST",
      "path": "76"
    },
    "1369": {
      "op": "POP"
    },
    "1370": {
      "op": "POP"
    },
    "1371": {
      "fn": "SafeMathMock.modMemoryCheck",
      "offset": [
        3806,
        3810
      ],
      "op": "PUSH1",
      "path": "76",
      "value": "0x40"
    },
    "1373": {
      "fn": "SafeMathMock.modMemoryCheck",
      "offset": [
        3800,
        3811
      ],
      "op": "MLOAD",
      "path": "76"
    },
    "1374": {
      "fn": "SafeMathMock.modMemoryCheck",
      "offset": [
        3796,
        3817
      ],
      "op": "SUB",
      "path": "76"
    },
    "1375": {
      "fn": "SafeMathMock.modMemoryCheck",
      "offset": [
        3796,
        3817
      ],
      "op": "SWAP1",
      "path": "76"
    },
    "1376": {
      "fn": "SafeMathMock.modMemoryCheck",
      "jump": "o",
      "offset": [
        3787,
        3819
      ],
      "op": "JUMP",
      "path": "76"
    },
    "1377": {
      "fn": "SafeMathMock.tryDiv",
      "offset": [
        534,
        664
      ],
      "op": "JUMPDEST",
      "path": "76"
    },
    "1378": {
      "fn": "SafeMathMock.tryDiv",
      "offset": [
        593,
        602
      ],
      "op": "PUSH1",
      "path": "76",
      "value": "0x0"
    },
    "1380": {
      "fn": "SafeMathMock.tryDiv",
      "offset": [
        604,
        617
      ],
      "op": "DUP1",
      "path": "76"
    },
    "1381": {
      "fn": "SafeMathMock.tryDiv",
      "offset": [
        636,
        657
      ],
      "op": "PUSH2",
      "path": "76",
      "statement": 6,
      "value": "0x506"
    },
    "1384": {
      "fn": "SafeMathMock.tryDiv",
      "offset": [
        652,
        653
      ],
      "op": "DUP5",
      "path": "76"
    },
    "1385": {
      "fn": "SafeMathMock.tryDiv",
      "offset": [
        655,
        656
      ],
      "op": "DUP5",
      "path": "76"
    },
    "1386": {
      "fn": "SafeMathMock.tryDiv",
      "offset": [
        636,
        651
      ],
      "op": "PUSH2",
      "path": "76",
      "value": "0x82F"
    },
    "1389": {
      "fn": "SafeMathMock.tryDiv",
      "jump": "i",
      "offset": [
        636,
        657
      ],
      "op": "JUMP",
      "path": "76"
    },
    "1390": {
      "fn": "SafeMathMock.mulMemoryCheck",
      "offset": [
        2712,
        3079
      ],
      "op": "JUMPDEST",
      "path": "76"
    },
    "1391": {
      "fn": "SafeMathMock.mulMemoryCheck",
      "offset": [
        2891,
        2895
      ],
      "op": "PUSH1",
      "path": "76",
      "value": "0x40"
    },
    "1393": {
      "fn": "SafeMathMock.mulMemoryCheck",
      "offset": [
        2885,
        2896
      ],
      "op": "MLOAD",
      "path": "76"
    },
    "1394": {
      "fn": "SafeMathMock.mulMemoryCheck",
      "offset": [
        2799,
        2801
      ],
      "op": "PUSH1",
      "path": "76",
      "value": "0x20"
    },
    "1396": {
      "fn": "SafeMathMock.mulMemoryCheck",
      "offset": [
        2759,
        2770
      ],
      "op": "PUSH1",
      "path": "76",
      "value": "0x0"
    },
    "1398": {
      "fn": "SafeMathMock.mulMemoryCheck",
      "offset": [
        2907,
        2967
      ],
      "op": "JUMPDEST",
      "path": "76"
    },
    "1399": {
      "fn": "SafeMathMock.mulMemoryCheck",
      "offset": [
        2931,
        2937
      ],
      "op": "DUP2",
      "path": "76"
    },
    "1400": {
      "fn": "SafeMathMock.mulMemoryCheck",
      "offset": [
        2927,
        2928
      ],
      "op": "DUP2",
      "path": "76"
    },
    "1401": {
      "fn": "SafeMathMock.mulMemoryCheck",
      "offset": [
        2927,
        2937
      ],
      "op": "LT",
      "path": "76"
    },
    "1402": {
      "fn": "SafeMathMock.mulMemoryCheck",
      "offset": [
        2907,
        2967
      ],
      "op": "ISZERO",
      "path": "76"
    },
    "1403": {
      "fn": "SafeMathMock.mulMemoryCheck",
      "offset": [
        2907,
        2967
      ],
      "op": "PUSH2",
      "path": "76",
      "value": "0x558"
    },
    "1406": {
      "fn": "SafeMathMock.mulMemoryCheck",
      "offset": [
        2907,
        2967
      ],
      "op": "JUMPI",
      "path": "76"
    },
    "1407": {
      "fn": "SafeMathMock.mulMemoryCheck",
      "offset": [
        2946,
        2964
      ],
      "op": "PUSH2",
      "path": "76",
      "statement": 7,
      "value": "0x589"
    },
    "1410": {
      "fn": "SafeMathMock.mulMemoryCheck",
      "offset": [
        2959,
        2960
      ],
      "op": "PUSH1",
      "path": "76",
      "value": "0x1"
    },
    "1412": {
      "fn": "SafeMathMock.mulMemoryCheck",
      "offset": [
        2962,
        2963
      ],
      "op": "DUP1",
      "path": "76"
    },
    "1413": {
      "fn": "SafeMathMock.mulMemoryCheck",
      "offset": [
        2946,
        2958
      ],
      "op": "PUSH2",
      "path": "76",
      "value": "0x859"
    },
    "1416": {
      "fn": "SafeMathMock.mulMemoryCheck",
      "jump": "i",
      "offset": [
        2946,
        2964
      ],
      "op": "JUMP",
      "path": "76"
    },
    "1417": {
      "fn": "SafeMathMock.mulMemoryCheck",
      "offset": [
        2946,
        2964
      ],
      "op": "JUMPDEST",
      "path": "76"
    },
    "1418": {
      "op": "POP"
    },
    "1419": {
      "fn": "SafeMathMock.mulMemoryCheck",
      "offset": [
        2939,
        2942
      ],
      "op": "PUSH1",
      "path": "76",
      "statement": 8,
      "value": "0x1"
    },
    "1421": {
      "fn": "SafeMathMock.mulMemoryCheck",
      "offset": [
        2939,
        2942
      ],
      "op": "ADD",
      "path": "76"
    },
    "1422": {
      "fn": "SafeMathMock.mulMemoryCheck",
      "offset": [
        2907,
        2967
      ],
      "op": "PUSH2",
      "path": "76",
      "value": "0x576"
    },
    "1425": {
      "fn": "SafeMathMock.mulMemoryCheck",
      "offset": [
        2907,
        2967
      ],
      "op": "JUMP",
      "path": "76"
    },
    "1426": {
      "fn": "SafeMathMock.doMod",
      "offset": [
        1353,
        1462
      ],
      "op": "JUMPDEST",
      "path": "76"
    },
    "1427": {
      "fn": "SafeMathMock.doMod",
      "offset": [
        1411,
        1418
      ],
      "op": "PUSH1",
      "path": "76",
      "value": "0x0"
    },
    "1429": {
      "fn": "SafeMathMock.doMod",
      "offset": [
        1437,
        1455
      ],
      "op": "PUSH2",
      "path": "76",
      "statement": 9,
      "value": "0x52B"
    },
    "1432": {
      "fn": "SafeMathMock.doMod",
      "offset": [
        1450,
        1451
      ],
      "op": "DUP4",
      "path": "76"
    },
    "1433": {
      "fn": "SafeMathMock.doMod",
      "offset": [
        1453,
        1454
      ],
      "op": "DUP4",
      "path": "76"
    },
    "1434": {
      "fn": "SafeMathMock.doMod",
      "offset": [
        1437,
        1449
      ],
      "op": "PUSH2",
      "path": "76",
      "value": "0x7C8"
    },
    "1437": {
      "fn": "SafeMathMock.doMod",
      "jump": "i",
      "offset": [
        1437,
        1455
      ],
      "op": "JUMP",
      "path": "76"
    },
    "1438": {
      "fn": "SafeMathMock.tryAdd",
      "offset": [
        126,
        256
      ],
      "op": "JUMPDEST",
      "path": "76"
    },
    "1439": {
      "fn": "SafeMathMock.tryAdd",
      "offset": [
        185,
        194
      ],
      "op": "PUSH1",
      "path": "76",
      "value": "0x0"
    },
    "1441": {
      "fn": "SafeMathMock.tryAdd",
      "offset": [
        196,
        209
      ],
      "op": "DUP1",
      "path": "76"
    },
    "1442": {
      "fn": "SafeMathMock.tryAdd",
      "offset": [
        228,
        249
      ],
      "op": "PUSH2",
      "path": "76",
      "statement": 10,
      "value": "0x506"
    },
    "1445": {
      "fn": "SafeMathMock.tryAdd",
      "offset": [
        244,
        245
      ],
      "op": "DUP5",
      "path": "76"
    },
    "1446": {
      "fn": "SafeMathMock.tryAdd",
      "offset": [
        247,
        248
      ],
      "op": "DUP5",
      "path": "76"
    },
    "1447": {
      "fn": "SafeMathMock.tryAdd",
      "offset": [
        228,
        243
      ],
      "op": "PUSH2",
      "path": "76",
      "value": "0x8B2"
    },
    "1450": {
      "fn": "SafeMathMock.tryAdd",
      "jump": "i",
      "offset": [
        228,
        249
      ],
      "op": "JUMP",
      "path": "76"
    },
    "1451": {
      "fn": "SafeMathMock.subWithMessage",
      "offset": [
        1468,
        1628
      ],
      "op": "JUMPDEST",
      "path": "76"
    },
    "1452": {
      "fn": "SafeMathMock.subWithMessage",
      "offset": [
        1563,
        1570
      ],
      "op": "PUSH1",
      "path": "76",
      "value": "0x0"
    },
    "1454": {
      "fn": "SafeMathMock.subWithMessage",
      "offset": [
        1589,
        1621
      ],
      "op": "PUSH2",
      "path": "76",
      "statement": 11,
      "value": "0x4F1"
    },
    "1457": {
      "fn": "SafeMathMock.subWithMessage",
      "offset": [
        1602,
        1603
      ],
      "op": "DUP5",
      "path": "76"
    },
    "1458": {
      "fn": "SafeMathMock.subWithMessage",
      "offset": [
        1605,
        1606
      ],
      "op": "DUP5",
      "path": "76"
    },
    "1459": {
      "fn": "SafeMathMock.subWithMessage",
      "offset": [
        1608,
        1620
      ],
      "op": "DUP5",
      "path": "76"
    },
    "1460": {
      "fn": "SafeMathMock.subWithMessage",
      "offset": [
        1589,
        1601
      ],
      "op": "PUSH2",
      "path": "76",
      "value": "0x8CD"
    },
    "1463": {
      "fn": "SafeMathMock.subWithMessage",
      "jump": "i",
      "offset": [
        1589,
        1621
      ],
      "op": "JUMP",
      "path": "76"
    },
    "1464": {
      "fn": "SafeMathMock.modWithMessage",
      "offset": [
        1800,
        1960
      ],
      "op": "JUMPDEST",
      "path": "76"
    },
    "1465": {
      "fn": "SafeMathMock.modWithMessage",
      "offset": [
        1895,
        1902
      ],
      "op": "PUSH1",
      "path": "76",
      "value": "0x0"
    },
    "1467": {
      "fn": "SafeMathMock.modWithMessage",
      "offset": [
        1921,
        1953
      ],
      "op": "PUSH2",
      "path": "76",
      "statement": 12,
      "value": "0x4F1"
    },
    "1470": {
      "fn": "SafeMathMock.modWithMessage",
      "offset": [
        1934,
        1935
      ],
      "op": "DUP5",
      "path": "76"
    },
    "1471": {
      "fn": "SafeMathMock.modWithMessage",
      "offset": [
        1937,
        1938
      ],
      "op": "DUP5",
      "path": "76"
    },
    "1472": {
      "fn": "SafeMathMock.modWithMessage",
      "offset": [
        1940,
        1952
      ],
      "op": "DUP5",
      "path": "76"
    },
    "1473": {
      "fn": "SafeMathMock.modWithMessage",
      "offset": [
        1921,
        1933
      ],
      "op": "PUSH2",
      "path": "76",
      "value": "0x927"
    },
    "1476": {
      "fn": "SafeMathMock.modWithMessage",
      "jump": "i",
      "offset": [
        1921,
        1953
      ],
      "op": "JUMP",
      "path": "76"
    },
    "1477": {
      "fn": "SafeMathMock.trySub",
      "offset": [
        262,
        392
      ],
      "op": "JUMPDEST",
      "path": "76"
    },
    "1478": {
      "fn": "SafeMathMock.trySub",
      "offset": [
        321,
        330
      ],
      "op": "PUSH1",
      "path": "76",
      "value": "0x0"
    },
    "1480": {
      "fn": "SafeMathMock.trySub",
      "offset": [
        332,
        345
      ],
      "op": "DUP1",
      "path": "76"
    },
    "1481": {
      "fn": "SafeMathMock.trySub",
      "offset": [
        364,
        385
      ],
      "op": "PUSH2",
      "path": "76",
      "statement": 13,
      "value": "0x506"
    },
    "1484": {
      "fn": "SafeMathMock.trySub",
      "offset": [
        380,
        381
      ],
      "op": "DUP5",
      "path": "76"
    },
    "1485": {
      "fn": "SafeMathMock.trySub",
      "offset": [
        383,
        384
      ],
      "op": "DUP5",
      "path": "76"
    },
    "1486": {
      "fn": "SafeMathMock.trySub",
      "offset": [
        364,
        379
      ],
      "op": "PUSH2",
      "path": "76",
      "value": "0x989"
    },
    "1489": {
      "fn": "SafeMathMock.trySub",
      "jump": "i",
      "offset": [
        364,
        385
      ],
      "op": "JUMP",
      "path": "76"
    },
    "1490": {
      "fn": "SafeMathMock.divMemoryCheck",
      "offset": [
        3085,
        3452
      ],
      "op": "JUMPDEST",
      "path": "76"
    },
    "1491": {
      "fn": "SafeMathMock.divMemoryCheck",
      "offset": [
        3264,
        3268
      ],
      "op": "PUSH1",
      "path": "76",
      "value": "0x40"
    },
    "1493": {
      "fn": "SafeMathMock.divMemoryCheck",
      "offset": [
        3258,
        3269
      ],
      "op": "MLOAD",
      "path": "76"
    },
    "1494": {
      "fn": "SafeMathMock.divMemoryCheck",
      "offset": [
        3172,
        3174
      ],
      "op": "PUSH1",
      "path": "76",
      "value": "0x20"
    },
    "1496": {
      "fn": "SafeMathMock.divMemoryCheck",
      "offset": [
        3132,
        3143
      ],
      "op": "PUSH1",
      "path": "76",
      "value": "0x0"
    },
    "1498": {
      "fn": "SafeMathMock.divMemoryCheck",
      "offset": [
        3280,
        3340
      ],
      "op": "JUMPDEST",
      "path": "76"
    },
    "1499": {
      "fn": "SafeMathMock.divMemoryCheck",
      "offset": [
        3304,
        3310
      ],
      "op": "DUP2",
      "path": "76"
    },
    "1500": {
      "fn": "SafeMathMock.divMemoryCheck",
      "offset": [
        3300,
        3301
      ],
      "op": "DUP2",
      "path": "76"
    },
    "1501": {
      "fn": "SafeMathMock.divMemoryCheck",
      "offset": [
        3300,
        3310
      ],
      "op": "LT",
      "path": "76"
    },
    "1502": {
      "fn": "SafeMathMock.divMemoryCheck",
      "offset": [
        3280,
        3340
      ],
      "op": "ISZERO",
      "path": "76"
    },
    "1503": {
      "fn": "SafeMathMock.divMemoryCheck",
      "offset": [
        3280,
        3340
      ],
      "op": "PUSH2",
      "path": "76",
      "value": "0x558"
    },
    "1506": {
      "fn": "SafeMathMock.divMemoryCheck",
      "offset": [
        3280,
        3340
      ],
      "op": "JUMPI",
      "path": "76"
    },
    "1507": {
      "fn": "SafeMathMock.divMemoryCheck",
      "offset": [
        3319,
        3337
      ],
      "op": "PUSH2",
      "path": "76",
      "statement": 14,
      "value": "0x5ED"
    },
    "1510": {
      "fn": "SafeMathMock.divMemoryCheck",
      "offset": [
        3332,
        3333
      ],
      "op": "PUSH1",
      "path": "76",
      "value": "0x1"
    },
    "1512": {
      "fn": "SafeMathMock.divMemoryCheck",
      "offset": [
        3335,
        3336
      ],
      "op": "DUP1",
      "path": "76"
    },
    "1513": {
      "fn": "SafeMathMock.divMemoryCheck",
      "offset": [
        3319,
        3331
      ],
      "op": "PUSH2",
      "path": "76",
      "value": "0x9AB"
    },
    "1516": {
      "fn": "SafeMathMock.divMemoryCheck",
      "jump": "i",
      "offset": [
        3319,
        3337
      ],
      "op": "JUMP",
      "path": "76"
    },
    "1517": {
      "fn": "SafeMathMock.divMemoryCheck",
      "offset": [
        3319,
        3337
      ],
      "op": "JUMPDEST",
      "path": "76"
    },
    "1518": {
      "op": "POP"
    },
    "1519": {
      "fn": "SafeMathMock.divMemoryCheck",
      "offset": [
        3312,
        3315
      ],
      "op": "PUSH1",
      "path": "76",
      "statement": 15,
      "value": "0x1"
    },
    "1521": {
      "fn": "SafeMathMock.divMemoryCheck",
      "offset": [
        3312,
        3315
      ],
      "op": "ADD",
      "path": "76"
    },
    "1522": {
      "fn": "SafeMathMock.divMemoryCheck",
      "offset": [
        3280,
        3340
      ],
      "op": "PUSH2",
      "path": "76",
      "value": "0x5DA"
    },
    "1525": {
      "fn": "SafeMathMock.divMemoryCheck",
      "offset": [
        3280,
        3340
      ],
      "op": "JUMP",
      "path": "76"
    },
    "1526": {
      "fn": "SafeMathMock.doAdd",
      "offset": [
        893,
        1002
      ],
      "op": "JUMPDEST",
      "path": "76"
    },
    "1527": {
      "fn": "SafeMathMock.doAdd",
      "offset": [
        951,
        958
      ],
      "op": "PUSH1",
      "path": "76",
      "value": "0x0"
    },
    "1529": {
      "fn": "SafeMathMock.doAdd",
      "offset": [
        977,
        995
      ],
      "op": "PUSH2",
      "path": "76",
      "statement": 16,
      "value": "0x52B"
    },
    "1532": {
      "fn": "SafeMathMock.doAdd",
      "offset": [
        990,
        991
      ],
      "op": "DUP4",
      "path": "76"
    },
    "1533": {
      "fn": "SafeMathMock.doAdd",
      "offset": [
        993,
        994
      ],
      "op": "DUP4",
      "path": "76"
    },
    "1534": {
      "fn": "SafeMathMock.doAdd",
      "offset": [
        977,
        989
      ],
      "op": "PUSH2",
      "path": "76",
      "value": "0xA12"
    },
    "1537": {
      "fn": "SafeMathMock.doAdd",
      "jump": "i",
      "offset": [
        977,
        995
      ],
      "op": "JUMP",
      "path": "76"
    },
    "1538": {
      "fn": "SafeMathMock.doMul",
      "offset": [
        1123,
        1232
      ],
      "op": "JUMPDEST",
      "path": "76"
    },
    "1539": {
      "fn": "SafeMathMock.doMul",
      "offset": [
        1181,
        1188
      ],
      "op": "PUSH1",
      "path": "76",
      "value": "0x0"
    },
    "1541": {
      "fn": "SafeMathMock.doMul",
      "offset": [
        1207,
        1225
      ],
      "op": "PUSH2",
      "path": "76",
      "statement": 17,
      "value": "0x52B"
    },
    "1544": {
      "fn": "SafeMathMock.doMul",
      "offset": [
        1220,
        1221
      ],
      "op": "DUP4",
      "path": "76"
    },
    "1545": {
      "fn": "SafeMathMock.doMul",
      "offset": [
        1223,
        1224
      ],
      "op": "DUP4",
      "path": "76"
    },
    "1546": {
      "fn": "SafeMathMock.doMul",
      "offset": [
        1207,
        1219
      ],
      "op": "PUSH2",
      "path": "76",
      "value": "0x859"
    },
    "1549": {
      "fn": "SafeMathMock.doMul",
      "jump": "i",
      "offset": [
        1207,
        1225
      ],
      "op": "JUMP",
      "path": "76"
    },
    "1550": {
      "fn": "SafeMathMock.addMemoryCheck",
      "offset": [
        1966,
        2333
      ],
      "op": "JUMPDEST",
      "path": "76"
    },
    "1551": {
      "fn": "SafeMathMock.addMemoryCheck",
      "offset": [
        2145,
        2149
      ],
      "op": "PUSH1",
      "path": "76",
      "value": "0x40"
    },
    "1553": {
      "fn": "SafeMathMock.addMemoryCheck",
      "offset": [
        2139,
        2150
      ],
      "op": "MLOAD",
      "path": "76"
    },
    "1554": {
      "fn": "SafeMathMock.addMemoryCheck",
      "offset": [
        2053,
        2055
      ],
      "op": "PUSH1",
      "path": "76",
      "value": "0x20"
    },
    "1556": {
      "fn": "SafeMathMock.addMemoryCheck",
      "offset": [
        2013,
        2024
      ],
      "op": "PUSH1",
      "path": "76",
      "value": "0x0"
    },
    "1558": {
      "fn": "SafeMathMock.addMemoryCheck",
      "offset": [
        2161,
        2221
      ],
      "op": "JUMPDEST",
      "path": "76"
    },
    "1559": {
      "fn": "SafeMathMock.addMemoryCheck",
      "offset": [
        2185,
        2191
      ],
      "op": "DUP2",
      "path": "76"
    },
    "1560": {
      "fn": "SafeMathMock.addMemoryCheck",
      "offset": [
        2181,
        2182
      ],
      "op": "DUP2",
      "path": "76"
    },
    "1561": {
      "fn": "SafeMathMock.addMemoryCheck",
      "offset": [
        2181,
        2191
      ],
      "op": "LT",
      "path": "76"
    },
    "1562": {
      "fn": "SafeMathMock.addMemoryCheck",
      "offset": [
        2161,
        2221
      ],
      "op": "ISZERO",
      "path": "76"
    },
    "1563": {
      "fn": "SafeMathMock.addMemoryCheck",
      "offset": [
        2161,
        2221
      ],
      "op": "PUSH2",
      "path": "76",
      "value": "0x558"
    },
    "1566": {
      "fn": "SafeMathMock.addMemoryCheck",
      "offset": [
        2161,
        2221
      ],
      "op": "JUMPI",
      "path": "76"
    },
    "1567": {
      "fn": "SafeMathMock.addMemoryCheck",
      "offset": [
        2200,
        2218
      ],
      "op": "PUSH2",
      "path": "76",
      "statement": 18,
      "value": "0x629"
    },
    "1570": {
      "fn": "SafeMathMock.addMemoryCheck",
      "offset": [
        2213,
        2214
      ],
      "op": "PUSH1",
      "path": "76",
      "value": "0x1"
    },
    "1572": {
      "fn": "SafeMathMock.addMemoryCheck",
      "offset": [
        2216,
        2217
      ],
      "op": "DUP1",
      "path": "76"
    },
    "1573": {
      "fn": "SafeMathMock.addMemoryCheck",
      "offset": [
        2200,
        2212
      ],
      "op": "PUSH2",
      "path": "76",
      "value": "0xA12"
    },
    "1576": {
      "fn": "SafeMathMock.addMemoryCheck",
      "jump": "i",
      "offset": [
        2200,
        2218
      ],
      "op": "JUMP",
      "path": "76"
    },
    "1577": {
      "fn": "SafeMathMock.addMemoryCheck",
      "offset": [
        2200,
        2218
      ],
      "op": "JUMPDEST",
      "path": "76"
    },
    "1578": {
      "op": "POP"
    },
    "1579": {
      "fn": "SafeMathMock.addMemoryCheck",
      "offset": [
        2193,
        2196
      ],
      "op": "PUSH1",
      "path": "76",
      "statement": 19,
      "value": "0x1"
    },
    "1581": {
      "fn": "SafeMathMock.addMemoryCheck",
      "offset": [
        2193,
        2196
      ],
      "op": "ADD",
      "path": "76"
    },
    "1582": {
      "fn": "SafeMathMock.addMemoryCheck",
      "offset": [
        2161,
        2221
      ],
      "op": "PUSH2",
      "path": "76",
      "value": "0x616"
    },
    "1585": {
      "fn": "SafeMathMock.addMemoryCheck",
      "offset": [
        2161,
        2221
      ],
      "op": "JUMP",
      "path": "76"
    },
    "1586": {
      "fn": "SafeMathMock.subMemoryCheck",
      "offset": [
        2339,
        2706
      ],
      "op": "JUMPDEST",
      "path": "76"
    },
    "1587": {
      "fn": "SafeMathMock.subMemoryCheck",
      "offset": [
        2518,
        2522
      ],
      "op": "PUSH1",
      "path": "76",
      "value": "0x40"
    },
    "1589": {
      "fn": "SafeMathMock.subMemoryCheck",
      "offset": [
        2512,
        2523
      ],
      "op": "MLOAD",
      "path": "76"
    },
    "1590": {
      "fn": "SafeMathMock.subMemoryCheck",
      "offset": [
        2426,
        2428
      ],
      "op": "PUSH1",
      "path": "76",
      "value": "0x20"
    },
    "1592": {
      "fn": "SafeMathMock.subMemoryCheck",
      "offset": [
        2386,
        2397
      ],
      "op": "PUSH1",
      "path": "76",
      "value": "0x0"
    },
    "1594": {
      "fn": "SafeMathMock.subMemoryCheck",
      "offset": [
        2534,
        2594
      ],
      "op": "JUMPDEST",
      "path": "76"
    },
    "1595": {
      "fn": "SafeMathMock.subMemoryCheck",
      "offset": [
        2558,
        2564
      ],
      "op": "DUP2",
      "path": "76"
    },
    "1596": {
      "fn": "SafeMathMock.subMemoryCheck",
      "offset": [
        2554,
        2555
      ],
      "op": "DUP2",
      "path": "76"
    },
    "1597": {
      "fn": "SafeMathMock.subMemoryCheck",
      "offset": [
        2554,
        2564
      ],
      "op": "LT",
      "path": "76"
    },
    "1598": {
      "fn": "SafeMathMock.subMemoryCheck",
      "offset": [
        2534,
        2594
      ],
      "op": "ISZERO",
      "path": "76"
    },
    "1599": {
      "fn": "SafeMathMock.subMemoryCheck",
      "offset": [
        2534,
        2594
      ],
      "op": "PUSH2",
      "path": "76",
      "value": "0x558"
    },
    "1602": {
      "fn": "SafeMathMock.subMemoryCheck",
      "offset": [
        2534,
        2594
      ],
      "op": "JUMPI",
      "path": "76"
    },
    "1603": {
      "fn": "SafeMathMock.subMemoryCheck",
      "offset": [
        2573,
        2591
      ],
      "op": "PUSH2",
      "path": "76",
      "statement": 20,
      "value": "0x64D"
    },
    "1606": {
      "fn": "SafeMathMock.subMemoryCheck",
      "offset": [
        2586,
        2587
      ],
      "op": "PUSH1",
      "path": "76",
      "value": "0x1"
    },
    "1608": {
      "fn": "SafeMathMock.subMemoryCheck",
      "offset": [
        2589,
        2590
      ],
      "op": "DUP1",
      "path": "76"
    },
    "1609": {
      "fn": "SafeMathMock.subMemoryCheck",
      "offset": [
        2573,
        2585
      ],
      "op": "PUSH2",
      "path": "76",
      "value": "0x76B"
    },
    "1612": {
      "fn": "SafeMathMock.subMemoryCheck",
      "jump": "i",
      "offset": [
        2573,
        2591
      ],
      "op": "JUMP",
      "path": "76"
    },
    "1613": {
      "fn": "SafeMathMock.subMemoryCheck",
      "offset": [
        2573,
        2591
      ],
      "op": "JUMPDEST",
      "path": "76"
    },
    "1614": {
      "op": "POP"
    },
    "1615": {
      "fn": "SafeMathMock.subMemoryCheck",
      "offset": [
        2566,
        2569
      ],
      "op": "PUSH1",
      "path": "76",
      "statement": 21,
      "value": "0x1"
    },
    "1617": {
      "fn": "SafeMathMock.subMemoryCheck",
      "offset": [
        2566,
        2569
      ],
      "op": "ADD",
      "path": "76"
    },
    "1618": {
      "fn": "SafeMathMock.subMemoryCheck",
      "offset": [
        2534,
        2594
      ],
      "op": "PUSH2",
      "path": "76",
      "value": "0x63A"
    },
    "1621": {
      "fn": "SafeMathMock.subMemoryCheck",
      "offset": [
        2534,
        2594
      ],
      "op": "JUMP",
      "path": "76"
    },
    "1622": {
      "fn": "SafeMathMock.doDiv",
      "offset": [
        1238,
        1347
      ],
      "op": "JUMPDEST",
      "path": "76"
    },
    "1623": {
      "fn": "SafeMathMock.doDiv",
      "offset": [
        1296,
        1303
      ],
      "op": "PUSH1",
      "path": "76",
      "value": "0x0"
    },
    "1625": {
      "fn": "SafeMathMock.doDiv",
      "offset": [
        1322,
        1340
      ],
      "op": "PUSH2",
      "path": "76",
      "statement": 22,
      "value": "0x52B"
    },
    "1628": {
      "fn": "SafeMathMock.doDiv",
      "offset": [
        1335,
        1336
      ],
      "op": "DUP4",
      "path": "76"
    },
    "1629": {
      "fn": "SafeMathMock.doDiv",
      "offset": [
        1338,
        1339
      ],
      "op": "DUP4",
      "path": "76"
    },
    "1630": {
      "fn": "SafeMathMock.doDiv",
      "offset": [
        1322,
        1334
      ],
      "op": "PUSH2",
      "path": "76",
      "value": "0x9AB"
    },
    "1633": {
      "fn": "SafeMathMock.doDiv",
      "jump": "i",
      "offset": [
        1322,
        1340
      ],
      "op": "JUMP",
      "path": "76"
    },
    "1634": {
      "fn": "SafeMath.div",
      "offset": [
        6252,
        6414
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1635": {
      "fn": "SafeMath.div",
      "offset": [
        6338,
        6345
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "1637": {
      "fn": "SafeMath.div",
      "offset": [
        6372,
        6384
      ],
      "op": "DUP2",
      "path": "19",
      "statement": 23
    },
    "1638": {
      "branch": 48,
      "fn": "SafeMath.div",
      "offset": [
        6365,
        6370
      ],
      "op": "DUP4",
      "path": "19"
    },
    "1639": {
      "fn": "SafeMath.div",
      "offset": [
        6357,
        6385
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x6EE"
    },
    "1642": {
      "branch": 48,
      "fn": "SafeMath.div",
      "offset": [
        6357,
        6385
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "1643": {
      "fn": "SafeMath.div",
      "offset": [
        6357,
        6385
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "1645": {
      "fn": "SafeMath.div",
      "offset": [
        6357,
        6385
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "1646": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1650": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1652": {
      "op": "SHL"
    },
    "1653": {
      "fn": "SafeMath.div",
      "offset": [
        6357,
        6385
      ],
      "op": "DUP2",
      "path": "19"
    },
    "1654": {
      "fn": "SafeMath.div",
      "offset": [
        6357,
        6385
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "1655": {
      "fn": "SafeMath.div",
      "offset": [
        6357,
        6385
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "1657": {
      "fn": "SafeMath.div",
      "offset": [
        6357,
        6385
      ],
      "op": "ADD",
      "path": "19"
    },
    "1658": {
      "fn": "SafeMath.div",
      "offset": [
        6357,
        6385
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1659": {
      "fn": "SafeMath.div",
      "offset": [
        6357,
        6385
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1660": {
      "fn": "SafeMath.div",
      "offset": [
        6357,
        6385
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "1662": {
      "fn": "SafeMath.div",
      "offset": [
        6357,
        6385
      ],
      "op": "ADD",
      "path": "19"
    },
    "1663": {
      "fn": "SafeMath.div",
      "offset": [
        6357,
        6385
      ],
      "op": "DUP3",
      "path": "19"
    },
    "1664": {
      "fn": "SafeMath.div",
      "offset": [
        6357,
        6385
      ],
      "op": "DUP2",
      "path": "19"
    },
    "1665": {
      "fn": "SafeMath.div",
      "offset": [
        6357,
        6385
      ],
      "op": "SUB",
      "path": "19"
    },
    "1666": {
      "fn": "SafeMath.div",
      "offset": [
        6357,
        6385
      ],
      "op": "DUP3",
      "path": "19"
    },
    "1667": {
      "fn": "SafeMath.div",
      "offset": [
        6357,
        6385
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "1668": {
      "fn": "SafeMath.div",
      "offset": [
        6357,
        6385
      ],
      "op": "DUP4",
      "path": "19"
    },
    "1669": {
      "fn": "SafeMath.div",
      "offset": [
        6357,
        6385
      ],
      "op": "DUP2",
      "path": "19"
    },
    "1670": {
      "fn": "SafeMath.div",
      "offset": [
        6357,
        6385
      ],
      "op": "DUP2",
      "path": "19"
    },
    "1671": {
      "fn": "SafeMath.div",
      "offset": [
        6357,
        6385
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "1672": {
      "fn": "SafeMath.div",
      "offset": [
        6357,
        6385
      ],
      "op": "DUP2",
      "path": "19"
    },
    "1673": {
      "fn": "SafeMath.div",
      "offset": [
        6357,
        6385
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "1674": {
      "fn": "SafeMath.div",
      "offset": [
        6357,
        6385
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "1676": {
      "fn": "SafeMath.div",
      "offset": [
        6357,
        6385
      ],
      "op": "ADD",
      "path": "19"
    },
    "1677": {
      "fn": "SafeMath.div",
      "offset": [
        6357,
        6385
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "1678": {
      "fn": "SafeMath.div",
      "offset": [
        6357,
        6385
      ],
      "op": "POP",
      "path": "19"
    },
    "1679": {
      "fn": "SafeMath.div",
      "offset": [
        6357,
        6385
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1680": {
      "fn": "SafeMath.div",
      "offset": [
        6357,
        6385
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "1681": {
      "fn": "SafeMath.div",
      "offset": [
        6357,
        6385
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "1682": {
      "fn": "SafeMath.div",
      "offset": [
        6357,
        6385
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "1684": {
      "fn": "SafeMath.div",
      "offset": [
        6357,
        6385
      ],
      "op": "ADD",
      "path": "19"
    },
    "1685": {
      "fn": "SafeMath.div",
      "offset": [
        6357,
        6385
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "1686": {
      "fn": "SafeMath.div",
      "offset": [
        6357,
        6385
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1687": {
      "fn": "SafeMath.div",
      "offset": [
        6357,
        6385
      ],
      "op": "DUP4",
      "path": "19"
    },
    "1688": {
      "fn": "SafeMath.div",
      "offset": [
        6357,
        6385
      ],
      "op": "DUP4",
      "path": "19"
    },
    "1689": {
      "fn": "SafeMath.div",
      "offset": [
        6357,
        6385
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "1691": {
      "fn": "SafeMath.div",
      "offset": [
        6357,
        6385
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1692": {
      "fn": "SafeMath.div",
      "offset": [
        6357,
        6385
      ],
      "op": "DUP4",
      "path": "19"
    },
    "1693": {
      "fn": "SafeMath.div",
      "offset": [
        6357,
        6385
      ],
      "op": "DUP2",
      "path": "19"
    },
    "1694": {
      "fn": "SafeMath.div",
      "offset": [
        6357,
        6385
      ],
      "op": "LT",
      "path": "19"
    },
    "1695": {
      "fn": "SafeMath.div",
      "offset": [
        6357,
        6385
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "1696": {
      "fn": "SafeMath.div",
      "offset": [
        6357,
        6385
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x6B3"
    },
    "1699": {
      "fn": "SafeMath.div",
      "offset": [
        6357,
        6385
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "1700": {
      "fn": "SafeMath.div",
      "offset": [
        6357,
        6385
      ],
      "op": "DUP2",
      "path": "19"
    },
    "1701": {
      "fn": "SafeMath.div",
      "offset": [
        6357,
        6385
      ],
      "op": "DUP2",
      "path": "19"
    },
    "1702": {
      "fn": "SafeMath.div",
      "offset": [
        6357,
        6385
      ],
      "op": "ADD",
      "path": "19"
    },
    "1703": {
      "fn": "SafeMath.div",
      "offset": [
        6357,
        6385
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "1704": {
      "fn": "SafeMath.div",
      "offset": [
        6357,
        6385
      ],
      "op": "DUP4",
      "path": "19"
    },
    "1705": {
      "fn": "SafeMath.div",
      "offset": [
        6357,
        6385
      ],
      "op": "DUP3",
      "path": "19"
    },
    "1706": {
      "fn": "SafeMath.div",
      "offset": [
        6357,
        6385
      ],
      "op": "ADD",
      "path": "19"
    },
    "1707": {
      "fn": "SafeMath.div",
      "offset": [
        6357,
        6385
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "1708": {
      "fn": "SafeMath.div",
      "offset": [
        6357,
        6385
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "1710": {
      "fn": "SafeMath.div",
      "offset": [
        6357,
        6385
      ],
      "op": "ADD",
      "path": "19"
    },
    "1711": {
      "fn": "SafeMath.div",
      "offset": [
        6357,
        6385
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x69B"
    },
    "1714": {
      "fn": "SafeMath.div",
      "offset": [
        6357,
        6385
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1715": {
      "fn": "SafeMath.div",
      "offset": [
        6357,
        6385
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1716": {
      "fn": "SafeMath.div",
      "offset": [
        6357,
        6385
      ],
      "op": "POP",
      "path": "19"
    },
    "1717": {
      "fn": "SafeMath.div",
      "offset": [
        6357,
        6385
      ],
      "op": "POP",
      "path": "19"
    },
    "1718": {
      "fn": "SafeMath.div",
      "offset": [
        6357,
        6385
      ],
      "op": "POP",
      "path": "19"
    },
    "1719": {
      "fn": "SafeMath.div",
      "offset": [
        6357,
        6385
      ],
      "op": "POP",
      "path": "19"
    },
    "1720": {
      "fn": "SafeMath.div",
      "offset": [
        6357,
        6385
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "1721": {
      "fn": "SafeMath.div",
      "offset": [
        6357,
        6385
      ],
      "op": "POP",
      "path": "19"
    },
    "1722": {
      "fn": "SafeMath.div",
      "offset": [
        6357,
        6385
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "1723": {
      "fn": "SafeMath.div",
      "offset": [
        6357,
        6385
      ],
      "op": "DUP2",
      "path": "19"
    },
    "1724": {
      "fn": "SafeMath.div",
      "offset": [
        6357,
        6385
      ],
      "op": "ADD",
      "path": "19"
    },
    "1725": {
      "fn": "SafeMath.div",
      "offset": [
        6357,
        6385
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "1726": {
      "fn": "SafeMath.div",
      "offset": [
        6357,
        6385
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1F"
    },
    "1728": {
      "fn": "SafeMath.div",
      "offset": [
        6357,
        6385
      ],
      "op": "AND",
      "path": "19"
    },
    "1729": {
      "fn": "SafeMath.div",
      "offset": [
        6357,
        6385
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1730": {
      "fn": "SafeMath.div",
      "offset": [
        6357,
        6385
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "1731": {
      "fn": "SafeMath.div",
      "offset": [
        6357,
        6385
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x6E0"
    },
    "1734": {
      "fn": "SafeMath.div",
      "offset": [
        6357,
        6385
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "1735": {
      "fn": "SafeMath.div",
      "offset": [
        6357,
        6385
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1736": {
      "fn": "SafeMath.div",
      "offset": [
        6357,
        6385
      ],
      "op": "DUP3",
      "path": "19"
    },
    "1737": {
      "fn": "SafeMath.div",
      "offset": [
        6357,
        6385
      ],
      "op": "SUB",
      "path": "19"
    },
    "1738": {
      "fn": "SafeMath.div",
      "offset": [
        6357,
        6385
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1739": {
      "fn": "SafeMath.div",
      "offset": [
        6357,
        6385
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "1740": {
      "fn": "SafeMath.div",
      "offset": [
        6357,
        6385
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1"
    },
    "1742": {
      "fn": "SafeMath.div",
      "offset": [
        6357,
        6385
      ],
      "op": "DUP4",
      "path": "19"
    },
    "1743": {
      "fn": "SafeMath.div",
      "offset": [
        6357,
        6385
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "1745": {
      "fn": "SafeMath.div",
      "offset": [
        6357,
        6385
      ],
      "op": "SUB",
      "path": "19"
    },
    "1746": {
      "fn": "SafeMath.div",
      "offset": [
        6357,
        6385
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x100"
    },
    "1749": {
      "fn": "SafeMath.div",
      "offset": [
        6357,
        6385
      ],
      "op": "EXP",
      "path": "19"
    },
    "1750": {
      "fn": "SafeMath.div",
      "offset": [
        6357,
        6385
      ],
      "op": "SUB",
      "path": "19"
    },
    "1751": {
      "fn": "SafeMath.div",
      "offset": [
        6357,
        6385
      ],
      "op": "NOT",
      "path": "19"
    },
    "1752": {
      "fn": "SafeMath.div",
      "offset": [
        6357,
        6385
      ],
      "op": "AND",
      "path": "19"
    },
    "1753": {
      "fn": "SafeMath.div",
      "offset": [
        6357,
        6385
      ],
      "op": "DUP2",
      "path": "19"
    },
    "1754": {
      "fn": "SafeMath.div",
      "offset": [
        6357,
        6385
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "1755": {
      "fn": "SafeMath.div",
      "offset": [
        6357,
        6385
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "1757": {
      "fn": "SafeMath.div",
      "offset": [
        6357,
        6385
      ],
      "op": "ADD",
      "path": "19"
    },
    "1758": {
      "fn": "SafeMath.div",
      "offset": [
        6357,
        6385
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "1759": {
      "fn": "SafeMath.div",
      "offset": [
        6357,
        6385
      ],
      "op": "POP",
      "path": "19"
    },
    "1760": {
      "fn": "SafeMath.div",
      "offset": [
        6357,
        6385
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1761": {
      "fn": "SafeMath.div",
      "offset": [
        6357,
        6385
      ],
      "op": "POP",
      "path": "19"
    },
    "1762": {
      "fn": "SafeMath.div",
      "offset": [
        6357,
        6385
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "1763": {
      "fn": "SafeMath.div",
      "offset": [
        6357,
        6385
      ],
      "op": "POP",
      "path": "19"
    },
    "1764": {
      "fn": "SafeMath.div",
      "offset": [
        6357,
        6385
      ],
      "op": "POP",
      "path": "19"
    },
    "1765": {
      "fn": "SafeMath.div",
      "offset": [
        6357,
        6385
      ],
      "op": "POP",
      "path": "19"
    },
    "1766": {
      "fn": "SafeMath.div",
      "offset": [
        6357,
        6385
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "1768": {
      "fn": "SafeMath.div",
      "offset": [
        6357,
        6385
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "1769": {
      "fn": "SafeMath.div",
      "offset": [
        6357,
        6385
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1770": {
      "fn": "SafeMath.div",
      "offset": [
        6357,
        6385
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "1771": {
      "fn": "SafeMath.div",
      "offset": [
        6357,
        6385
      ],
      "op": "SUB",
      "path": "19"
    },
    "1772": {
      "fn": "SafeMath.div",
      "offset": [
        6357,
        6385
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "1773": {
      "fn": "SafeMath.div",
      "offset": [
        6357,
        6385
      ],
      "op": "REVERT",
      "path": "19"
    },
    "1774": {
      "fn": "SafeMath.div",
      "offset": [
        6357,
        6385
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1775": {
      "fn": "SafeMath.div",
      "offset": [
        6357,
        6385
      ],
      "op": "POP",
      "path": "19"
    },
    "1776": {
      "fn": "SafeMath.div",
      "offset": [
        6406,
        6407
      ],
      "op": "DUP3",
      "path": "19",
      "statement": 24
    },
    "1777": {
      "fn": "SafeMath.div",
      "offset": [
        6402,
        6403
      ],
      "op": "DUP5",
      "path": "19"
    },
    "1778": {
      "fn": "SafeMath.div",
      "offset": [
        6402,
        6407
      ],
      "op": "DUP2",
      "path": "19"
    },
    "1779": {
      "fn": "SafeMath.div",
      "offset": [
        6402,
        6407
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x6F8"
    },
    "1782": {
      "fn": "SafeMath.div",
      "offset": [
        6402,
        6407
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "1783": {
      "dev": "Division by zero",
      "fn": "SafeMath.div",
      "offset": [
        6402,
        6407
      ],
      "op": "INVALID",
      "path": "19"
    },
    "1784": {
      "fn": "SafeMath.div",
      "offset": [
        6402,
        6407
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1785": {
      "fn": "SafeMath.div",
      "offset": [
        6402,
        6407
      ],
      "op": "DIV",
      "path": "19"
    },
    "1786": {
      "fn": "SafeMath.div",
      "offset": [
        6402,
        6407
      ],
      "op": "SWAP5",
      "path": "19"
    },
    "1787": {
      "fn": "SafeMath.div",
      "offset": [
        6252,
        6414
      ],
      "op": "SWAP4",
      "path": "19"
    },
    "1788": {
      "op": "POP"
    },
    "1789": {
      "op": "POP"
    },
    "1790": {
      "op": "POP"
    },
    "1791": {
      "op": "POP"
    },
    "1792": {
      "fn": "SafeMath.div",
      "jump": "o",
      "offset": [
        6252,
        6414
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1793": {
      "fn": "SafeMath.tryMod",
      "offset": [
        2303,
        2455
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1794": {
      "fn": "SafeMath.tryMod",
      "offset": [
        2364,
        2368
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "1796": {
      "fn": "SafeMath.tryMod",
      "offset": [
        2364,
        2368
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1797": {
      "branch": 49,
      "fn": "SafeMath.tryMod",
      "offset": [
        2393,
        2399
      ],
      "op": "DUP3",
      "path": "19"
    },
    "1798": {
      "fn": "SafeMath.tryMod",
      "offset": [
        2389,
        2418
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x714"
    },
    "1801": {
      "branch": 49,
      "fn": "SafeMath.tryMod",
      "offset": [
        2389,
        2418
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "1802": {
      "op": "POP"
    },
    "1803": {
      "fn": "SafeMath.tryMod",
      "offset": [
        2409,
        2414
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 25,
      "value": "0x0"
    },
    "1805": {
      "fn": "SafeMath.tryMod",
      "offset": [
        2409,
        2414
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "1806": {
      "op": "POP"
    },
    "1807": {
      "fn": "SafeMath.tryMod",
      "offset": [
        2409,
        2414
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1808": {
      "fn": "SafeMath.tryMod",
      "offset": [
        2401,
        2418
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x50B"
    },
    "1811": {
      "fn": "SafeMath.tryMod",
      "offset": [
        2401,
        2418
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1812": {
      "fn": "SafeMath.tryMod",
      "offset": [
        2389,
        2418
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1813": {
      "fn": "SafeMath.tryMod",
      "offset": [
        2436,
        2440
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 26,
      "value": "0x1"
    },
    "1815": {
      "fn": "SafeMath.tryMod",
      "offset": [
        2446,
        2447
      ],
      "op": "DUP4",
      "path": "19"
    },
    "1816": {
      "fn": "SafeMath.tryMod",
      "offset": [
        2442,
        2443
      ],
      "op": "DUP6",
      "path": "19"
    },
    "1817": {
      "fn": "SafeMath.tryMod",
      "offset": [
        2442,
        2447
      ],
      "op": "DUP2",
      "path": "19"
    },
    "1818": {
      "fn": "SafeMath.tryMod",
      "offset": [
        2442,
        2447
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x71F"
    },
    "1821": {
      "fn": "SafeMath.tryMod",
      "offset": [
        2442,
        2447
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "1822": {
      "dev": "Modulus by zero",
      "fn": "SafeMath.tryMod",
      "offset": [
        2442,
        2447
      ],
      "op": "INVALID",
      "path": "19"
    },
    "1823": {
      "fn": "SafeMath.tryMod",
      "offset": [
        2442,
        2447
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1824": {
      "fn": "SafeMath.tryMod",
      "offset": [
        2442,
        2447
      ],
      "op": "MOD",
      "path": "19"
    },
    "1825": {
      "fn": "SafeMath.tryMod",
      "offset": [
        2428,
        2448
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "1826": {
      "fn": "SafeMath.tryMod",
      "offset": [
        2428,
        2448
      ],
      "op": "POP",
      "path": "19"
    },
    "1827": {
      "fn": "SafeMath.tryMod",
      "offset": [
        2428,
        2448
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "1828": {
      "fn": "SafeMath.tryMod",
      "offset": [
        2428,
        2448
      ],
      "op": "POP",
      "path": "19"
    },
    "1829": {
      "fn": "SafeMath.tryMod",
      "offset": [
        2303,
        2455
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "1830": {
      "fn": "SafeMath.tryMod",
      "offset": [
        2303,
        2455
      ],
      "op": "POP",
      "path": "19"
    },
    "1831": {
      "fn": "SafeMath.tryMod",
      "offset": [
        2303,
        2455
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "1832": {
      "fn": "SafeMath.tryMod",
      "offset": [
        2303,
        2455
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "1833": {
      "fn": "SafeMath.tryMod",
      "offset": [
        2303,
        2455
      ],
      "op": "POP",
      "path": "19"
    },
    "1834": {
      "fn": "SafeMath.tryMod",
      "jump": "o",
      "offset": [
        2303,
        2455
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1835": {
      "fn": "SafeMath.tryMul",
      "offset": [
        1408,
        1843
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1836": {
      "fn": "SafeMath.tryMul",
      "offset": [
        1469,
        1473
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "1838": {
      "fn": "SafeMath.tryMul",
      "offset": [
        1469,
        1473
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1839": {
      "branch": 50,
      "fn": "SafeMath.tryMul",
      "offset": [
        1716,
        1722
      ],
      "op": "DUP4",
      "path": "19"
    },
    "1840": {
      "fn": "SafeMath.tryMul",
      "offset": [
        1712,
        1740
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x73F"
    },
    "1843": {
      "branch": 50,
      "fn": "SafeMath.tryMul",
      "offset": [
        1712,
        1740
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "1844": {
      "op": "POP"
    },
    "1845": {
      "fn": "SafeMath.tryMul",
      "offset": [
        1732,
        1736
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 27,
      "value": "0x1"
    },
    "1847": {
      "fn": "SafeMath.tryMul",
      "offset": [
        1732,
        1736
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "1848": {
      "op": "POP"
    },
    "1849": {
      "fn": "SafeMath.tryMul",
      "offset": [
        1738,
        1739
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "1851": {
      "fn": "SafeMath.tryMul",
      "offset": [
        1724,
        1740
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x50B"
    },
    "1854": {
      "fn": "SafeMath.tryMul",
      "offset": [
        1724,
        1740
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1855": {
      "fn": "SafeMath.tryMul",
      "offset": [
        1712,
        1740
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1856": {
      "fn": "SafeMath.tryMul",
      "offset": [
        1762,
        1767
      ],
      "op": "DUP4",
      "path": "19"
    },
    "1857": {
      "fn": "SafeMath.tryMul",
      "offset": [
        1762,
        1767
      ],
      "op": "DUP4",
      "path": "19"
    },
    "1858": {
      "fn": "SafeMath.tryMul",
      "offset": [
        1762,
        1767
      ],
      "op": "MUL",
      "path": "19"
    },
    "1859": {
      "fn": "SafeMath.tryMul",
      "offset": [
        1766,
        1767
      ],
      "op": "DUP4",
      "path": "19"
    },
    "1860": {
      "fn": "SafeMath.tryMul",
      "offset": [
        1762,
        1763
      ],
      "op": "DUP6",
      "path": "19"
    },
    "1861": {
      "fn": "SafeMath.tryMul",
      "offset": [
        1762,
        1767
      ],
      "op": "DUP3",
      "path": "19"
    },
    "1862": {
      "fn": "SafeMath.tryMul",
      "offset": [
        1762,
        1763
      ],
      "op": "DUP2",
      "path": "19"
    },
    "1863": {
      "fn": "SafeMath.tryMul",
      "offset": [
        1781,
        1786
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x74C"
    },
    "1866": {
      "fn": "SafeMath.tryMul",
      "offset": [
        1781,
        1786
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "1867": {
      "dev": "Division by zero",
      "fn": "SafeMath.tryMul",
      "offset": [
        1781,
        1786
      ],
      "op": "INVALID",
      "path": "19"
    },
    "1868": {
      "fn": "SafeMath.tryMul",
      "offset": [
        1781,
        1786
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1869": {
      "fn": "SafeMath.tryMul",
      "offset": [
        1781,
        1786
      ],
      "op": "DIV",
      "path": "19"
    },
    "1870": {
      "branch": 51,
      "fn": "SafeMath.tryMul",
      "offset": [
        1781,
        1791
      ],
      "op": "EQ",
      "path": "19"
    },
    "1871": {
      "fn": "SafeMath.tryMul",
      "offset": [
        1777,
        1810
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x75F"
    },
    "1874": {
      "branch": 51,
      "fn": "SafeMath.tryMul",
      "offset": [
        1777,
        1810
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "1875": {
      "fn": "SafeMath.tryMul",
      "offset": [
        1801,
        1806
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 28,
      "value": "0x0"
    },
    "1877": {
      "fn": "SafeMath.tryMul",
      "offset": [
        1808,
        1809
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1878": {
      "fn": "SafeMath.tryMul",
      "offset": [
        1793,
        1810
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "1879": {
      "fn": "SafeMath.tryMul",
      "offset": [
        1793,
        1810
      ],
      "op": "POP",
      "path": "19"
    },
    "1880": {
      "fn": "SafeMath.tryMul",
      "offset": [
        1793,
        1810
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "1881": {
      "fn": "SafeMath.tryMul",
      "offset": [
        1793,
        1810
      ],
      "op": "POP",
      "path": "19"
    },
    "1882": {
      "fn": "SafeMath.tryMul",
      "offset": [
        1793,
        1810
      ],
      "op": "POP",
      "path": "19"
    },
    "1883": {
      "fn": "SafeMath.tryMul",
      "offset": [
        1793,
        1810
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x50B"
    },
    "1886": {
      "fn": "SafeMath.tryMul",
      "offset": [
        1793,
        1810
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1887": {
      "fn": "SafeMath.tryMul",
      "offset": [
        1777,
        1810
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1888": {
      "fn": "SafeMath.tryMul",
      "offset": [
        1828,
        1832
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 29,
      "value": "0x1"
    },
    "1890": {
      "fn": "SafeMath.tryMul",
      "offset": [
        1828,
        1832
      ],
      "op": "SWAP6",
      "path": "19"
    },
    "1891": {
      "fn": "SafeMath.tryMul",
      "offset": [
        1834,
        1835
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "1892": {
      "fn": "SafeMath.tryMul",
      "offset": [
        1834,
        1835
      ],
      "op": "SWAP5",
      "path": "19"
    },
    "1893": {
      "op": "POP"
    },
    "1894": {
      "fn": "SafeMath.tryMul",
      "offset": [
        1408,
        1843
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "1895": {
      "op": "POP"
    },
    "1896": {
      "op": "POP"
    },
    "1897": {
      "op": "POP"
    },
    "1898": {
      "fn": "SafeMath.tryMul",
      "jump": "o",
      "offset": [
        1408,
        1843
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1899": {
      "fn": "SafeMath.sub",
      "offset": [
        3136,
        3291
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1900": {
      "fn": "SafeMath.sub",
      "offset": [
        3194,
        3201
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "1902": {
      "fn": "SafeMath.sub",
      "offset": [
        3226,
        3227
      ],
      "op": "DUP3",
      "path": "19",
      "statement": 30
    },
    "1903": {
      "fn": "SafeMath.sub",
      "offset": [
        3221,
        3222
      ],
      "op": "DUP3",
      "path": "19"
    },
    "1904": {
      "fn": "SafeMath.sub",
      "offset": [
        3221,
        3227
      ],
      "op": "GT",
      "path": "19"
    },
    "1905": {
      "branch": 52,
      "fn": "SafeMath.sub",
      "offset": [
        3221,
        3227
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "1906": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x7C2"
    },
    "1909": {
      "branch": 52,
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "1910": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "1912": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1913": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "1914": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1918": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1920": {
      "op": "SHL"
    },
    "1921": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "DUP2",
      "path": "19"
    },
    "1922": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "1923": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "1925": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "1927": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "DUP3",
      "path": "19"
    },
    "1928": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "ADD",
      "path": "19"
    },
    "1929": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "1930": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1E"
    },
    "1932": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x24"
    },
    "1934": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "DUP3",
      "path": "19"
    },
    "1935": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "ADD",
      "path": "19"
    },
    "1936": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "1937": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "PUSH32",
      "path": "19",
      "value": "0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000"
    },
    "1970": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x44"
    },
    "1972": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "DUP3",
      "path": "19"
    },
    "1973": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "ADD",
      "path": "19"
    },
    "1974": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "1975": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "1976": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "1977": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "1978": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "DUP2",
      "path": "19"
    },
    "1979": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "1980": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "SUB",
      "path": "19"
    },
    "1981": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x64"
    },
    "1983": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "ADD",
      "path": "19"
    },
    "1984": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "1985": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "REVERT",
      "path": "19"
    },
    "1986": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1987": {
      "op": "POP"
    },
    "1988": {
      "fn": "SafeMath.sub",
      "offset": [
        3279,
        3284
      ],
      "op": "SWAP1",
      "path": "19",
      "statement": 31
    },
    "1989": {
      "fn": "SafeMath.sub",
      "offset": [
        3279,
        3284
      ],
      "op": "SUB",
      "path": "19"
    },
    "1990": {
      "fn": "SafeMath.sub",
      "offset": [
        3279,
        3284
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "1991": {
      "fn": "SafeMath.sub",
      "jump": "o",
      "offset": [
        3136,
        3291
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1992": {
      "fn": "SafeMath.mod",
      "offset": [
        4820,
        4968
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1993": {
      "fn": "SafeMath.mod",
      "offset": [
        4878,
        4885
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "1995": {
      "fn": "SafeMath.mod",
      "offset": [
        4909,
        4910
      ],
      "op": "DUP1",
      "path": "19",
      "statement": 32
    },
    "1996": {
      "fn": "SafeMath.mod",
      "offset": [
        4905,
        4906
      ],
      "op": "DUP3",
      "path": "19"
    },
    "1997": {
      "branch": 53,
      "fn": "SafeMath.mod",
      "offset": [
        4905,
        4910
      ],
      "op": "GT",
      "path": "19"
    },
    "1998": {
      "fn": "SafeMath.mod",
      "offset": [
        4897,
        4939
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x81E"
    },
    "2001": {
      "branch": 53,
      "fn": "SafeMath.mod",
      "offset": [
        4897,
        4939
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "2002": {
      "fn": "SafeMath.mod",
      "offset": [
        4897,
        4939
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "2004": {
      "fn": "SafeMath.mod",
      "offset": [
        4897,
        4939
      ],
      "op": "DUP1",
      "path": "19"
    },
    "2005": {
      "fn": "SafeMath.mod",
      "offset": [
        4897,
        4939
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "2006": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2010": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2012": {
      "op": "SHL"
    },
    "2013": {
      "fn": "SafeMath.mod",
      "offset": [
        4897,
        4939
      ],
      "op": "DUP2",
      "path": "19"
    },
    "2014": {
      "fn": "SafeMath.mod",
      "offset": [
        4897,
        4939
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "2015": {
      "fn": "SafeMath.mod",
      "offset": [
        4897,
        4939
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "2017": {
      "fn": "SafeMath.mod",
      "offset": [
        4897,
        4939
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "2019": {
      "fn": "SafeMath.mod",
      "offset": [
        4897,
        4939
      ],
      "op": "DUP3",
      "path": "19"
    },
    "2020": {
      "fn": "SafeMath.mod",
      "offset": [
        4897,
        4939
      ],
      "op": "ADD",
      "path": "19"
    },
    "2021": {
      "fn": "SafeMath.mod",
      "offset": [
        4897,
        4939
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "2022": {
      "fn": "SafeMath.mod",
      "offset": [
        4897,
        4939
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x18"
    },
    "2024": {
      "fn": "SafeMath.mod",
      "offset": [
        4897,
        4939
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x24"
    },
    "2026": {
      "fn": "SafeMath.mod",
      "offset": [
        4897,
        4939
      ],
      "op": "DUP3",
      "path": "19"
    },
    "2027": {
      "fn": "SafeMath.mod",
      "offset": [
        4897,
        4939
      ],
      "op": "ADD",
      "path": "19"
    },
    "2028": {
      "fn": "SafeMath.mod",
      "offset": [
        4897,
        4939
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "2029": {
      "fn": "SafeMath.mod",
      "offset": [
        4897,
        4939
      ],
      "op": "PUSH32",
      "path": "19",
      "value": "0x536166654D6174683A206D6F64756C6F206279207A65726F0000000000000000"
    },
    "2062": {
      "fn": "SafeMath.mod",
      "offset": [
        4897,
        4939
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x44"
    },
    "2064": {
      "fn": "SafeMath.mod",
      "offset": [
        4897,
        4939
      ],
      "op": "DUP3",
      "path": "19"
    },
    "2065": {
      "fn": "SafeMath.mod",
      "offset": [
        4897,
        4939
      ],
      "op": "ADD",
      "path": "19"
    },
    "2066": {
      "fn": "SafeMath.mod",
      "offset": [
        4897,
        4939
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "2067": {
      "fn": "SafeMath.mod",
      "offset": [
        4897,
        4939
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "2068": {
      "fn": "SafeMath.mod",
      "offset": [
        4897,
        4939
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "2069": {
      "fn": "SafeMath.mod",
      "offset": [
        4897,
        4939
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "2070": {
      "fn": "SafeMath.mod",
      "offset": [
        4897,
        4939
      ],
      "op": "DUP2",
      "path": "19"
    },
    "2071": {
      "fn": "SafeMath.mod",
      "offset": [
        4897,
        4939
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "2072": {
      "fn": "SafeMath.mod",
      "offset": [
        4897,
        4939
      ],
      "op": "SUB",
      "path": "19"
    },
    "2073": {
      "fn": "SafeMath.mod",
      "offset": [
        4897,
        4939
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x64"
    },
    "2075": {
      "fn": "SafeMath.mod",
      "offset": [
        4897,
        4939
      ],
      "op": "ADD",
      "path": "19"
    },
    "2076": {
      "fn": "SafeMath.mod",
      "offset": [
        4897,
        4939
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "2077": {
      "fn": "SafeMath.mod",
      "offset": [
        4897,
        4939
      ],
      "op": "REVERT",
      "path": "19"
    },
    "2078": {
      "fn": "SafeMath.mod",
      "offset": [
        4897,
        4939
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "2079": {
      "fn": "SafeMath.mod",
      "offset": [
        4960,
        4961
      ],
      "op": "DUP2",
      "path": "19",
      "statement": 33
    },
    "2080": {
      "fn": "SafeMath.mod",
      "offset": [
        4956,
        4957
      ],
      "op": "DUP4",
      "path": "19"
    },
    "2081": {
      "fn": "SafeMath.mod",
      "offset": [
        4956,
        4961
      ],
      "op": "DUP2",
      "path": "19"
    },
    "2082": {
      "fn": "SafeMath.mod",
      "offset": [
        4956,
        4961
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x827"
    },
    "2085": {
      "fn": "SafeMath.mod",
      "offset": [
        4956,
        4961
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "2086": {
      "dev": "Modulus by zero",
      "fn": "SafeMath.mod",
      "offset": [
        4956,
        4961
      ],
      "op": "INVALID",
      "path": "19"
    },
    "2087": {
      "fn": "SafeMath.mod",
      "offset": [
        4956,
        4961
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "2088": {
      "fn": "SafeMath.mod",
      "offset": [
        4956,
        4961
      ],
      "op": "MOD",
      "path": "19"
    },
    "2089": {
      "fn": "SafeMath.mod",
      "offset": [
        4956,
        4961
      ],
      "op": "SWAP4",
      "path": "19"
    },
    "2090": {
      "fn": "SafeMath.mod",
      "offset": [
        4820,
        4968
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "2091": {
      "op": "POP"
    },
    "2092": {
      "op": "POP"
    },
    "2093": {
      "op": "POP"
    },
    "2094": {
      "fn": "SafeMath.mod",
      "jump": "o",
      "offset": [
        4820,
        4968
      ],
      "op": "JUMP",
      "path": "19"
    },
    "2095": {
      "fn": "SafeMath.tryDiv",
      "offset": [
        1992,
        2144
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "2096": {
      "fn": "SafeMath.tryDiv",
      "offset": [
        2053,
        2057
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "2098": {
      "fn": "SafeMath.tryDiv",
      "offset": [
        2053,
        2057
      ],
      "op": "DUP1",
      "path": "19"
    },
    "2099": {
      "branch": 54,
      "fn": "SafeMath.tryDiv",
      "offset": [
        2082,
        2088
      ],
      "op": "DUP3",
      "path": "19"
    },
    "2100": {
      "fn": "SafeMath.tryDiv",
      "offset": [
        2078,
        2107
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x842"
    },
    "2103": {
      "branch": 54,
      "fn": "SafeMath.tryDiv",
      "offset": [
        2078,
        2107
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "2104": {
      "op": "POP"
    },
    "2105": {
      "fn": "SafeMath.tryDiv",
      "offset": [
        2098,
        2103
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 34,
      "value": "0x0"
    },
    "2107": {
      "fn": "SafeMath.tryDiv",
      "offset": [
        2098,
        2103
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "2108": {
      "op": "POP"
    },
    "2109": {
      "fn": "SafeMath.tryDiv",
      "offset": [
        2098,
        2103
      ],
      "op": "DUP1",
      "path": "19"
    },
    "2110": {
      "fn": "SafeMath.tryDiv",
      "offset": [
        2090,
        2107
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x50B"
    },
    "2113": {
      "fn": "SafeMath.tryDiv",
      "offset": [
        2090,
        2107
      ],
      "op": "JUMP",
      "path": "19"
    },
    "2114": {
      "fn": "SafeMath.tryDiv",
      "offset": [
        2078,
        2107
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "2115": {
      "fn": "SafeMath.tryDiv",
      "offset": [
        2125,
        2129
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 35,
      "value": "0x1"
    },
    "2117": {
      "fn": "SafeMath.tryDiv",
      "offset": [
        2135,
        2136
      ],
      "op": "DUP4",
      "path": "19"
    },
    "2118": {
      "fn": "SafeMath.tryDiv",
      "offset": [
        2131,
        2132
      ],
      "op": "DUP6",
      "path": "19"
    },
    "2119": {
      "fn": "SafeMath.tryDiv",
      "offset": [
        2131,
        2136
      ],
      "op": "DUP2",
      "path": "19"
    },
    "2120": {
      "fn": "SafeMath.tryDiv",
      "offset": [
        2131,
        2136
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x84D"
    },
    "2123": {
      "fn": "SafeMath.tryDiv",
      "offset": [
        2131,
        2136
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "2124": {
      "dev": "Division by zero",
      "fn": "SafeMath.tryDiv",
      "offset": [
        2131,
        2136
      ],
      "op": "INVALID",
      "path": "19"
    },
    "2125": {
      "fn": "SafeMath.tryDiv",
      "offset": [
        2131,
        2136
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "2126": {
      "fn": "SafeMath.tryDiv",
      "offset": [
        2131,
        2136
      ],
      "op": "DIV",
      "path": "19"
    },
    "2127": {
      "fn": "SafeMath.tryDiv",
      "offset": [
        2117,
        2137
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "2128": {
      "fn": "SafeMath.tryDiv",
      "offset": [
        2117,
        2137
      ],
      "op": "POP",
      "path": "19"
    },
    "2129": {
      "fn": "SafeMath.tryDiv",
      "offset": [
        2117,
        2137
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "2130": {
      "fn": "SafeMath.tryDiv",
      "offset": [
        2117,
        2137
      ],
      "op": "POP",
      "path": "19"
    },
    "2131": {
      "fn": "SafeMath.tryDiv",
      "offset": [
        1992,
        2144
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "2132": {
      "fn": "SafeMath.tryDiv",
      "offset": [
        1992,
        2144
      ],
      "op": "POP",
      "path": "19"
    },
    "2133": {
      "fn": "SafeMath.tryDiv",
      "offset": [
        1992,
        2144
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "2134": {
      "fn": "SafeMath.tryDiv",
      "offset": [
        1992,
        2144
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "2135": {
      "fn": "SafeMath.tryDiv",
      "offset": [
        1992,
        2144
      ],
      "op": "POP",
      "path": "19"
    },
    "2136": {
      "fn": "SafeMath.tryDiv",
      "jump": "o",
      "offset": [
        1992,
        2144
      ],
      "op": "JUMP",
      "path": "19"
    },
    "2137": {
      "fn": "SafeMath.mul",
      "offset": [
        3538,
        3753
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "2138": {
      "fn": "SafeMath.mul",
      "offset": [
        3596,
        3603
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "2140": {
      "branch": 55,
      "fn": "SafeMath.mul",
      "offset": [
        3619,
        3625
      ],
      "op": "DUP3",
      "path": "19"
    },
    "2141": {
      "fn": "SafeMath.mul",
      "offset": [
        3615,
        3635
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x868"
    },
    "2144": {
      "branch": 55,
      "fn": "SafeMath.mul",
      "offset": [
        3615,
        3635
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "2145": {
      "op": "POP"
    },
    "2146": {
      "fn": "SafeMath.mul",
      "offset": [
        3634,
        3635
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 36,
      "value": "0x0"
    },
    "2148": {
      "fn": "SafeMath.mul",
      "offset": [
        3627,
        3635
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x52E"
    },
    "2151": {
      "fn": "SafeMath.mul",
      "offset": [
        3627,
        3635
      ],
      "op": "JUMP",
      "path": "19"
    },
    "2152": {
      "fn": "SafeMath.mul",
      "offset": [
        3615,
        3635
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "2153": {
      "fn": "SafeMath.mul",
      "offset": [
        3657,
        3662
      ],
      "op": "DUP3",
      "path": "19"
    },
    "2154": {
      "fn": "SafeMath.mul",
      "offset": [
        3657,
        3662
      ],
      "op": "DUP3",
      "path": "19"
    },
    "2155": {
      "fn": "SafeMath.mul",
      "offset": [
        3657,
        3662
      ],
      "op": "MUL",
      "path": "19"
    },
    "2156": {
      "fn": "SafeMath.mul",
      "offset": [
        3661,
        3662
      ],
      "op": "DUP3",
      "path": "19"
    },
    "2157": {
      "fn": "SafeMath.mul",
      "offset": [
        3657,
        3658
      ],
      "op": "DUP5",
      "path": "19"
    },
    "2158": {
      "fn": "SafeMath.mul",
      "offset": [
        3657,
        3662
      ],
      "op": "DUP3",
      "path": "19"
    },
    "2159": {
      "fn": "SafeMath.mul",
      "offset": [
        3657,
        3658
      ],
      "op": "DUP2",
      "path": "19"
    },
    "2160": {
      "fn": "SafeMath.mul",
      "offset": [
        3680,
        3685
      ],
      "op": "PUSH2",
      "path": "19",
      "statement": 37,
      "value": "0x875"
    },
    "2163": {
      "fn": "SafeMath.mul",
      "offset": [
        3680,
        3685
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "2164": {
      "dev": "Division by zero",
      "fn": "SafeMath.mul",
      "offset": [
        3680,
        3685
      ],
      "op": "INVALID",
      "path": "19"
    },
    "2165": {
      "fn": "SafeMath.mul",
      "offset": [
        3680,
        3685
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "2166": {
      "fn": "SafeMath.mul",
      "offset": [
        3680,
        3685
      ],
      "op": "DIV",
      "path": "19"
    },
    "2167": {
      "branch": 56,
      "fn": "SafeMath.mul",
      "offset": [
        3680,
        3690
      ],
      "op": "EQ",
      "path": "19"
    },
    "2168": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x52B"
    },
    "2171": {
      "branch": 56,
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "2172": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "2174": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "2175": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2179": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2181": {
      "op": "SHL"
    },
    "2182": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "DUP2",
      "path": "19"
    },
    "2183": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "2184": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "2186": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "ADD",
      "path": "19"
    },
    "2187": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "DUP1",
      "path": "19"
    },
    "2188": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "DUP1",
      "path": "19"
    },
    "2189": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "2191": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "ADD",
      "path": "19"
    },
    "2192": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "DUP3",
      "path": "19"
    },
    "2193": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "DUP2",
      "path": "19"
    },
    "2194": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "SUB",
      "path": "19"
    },
    "2195": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "DUP3",
      "path": "19"
    },
    "2196": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "2197": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x21"
    },
    "2199": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "DUP2",
      "path": "19"
    },
    "2200": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "2201": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "2203": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "ADD",
      "path": "19"
    },
    "2204": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "DUP1",
      "path": "19"
    },
    "2205": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xA6D"
    },
    "2208": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x21"
    },
    "2210": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "2211": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "CODECOPY",
      "path": "19"
    },
    "2212": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "2214": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "ADD",
      "path": "19"
    },
    "2215": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "2216": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "POP",
      "path": "19"
    },
    "2217": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "POP",
      "path": "19"
    },
    "2218": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "2220": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "2221": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "DUP1",
      "path": "19"
    },
    "2222": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "2223": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "SUB",
      "path": "19"
    },
    "2224": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "2225": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "REVERT",
      "path": "19"
    },
    "2226": {
      "fn": "SafeMath.tryAdd",
      "offset": [
        789,
        963
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "2227": {
      "fn": "SafeMath.tryAdd",
      "offset": [
        850,
        854
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "2229": {
      "fn": "SafeMath.tryAdd",
      "offset": [
        850,
        854
      ],
      "op": "DUP1",
      "path": "19"
    },
    "2230": {
      "fn": "SafeMath.tryAdd",
      "offset": [
        887,
        892
      ],
      "op": "DUP4",
      "path": "19"
    },
    "2231": {
      "fn": "SafeMath.tryAdd",
      "offset": [
        887,
        892
      ],
      "op": "DUP4",
      "path": "19"
    },
    "2232": {
      "fn": "SafeMath.tryAdd",
      "offset": [
        887,
        892
      ],
      "op": "ADD",
      "path": "19"
    },
    "2233": {
      "fn": "SafeMath.tryAdd",
      "offset": [
        906,
        911
      ],
      "op": "DUP5",
      "path": "19"
    },
    "2234": {
      "fn": "SafeMath.tryAdd",
      "offset": [
        906,
        911
      ],
      "op": "DUP2",
      "path": "19"
    },
    "2235": {
      "branch": 57,
      "fn": "SafeMath.tryAdd",
      "offset": [
        906,
        911
      ],
      "op": "LT",
      "path": "19"
    },
    "2236": {
      "fn": "SafeMath.tryAdd",
      "offset": [
        902,
        930
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "2237": {
      "fn": "SafeMath.tryAdd",
      "offset": [
        902,
        930
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x75F"
    },
    "2240": {
      "branch": 57,
      "fn": "SafeMath.tryAdd",
      "offset": [
        902,
        930
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "2241": {
      "fn": "SafeMath.tryAdd",
      "offset": [
        921,
        926
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 38,
      "value": "0x0"
    },
    "2243": {
      "fn": "SafeMath.tryAdd",
      "offset": [
        928,
        929
      ],
      "op": "DUP1",
      "path": "19"
    },
    "2244": {
      "fn": "SafeMath.tryAdd",
      "offset": [
        913,
        930
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "2245": {
      "fn": "SafeMath.tryAdd",
      "offset": [
        913,
        930
      ],
      "op": "POP",
      "path": "19"
    },
    "2246": {
      "fn": "SafeMath.tryAdd",
      "offset": [
        913,
        930
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "2247": {
      "fn": "SafeMath.tryAdd",
      "offset": [
        913,
        930
      ],
      "op": "POP",
      "path": "19"
    },
    "2248": {
      "fn": "SafeMath.tryAdd",
      "offset": [
        913,
        930
      ],
      "op": "POP",
      "path": "19"
    },
    "2249": {
      "fn": "SafeMath.tryAdd",
      "offset": [
        913,
        930
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x50B"
    },
    "2252": {
      "fn": "SafeMath.tryAdd",
      "offset": [
        913,
        930
      ],
      "op": "JUMP",
      "path": "19"
    },
    "2253": {
      "fn": "SafeMath.sub",
      "offset": [
        5432,
        5595
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "2254": {
      "fn": "SafeMath.sub",
      "offset": [
        5518,
        5525
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "2256": {
      "fn": "SafeMath.sub",
      "offset": [
        5553,
        5565
      ],
      "op": "DUP2",
      "path": "19",
      "statement": 39
    },
    "2257": {
      "fn": "SafeMath.sub",
      "offset": [
        5545,
        5551
      ],
      "op": "DUP5",
      "path": "19"
    },
    "2258": {
      "fn": "SafeMath.sub",
      "offset": [
        5545,
        5551
      ],
      "op": "DUP5",
      "path": "19"
    },
    "2259": {
      "fn": "SafeMath.sub",
      "offset": [
        5545,
        5551
      ],
      "op": "GT",
      "path": "19"
    },
    "2260": {
      "branch": 58,
      "fn": "SafeMath.sub",
      "offset": [
        5545,
        5551
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "2261": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x91F"
    },
    "2264": {
      "branch": 58,
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "2265": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "2267": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "2268": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2272": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2274": {
      "op": "SHL"
    },
    "2275": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "DUP2",
      "path": "19"
    },
    "2276": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "2277": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "2279": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "2281": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "DUP3",
      "path": "19"
    },
    "2282": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "ADD",
      "path": "19"
    },
    "2283": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "DUP2",
      "path": "19"
    },
    "2284": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "DUP2",
      "path": "19"
    },
    "2285": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "2286": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "DUP4",
      "path": "19"
    },
    "2287": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "2288": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x24"
    },
    "2290": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "DUP5",
      "path": "19"
    },
    "2291": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "ADD",
      "path": "19"
    },
    "2292": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "2293": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "DUP4",
      "path": "19"
    },
    "2294": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "2295": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "2296": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "2297": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "DUP4",
      "path": "19"
    },
    "2298": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "2299": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x44"
    },
    "2301": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "2302": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "2303": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "ADD",
      "path": "19"
    },
    "2304": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "2305": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "2306": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "DUP6",
      "path": "19"
    },
    "2307": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "ADD",
      "path": "19"
    },
    "2308": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "2309": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "DUP1",
      "path": "19"
    },
    "2310": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "DUP4",
      "path": "19"
    },
    "2311": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "DUP4",
      "path": "19"
    },
    "2312": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "2314": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "DUP4",
      "path": "19"
    },
    "2315": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "2316": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x6B3"
    },
    "2319": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "2320": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "DUP2",
      "path": "19"
    },
    "2321": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "DUP2",
      "path": "19"
    },
    "2322": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "ADD",
      "path": "19"
    },
    "2323": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "2324": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "DUP4",
      "path": "19"
    },
    "2325": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "DUP3",
      "path": "19"
    },
    "2326": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "ADD",
      "path": "19"
    },
    "2327": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "2328": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "2330": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "ADD",
      "path": "19"
    },
    "2331": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x69B"
    },
    "2334": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "JUMP",
      "path": "19"
    },
    "2335": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "2336": {
      "op": "POP"
    },
    "2337": {
      "op": "POP"
    },
    "2338": {
      "op": "POP"
    },
    "2339": {
      "fn": "SafeMath.sub",
      "offset": [
        5583,
        5588
      ],
      "op": "SWAP1",
      "path": "19",
      "statement": 40
    },
    "2340": {
      "fn": "SafeMath.sub",
      "offset": [
        5583,
        5588
      ],
      "op": "SUB",
      "path": "19"
    },
    "2341": {
      "fn": "SafeMath.sub",
      "offset": [
        5583,
        5588
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "2342": {
      "fn": "SafeMath.sub",
      "jump": "o",
      "offset": [
        5432,
        5595
      ],
      "op": "JUMP",
      "path": "19"
    },
    "2343": {
      "fn": "SafeMath.mod",
      "offset": [
        7060,
        7222
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "2344": {
      "fn": "SafeMath.mod",
      "offset": [
        7146,
        7153
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "2346": {
      "fn": "SafeMath.mod",
      "offset": [
        7180,
        7192
      ],
      "op": "DUP2",
      "path": "19",
      "statement": 41
    },
    "2347": {
      "branch": 59,
      "fn": "SafeMath.mod",
      "offset": [
        7173,
        7178
      ],
      "op": "DUP4",
      "path": "19"
    },
    "2348": {
      "fn": "SafeMath.mod",
      "offset": [
        7165,
        7193
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x976"
    },
    "2351": {
      "branch": 59,
      "fn": "SafeMath.mod",
      "offset": [
        7165,
        7193
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "2352": {
      "fn": "SafeMath.mod",
      "offset": [
        7165,
        7193
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "2354": {
      "fn": "SafeMath.mod",
      "offset": [
        7165,
        7193
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "2355": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2359": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2361": {
      "op": "SHL"
    },
    "2362": {
      "fn": "SafeMath.mod",
      "offset": [
        7165,
        7193
      ],
      "op": "DUP2",
      "path": "19"
    },
    "2363": {
      "fn": "SafeMath.mod",
      "offset": [
        7165,
        7193
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "2364": {
      "fn": "SafeMath.mod",
      "offset": [
        7165,
        7193
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "2366": {
      "fn": "SafeMath.mod",
      "offset": [
        7165,
        7193
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "2368": {
      "fn": "SafeMath.mod",
      "offset": [
        7165,
        7193
      ],
      "op": "DUP3",
      "path": "19"
    },
    "2369": {
      "fn": "SafeMath.mod",
      "offset": [
        7165,
        7193
      ],
      "op": "ADD",
      "path": "19"
    },
    "2370": {
      "fn": "SafeMath.mod",
      "offset": [
        7165,
        7193
      ],
      "op": "DUP2",
      "path": "19"
    },
    "2371": {
      "fn": "SafeMath.mod",
      "offset": [
        7165,
        7193
      ],
      "op": "DUP2",
      "path": "19"
    },
    "2372": {
      "fn": "SafeMath.mod",
      "offset": [
        7165,
        7193
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "2373": {
      "fn": "SafeMath.mod",
      "offset": [
        7165,
        7193
      ],
      "op": "DUP4",
      "path": "19"
    },
    "2374": {
      "fn": "SafeMath.mod",
      "offset": [
        7165,
        7193
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "2375": {
      "fn": "SafeMath.mod",
      "offset": [
        7165,
        7193
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x24"
    },
    "2377": {
      "fn": "SafeMath.mod",
      "offset": [
        7165,
        7193
      ],
      "op": "DUP5",
      "path": "19"
    },
    "2378": {
      "fn": "SafeMath.mod",
      "offset": [
        7165,
        7193
      ],
      "op": "ADD",
      "path": "19"
    },
    "2379": {
      "fn": "SafeMath.mod",
      "offset": [
        7165,
        7193
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "2380": {
      "fn": "SafeMath.mod",
      "offset": [
        7165,
        7193
      ],
      "op": "DUP4",
      "path": "19"
    },
    "2381": {
      "fn": "SafeMath.mod",
      "offset": [
        7165,
        7193
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "2382": {
      "fn": "SafeMath.mod",
      "offset": [
        7165,
        7193
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "2383": {
      "fn": "SafeMath.mod",
      "offset": [
        7165,
        7193
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "2384": {
      "fn": "SafeMath.mod",
      "offset": [
        7165,
        7193
      ],
      "op": "DUP4",
      "path": "19"
    },
    "2385": {
      "fn": "SafeMath.mod",
      "offset": [
        7165,
        7193
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "2386": {
      "fn": "SafeMath.mod",
      "offset": [
        7165,
        7193
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x44"
    },
    "2388": {
      "fn": "SafeMath.mod",
      "offset": [
        7165,
        7193
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "2389": {
      "fn": "SafeMath.mod",
      "offset": [
        7165,
        7193
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "2390": {
      "fn": "SafeMath.mod",
      "offset": [
        7165,
        7193
      ],
      "op": "ADD",
      "path": "19"
    },
    "2391": {
      "fn": "SafeMath.mod",
      "offset": [
        7165,
        7193
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "2392": {
      "fn": "SafeMath.mod",
      "offset": [
        7165,
        7193
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "2393": {
      "fn": "SafeMath.mod",
      "offset": [
        7165,
        7193
      ],
      "op": "DUP6",
      "path": "19"
    },
    "2394": {
      "fn": "SafeMath.mod",
      "offset": [
        7165,
        7193
      ],
      "op": "ADD",
      "path": "19"
    },
    "2395": {
      "fn": "SafeMath.mod",
      "offset": [
        7165,
        7193
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "2396": {
      "fn": "SafeMath.mod",
      "offset": [
        7165,
        7193
      ],
      "op": "DUP1",
      "path": "19"
    },
    "2397": {
      "fn": "SafeMath.mod",
      "offset": [
        7165,
        7193
      ],
      "op": "DUP4",
      "path": "19"
    },
    "2398": {
      "fn": "SafeMath.mod",
      "offset": [
        7165,
        7193
      ],
      "op": "DUP4",
      "path": "19"
    },
    "2399": {
      "fn": "SafeMath.mod",
      "offset": [
        7165,
        7193
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "2401": {
      "fn": "SafeMath.mod",
      "offset": [
        7165,
        7193
      ],
      "op": "DUP4",
      "path": "19"
    },
    "2402": {
      "fn": "SafeMath.mod",
      "offset": [
        7165,
        7193
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "2403": {
      "fn": "SafeMath.mod",
      "offset": [
        7165,
        7193
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x6B3"
    },
    "2406": {
      "fn": "SafeMath.mod",
      "offset": [
        7165,
        7193
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "2407": {
      "fn": "SafeMath.mod",
      "offset": [
        7165,
        7193
      ],
      "op": "DUP2",
      "path": "19"
    },
    "2408": {
      "fn": "SafeMath.mod",
      "offset": [
        7165,
        7193
      ],
      "op": "DUP2",
      "path": "19"
    },
    "2409": {
      "fn": "SafeMath.mod",
      "offset": [
        7165,
        7193
      ],
      "op": "ADD",
      "path": "19"
    },
    "2410": {
      "fn": "SafeMath.mod",
      "offset": [
        7165,
        7193
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "2411": {
      "fn": "SafeMath.mod",
      "offset": [
        7165,
        7193
      ],
      "op": "DUP4",
      "path": "19"
    },
    "2412": {
      "fn": "SafeMath.mod",
      "offset": [
        7165,
        7193
      ],
      "op": "DUP3",
      "path": "19"
    },
    "2413": {
      "fn": "SafeMath.mod",
      "offset": [
        7165,
        7193
      ],
      "op": "ADD",
      "path": "19"
    },
    "2414": {
      "fn": "SafeMath.mod",
      "offset": [
        7165,
        7193
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "2415": {
      "fn": "SafeMath.mod",
      "offset": [
        7165,
        7193
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "2417": {
      "fn": "SafeMath.mod",
      "offset": [
        7165,
        7193
      ],
      "op": "ADD",
      "path": "19"
    },
    "2418": {
      "fn": "SafeMath.mod",
      "offset": [
        7165,
        7193
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x69B"
    },
    "2421": {
      "fn": "SafeMath.mod",
      "offset": [
        7165,
        7193
      ],
      "op": "JUMP",
      "path": "19"
    },
    "2422": {
      "fn": "SafeMath.mod",
      "offset": [
        7165,
        7193
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "2423": {
      "fn": "SafeMath.mod",
      "offset": [
        7165,
        7193
      ],
      "op": "POP",
      "path": "19"
    },
    "2424": {
      "fn": "SafeMath.mod",
      "offset": [
        7214,
        7215
      ],
      "op": "DUP3",
      "path": "19",
      "statement": 42
    },
    "2425": {
      "fn": "SafeMath.mod",
      "offset": [
        7210,
        7211
      ],
      "op": "DUP5",
      "path": "19"
    },
    "2426": {
      "fn": "SafeMath.mod",
      "offset": [
        7210,
        7215
      ],
      "op": "DUP2",
      "path": "19"
    },
    "2427": {
      "fn": "SafeMath.mod",
      "offset": [
        7210,
        7215
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x980"
    },
    "2430": {
      "fn": "SafeMath.mod",
      "offset": [
        7210,
        7215
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "2431": {
      "dev": "Modulus by zero",
      "fn": "SafeMath.mod",
      "offset": [
        7210,
        7215
      ],
      "op": "INVALID",
      "path": "19"
    },
    "2432": {
      "fn": "SafeMath.mod",
      "offset": [
        7210,
        7215
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "2433": {
      "fn": "SafeMath.mod",
      "offset": [
        7210,
        7215
      ],
      "op": "MOD",
      "path": "19"
    },
    "2434": {
      "fn": "SafeMath.mod",
      "offset": [
        7210,
        7215
      ],
      "op": "SWAP5",
      "path": "19"
    },
    "2435": {
      "fn": "SafeMath.mod",
      "offset": [
        7060,
        7222
      ],
      "op": "SWAP4",
      "path": "19"
    },
    "2436": {
      "op": "POP"
    },
    "2437": {
      "op": "POP"
    },
    "2438": {
      "op": "POP"
    },
    "2439": {
      "op": "POP"
    },
    "2440": {
      "fn": "SafeMath.mod",
      "jump": "o",
      "offset": [
        7060,
        7222
      ],
      "op": "JUMP",
      "path": "19"
    },
    "2441": {
      "fn": "SafeMath.trySub",
      "offset": [
        1109,
        1260
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "2442": {
      "fn": "SafeMath.trySub",
      "offset": [
        1170,
        1174
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "2444": {
      "fn": "SafeMath.trySub",
      "offset": [
        1176,
        1183
      ],
      "op": "DUP1",
      "path": "19"
    },
    "2445": {
      "fn": "SafeMath.trySub",
      "offset": [
        1203,
        1204
      ],
      "op": "DUP4",
      "path": "19"
    },
    "2446": {
      "fn": "SafeMath.trySub",
      "offset": [
        1199,
        1200
      ],
      "op": "DUP4",
      "path": "19"
    },
    "2447": {
      "branch": 60,
      "fn": "SafeMath.trySub",
      "offset": [
        1199,
        1204
      ],
      "op": "GT",
      "path": "19"
    },
    "2448": {
      "fn": "SafeMath.trySub",
      "offset": [
        1195,
        1223
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "2449": {
      "fn": "SafeMath.trySub",
      "offset": [
        1195,
        1223
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x99F"
    },
    "2452": {
      "branch": 60,
      "fn": "SafeMath.trySub",
      "offset": [
        1195,
        1223
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "2453": {
      "op": "POP"
    },
    "2454": {
      "fn": "SafeMath.trySub",
      "offset": [
        1214,
        1219
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 43,
      "value": "0x0"
    },
    "2456": {
      "fn": "SafeMath.trySub",
      "offset": [
        1214,
        1219
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "2457": {
      "op": "POP"
    },
    "2458": {
      "fn": "SafeMath.trySub",
      "offset": [
        1214,
        1219
      ],
      "op": "DUP1",
      "path": "19"
    },
    "2459": {
      "fn": "SafeMath.trySub",
      "offset": [
        1206,
        1223
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x50B"
    },
    "2462": {
      "fn": "SafeMath.trySub",
      "offset": [
        1206,
        1223
      ],
      "op": "JUMP",
      "path": "19"
    },
    "2463": {
      "fn": "SafeMath.trySub",
      "offset": [
        1195,
        1223
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "2464": {
      "op": "POP"
    },
    "2465": {
      "fn": "SafeMath.trySub",
      "offset": [
        1241,
        1245
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 44,
      "value": "0x1"
    },
    "2467": {
      "fn": "SafeMath.trySub",
      "offset": [
        1241,
        1245
      ],
      "op": "SWAP4",
      "path": "19"
    },
    "2468": {
      "fn": "SafeMath.trySub",
      "offset": [
        1247,
        1252
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "2469": {
      "fn": "SafeMath.trySub",
      "offset": [
        1247,
        1252
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "2470": {
      "fn": "SafeMath.trySub",
      "offset": [
        1247,
        1252
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "2471": {
      "fn": "SafeMath.trySub",
      "offset": [
        1247,
        1252
      ],
      "op": "SUB",
      "path": "19"
    },
    "2472": {
      "fn": "SafeMath.trySub",
      "offset": [
        1247,
        1252
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "2473": {
      "op": "POP"
    },
    "2474": {
      "fn": "SafeMath.trySub",
      "jump": "o",
      "offset": [
        1109,
        1260
      ],
      "op": "JUMP",
      "path": "19"
    },
    "2475": {
      "fn": "SafeMath.div",
      "offset": [
        4217,
        4367
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "2476": {
      "fn": "SafeMath.div",
      "offset": [
        4275,
        4282
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "2478": {
      "fn": "SafeMath.div",
      "offset": [
        4306,
        4307
      ],
      "op": "DUP1",
      "path": "19",
      "statement": 45
    },
    "2479": {
      "fn": "SafeMath.div",
      "offset": [
        4302,
        4303
      ],
      "op": "DUP3",
      "path": "19"
    },
    "2480": {
      "branch": 61,
      "fn": "SafeMath.div",
      "offset": [
        4302,
        4307
      ],
      "op": "GT",
      "path": "19"
    },
    "2481": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xA01"
    },
    "2484": {
      "branch": 61,
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "2485": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "2487": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "DUP1",
      "path": "19"
    },
    "2488": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "2489": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2493": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2495": {
      "op": "SHL"
    },
    "2496": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "DUP2",
      "path": "19"
    },
    "2497": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "2498": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "2500": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "2502": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "DUP3",
      "path": "19"
    },
    "2503": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "ADD",
      "path": "19"
    },
    "2504": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "2505": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1A"
    },
    "2507": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x24"
    },
    "2509": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "DUP3",
      "path": "19"
    },
    "2510": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "ADD",
      "path": "19"
    },
    "2511": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "2512": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "PUSH32",
      "path": "19",
      "value": "0x536166654D6174683A206469766973696F6E206279207A65726F000000000000"
    },
    "2545": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x44"
    },
    "2547": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "DUP3",
      "path": "19"
    },
    "2548": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "ADD",
      "path": "19"
    },
    "2549": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "2550": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "2551": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "2552": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "2553": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "DUP2",
      "path": "19"
    },
    "2554": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "2555": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "SUB",
      "path": "19"
    },
    "2556": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x64"
    },
    "2558": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "ADD",
      "path": "19"
    },
    "2559": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "2560": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "REVERT",
      "path": "19"
    },
    "2561": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "2562": {
      "fn": "SafeMath.div",
      "offset": [
        4359,
        4360
      ],
      "op": "DUP2",
      "path": "19",
      "statement": 46
    },
    "2563": {
      "fn": "SafeMath.div",
      "offset": [
        4355,
        4356
      ],
      "op": "DUP4",
      "path": "19"
    },
    "2564": {
      "fn": "SafeMath.div",
      "offset": [
        4355,
        4360
      ],
      "op": "DUP2",
      "path": "19"
    },
    "2565": {
      "fn": "SafeMath.div",
      "offset": [
        4355,
        4360
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xA0A"
    },
    "2568": {
      "fn": "SafeMath.div",
      "offset": [
        4355,
        4360
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "2569": {
      "dev": "Division by zero",
      "fn": "SafeMath.div",
      "offset": [
        4355,
        4360
      ],
      "op": "INVALID",
      "path": "19"
    },
    "2570": {
      "fn": "SafeMath.div",
      "offset": [
        4355,
        4360
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "2571": {
      "fn": "SafeMath.div",
      "offset": [
        4355,
        4360
      ],
      "op": "DIV",
      "path": "19"
    },
    "2572": {
      "fn": "SafeMath.div",
      "offset": [
        4355,
        4360
      ],
      "op": "SWAP4",
      "path": "19"
    },
    "2573": {
      "fn": "SafeMath.div",
      "offset": [
        4217,
        4367
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "2574": {
      "op": "POP"
    },
    "2575": {
      "op": "POP"
    },
    "2576": {
      "op": "POP"
    },
    "2577": {
      "fn": "SafeMath.div",
      "jump": "o",
      "offset": [
        4217,
        4367
      ],
      "op": "JUMP",
      "path": "19"
    },
    "2578": {
      "fn": "SafeMath.add",
      "offset": [
        2690,
        2865
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "2579": {
      "fn": "SafeMath.add",
      "offset": [
        2748,
        2755
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "2581": {
      "fn": "SafeMath.add",
      "offset": [
        2779,
        2784
      ],
      "op": "DUP3",
      "path": "19"
    },
    "2582": {
      "fn": "SafeMath.add",
      "offset": [
        2779,
        2784
      ],
      "op": "DUP3",
      "path": "19"
    },
    "2583": {
      "fn": "SafeMath.add",
      "offset": [
        2779,
        2784
      ],
      "op": "ADD",
      "path": "19"
    },
    "2584": {
      "fn": "SafeMath.add",
      "offset": [
        2802,
        2808
      ],
      "op": "DUP4",
      "path": "19",
      "statement": 47
    },
    "2585": {
      "fn": "SafeMath.add",
      "offset": [
        2802,
        2808
      ],
      "op": "DUP2",
      "path": "19"
    },
    "2586": {
      "fn": "SafeMath.add",
      "offset": [
        2802,
        2808
      ],
      "op": "LT",
      "path": "19"
    },
    "2587": {
      "branch": 62,
      "fn": "SafeMath.add",
      "offset": [
        2802,
        2808
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "2588": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x52B"
    },
    "2591": {
      "branch": 62,
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "2592": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "2594": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "DUP1",
      "path": "19"
    },
    "2595": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "2596": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2600": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2602": {
      "op": "SHL"
    },
    "2603": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "DUP2",
      "path": "19"
    },
    "2604": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "2605": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "2607": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "2609": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "DUP3",
      "path": "19"
    },
    "2610": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "ADD",
      "path": "19"
    },
    "2611": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "2612": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1B"
    },
    "2614": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x24"
    },
    "2616": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "DUP3",
      "path": "19"
    },
    "2617": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "ADD",
      "path": "19"
    },
    "2618": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "2619": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "PUSH32",
      "path": "19",
      "value": "0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
    },
    "2652": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x44"
    },
    "2654": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "DUP3",
      "path": "19"
    },
    "2655": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "ADD",
      "path": "19"
    },
    "2656": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "2657": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "2658": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "2659": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "2660": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "DUP2",
      "path": "19"
    },
    "2661": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "2662": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "SUB",
      "path": "19"
    },
    "2663": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x64"
    },
    "2665": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "ADD",
      "path": "19"
    },
    "2666": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "2667": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "REVERT",
      "path": "19"
    }
  },
  "sha1": "9c9126e9f816a69f8f8fd8689c1e8a47468279d5",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.0 <0.8.0;\n\nimport \"../math/SafeMath.sol\";\n\ncontract SafeMathMock {\n    function tryAdd(uint256 a, uint256 b) public pure returns (bool flag, uint256 value) {\n        return SafeMath.tryAdd(a, b);\n    }\n\n    function trySub(uint256 a, uint256 b) public pure returns (bool flag, uint256 value) {\n        return SafeMath.trySub(a, b);\n    }\n\n    function tryMul(uint256 a, uint256 b) public pure returns (bool flag, uint256 value) {\n        return SafeMath.tryMul(a, b);\n    }\n\n    function tryDiv(uint256 a, uint256 b) public pure returns (bool flag, uint256 value) {\n        return SafeMath.tryDiv(a, b);\n    }\n\n    function tryMod(uint256 a, uint256 b) public pure returns (bool flag, uint256 value) {\n        return SafeMath.tryMod(a, b);\n    }\n\n    // using the do* naming convention to avoid warnings due to clashing opcode names\n\n    function doAdd(uint256 a, uint256 b) public pure returns (uint256) {\n        return SafeMath.add(a, b);\n    }\n\n    function doSub(uint256 a, uint256 b) public pure returns (uint256) {\n        return SafeMath.sub(a, b);\n    }\n\n    function doMul(uint256 a, uint256 b) public pure returns (uint256) {\n        return SafeMath.mul(a, b);\n    }\n\n    function doDiv(uint256 a, uint256 b) public pure returns (uint256) {\n        return SafeMath.div(a, b);\n    }\n\n    function doMod(uint256 a, uint256 b) public pure returns (uint256) {\n        return SafeMath.mod(a, b);\n    }\n\n    function subWithMessage(uint256 a, uint256 b, string memory errorMessage) public pure returns (uint256) {\n        return SafeMath.sub(a, b, errorMessage);\n    }\n\n    function divWithMessage(uint256 a, uint256 b, string memory errorMessage) public pure returns (uint256) {\n        return SafeMath.div(a, b, errorMessage);\n    }\n\n    function modWithMessage(uint256 a, uint256 b, string memory errorMessage) public pure returns (uint256) {\n        return SafeMath.mod(a, b, errorMessage);\n    }\n\n    function addMemoryCheck() public pure returns (uint256 mem) {\n        uint256 length = 32;\n        // solhint-disable-next-line no-inline-assembly\n        assembly { mem := mload(0x40) }\n        for (uint256 i = 0; i < length; ++i) { SafeMath.add(1, 1); }\n        // solhint-disable-next-line no-inline-assembly\n        assembly { mem := sub(mload(0x40), mem) }\n    }\n\n    function subMemoryCheck() public pure returns (uint256 mem) {\n        uint256 length = 32;\n        // solhint-disable-next-line no-inline-assembly\n        assembly { mem := mload(0x40) }\n        for (uint256 i = 0; i < length; ++i) { SafeMath.sub(1, 1); }\n        // solhint-disable-next-line no-inline-assembly\n        assembly { mem := sub(mload(0x40), mem) }\n    }\n\n    function mulMemoryCheck() public pure returns (uint256 mem) {\n        uint256 length = 32;\n        // solhint-disable-next-line no-inline-assembly\n        assembly { mem := mload(0x40) }\n        for (uint256 i = 0; i < length; ++i) { SafeMath.mul(1, 1); }\n        // solhint-disable-next-line no-inline-assembly\n        assembly { mem := sub(mload(0x40), mem) }\n    }\n\n    function divMemoryCheck() public pure returns (uint256 mem) {\n        uint256 length = 32;\n        // solhint-disable-next-line no-inline-assembly\n        assembly { mem := mload(0x40) }\n        for (uint256 i = 0; i < length; ++i) { SafeMath.div(1, 1); }\n        // solhint-disable-next-line no-inline-assembly\n        assembly { mem := sub(mload(0x40), mem) }\n    }\n\n    function modMemoryCheck() public pure returns (uint256 mem) {\n        uint256 length = 32;\n        // solhint-disable-next-line no-inline-assembly\n        assembly { mem := mload(0x40) }\n        for (uint256 i = 0; i < length; ++i) { SafeMath.mod(1, 1); }\n        // solhint-disable-next-line no-inline-assembly\n        assembly { mem := sub(mload(0x40), mem) }\n    }\n\n}\n",
  "sourceMap": "98:3730:76:-:0;;;;;;;;;;;;;;;;;;;",
  "sourcePath": "contracts/openzeppelin/mocks/SafeMathMock.sol",
  "type": "contract"
}