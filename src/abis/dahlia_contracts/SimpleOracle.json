{
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "governor",
          "type": "address"
        }
      ],
      "name": "AcceptGovernor",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "px",
          "type": "uint256"
        }
      ],
      "name": "SetCELOPx",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "governor",
          "type": "address"
        }
      ],
      "name": "SetGovernor",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "pendingGovernor",
          "type": "address"
        }
      ],
      "name": "SetPendingGovernor",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "acceptGovernor",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "getCELOPx",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "governor",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pendingGovernor",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "prices",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "tokens",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "pxs",
          "type": "uint256[]"
        }
      ],
      "name": "setCELOPx",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_pendingGovernor",
          "type": "address"
        }
      ],
      "name": "setPendingGovernor",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "16": "/Users/kylescott/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/utils/Address.sol",
    "177": "contracts/oracle/SimpleOracle.sol",
    "200": "interfaces/IBaseOracle.sol",
    "22": "contracts/Governable.sol",
    "7": "/Users/kylescott/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/proxy/Initializable.sol"
  },
  "ast": {
    "absolutePath": "contracts/oracle/SimpleOracle.sol",
    "exportedSymbols": {
      "SimpleOracle": [
        28253
      ]
    },
    "id": 28254,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 28148,
        "literals": [
          "solidity",
          "0.6",
          ".12"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:177"
      },
      {
        "absolutePath": "contracts/Governable.sol",
        "file": "../Governable.sol",
        "id": 28149,
        "nodeType": "ImportDirective",
        "scope": 28254,
        "sourceUnit": 109,
        "src": "58:27:177",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/IBaseOracle.sol",
        "file": "../../interfaces/IBaseOracle.sol",
        "id": 28150,
        "nodeType": "ImportDirective",
        "scope": 28254,
        "sourceUnit": 38834,
        "src": "86:42:177",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 28151,
              "name": "IBaseOracle",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 38833,
              "src": "155:11:177",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IBaseOracle_$38833",
                "typeString": "contract IBaseOracle"
              }
            },
            "id": 28152,
            "nodeType": "InheritanceSpecifier",
            "src": "155:11:177"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 28153,
              "name": "Governable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 108,
              "src": "168:10:177",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Governable_$108",
                "typeString": "contract Governable"
              }
            },
            "id": 28154,
            "nodeType": "InheritanceSpecifier",
            "src": "168:10:177"
          }
        ],
        "contractDependencies": [
          108,
          36392,
          38833
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 28253,
        "linearizedBaseContracts": [
          28253,
          108,
          36392,
          38833
        ],
        "name": "SimpleOracle",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "cfed246b",
            "id": 28158,
            "mutability": "mutable",
            "name": "prices",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 28253,
            "src": "183:38:177",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 28157,
              "keyType": {
                "id": 28155,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "191:7:177",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "183:24:177",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 28156,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "202:4:177",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 28159,
              "nodeType": "StructuredDocumentation",
              "src": "281:47:177",
              "text": "The governor sets oracle price for a token."
            },
            "id": 28165,
            "name": "SetCELOPx",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 28164,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28161,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "token",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 28165,
                  "src": "347:13:177",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 28160,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "347:7:177",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 28163,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "px",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 28165,
                  "src": "362:7:177",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 28162,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "362:4:177",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "346:24:177"
            },
            "src": "331:40:177"
          },
          {
            "body": {
              "id": 28172,
              "nodeType": "Block",
              "src": "462:31:177",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 28169,
                      "name": "__Governable__init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 60,
                      "src": "468:18:177",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 28170,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "468:20:177",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 28171,
                  "nodeType": "ExpressionStatement",
                  "src": "468:20:177"
                }
              ]
            },
            "documentation": {
              "id": 28166,
              "nodeType": "StructuredDocumentation",
              "src": "375:63:177",
              "text": "@dev Create the contract and initialize the first governor."
            },
            "id": 28173,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 28167,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "452:2:177"
            },
            "returnParameters": {
              "id": 28168,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "462:0:177"
            },
            "scope": 28253,
            "src": "441:52:177",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              38832
            ],
            "body": {
              "id": 28197,
              "nodeType": "Block",
              "src": "712:80:177",
              "statements": [
                {
                  "assignments": [
                    28183
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 28183,
                      "mutability": "mutable",
                      "name": "px",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 28197,
                      "src": "718:7:177",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 28182,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "718:4:177",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 28187,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 28184,
                      "name": "prices",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 28158,
                      "src": "728:6:177",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 28186,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 28185,
                      "name": "token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 28176,
                      "src": "735:5:177",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "728:13:177",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "718:23:177"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 28191,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 28189,
                          "name": "px",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 28183,
                          "src": "755:2:177",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 28190,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "761:1:177",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "755:7:177",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6e6f207078",
                        "id": 28192,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "764:7:177",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9e3128f870e8f931a4c299f4d82edc430880f3d6a531378299a3aefc4e17eecb",
                          "typeString": "literal_string \"no px\""
                        },
                        "value": "no px"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9e3128f870e8f931a4c299f4d82edc430880f3d6a531378299a3aefc4e17eecb",
                          "typeString": "literal_string \"no px\""
                        }
                      ],
                      "id": 28188,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "747:7:177",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 28193,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "747:25:177",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 28194,
                  "nodeType": "ExpressionStatement",
                  "src": "747:25:177"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 28195,
                    "name": "px",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 28183,
                    "src": "785:2:177",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 28181,
                  "id": 28196,
                  "nodeType": "Return",
                  "src": "778:9:177"
                }
              ]
            },
            "documentation": {
              "id": 28174,
              "nodeType": "StructuredDocumentation",
              "src": "497:140:177",
              "text": "@dev Return the value of the given input as CELO per unit, multiplied by 2**112.\n @param token The ERC-20 token to check the value."
            },
            "functionSelector": "11e56aff",
            "id": 28198,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getCELOPx",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 28178,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "688:8:177"
            },
            "parameters": {
              "id": 28177,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28176,
                  "mutability": "mutable",
                  "name": "token",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 28198,
                  "src": "659:13:177",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 28175,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "659:7:177",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "658:15:177"
            },
            "returnParameters": {
              "id": 28181,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28180,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 28198,
                  "src": "706:4:177",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 28179,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "706:4:177",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "705:6:177"
            },
            "scope": 28253,
            "src": "640:152:177",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 28251,
              "nodeType": "Block",
              "src": "1078:212:177",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 28215,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 28211,
                            "name": "tokens",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 28202,
                            "src": "1092:6:177",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            }
                          },
                          "id": 28212,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1092:13:177",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 28213,
                            "name": "pxs",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 28205,
                            "src": "1109:3:177",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          "id": 28214,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1109:10:177",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1092:27:177",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "696e636f6e73697374656e74206c656e677468",
                        "id": 28216,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1121:21:177",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e39bb8790077c3776fc27d43a4a6ec16cc20ec68b47f9e789badccd37562c187",
                          "typeString": "literal_string \"inconsistent length\""
                        },
                        "value": "inconsistent length"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e39bb8790077c3776fc27d43a4a6ec16cc20ec68b47f9e789badccd37562c187",
                          "typeString": "literal_string \"inconsistent length\""
                        }
                      ],
                      "id": 28210,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1084:7:177",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 28217,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1084:59:177",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 28218,
                  "nodeType": "ExpressionStatement",
                  "src": "1084:59:177"
                },
                {
                  "body": {
                    "id": 28249,
                    "nodeType": "Block",
                    "src": "1196:90:177",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 28238,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 28230,
                              "name": "prices",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 28158,
                              "src": "1204:6:177",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 28234,
                            "indexExpression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 28231,
                                "name": "tokens",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 28202,
                                "src": "1211:6:177",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                  "typeString": "address[] memory"
                                }
                              },
                              "id": 28233,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 28232,
                                "name": "idx",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 28220,
                                "src": "1218:3:177",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1211:11:177",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "1204:19:177",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 28235,
                              "name": "pxs",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 28205,
                              "src": "1226:3:177",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            "id": 28237,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 28236,
                              "name": "idx",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 28220,
                              "src": "1230:3:177",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1226:8:177",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1204:30:177",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 28239,
                        "nodeType": "ExpressionStatement",
                        "src": "1204:30:177"
                      },
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 28241,
                                "name": "tokens",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 28202,
                                "src": "1257:6:177",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                  "typeString": "address[] memory"
                                }
                              },
                              "id": 28243,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 28242,
                                "name": "idx",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 28220,
                                "src": "1264:3:177",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1257:11:177",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 28244,
                                "name": "pxs",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 28205,
                                "src": "1270:3:177",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                  "typeString": "uint256[] memory"
                                }
                              },
                              "id": 28246,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 28245,
                                "name": "idx",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 28220,
                                "src": "1274:3:177",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1270:8:177",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 28240,
                            "name": "SetCELOPx",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 28165,
                            "src": "1247:9:177",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 28247,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1247:32:177",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 28248,
                        "nodeType": "EmitStatement",
                        "src": "1242:37:177"
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 28226,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 28223,
                      "name": "idx",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 28220,
                      "src": "1168:3:177",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 28224,
                        "name": "tokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28202,
                        "src": "1174:6:177",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 28225,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1174:13:177",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1168:19:177",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 28250,
                  "initializationExpression": {
                    "assignments": [
                      28220
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 28220,
                        "mutability": "mutable",
                        "name": "idx",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 28250,
                        "src": "1154:8:177",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 28219,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1154:4:177",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 28222,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 28221,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1165:1:177",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "1154:12:177"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 28228,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "1189:5:177",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 28227,
                        "name": "idx",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28220,
                        "src": "1189:3:177",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 28229,
                    "nodeType": "ExpressionStatement",
                    "src": "1189:5:177"
                  },
                  "nodeType": "ForStatement",
                  "src": "1149:137:177"
                }
              ]
            },
            "documentation": {
              "id": 28199,
              "nodeType": "StructuredDocumentation",
              "src": "796:199:177",
              "text": "@dev Set the prices of the given token addresses.\n @param tokens The token addresses to set the prices.\n @param pxs The price data points, representing token value in CELO times 2**112."
            },
            "functionSelector": "5cbff6d8",
            "id": 28252,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 28208,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 28207,
                  "name": "onlyGov",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 36,
                  "src": "1070:7:177",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1070:7:177"
              }
            ],
            "name": "setCELOPx",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 28206,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28202,
                  "mutability": "mutable",
                  "name": "tokens",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 28252,
                  "src": "1017:23:177",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 28200,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1017:7:177",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 28201,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "1017:9:177",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 28205,
                  "mutability": "mutable",
                  "name": "pxs",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 28252,
                  "src": "1042:17:177",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 28203,
                      "name": "uint",
                      "nodeType": "ElementaryTypeName",
                      "src": "1042:4:177",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 28204,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "1042:6:177",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1016:44:177"
            },
            "returnParameters": {
              "id": 28209,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1078:0:177"
            },
            "scope": 28253,
            "src": "998:292:177",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 28254,
        "src": "130:1162:177"
      }
    ],
    "src": "33:1260:177"
  },
  "bytecode": "608060405234801561001057600080fd5b5061001961001e565b610142565b600054610100900460ff16806100375750610037610121565b80610045575060005460ff16155b6100805760405162461bcd60e51b815260040180806020018281038252602e815260200180610768602e913960400191505060405180910390fd5b600054610100900460ff161580156100ab576000805460ff1961ff0019909116610100171660011790555b6000805462010000600160b01b0319163362010000810291909117909155600180546001600160a01b031916905560408051918252517fbce074c8369e26e70e1ae2f14fc944da352cfe6f52e2de9572f0c9942a24b7fc916020908290030190a1801561011e576000805461ff00191690555b50565b60006101363061013c60201b6105db1760201c565b15905090565b3b151590565b610617806101516000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c8063cfed246b1161005b578063cfed246b14610207578063e3056a341461022d578063e58bb63914610235578063f235757f1461023d5761007d565b80630c340a241461008257806311e56aff146100a65780635cbff6d8146100de575b600080fd5b61008a610263565b604080516001600160a01b039092168252519081900360200190f35b6100cc600480360360208110156100bc57600080fd5b50356001600160a01b0316610278565b60408051918252519081900360200190f35b610205600480360360408110156100f457600080fd5b81019060208101813564010000000081111561010f57600080fd5b82018360208201111561012157600080fd5b8035906020019184602083028401116401000000008311171561014357600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929594936020810193503591505064010000000081111561019357600080fd5b8201836020820111156101a557600080fd5b803590602001918460208302840111640100000000831117156101c757600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295506102d1945050505050565b005b6100cc6004803603602081101561021d57600080fd5b50356001600160a01b031661044c565b61008a61045e565b61020561046d565b6102056004803603602081101561025357600080fd5b50356001600160a01b031661052f565b6000546201000090046001600160a01b031681565b6001600160a01b038116600090815260426020526040812054806102cb576040805162461bcd60e51b81526020600482015260056024820152640dcde40e0f60db1b604482015290519081900360640190fd5b92915050565b6000546201000090046001600160a01b03163314610329576040805162461bcd60e51b815260206004820152601060248201526f3737ba103a34329033b7bb32b93737b960811b604482015290519081900360640190fd5b8051825114610375576040805162461bcd60e51b81526020600482015260136024820152720d2dcc6dedce6d2e6e8cadce840d8cadccee8d606b1b604482015290519081900360640190fd5b60005b82518110156104475781818151811061038d57fe5b6020026020010151604260008584815181106103a557fe5b60200260200101516001600160a01b03166001600160a01b03168152602001908152602001600020819055507f3bda3520adb5f2580e1ca782aa562b60292c45d40f3cc1e63a2a103c26755eca8382815181106103fe57fe5b602002602001015183838151811061041257fe5b602002602001015160405180836001600160a01b031681526020018281526020019250505060405180910390a1600101610378565b505050565b60426020526000908152604090205481565b6001546001600160a01b031681565b6001546001600160a01b031633146104cc576040805162461bcd60e51b815260206004820152601860248201527f6e6f74207468652070656e64696e6720676f7665726e6f720000000000000000604482015290519081900360640190fd5b600180546001600160a01b03191690556000805462010000600160b01b031916336201000081029190911790915560408051918252517fd345d81ce68c70b119a17eee79dc1421700bd9cb21ca148a62dc90983964e82f916020908290030190a1565b6000546201000090046001600160a01b03163314610587576040805162461bcd60e51b815260206004820152601060248201526f3737ba103a34329033b7bb32b93737b960811b604482015290519081900360640190fd5b600180546001600160a01b0383166001600160a01b0319909116811790915560408051918252517f964dea888b00b2ab53f13dfe7ca334b46e99338c222ae232d98547a1da019f609181900360200190a150565b3b15159056fea26469706673582212204ff2a5a41e7d3824eb301e1d9a7b8c471d92898274b5b5c870af0468ee4c945d64736f6c634300060c0033496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564",
  "bytecodeSha1": "da39a3ee5e6b4b0d3255bfef95601890afd80709",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.6.12+commit.27d51765"
  },
  "contractName": "SimpleOracle",
  "coverageMap": {
    "branches": {
      "16": {},
      "177": {
        "SimpleOracle.getCELOPx": {
          "13": [
            755,
            762,
            true
          ]
        },
        "SimpleOracle.setCELOPx": {
          "14": [
            1092,
            1119,
            true
          ]
        }
      },
      "200": {},
      "22": {
        "Governable.acceptGovernor": {
          "15": [
            1283,
            1312,
            true
          ]
        }
      },
      "7": {}
    },
    "statements": {
      "16": {
        "Address.isContract": {
          "12": [
            1117,
            1132
          ]
        }
      },
      "177": {
        "SimpleOracle.getCELOPx": {
          "0": [
            747,
            772
          ],
          "1": [
            778,
            787
          ]
        },
        "SimpleOracle.setCELOPx": {
          "2": [
            1084,
            1143
          ],
          "3": [
            1204,
            1234
          ],
          "4": [
            1242,
            1279
          ],
          "5": [
            1189,
            1194
          ]
        }
      },
      "200": {},
      "22": {
        "Governable.acceptGovernor": {
          "6": [
            1275,
            1341
          ],
          "7": [
            1347,
            1375
          ],
          "8": [
            1381,
            1402
          ],
          "9": [
            1408,
            1439
          ]
        },
        "Governable.setPendingGovernor": {
          "10": [
            1058,
            1092
          ],
          "11": [
            1098,
            1139
          ]
        }
      },
      "7": {}
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts@3.4.0/Address",
    "Governable",
    "IBaseOracle",
    "OpenZeppelin/openzeppelin-contracts@3.4.0/Initializable"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b506004361061007d5760003560e01c8063cfed246b1161005b578063cfed246b14610207578063e3056a341461022d578063e58bb63914610235578063f235757f1461023d5761007d565b80630c340a241461008257806311e56aff146100a65780635cbff6d8146100de575b600080fd5b61008a610263565b604080516001600160a01b039092168252519081900360200190f35b6100cc600480360360208110156100bc57600080fd5b50356001600160a01b0316610278565b60408051918252519081900360200190f35b610205600480360360408110156100f457600080fd5b81019060208101813564010000000081111561010f57600080fd5b82018360208201111561012157600080fd5b8035906020019184602083028401116401000000008311171561014357600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929594936020810193503591505064010000000081111561019357600080fd5b8201836020820111156101a557600080fd5b803590602001918460208302840111640100000000831117156101c757600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295506102d1945050505050565b005b6100cc6004803603602081101561021d57600080fd5b50356001600160a01b031661044c565b61008a61045e565b61020561046d565b6102056004803603602081101561025357600080fd5b50356001600160a01b031661052f565b6000546201000090046001600160a01b031681565b6001600160a01b038116600090815260426020526040812054806102cb576040805162461bcd60e51b81526020600482015260056024820152640dcde40e0f60db1b604482015290519081900360640190fd5b92915050565b6000546201000090046001600160a01b03163314610329576040805162461bcd60e51b815260206004820152601060248201526f3737ba103a34329033b7bb32b93737b960811b604482015290519081900360640190fd5b8051825114610375576040805162461bcd60e51b81526020600482015260136024820152720d2dcc6dedce6d2e6e8cadce840d8cadccee8d606b1b604482015290519081900360640190fd5b60005b82518110156104475781818151811061038d57fe5b6020026020010151604260008584815181106103a557fe5b60200260200101516001600160a01b03166001600160a01b03168152602001908152602001600020819055507f3bda3520adb5f2580e1ca782aa562b60292c45d40f3cc1e63a2a103c26755eca8382815181106103fe57fe5b602002602001015183838151811061041257fe5b602002602001015160405180836001600160a01b031681526020018281526020019250505060405180910390a1600101610378565b505050565b60426020526000908152604090205481565b6001546001600160a01b031681565b6001546001600160a01b031633146104cc576040805162461bcd60e51b815260206004820152601860248201527f6e6f74207468652070656e64696e6720676f7665726e6f720000000000000000604482015290519081900360640190fd5b600180546001600160a01b03191690556000805462010000600160b01b031916336201000081029190911790915560408051918252517fd345d81ce68c70b119a17eee79dc1421700bd9cb21ca148a62dc90983964e82f916020908290030190a1565b6000546201000090046001600160a01b03163314610587576040805162461bcd60e51b815260206004820152601060248201526f3737ba103a34329033b7bb32b93737b960811b604482015290519081900360640190fd5b600180546001600160a01b0383166001600160a01b0319909116811790915560408051918252517f964dea888b00b2ab53f13dfe7ca334b46e99338c222ae232d98547a1da019f609181900360200190a150565b3b15159056fea26469706673582212204ff2a5a41e7d3824eb301e1d9a7b8c471d92898274b5b5c870af0468ee4c945d64736f6c634300060c0033",
  "deployedSourceMap": "130:1162:177:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;321:23:22;;;:::i;:::-;;;;-1:-1:-1;;;;;321:23:22;;;;;;;;;;;;;;640:152:177;;;;;;;;;;;;;;;;-1:-1:-1;640:152:177;-1:-1:-1;;;;;640:152:177;;:::i;:::-;;;;;;;;;;;;;;;;998:292;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;998:292:177;;;;;;;;-1:-1:-1;998:292:177;;-1:-1:-1;;998:292:177;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;998:292:177;;-1:-1:-1;998:292:177;;-1:-1:-1;;;;;998:292:177:i;:::-;;183:38;;;;;;;;;;;;;;;;-1:-1:-1;183:38:177;-1:-1:-1;;;;;183:38:177;;:::i;373:30:22:-;;;:::i;1234:210::-;;;:::i;981:163::-;;;;;;;;;;;;;;;;-1:-1:-1;981:163:22;-1:-1:-1;;;;;981:163:22;;:::i;321:23::-;;;;;;-1:-1:-1;;;;;321:23:22;;:::o;640:152:177:-;-1:-1:-1;;;;;728:13:177;;706:4;728:13;;;:6;:13;;;;;;755:7;747:25;;;;;-1:-1:-1;;;747:25:177;;;;;;;;;;;;-1:-1:-1;;;747:25:177;;;;;;;;;;;;;;;785:2;640:152;-1:-1:-1;;640:152:177:o;998:292::-;566:8:22;;;;;-1:-1:-1;;;;;566:8:22;552:10;:22;544:51;;;;;-1:-1:-1;;;544:51:22;;;;;;;;;;;;-1:-1:-1;;;544:51:22;;;;;;;;;;;;;;;1109:3:177::1;:10;1092:6;:13;:27;1084:59;;;::::0;;-1:-1:-1;;;1084:59:177;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;1084:59:177;;;;;;;;;;;;;::::1;;1154:8;1149:137;1174:6;:13;1168:3;:19;1149:137;;;1226:3;1230;1226:8;;;;;;;;;;;;;;1204:6;:19;1211:6;1218:3;1211:11;;;;;;;;;;;;;;-1:-1:-1::0;;;;;1204:19:177::1;-1:-1:-1::0;;;;;1204:19:177::1;;;;;;;;;;;;:30;;;;1247:32;1257:6;1264:3;1257:11;;;;;;;;;;;;;;1270:3;1274;1270:8;;;;;;;;;;;;;;1247:32;;;;-1:-1:-1::0;;;;;1247:32:177::1;;;;;;;;;;;;;;;;;;;;;1189:5;;1149:137;;;;998:292:::0;;:::o;183:38::-;;;;;;;;;;;;;:::o;373:30:22:-;;;-1:-1:-1;;;;;373:30:22;;:::o;1234:210::-;1297:15;;-1:-1:-1;;;;;1297:15:22;1283:10;:29;1275:66;;;;;-1:-1:-1;;;1275:66:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;1347:15;:28;;-1:-1:-1;;;;;;1347:28:22;;;-1:-1:-1;1381:21:22;;-1:-1:-1;;;;;;1381:21:22;1392:10;1381:21;;;;;;;;;;1413:26;;;;;;;;;;;;;;;;;1234:210::o;981:163::-;566:8;;;;;-1:-1:-1;;;;;566:8:22;552:10;:22;544:51;;;;;-1:-1:-1;;;544:51:22;;;;;;;;;;;;-1:-1:-1;;;544:51:22;;;;;;;;;;;;;;;1058:15:::1;:34:::0;;-1:-1:-1;;;;;1058:34:22;::::1;-1:-1:-1::0;;;;;;1058:34:22;;::::1;::::0;::::1;::::0;;;1103:36:::1;::::0;;;;;;::::1;::::0;;;;::::1;::::0;;::::1;981:163:::0;:::o;726:413:16:-;1086:20;1124:8;;;726:413::o",
  "language": "Solidity",
  "natspec": {
    "events": {
      "SetCELOPx(address,uint256)": {
        "notice": "The governor sets oracle price for a token."
      }
    },
    "kind": "dev",
    "methods": {
      "acceptGovernor()": {
        "details": "Accept to become the new governor. Must be called by the pending governor."
      },
      "constructor": {
        "details": "Create the contract and initialize the first governor."
      },
      "getCELOPx(address)": {
        "details": "Return the value of the given input as CELO per unit, multiplied by 2**112.",
        "params": {
          "token": "The ERC-20 token to check the value."
        }
      },
      "setCELOPx(address[],uint256[])": {
        "details": "Set the prices of the given token addresses.",
        "params": {
          "pxs": "The price data points, representing token value in CELO times 2**112.",
          "tokens": "The token addresses to set the prices."
        }
      },
      "setPendingGovernor(address)": {
        "details": "Set the pending governor, which will be the governor once accepted.",
        "params": {
          "_pendingGovernor": "The address to become the pending governor."
        }
      }
    },
    "version": 1
  },
  "offset": [
    130,
    1292
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xCFED246B GT PUSH2 0x5B JUMPI DUP1 PUSH4 0xCFED246B EQ PUSH2 0x207 JUMPI DUP1 PUSH4 0xE3056A34 EQ PUSH2 0x22D JUMPI DUP1 PUSH4 0xE58BB639 EQ PUSH2 0x235 JUMPI DUP1 PUSH4 0xF235757F EQ PUSH2 0x23D JUMPI PUSH2 0x7D JUMP JUMPDEST DUP1 PUSH4 0xC340A24 EQ PUSH2 0x82 JUMPI DUP1 PUSH4 0x11E56AFF EQ PUSH2 0xA6 JUMPI DUP1 PUSH4 0x5CBFF6D8 EQ PUSH2 0xDE JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x8A PUSH2 0x263 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0xCC PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xBC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x278 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x205 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0xF4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 PUSH1 0x20 DUP2 ADD DUP2 CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x10F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x121 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x143 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 SWAP5 SWAP4 PUSH1 0x20 DUP2 ADD SWAP4 POP CALLDATALOAD SWAP2 POP POP PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x193 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x1A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x1C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 POP PUSH2 0x2D1 SWAP5 POP POP POP POP POP JUMP JUMPDEST STOP JUMPDEST PUSH2 0xCC PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x21D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x44C JUMP JUMPDEST PUSH2 0x8A PUSH2 0x45E JUMP JUMPDEST PUSH2 0x205 PUSH2 0x46D JUMP JUMPDEST PUSH2 0x205 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x253 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x52F JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH3 0x10000 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x42 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP1 PUSH2 0x2CB JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x5 PUSH1 0x24 DUP3 ADD MSTORE PUSH5 0xDCDE40E0F PUSH1 0xDB SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH3 0x10000 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x329 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x3737BA103A34329033B7BB32B93737B9 PUSH1 0x81 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP3 MLOAD EQ PUSH2 0x375 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0xD2DCC6DEDCE6D2E6E8CADCE840D8CADCCEE8D PUSH1 0x6B SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x447 JUMPI DUP2 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x38D JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x42 PUSH1 0x0 DUP6 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x3A5 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH32 0x3BDA3520ADB5F2580E1CA782AA562B60292C45D40F3CC1E63A2A103C26755ECA DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x3FE JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x412 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 MLOAD DUP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x1 ADD PUSH2 0x378 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x42 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x4CC JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6E6F74207468652070656E64696E6720676F7665726E6F720000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE PUSH1 0x0 DUP1 SLOAD PUSH3 0x10000 PUSH1 0x1 PUSH1 0xB0 SHL SUB NOT AND CALLER PUSH3 0x10000 DUP2 MUL SWAP2 SWAP1 SWAP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD PUSH32 0xD345D81CE68C70B119A17EEE79DC1421700BD9CB21CA148A62DC90983964E82F SWAP2 PUSH1 0x20 SWAP1 DUP3 SWAP1 SUB ADD SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH3 0x10000 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x587 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x3737BA103A34329033B7BB32B93737B9 PUSH1 0x81 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 SWAP2 AND DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD PUSH32 0x964DEA888B00B2AB53F13DFE7CA334B46E99338C222AE232D98547A1DA019F60 SWAP2 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG1 POP JUMP JUMPDEST EXTCODESIZE ISZERO ISZERO SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4F CALLCODE 0xA5 LOG4 0x1E PUSH30 0x3824EB301E1D9A7B8C471D92898274B5B5C870AF0468EE4C945D64736F6C PUSH4 0x4300060C STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        130,
        1292
      ],
      "op": "PUSH1",
      "path": "177",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        130,
        1292
      ],
      "op": "PUSH1",
      "path": "177",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        130,
        1292
      ],
      "op": "MSTORE",
      "path": "177"
    },
    "5": {
      "fn": null,
      "offset": [
        130,
        1292
      ],
      "op": "CALLVALUE",
      "path": "177"
    },
    "6": {
      "fn": null,
      "offset": [
        130,
        1292
      ],
      "op": "DUP1",
      "path": "177"
    },
    "7": {
      "fn": null,
      "offset": [
        130,
        1292
      ],
      "op": "ISZERO",
      "path": "177"
    },
    "8": {
      "fn": null,
      "offset": [
        130,
        1292
      ],
      "op": "PUSH2",
      "path": "177",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        130,
        1292
      ],
      "op": "JUMPI",
      "path": "177"
    },
    "12": {
      "fn": null,
      "offset": [
        130,
        1292
      ],
      "op": "PUSH1",
      "path": "177",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        130,
        1292
      ],
      "op": "DUP1",
      "path": "177"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        130,
        1292
      ],
      "op": "REVERT",
      "path": "177"
    },
    "16": {
      "fn": null,
      "offset": [
        130,
        1292
      ],
      "op": "JUMPDEST",
      "path": "177"
    },
    "17": {
      "fn": null,
      "offset": [
        130,
        1292
      ],
      "op": "POP",
      "path": "177"
    },
    "18": {
      "fn": null,
      "offset": [
        130,
        1292
      ],
      "op": "PUSH1",
      "path": "177",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        130,
        1292
      ],
      "op": "CALLDATASIZE",
      "path": "177"
    },
    "21": {
      "fn": null,
      "offset": [
        130,
        1292
      ],
      "op": "LT",
      "path": "177"
    },
    "22": {
      "fn": null,
      "offset": [
        130,
        1292
      ],
      "op": "PUSH2",
      "path": "177",
      "value": "0x7D"
    },
    "25": {
      "fn": null,
      "offset": [
        130,
        1292
      ],
      "op": "JUMPI",
      "path": "177"
    },
    "26": {
      "fn": null,
      "offset": [
        130,
        1292
      ],
      "op": "PUSH1",
      "path": "177",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        130,
        1292
      ],
      "op": "CALLDATALOAD",
      "path": "177"
    },
    "29": {
      "fn": null,
      "offset": [
        130,
        1292
      ],
      "op": "PUSH1",
      "path": "177",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        130,
        1292
      ],
      "op": "SHR",
      "path": "177"
    },
    "32": {
      "fn": null,
      "offset": [
        130,
        1292
      ],
      "op": "DUP1",
      "path": "177"
    },
    "33": {
      "fn": null,
      "offset": [
        130,
        1292
      ],
      "op": "PUSH4",
      "path": "177",
      "value": "0xCFED246B"
    },
    "38": {
      "fn": null,
      "offset": [
        130,
        1292
      ],
      "op": "GT",
      "path": "177"
    },
    "39": {
      "fn": null,
      "offset": [
        130,
        1292
      ],
      "op": "PUSH2",
      "path": "177",
      "value": "0x5B"
    },
    "42": {
      "fn": null,
      "offset": [
        130,
        1292
      ],
      "op": "JUMPI",
      "path": "177"
    },
    "43": {
      "fn": null,
      "offset": [
        130,
        1292
      ],
      "op": "DUP1",
      "path": "177"
    },
    "44": {
      "fn": null,
      "offset": [
        130,
        1292
      ],
      "op": "PUSH4",
      "path": "177",
      "value": "0xCFED246B"
    },
    "49": {
      "fn": null,
      "offset": [
        130,
        1292
      ],
      "op": "EQ",
      "path": "177"
    },
    "50": {
      "fn": null,
      "offset": [
        130,
        1292
      ],
      "op": "PUSH2",
      "path": "177",
      "value": "0x207"
    },
    "53": {
      "fn": null,
      "offset": [
        130,
        1292
      ],
      "op": "JUMPI",
      "path": "177"
    },
    "54": {
      "fn": null,
      "offset": [
        130,
        1292
      ],
      "op": "DUP1",
      "path": "177"
    },
    "55": {
      "fn": null,
      "offset": [
        130,
        1292
      ],
      "op": "PUSH4",
      "path": "177",
      "value": "0xE3056A34"
    },
    "60": {
      "fn": null,
      "offset": [
        130,
        1292
      ],
      "op": "EQ",
      "path": "177"
    },
    "61": {
      "fn": null,
      "offset": [
        130,
        1292
      ],
      "op": "PUSH2",
      "path": "177",
      "value": "0x22D"
    },
    "64": {
      "fn": null,
      "offset": [
        130,
        1292
      ],
      "op": "JUMPI",
      "path": "177"
    },
    "65": {
      "fn": null,
      "offset": [
        130,
        1292
      ],
      "op": "DUP1",
      "path": "177"
    },
    "66": {
      "fn": null,
      "offset": [
        130,
        1292
      ],
      "op": "PUSH4",
      "path": "177",
      "value": "0xE58BB639"
    },
    "71": {
      "fn": null,
      "offset": [
        130,
        1292
      ],
      "op": "EQ",
      "path": "177"
    },
    "72": {
      "fn": null,
      "offset": [
        130,
        1292
      ],
      "op": "PUSH2",
      "path": "177",
      "value": "0x235"
    },
    "75": {
      "fn": null,
      "offset": [
        130,
        1292
      ],
      "op": "JUMPI",
      "path": "177"
    },
    "76": {
      "fn": null,
      "offset": [
        130,
        1292
      ],
      "op": "DUP1",
      "path": "177"
    },
    "77": {
      "fn": null,
      "offset": [
        130,
        1292
      ],
      "op": "PUSH4",
      "path": "177",
      "value": "0xF235757F"
    },
    "82": {
      "fn": null,
      "offset": [
        130,
        1292
      ],
      "op": "EQ",
      "path": "177"
    },
    "83": {
      "fn": null,
      "offset": [
        130,
        1292
      ],
      "op": "PUSH2",
      "path": "177",
      "value": "0x23D"
    },
    "86": {
      "fn": null,
      "offset": [
        130,
        1292
      ],
      "op": "JUMPI",
      "path": "177"
    },
    "87": {
      "fn": null,
      "offset": [
        130,
        1292
      ],
      "op": "PUSH2",
      "path": "177",
      "value": "0x7D"
    },
    "90": {
      "fn": null,
      "offset": [
        130,
        1292
      ],
      "op": "JUMP",
      "path": "177"
    },
    "91": {
      "fn": null,
      "offset": [
        130,
        1292
      ],
      "op": "JUMPDEST",
      "path": "177"
    },
    "92": {
      "fn": null,
      "offset": [
        130,
        1292
      ],
      "op": "DUP1",
      "path": "177"
    },
    "93": {
      "fn": null,
      "offset": [
        130,
        1292
      ],
      "op": "PUSH4",
      "path": "177",
      "value": "0xC340A24"
    },
    "98": {
      "fn": null,
      "offset": [
        130,
        1292
      ],
      "op": "EQ",
      "path": "177"
    },
    "99": {
      "fn": null,
      "offset": [
        130,
        1292
      ],
      "op": "PUSH2",
      "path": "177",
      "value": "0x82"
    },
    "102": {
      "fn": null,
      "offset": [
        130,
        1292
      ],
      "op": "JUMPI",
      "path": "177"
    },
    "103": {
      "fn": null,
      "offset": [
        130,
        1292
      ],
      "op": "DUP1",
      "path": "177"
    },
    "104": {
      "fn": null,
      "offset": [
        130,
        1292
      ],
      "op": "PUSH4",
      "path": "177",
      "value": "0x11E56AFF"
    },
    "109": {
      "fn": null,
      "offset": [
        130,
        1292
      ],
      "op": "EQ",
      "path": "177"
    },
    "110": {
      "fn": null,
      "offset": [
        130,
        1292
      ],
      "op": "PUSH2",
      "path": "177",
      "value": "0xA6"
    },
    "113": {
      "fn": null,
      "offset": [
        130,
        1292
      ],
      "op": "JUMPI",
      "path": "177"
    },
    "114": {
      "fn": null,
      "offset": [
        130,
        1292
      ],
      "op": "DUP1",
      "path": "177"
    },
    "115": {
      "fn": null,
      "offset": [
        130,
        1292
      ],
      "op": "PUSH4",
      "path": "177",
      "value": "0x5CBFF6D8"
    },
    "120": {
      "fn": null,
      "offset": [
        130,
        1292
      ],
      "op": "EQ",
      "path": "177"
    },
    "121": {
      "fn": null,
      "offset": [
        130,
        1292
      ],
      "op": "PUSH2",
      "path": "177",
      "value": "0xDE"
    },
    "124": {
      "fn": null,
      "offset": [
        130,
        1292
      ],
      "op": "JUMPI",
      "path": "177"
    },
    "125": {
      "fn": null,
      "offset": [
        130,
        1292
      ],
      "op": "JUMPDEST",
      "path": "177"
    },
    "126": {
      "fn": null,
      "offset": [
        130,
        1292
      ],
      "op": "PUSH1",
      "path": "177",
      "value": "0x0"
    },
    "128": {
      "fn": null,
      "offset": [
        130,
        1292
      ],
      "op": "DUP1",
      "path": "177"
    },
    "129": {
      "first_revert": true,
      "fn": null,
      "offset": [
        130,
        1292
      ],
      "op": "REVERT",
      "path": "177"
    },
    "130": {
      "offset": [
        321,
        344
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "131": {
      "fn": null,
      "offset": [
        321,
        344
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x8A"
    },
    "134": {
      "fn": null,
      "offset": [
        321,
        344
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x263"
    },
    "137": {
      "fn": null,
      "jump": "i",
      "offset": [
        321,
        344
      ],
      "op": "JUMP",
      "path": "22"
    },
    "138": {
      "fn": null,
      "offset": [
        321,
        344
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "139": {
      "fn": null,
      "offset": [
        321,
        344
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "141": {
      "fn": null,
      "offset": [
        321,
        344
      ],
      "op": "DUP1",
      "path": "22"
    },
    "142": {
      "fn": null,
      "offset": [
        321,
        344
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "143": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "145": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "147": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "149": {
      "op": "SHL"
    },
    "150": {
      "op": "SUB"
    },
    "151": {
      "offset": [
        321,
        344
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "152": {
      "fn": null,
      "offset": [
        321,
        344
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "153": {
      "fn": null,
      "offset": [
        321,
        344
      ],
      "op": "AND",
      "path": "22"
    },
    "154": {
      "fn": null,
      "offset": [
        321,
        344
      ],
      "op": "DUP3",
      "path": "22"
    },
    "155": {
      "fn": null,
      "offset": [
        321,
        344
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "156": {
      "fn": null,
      "offset": [
        321,
        344
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "157": {
      "fn": null,
      "offset": [
        321,
        344
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "158": {
      "fn": null,
      "offset": [
        321,
        344
      ],
      "op": "DUP2",
      "path": "22"
    },
    "159": {
      "fn": null,
      "offset": [
        321,
        344
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "160": {
      "fn": null,
      "offset": [
        321,
        344
      ],
      "op": "SUB",
      "path": "22"
    },
    "161": {
      "fn": null,
      "offset": [
        321,
        344
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "163": {
      "fn": null,
      "offset": [
        321,
        344
      ],
      "op": "ADD",
      "path": "22"
    },
    "164": {
      "fn": null,
      "offset": [
        321,
        344
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "165": {
      "fn": null,
      "offset": [
        321,
        344
      ],
      "op": "RETURN",
      "path": "22"
    },
    "166": {
      "fn": "SimpleOracle.getCELOPx",
      "offset": [
        640,
        792
      ],
      "op": "JUMPDEST",
      "path": "177"
    },
    "167": {
      "fn": "SimpleOracle.getCELOPx",
      "offset": [
        640,
        792
      ],
      "op": "PUSH2",
      "path": "177",
      "value": "0xCC"
    },
    "170": {
      "fn": "SimpleOracle.getCELOPx",
      "offset": [
        640,
        792
      ],
      "op": "PUSH1",
      "path": "177",
      "value": "0x4"
    },
    "172": {
      "fn": "SimpleOracle.getCELOPx",
      "offset": [
        640,
        792
      ],
      "op": "DUP1",
      "path": "177"
    },
    "173": {
      "fn": "SimpleOracle.getCELOPx",
      "offset": [
        640,
        792
      ],
      "op": "CALLDATASIZE",
      "path": "177"
    },
    "174": {
      "fn": "SimpleOracle.getCELOPx",
      "offset": [
        640,
        792
      ],
      "op": "SUB",
      "path": "177"
    },
    "175": {
      "fn": "SimpleOracle.getCELOPx",
      "offset": [
        640,
        792
      ],
      "op": "PUSH1",
      "path": "177",
      "value": "0x20"
    },
    "177": {
      "fn": "SimpleOracle.getCELOPx",
      "offset": [
        640,
        792
      ],
      "op": "DUP2",
      "path": "177"
    },
    "178": {
      "fn": "SimpleOracle.getCELOPx",
      "offset": [
        640,
        792
      ],
      "op": "LT",
      "path": "177"
    },
    "179": {
      "fn": "SimpleOracle.getCELOPx",
      "offset": [
        640,
        792
      ],
      "op": "ISZERO",
      "path": "177"
    },
    "180": {
      "fn": "SimpleOracle.getCELOPx",
      "offset": [
        640,
        792
      ],
      "op": "PUSH2",
      "path": "177",
      "value": "0xBC"
    },
    "183": {
      "fn": "SimpleOracle.getCELOPx",
      "offset": [
        640,
        792
      ],
      "op": "JUMPI",
      "path": "177"
    },
    "184": {
      "fn": "SimpleOracle.getCELOPx",
      "offset": [
        640,
        792
      ],
      "op": "PUSH1",
      "path": "177",
      "value": "0x0"
    },
    "186": {
      "fn": "SimpleOracle.getCELOPx",
      "offset": [
        640,
        792
      ],
      "op": "DUP1",
      "path": "177"
    },
    "187": {
      "fn": "SimpleOracle.getCELOPx",
      "offset": [
        640,
        792
      ],
      "op": "REVERT",
      "path": "177"
    },
    "188": {
      "fn": "SimpleOracle.getCELOPx",
      "offset": [
        640,
        792
      ],
      "op": "JUMPDEST",
      "path": "177"
    },
    "189": {
      "op": "POP"
    },
    "190": {
      "fn": "SimpleOracle.getCELOPx",
      "offset": [
        640,
        792
      ],
      "op": "CALLDATALOAD",
      "path": "177"
    },
    "191": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "193": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "195": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "197": {
      "op": "SHL"
    },
    "198": {
      "op": "SUB"
    },
    "199": {
      "fn": "SimpleOracle.getCELOPx",
      "offset": [
        640,
        792
      ],
      "op": "AND",
      "path": "177"
    },
    "200": {
      "fn": "SimpleOracle.getCELOPx",
      "offset": [
        640,
        792
      ],
      "op": "PUSH2",
      "path": "177",
      "value": "0x278"
    },
    "203": {
      "fn": "SimpleOracle.getCELOPx",
      "jump": "i",
      "offset": [
        640,
        792
      ],
      "op": "JUMP",
      "path": "177"
    },
    "204": {
      "fn": "SimpleOracle.getCELOPx",
      "offset": [
        640,
        792
      ],
      "op": "JUMPDEST",
      "path": "177"
    },
    "205": {
      "fn": "SimpleOracle.getCELOPx",
      "offset": [
        640,
        792
      ],
      "op": "PUSH1",
      "path": "177",
      "value": "0x40"
    },
    "207": {
      "fn": "SimpleOracle.getCELOPx",
      "offset": [
        640,
        792
      ],
      "op": "DUP1",
      "path": "177"
    },
    "208": {
      "fn": "SimpleOracle.getCELOPx",
      "offset": [
        640,
        792
      ],
      "op": "MLOAD",
      "path": "177"
    },
    "209": {
      "fn": "SimpleOracle.getCELOPx",
      "offset": [
        640,
        792
      ],
      "op": "SWAP2",
      "path": "177"
    },
    "210": {
      "fn": "SimpleOracle.getCELOPx",
      "offset": [
        640,
        792
      ],
      "op": "DUP3",
      "path": "177"
    },
    "211": {
      "fn": "SimpleOracle.getCELOPx",
      "offset": [
        640,
        792
      ],
      "op": "MSTORE",
      "path": "177"
    },
    "212": {
      "fn": "SimpleOracle.getCELOPx",
      "offset": [
        640,
        792
      ],
      "op": "MLOAD",
      "path": "177"
    },
    "213": {
      "fn": "SimpleOracle.getCELOPx",
      "offset": [
        640,
        792
      ],
      "op": "SWAP1",
      "path": "177"
    },
    "214": {
      "fn": "SimpleOracle.getCELOPx",
      "offset": [
        640,
        792
      ],
      "op": "DUP2",
      "path": "177"
    },
    "215": {
      "fn": "SimpleOracle.getCELOPx",
      "offset": [
        640,
        792
      ],
      "op": "SWAP1",
      "path": "177"
    },
    "216": {
      "fn": "SimpleOracle.getCELOPx",
      "offset": [
        640,
        792
      ],
      "op": "SUB",
      "path": "177"
    },
    "217": {
      "fn": "SimpleOracle.getCELOPx",
      "offset": [
        640,
        792
      ],
      "op": "PUSH1",
      "path": "177",
      "value": "0x20"
    },
    "219": {
      "fn": "SimpleOracle.getCELOPx",
      "offset": [
        640,
        792
      ],
      "op": "ADD",
      "path": "177"
    },
    "220": {
      "fn": "SimpleOracle.getCELOPx",
      "offset": [
        640,
        792
      ],
      "op": "SWAP1",
      "path": "177"
    },
    "221": {
      "fn": "SimpleOracle.getCELOPx",
      "offset": [
        640,
        792
      ],
      "op": "RETURN",
      "path": "177"
    },
    "222": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        998,
        1290
      ],
      "op": "JUMPDEST",
      "path": "177"
    },
    "223": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        998,
        1290
      ],
      "op": "PUSH2",
      "path": "177",
      "value": "0x205"
    },
    "226": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        998,
        1290
      ],
      "op": "PUSH1",
      "path": "177",
      "value": "0x4"
    },
    "228": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        998,
        1290
      ],
      "op": "DUP1",
      "path": "177"
    },
    "229": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        998,
        1290
      ],
      "op": "CALLDATASIZE",
      "path": "177"
    },
    "230": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        998,
        1290
      ],
      "op": "SUB",
      "path": "177"
    },
    "231": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        998,
        1290
      ],
      "op": "PUSH1",
      "path": "177",
      "value": "0x40"
    },
    "233": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        998,
        1290
      ],
      "op": "DUP2",
      "path": "177"
    },
    "234": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        998,
        1290
      ],
      "op": "LT",
      "path": "177"
    },
    "235": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        998,
        1290
      ],
      "op": "ISZERO",
      "path": "177"
    },
    "236": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        998,
        1290
      ],
      "op": "PUSH2",
      "path": "177",
      "value": "0xF4"
    },
    "239": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        998,
        1290
      ],
      "op": "JUMPI",
      "path": "177"
    },
    "240": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        998,
        1290
      ],
      "op": "PUSH1",
      "path": "177",
      "value": "0x0"
    },
    "242": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        998,
        1290
      ],
      "op": "DUP1",
      "path": "177"
    },
    "243": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        998,
        1290
      ],
      "op": "REVERT",
      "path": "177"
    },
    "244": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        998,
        1290
      ],
      "op": "JUMPDEST",
      "path": "177"
    },
    "245": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        998,
        1290
      ],
      "op": "DUP2",
      "path": "177"
    },
    "246": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        998,
        1290
      ],
      "op": "ADD",
      "path": "177"
    },
    "247": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        998,
        1290
      ],
      "op": "SWAP1",
      "path": "177"
    },
    "248": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        998,
        1290
      ],
      "op": "PUSH1",
      "path": "177",
      "value": "0x20"
    },
    "250": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        998,
        1290
      ],
      "op": "DUP2",
      "path": "177"
    },
    "251": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        998,
        1290
      ],
      "op": "ADD",
      "path": "177"
    },
    "252": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        998,
        1290
      ],
      "op": "DUP2",
      "path": "177"
    },
    "253": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        998,
        1290
      ],
      "op": "CALLDATALOAD",
      "path": "177"
    },
    "254": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        998,
        1290
      ],
      "op": "PUSH5",
      "path": "177",
      "value": "0x100000000"
    },
    "260": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        998,
        1290
      ],
      "op": "DUP2",
      "path": "177"
    },
    "261": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        998,
        1290
      ],
      "op": "GT",
      "path": "177"
    },
    "262": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        998,
        1290
      ],
      "op": "ISZERO",
      "path": "177"
    },
    "263": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        998,
        1290
      ],
      "op": "PUSH2",
      "path": "177",
      "value": "0x10F"
    },
    "266": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        998,
        1290
      ],
      "op": "JUMPI",
      "path": "177"
    },
    "267": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        998,
        1290
      ],
      "op": "PUSH1",
      "path": "177",
      "value": "0x0"
    },
    "269": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        998,
        1290
      ],
      "op": "DUP1",
      "path": "177"
    },
    "270": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        998,
        1290
      ],
      "op": "REVERT",
      "path": "177"
    },
    "271": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        998,
        1290
      ],
      "op": "JUMPDEST",
      "path": "177"
    },
    "272": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        998,
        1290
      ],
      "op": "DUP3",
      "path": "177"
    },
    "273": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        998,
        1290
      ],
      "op": "ADD",
      "path": "177"
    },
    "274": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        998,
        1290
      ],
      "op": "DUP4",
      "path": "177"
    },
    "275": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        998,
        1290
      ],
      "op": "PUSH1",
      "path": "177",
      "value": "0x20"
    },
    "277": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        998,
        1290
      ],
      "op": "DUP3",
      "path": "177"
    },
    "278": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        998,
        1290
      ],
      "op": "ADD",
      "path": "177"
    },
    "279": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        998,
        1290
      ],
      "op": "GT",
      "path": "177"
    },
    "280": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        998,
        1290
      ],
      "op": "ISZERO",
      "path": "177"
    },
    "281": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        998,
        1290
      ],
      "op": "PUSH2",
      "path": "177",
      "value": "0x121"
    },
    "284": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        998,
        1290
      ],
      "op": "JUMPI",
      "path": "177"
    },
    "285": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        998,
        1290
      ],
      "op": "PUSH1",
      "path": "177",
      "value": "0x0"
    },
    "287": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        998,
        1290
      ],
      "op": "DUP1",
      "path": "177"
    },
    "288": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        998,
        1290
      ],
      "op": "REVERT",
      "path": "177"
    },
    "289": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        998,
        1290
      ],
      "op": "JUMPDEST",
      "path": "177"
    },
    "290": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        998,
        1290
      ],
      "op": "DUP1",
      "path": "177"
    },
    "291": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        998,
        1290
      ],
      "op": "CALLDATALOAD",
      "path": "177"
    },
    "292": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        998,
        1290
      ],
      "op": "SWAP1",
      "path": "177"
    },
    "293": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        998,
        1290
      ],
      "op": "PUSH1",
      "path": "177",
      "value": "0x20"
    },
    "295": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        998,
        1290
      ],
      "op": "ADD",
      "path": "177"
    },
    "296": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        998,
        1290
      ],
      "op": "SWAP2",
      "path": "177"
    },
    "297": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        998,
        1290
      ],
      "op": "DUP5",
      "path": "177"
    },
    "298": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        998,
        1290
      ],
      "op": "PUSH1",
      "path": "177",
      "value": "0x20"
    },
    "300": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        998,
        1290
      ],
      "op": "DUP4",
      "path": "177"
    },
    "301": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        998,
        1290
      ],
      "op": "MUL",
      "path": "177"
    },
    "302": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        998,
        1290
      ],
      "op": "DUP5",
      "path": "177"
    },
    "303": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        998,
        1290
      ],
      "op": "ADD",
      "path": "177"
    },
    "304": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        998,
        1290
      ],
      "op": "GT",
      "path": "177"
    },
    "305": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        998,
        1290
      ],
      "op": "PUSH5",
      "path": "177",
      "value": "0x100000000"
    },
    "311": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        998,
        1290
      ],
      "op": "DUP4",
      "path": "177"
    },
    "312": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        998,
        1290
      ],
      "op": "GT",
      "path": "177"
    },
    "313": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        998,
        1290
      ],
      "op": "OR",
      "path": "177"
    },
    "314": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        998,
        1290
      ],
      "op": "ISZERO",
      "path": "177"
    },
    "315": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        998,
        1290
      ],
      "op": "PUSH2",
      "path": "177",
      "value": "0x143"
    },
    "318": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        998,
        1290
      ],
      "op": "JUMPI",
      "path": "177"
    },
    "319": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        998,
        1290
      ],
      "op": "PUSH1",
      "path": "177",
      "value": "0x0"
    },
    "321": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        998,
        1290
      ],
      "op": "DUP1",
      "path": "177"
    },
    "322": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        998,
        1290
      ],
      "op": "REVERT",
      "path": "177"
    },
    "323": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        998,
        1290
      ],
      "op": "JUMPDEST",
      "path": "177"
    },
    "324": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        998,
        1290
      ],
      "op": "SWAP2",
      "path": "177"
    },
    "325": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        998,
        1290
      ],
      "op": "SWAP1",
      "path": "177"
    },
    "326": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        998,
        1290
      ],
      "op": "DUP1",
      "path": "177"
    },
    "327": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        998,
        1290
      ],
      "op": "DUP1",
      "path": "177"
    },
    "328": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        998,
        1290
      ],
      "op": "PUSH1",
      "path": "177",
      "value": "0x20"
    },
    "330": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        998,
        1290
      ],
      "op": "MUL",
      "path": "177"
    },
    "331": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        998,
        1290
      ],
      "op": "PUSH1",
      "path": "177",
      "value": "0x20"
    },
    "333": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        998,
        1290
      ],
      "op": "ADD",
      "path": "177"
    },
    "334": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        998,
        1290
      ],
      "op": "PUSH1",
      "path": "177",
      "value": "0x40"
    },
    "336": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        998,
        1290
      ],
      "op": "MLOAD",
      "path": "177"
    },
    "337": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        998,
        1290
      ],
      "op": "SWAP1",
      "path": "177"
    },
    "338": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        998,
        1290
      ],
      "op": "DUP2",
      "path": "177"
    },
    "339": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        998,
        1290
      ],
      "op": "ADD",
      "path": "177"
    },
    "340": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        998,
        1290
      ],
      "op": "PUSH1",
      "path": "177",
      "value": "0x40"
    },
    "342": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        998,
        1290
      ],
      "op": "MSTORE",
      "path": "177"
    },
    "343": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        998,
        1290
      ],
      "op": "DUP1",
      "path": "177"
    },
    "344": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        998,
        1290
      ],
      "op": "SWAP4",
      "path": "177"
    },
    "345": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        998,
        1290
      ],
      "op": "SWAP3",
      "path": "177"
    },
    "346": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        998,
        1290
      ],
      "op": "SWAP2",
      "path": "177"
    },
    "347": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        998,
        1290
      ],
      "op": "SWAP1",
      "path": "177"
    },
    "348": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        998,
        1290
      ],
      "op": "DUP2",
      "path": "177"
    },
    "349": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        998,
        1290
      ],
      "op": "DUP2",
      "path": "177"
    },
    "350": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        998,
        1290
      ],
      "op": "MSTORE",
      "path": "177"
    },
    "351": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        998,
        1290
      ],
      "op": "PUSH1",
      "path": "177",
      "value": "0x20"
    },
    "353": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        998,
        1290
      ],
      "op": "ADD",
      "path": "177"
    },
    "354": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        998,
        1290
      ],
      "op": "DUP4",
      "path": "177"
    },
    "355": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        998,
        1290
      ],
      "op": "DUP4",
      "path": "177"
    },
    "356": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        998,
        1290
      ],
      "op": "PUSH1",
      "path": "177",
      "value": "0x20"
    },
    "358": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        998,
        1290
      ],
      "op": "MUL",
      "path": "177"
    },
    "359": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        998,
        1290
      ],
      "op": "DUP1",
      "path": "177"
    },
    "360": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        998,
        1290
      ],
      "op": "DUP3",
      "path": "177"
    },
    "361": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        998,
        1290
      ],
      "op": "DUP5",
      "path": "177"
    },
    "362": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        998,
        1290
      ],
      "op": "CALLDATACOPY",
      "path": "177"
    },
    "363": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        998,
        1290
      ],
      "op": "PUSH1",
      "path": "177",
      "value": "0x0"
    },
    "365": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        998,
        1290
      ],
      "op": "SWAP3",
      "path": "177"
    },
    "366": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        998,
        1290
      ],
      "op": "ADD",
      "path": "177"
    },
    "367": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        998,
        1290
      ],
      "op": "SWAP2",
      "path": "177"
    },
    "368": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        998,
        1290
      ],
      "op": "SWAP1",
      "path": "177"
    },
    "369": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        998,
        1290
      ],
      "op": "SWAP2",
      "path": "177"
    },
    "370": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        998,
        1290
      ],
      "op": "MSTORE",
      "path": "177"
    },
    "371": {
      "op": "POP"
    },
    "372": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        998,
        1290
      ],
      "op": "SWAP3",
      "path": "177"
    },
    "373": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        998,
        1290
      ],
      "op": "SWAP6",
      "path": "177"
    },
    "374": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        998,
        1290
      ],
      "op": "SWAP5",
      "path": "177"
    },
    "375": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        998,
        1290
      ],
      "op": "SWAP4",
      "path": "177"
    },
    "376": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        998,
        1290
      ],
      "op": "PUSH1",
      "path": "177",
      "value": "0x20"
    },
    "378": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        998,
        1290
      ],
      "op": "DUP2",
      "path": "177"
    },
    "379": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        998,
        1290
      ],
      "op": "ADD",
      "path": "177"
    },
    "380": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        998,
        1290
      ],
      "op": "SWAP4",
      "path": "177"
    },
    "381": {
      "op": "POP"
    },
    "382": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        998,
        1290
      ],
      "op": "CALLDATALOAD",
      "path": "177"
    },
    "383": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        998,
        1290
      ],
      "op": "SWAP2",
      "path": "177"
    },
    "384": {
      "op": "POP"
    },
    "385": {
      "op": "POP"
    },
    "386": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        998,
        1290
      ],
      "op": "PUSH5",
      "path": "177",
      "value": "0x100000000"
    },
    "392": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        998,
        1290
      ],
      "op": "DUP2",
      "path": "177"
    },
    "393": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        998,
        1290
      ],
      "op": "GT",
      "path": "177"
    },
    "394": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        998,
        1290
      ],
      "op": "ISZERO",
      "path": "177"
    },
    "395": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        998,
        1290
      ],
      "op": "PUSH2",
      "path": "177",
      "value": "0x193"
    },
    "398": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        998,
        1290
      ],
      "op": "JUMPI",
      "path": "177"
    },
    "399": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        998,
        1290
      ],
      "op": "PUSH1",
      "path": "177",
      "value": "0x0"
    },
    "401": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        998,
        1290
      ],
      "op": "DUP1",
      "path": "177"
    },
    "402": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        998,
        1290
      ],
      "op": "REVERT",
      "path": "177"
    },
    "403": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        998,
        1290
      ],
      "op": "JUMPDEST",
      "path": "177"
    },
    "404": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        998,
        1290
      ],
      "op": "DUP3",
      "path": "177"
    },
    "405": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        998,
        1290
      ],
      "op": "ADD",
      "path": "177"
    },
    "406": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        998,
        1290
      ],
      "op": "DUP4",
      "path": "177"
    },
    "407": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        998,
        1290
      ],
      "op": "PUSH1",
      "path": "177",
      "value": "0x20"
    },
    "409": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        998,
        1290
      ],
      "op": "DUP3",
      "path": "177"
    },
    "410": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        998,
        1290
      ],
      "op": "ADD",
      "path": "177"
    },
    "411": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        998,
        1290
      ],
      "op": "GT",
      "path": "177"
    },
    "412": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        998,
        1290
      ],
      "op": "ISZERO",
      "path": "177"
    },
    "413": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        998,
        1290
      ],
      "op": "PUSH2",
      "path": "177",
      "value": "0x1A5"
    },
    "416": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        998,
        1290
      ],
      "op": "JUMPI",
      "path": "177"
    },
    "417": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        998,
        1290
      ],
      "op": "PUSH1",
      "path": "177",
      "value": "0x0"
    },
    "419": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        998,
        1290
      ],
      "op": "DUP1",
      "path": "177"
    },
    "420": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        998,
        1290
      ],
      "op": "REVERT",
      "path": "177"
    },
    "421": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        998,
        1290
      ],
      "op": "JUMPDEST",
      "path": "177"
    },
    "422": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        998,
        1290
      ],
      "op": "DUP1",
      "path": "177"
    },
    "423": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        998,
        1290
      ],
      "op": "CALLDATALOAD",
      "path": "177"
    },
    "424": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        998,
        1290
      ],
      "op": "SWAP1",
      "path": "177"
    },
    "425": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        998,
        1290
      ],
      "op": "PUSH1",
      "path": "177",
      "value": "0x20"
    },
    "427": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        998,
        1290
      ],
      "op": "ADD",
      "path": "177"
    },
    "428": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        998,
        1290
      ],
      "op": "SWAP2",
      "path": "177"
    },
    "429": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        998,
        1290
      ],
      "op": "DUP5",
      "path": "177"
    },
    "430": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        998,
        1290
      ],
      "op": "PUSH1",
      "path": "177",
      "value": "0x20"
    },
    "432": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        998,
        1290
      ],
      "op": "DUP4",
      "path": "177"
    },
    "433": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        998,
        1290
      ],
      "op": "MUL",
      "path": "177"
    },
    "434": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        998,
        1290
      ],
      "op": "DUP5",
      "path": "177"
    },
    "435": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        998,
        1290
      ],
      "op": "ADD",
      "path": "177"
    },
    "436": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        998,
        1290
      ],
      "op": "GT",
      "path": "177"
    },
    "437": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        998,
        1290
      ],
      "op": "PUSH5",
      "path": "177",
      "value": "0x100000000"
    },
    "443": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        998,
        1290
      ],
      "op": "DUP4",
      "path": "177"
    },
    "444": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        998,
        1290
      ],
      "op": "GT",
      "path": "177"
    },
    "445": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        998,
        1290
      ],
      "op": "OR",
      "path": "177"
    },
    "446": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        998,
        1290
      ],
      "op": "ISZERO",
      "path": "177"
    },
    "447": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        998,
        1290
      ],
      "op": "PUSH2",
      "path": "177",
      "value": "0x1C7"
    },
    "450": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        998,
        1290
      ],
      "op": "JUMPI",
      "path": "177"
    },
    "451": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        998,
        1290
      ],
      "op": "PUSH1",
      "path": "177",
      "value": "0x0"
    },
    "453": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        998,
        1290
      ],
      "op": "DUP1",
      "path": "177"
    },
    "454": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        998,
        1290
      ],
      "op": "REVERT",
      "path": "177"
    },
    "455": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        998,
        1290
      ],
      "op": "JUMPDEST",
      "path": "177"
    },
    "456": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        998,
        1290
      ],
      "op": "SWAP2",
      "path": "177"
    },
    "457": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        998,
        1290
      ],
      "op": "SWAP1",
      "path": "177"
    },
    "458": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        998,
        1290
      ],
      "op": "DUP1",
      "path": "177"
    },
    "459": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        998,
        1290
      ],
      "op": "DUP1",
      "path": "177"
    },
    "460": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        998,
        1290
      ],
      "op": "PUSH1",
      "path": "177",
      "value": "0x20"
    },
    "462": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        998,
        1290
      ],
      "op": "MUL",
      "path": "177"
    },
    "463": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        998,
        1290
      ],
      "op": "PUSH1",
      "path": "177",
      "value": "0x20"
    },
    "465": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        998,
        1290
      ],
      "op": "ADD",
      "path": "177"
    },
    "466": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        998,
        1290
      ],
      "op": "PUSH1",
      "path": "177",
      "value": "0x40"
    },
    "468": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        998,
        1290
      ],
      "op": "MLOAD",
      "path": "177"
    },
    "469": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        998,
        1290
      ],
      "op": "SWAP1",
      "path": "177"
    },
    "470": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        998,
        1290
      ],
      "op": "DUP2",
      "path": "177"
    },
    "471": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        998,
        1290
      ],
      "op": "ADD",
      "path": "177"
    },
    "472": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        998,
        1290
      ],
      "op": "PUSH1",
      "path": "177",
      "value": "0x40"
    },
    "474": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        998,
        1290
      ],
      "op": "MSTORE",
      "path": "177"
    },
    "475": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        998,
        1290
      ],
      "op": "DUP1",
      "path": "177"
    },
    "476": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        998,
        1290
      ],
      "op": "SWAP4",
      "path": "177"
    },
    "477": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        998,
        1290
      ],
      "op": "SWAP3",
      "path": "177"
    },
    "478": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        998,
        1290
      ],
      "op": "SWAP2",
      "path": "177"
    },
    "479": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        998,
        1290
      ],
      "op": "SWAP1",
      "path": "177"
    },
    "480": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        998,
        1290
      ],
      "op": "DUP2",
      "path": "177"
    },
    "481": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        998,
        1290
      ],
      "op": "DUP2",
      "path": "177"
    },
    "482": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        998,
        1290
      ],
      "op": "MSTORE",
      "path": "177"
    },
    "483": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        998,
        1290
      ],
      "op": "PUSH1",
      "path": "177",
      "value": "0x20"
    },
    "485": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        998,
        1290
      ],
      "op": "ADD",
      "path": "177"
    },
    "486": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        998,
        1290
      ],
      "op": "DUP4",
      "path": "177"
    },
    "487": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        998,
        1290
      ],
      "op": "DUP4",
      "path": "177"
    },
    "488": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        998,
        1290
      ],
      "op": "PUSH1",
      "path": "177",
      "value": "0x20"
    },
    "490": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        998,
        1290
      ],
      "op": "MUL",
      "path": "177"
    },
    "491": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        998,
        1290
      ],
      "op": "DUP1",
      "path": "177"
    },
    "492": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        998,
        1290
      ],
      "op": "DUP3",
      "path": "177"
    },
    "493": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        998,
        1290
      ],
      "op": "DUP5",
      "path": "177"
    },
    "494": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        998,
        1290
      ],
      "op": "CALLDATACOPY",
      "path": "177"
    },
    "495": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        998,
        1290
      ],
      "op": "PUSH1",
      "path": "177",
      "value": "0x0"
    },
    "497": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        998,
        1290
      ],
      "op": "SWAP3",
      "path": "177"
    },
    "498": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        998,
        1290
      ],
      "op": "ADD",
      "path": "177"
    },
    "499": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        998,
        1290
      ],
      "op": "SWAP2",
      "path": "177"
    },
    "500": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        998,
        1290
      ],
      "op": "SWAP1",
      "path": "177"
    },
    "501": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        998,
        1290
      ],
      "op": "SWAP2",
      "path": "177"
    },
    "502": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        998,
        1290
      ],
      "op": "MSTORE",
      "path": "177"
    },
    "503": {
      "op": "POP"
    },
    "504": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        998,
        1290
      ],
      "op": "SWAP3",
      "path": "177"
    },
    "505": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        998,
        1290
      ],
      "op": "SWAP6",
      "path": "177"
    },
    "506": {
      "op": "POP"
    },
    "507": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        998,
        1290
      ],
      "op": "PUSH2",
      "path": "177",
      "value": "0x2D1"
    },
    "510": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        998,
        1290
      ],
      "op": "SWAP5",
      "path": "177"
    },
    "511": {
      "op": "POP"
    },
    "512": {
      "op": "POP"
    },
    "513": {
      "op": "POP"
    },
    "514": {
      "op": "POP"
    },
    "515": {
      "op": "POP"
    },
    "516": {
      "fn": "SimpleOracle.setCELOPx",
      "jump": "i",
      "offset": [
        998,
        1290
      ],
      "op": "JUMP",
      "path": "177"
    },
    "517": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        998,
        1290
      ],
      "op": "JUMPDEST",
      "path": "177"
    },
    "518": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        998,
        1290
      ],
      "op": "STOP",
      "path": "177"
    },
    "519": {
      "offset": [
        183,
        221
      ],
      "op": "JUMPDEST",
      "path": "177"
    },
    "520": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        183,
        221
      ],
      "op": "PUSH2",
      "path": "177",
      "value": "0xCC"
    },
    "523": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        183,
        221
      ],
      "op": "PUSH1",
      "path": "177",
      "value": "0x4"
    },
    "525": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        183,
        221
      ],
      "op": "DUP1",
      "path": "177"
    },
    "526": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        183,
        221
      ],
      "op": "CALLDATASIZE",
      "path": "177"
    },
    "527": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        183,
        221
      ],
      "op": "SUB",
      "path": "177"
    },
    "528": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        183,
        221
      ],
      "op": "PUSH1",
      "path": "177",
      "value": "0x20"
    },
    "530": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        183,
        221
      ],
      "op": "DUP2",
      "path": "177"
    },
    "531": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        183,
        221
      ],
      "op": "LT",
      "path": "177"
    },
    "532": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        183,
        221
      ],
      "op": "ISZERO",
      "path": "177"
    },
    "533": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        183,
        221
      ],
      "op": "PUSH2",
      "path": "177",
      "value": "0x21D"
    },
    "536": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        183,
        221
      ],
      "op": "JUMPI",
      "path": "177"
    },
    "537": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        183,
        221
      ],
      "op": "PUSH1",
      "path": "177",
      "value": "0x0"
    },
    "539": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        183,
        221
      ],
      "op": "DUP1",
      "path": "177"
    },
    "540": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        183,
        221
      ],
      "op": "REVERT",
      "path": "177"
    },
    "541": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        183,
        221
      ],
      "op": "JUMPDEST",
      "path": "177"
    },
    "542": {
      "op": "POP"
    },
    "543": {
      "offset": [
        183,
        221
      ],
      "op": "CALLDATALOAD",
      "path": "177"
    },
    "544": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "546": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "548": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "550": {
      "op": "SHL"
    },
    "551": {
      "op": "SUB"
    },
    "552": {
      "offset": [
        183,
        221
      ],
      "op": "AND",
      "path": "177"
    },
    "553": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        183,
        221
      ],
      "op": "PUSH2",
      "path": "177",
      "value": "0x44C"
    },
    "556": {
      "fn": "SimpleOracle.setCELOPx",
      "jump": "i",
      "offset": [
        183,
        221
      ],
      "op": "JUMP",
      "path": "177"
    },
    "557": {
      "offset": [
        373,
        403
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "558": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        373,
        403
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x8A"
    },
    "561": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        373,
        403
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x45E"
    },
    "564": {
      "fn": "SimpleOracle.setCELOPx",
      "jump": "i",
      "offset": [
        373,
        403
      ],
      "op": "JUMP",
      "path": "22"
    },
    "565": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1234,
        1444
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "566": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1234,
        1444
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x205"
    },
    "569": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1234,
        1444
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x46D"
    },
    "572": {
      "fn": "Governable.acceptGovernor",
      "jump": "i",
      "offset": [
        1234,
        1444
      ],
      "op": "JUMP",
      "path": "22"
    },
    "573": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        981,
        1144
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "574": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        981,
        1144
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x205"
    },
    "577": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        981,
        1144
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "579": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        981,
        1144
      ],
      "op": "DUP1",
      "path": "22"
    },
    "580": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        981,
        1144
      ],
      "op": "CALLDATASIZE",
      "path": "22"
    },
    "581": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        981,
        1144
      ],
      "op": "SUB",
      "path": "22"
    },
    "582": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        981,
        1144
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "584": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        981,
        1144
      ],
      "op": "DUP2",
      "path": "22"
    },
    "585": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        981,
        1144
      ],
      "op": "LT",
      "path": "22"
    },
    "586": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        981,
        1144
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "587": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        981,
        1144
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x253"
    },
    "590": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        981,
        1144
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "591": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        981,
        1144
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "593": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        981,
        1144
      ],
      "op": "DUP1",
      "path": "22"
    },
    "594": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        981,
        1144
      ],
      "op": "REVERT",
      "path": "22"
    },
    "595": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        981,
        1144
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "596": {
      "op": "POP"
    },
    "597": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        981,
        1144
      ],
      "op": "CALLDATALOAD",
      "path": "22"
    },
    "598": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "600": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "602": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "604": {
      "op": "SHL"
    },
    "605": {
      "op": "SUB"
    },
    "606": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        981,
        1144
      ],
      "op": "AND",
      "path": "22"
    },
    "607": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        981,
        1144
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x52F"
    },
    "610": {
      "fn": "Governable.setPendingGovernor",
      "jump": "i",
      "offset": [
        981,
        1144
      ],
      "op": "JUMP",
      "path": "22"
    },
    "611": {
      "offset": [
        321,
        344
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "612": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        321,
        344
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "614": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        321,
        344
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "615": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        321,
        344
      ],
      "op": "PUSH3",
      "path": "22",
      "value": "0x10000"
    },
    "619": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        321,
        344
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "620": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        321,
        344
      ],
      "op": "DIV",
      "path": "22"
    },
    "621": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "623": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "625": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "627": {
      "op": "SHL"
    },
    "628": {
      "op": "SUB"
    },
    "629": {
      "offset": [
        321,
        344
      ],
      "op": "AND",
      "path": "22"
    },
    "630": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        321,
        344
      ],
      "op": "DUP2",
      "path": "22"
    },
    "631": {
      "fn": "Governable.setPendingGovernor",
      "jump": "o",
      "offset": [
        321,
        344
      ],
      "op": "JUMP",
      "path": "22"
    },
    "632": {
      "fn": "SimpleOracle.getCELOPx",
      "offset": [
        640,
        792
      ],
      "op": "JUMPDEST",
      "path": "177"
    },
    "633": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "635": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "637": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "639": {
      "op": "SHL"
    },
    "640": {
      "op": "SUB"
    },
    "641": {
      "fn": "SimpleOracle.getCELOPx",
      "offset": [
        728,
        741
      ],
      "op": "DUP2",
      "path": "177"
    },
    "642": {
      "fn": "SimpleOracle.getCELOPx",
      "offset": [
        728,
        741
      ],
      "op": "AND",
      "path": "177"
    },
    "643": {
      "fn": "SimpleOracle.getCELOPx",
      "offset": [
        706,
        710
      ],
      "op": "PUSH1",
      "path": "177",
      "value": "0x0"
    },
    "645": {
      "fn": "SimpleOracle.getCELOPx",
      "offset": [
        728,
        741
      ],
      "op": "SWAP1",
      "path": "177"
    },
    "646": {
      "fn": "SimpleOracle.getCELOPx",
      "offset": [
        728,
        741
      ],
      "op": "DUP2",
      "path": "177"
    },
    "647": {
      "fn": "SimpleOracle.getCELOPx",
      "offset": [
        728,
        741
      ],
      "op": "MSTORE",
      "path": "177"
    },
    "648": {
      "fn": "SimpleOracle.getCELOPx",
      "offset": [
        728,
        734
      ],
      "op": "PUSH1",
      "path": "177",
      "value": "0x42"
    },
    "650": {
      "fn": "SimpleOracle.getCELOPx",
      "offset": [
        728,
        741
      ],
      "op": "PUSH1",
      "path": "177",
      "value": "0x20"
    },
    "652": {
      "fn": "SimpleOracle.getCELOPx",
      "offset": [
        728,
        741
      ],
      "op": "MSTORE",
      "path": "177"
    },
    "653": {
      "fn": "SimpleOracle.getCELOPx",
      "offset": [
        728,
        741
      ],
      "op": "PUSH1",
      "path": "177",
      "value": "0x40"
    },
    "655": {
      "fn": "SimpleOracle.getCELOPx",
      "offset": [
        728,
        741
      ],
      "op": "DUP2",
      "path": "177"
    },
    "656": {
      "fn": "SimpleOracle.getCELOPx",
      "offset": [
        728,
        741
      ],
      "op": "KECCAK256",
      "path": "177"
    },
    "657": {
      "fn": "SimpleOracle.getCELOPx",
      "offset": [
        728,
        741
      ],
      "op": "SLOAD",
      "path": "177"
    },
    "658": {
      "branch": 13,
      "fn": "SimpleOracle.getCELOPx",
      "offset": [
        755,
        762
      ],
      "op": "DUP1",
      "path": "177",
      "statement": 0
    },
    "659": {
      "fn": "SimpleOracle.getCELOPx",
      "offset": [
        747,
        772
      ],
      "op": "PUSH2",
      "path": "177",
      "value": "0x2CB"
    },
    "662": {
      "branch": 13,
      "fn": "SimpleOracle.getCELOPx",
      "offset": [
        747,
        772
      ],
      "op": "JUMPI",
      "path": "177"
    },
    "663": {
      "fn": "SimpleOracle.getCELOPx",
      "offset": [
        747,
        772
      ],
      "op": "PUSH1",
      "path": "177",
      "value": "0x40"
    },
    "665": {
      "fn": "SimpleOracle.getCELOPx",
      "offset": [
        747,
        772
      ],
      "op": "DUP1",
      "path": "177"
    },
    "666": {
      "fn": "SimpleOracle.getCELOPx",
      "offset": [
        747,
        772
      ],
      "op": "MLOAD",
      "path": "177"
    },
    "667": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "671": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "673": {
      "op": "SHL"
    },
    "674": {
      "fn": "SimpleOracle.getCELOPx",
      "offset": [
        747,
        772
      ],
      "op": "DUP2",
      "path": "177"
    },
    "675": {
      "fn": "SimpleOracle.getCELOPx",
      "offset": [
        747,
        772
      ],
      "op": "MSTORE",
      "path": "177"
    },
    "676": {
      "fn": "SimpleOracle.getCELOPx",
      "offset": [
        747,
        772
      ],
      "op": "PUSH1",
      "path": "177",
      "value": "0x20"
    },
    "678": {
      "fn": "SimpleOracle.getCELOPx",
      "offset": [
        747,
        772
      ],
      "op": "PUSH1",
      "path": "177",
      "value": "0x4"
    },
    "680": {
      "fn": "SimpleOracle.getCELOPx",
      "offset": [
        747,
        772
      ],
      "op": "DUP3",
      "path": "177"
    },
    "681": {
      "fn": "SimpleOracle.getCELOPx",
      "offset": [
        747,
        772
      ],
      "op": "ADD",
      "path": "177"
    },
    "682": {
      "fn": "SimpleOracle.getCELOPx",
      "offset": [
        747,
        772
      ],
      "op": "MSTORE",
      "path": "177"
    },
    "683": {
      "fn": "SimpleOracle.getCELOPx",
      "offset": [
        747,
        772
      ],
      "op": "PUSH1",
      "path": "177",
      "value": "0x5"
    },
    "685": {
      "fn": "SimpleOracle.getCELOPx",
      "offset": [
        747,
        772
      ],
      "op": "PUSH1",
      "path": "177",
      "value": "0x24"
    },
    "687": {
      "fn": "SimpleOracle.getCELOPx",
      "offset": [
        747,
        772
      ],
      "op": "DUP3",
      "path": "177"
    },
    "688": {
      "fn": "SimpleOracle.getCELOPx",
      "offset": [
        747,
        772
      ],
      "op": "ADD",
      "path": "177"
    },
    "689": {
      "fn": "SimpleOracle.getCELOPx",
      "offset": [
        747,
        772
      ],
      "op": "MSTORE",
      "path": "177"
    },
    "690": {
      "op": "PUSH5",
      "value": "0xDCDE40E0F"
    },
    "696": {
      "op": "PUSH1",
      "value": "0xDB"
    },
    "698": {
      "op": "SHL"
    },
    "699": {
      "fn": "SimpleOracle.getCELOPx",
      "offset": [
        747,
        772
      ],
      "op": "PUSH1",
      "path": "177",
      "value": "0x44"
    },
    "701": {
      "fn": "SimpleOracle.getCELOPx",
      "offset": [
        747,
        772
      ],
      "op": "DUP3",
      "path": "177"
    },
    "702": {
      "fn": "SimpleOracle.getCELOPx",
      "offset": [
        747,
        772
      ],
      "op": "ADD",
      "path": "177"
    },
    "703": {
      "fn": "SimpleOracle.getCELOPx",
      "offset": [
        747,
        772
      ],
      "op": "MSTORE",
      "path": "177"
    },
    "704": {
      "fn": "SimpleOracle.getCELOPx",
      "offset": [
        747,
        772
      ],
      "op": "SWAP1",
      "path": "177"
    },
    "705": {
      "fn": "SimpleOracle.getCELOPx",
      "offset": [
        747,
        772
      ],
      "op": "MLOAD",
      "path": "177"
    },
    "706": {
      "fn": "SimpleOracle.getCELOPx",
      "offset": [
        747,
        772
      ],
      "op": "SWAP1",
      "path": "177"
    },
    "707": {
      "fn": "SimpleOracle.getCELOPx",
      "offset": [
        747,
        772
      ],
      "op": "DUP2",
      "path": "177"
    },
    "708": {
      "fn": "SimpleOracle.getCELOPx",
      "offset": [
        747,
        772
      ],
      "op": "SWAP1",
      "path": "177"
    },
    "709": {
      "fn": "SimpleOracle.getCELOPx",
      "offset": [
        747,
        772
      ],
      "op": "SUB",
      "path": "177"
    },
    "710": {
      "fn": "SimpleOracle.getCELOPx",
      "offset": [
        747,
        772
      ],
      "op": "PUSH1",
      "path": "177",
      "value": "0x64"
    },
    "712": {
      "fn": "SimpleOracle.getCELOPx",
      "offset": [
        747,
        772
      ],
      "op": "ADD",
      "path": "177"
    },
    "713": {
      "fn": "SimpleOracle.getCELOPx",
      "offset": [
        747,
        772
      ],
      "op": "SWAP1",
      "path": "177"
    },
    "714": {
      "fn": "SimpleOracle.getCELOPx",
      "offset": [
        747,
        772
      ],
      "op": "REVERT",
      "path": "177"
    },
    "715": {
      "fn": "SimpleOracle.getCELOPx",
      "offset": [
        747,
        772
      ],
      "op": "JUMPDEST",
      "path": "177"
    },
    "716": {
      "fn": "SimpleOracle.getCELOPx",
      "offset": [
        785,
        787
      ],
      "op": "SWAP3",
      "path": "177",
      "statement": 1
    },
    "717": {
      "fn": "SimpleOracle.getCELOPx",
      "offset": [
        640,
        792
      ],
      "op": "SWAP2",
      "path": "177"
    },
    "718": {
      "op": "POP"
    },
    "719": {
      "op": "POP"
    },
    "720": {
      "fn": "SimpleOracle.getCELOPx",
      "jump": "o",
      "offset": [
        640,
        792
      ],
      "op": "JUMP",
      "path": "177"
    },
    "721": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        998,
        1290
      ],
      "op": "JUMPDEST",
      "path": "177"
    },
    "722": {
      "offset": [
        566,
        574
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "724": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        566,
        574
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "725": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        566,
        574
      ],
      "op": "PUSH3",
      "path": "22",
      "value": "0x10000"
    },
    "729": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        566,
        574
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "730": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        566,
        574
      ],
      "op": "DIV",
      "path": "22"
    },
    "731": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "733": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "735": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "737": {
      "op": "SHL"
    },
    "738": {
      "op": "SUB"
    },
    "739": {
      "offset": [
        566,
        574
      ],
      "op": "AND",
      "path": "22"
    },
    "740": {
      "offset": [
        552,
        562
      ],
      "op": "CALLER",
      "path": "22"
    },
    "741": {
      "offset": [
        552,
        574
      ],
      "op": "EQ",
      "path": "22"
    },
    "742": {
      "offset": [
        544,
        595
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x329"
    },
    "745": {
      "offset": [
        544,
        595
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "746": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        544,
        595
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "748": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        544,
        595
      ],
      "op": "DUP1",
      "path": "22"
    },
    "749": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        544,
        595
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "750": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "754": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "756": {
      "op": "SHL"
    },
    "757": {
      "offset": [
        544,
        595
      ],
      "op": "DUP2",
      "path": "22"
    },
    "758": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        544,
        595
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "759": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        544,
        595
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "761": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        544,
        595
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "763": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        544,
        595
      ],
      "op": "DUP3",
      "path": "22"
    },
    "764": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        544,
        595
      ],
      "op": "ADD",
      "path": "22"
    },
    "765": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        544,
        595
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "766": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        544,
        595
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x10"
    },
    "768": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        544,
        595
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x24"
    },
    "770": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        544,
        595
      ],
      "op": "DUP3",
      "path": "22"
    },
    "771": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        544,
        595
      ],
      "op": "ADD",
      "path": "22"
    },
    "772": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        544,
        595
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "773": {
      "op": "PUSH16",
      "value": "0x3737BA103A34329033B7BB32B93737B9"
    },
    "790": {
      "op": "PUSH1",
      "value": "0x81"
    },
    "792": {
      "op": "SHL"
    },
    "793": {
      "offset": [
        544,
        595
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x44"
    },
    "795": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        544,
        595
      ],
      "op": "DUP3",
      "path": "22"
    },
    "796": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        544,
        595
      ],
      "op": "ADD",
      "path": "22"
    },
    "797": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        544,
        595
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "798": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        544,
        595
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "799": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        544,
        595
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "800": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        544,
        595
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "801": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        544,
        595
      ],
      "op": "DUP2",
      "path": "22"
    },
    "802": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        544,
        595
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "803": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        544,
        595
      ],
      "op": "SUB",
      "path": "22"
    },
    "804": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        544,
        595
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x64"
    },
    "806": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        544,
        595
      ],
      "op": "ADD",
      "path": "22"
    },
    "807": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        544,
        595
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "808": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        544,
        595
      ],
      "op": "REVERT",
      "path": "22"
    },
    "809": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        544,
        595
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "810": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        1109,
        1112
      ],
      "op": "DUP1",
      "path": "177",
      "statement": 2
    },
    "811": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        1109,
        1119
      ],
      "op": "MLOAD",
      "path": "177"
    },
    "812": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        1092,
        1098
      ],
      "op": "DUP3",
      "path": "177"
    },
    "813": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        1092,
        1105
      ],
      "op": "MLOAD",
      "path": "177"
    },
    "814": {
      "branch": 14,
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        1092,
        1119
      ],
      "op": "EQ",
      "path": "177"
    },
    "815": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        1084,
        1143
      ],
      "op": "PUSH2",
      "path": "177",
      "value": "0x375"
    },
    "818": {
      "branch": 14,
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        1084,
        1143
      ],
      "op": "JUMPI",
      "path": "177"
    },
    "819": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        1084,
        1143
      ],
      "op": "PUSH1",
      "path": "177",
      "value": "0x40"
    },
    "821": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        1084,
        1143
      ],
      "op": "DUP1",
      "path": "177"
    },
    "822": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        1084,
        1143
      ],
      "op": "MLOAD",
      "path": "177"
    },
    "823": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "827": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "829": {
      "op": "SHL"
    },
    "830": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        1084,
        1143
      ],
      "op": "DUP2",
      "path": "177"
    },
    "831": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        1084,
        1143
      ],
      "op": "MSTORE",
      "path": "177"
    },
    "832": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        1084,
        1143
      ],
      "op": "PUSH1",
      "path": "177",
      "value": "0x20"
    },
    "834": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        1084,
        1143
      ],
      "op": "PUSH1",
      "path": "177",
      "value": "0x4"
    },
    "836": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        1084,
        1143
      ],
      "op": "DUP3",
      "path": "177"
    },
    "837": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        1084,
        1143
      ],
      "op": "ADD",
      "path": "177"
    },
    "838": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        1084,
        1143
      ],
      "op": "MSTORE",
      "path": "177"
    },
    "839": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        1084,
        1143
      ],
      "op": "PUSH1",
      "path": "177",
      "value": "0x13"
    },
    "841": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        1084,
        1143
      ],
      "op": "PUSH1",
      "path": "177",
      "value": "0x24"
    },
    "843": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        1084,
        1143
      ],
      "op": "DUP3",
      "path": "177"
    },
    "844": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        1084,
        1143
      ],
      "op": "ADD",
      "path": "177"
    },
    "845": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        1084,
        1143
      ],
      "op": "MSTORE",
      "path": "177"
    },
    "846": {
      "op": "PUSH19",
      "value": "0xD2DCC6DEDCE6D2E6E8CADCE840D8CADCCEE8D"
    },
    "866": {
      "op": "PUSH1",
      "value": "0x6B"
    },
    "868": {
      "op": "SHL"
    },
    "869": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        1084,
        1143
      ],
      "op": "PUSH1",
      "path": "177",
      "value": "0x44"
    },
    "871": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        1084,
        1143
      ],
      "op": "DUP3",
      "path": "177"
    },
    "872": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        1084,
        1143
      ],
      "op": "ADD",
      "path": "177"
    },
    "873": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        1084,
        1143
      ],
      "op": "MSTORE",
      "path": "177"
    },
    "874": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        1084,
        1143
      ],
      "op": "SWAP1",
      "path": "177"
    },
    "875": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        1084,
        1143
      ],
      "op": "MLOAD",
      "path": "177"
    },
    "876": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        1084,
        1143
      ],
      "op": "SWAP1",
      "path": "177"
    },
    "877": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        1084,
        1143
      ],
      "op": "DUP2",
      "path": "177"
    },
    "878": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        1084,
        1143
      ],
      "op": "SWAP1",
      "path": "177"
    },
    "879": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        1084,
        1143
      ],
      "op": "SUB",
      "path": "177"
    },
    "880": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        1084,
        1143
      ],
      "op": "PUSH1",
      "path": "177",
      "value": "0x64"
    },
    "882": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        1084,
        1143
      ],
      "op": "ADD",
      "path": "177"
    },
    "883": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        1084,
        1143
      ],
      "op": "SWAP1",
      "path": "177"
    },
    "884": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        1084,
        1143
      ],
      "op": "REVERT",
      "path": "177"
    },
    "885": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        1084,
        1143
      ],
      "op": "JUMPDEST",
      "path": "177"
    },
    "886": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        1154,
        1162
      ],
      "op": "PUSH1",
      "path": "177",
      "value": "0x0"
    },
    "888": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        1149,
        1286
      ],
      "op": "JUMPDEST",
      "path": "177"
    },
    "889": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        1174,
        1180
      ],
      "op": "DUP3",
      "path": "177"
    },
    "890": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        1174,
        1187
      ],
      "op": "MLOAD",
      "path": "177"
    },
    "891": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        1168,
        1171
      ],
      "op": "DUP2",
      "path": "177"
    },
    "892": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        1168,
        1187
      ],
      "op": "LT",
      "path": "177"
    },
    "893": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        1149,
        1286
      ],
      "op": "ISZERO",
      "path": "177"
    },
    "894": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        1149,
        1286
      ],
      "op": "PUSH2",
      "path": "177",
      "value": "0x447"
    },
    "897": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        1149,
        1286
      ],
      "op": "JUMPI",
      "path": "177"
    },
    "898": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        1226,
        1229
      ],
      "op": "DUP2",
      "path": "177",
      "statement": 3
    },
    "899": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        1230,
        1233
      ],
      "op": "DUP2",
      "path": "177"
    },
    "900": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        1226,
        1234
      ],
      "op": "DUP2",
      "path": "177"
    },
    "901": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        1226,
        1234
      ],
      "op": "MLOAD",
      "path": "177"
    },
    "902": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        1226,
        1234
      ],
      "op": "DUP2",
      "path": "177"
    },
    "903": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        1226,
        1234
      ],
      "op": "LT",
      "path": "177"
    },
    "904": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        1226,
        1234
      ],
      "op": "PUSH2",
      "path": "177",
      "value": "0x38D"
    },
    "907": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        1226,
        1234
      ],
      "op": "JUMPI",
      "path": "177"
    },
    "908": {
      "dev": "Index out of range",
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        1226,
        1234
      ],
      "op": "INVALID",
      "path": "177"
    },
    "909": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        1226,
        1234
      ],
      "op": "JUMPDEST",
      "path": "177"
    },
    "910": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        1226,
        1234
      ],
      "op": "PUSH1",
      "path": "177",
      "value": "0x20"
    },
    "912": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        1226,
        1234
      ],
      "op": "MUL",
      "path": "177"
    },
    "913": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        1226,
        1234
      ],
      "op": "PUSH1",
      "path": "177",
      "value": "0x20"
    },
    "915": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        1226,
        1234
      ],
      "op": "ADD",
      "path": "177"
    },
    "916": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        1226,
        1234
      ],
      "op": "ADD",
      "path": "177"
    },
    "917": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        1226,
        1234
      ],
      "op": "MLOAD",
      "path": "177"
    },
    "918": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        1204,
        1210
      ],
      "op": "PUSH1",
      "path": "177",
      "value": "0x42"
    },
    "920": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        1204,
        1223
      ],
      "op": "PUSH1",
      "path": "177",
      "value": "0x0"
    },
    "922": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        1211,
        1217
      ],
      "op": "DUP6",
      "path": "177"
    },
    "923": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        1218,
        1221
      ],
      "op": "DUP5",
      "path": "177"
    },
    "924": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        1211,
        1222
      ],
      "op": "DUP2",
      "path": "177"
    },
    "925": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        1211,
        1222
      ],
      "op": "MLOAD",
      "path": "177"
    },
    "926": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        1211,
        1222
      ],
      "op": "DUP2",
      "path": "177"
    },
    "927": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        1211,
        1222
      ],
      "op": "LT",
      "path": "177"
    },
    "928": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        1211,
        1222
      ],
      "op": "PUSH2",
      "path": "177",
      "value": "0x3A5"
    },
    "931": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        1211,
        1222
      ],
      "op": "JUMPI",
      "path": "177"
    },
    "932": {
      "dev": "Index out of range",
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        1211,
        1222
      ],
      "op": "INVALID",
      "path": "177"
    },
    "933": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        1211,
        1222
      ],
      "op": "JUMPDEST",
      "path": "177"
    },
    "934": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        1211,
        1222
      ],
      "op": "PUSH1",
      "path": "177",
      "value": "0x20"
    },
    "936": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        1211,
        1222
      ],
      "op": "MUL",
      "path": "177"
    },
    "937": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        1211,
        1222
      ],
      "op": "PUSH1",
      "path": "177",
      "value": "0x20"
    },
    "939": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        1211,
        1222
      ],
      "op": "ADD",
      "path": "177"
    },
    "940": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        1211,
        1222
      ],
      "op": "ADD",
      "path": "177"
    },
    "941": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        1211,
        1222
      ],
      "op": "MLOAD",
      "path": "177"
    },
    "942": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "944": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "946": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "948": {
      "op": "SHL"
    },
    "949": {
      "op": "SUB"
    },
    "950": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        1204,
        1223
      ],
      "op": "AND",
      "path": "177"
    },
    "951": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "953": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "955": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "957": {
      "op": "SHL"
    },
    "958": {
      "op": "SUB"
    },
    "959": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        1204,
        1223
      ],
      "op": "AND",
      "path": "177"
    },
    "960": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        1204,
        1223
      ],
      "op": "DUP2",
      "path": "177"
    },
    "961": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        1204,
        1223
      ],
      "op": "MSTORE",
      "path": "177"
    },
    "962": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        1204,
        1223
      ],
      "op": "PUSH1",
      "path": "177",
      "value": "0x20"
    },
    "964": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        1204,
        1223
      ],
      "op": "ADD",
      "path": "177"
    },
    "965": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        1204,
        1223
      ],
      "op": "SWAP1",
      "path": "177"
    },
    "966": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        1204,
        1223
      ],
      "op": "DUP2",
      "path": "177"
    },
    "967": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        1204,
        1223
      ],
      "op": "MSTORE",
      "path": "177"
    },
    "968": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        1204,
        1223
      ],
      "op": "PUSH1",
      "path": "177",
      "value": "0x20"
    },
    "970": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        1204,
        1223
      ],
      "op": "ADD",
      "path": "177"
    },
    "971": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        1204,
        1223
      ],
      "op": "PUSH1",
      "path": "177",
      "value": "0x0"
    },
    "973": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        1204,
        1223
      ],
      "op": "KECCAK256",
      "path": "177"
    },
    "974": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        1204,
        1234
      ],
      "op": "DUP2",
      "path": "177"
    },
    "975": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        1204,
        1234
      ],
      "op": "SWAP1",
      "path": "177"
    },
    "976": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        1204,
        1234
      ],
      "op": "SSTORE",
      "path": "177"
    },
    "977": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        1204,
        1234
      ],
      "op": "POP",
      "path": "177"
    },
    "978": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        1247,
        1279
      ],
      "op": "PUSH32",
      "path": "177",
      "statement": 4,
      "value": "0x3BDA3520ADB5F2580E1CA782AA562B60292C45D40F3CC1E63A2A103C26755ECA"
    },
    "1011": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        1257,
        1263
      ],
      "op": "DUP4",
      "path": "177"
    },
    "1012": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        1264,
        1267
      ],
      "op": "DUP3",
      "path": "177"
    },
    "1013": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        1257,
        1268
      ],
      "op": "DUP2",
      "path": "177"
    },
    "1014": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        1257,
        1268
      ],
      "op": "MLOAD",
      "path": "177"
    },
    "1015": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        1257,
        1268
      ],
      "op": "DUP2",
      "path": "177"
    },
    "1016": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        1257,
        1268
      ],
      "op": "LT",
      "path": "177"
    },
    "1017": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        1257,
        1268
      ],
      "op": "PUSH2",
      "path": "177",
      "value": "0x3FE"
    },
    "1020": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        1257,
        1268
      ],
      "op": "JUMPI",
      "path": "177"
    },
    "1021": {
      "dev": "Index out of range",
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        1257,
        1268
      ],
      "op": "INVALID",
      "path": "177"
    },
    "1022": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        1257,
        1268
      ],
      "op": "JUMPDEST",
      "path": "177"
    },
    "1023": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        1257,
        1268
      ],
      "op": "PUSH1",
      "path": "177",
      "value": "0x20"
    },
    "1025": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        1257,
        1268
      ],
      "op": "MUL",
      "path": "177"
    },
    "1026": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        1257,
        1268
      ],
      "op": "PUSH1",
      "path": "177",
      "value": "0x20"
    },
    "1028": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        1257,
        1268
      ],
      "op": "ADD",
      "path": "177"
    },
    "1029": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        1257,
        1268
      ],
      "op": "ADD",
      "path": "177"
    },
    "1030": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        1257,
        1268
      ],
      "op": "MLOAD",
      "path": "177"
    },
    "1031": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        1270,
        1273
      ],
      "op": "DUP4",
      "path": "177"
    },
    "1032": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        1274,
        1277
      ],
      "op": "DUP4",
      "path": "177"
    },
    "1033": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        1270,
        1278
      ],
      "op": "DUP2",
      "path": "177"
    },
    "1034": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        1270,
        1278
      ],
      "op": "MLOAD",
      "path": "177"
    },
    "1035": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        1270,
        1278
      ],
      "op": "DUP2",
      "path": "177"
    },
    "1036": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        1270,
        1278
      ],
      "op": "LT",
      "path": "177"
    },
    "1037": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        1270,
        1278
      ],
      "op": "PUSH2",
      "path": "177",
      "value": "0x412"
    },
    "1040": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        1270,
        1278
      ],
      "op": "JUMPI",
      "path": "177"
    },
    "1041": {
      "dev": "Index out of range",
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        1270,
        1278
      ],
      "op": "INVALID",
      "path": "177"
    },
    "1042": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        1270,
        1278
      ],
      "op": "JUMPDEST",
      "path": "177"
    },
    "1043": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        1270,
        1278
      ],
      "op": "PUSH1",
      "path": "177",
      "value": "0x20"
    },
    "1045": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        1270,
        1278
      ],
      "op": "MUL",
      "path": "177"
    },
    "1046": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        1270,
        1278
      ],
      "op": "PUSH1",
      "path": "177",
      "value": "0x20"
    },
    "1048": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        1270,
        1278
      ],
      "op": "ADD",
      "path": "177"
    },
    "1049": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        1270,
        1278
      ],
      "op": "ADD",
      "path": "177"
    },
    "1050": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        1270,
        1278
      ],
      "op": "MLOAD",
      "path": "177"
    },
    "1051": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        1247,
        1279
      ],
      "op": "PUSH1",
      "path": "177",
      "value": "0x40"
    },
    "1053": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        1247,
        1279
      ],
      "op": "MLOAD",
      "path": "177"
    },
    "1054": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        1247,
        1279
      ],
      "op": "DUP1",
      "path": "177"
    },
    "1055": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        1247,
        1279
      ],
      "op": "DUP4",
      "path": "177"
    },
    "1056": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1058": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1060": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1062": {
      "op": "SHL"
    },
    "1063": {
      "op": "SUB"
    },
    "1064": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        1247,
        1279
      ],
      "op": "AND",
      "path": "177"
    },
    "1065": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        1247,
        1279
      ],
      "op": "DUP2",
      "path": "177"
    },
    "1066": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        1247,
        1279
      ],
      "op": "MSTORE",
      "path": "177"
    },
    "1067": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        1247,
        1279
      ],
      "op": "PUSH1",
      "path": "177",
      "value": "0x20"
    },
    "1069": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        1247,
        1279
      ],
      "op": "ADD",
      "path": "177"
    },
    "1070": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        1247,
        1279
      ],
      "op": "DUP3",
      "path": "177"
    },
    "1071": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        1247,
        1279
      ],
      "op": "DUP2",
      "path": "177"
    },
    "1072": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        1247,
        1279
      ],
      "op": "MSTORE",
      "path": "177"
    },
    "1073": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        1247,
        1279
      ],
      "op": "PUSH1",
      "path": "177",
      "value": "0x20"
    },
    "1075": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        1247,
        1279
      ],
      "op": "ADD",
      "path": "177"
    },
    "1076": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        1247,
        1279
      ],
      "op": "SWAP3",
      "path": "177"
    },
    "1077": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        1247,
        1279
      ],
      "op": "POP",
      "path": "177"
    },
    "1078": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        1247,
        1279
      ],
      "op": "POP",
      "path": "177"
    },
    "1079": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        1247,
        1279
      ],
      "op": "POP",
      "path": "177"
    },
    "1080": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        1247,
        1279
      ],
      "op": "PUSH1",
      "path": "177",
      "value": "0x40"
    },
    "1082": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        1247,
        1279
      ],
      "op": "MLOAD",
      "path": "177"
    },
    "1083": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        1247,
        1279
      ],
      "op": "DUP1",
      "path": "177"
    },
    "1084": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        1247,
        1279
      ],
      "op": "SWAP2",
      "path": "177"
    },
    "1085": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        1247,
        1279
      ],
      "op": "SUB",
      "path": "177"
    },
    "1086": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        1247,
        1279
      ],
      "op": "SWAP1",
      "path": "177"
    },
    "1087": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        1247,
        1279
      ],
      "op": "LOG1",
      "path": "177"
    },
    "1088": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        1189,
        1194
      ],
      "op": "PUSH1",
      "path": "177",
      "statement": 5,
      "value": "0x1"
    },
    "1090": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        1189,
        1194
      ],
      "op": "ADD",
      "path": "177"
    },
    "1091": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        1149,
        1286
      ],
      "op": "PUSH2",
      "path": "177",
      "value": "0x378"
    },
    "1094": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        1149,
        1286
      ],
      "op": "JUMP",
      "path": "177"
    },
    "1095": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        1149,
        1286
      ],
      "op": "JUMPDEST",
      "path": "177"
    },
    "1096": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        1149,
        1286
      ],
      "op": "POP",
      "path": "177"
    },
    "1097": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        998,
        1290
      ],
      "op": "POP",
      "path": "177"
    },
    "1098": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        998,
        1290
      ],
      "op": "POP",
      "path": "177"
    },
    "1099": {
      "fn": "SimpleOracle.setCELOPx",
      "jump": "o",
      "offset": [
        998,
        1290
      ],
      "op": "JUMP",
      "path": "177"
    },
    "1100": {
      "offset": [
        183,
        221
      ],
      "op": "JUMPDEST",
      "path": "177"
    },
    "1101": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        183,
        221
      ],
      "op": "PUSH1",
      "path": "177",
      "value": "0x42"
    },
    "1103": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        183,
        221
      ],
      "op": "PUSH1",
      "path": "177",
      "value": "0x20"
    },
    "1105": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        183,
        221
      ],
      "op": "MSTORE",
      "path": "177"
    },
    "1106": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        183,
        221
      ],
      "op": "PUSH1",
      "path": "177",
      "value": "0x0"
    },
    "1108": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        183,
        221
      ],
      "op": "SWAP1",
      "path": "177"
    },
    "1109": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        183,
        221
      ],
      "op": "DUP2",
      "path": "177"
    },
    "1110": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        183,
        221
      ],
      "op": "MSTORE",
      "path": "177"
    },
    "1111": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        183,
        221
      ],
      "op": "PUSH1",
      "path": "177",
      "value": "0x40"
    },
    "1113": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        183,
        221
      ],
      "op": "SWAP1",
      "path": "177"
    },
    "1114": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        183,
        221
      ],
      "op": "KECCAK256",
      "path": "177"
    },
    "1115": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        183,
        221
      ],
      "op": "SLOAD",
      "path": "177"
    },
    "1116": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        183,
        221
      ],
      "op": "DUP2",
      "path": "177"
    },
    "1117": {
      "fn": "SimpleOracle.setCELOPx",
      "jump": "o",
      "offset": [
        183,
        221
      ],
      "op": "JUMP",
      "path": "177"
    },
    "1118": {
      "offset": [
        373,
        403
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1119": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        373,
        403
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x1"
    },
    "1121": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        373,
        403
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "1122": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1124": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1126": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1128": {
      "op": "SHL"
    },
    "1129": {
      "op": "SUB"
    },
    "1130": {
      "offset": [
        373,
        403
      ],
      "op": "AND",
      "path": "22"
    },
    "1131": {
      "fn": "SimpleOracle.setCELOPx",
      "offset": [
        373,
        403
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1132": {
      "fn": "SimpleOracle.setCELOPx",
      "jump": "o",
      "offset": [
        373,
        403
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1133": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1234,
        1444
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1134": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1297,
        1312
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 6,
      "value": "0x1"
    },
    "1136": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1297,
        1312
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "1137": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1139": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1141": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1143": {
      "op": "SHL"
    },
    "1144": {
      "op": "SUB"
    },
    "1145": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1297,
        1312
      ],
      "op": "AND",
      "path": "22"
    },
    "1146": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1283,
        1293
      ],
      "op": "CALLER",
      "path": "22"
    },
    "1147": {
      "branch": 15,
      "fn": "Governable.acceptGovernor",
      "offset": [
        1283,
        1312
      ],
      "op": "EQ",
      "path": "22"
    },
    "1148": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1275,
        1341
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x4CC"
    },
    "1151": {
      "branch": 15,
      "fn": "Governable.acceptGovernor",
      "offset": [
        1275,
        1341
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "1152": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1275,
        1341
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "1154": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1275,
        1341
      ],
      "op": "DUP1",
      "path": "22"
    },
    "1155": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1275,
        1341
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "1156": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1160": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1162": {
      "op": "SHL"
    },
    "1163": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1275,
        1341
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1164": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1275,
        1341
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "1165": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1275,
        1341
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "1167": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1275,
        1341
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "1169": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1275,
        1341
      ],
      "op": "DUP3",
      "path": "22"
    },
    "1170": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1275,
        1341
      ],
      "op": "ADD",
      "path": "22"
    },
    "1171": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1275,
        1341
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "1172": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1275,
        1341
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x18"
    },
    "1174": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1275,
        1341
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x24"
    },
    "1176": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1275,
        1341
      ],
      "op": "DUP3",
      "path": "22"
    },
    "1177": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1275,
        1341
      ],
      "op": "ADD",
      "path": "22"
    },
    "1178": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1275,
        1341
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "1179": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1275,
        1341
      ],
      "op": "PUSH32",
      "path": "22",
      "value": "0x6E6F74207468652070656E64696E6720676F7665726E6F720000000000000000"
    },
    "1212": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1275,
        1341
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x44"
    },
    "1214": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1275,
        1341
      ],
      "op": "DUP3",
      "path": "22"
    },
    "1215": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1275,
        1341
      ],
      "op": "ADD",
      "path": "22"
    },
    "1216": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1275,
        1341
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "1217": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1275,
        1341
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1218": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1275,
        1341
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "1219": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1275,
        1341
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1220": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1275,
        1341
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1221": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1275,
        1341
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1222": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1275,
        1341
      ],
      "op": "SUB",
      "path": "22"
    },
    "1223": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1275,
        1341
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x64"
    },
    "1225": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1275,
        1341
      ],
      "op": "ADD",
      "path": "22"
    },
    "1226": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1275,
        1341
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1227": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1275,
        1341
      ],
      "op": "REVERT",
      "path": "22"
    },
    "1228": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1275,
        1341
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1229": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1347,
        1362
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 7,
      "value": "0x1"
    },
    "1231": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1347,
        1375
      ],
      "op": "DUP1",
      "path": "22"
    },
    "1232": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1347,
        1375
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "1233": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1235": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1237": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1239": {
      "op": "SHL"
    },
    "1240": {
      "op": "SUB"
    },
    "1241": {
      "op": "NOT"
    },
    "1242": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1347,
        1375
      ],
      "op": "AND",
      "path": "22"
    },
    "1243": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1347,
        1375
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1244": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1347,
        1375
      ],
      "op": "SSTORE",
      "path": "22"
    },
    "1245": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1247": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1381,
        1402
      ],
      "op": "DUP1",
      "path": "22",
      "statement": 8
    },
    "1248": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1381,
        1402
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "1249": {
      "op": "PUSH3",
      "value": "0x10000"
    },
    "1253": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1255": {
      "op": "PUSH1",
      "value": "0xB0"
    },
    "1257": {
      "op": "SHL"
    },
    "1258": {
      "op": "SUB"
    },
    "1259": {
      "op": "NOT"
    },
    "1260": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1381,
        1402
      ],
      "op": "AND",
      "path": "22"
    },
    "1261": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1392,
        1402
      ],
      "op": "CALLER",
      "path": "22"
    },
    "1262": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1381,
        1402
      ],
      "op": "PUSH3",
      "path": "22",
      "value": "0x10000"
    },
    "1266": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1381,
        1402
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1267": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1381,
        1402
      ],
      "op": "MUL",
      "path": "22"
    },
    "1268": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1381,
        1402
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "1269": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1381,
        1402
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1270": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1381,
        1402
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "1271": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1381,
        1402
      ],
      "op": "OR",
      "path": "22"
    },
    "1272": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1381,
        1402
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1273": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1381,
        1402
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "1274": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1381,
        1402
      ],
      "op": "SSTORE",
      "path": "22"
    },
    "1275": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1413,
        1439
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 9,
      "value": "0x40"
    },
    "1277": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1413,
        1439
      ],
      "op": "DUP1",
      "path": "22"
    },
    "1278": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1413,
        1439
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "1279": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1413,
        1439
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "1280": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1413,
        1439
      ],
      "op": "DUP3",
      "path": "22"
    },
    "1281": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1413,
        1439
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "1282": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1413,
        1439
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "1283": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1413,
        1439
      ],
      "op": "PUSH32",
      "path": "22",
      "value": "0xD345D81CE68C70B119A17EEE79DC1421700BD9CB21CA148A62DC90983964E82F"
    },
    "1316": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1413,
        1439
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "1317": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1413,
        1439
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "1319": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1413,
        1439
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1320": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1413,
        1439
      ],
      "op": "DUP3",
      "path": "22"
    },
    "1321": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1413,
        1439
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1322": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1413,
        1439
      ],
      "op": "SUB",
      "path": "22"
    },
    "1323": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1413,
        1439
      ],
      "op": "ADD",
      "path": "22"
    },
    "1324": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1413,
        1439
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1325": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1413,
        1439
      ],
      "op": "LOG1",
      "path": "22"
    },
    "1326": {
      "fn": "Governable.acceptGovernor",
      "jump": "o",
      "offset": [
        1234,
        1444
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1327": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        981,
        1144
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1328": {
      "offset": [
        566,
        574
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "1330": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        566,
        574
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "1331": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        566,
        574
      ],
      "op": "PUSH3",
      "path": "22",
      "value": "0x10000"
    },
    "1335": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        566,
        574
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1336": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        566,
        574
      ],
      "op": "DIV",
      "path": "22"
    },
    "1337": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1339": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1341": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1343": {
      "op": "SHL"
    },
    "1344": {
      "op": "SUB"
    },
    "1345": {
      "offset": [
        566,
        574
      ],
      "op": "AND",
      "path": "22"
    },
    "1346": {
      "offset": [
        552,
        562
      ],
      "op": "CALLER",
      "path": "22"
    },
    "1347": {
      "offset": [
        552,
        574
      ],
      "op": "EQ",
      "path": "22"
    },
    "1348": {
      "offset": [
        544,
        595
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x587"
    },
    "1351": {
      "offset": [
        544,
        595
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "1352": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        544,
        595
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "1354": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        544,
        595
      ],
      "op": "DUP1",
      "path": "22"
    },
    "1355": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        544,
        595
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "1356": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1360": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1362": {
      "op": "SHL"
    },
    "1363": {
      "offset": [
        544,
        595
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1364": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        544,
        595
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "1365": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        544,
        595
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "1367": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        544,
        595
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "1369": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        544,
        595
      ],
      "op": "DUP3",
      "path": "22"
    },
    "1370": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        544,
        595
      ],
      "op": "ADD",
      "path": "22"
    },
    "1371": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        544,
        595
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "1372": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        544,
        595
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x10"
    },
    "1374": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        544,
        595
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x24"
    },
    "1376": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        544,
        595
      ],
      "op": "DUP3",
      "path": "22"
    },
    "1377": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        544,
        595
      ],
      "op": "ADD",
      "path": "22"
    },
    "1378": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        544,
        595
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "1379": {
      "op": "PUSH16",
      "value": "0x3737BA103A34329033B7BB32B93737B9"
    },
    "1396": {
      "op": "PUSH1",
      "value": "0x81"
    },
    "1398": {
      "op": "SHL"
    },
    "1399": {
      "offset": [
        544,
        595
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x44"
    },
    "1401": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        544,
        595
      ],
      "op": "DUP3",
      "path": "22"
    },
    "1402": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        544,
        595
      ],
      "op": "ADD",
      "path": "22"
    },
    "1403": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        544,
        595
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "1404": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        544,
        595
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1405": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        544,
        595
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "1406": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        544,
        595
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1407": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        544,
        595
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1408": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        544,
        595
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1409": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        544,
        595
      ],
      "op": "SUB",
      "path": "22"
    },
    "1410": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        544,
        595
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x64"
    },
    "1412": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        544,
        595
      ],
      "op": "ADD",
      "path": "22"
    },
    "1413": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        544,
        595
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1414": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        544,
        595
      ],
      "op": "REVERT",
      "path": "22"
    },
    "1415": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        544,
        595
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1416": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        1058,
        1073
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 10,
      "value": "0x1"
    },
    "1418": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        1058,
        1092
      ],
      "op": "DUP1",
      "path": "22"
    },
    "1419": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        1058,
        1092
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "1420": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1422": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1424": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1426": {
      "op": "SHL"
    },
    "1427": {
      "op": "SUB"
    },
    "1428": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        1058,
        1092
      ],
      "op": "DUP4",
      "path": "22"
    },
    "1429": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        1058,
        1092
      ],
      "op": "AND",
      "path": "22"
    },
    "1430": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1432": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1434": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1436": {
      "op": "SHL"
    },
    "1437": {
      "op": "SUB"
    },
    "1438": {
      "op": "NOT"
    },
    "1439": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        1058,
        1092
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1440": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        1058,
        1092
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "1441": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        1058,
        1092
      ],
      "op": "AND",
      "path": "22"
    },
    "1442": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        1058,
        1092
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1443": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        1058,
        1092
      ],
      "op": "OR",
      "path": "22"
    },
    "1444": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        1058,
        1092
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1445": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        1058,
        1092
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "1446": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        1058,
        1092
      ],
      "op": "SSTORE",
      "path": "22"
    },
    "1447": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        1103,
        1139
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 11,
      "value": "0x40"
    },
    "1449": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        1103,
        1139
      ],
      "op": "DUP1",
      "path": "22"
    },
    "1450": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        1103,
        1139
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "1451": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        1103,
        1139
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "1452": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        1103,
        1139
      ],
      "op": "DUP3",
      "path": "22"
    },
    "1453": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        1103,
        1139
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "1454": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        1103,
        1139
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "1455": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        1103,
        1139
      ],
      "op": "PUSH32",
      "path": "22",
      "value": "0x964DEA888B00B2AB53F13DFE7CA334B46E99338C222AE232D98547A1DA019F60"
    },
    "1488": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        1103,
        1139
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "1489": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        1103,
        1139
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1490": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        1103,
        1139
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1491": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        1103,
        1139
      ],
      "op": "SUB",
      "path": "22"
    },
    "1492": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        1103,
        1139
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "1494": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        1103,
        1139
      ],
      "op": "ADD",
      "path": "22"
    },
    "1495": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        1103,
        1139
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1496": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        1103,
        1139
      ],
      "op": "LOG1",
      "path": "22"
    },
    "1497": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        981,
        1144
      ],
      "op": "POP",
      "path": "22"
    },
    "1498": {
      "fn": "Governable.setPendingGovernor",
      "jump": "o",
      "offset": [
        981,
        1144
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1499": {
      "fn": "Address.isContract",
      "offset": [
        726,
        1139
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1500": {
      "fn": "Address.isContract",
      "offset": [
        1086,
        1106
      ],
      "op": "EXTCODESIZE",
      "path": "16"
    },
    "1501": {
      "fn": "Address.isContract",
      "offset": [
        1124,
        1132
      ],
      "op": "ISZERO",
      "path": "16",
      "statement": 12
    },
    "1502": {
      "fn": "Address.isContract",
      "offset": [
        1124,
        1132
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "1503": {
      "fn": "Address.isContract",
      "offset": [
        1124,
        1132
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1504": {
      "fn": "Address.isContract",
      "jump": "o",
      "offset": [
        726,
        1139
      ],
      "op": "JUMP",
      "path": "16"
    }
  },
  "sha1": "2acfcaaa8aaf2807da421cfaaec16f65c9e7cf82",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity 0.6.12;\n\nimport '../Governable.sol';\nimport '../../interfaces/IBaseOracle.sol';\n\ncontract SimpleOracle is IBaseOracle, Governable {\n  mapping(address => uint) public prices; // Mapping from token to price in CELO (times 2**112).\n\n  /// The governor sets oracle price for a token.\n  event SetCELOPx(address token, uint px);\n\n  /// @dev Create the contract and initialize the first governor.\n  constructor() public {\n    __Governable__init();\n  }\n\n  /// @dev Return the value of the given input as CELO per unit, multiplied by 2**112.\n  /// @param token The ERC-20 token to check the value.\n  function getCELOPx(address token) external view override returns (uint) {\n    uint px = prices[token];\n    require(px != 0, 'no px');\n    return px;\n  }\n\n  /// @dev Set the prices of the given token addresses.\n  /// @param tokens The token addresses to set the prices.\n  /// @param pxs The price data points, representing token value in CELO times 2**112.\n  function setCELOPx(address[] memory tokens, uint[] memory pxs) external onlyGov {\n    require(tokens.length == pxs.length, 'inconsistent length');\n    for (uint idx = 0; idx < tokens.length; idx++) {\n      prices[tokens[idx]] = pxs[idx];\n      emit SetCELOPx(tokens[idx], pxs[idx]);\n    }\n  }\n}\n",
  "sourceMap": "130:1162:177:-:0;;;441:52;;;;;;;;;-1:-1:-1;468:20:177;:18;:20::i;:::-;130:1162;;673:151:22;1501:13:7;;;;;;;;:33;;-1:-1:-1;1518:16:7;:14;:16::i;:::-;1501:50;;;-1:-1:-1;1539:12:7;;;;1538:13;1501:50;1493:109;;;;-1:-1:-1;;;1493:109:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1613:19;1636:13;;;;;;1635:14;1659:98;;;;1693:13;:20;;-1:-1:-1;;;;1693:20:7;;;;;1727:19;1709:4;1727:19;;;1659:98;730:8:22::1;:21:::0;;-1:-1:-1;;;;;;730:21:22::1;741:10;730:21:::0;;::::1;::::0;;;::::1;::::0;;;-1:-1:-1;757:28:22;;-1:-1:-1;;;;;;757:28:22::1;::::0;;796:23:::1;::::0;;;;;;::::1;::::0;::::1;::::0;;;;;;::::1;1783:14:7::0;1779:66;;;1829:5;1813:21;;-1:-1:-1;;1813:21:7;;;1779:66;673:151:22;:::o;1941:112:7:-;1989:4;2013:33;2040:4;2013:18;;;;;:33;;:::i;:::-;2012:34;2005:41;;1941:112;:::o;726:413:16:-;1086:20;1124:8;;;726:413::o;130:1162:177:-;;;;;;;",
  "sourcePath": "contracts/oracle/SimpleOracle.sol",
  "type": "contract"
}