{
  "abi": [
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "_asset",
          "type": "address"
        }
      ],
      "name": "getAssetPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "getCELOPx",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "registry",
      "outputs": [
        {
          "internalType": "contract IRegistry",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "/Users/kylescott/.brownie/packages/OpenZeppelin/openzeppelin-contracts@2.3.0/contracts/math/SafeMath.sol",
    "1": "contracts/oracle/SortedOracleProxy.sol",
    "2": "interfaces/IPriceOracleGetter.sol"
  },
  "ast": {
    "absolutePath": "contracts/oracle/SortedOracleProxy.sol",
    "exportedSymbols": {
      "CeloProxyPriceProvider": [
        187
      ],
      "IRegistry": [
        28
      ],
      "ISortedOracles": [
        20
      ],
      "UsingRegistry": [
        74
      ]
    },
    "id": 188,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:1"
      },
      {
        "absolutePath": "/Users/kylescott/.brownie/packages/OpenZeppelin/openzeppelin-contracts@2.3.0/contracts/math/SafeMath.sol",
        "file": "OpenZeppelin/openzeppelin-contracts@2.3.0/contracts/math/SafeMath.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 188,
        "sourceUnit": 321,
        "src": "25:79:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/IPriceOracleGetter.sol",
        "file": "../../interfaces/IPriceOracleGetter.sol",
        "id": 3,
        "nodeType": "ImportDirective",
        "scope": 188,
        "sourceUnit": 331,
        "src": "105:49:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": null,
        "fullyImplemented": false,
        "id": 20,
        "linearizedBaseContracts": [
          20
        ],
        "name": "ISortedOracles",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": null,
            "documentation": null,
            "id": 12,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "medianRate",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 12,
                  "src": "207:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "207:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "206:9:1"
            },
            "returnParameters": {
              "id": 11,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 12,
                  "src": "239:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "239:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 12,
                  "src": "248:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "248:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "238:18:1"
            },
            "scope": 20,
            "src": "187:70:1",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": null,
            "id": 19,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "medianTimestamp",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 15,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 19,
                  "src": "287:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "287:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "286:9:1"
            },
            "returnParameters": {
              "id": 18,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 17,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 19,
                  "src": "319:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 16,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "319:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "318:9:1"
            },
            "scope": 20,
            "src": "262:66:1",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 188,
        "src": "156:174:1"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": null,
        "fullyImplemented": false,
        "id": 28,
        "linearizedBaseContracts": [
          28
        ],
        "name": "IRegistry",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": null,
            "documentation": null,
            "id": 27,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getAddressForOrDie",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 23,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 22,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 27,
                  "src": "386:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 21,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "386:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "385:9:1"
            },
            "returnParameters": {
              "id": 26,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 27,
                  "src": "418:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 24,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "418:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "417:9:1"
            },
            "scope": 28,
            "src": "358:69:1",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 188,
        "src": "332:97:1"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 74,
        "linearizedBaseContracts": [
          74
        ],
        "name": "UsingRegistry",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
            "id": 36,
            "name": "GOLD_TOKEN_REGISTRY_ID",
            "nodeType": "VariableDeclaration",
            "scope": 74,
            "src": "460:82:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 29,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "460:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "argumentTypes": null,
              "arguments": [
                {
                  "argumentTypes": null,
                  "arguments": [
                    {
                      "argumentTypes": null,
                      "hexValue": "476f6c64546f6b656e",
                      "id": 33,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "529:11:1",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_d7e89ade8430819f08bf97a087285824af3351ee12d72a2d132b0c6c0687bfaf",
                        "typeString": "literal_string \"GoldToken\""
                      },
                      "value": "GoldToken"
                    }
                  ],
                  "expression": {
                    "argumentTypes": [
                      {
                        "typeIdentifier": "t_stringliteral_d7e89ade8430819f08bf97a087285824af3351ee12d72a2d132b0c6c0687bfaf",
                        "typeString": "literal_string \"GoldToken\""
                      }
                    ],
                    "expression": {
                      "argumentTypes": null,
                      "id": 31,
                      "name": "abi",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 332,
                      "src": "512:3:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_abi",
                        "typeString": "abi"
                      }
                    },
                    "id": 32,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "encodePacked",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "512:16:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                      "typeString": "function () pure returns (bytes memory)"
                    }
                  },
                  "id": 34,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "functionCall",
                  "lValueRequested": false,
                  "names": [],
                  "nodeType": "FunctionCall",
                  "src": "512:29:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes memory"
                  }
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes memory"
                  }
                ],
                "id": 30,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 339,
                "src": "502:9:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 35,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "502:40:1",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": true,
            "id": 44,
            "name": "SORTED_ORACLES_REGISTRY_ID",
            "nodeType": "VariableDeclaration",
            "scope": 74,
            "src": "548:90:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 37,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "548:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "argumentTypes": null,
              "arguments": [
                {
                  "argumentTypes": null,
                  "arguments": [
                    {
                      "argumentTypes": null,
                      "hexValue": "536f727465644f7261636c6573",
                      "id": 41,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "621:15:1",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_ab7ca110ac6f740fa4bdcd667652ab6f883b80daaedaf0cb53396dc5d5be6f2c",
                        "typeString": "literal_string \"SortedOracles\""
                      },
                      "value": "SortedOracles"
                    }
                  ],
                  "expression": {
                    "argumentTypes": [
                      {
                        "typeIdentifier": "t_stringliteral_ab7ca110ac6f740fa4bdcd667652ab6f883b80daaedaf0cb53396dc5d5be6f2c",
                        "typeString": "literal_string \"SortedOracles\""
                      }
                    ],
                    "expression": {
                      "argumentTypes": null,
                      "id": 39,
                      "name": "abi",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 332,
                      "src": "604:3:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_abi",
                        "typeString": "abi"
                      }
                    },
                    "id": 40,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "encodePacked",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "604:16:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                      "typeString": "function () pure returns (bytes memory)"
                    }
                  },
                  "id": 42,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "functionCall",
                  "lValueRequested": false,
                  "names": [],
                  "nodeType": "FunctionCall",
                  "src": "604:33:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes memory"
                  }
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes memory"
                  }
                ],
                "id": 38,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 339,
                "src": "594:9:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 43,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "594:44:1",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": true,
            "id": 49,
            "name": "registry",
            "nodeType": "VariableDeclaration",
            "scope": 74,
            "src": "645:90:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IRegistry_$28",
              "typeString": "contract IRegistry"
            },
            "typeName": {
              "contractScope": null,
              "id": 45,
              "name": "IRegistry",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 28,
              "src": "645:9:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IRegistry_$28",
                "typeString": "contract IRegistry"
              }
            },
            "value": {
              "argumentTypes": null,
              "arguments": [
                {
                  "argumentTypes": null,
                  "hexValue": "307830303030303030303030303030303030303030303030303030303030303030303030303063653130",
                  "id": 47,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "692:42:1",
                  "subdenomination": null,
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "value": "0x000000000000000000000000000000000000ce10"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  }
                ],
                "id": 46,
                "name": "IRegistry",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 28,
                "src": "682:9:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_contract$_IRegistry_$28_$",
                  "typeString": "type(contract IRegistry)"
                }
              },
              "id": 48,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "682:53:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IRegistry_$28",
                "typeString": "contract IRegistry"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 59,
              "nodeType": "Block",
              "src": "798:75:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 56,
                        "name": "GOLD_TOKEN_REGISTRY_ID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 36,
                        "src": "843:22:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 54,
                        "name": "registry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49,
                        "src": "815:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IRegistry_$28",
                          "typeString": "contract IRegistry"
                        }
                      },
                      "id": 55,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getAddressForOrDie",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 27,
                      "src": "815:27:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_address_$",
                        "typeString": "function (bytes32) view external returns (address)"
                      }
                    },
                    "id": 57,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "815:51:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 53,
                  "id": 58,
                  "nodeType": "Return",
                  "src": "808:58:1"
                }
              ]
            },
            "documentation": null,
            "id": 60,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getGoldToken",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 50,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "763:2:1"
            },
            "returnParameters": {
              "id": 53,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 52,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 60,
                  "src": "789:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 51,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "789:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "788:9:1"
            },
            "scope": 74,
            "src": "742:131:1",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 72,
              "nodeType": "Block",
              "src": "946:95:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 68,
                            "name": "SORTED_ORACLES_REGISTRY_ID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44,
                            "src": "1006:26:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 66,
                            "name": "registry",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 49,
                            "src": "978:8:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IRegistry_$28",
                              "typeString": "contract IRegistry"
                            }
                          },
                          "id": 67,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "getAddressForOrDie",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 27,
                          "src": "978:27:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_address_$",
                            "typeString": "function (bytes32) view external returns (address)"
                          }
                        },
                        "id": 69,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "978:55:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 65,
                      "name": "ISortedOracles",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20,
                      "src": "963:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_ISortedOracles_$20_$",
                        "typeString": "type(contract ISortedOracles)"
                      }
                    },
                    "id": 70,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "963:71:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISortedOracles_$20",
                      "typeString": "contract ISortedOracles"
                    }
                  },
                  "functionReturnParameters": 64,
                  "id": 71,
                  "nodeType": "Return",
                  "src": "956:78:1"
                }
              ]
            },
            "documentation": null,
            "id": 73,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getSortedOracles",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 61,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "904:2:1"
            },
            "returnParameters": {
              "id": 64,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 63,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 73,
                  "src": "930:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ISortedOracles_$20",
                    "typeString": "contract ISortedOracles"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 62,
                    "name": "ISortedOracles",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 20,
                    "src": "930:14:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISortedOracles_$20",
                      "typeString": "contract ISortedOracles"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "929:16:1"
            },
            "scope": 74,
            "src": "879:162:1",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "internal"
          }
        ],
        "scope": 188,
        "src": "431:612:1"
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 75,
              "name": "IPriceOracleGetter",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 330,
              "src": "1286:18:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IPriceOracleGetter_$330",
                "typeString": "contract IPriceOracleGetter"
              }
            },
            "id": 76,
            "nodeType": "InheritanceSpecifier",
            "src": "1286:18:1"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 77,
              "name": "UsingRegistry",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 74,
              "src": "1306:13:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_UsingRegistry_$74",
                "typeString": "contract UsingRegistry"
              }
            },
            "id": 78,
            "nodeType": "InheritanceSpecifier",
            "src": "1306:13:1"
          }
        ],
        "contractDependencies": [
          74,
          330
        ],
        "contractKind": "contract",
        "documentation": "@title CeloProxyPriceProvider\n @author Moola\n @notice Proxy smart contract to get the price of an asset from a price source, with Celo SortedOracles\n         smart contracts as the only option",
        "fullyImplemented": true,
        "id": 187,
        "linearizedBaseContracts": [
          187,
          74,
          330
        ],
        "name": "CeloProxyPriceProvider",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 81,
            "libraryName": {
              "contractScope": null,
              "id": 79,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 320,
              "src": "1332:8:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$320",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "1326:27:1",
            "typeName": {
              "id": 80,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1345:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "body": {
              "id": 149,
              "nodeType": "Block",
              "src": "1514:517:1",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 91,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 88,
                      "name": "_asset",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 83,
                      "src": "1528:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 89,
                        "name": "getGoldToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60,
                        "src": "1538:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                          "typeString": "function () view returns (address)"
                        }
                      },
                      "id": 90,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1538:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1528:24:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 95,
                  "nodeType": "IfStatement",
                  "src": "1524:69:1",
                  "trueBody": {
                    "id": 94,
                    "nodeType": "Block",
                    "src": "1554:39:1",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "hexValue": "31",
                          "id": 92,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1575:7:1",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1"
                        },
                        "functionReturnParameters": 87,
                        "id": 93,
                        "nodeType": "Return",
                        "src": "1568:14:1"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    97
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 97,
                      "name": "_price",
                      "nodeType": "VariableDeclaration",
                      "scope": 149,
                      "src": "1602:14:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 96,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1602:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 98,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1602:14:1"
                },
                {
                  "assignments": [
                    100
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 100,
                      "name": "_divisor",
                      "nodeType": "VariableDeclaration",
                      "scope": 149,
                      "src": "1626:16:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 99,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1626:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 101,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1626:16:1"
                },
                {
                  "assignments": [
                    103
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 103,
                      "name": "_oracles",
                      "nodeType": "VariableDeclaration",
                      "scope": 149,
                      "src": "1652:23:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ISortedOracles_$20",
                        "typeString": "contract ISortedOracles"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 102,
                        "name": "ISortedOracles",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 20,
                        "src": "1652:14:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISortedOracles_$20",
                          "typeString": "contract ISortedOracles"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 106,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 104,
                      "name": "getSortedOracles",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 73,
                      "src": "1678:16:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_ISortedOracles_$20_$",
                        "typeString": "function () view returns (contract ISortedOracles)"
                      }
                    },
                    "id": 105,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1678:18:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISortedOracles_$20",
                      "typeString": "contract ISortedOracles"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1652:44:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 114,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "components": [
                        {
                          "argumentTypes": null,
                          "id": 107,
                          "name": "_price",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 97,
                          "src": "1707:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 108,
                          "name": "_divisor",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 100,
                          "src": "1715:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 109,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "1706:18:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                        "typeString": "tuple(uint256,uint256)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 112,
                          "name": "_asset",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 83,
                          "src": "1747:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 110,
                          "name": "_oracles",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 103,
                          "src": "1727:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ISortedOracles_$20",
                            "typeString": "contract ISortedOracles"
                          }
                        },
                        "id": 111,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "medianRate",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 12,
                        "src": "1727:19:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256,uint256)"
                        }
                      },
                      "id": 113,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1727:27:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                        "typeString": "tuple(uint256,uint256)"
                      }
                    },
                    "src": "1706:48:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 115,
                  "nodeType": "ExpressionStatement",
                  "src": "1706:48:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 119,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 117,
                          "name": "_price",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 97,
                          "src": "1772:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 118,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1781:1:1",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1772:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5265706f727465642070726963652069732030",
                        "id": 120,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1784:21:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9abda32b40bf94142c6cea1f8c7c6827a849deefbf71c5dcd7d55cdfb7e24642",
                          "typeString": "literal_string \"Reported price is 0\""
                        },
                        "value": "Reported price is 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9abda32b40bf94142c6cea1f8c7c6827a849deefbf71c5dcd7d55cdfb7e24642",
                          "typeString": "literal_string \"Reported price is 0\""
                        }
                      ],
                      "id": 116,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        348,
                        349
                      ],
                      "referencedDeclaration": 349,
                      "src": "1764:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 121,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1764:42:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 122,
                  "nodeType": "ExpressionStatement",
                  "src": "1764:42:1"
                },
                {
                  "assignments": [
                    124
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 124,
                      "name": "_reportTime",
                      "nodeType": "VariableDeclaration",
                      "scope": 149,
                      "src": "1816:16:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 123,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1816:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 129,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 127,
                        "name": "_asset",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 83,
                        "src": "1860:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 125,
                        "name": "_oracles",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 103,
                        "src": "1835:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISortedOracles_$20",
                          "typeString": "contract ISortedOracles"
                        }
                      },
                      "id": 126,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "medianTimestamp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 19,
                      "src": "1835:24:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 128,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1835:32:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1816:51:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 137,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 134,
                              "name": "_reportTime",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 124,
                              "src": "1905:11:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 131,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 335,
                                "src": "1885:5:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 132,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "1885:15:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 133,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sub",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 239,
                            "src": "1885:19:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 135,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1885:32:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "3130",
                          "id": 136,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1920:10:1",
                          "subdenomination": "minutes",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_600_by_1",
                            "typeString": "int_const 600"
                          },
                          "value": "10"
                        },
                        "src": "1885:45:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5265706f72746564207072696365206973206f6c646572207468616e203130206d696e75746573",
                        "id": 138,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1932:41:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4be1d81a732b523b7d37883ac24ba6ef7212ec4c73ba3536fb1fd9fcb1b9c7aa",
                          "typeString": "literal_string \"Reported price is older than 10 minutes\""
                        },
                        "value": "Reported price is older than 10 minutes"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4be1d81a732b523b7d37883ac24ba6ef7212ec4c73ba3536fb1fd9fcb1b9c7aa",
                          "typeString": "literal_string \"Reported price is older than 10 minutes\""
                        }
                      ],
                      "id": 130,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        348,
                        349
                      ],
                      "referencedDeclaration": 349,
                      "src": "1877:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 139,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1877:97:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 140,
                  "nodeType": "ExpressionStatement",
                  "src": "1877:97:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 146,
                        "name": "_price",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 97,
                        "src": "2017:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "31",
                            "id": 143,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2004:7:1",
                            "subdenomination": "ether",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            },
                            "value": "1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 141,
                            "name": "_divisor",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 100,
                            "src": "1991:8:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 142,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "mul",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 273,
                          "src": "1991:12:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 144,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1991:21:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 145,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "div",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 298,
                      "src": "1991:25:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 147,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1991:33:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 87,
                  "id": 148,
                  "nodeType": "Return",
                  "src": "1984:40:1"
                }
              ]
            },
            "documentation": "@notice Gets an asset price by address\n @param _asset The asset address",
            "id": 150,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAssetPrice",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 84,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 83,
                  "name": "_asset",
                  "nodeType": "VariableDeclaration",
                  "scope": 150,
                  "src": "1469:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 82,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1469:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1468:16:1"
            },
            "returnParameters": {
              "id": 87,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 86,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 150,
                  "src": "1505:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 85,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1505:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1504:9:1"
            },
            "scope": 187,
            "src": "1446:585:1",
            "stateMutability": "view",
            "superFunction": 329,
            "visibility": "public"
          },
          {
            "body": {
              "id": 185,
              "nodeType": "Block",
              "src": "2247:165:1",
              "statements": [
                {
                  "assignments": [
                    158
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 158,
                      "name": "unscaledPrice",
                      "nodeType": "VariableDeclaration",
                      "scope": 185,
                      "src": "2257:18:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 157,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "2257:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 162,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 160,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 152,
                        "src": "2292:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 159,
                      "name": "getAssetPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 150,
                      "src": "2278:13:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view returns (uint256)"
                      }
                    },
                    "id": 161,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2278:20:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2257:41:1"
                },
                {
                  "assignments": [
                    164
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 164,
                      "name": "px",
                      "nodeType": "VariableDeclaration",
                      "scope": 185,
                      "src": "2308:7:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 163,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "2308:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 175,
                  "initialValue": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 174,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "components": [
                        {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 169,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 165,
                            "name": "unscaledPrice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 158,
                            "src": "2319:13:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_rational_5192296858534827628530496329220096_by_1",
                              "typeString": "int_const 5192...(26 digits omitted)...0096"
                            },
                            "id": 168,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "hexValue": "32",
                              "id": 166,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2335:1:1",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              },
                              "value": "2"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "**",
                            "rightExpression": {
                              "argumentTypes": null,
                              "hexValue": "313132",
                              "id": 167,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2338:3:1",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_112_by_1",
                                "typeString": "int_const 112"
                              },
                              "value": "112"
                            },
                            "src": "2335:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_5192296858534827628530496329220096_by_1",
                              "typeString": "int_const 5192...(26 digits omitted)...0096"
                            }
                          },
                          "src": "2319:22:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 170,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "2318:24:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_rational_1000000000000000000_by_1",
                        "typeString": "int_const 1000000000000000000"
                      },
                      "id": 173,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "hexValue": "3130",
                        "id": 171,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2345:2:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "**",
                      "rightExpression": {
                        "argumentTypes": null,
                        "hexValue": "3138",
                        "id": 172,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2349:2:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_18_by_1",
                          "typeString": "int_const 18"
                        },
                        "value": "18"
                      },
                      "src": "2345:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1000000000000000000_by_1",
                        "typeString": "int_const 1000000000000000000"
                      }
                    },
                    "src": "2318:33:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2308:43:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 179,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 177,
                          "name": "px",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 164,
                          "src": "2369:2:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 178,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2375:1:1",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2369:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6e6f207078",
                        "id": 180,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2378:7:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9e3128f870e8f931a4c299f4d82edc430880f3d6a531378299a3aefc4e17eecb",
                          "typeString": "literal_string \"no px\""
                        },
                        "value": "no px"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9e3128f870e8f931a4c299f4d82edc430880f3d6a531378299a3aefc4e17eecb",
                          "typeString": "literal_string \"no px\""
                        }
                      ],
                      "id": 176,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        348,
                        349
                      ],
                      "referencedDeclaration": 349,
                      "src": "2361:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 181,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2361:25:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 182,
                  "nodeType": "ExpressionStatement",
                  "src": "2361:25:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 183,
                    "name": "px",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 164,
                    "src": "2403:2:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 156,
                  "id": 184,
                  "nodeType": "Return",
                  "src": "2396:9:1"
                }
              ]
            },
            "documentation": "@dev Return the value of the given input as CELO per unit, multiplied by 2**112.\n @param token The ERC-20 token to check the value.",
            "id": 186,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getCELOPx",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 153,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 152,
                  "name": "token",
                  "nodeType": "VariableDeclaration",
                  "scope": 186,
                  "src": "2203:13:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 151,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2203:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2202:15:1"
            },
            "returnParameters": {
              "id": 156,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 155,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 186,
                  "src": "2241:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 154,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2241:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2240:6:1"
            },
            "scope": 187,
            "src": "2184:228:1",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 188,
        "src": "1251:1163:1"
      }
    ],
    "src": "0:2415:1"
  },
  "bytecode": "608060405234801561001057600080fd5b506105f9806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806311e56aff146100465780637b1039991461007e578063b3596f07146100a2575b600080fd5b61006c6004803603602081101561005c57600080fd5b50356001600160a01b03166100c8565b60408051918252519081900360200190f35b61008661012a565b604080516001600160a01b039092168252519081900360200190f35b61006c600480360360208110156100b857600080fd5b50356001600160a01b0316610130565b6000806100d483610130565b9050670de0b6b3a7640000600160701b82020480610121576040805162461bcd60e51b81526020600482015260056024820152640dcde40e0f60db1b604482015290519081900360640190fd5b9150505b919050565b61ce1081565b600061013a61033f565b6001600160a01b0316826001600160a01b031614156101625750670de0b6b3a7640000610125565b600080600061016f6103de565b60408051630ef90e1b60e41b81526001600160a01b038881166004830152825193945084169263ef90e1b092602480840193919291829003018186803b1580156101b857600080fd5b505afa1580156101cc573d6000803e3d6000fd5b505050506040513d60408110156101e257600080fd5b508051602090910151909350915082610238576040805162461bcd60e51b815260206004820152601360248201527205265706f72746564207072696365206973203606c1b604482015290519081900360640190fd5b6000816001600160a01b031663071b48fc876040518263ffffffff1660e01b815260040180826001600160a01b03166001600160a01b0316815260200191505060206040518083038186803b15801561029057600080fd5b505afa1580156102a4573d6000803e3d6000fd5b505050506040513d60208110156102ba57600080fd5b505190506102586102d1428363ffffffff61045016565b1061030d5760405162461bcd60e51b815260040180806020018281038252602781526020018061057d6027913960400191505060405180910390fd5b6103358461032985670de0b6b3a764000063ffffffff6104b216565b9063ffffffff61051216565b9695505050505050565b604080516823b7b6322a37b5b2b760b91b602080830191909152825180830360090181526029830180855281519183019190912063dcf0aaed60e01b909152602d830152915160009261ce109263dcf0aaed92604d8083019392829003018186803b1580156103ad57600080fd5b505afa1580156103c1573d6000803e3d6000fd5b505050506040513d60208110156103d757600080fd5b5051905090565b604080516c536f727465644f7261636c657360981b6020808301919091528251808303600d018152602d830180855281519183019190912063dcf0aaed60e01b9091526031830152915160009261ce109263dcf0aaed9260518083019392829003018186803b1580156103ad57600080fd5b6000828211156104a7576040805162461bcd60e51b815260206004820152601e60248201527f536166654d6174683a207375627472616374696f6e206f766572666c6f770000604482015290519081900360640190fd5b508082035b92915050565b6000826104c1575060006104ac565b828202828482816104ce57fe5b041461050b5760405162461bcd60e51b81526004018080602001828103825260218152602001806105a46021913960400191505060405180910390fd5b9392505050565b6000808211610568576040805162461bcd60e51b815260206004820152601a60248201527f536166654d6174683a206469766973696f6e206279207a65726f000000000000604482015290519081900360640190fd5b600082848161057357fe5b0494935050505056fe5265706f72746564207072696365206973206f6c646572207468616e203130206d696e75746573536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77a265627a7a72315820d0e16e9ab7bb86303eec80719c37a14d015c992627890b2f8f4ba78cd90cb7f464736f6c63430005110032",
  "bytecodeSha1": "2d0b9b082678595bd6ca8a069464b69b6656e07b",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.5.17+commit.d19bba13"
  },
  "contractName": "CeloProxyPriceProvider",
  "coverageMap": {
    "branches": {
      "0": {
        "SafeMath.div": {
          "20": [
            2757,
            2762,
            true
          ]
        },
        "SafeMath.mul": {
          "18": [
            1991,
            1997,
            false
          ],
          "19": [
            2077,
            2087,
            true
          ]
        },
        "SafeMath.sub": {
          "17": [
            1359,
            1365,
            true
          ]
        }
      },
      "1": {
        "CeloProxyPriceProvider.getAssetPrice": {
          "14": [
            1528,
            1552,
            false
          ],
          "15": [
            1772,
            1782,
            true
          ],
          "16": [
            1885,
            1930,
            true
          ]
        }
      },
      "2": {}
    },
    "statements": {
      "0": {
        "SafeMath.div": {
          "13": [
            2749,
            2793
          ]
        },
        "SafeMath.mul": {
          "10": [
            2013,
            2021
          ],
          "11": [
            2069,
            2125
          ],
          "12": [
            2136,
            2144
          ]
        },
        "SafeMath.sub": {
          "9": [
            1351,
            1400
          ]
        }
      },
      "1": {
        "CeloProxyPriceProvider.getAssetPrice": {
          "2": [
            1568,
            1582
          ],
          "3": [
            1706,
            1754
          ],
          "4": [
            1764,
            1806
          ],
          "5": [
            1877,
            1974
          ],
          "6": [
            1984,
            2024
          ]
        },
        "CeloProxyPriceProvider.getCELOPx": {
          "0": [
            2361,
            2386
          ],
          "1": [
            2396,
            2405
          ]
        },
        "UsingRegistry.getGoldToken": {
          "7": [
            808,
            866
          ]
        },
        "UsingRegistry.getSortedOracles": {
          "8": [
            956,
            1034
          ]
        }
      },
      "2": {}
    }
  },
  "dependencies": [
    "IPriceOracleGetter",
    "IRegistry",
    "ISortedOracles",
    "OpenZeppelin/openzeppelin-contracts@2.3.0/SafeMath",
    "UsingRegistry"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106100415760003560e01c806311e56aff146100465780637b1039991461007e578063b3596f07146100a2575b600080fd5b61006c6004803603602081101561005c57600080fd5b50356001600160a01b03166100c8565b60408051918252519081900360200190f35b61008661012a565b604080516001600160a01b039092168252519081900360200190f35b61006c600480360360208110156100b857600080fd5b50356001600160a01b0316610130565b6000806100d483610130565b9050670de0b6b3a7640000600160701b82020480610121576040805162461bcd60e51b81526020600482015260056024820152640dcde40e0f60db1b604482015290519081900360640190fd5b9150505b919050565b61ce1081565b600061013a61033f565b6001600160a01b0316826001600160a01b031614156101625750670de0b6b3a7640000610125565b600080600061016f6103de565b60408051630ef90e1b60e41b81526001600160a01b038881166004830152825193945084169263ef90e1b092602480840193919291829003018186803b1580156101b857600080fd5b505afa1580156101cc573d6000803e3d6000fd5b505050506040513d60408110156101e257600080fd5b508051602090910151909350915082610238576040805162461bcd60e51b815260206004820152601360248201527205265706f72746564207072696365206973203606c1b604482015290519081900360640190fd5b6000816001600160a01b031663071b48fc876040518263ffffffff1660e01b815260040180826001600160a01b03166001600160a01b0316815260200191505060206040518083038186803b15801561029057600080fd5b505afa1580156102a4573d6000803e3d6000fd5b505050506040513d60208110156102ba57600080fd5b505190506102586102d1428363ffffffff61045016565b1061030d5760405162461bcd60e51b815260040180806020018281038252602781526020018061057d6027913960400191505060405180910390fd5b6103358461032985670de0b6b3a764000063ffffffff6104b216565b9063ffffffff61051216565b9695505050505050565b604080516823b7b6322a37b5b2b760b91b602080830191909152825180830360090181526029830180855281519183019190912063dcf0aaed60e01b909152602d830152915160009261ce109263dcf0aaed92604d8083019392829003018186803b1580156103ad57600080fd5b505afa1580156103c1573d6000803e3d6000fd5b505050506040513d60208110156103d757600080fd5b5051905090565b604080516c536f727465644f7261636c657360981b6020808301919091528251808303600d018152602d830180855281519183019190912063dcf0aaed60e01b9091526031830152915160009261ce109263dcf0aaed9260518083019392829003018186803b1580156103ad57600080fd5b6000828211156104a7576040805162461bcd60e51b815260206004820152601e60248201527f536166654d6174683a207375627472616374696f6e206f766572666c6f770000604482015290519081900360640190fd5b508082035b92915050565b6000826104c1575060006104ac565b828202828482816104ce57fe5b041461050b5760405162461bcd60e51b81526004018080602001828103825260218152602001806105a46021913960400191505060405180910390fd5b9392505050565b6000808211610568576040805162461bcd60e51b815260206004820152601a60248201527f536166654d6174683a206469766973696f6e206279207a65726f000000000000604482015290519081900360640190fd5b600082848161057357fe5b0494935050505056fe5265706f72746564207072696365206973206f6c646572207468616e203130206d696e75746573536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77a265627a7a72315820d0e16e9ab7bb86303eec80719c37a14d015c992627890b2f8f4ba78cd90cb7f464736f6c63430005110032",
  "deployedSourceMap": "1251:1163:1:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1251:1163:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2184:228;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2184:228:1;-1:-1:-1;;;;;2184:228:1;;:::i;:::-;;;;;;;;;;;;;;;;645:90;;;:::i;:::-;;;;-1:-1:-1;;;;;645:90:1;;;;;;;;;;;;;;1446:585;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1446:585:1;-1:-1:-1;;;;;1446:585:1;;:::i;2184:228::-;2241:4;2257:18;2278:20;2292:5;2278:13;:20::i;:::-;2257:41;-1:-1:-1;2345:6:1;-1:-1:-1;;;2319:22:1;;2318:33;;2361:25;;;;;-1:-1:-1;;;2361:25:1;;;;;;;;;;;;-1:-1:-1;;;2361:25:1;;;;;;;;;;;;;;;2403:2;-1:-1:-1;;2184:228:1;;;;:::o;645:90::-;692:42;645:90;:::o;1446:585::-;1505:7;1538:14;:12;:14::i;:::-;-1:-1:-1;;;;;1528:24:1;:6;-1:-1:-1;;;;;1528:24:1;;1524:69;;;-1:-1:-1;1575:7:1;1568:14;;1524:69;1602:14;1626:16;1652:23;1678:18;:16;:18::i;:::-;1727:27;;;-1:-1:-1;;;1727:27:1;;-1:-1:-1;;;;;1727:27:1;;;;;;;;;1652:44;;-1:-1:-1;1727:19:1;;;;;:27;;;;;;;;;;;;;:19;:27;;;5:2:-1;;;;30:1;27;20:12;5:2;1727:27:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1727:27:1;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1727:27:1;;;;;;;;;-1:-1:-1;1727:27:1;-1:-1:-1;1772:10:1;1764:42;;;;;-1:-1:-1;;;1764:42:1;;;;;;;;;;;;-1:-1:-1;;;1764:42:1;;;;;;;;;;;;;;;1816:16;1835:8;-1:-1:-1;;;;;1835:24:1;;1860:6;1835:32;;;;;;;;;;;;;-1:-1:-1;;;;;1835:32:1;-1:-1:-1;;;;;1835:32:1;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1835:32:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1835:32:1;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1835:32:1;;-1:-1:-1;1920:10:1;1885:32;:15;1835:32;1885;:19;:32;:::i;:::-;:45;1877:97;;;;-1:-1:-1;;;1877:97:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1991:33;2017:6;1991:21;:8;2004:7;1991:21;:12;:21;:::i;:::-;:25;:33;:25;:33;:::i;:::-;1984:40;1446:585;-1:-1:-1;;;;;;1446:585:1:o;742:131::-;512:29;;;-1:-1:-1;;;512:29:1;;;;;;;;;;26:21:-1;;;512:29:1;22:32:-1;6:49;;512:29:1;;;;;;502:40;;;;;;;;;-1:-1:-1;;;815:51:1;;;;;;;;;789:7;;692:42;;815:27;;:51;;;;;512:29;815:51;;;;;692:42;815:51;;;5:2:-1;;;;30:1;27;20:12;5:2;815:51:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;815:51:1;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;815:51:1;;-1:-1:-1;742:131:1;:::o;879:162::-;604:33;;;-1:-1:-1;;;604:33:1;;;;;;;;;;26:21:-1;;;604:33:1;22:32:-1;6:49;;604:33:1;;;;;;594:44;;;;;;;;;-1:-1:-1;;;978:55:1;;;;;;;;;930:14;;692:42;;978:27;;:55;;;;;604:33;978:55;;;;;692:42;978:55;;;5:2:-1;;;;30:1;27;20:12;1274:179:0;1332:7;1364:1;1359;:6;;1351:49;;;;;-1:-1:-1;;;1351:49:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1422:5:0;;;1274:179;;;;;:::o;1693:458::-;1751:7;1991:6;1987:45;;-1:-1:-1;2020:1:0;2013:8;;1987:45;2054:5;;;2058:1;2054;:5;:1;2077:5;;;;;:10;2069:56;;;;-1:-1:-1;;;2069:56:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2143:1;1693:458;-1:-1:-1;;;1693:458:0:o;2606:326::-;2664:7;2761:1;2757;:5;2749:44;;;;;-1:-1:-1;;;2749:44:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;2803:9;2819:1;2815;:5;;;;;;;2606:326;-1:-1:-1;;;;2606:326:0:o",
  "language": "Solidity",
  "natspec": {
    "author": "Moola",
    "methods": {
      "getAssetPrice(address)": {
        "notice": "Gets an asset price by address",
        "params": {
          "_asset": "The asset address"
        }
      },
      "getCELOPx(address)": {
        "details": "Return the value of the given input as CELO per unit, multiplied by 2**112.",
        "params": {
          "token": "The ERC-20 token to check the value."
        }
      }
    },
    "notice": "Proxy smart contract to get the price of an asset from a price source, with Celo SortedOracles         smart contracts as the only option",
    "title": "CeloProxyPriceProvider"
  },
  "offset": [
    1251,
    2414
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x11E56AFF EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x7B103999 EQ PUSH2 0x7E JUMPI DUP1 PUSH4 0xB3596F07 EQ PUSH2 0xA2 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x5C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xC8 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x86 PUSH2 0x12A JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x6C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xB8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x130 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xD4 DUP4 PUSH2 0x130 JUMP JUMPDEST SWAP1 POP PUSH8 0xDE0B6B3A7640000 PUSH1 0x1 PUSH1 0x70 SHL DUP3 MUL DIV DUP1 PUSH2 0x121 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x5 PUSH1 0x24 DUP3 ADD MSTORE PUSH5 0xDCDE40E0F PUSH1 0xDB SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST SWAP2 POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCE10 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13A PUSH2 0x33F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x162 JUMPI POP PUSH8 0xDE0B6B3A7640000 PUSH2 0x125 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x16F PUSH2 0x3DE JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0xEF90E1B PUSH1 0xE4 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE DUP3 MLOAD SWAP4 SWAP5 POP DUP5 AND SWAP3 PUSH4 0xEF90E1B0 SWAP3 PUSH1 0x24 DUP1 DUP5 ADD SWAP4 SWAP2 SWAP3 SWAP2 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1CC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x1E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD MLOAD SWAP1 SWAP4 POP SWAP2 POP DUP3 PUSH2 0x238 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x5265706F72746564207072696365206973203 PUSH1 0x6C SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x71B48FC DUP8 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x290 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2A4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP PUSH2 0x258 PUSH2 0x2D1 TIMESTAMP DUP4 PUSH4 0xFFFFFFFF PUSH2 0x450 AND JUMP JUMPDEST LT PUSH2 0x30D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x57D PUSH1 0x27 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x335 DUP5 PUSH2 0x329 DUP6 PUSH8 0xDE0B6B3A7640000 PUSH4 0xFFFFFFFF PUSH2 0x4B2 AND JUMP JUMPDEST SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x512 AND JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH9 0x23B7B6322A37B5B2B7 PUSH1 0xB9 SHL PUSH1 0x20 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP3 MLOAD DUP1 DUP4 SUB PUSH1 0x9 ADD DUP2 MSTORE PUSH1 0x29 DUP4 ADD DUP1 DUP6 MSTORE DUP2 MLOAD SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 KECCAK256 PUSH4 0xDCF0AAED PUSH1 0xE0 SHL SWAP1 SWAP2 MSTORE PUSH1 0x2D DUP4 ADD MSTORE SWAP2 MLOAD PUSH1 0x0 SWAP3 PUSH2 0xCE10 SWAP3 PUSH4 0xDCF0AAED SWAP3 PUSH1 0x4D DUP1 DUP4 ADD SWAP4 SWAP3 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3C1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH13 0x536F727465644F7261636C6573 PUSH1 0x98 SHL PUSH1 0x20 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP3 MLOAD DUP1 DUP4 SUB PUSH1 0xD ADD DUP2 MSTORE PUSH1 0x2D DUP4 ADD DUP1 DUP6 MSTORE DUP2 MLOAD SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 KECCAK256 PUSH4 0xDCF0AAED PUSH1 0xE0 SHL SWAP1 SWAP2 MSTORE PUSH1 0x31 DUP4 ADD MSTORE SWAP2 MLOAD PUSH1 0x0 SWAP3 PUSH2 0xCE10 SWAP3 PUSH4 0xDCF0AAED SWAP3 PUSH1 0x51 DUP1 DUP4 ADD SWAP4 SWAP3 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH2 0x4A7 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST POP DUP1 DUP3 SUB JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x4C1 JUMPI POP PUSH1 0x0 PUSH2 0x4AC JUMP JUMPDEST DUP3 DUP3 MUL DUP3 DUP5 DUP3 DUP2 PUSH2 0x4CE JUMPI INVALID JUMPDEST DIV EQ PUSH2 0x50B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x5A4 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 GT PUSH2 0x568 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP5 DUP2 PUSH2 0x573 JUMPI INVALID JUMPDEST DIV SWAP5 SWAP4 POP POP POP POP JUMP INVALID MSTORE PUSH6 0x706F72746564 KECCAK256 PUSH17 0x72696365206973206F6C64657220746861 PUSH15 0x203130206D696E7574657353616665 0x4D PUSH2 0x7468 GASPRICE KECCAK256 PUSH14 0x756C7469706C69636174696F6E20 PUSH16 0x766572666C6F77A265627A7A72315820 0xD0 0xE1 PUSH15 0x9AB7BB86303EEC80719C37A14D015C SWAP10 0x26 0x27 DUP10 SIGNEXTEND 0x2F DUP16 0x4B 0xA7 DUP13 0xD9 0xC 0xB7 DELEGATECALL PUSH5 0x736F6C6343 STOP SDIV GT STOP ORIGIN ",
  "pcMap": {
    "0": {
      "offset": [
        1251,
        2414
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        1251,
        2414
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        1251,
        2414
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5": {
      "fn": null,
      "offset": [
        1251,
        2414
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "6": {
      "op": "DUP1"
    },
    "7": {
      "op": "ISZERO"
    },
    "8": {
      "op": "PUSH2",
      "value": "0x10"
    },
    "11": {
      "op": "JUMPI"
    },
    "12": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14": {
      "op": "DUP1"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        1251,
        2414
      ],
      "op": "REVERT",
      "path": "1"
    },
    "16": {
      "op": "JUMPDEST"
    },
    "17": {
      "offset": [
        1251,
        2414
      ],
      "op": "POP",
      "path": "1"
    },
    "18": {
      "fn": null,
      "offset": [
        1251,
        2414
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        1251,
        2414
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "21": {
      "fn": null,
      "offset": [
        1251,
        2414
      ],
      "op": "LT",
      "path": "1"
    },
    "22": {
      "fn": null,
      "offset": [
        1251,
        2414
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x41"
    },
    "25": {
      "fn": null,
      "offset": [
        1251,
        2414
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "26": {
      "fn": null,
      "offset": [
        1251,
        2414
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        1251,
        2414
      ],
      "op": "CALLDATALOAD",
      "path": "1"
    },
    "29": {
      "fn": null,
      "offset": [
        1251,
        2414
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        1251,
        2414
      ],
      "op": "SHR",
      "path": "1"
    },
    "32": {
      "fn": null,
      "offset": [
        1251,
        2414
      ],
      "op": "DUP1",
      "path": "1"
    },
    "33": {
      "fn": null,
      "offset": [
        1251,
        2414
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x11E56AFF"
    },
    "38": {
      "fn": null,
      "offset": [
        1251,
        2414
      ],
      "op": "EQ",
      "path": "1"
    },
    "39": {
      "fn": null,
      "offset": [
        1251,
        2414
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x46"
    },
    "42": {
      "fn": null,
      "offset": [
        1251,
        2414
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "43": {
      "fn": null,
      "offset": [
        1251,
        2414
      ],
      "op": "DUP1",
      "path": "1"
    },
    "44": {
      "fn": null,
      "offset": [
        1251,
        2414
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x7B103999"
    },
    "49": {
      "fn": null,
      "offset": [
        1251,
        2414
      ],
      "op": "EQ",
      "path": "1"
    },
    "50": {
      "fn": null,
      "offset": [
        1251,
        2414
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x7E"
    },
    "53": {
      "fn": null,
      "offset": [
        1251,
        2414
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "54": {
      "fn": null,
      "offset": [
        1251,
        2414
      ],
      "op": "DUP1",
      "path": "1"
    },
    "55": {
      "fn": null,
      "offset": [
        1251,
        2414
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xB3596F07"
    },
    "60": {
      "fn": null,
      "offset": [
        1251,
        2414
      ],
      "op": "EQ",
      "path": "1"
    },
    "61": {
      "fn": null,
      "offset": [
        1251,
        2414
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xA2"
    },
    "64": {
      "fn": null,
      "offset": [
        1251,
        2414
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "65": {
      "fn": null,
      "offset": [
        1251,
        2414
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "66": {
      "fn": null,
      "offset": [
        1251,
        2414
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "68": {
      "fn": null,
      "offset": [
        1251,
        2414
      ],
      "op": "DUP1",
      "path": "1"
    },
    "69": {
      "first_revert": true,
      "fn": null,
      "offset": [
        1251,
        2414
      ],
      "op": "REVERT",
      "path": "1"
    },
    "70": {
      "fn": "CeloProxyPriceProvider.getCELOPx",
      "offset": [
        2184,
        2412
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "71": {
      "fn": "CeloProxyPriceProvider.getCELOPx",
      "offset": [
        2184,
        2412
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x6C"
    },
    "74": {
      "fn": "CeloProxyPriceProvider.getCELOPx",
      "offset": [
        2184,
        2412
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "76": {
      "fn": "CeloProxyPriceProvider.getCELOPx",
      "offset": [
        2184,
        2412
      ],
      "op": "DUP1",
      "path": "1"
    },
    "77": {
      "fn": "CeloProxyPriceProvider.getCELOPx",
      "offset": [
        2184,
        2412
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "78": {
      "fn": "CeloProxyPriceProvider.getCELOPx",
      "offset": [
        2184,
        2412
      ],
      "op": "SUB",
      "path": "1"
    },
    "79": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "81": {
      "op": "DUP2"
    },
    "82": {
      "op": "LT"
    },
    "83": {
      "op": "ISZERO"
    },
    "84": {
      "op": "PUSH2",
      "value": "0x5C"
    },
    "87": {
      "op": "JUMPI"
    },
    "88": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "90": {
      "op": "DUP1"
    },
    "91": {
      "op": "REVERT"
    },
    "92": {
      "op": "JUMPDEST"
    },
    "93": {
      "op": "POP"
    },
    "94": {
      "fn": "CeloProxyPriceProvider.getCELOPx",
      "offset": [
        2184,
        2412
      ],
      "op": "CALLDATALOAD",
      "path": "1"
    },
    "95": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "97": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "99": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "101": {
      "op": "SHL"
    },
    "102": {
      "op": "SUB"
    },
    "103": {
      "fn": "CeloProxyPriceProvider.getCELOPx",
      "offset": [
        2184,
        2412
      ],
      "op": "AND",
      "path": "1"
    },
    "104": {
      "fn": "CeloProxyPriceProvider.getCELOPx",
      "offset": [
        2184,
        2412
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xC8"
    },
    "107": {
      "fn": "CeloProxyPriceProvider.getCELOPx",
      "jump": "i",
      "offset": [
        2184,
        2412
      ],
      "op": "JUMP",
      "path": "1"
    },
    "108": {
      "fn": "CeloProxyPriceProvider.getCELOPx",
      "offset": [
        2184,
        2412
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "109": {
      "fn": "CeloProxyPriceProvider.getCELOPx",
      "offset": [
        2184,
        2412
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "111": {
      "fn": "CeloProxyPriceProvider.getCELOPx",
      "offset": [
        2184,
        2412
      ],
      "op": "DUP1",
      "path": "1"
    },
    "112": {
      "fn": "CeloProxyPriceProvider.getCELOPx",
      "offset": [
        2184,
        2412
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "113": {
      "fn": "CeloProxyPriceProvider.getCELOPx",
      "offset": [
        2184,
        2412
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "114": {
      "fn": "CeloProxyPriceProvider.getCELOPx",
      "offset": [
        2184,
        2412
      ],
      "op": "DUP3",
      "path": "1"
    },
    "115": {
      "fn": "CeloProxyPriceProvider.getCELOPx",
      "offset": [
        2184,
        2412
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "116": {
      "fn": "CeloProxyPriceProvider.getCELOPx",
      "offset": [
        2184,
        2412
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "117": {
      "fn": "CeloProxyPriceProvider.getCELOPx",
      "offset": [
        2184,
        2412
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "118": {
      "fn": "CeloProxyPriceProvider.getCELOPx",
      "offset": [
        2184,
        2412
      ],
      "op": "DUP2",
      "path": "1"
    },
    "119": {
      "fn": "CeloProxyPriceProvider.getCELOPx",
      "offset": [
        2184,
        2412
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "120": {
      "fn": "CeloProxyPriceProvider.getCELOPx",
      "offset": [
        2184,
        2412
      ],
      "op": "SUB",
      "path": "1"
    },
    "121": {
      "fn": "CeloProxyPriceProvider.getCELOPx",
      "offset": [
        2184,
        2412
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "123": {
      "fn": "CeloProxyPriceProvider.getCELOPx",
      "offset": [
        2184,
        2412
      ],
      "op": "ADD",
      "path": "1"
    },
    "124": {
      "fn": "CeloProxyPriceProvider.getCELOPx",
      "offset": [
        2184,
        2412
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "125": {
      "fn": "CeloProxyPriceProvider.getCELOPx",
      "offset": [
        2184,
        2412
      ],
      "op": "RETURN",
      "path": "1"
    },
    "126": {
      "offset": [
        645,
        735
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "127": {
      "fn": "CeloProxyPriceProvider.getCELOPx",
      "offset": [
        645,
        735
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x86"
    },
    "130": {
      "fn": "CeloProxyPriceProvider.getCELOPx",
      "offset": [
        645,
        735
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x12A"
    },
    "133": {
      "fn": "CeloProxyPriceProvider.getCELOPx",
      "jump": "i",
      "offset": [
        645,
        735
      ],
      "op": "JUMP",
      "path": "1"
    },
    "134": {
      "fn": "CeloProxyPriceProvider.getCELOPx",
      "offset": [
        645,
        735
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "135": {
      "fn": "CeloProxyPriceProvider.getCELOPx",
      "offset": [
        645,
        735
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "137": {
      "fn": "CeloProxyPriceProvider.getCELOPx",
      "offset": [
        645,
        735
      ],
      "op": "DUP1",
      "path": "1"
    },
    "138": {
      "fn": "CeloProxyPriceProvider.getCELOPx",
      "offset": [
        645,
        735
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "139": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "141": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "143": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "145": {
      "op": "SHL"
    },
    "146": {
      "op": "SUB"
    },
    "147": {
      "offset": [
        645,
        735
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "148": {
      "fn": "CeloProxyPriceProvider.getCELOPx",
      "offset": [
        645,
        735
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "149": {
      "fn": "CeloProxyPriceProvider.getCELOPx",
      "offset": [
        645,
        735
      ],
      "op": "AND",
      "path": "1"
    },
    "150": {
      "fn": "CeloProxyPriceProvider.getCELOPx",
      "offset": [
        645,
        735
      ],
      "op": "DUP3",
      "path": "1"
    },
    "151": {
      "fn": "CeloProxyPriceProvider.getCELOPx",
      "offset": [
        645,
        735
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "152": {
      "fn": "CeloProxyPriceProvider.getCELOPx",
      "offset": [
        645,
        735
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "153": {
      "fn": "CeloProxyPriceProvider.getCELOPx",
      "offset": [
        645,
        735
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "154": {
      "fn": "CeloProxyPriceProvider.getCELOPx",
      "offset": [
        645,
        735
      ],
      "op": "DUP2",
      "path": "1"
    },
    "155": {
      "fn": "CeloProxyPriceProvider.getCELOPx",
      "offset": [
        645,
        735
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "156": {
      "fn": "CeloProxyPriceProvider.getCELOPx",
      "offset": [
        645,
        735
      ],
      "op": "SUB",
      "path": "1"
    },
    "157": {
      "fn": "CeloProxyPriceProvider.getCELOPx",
      "offset": [
        645,
        735
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "159": {
      "fn": "CeloProxyPriceProvider.getCELOPx",
      "offset": [
        645,
        735
      ],
      "op": "ADD",
      "path": "1"
    },
    "160": {
      "fn": "CeloProxyPriceProvider.getCELOPx",
      "offset": [
        645,
        735
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "161": {
      "fn": "CeloProxyPriceProvider.getCELOPx",
      "offset": [
        645,
        735
      ],
      "op": "RETURN",
      "path": "1"
    },
    "162": {
      "fn": "CeloProxyPriceProvider.getAssetPrice",
      "offset": [
        1446,
        2031
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "163": {
      "fn": "CeloProxyPriceProvider.getAssetPrice",
      "offset": [
        1446,
        2031
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x6C"
    },
    "166": {
      "fn": "CeloProxyPriceProvider.getAssetPrice",
      "offset": [
        1446,
        2031
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "168": {
      "fn": "CeloProxyPriceProvider.getAssetPrice",
      "offset": [
        1446,
        2031
      ],
      "op": "DUP1",
      "path": "1"
    },
    "169": {
      "fn": "CeloProxyPriceProvider.getAssetPrice",
      "offset": [
        1446,
        2031
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "170": {
      "fn": "CeloProxyPriceProvider.getAssetPrice",
      "offset": [
        1446,
        2031
      ],
      "op": "SUB",
      "path": "1"
    },
    "171": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "173": {
      "op": "DUP2"
    },
    "174": {
      "op": "LT"
    },
    "175": {
      "op": "ISZERO"
    },
    "176": {
      "op": "PUSH2",
      "value": "0xB8"
    },
    "179": {
      "op": "JUMPI"
    },
    "180": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "182": {
      "op": "DUP1"
    },
    "183": {
      "op": "REVERT"
    },
    "184": {
      "op": "JUMPDEST"
    },
    "185": {
      "op": "POP"
    },
    "186": {
      "fn": "CeloProxyPriceProvider.getAssetPrice",
      "offset": [
        1446,
        2031
      ],
      "op": "CALLDATALOAD",
      "path": "1"
    },
    "187": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "189": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "191": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "193": {
      "op": "SHL"
    },
    "194": {
      "op": "SUB"
    },
    "195": {
      "fn": "CeloProxyPriceProvider.getAssetPrice",
      "offset": [
        1446,
        2031
      ],
      "op": "AND",
      "path": "1"
    },
    "196": {
      "fn": "CeloProxyPriceProvider.getAssetPrice",
      "offset": [
        1446,
        2031
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x130"
    },
    "199": {
      "fn": "CeloProxyPriceProvider.getAssetPrice",
      "jump": "i",
      "offset": [
        1446,
        2031
      ],
      "op": "JUMP",
      "path": "1"
    },
    "200": {
      "fn": "CeloProxyPriceProvider.getCELOPx",
      "offset": [
        2184,
        2412
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "201": {
      "fn": "CeloProxyPriceProvider.getCELOPx",
      "offset": [
        2241,
        2245
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "203": {
      "fn": "CeloProxyPriceProvider.getCELOPx",
      "offset": [
        2257,
        2275
      ],
      "op": "DUP1",
      "path": "1"
    },
    "204": {
      "fn": "CeloProxyPriceProvider.getCELOPx",
      "offset": [
        2278,
        2298
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xD4"
    },
    "207": {
      "fn": "CeloProxyPriceProvider.getCELOPx",
      "offset": [
        2292,
        2297
      ],
      "op": "DUP4",
      "path": "1"
    },
    "208": {
      "fn": "CeloProxyPriceProvider.getCELOPx",
      "offset": [
        2278,
        2291
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x130"
    },
    "211": {
      "fn": "CeloProxyPriceProvider.getCELOPx",
      "jump": "i",
      "offset": [
        2278,
        2298
      ],
      "op": "JUMP",
      "path": "1"
    },
    "212": {
      "fn": "CeloProxyPriceProvider.getCELOPx",
      "offset": [
        2278,
        2298
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "213": {
      "fn": "CeloProxyPriceProvider.getCELOPx",
      "offset": [
        2257,
        2298
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "214": {
      "op": "POP"
    },
    "215": {
      "fn": "CeloProxyPriceProvider.getCELOPx",
      "offset": [
        2345,
        2351
      ],
      "op": "PUSH8",
      "path": "1",
      "value": "0xDE0B6B3A7640000"
    },
    "224": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "226": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "228": {
      "op": "SHL"
    },
    "229": {
      "fn": "CeloProxyPriceProvider.getCELOPx",
      "offset": [
        2319,
        2341
      ],
      "op": "DUP3",
      "path": "1"
    },
    "230": {
      "fn": "CeloProxyPriceProvider.getCELOPx",
      "offset": [
        2319,
        2341
      ],
      "op": "MUL",
      "path": "1"
    },
    "231": {
      "fn": "CeloProxyPriceProvider.getCELOPx",
      "offset": [
        2318,
        2351
      ],
      "op": "DIV",
      "path": "1"
    },
    "232": {
      "fn": "CeloProxyPriceProvider.getCELOPx",
      "offset": [
        2318,
        2351
      ],
      "op": "DUP1",
      "path": "1"
    },
    "233": {
      "fn": "CeloProxyPriceProvider.getCELOPx",
      "offset": [
        2361,
        2386
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 0,
      "value": "0x121"
    },
    "236": {
      "fn": "CeloProxyPriceProvider.getCELOPx",
      "offset": [
        2361,
        2386
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "237": {
      "fn": "CeloProxyPriceProvider.getCELOPx",
      "offset": [
        2361,
        2386
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "239": {
      "fn": "CeloProxyPriceProvider.getCELOPx",
      "offset": [
        2361,
        2386
      ],
      "op": "DUP1",
      "path": "1"
    },
    "240": {
      "fn": "CeloProxyPriceProvider.getCELOPx",
      "offset": [
        2361,
        2386
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "241": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "245": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "247": {
      "op": "SHL"
    },
    "248": {
      "fn": "CeloProxyPriceProvider.getCELOPx",
      "offset": [
        2361,
        2386
      ],
      "op": "DUP2",
      "path": "1"
    },
    "249": {
      "fn": "CeloProxyPriceProvider.getCELOPx",
      "offset": [
        2361,
        2386
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "250": {
      "fn": "CeloProxyPriceProvider.getCELOPx",
      "offset": [
        2361,
        2386
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "252": {
      "fn": "CeloProxyPriceProvider.getCELOPx",
      "offset": [
        2361,
        2386
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "254": {
      "fn": "CeloProxyPriceProvider.getCELOPx",
      "offset": [
        2361,
        2386
      ],
      "op": "DUP3",
      "path": "1"
    },
    "255": {
      "fn": "CeloProxyPriceProvider.getCELOPx",
      "offset": [
        2361,
        2386
      ],
      "op": "ADD",
      "path": "1"
    },
    "256": {
      "fn": "CeloProxyPriceProvider.getCELOPx",
      "offset": [
        2361,
        2386
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "257": {
      "fn": "CeloProxyPriceProvider.getCELOPx",
      "offset": [
        2361,
        2386
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x5"
    },
    "259": {
      "fn": "CeloProxyPriceProvider.getCELOPx",
      "offset": [
        2361,
        2386
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x24"
    },
    "261": {
      "fn": "CeloProxyPriceProvider.getCELOPx",
      "offset": [
        2361,
        2386
      ],
      "op": "DUP3",
      "path": "1"
    },
    "262": {
      "fn": "CeloProxyPriceProvider.getCELOPx",
      "offset": [
        2361,
        2386
      ],
      "op": "ADD",
      "path": "1"
    },
    "263": {
      "fn": "CeloProxyPriceProvider.getCELOPx",
      "offset": [
        2361,
        2386
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "264": {
      "op": "PUSH5",
      "value": "0xDCDE40E0F"
    },
    "270": {
      "op": "PUSH1",
      "value": "0xDB"
    },
    "272": {
      "op": "SHL"
    },
    "273": {
      "fn": "CeloProxyPriceProvider.getCELOPx",
      "offset": [
        2361,
        2386
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x44"
    },
    "275": {
      "fn": "CeloProxyPriceProvider.getCELOPx",
      "offset": [
        2361,
        2386
      ],
      "op": "DUP3",
      "path": "1"
    },
    "276": {
      "fn": "CeloProxyPriceProvider.getCELOPx",
      "offset": [
        2361,
        2386
      ],
      "op": "ADD",
      "path": "1"
    },
    "277": {
      "fn": "CeloProxyPriceProvider.getCELOPx",
      "offset": [
        2361,
        2386
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "278": {
      "fn": "CeloProxyPriceProvider.getCELOPx",
      "offset": [
        2361,
        2386
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "279": {
      "fn": "CeloProxyPriceProvider.getCELOPx",
      "offset": [
        2361,
        2386
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "280": {
      "fn": "CeloProxyPriceProvider.getCELOPx",
      "offset": [
        2361,
        2386
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "281": {
      "fn": "CeloProxyPriceProvider.getCELOPx",
      "offset": [
        2361,
        2386
      ],
      "op": "DUP2",
      "path": "1"
    },
    "282": {
      "fn": "CeloProxyPriceProvider.getCELOPx",
      "offset": [
        2361,
        2386
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "283": {
      "fn": "CeloProxyPriceProvider.getCELOPx",
      "offset": [
        2361,
        2386
      ],
      "op": "SUB",
      "path": "1"
    },
    "284": {
      "fn": "CeloProxyPriceProvider.getCELOPx",
      "offset": [
        2361,
        2386
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x64"
    },
    "286": {
      "fn": "CeloProxyPriceProvider.getCELOPx",
      "offset": [
        2361,
        2386
      ],
      "op": "ADD",
      "path": "1"
    },
    "287": {
      "fn": "CeloProxyPriceProvider.getCELOPx",
      "offset": [
        2361,
        2386
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "288": {
      "fn": "CeloProxyPriceProvider.getCELOPx",
      "offset": [
        2361,
        2386
      ],
      "op": "REVERT",
      "path": "1"
    },
    "289": {
      "fn": "CeloProxyPriceProvider.getCELOPx",
      "offset": [
        2361,
        2386
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "290": {
      "fn": "CeloProxyPriceProvider.getCELOPx",
      "offset": [
        2403,
        2405
      ],
      "op": "SWAP2",
      "path": "1",
      "statement": 1
    },
    "291": {
      "op": "POP"
    },
    "292": {
      "op": "POP"
    },
    "293": {
      "fn": "CeloProxyPriceProvider.getCELOPx",
      "offset": [
        2184,
        2412
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "294": {
      "fn": "CeloProxyPriceProvider.getCELOPx",
      "offset": [
        2184,
        2412
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "295": {
      "fn": "CeloProxyPriceProvider.getCELOPx",
      "offset": [
        2184,
        2412
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "296": {
      "fn": "CeloProxyPriceProvider.getCELOPx",
      "offset": [
        2184,
        2412
      ],
      "op": "POP",
      "path": "1"
    },
    "297": {
      "fn": "CeloProxyPriceProvider.getCELOPx",
      "jump": "o",
      "offset": [
        2184,
        2412
      ],
      "op": "JUMP",
      "path": "1"
    },
    "298": {
      "offset": [
        645,
        735
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "299": {
      "offset": [
        692,
        734
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xCE10"
    },
    "302": {
      "offset": [
        645,
        735
      ],
      "op": "DUP2",
      "path": "1"
    },
    "303": {
      "fn": "CeloProxyPriceProvider.getCELOPx",
      "jump": "o",
      "offset": [
        645,
        735
      ],
      "op": "JUMP",
      "path": "1"
    },
    "304": {
      "fn": "CeloProxyPriceProvider.getAssetPrice",
      "offset": [
        1446,
        2031
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "305": {
      "fn": "CeloProxyPriceProvider.getAssetPrice",
      "offset": [
        1505,
        1512
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "307": {
      "fn": "CeloProxyPriceProvider.getAssetPrice",
      "offset": [
        1538,
        1552
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x13A"
    },
    "310": {
      "fn": "CeloProxyPriceProvider.getAssetPrice",
      "offset": [
        1538,
        1550
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x33F"
    },
    "313": {
      "fn": "CeloProxyPriceProvider.getAssetPrice",
      "jump": "i",
      "offset": [
        1538,
        1552
      ],
      "op": "JUMP",
      "path": "1"
    },
    "314": {
      "fn": "CeloProxyPriceProvider.getAssetPrice",
      "offset": [
        1538,
        1552
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "315": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "317": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "319": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "321": {
      "op": "SHL"
    },
    "322": {
      "op": "SUB"
    },
    "323": {
      "fn": "CeloProxyPriceProvider.getAssetPrice",
      "offset": [
        1528,
        1552
      ],
      "op": "AND",
      "path": "1"
    },
    "324": {
      "fn": "CeloProxyPriceProvider.getAssetPrice",
      "offset": [
        1528,
        1534
      ],
      "op": "DUP3",
      "path": "1"
    },
    "325": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "327": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "329": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "331": {
      "op": "SHL"
    },
    "332": {
      "op": "SUB"
    },
    "333": {
      "fn": "CeloProxyPriceProvider.getAssetPrice",
      "offset": [
        1528,
        1552
      ],
      "op": "AND",
      "path": "1"
    },
    "334": {
      "branch": 14,
      "fn": "CeloProxyPriceProvider.getAssetPrice",
      "offset": [
        1528,
        1552
      ],
      "op": "EQ",
      "path": "1"
    },
    "335": {
      "fn": "CeloProxyPriceProvider.getAssetPrice",
      "offset": [
        1524,
        1593
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "336": {
      "fn": "CeloProxyPriceProvider.getAssetPrice",
      "offset": [
        1524,
        1593
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x162"
    },
    "339": {
      "branch": 14,
      "fn": "CeloProxyPriceProvider.getAssetPrice",
      "offset": [
        1524,
        1593
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "340": {
      "op": "POP"
    },
    "341": {
      "fn": "CeloProxyPriceProvider.getAssetPrice",
      "offset": [
        1575,
        1582
      ],
      "op": "PUSH8",
      "path": "1",
      "statement": 2,
      "value": "0xDE0B6B3A7640000"
    },
    "350": {
      "fn": "CeloProxyPriceProvider.getAssetPrice",
      "offset": [
        1568,
        1582
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x125"
    },
    "353": {
      "fn": "CeloProxyPriceProvider.getAssetPrice",
      "offset": [
        1568,
        1582
      ],
      "op": "JUMP",
      "path": "1"
    },
    "354": {
      "fn": "CeloProxyPriceProvider.getAssetPrice",
      "offset": [
        1524,
        1593
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "355": {
      "fn": "CeloProxyPriceProvider.getAssetPrice",
      "offset": [
        1602,
        1616
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "357": {
      "fn": "CeloProxyPriceProvider.getAssetPrice",
      "offset": [
        1626,
        1642
      ],
      "op": "DUP1",
      "path": "1"
    },
    "358": {
      "fn": "CeloProxyPriceProvider.getAssetPrice",
      "offset": [
        1652,
        1675
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "360": {
      "fn": "CeloProxyPriceProvider.getAssetPrice",
      "offset": [
        1678,
        1696
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x16F"
    },
    "363": {
      "fn": "CeloProxyPriceProvider.getAssetPrice",
      "offset": [
        1678,
        1694
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3DE"
    },
    "366": {
      "fn": "CeloProxyPriceProvider.getAssetPrice",
      "jump": "i",
      "offset": [
        1678,
        1696
      ],
      "op": "JUMP",
      "path": "1"
    },
    "367": {
      "fn": "CeloProxyPriceProvider.getAssetPrice",
      "offset": [
        1678,
        1696
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "368": {
      "fn": "CeloProxyPriceProvider.getAssetPrice",
      "offset": [
        1727,
        1754
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 3,
      "value": "0x40"
    },
    "370": {
      "fn": "CeloProxyPriceProvider.getAssetPrice",
      "offset": [
        1727,
        1754
      ],
      "op": "DUP1",
      "path": "1"
    },
    "371": {
      "fn": "CeloProxyPriceProvider.getAssetPrice",
      "offset": [
        1727,
        1754
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "372": {
      "op": "PUSH4",
      "value": "0xEF90E1B"
    },
    "377": {
      "op": "PUSH1",
      "value": "0xE4"
    },
    "379": {
      "op": "SHL"
    },
    "380": {
      "fn": "CeloProxyPriceProvider.getAssetPrice",
      "offset": [
        1727,
        1754
      ],
      "op": "DUP2",
      "path": "1"
    },
    "381": {
      "fn": "CeloProxyPriceProvider.getAssetPrice",
      "offset": [
        1727,
        1754
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "382": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "384": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "386": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "388": {
      "op": "SHL"
    },
    "389": {
      "op": "SUB"
    },
    "390": {
      "fn": "CeloProxyPriceProvider.getAssetPrice",
      "offset": [
        1727,
        1754
      ],
      "op": "DUP9",
      "path": "1"
    },
    "391": {
      "fn": "CeloProxyPriceProvider.getAssetPrice",
      "offset": [
        1727,
        1754
      ],
      "op": "DUP2",
      "path": "1"
    },
    "392": {
      "fn": "CeloProxyPriceProvider.getAssetPrice",
      "offset": [
        1727,
        1754
      ],
      "op": "AND",
      "path": "1"
    },
    "393": {
      "fn": "CeloProxyPriceProvider.getAssetPrice",
      "offset": [
        1727,
        1754
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "395": {
      "fn": "CeloProxyPriceProvider.getAssetPrice",
      "offset": [
        1727,
        1754
      ],
      "op": "DUP4",
      "path": "1"
    },
    "396": {
      "fn": "CeloProxyPriceProvider.getAssetPrice",
      "offset": [
        1727,
        1754
      ],
      "op": "ADD",
      "path": "1"
    },
    "397": {
      "fn": "CeloProxyPriceProvider.getAssetPrice",
      "offset": [
        1727,
        1754
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "398": {
      "fn": "CeloProxyPriceProvider.getAssetPrice",
      "offset": [
        1727,
        1754
      ],
      "op": "DUP3",
      "path": "1"
    },
    "399": {
      "fn": "CeloProxyPriceProvider.getAssetPrice",
      "offset": [
        1727,
        1754
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "400": {
      "fn": "CeloProxyPriceProvider.getAssetPrice",
      "offset": [
        1652,
        1696
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "401": {
      "fn": "CeloProxyPriceProvider.getAssetPrice",
      "offset": [
        1652,
        1696
      ],
      "op": "SWAP5",
      "path": "1"
    },
    "402": {
      "op": "POP"
    },
    "403": {
      "fn": "CeloProxyPriceProvider.getAssetPrice",
      "offset": [
        1727,
        1746
      ],
      "op": "DUP5",
      "path": "1"
    },
    "404": {
      "fn": "CeloProxyPriceProvider.getAssetPrice",
      "offset": [
        1727,
        1746
      ],
      "op": "AND",
      "path": "1"
    },
    "405": {
      "fn": "CeloProxyPriceProvider.getAssetPrice",
      "offset": [
        1727,
        1746
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "406": {
      "fn": "CeloProxyPriceProvider.getAssetPrice",
      "offset": [
        1727,
        1746
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xEF90E1B0"
    },
    "411": {
      "fn": "CeloProxyPriceProvider.getAssetPrice",
      "offset": [
        1727,
        1746
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "412": {
      "fn": "CeloProxyPriceProvider.getAssetPrice",
      "offset": [
        1727,
        1754
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x24"
    },
    "414": {
      "fn": "CeloProxyPriceProvider.getAssetPrice",
      "offset": [
        1727,
        1754
      ],
      "op": "DUP1",
      "path": "1"
    },
    "415": {
      "fn": "CeloProxyPriceProvider.getAssetPrice",
      "offset": [
        1727,
        1754
      ],
      "op": "DUP5",
      "path": "1"
    },
    "416": {
      "fn": "CeloProxyPriceProvider.getAssetPrice",
      "offset": [
        1727,
        1754
      ],
      "op": "ADD",
      "path": "1"
    },
    "417": {
      "fn": "CeloProxyPriceProvider.getAssetPrice",
      "offset": [
        1727,
        1754
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "418": {
      "fn": "CeloProxyPriceProvider.getAssetPrice",
      "offset": [
        1727,
        1754
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "419": {
      "fn": "CeloProxyPriceProvider.getAssetPrice",
      "offset": [
        1727,
        1754
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "420": {
      "fn": "CeloProxyPriceProvider.getAssetPrice",
      "offset": [
        1727,
        1754
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "421": {
      "fn": "CeloProxyPriceProvider.getAssetPrice",
      "offset": [
        1727,
        1754
      ],
      "op": "DUP3",
      "path": "1"
    },
    "422": {
      "fn": "CeloProxyPriceProvider.getAssetPrice",
      "offset": [
        1727,
        1754
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "423": {
      "fn": "CeloProxyPriceProvider.getAssetPrice",
      "offset": [
        1727,
        1754
      ],
      "op": "SUB",
      "path": "1"
    },
    "424": {
      "fn": "CeloProxyPriceProvider.getAssetPrice",
      "offset": [
        1727,
        1754
      ],
      "op": "ADD",
      "path": "1"
    },
    "425": {
      "fn": "CeloProxyPriceProvider.getAssetPrice",
      "offset": [
        1727,
        1754
      ],
      "op": "DUP2",
      "path": "1"
    },
    "426": {
      "fn": "CeloProxyPriceProvider.getAssetPrice",
      "offset": [
        1727,
        1746
      ],
      "op": "DUP7",
      "path": "1"
    },
    "427": {
      "fn": "CeloProxyPriceProvider.getAssetPrice",
      "offset": [
        1727,
        1754
      ],
      "op": "DUP1",
      "path": "1"
    },
    "428": {
      "fn": "CeloProxyPriceProvider.getAssetPrice",
      "offset": [
        1727,
        1754
      ],
      "op": "EXTCODESIZE",
      "path": "1"
    },
    "429": {
      "fn": "CeloProxyPriceProvider.getAssetPrice",
      "offset": [
        1727,
        1754
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "430": {
      "op": "DUP1"
    },
    "431": {
      "op": "ISZERO"
    },
    "432": {
      "op": "PUSH2",
      "value": "0x1B8"
    },
    "435": {
      "op": "JUMPI"
    },
    "436": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "438": {
      "op": "DUP1"
    },
    "439": {
      "op": "REVERT"
    },
    "440": {
      "op": "JUMPDEST"
    },
    "441": {
      "fn": "CeloProxyPriceProvider.getAssetPrice",
      "offset": [
        1727,
        1754
      ],
      "op": "POP",
      "path": "1"
    },
    "442": {
      "fn": "CeloProxyPriceProvider.getAssetPrice",
      "offset": [
        1727,
        1754
      ],
      "op": "GAS",
      "path": "1"
    },
    "443": {
      "fn": "CeloProxyPriceProvider.getAssetPrice",
      "offset": [
        1727,
        1754
      ],
      "op": "STATICCALL",
      "path": "1"
    },
    "444": {
      "fn": "CeloProxyPriceProvider.getAssetPrice",
      "offset": [
        1727,
        1754
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "445": {
      "op": "DUP1"
    },
    "446": {
      "op": "ISZERO"
    },
    "447": {
      "op": "PUSH2",
      "value": "0x1CC"
    },
    "450": {
      "op": "JUMPI"
    },
    "451": {
      "op": "RETURNDATASIZE"
    },
    "452": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "454": {
      "op": "DUP1"
    },
    "455": {
      "op": "RETURNDATACOPY"
    },
    "456": {
      "op": "RETURNDATASIZE"
    },
    "457": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "459": {
      "op": "REVERT"
    },
    "460": {
      "op": "JUMPDEST"
    },
    "461": {
      "fn": "CeloProxyPriceProvider.getAssetPrice",
      "offset": [
        1727,
        1754
      ],
      "op": "POP",
      "path": "1"
    },
    "462": {
      "fn": "CeloProxyPriceProvider.getAssetPrice",
      "offset": [
        1727,
        1754
      ],
      "op": "POP",
      "path": "1"
    },
    "463": {
      "fn": "CeloProxyPriceProvider.getAssetPrice",
      "offset": [
        1727,
        1754
      ],
      "op": "POP",
      "path": "1"
    },
    "464": {
      "fn": "CeloProxyPriceProvider.getAssetPrice",
      "offset": [
        1727,
        1754
      ],
      "op": "POP",
      "path": "1"
    },
    "465": {
      "fn": "CeloProxyPriceProvider.getAssetPrice",
      "offset": [
        1727,
        1754
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "467": {
      "fn": "CeloProxyPriceProvider.getAssetPrice",
      "offset": [
        1727,
        1754
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "468": {
      "fn": "CeloProxyPriceProvider.getAssetPrice",
      "offset": [
        1727,
        1754
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "469": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "471": {
      "op": "DUP2"
    },
    "472": {
      "op": "LT"
    },
    "473": {
      "op": "ISZERO"
    },
    "474": {
      "op": "PUSH2",
      "value": "0x1E2"
    },
    "477": {
      "op": "JUMPI"
    },
    "478": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "480": {
      "op": "DUP1"
    },
    "481": {
      "op": "REVERT"
    },
    "482": {
      "op": "JUMPDEST"
    },
    "483": {
      "op": "POP"
    },
    "484": {
      "fn": "CeloProxyPriceProvider.getAssetPrice",
      "offset": [
        1727,
        1754
      ],
      "op": "DUP1",
      "path": "1"
    },
    "485": {
      "fn": "CeloProxyPriceProvider.getAssetPrice",
      "offset": [
        1727,
        1754
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "486": {
      "fn": "CeloProxyPriceProvider.getAssetPrice",
      "offset": [
        1727,
        1754
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "488": {
      "fn": "CeloProxyPriceProvider.getAssetPrice",
      "offset": [
        1727,
        1754
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "489": {
      "fn": "CeloProxyPriceProvider.getAssetPrice",
      "offset": [
        1727,
        1754
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "490": {
      "fn": "CeloProxyPriceProvider.getAssetPrice",
      "offset": [
        1727,
        1754
      ],
      "op": "ADD",
      "path": "1"
    },
    "491": {
      "fn": "CeloProxyPriceProvider.getAssetPrice",
      "offset": [
        1727,
        1754
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "492": {
      "fn": "CeloProxyPriceProvider.getAssetPrice",
      "offset": [
        1727,
        1754
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "493": {
      "fn": "CeloProxyPriceProvider.getAssetPrice",
      "offset": [
        1727,
        1754
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "494": {
      "op": "POP"
    },
    "495": {
      "fn": "CeloProxyPriceProvider.getAssetPrice",
      "offset": [
        1727,
        1754
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "496": {
      "op": "POP"
    },
    "497": {
      "branch": 15,
      "fn": "CeloProxyPriceProvider.getAssetPrice",
      "offset": [
        1772,
        1782
      ],
      "op": "DUP3",
      "path": "1",
      "statement": 4
    },
    "498": {
      "fn": "CeloProxyPriceProvider.getAssetPrice",
      "offset": [
        1764,
        1806
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x238"
    },
    "501": {
      "branch": 15,
      "fn": "CeloProxyPriceProvider.getAssetPrice",
      "offset": [
        1764,
        1806
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "502": {
      "fn": "CeloProxyPriceProvider.getAssetPrice",
      "offset": [
        1764,
        1806
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "504": {
      "fn": "CeloProxyPriceProvider.getAssetPrice",
      "offset": [
        1764,
        1806
      ],
      "op": "DUP1",
      "path": "1"
    },
    "505": {
      "fn": "CeloProxyPriceProvider.getAssetPrice",
      "offset": [
        1764,
        1806
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "506": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "510": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "512": {
      "op": "SHL"
    },
    "513": {
      "fn": "CeloProxyPriceProvider.getAssetPrice",
      "offset": [
        1764,
        1806
      ],
      "op": "DUP2",
      "path": "1"
    },
    "514": {
      "fn": "CeloProxyPriceProvider.getAssetPrice",
      "offset": [
        1764,
        1806
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "515": {
      "fn": "CeloProxyPriceProvider.getAssetPrice",
      "offset": [
        1764,
        1806
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "517": {
      "fn": "CeloProxyPriceProvider.getAssetPrice",
      "offset": [
        1764,
        1806
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "519": {
      "fn": "CeloProxyPriceProvider.getAssetPrice",
      "offset": [
        1764,
        1806
      ],
      "op": "DUP3",
      "path": "1"
    },
    "520": {
      "fn": "CeloProxyPriceProvider.getAssetPrice",
      "offset": [
        1764,
        1806
      ],
      "op": "ADD",
      "path": "1"
    },
    "521": {
      "fn": "CeloProxyPriceProvider.getAssetPrice",
      "offset": [
        1764,
        1806
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "522": {
      "fn": "CeloProxyPriceProvider.getAssetPrice",
      "offset": [
        1764,
        1806
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x13"
    },
    "524": {
      "fn": "CeloProxyPriceProvider.getAssetPrice",
      "offset": [
        1764,
        1806
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x24"
    },
    "526": {
      "fn": "CeloProxyPriceProvider.getAssetPrice",
      "offset": [
        1764,
        1806
      ],
      "op": "DUP3",
      "path": "1"
    },
    "527": {
      "fn": "CeloProxyPriceProvider.getAssetPrice",
      "offset": [
        1764,
        1806
      ],
      "op": "ADD",
      "path": "1"
    },
    "528": {
      "fn": "CeloProxyPriceProvider.getAssetPrice",
      "offset": [
        1764,
        1806
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "529": {
      "op": "PUSH19",
      "value": "0x5265706F72746564207072696365206973203"
    },
    "549": {
      "op": "PUSH1",
      "value": "0x6C"
    },
    "551": {
      "op": "SHL"
    },
    "552": {
      "fn": "CeloProxyPriceProvider.getAssetPrice",
      "offset": [
        1764,
        1806
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x44"
    },
    "554": {
      "fn": "CeloProxyPriceProvider.getAssetPrice",
      "offset": [
        1764,
        1806
      ],
      "op": "DUP3",
      "path": "1"
    },
    "555": {
      "fn": "CeloProxyPriceProvider.getAssetPrice",
      "offset": [
        1764,
        1806
      ],
      "op": "ADD",
      "path": "1"
    },
    "556": {
      "fn": "CeloProxyPriceProvider.getAssetPrice",
      "offset": [
        1764,
        1806
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "557": {
      "fn": "CeloProxyPriceProvider.getAssetPrice",
      "offset": [
        1764,
        1806
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "558": {
      "fn": "CeloProxyPriceProvider.getAssetPrice",
      "offset": [
        1764,
        1806
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "559": {
      "fn": "CeloProxyPriceProvider.getAssetPrice",
      "offset": [
        1764,
        1806
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "560": {
      "fn": "CeloProxyPriceProvider.getAssetPrice",
      "offset": [
        1764,
        1806
      ],
      "op": "DUP2",
      "path": "1"
    },
    "561": {
      "fn": "CeloProxyPriceProvider.getAssetPrice",
      "offset": [
        1764,
        1806
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "562": {
      "fn": "CeloProxyPriceProvider.getAssetPrice",
      "offset": [
        1764,
        1806
      ],
      "op": "SUB",
      "path": "1"
    },
    "563": {
      "fn": "CeloProxyPriceProvider.getAssetPrice",
      "offset": [
        1764,
        1806
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x64"
    },
    "565": {
      "fn": "CeloProxyPriceProvider.getAssetPrice",
      "offset": [
        1764,
        1806
      ],
      "op": "ADD",
      "path": "1"
    },
    "566": {
      "fn": "CeloProxyPriceProvider.getAssetPrice",
      "offset": [
        1764,
        1806
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "567": {
      "fn": "CeloProxyPriceProvider.getAssetPrice",
      "offset": [
        1764,
        1806
      ],
      "op": "REVERT",
      "path": "1"
    },
    "568": {
      "fn": "CeloProxyPriceProvider.getAssetPrice",
      "offset": [
        1764,
        1806
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "569": {
      "fn": "CeloProxyPriceProvider.getAssetPrice",
      "offset": [
        1816,
        1832
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "571": {
      "fn": "CeloProxyPriceProvider.getAssetPrice",
      "offset": [
        1835,
        1843
      ],
      "op": "DUP2",
      "path": "1"
    },
    "572": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "574": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "576": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "578": {
      "op": "SHL"
    },
    "579": {
      "op": "SUB"
    },
    "580": {
      "fn": "CeloProxyPriceProvider.getAssetPrice",
      "offset": [
        1835,
        1859
      ],
      "op": "AND",
      "path": "1"
    },
    "581": {
      "fn": "CeloProxyPriceProvider.getAssetPrice",
      "offset": [
        1835,
        1859
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x71B48FC"
    },
    "586": {
      "fn": "CeloProxyPriceProvider.getAssetPrice",
      "offset": [
        1860,
        1866
      ],
      "op": "DUP8",
      "path": "1"
    },
    "587": {
      "fn": "CeloProxyPriceProvider.getAssetPrice",
      "offset": [
        1835,
        1867
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "589": {
      "fn": "CeloProxyPriceProvider.getAssetPrice",
      "offset": [
        1835,
        1867
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "590": {
      "fn": "CeloProxyPriceProvider.getAssetPrice",
      "offset": [
        1835,
        1867
      ],
      "op": "DUP3",
      "path": "1"
    },
    "591": {
      "fn": "CeloProxyPriceProvider.getAssetPrice",
      "offset": [
        1835,
        1867
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xFFFFFFFF"
    },
    "596": {
      "fn": "CeloProxyPriceProvider.getAssetPrice",
      "offset": [
        1835,
        1867
      ],
      "op": "AND",
      "path": "1"
    },
    "597": {
      "fn": "CeloProxyPriceProvider.getAssetPrice",
      "offset": [
        1835,
        1867
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xE0"
    },
    "599": {
      "fn": "CeloProxyPriceProvider.getAssetPrice",
      "offset": [
        1835,
        1867
      ],
      "op": "SHL",
      "path": "1"
    },
    "600": {
      "fn": "CeloProxyPriceProvider.getAssetPrice",
      "offset": [
        1835,
        1867
      ],
      "op": "DUP2",
      "path": "1"
    },
    "601": {
      "fn": "CeloProxyPriceProvider.getAssetPrice",
      "offset": [
        1835,
        1867
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "602": {
      "fn": "CeloProxyPriceProvider.getAssetPrice",
      "offset": [
        1835,
        1867
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "604": {
      "fn": "CeloProxyPriceProvider.getAssetPrice",
      "offset": [
        1835,
        1867
      ],
      "op": "ADD",
      "path": "1"
    },
    "605": {
      "fn": "CeloProxyPriceProvider.getAssetPrice",
      "offset": [
        1835,
        1867
      ],
      "op": "DUP1",
      "path": "1"
    },
    "606": {
      "fn": "CeloProxyPriceProvider.getAssetPrice",
      "offset": [
        1835,
        1867
      ],
      "op": "DUP3",
      "path": "1"
    },
    "607": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "609": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "611": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "613": {
      "op": "SHL"
    },
    "614": {
      "op": "SUB"
    },
    "615": {
      "fn": "CeloProxyPriceProvider.getAssetPrice",
      "offset": [
        1835,
        1867
      ],
      "op": "AND",
      "path": "1"
    },
    "616": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "618": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "620": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "622": {
      "op": "SHL"
    },
    "623": {
      "op": "SUB"
    },
    "624": {
      "fn": "CeloProxyPriceProvider.getAssetPrice",
      "offset": [
        1835,
        1867
      ],
      "op": "AND",
      "path": "1"
    },
    "625": {
      "fn": "CeloProxyPriceProvider.getAssetPrice",
      "offset": [
        1835,
        1867
      ],
      "op": "DUP2",
      "path": "1"
    },
    "626": {
      "fn": "CeloProxyPriceProvider.getAssetPrice",
      "offset": [
        1835,
        1867
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "627": {
      "fn": "CeloProxyPriceProvider.getAssetPrice",
      "offset": [
        1835,
        1867
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "629": {
      "fn": "CeloProxyPriceProvider.getAssetPrice",
      "offset": [
        1835,
        1867
      ],
      "op": "ADD",
      "path": "1"
    },
    "630": {
      "fn": "CeloProxyPriceProvider.getAssetPrice",
      "offset": [
        1835,
        1867
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "631": {
      "fn": "CeloProxyPriceProvider.getAssetPrice",
      "offset": [
        1835,
        1867
      ],
      "op": "POP",
      "path": "1"
    },
    "632": {
      "fn": "CeloProxyPriceProvider.getAssetPrice",
      "offset": [
        1835,
        1867
      ],
      "op": "POP",
      "path": "1"
    },
    "633": {
      "fn": "CeloProxyPriceProvider.getAssetPrice",
      "offset": [
        1835,
        1867
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "635": {
      "fn": "CeloProxyPriceProvider.getAssetPrice",
      "offset": [
        1835,
        1867
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "637": {
      "fn": "CeloProxyPriceProvider.getAssetPrice",
      "offset": [
        1835,
        1867
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "638": {
      "fn": "CeloProxyPriceProvider.getAssetPrice",
      "offset": [
        1835,
        1867
      ],
      "op": "DUP1",
      "path": "1"
    },
    "639": {
      "fn": "CeloProxyPriceProvider.getAssetPrice",
      "offset": [
        1835,
        1867
      ],
      "op": "DUP4",
      "path": "1"
    },
    "640": {
      "fn": "CeloProxyPriceProvider.getAssetPrice",
      "offset": [
        1835,
        1867
      ],
      "op": "SUB",
      "path": "1"
    },
    "641": {
      "fn": "CeloProxyPriceProvider.getAssetPrice",
      "offset": [
        1835,
        1867
      ],
      "op": "DUP2",
      "path": "1"
    },
    "642": {
      "fn": "CeloProxyPriceProvider.getAssetPrice",
      "offset": [
        1835,
        1867
      ],
      "op": "DUP7",
      "path": "1"
    },
    "643": {
      "fn": "CeloProxyPriceProvider.getAssetPrice",
      "offset": [
        1835,
        1867
      ],
      "op": "DUP1",
      "path": "1"
    },
    "644": {
      "fn": "CeloProxyPriceProvider.getAssetPrice",
      "offset": [
        1835,
        1867
      ],
      "op": "EXTCODESIZE",
      "path": "1"
    },
    "645": {
      "fn": "CeloProxyPriceProvider.getAssetPrice",
      "offset": [
        1835,
        1867
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "646": {
      "op": "DUP1"
    },
    "647": {
      "op": "ISZERO"
    },
    "648": {
      "op": "PUSH2",
      "value": "0x290"
    },
    "651": {
      "op": "JUMPI"
    },
    "652": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "654": {
      "op": "DUP1"
    },
    "655": {
      "op": "REVERT"
    },
    "656": {
      "op": "JUMPDEST"
    },
    "657": {
      "fn": "CeloProxyPriceProvider.getAssetPrice",
      "offset": [
        1835,
        1867
      ],
      "op": "POP",
      "path": "1"
    },
    "658": {
      "fn": "CeloProxyPriceProvider.getAssetPrice",
      "offset": [
        1835,
        1867
      ],
      "op": "GAS",
      "path": "1"
    },
    "659": {
      "fn": "CeloProxyPriceProvider.getAssetPrice",
      "offset": [
        1835,
        1867
      ],
      "op": "STATICCALL",
      "path": "1"
    },
    "660": {
      "fn": "CeloProxyPriceProvider.getAssetPrice",
      "offset": [
        1835,
        1867
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "661": {
      "op": "DUP1"
    },
    "662": {
      "op": "ISZERO"
    },
    "663": {
      "op": "PUSH2",
      "value": "0x2A4"
    },
    "666": {
      "op": "JUMPI"
    },
    "667": {
      "op": "RETURNDATASIZE"
    },
    "668": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "670": {
      "op": "DUP1"
    },
    "671": {
      "op": "RETURNDATACOPY"
    },
    "672": {
      "op": "RETURNDATASIZE"
    },
    "673": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "675": {
      "op": "REVERT"
    },
    "676": {
      "op": "JUMPDEST"
    },
    "677": {
      "fn": "CeloProxyPriceProvider.getAssetPrice",
      "offset": [
        1835,
        1867
      ],
      "op": "POP",
      "path": "1"
    },
    "678": {
      "fn": "CeloProxyPriceProvider.getAssetPrice",
      "offset": [
        1835,
        1867
      ],
      "op": "POP",
      "path": "1"
    },
    "679": {
      "fn": "CeloProxyPriceProvider.getAssetPrice",
      "offset": [
        1835,
        1867
      ],
      "op": "POP",
      "path": "1"
    },
    "680": {
      "fn": "CeloProxyPriceProvider.getAssetPrice",
      "offset": [
        1835,
        1867
      ],
      "op": "POP",
      "path": "1"
    },
    "681": {
      "fn": "CeloProxyPriceProvider.getAssetPrice",
      "offset": [
        1835,
        1867
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "683": {
      "fn": "CeloProxyPriceProvider.getAssetPrice",
      "offset": [
        1835,
        1867
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "684": {
      "fn": "CeloProxyPriceProvider.getAssetPrice",
      "offset": [
        1835,
        1867
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "685": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "687": {
      "op": "DUP2"
    },
    "688": {
      "op": "LT"
    },
    "689": {
      "op": "ISZERO"
    },
    "690": {
      "op": "PUSH2",
      "value": "0x2BA"
    },
    "693": {
      "op": "JUMPI"
    },
    "694": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "696": {
      "op": "DUP1"
    },
    "697": {
      "op": "REVERT"
    },
    "698": {
      "op": "JUMPDEST"
    },
    "699": {
      "op": "POP"
    },
    "700": {
      "fn": "CeloProxyPriceProvider.getAssetPrice",
      "offset": [
        1835,
        1867
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "701": {
      "fn": "CeloProxyPriceProvider.getAssetPrice",
      "offset": [
        1835,
        1867
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "702": {
      "op": "POP"
    },
    "703": {
      "fn": "CeloProxyPriceProvider.getAssetPrice",
      "offset": [
        1920,
        1930
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 5,
      "value": "0x258"
    },
    "706": {
      "fn": "CeloProxyPriceProvider.getAssetPrice",
      "offset": [
        1885,
        1917
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2D1"
    },
    "709": {
      "fn": "CeloProxyPriceProvider.getAssetPrice",
      "offset": [
        1885,
        1900
      ],
      "op": "TIMESTAMP",
      "path": "1"
    },
    "710": {
      "fn": "CeloProxyPriceProvider.getAssetPrice",
      "offset": [
        1835,
        1867
      ],
      "op": "DUP4",
      "path": "1"
    },
    "711": {
      "fn": "CeloProxyPriceProvider.getAssetPrice",
      "offset": [
        1885,
        1917
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xFFFFFFFF"
    },
    "716": {
      "fn": "CeloProxyPriceProvider.getAssetPrice",
      "offset": [
        1885,
        1904
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x450"
    },
    "719": {
      "fn": "CeloProxyPriceProvider.getAssetPrice",
      "offset": [
        1885,
        1917
      ],
      "op": "AND",
      "path": "1"
    },
    "720": {
      "fn": "CeloProxyPriceProvider.getAssetPrice",
      "jump": "i",
      "offset": [
        1885,
        1917
      ],
      "op": "JUMP",
      "path": "1"
    },
    "721": {
      "fn": "CeloProxyPriceProvider.getAssetPrice",
      "offset": [
        1885,
        1917
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "722": {
      "branch": 16,
      "fn": "CeloProxyPriceProvider.getAssetPrice",
      "offset": [
        1885,
        1930
      ],
      "op": "LT",
      "path": "1"
    },
    "723": {
      "fn": "CeloProxyPriceProvider.getAssetPrice",
      "offset": [
        1877,
        1974
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x30D"
    },
    "726": {
      "branch": 16,
      "fn": "CeloProxyPriceProvider.getAssetPrice",
      "offset": [
        1877,
        1974
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "727": {
      "fn": "CeloProxyPriceProvider.getAssetPrice",
      "offset": [
        1877,
        1974
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "729": {
      "fn": "CeloProxyPriceProvider.getAssetPrice",
      "offset": [
        1877,
        1974
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "730": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "734": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "736": {
      "op": "SHL"
    },
    "737": {
      "fn": "CeloProxyPriceProvider.getAssetPrice",
      "offset": [
        1877,
        1974
      ],
      "op": "DUP2",
      "path": "1"
    },
    "738": {
      "fn": "CeloProxyPriceProvider.getAssetPrice",
      "offset": [
        1877,
        1974
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "739": {
      "fn": "CeloProxyPriceProvider.getAssetPrice",
      "offset": [
        1877,
        1974
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "741": {
      "fn": "CeloProxyPriceProvider.getAssetPrice",
      "offset": [
        1877,
        1974
      ],
      "op": "ADD",
      "path": "1"
    },
    "742": {
      "fn": "CeloProxyPriceProvider.getAssetPrice",
      "offset": [
        1877,
        1974
      ],
      "op": "DUP1",
      "path": "1"
    },
    "743": {
      "fn": "CeloProxyPriceProvider.getAssetPrice",
      "offset": [
        1877,
        1974
      ],
      "op": "DUP1",
      "path": "1"
    },
    "744": {
      "fn": "CeloProxyPriceProvider.getAssetPrice",
      "offset": [
        1877,
        1974
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "746": {
      "fn": "CeloProxyPriceProvider.getAssetPrice",
      "offset": [
        1877,
        1974
      ],
      "op": "ADD",
      "path": "1"
    },
    "747": {
      "fn": "CeloProxyPriceProvider.getAssetPrice",
      "offset": [
        1877,
        1974
      ],
      "op": "DUP3",
      "path": "1"
    },
    "748": {
      "fn": "CeloProxyPriceProvider.getAssetPrice",
      "offset": [
        1877,
        1974
      ],
      "op": "DUP2",
      "path": "1"
    },
    "749": {
      "fn": "CeloProxyPriceProvider.getAssetPrice",
      "offset": [
        1877,
        1974
      ],
      "op": "SUB",
      "path": "1"
    },
    "750": {
      "fn": "CeloProxyPriceProvider.getAssetPrice",
      "offset": [
        1877,
        1974
      ],
      "op": "DUP3",
      "path": "1"
    },
    "751": {
      "fn": "CeloProxyPriceProvider.getAssetPrice",
      "offset": [
        1877,
        1974
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "752": {
      "fn": "CeloProxyPriceProvider.getAssetPrice",
      "offset": [
        1877,
        1974
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x27"
    },
    "754": {
      "fn": "CeloProxyPriceProvider.getAssetPrice",
      "offset": [
        1877,
        1974
      ],
      "op": "DUP2",
      "path": "1"
    },
    "755": {
      "fn": "CeloProxyPriceProvider.getAssetPrice",
      "offset": [
        1877,
        1974
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "756": {
      "fn": "CeloProxyPriceProvider.getAssetPrice",
      "offset": [
        1877,
        1974
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "758": {
      "fn": "CeloProxyPriceProvider.getAssetPrice",
      "offset": [
        1877,
        1974
      ],
      "op": "ADD",
      "path": "1"
    },
    "759": {
      "fn": "CeloProxyPriceProvider.getAssetPrice",
      "offset": [
        1877,
        1974
      ],
      "op": "DUP1",
      "path": "1"
    },
    "760": {
      "fn": "CeloProxyPriceProvider.getAssetPrice",
      "offset": [
        1877,
        1974
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x57D"
    },
    "763": {
      "fn": "CeloProxyPriceProvider.getAssetPrice",
      "offset": [
        1877,
        1974
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x27"
    },
    "765": {
      "fn": "CeloProxyPriceProvider.getAssetPrice",
      "offset": [
        1877,
        1974
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "766": {
      "fn": "CeloProxyPriceProvider.getAssetPrice",
      "offset": [
        1877,
        1974
      ],
      "op": "CODECOPY",
      "path": "1"
    },
    "767": {
      "fn": "CeloProxyPriceProvider.getAssetPrice",
      "offset": [
        1877,
        1974
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "769": {
      "fn": "CeloProxyPriceProvider.getAssetPrice",
      "offset": [
        1877,
        1974
      ],
      "op": "ADD",
      "path": "1"
    },
    "770": {
      "fn": "CeloProxyPriceProvider.getAssetPrice",
      "offset": [
        1877,
        1974
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "771": {
      "fn": "CeloProxyPriceProvider.getAssetPrice",
      "offset": [
        1877,
        1974
      ],
      "op": "POP",
      "path": "1"
    },
    "772": {
      "fn": "CeloProxyPriceProvider.getAssetPrice",
      "offset": [
        1877,
        1974
      ],
      "op": "POP",
      "path": "1"
    },
    "773": {
      "fn": "CeloProxyPriceProvider.getAssetPrice",
      "offset": [
        1877,
        1974
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "775": {
      "fn": "CeloProxyPriceProvider.getAssetPrice",
      "offset": [
        1877,
        1974
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "776": {
      "fn": "CeloProxyPriceProvider.getAssetPrice",
      "offset": [
        1877,
        1974
      ],
      "op": "DUP1",
      "path": "1"
    },
    "777": {
      "fn": "CeloProxyPriceProvider.getAssetPrice",
      "offset": [
        1877,
        1974
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "778": {
      "fn": "CeloProxyPriceProvider.getAssetPrice",
      "offset": [
        1877,
        1974
      ],
      "op": "SUB",
      "path": "1"
    },
    "779": {
      "fn": "CeloProxyPriceProvider.getAssetPrice",
      "offset": [
        1877,
        1974
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "780": {
      "fn": "CeloProxyPriceProvider.getAssetPrice",
      "offset": [
        1877,
        1974
      ],
      "op": "REVERT",
      "path": "1"
    },
    "781": {
      "fn": "CeloProxyPriceProvider.getAssetPrice",
      "offset": [
        1877,
        1974
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "782": {
      "fn": "CeloProxyPriceProvider.getAssetPrice",
      "offset": [
        1991,
        2024
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 6,
      "value": "0x335"
    },
    "785": {
      "fn": "CeloProxyPriceProvider.getAssetPrice",
      "offset": [
        2017,
        2023
      ],
      "op": "DUP5",
      "path": "1"
    },
    "786": {
      "fn": "CeloProxyPriceProvider.getAssetPrice",
      "offset": [
        1991,
        2012
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x329"
    },
    "789": {
      "fn": "CeloProxyPriceProvider.getAssetPrice",
      "offset": [
        1991,
        1999
      ],
      "op": "DUP6",
      "path": "1"
    },
    "790": {
      "fn": "CeloProxyPriceProvider.getAssetPrice",
      "offset": [
        2004,
        2011
      ],
      "op": "PUSH8",
      "path": "1",
      "value": "0xDE0B6B3A7640000"
    },
    "799": {
      "fn": "CeloProxyPriceProvider.getAssetPrice",
      "offset": [
        1991,
        2012
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xFFFFFFFF"
    },
    "804": {
      "fn": "CeloProxyPriceProvider.getAssetPrice",
      "offset": [
        1991,
        2003
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x4B2"
    },
    "807": {
      "fn": "CeloProxyPriceProvider.getAssetPrice",
      "offset": [
        1991,
        2012
      ],
      "op": "AND",
      "path": "1"
    },
    "808": {
      "fn": "CeloProxyPriceProvider.getAssetPrice",
      "jump": "i",
      "offset": [
        1991,
        2012
      ],
      "op": "JUMP",
      "path": "1"
    },
    "809": {
      "fn": "CeloProxyPriceProvider.getAssetPrice",
      "offset": [
        1991,
        2012
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "810": {
      "fn": "CeloProxyPriceProvider.getAssetPrice",
      "offset": [
        1991,
        2016
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "811": {
      "fn": "CeloProxyPriceProvider.getAssetPrice",
      "offset": [
        1991,
        2024
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xFFFFFFFF"
    },
    "816": {
      "fn": "CeloProxyPriceProvider.getAssetPrice",
      "offset": [
        1991,
        2016
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x512"
    },
    "819": {
      "fn": "CeloProxyPriceProvider.getAssetPrice",
      "offset": [
        1991,
        2024
      ],
      "op": "AND",
      "path": "1"
    },
    "820": {
      "fn": "CeloProxyPriceProvider.getAssetPrice",
      "jump": "i",
      "offset": [
        1991,
        2024
      ],
      "op": "JUMP",
      "path": "1"
    },
    "821": {
      "fn": "CeloProxyPriceProvider.getAssetPrice",
      "offset": [
        1991,
        2024
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "822": {
      "fn": "CeloProxyPriceProvider.getAssetPrice",
      "offset": [
        1984,
        2024
      ],
      "op": "SWAP7",
      "path": "1"
    },
    "823": {
      "fn": "CeloProxyPriceProvider.getAssetPrice",
      "offset": [
        1446,
        2031
      ],
      "op": "SWAP6",
      "path": "1"
    },
    "824": {
      "op": "POP"
    },
    "825": {
      "op": "POP"
    },
    "826": {
      "op": "POP"
    },
    "827": {
      "op": "POP"
    },
    "828": {
      "op": "POP"
    },
    "829": {
      "op": "POP"
    },
    "830": {
      "fn": "CeloProxyPriceProvider.getAssetPrice",
      "jump": "o",
      "offset": [
        1446,
        2031
      ],
      "op": "JUMP",
      "path": "1"
    },
    "831": {
      "fn": "UsingRegistry.getGoldToken",
      "offset": [
        742,
        873
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "832": {
      "offset": [
        512,
        541
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "834": {
      "fn": "UsingRegistry.getGoldToken",
      "offset": [
        512,
        541
      ],
      "op": "DUP1",
      "path": "1"
    },
    "835": {
      "fn": "UsingRegistry.getGoldToken",
      "offset": [
        512,
        541
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "836": {
      "op": "PUSH9",
      "value": "0x23B7B6322A37B5B2B7"
    },
    "846": {
      "op": "PUSH1",
      "value": "0xB9"
    },
    "848": {
      "op": "SHL"
    },
    "849": {
      "offset": [
        512,
        541
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "851": {
      "fn": "UsingRegistry.getGoldToken",
      "offset": [
        512,
        541
      ],
      "op": "DUP1",
      "path": "1"
    },
    "852": {
      "fn": "UsingRegistry.getGoldToken",
      "offset": [
        512,
        541
      ],
      "op": "DUP4",
      "path": "1"
    },
    "853": {
      "fn": "UsingRegistry.getGoldToken",
      "offset": [
        512,
        541
      ],
      "op": "ADD",
      "path": "1"
    },
    "854": {
      "fn": "UsingRegistry.getGoldToken",
      "offset": [
        512,
        541
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "855": {
      "fn": "UsingRegistry.getGoldToken",
      "offset": [
        512,
        541
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "856": {
      "fn": "UsingRegistry.getGoldToken",
      "offset": [
        512,
        541
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "857": {
      "fn": "UsingRegistry.getGoldToken",
      "offset": [
        512,
        541
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "858": {
      "fn": "UsingRegistry.getGoldToken",
      "offset": [
        512,
        541
      ],
      "op": "DUP3",
      "path": "1"
    },
    "859": {
      "fn": "UsingRegistry.getGoldToken",
      "offset": [
        512,
        541
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "860": {
      "op": "DUP1"
    },
    "861": {
      "op": "DUP4"
    },
    "862": {
      "op": "SUB"
    },
    "863": {
      "offset": [
        512,
        541
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x9"
    },
    "865": {
      "op": "ADD"
    },
    "866": {
      "op": "DUP2"
    },
    "867": {
      "op": "MSTORE"
    },
    "868": {
      "offset": [
        512,
        541
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x29"
    },
    "870": {
      "fn": "UsingRegistry.getGoldToken",
      "offset": [
        512,
        541
      ],
      "op": "DUP4",
      "path": "1"
    },
    "871": {
      "fn": "UsingRegistry.getGoldToken",
      "offset": [
        512,
        541
      ],
      "op": "ADD",
      "path": "1"
    },
    "872": {
      "fn": "UsingRegistry.getGoldToken",
      "offset": [
        512,
        541
      ],
      "op": "DUP1",
      "path": "1"
    },
    "873": {
      "fn": "UsingRegistry.getGoldToken",
      "offset": [
        512,
        541
      ],
      "op": "DUP6",
      "path": "1"
    },
    "874": {
      "fn": "UsingRegistry.getGoldToken",
      "offset": [
        512,
        541
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "875": {
      "offset": [
        502,
        542
      ],
      "op": "DUP2",
      "path": "1"
    },
    "876": {
      "fn": "UsingRegistry.getGoldToken",
      "offset": [
        502,
        542
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "877": {
      "fn": "UsingRegistry.getGoldToken",
      "offset": [
        502,
        542
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "878": {
      "fn": "UsingRegistry.getGoldToken",
      "offset": [
        502,
        542
      ],
      "op": "DUP4",
      "path": "1"
    },
    "879": {
      "fn": "UsingRegistry.getGoldToken",
      "offset": [
        502,
        542
      ],
      "op": "ADD",
      "path": "1"
    },
    "880": {
      "fn": "UsingRegistry.getGoldToken",
      "offset": [
        502,
        542
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "881": {
      "fn": "UsingRegistry.getGoldToken",
      "offset": [
        502,
        542
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "882": {
      "fn": "UsingRegistry.getGoldToken",
      "offset": [
        502,
        542
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "883": {
      "fn": "UsingRegistry.getGoldToken",
      "offset": [
        502,
        542
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "884": {
      "op": "PUSH4",
      "value": "0xDCF0AAED"
    },
    "889": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "891": {
      "op": "SHL"
    },
    "892": {
      "fn": "UsingRegistry.getGoldToken",
      "offset": [
        815,
        866
      ],
      "op": "SWAP1",
      "path": "1",
      "statement": 7
    },
    "893": {
      "fn": "UsingRegistry.getGoldToken",
      "offset": [
        815,
        866
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "894": {
      "fn": "UsingRegistry.getGoldToken",
      "offset": [
        815,
        866
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "895": {
      "fn": "UsingRegistry.getGoldToken",
      "offset": [
        815,
        866
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x2D"
    },
    "897": {
      "fn": "UsingRegistry.getGoldToken",
      "offset": [
        815,
        866
      ],
      "op": "DUP4",
      "path": "1"
    },
    "898": {
      "fn": "UsingRegistry.getGoldToken",
      "offset": [
        815,
        866
      ],
      "op": "ADD",
      "path": "1"
    },
    "899": {
      "fn": "UsingRegistry.getGoldToken",
      "offset": [
        815,
        866
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "900": {
      "fn": "UsingRegistry.getGoldToken",
      "offset": [
        815,
        866
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "901": {
      "fn": "UsingRegistry.getGoldToken",
      "offset": [
        815,
        866
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "902": {
      "fn": "UsingRegistry.getGoldToken",
      "offset": [
        789,
        796
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "904": {
      "fn": "UsingRegistry.getGoldToken",
      "offset": [
        789,
        796
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "905": {
      "offset": [
        692,
        734
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xCE10"
    },
    "908": {
      "fn": "UsingRegistry.getGoldToken",
      "offset": [
        692,
        734
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "909": {
      "fn": "UsingRegistry.getGoldToken",
      "offset": [
        815,
        842
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xDCF0AAED"
    },
    "914": {
      "fn": "UsingRegistry.getGoldToken",
      "offset": [
        815,
        842
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "915": {
      "fn": "UsingRegistry.getGoldToken",
      "offset": [
        815,
        866
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4D"
    },
    "917": {
      "fn": "UsingRegistry.getGoldToken",
      "offset": [
        815,
        866
      ],
      "op": "DUP1",
      "path": "1"
    },
    "918": {
      "fn": "UsingRegistry.getGoldToken",
      "offset": [
        815,
        866
      ],
      "op": "DUP4",
      "path": "1"
    },
    "919": {
      "fn": "UsingRegistry.getGoldToken",
      "offset": [
        815,
        866
      ],
      "op": "ADD",
      "path": "1"
    },
    "920": {
      "fn": "UsingRegistry.getGoldToken",
      "offset": [
        815,
        866
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "921": {
      "offset": [
        512,
        541
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "922": {
      "fn": "UsingRegistry.getGoldToken",
      "offset": [
        815,
        866
      ],
      "op": "DUP3",
      "path": "1"
    },
    "923": {
      "fn": "UsingRegistry.getGoldToken",
      "offset": [
        815,
        866
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "924": {
      "fn": "UsingRegistry.getGoldToken",
      "offset": [
        815,
        866
      ],
      "op": "SUB",
      "path": "1"
    },
    "925": {
      "fn": "UsingRegistry.getGoldToken",
      "offset": [
        815,
        866
      ],
      "op": "ADD",
      "path": "1"
    },
    "926": {
      "fn": "UsingRegistry.getGoldToken",
      "offset": [
        815,
        866
      ],
      "op": "DUP2",
      "path": "1"
    },
    "927": {
      "offset": [
        692,
        734
      ],
      "op": "DUP7",
      "path": "1"
    },
    "928": {
      "fn": "UsingRegistry.getGoldToken",
      "offset": [
        815,
        866
      ],
      "op": "DUP1",
      "path": "1"
    },
    "929": {
      "fn": "UsingRegistry.getGoldToken",
      "offset": [
        815,
        866
      ],
      "op": "EXTCODESIZE",
      "path": "1"
    },
    "930": {
      "fn": "UsingRegistry.getGoldToken",
      "offset": [
        815,
        866
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "931": {
      "op": "DUP1"
    },
    "932": {
      "op": "ISZERO"
    },
    "933": {
      "op": "PUSH2",
      "value": "0x3AD"
    },
    "936": {
      "op": "JUMPI"
    },
    "937": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "939": {
      "op": "DUP1"
    },
    "940": {
      "op": "REVERT"
    },
    "941": {
      "op": "JUMPDEST"
    },
    "942": {
      "fn": "UsingRegistry.getGoldToken",
      "offset": [
        815,
        866
      ],
      "op": "POP",
      "path": "1"
    },
    "943": {
      "fn": "UsingRegistry.getGoldToken",
      "offset": [
        815,
        866
      ],
      "op": "GAS",
      "path": "1"
    },
    "944": {
      "fn": "UsingRegistry.getGoldToken",
      "offset": [
        815,
        866
      ],
      "op": "STATICCALL",
      "path": "1"
    },
    "945": {
      "fn": "UsingRegistry.getGoldToken",
      "offset": [
        815,
        866
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "946": {
      "op": "DUP1"
    },
    "947": {
      "op": "ISZERO"
    },
    "948": {
      "op": "PUSH2",
      "value": "0x3C1"
    },
    "951": {
      "op": "JUMPI"
    },
    "952": {
      "op": "RETURNDATASIZE"
    },
    "953": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "955": {
      "op": "DUP1"
    },
    "956": {
      "op": "RETURNDATACOPY"
    },
    "957": {
      "op": "RETURNDATASIZE"
    },
    "958": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "960": {
      "op": "REVERT"
    },
    "961": {
      "op": "JUMPDEST"
    },
    "962": {
      "fn": "UsingRegistry.getGoldToken",
      "offset": [
        815,
        866
      ],
      "op": "POP",
      "path": "1"
    },
    "963": {
      "fn": "UsingRegistry.getGoldToken",
      "offset": [
        815,
        866
      ],
      "op": "POP",
      "path": "1"
    },
    "964": {
      "fn": "UsingRegistry.getGoldToken",
      "offset": [
        815,
        866
      ],
      "op": "POP",
      "path": "1"
    },
    "965": {
      "fn": "UsingRegistry.getGoldToken",
      "offset": [
        815,
        866
      ],
      "op": "POP",
      "path": "1"
    },
    "966": {
      "fn": "UsingRegistry.getGoldToken",
      "offset": [
        815,
        866
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "968": {
      "fn": "UsingRegistry.getGoldToken",
      "offset": [
        815,
        866
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "969": {
      "fn": "UsingRegistry.getGoldToken",
      "offset": [
        815,
        866
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "970": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "972": {
      "op": "DUP2"
    },
    "973": {
      "op": "LT"
    },
    "974": {
      "op": "ISZERO"
    },
    "975": {
      "op": "PUSH2",
      "value": "0x3D7"
    },
    "978": {
      "op": "JUMPI"
    },
    "979": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "981": {
      "op": "DUP1"
    },
    "982": {
      "op": "REVERT"
    },
    "983": {
      "op": "JUMPDEST"
    },
    "984": {
      "op": "POP"
    },
    "985": {
      "fn": "UsingRegistry.getGoldToken",
      "offset": [
        815,
        866
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "986": {
      "fn": "UsingRegistry.getGoldToken",
      "offset": [
        815,
        866
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "987": {
      "op": "POP"
    },
    "988": {
      "fn": "UsingRegistry.getGoldToken",
      "offset": [
        742,
        873
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "989": {
      "fn": "UsingRegistry.getGoldToken",
      "jump": "o",
      "offset": [
        742,
        873
      ],
      "op": "JUMP",
      "path": "1"
    },
    "990": {
      "fn": "UsingRegistry.getSortedOracles",
      "offset": [
        879,
        1041
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "991": {
      "offset": [
        604,
        637
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "993": {
      "fn": "UsingRegistry.getSortedOracles",
      "offset": [
        604,
        637
      ],
      "op": "DUP1",
      "path": "1"
    },
    "994": {
      "fn": "UsingRegistry.getSortedOracles",
      "offset": [
        604,
        637
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "995": {
      "op": "PUSH13",
      "value": "0x536F727465644F7261636C6573"
    },
    "1009": {
      "op": "PUSH1",
      "value": "0x98"
    },
    "1011": {
      "op": "SHL"
    },
    "1012": {
      "offset": [
        604,
        637
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1014": {
      "fn": "UsingRegistry.getSortedOracles",
      "offset": [
        604,
        637
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1015": {
      "fn": "UsingRegistry.getSortedOracles",
      "offset": [
        604,
        637
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1016": {
      "fn": "UsingRegistry.getSortedOracles",
      "offset": [
        604,
        637
      ],
      "op": "ADD",
      "path": "1"
    },
    "1017": {
      "fn": "UsingRegistry.getSortedOracles",
      "offset": [
        604,
        637
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1018": {
      "fn": "UsingRegistry.getSortedOracles",
      "offset": [
        604,
        637
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1019": {
      "fn": "UsingRegistry.getSortedOracles",
      "offset": [
        604,
        637
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1020": {
      "fn": "UsingRegistry.getSortedOracles",
      "offset": [
        604,
        637
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1021": {
      "fn": "UsingRegistry.getSortedOracles",
      "offset": [
        604,
        637
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1022": {
      "fn": "UsingRegistry.getSortedOracles",
      "offset": [
        604,
        637
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1023": {
      "op": "DUP1"
    },
    "1024": {
      "op": "DUP4"
    },
    "1025": {
      "op": "SUB"
    },
    "1026": {
      "offset": [
        604,
        637
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xD"
    },
    "1028": {
      "op": "ADD"
    },
    "1029": {
      "op": "DUP2"
    },
    "1030": {
      "op": "MSTORE"
    },
    "1031": {
      "offset": [
        604,
        637
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x2D"
    },
    "1033": {
      "fn": "UsingRegistry.getSortedOracles",
      "offset": [
        604,
        637
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1034": {
      "fn": "UsingRegistry.getSortedOracles",
      "offset": [
        604,
        637
      ],
      "op": "ADD",
      "path": "1"
    },
    "1035": {
      "fn": "UsingRegistry.getSortedOracles",
      "offset": [
        604,
        637
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1036": {
      "fn": "UsingRegistry.getSortedOracles",
      "offset": [
        604,
        637
      ],
      "op": "DUP6",
      "path": "1"
    },
    "1037": {
      "fn": "UsingRegistry.getSortedOracles",
      "offset": [
        604,
        637
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1038": {
      "offset": [
        594,
        638
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1039": {
      "fn": "UsingRegistry.getSortedOracles",
      "offset": [
        594,
        638
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1040": {
      "fn": "UsingRegistry.getSortedOracles",
      "offset": [
        594,
        638
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1041": {
      "fn": "UsingRegistry.getSortedOracles",
      "offset": [
        594,
        638
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1042": {
      "fn": "UsingRegistry.getSortedOracles",
      "offset": [
        594,
        638
      ],
      "op": "ADD",
      "path": "1"
    },
    "1043": {
      "fn": "UsingRegistry.getSortedOracles",
      "offset": [
        594,
        638
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1044": {
      "fn": "UsingRegistry.getSortedOracles",
      "offset": [
        594,
        638
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1045": {
      "fn": "UsingRegistry.getSortedOracles",
      "offset": [
        594,
        638
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1046": {
      "fn": "UsingRegistry.getSortedOracles",
      "offset": [
        594,
        638
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "1047": {
      "op": "PUSH4",
      "value": "0xDCF0AAED"
    },
    "1052": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1054": {
      "op": "SHL"
    },
    "1055": {
      "fn": "UsingRegistry.getSortedOracles",
      "offset": [
        978,
        1033
      ],
      "op": "SWAP1",
      "path": "1",
      "statement": 8
    },
    "1056": {
      "fn": "UsingRegistry.getSortedOracles",
      "offset": [
        978,
        1033
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1057": {
      "fn": "UsingRegistry.getSortedOracles",
      "offset": [
        978,
        1033
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1058": {
      "fn": "UsingRegistry.getSortedOracles",
      "offset": [
        978,
        1033
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x31"
    },
    "1060": {
      "fn": "UsingRegistry.getSortedOracles",
      "offset": [
        978,
        1033
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1061": {
      "fn": "UsingRegistry.getSortedOracles",
      "offset": [
        978,
        1033
      ],
      "op": "ADD",
      "path": "1"
    },
    "1062": {
      "fn": "UsingRegistry.getSortedOracles",
      "offset": [
        978,
        1033
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1063": {
      "fn": "UsingRegistry.getSortedOracles",
      "offset": [
        978,
        1033
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1064": {
      "fn": "UsingRegistry.getSortedOracles",
      "offset": [
        978,
        1033
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1065": {
      "fn": "UsingRegistry.getSortedOracles",
      "offset": [
        930,
        944
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1067": {
      "fn": "UsingRegistry.getSortedOracles",
      "offset": [
        930,
        944
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "1068": {
      "offset": [
        692,
        734
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xCE10"
    },
    "1071": {
      "fn": "UsingRegistry.getSortedOracles",
      "offset": [
        692,
        734
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "1072": {
      "fn": "UsingRegistry.getSortedOracles",
      "offset": [
        978,
        1005
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xDCF0AAED"
    },
    "1077": {
      "fn": "UsingRegistry.getSortedOracles",
      "offset": [
        978,
        1005
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "1078": {
      "fn": "UsingRegistry.getSortedOracles",
      "offset": [
        978,
        1033
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x51"
    },
    "1080": {
      "fn": "UsingRegistry.getSortedOracles",
      "offset": [
        978,
        1033
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1081": {
      "fn": "UsingRegistry.getSortedOracles",
      "offset": [
        978,
        1033
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1082": {
      "fn": "UsingRegistry.getSortedOracles",
      "offset": [
        978,
        1033
      ],
      "op": "ADD",
      "path": "1"
    },
    "1083": {
      "fn": "UsingRegistry.getSortedOracles",
      "offset": [
        978,
        1033
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "1084": {
      "offset": [
        604,
        637
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "1085": {
      "fn": "UsingRegistry.getSortedOracles",
      "offset": [
        978,
        1033
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1086": {
      "fn": "UsingRegistry.getSortedOracles",
      "offset": [
        978,
        1033
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1087": {
      "fn": "UsingRegistry.getSortedOracles",
      "offset": [
        978,
        1033
      ],
      "op": "SUB",
      "path": "1"
    },
    "1088": {
      "fn": "UsingRegistry.getSortedOracles",
      "offset": [
        978,
        1033
      ],
      "op": "ADD",
      "path": "1"
    },
    "1089": {
      "fn": "UsingRegistry.getSortedOracles",
      "offset": [
        978,
        1033
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1090": {
      "offset": [
        692,
        734
      ],
      "op": "DUP7",
      "path": "1"
    },
    "1091": {
      "fn": "UsingRegistry.getSortedOracles",
      "offset": [
        978,
        1033
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1092": {
      "fn": "UsingRegistry.getSortedOracles",
      "offset": [
        978,
        1033
      ],
      "op": "EXTCODESIZE",
      "path": "1"
    },
    "1093": {
      "fn": "UsingRegistry.getSortedOracles",
      "offset": [
        978,
        1033
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1094": {
      "op": "DUP1"
    },
    "1095": {
      "op": "ISZERO"
    },
    "1096": {
      "op": "PUSH2",
      "value": "0x3AD"
    },
    "1099": {
      "op": "JUMPI"
    },
    "1100": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1102": {
      "op": "DUP1"
    },
    "1103": {
      "op": "REVERT"
    },
    "1104": {
      "fn": "SafeMath.sub",
      "offset": [
        1274,
        1453
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1105": {
      "fn": "SafeMath.sub",
      "offset": [
        1332,
        1339
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1107": {
      "fn": "SafeMath.sub",
      "offset": [
        1364,
        1365
      ],
      "op": "DUP3",
      "path": "0",
      "statement": 9
    },
    "1108": {
      "fn": "SafeMath.sub",
      "offset": [
        1359,
        1360
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1109": {
      "fn": "SafeMath.sub",
      "offset": [
        1359,
        1365
      ],
      "op": "GT",
      "path": "0"
    },
    "1110": {
      "branch": 17,
      "fn": "SafeMath.sub",
      "offset": [
        1359,
        1365
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1111": {
      "fn": "SafeMath.sub",
      "offset": [
        1351,
        1400
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4A7"
    },
    "1114": {
      "branch": 17,
      "fn": "SafeMath.sub",
      "offset": [
        1351,
        1400
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1115": {
      "fn": "SafeMath.sub",
      "offset": [
        1351,
        1400
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1117": {
      "fn": "SafeMath.sub",
      "offset": [
        1351,
        1400
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1118": {
      "fn": "SafeMath.sub",
      "offset": [
        1351,
        1400
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1119": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1123": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1125": {
      "op": "SHL"
    },
    "1126": {
      "fn": "SafeMath.sub",
      "offset": [
        1351,
        1400
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1127": {
      "fn": "SafeMath.sub",
      "offset": [
        1351,
        1400
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1128": {
      "fn": "SafeMath.sub",
      "offset": [
        1351,
        1400
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1130": {
      "fn": "SafeMath.sub",
      "offset": [
        1351,
        1400
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1132": {
      "fn": "SafeMath.sub",
      "offset": [
        1351,
        1400
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1133": {
      "fn": "SafeMath.sub",
      "offset": [
        1351,
        1400
      ],
      "op": "ADD",
      "path": "0"
    },
    "1134": {
      "fn": "SafeMath.sub",
      "offset": [
        1351,
        1400
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1135": {
      "fn": "SafeMath.sub",
      "offset": [
        1351,
        1400
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1E"
    },
    "1137": {
      "fn": "SafeMath.sub",
      "offset": [
        1351,
        1400
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x24"
    },
    "1139": {
      "fn": "SafeMath.sub",
      "offset": [
        1351,
        1400
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1140": {
      "fn": "SafeMath.sub",
      "offset": [
        1351,
        1400
      ],
      "op": "ADD",
      "path": "0"
    },
    "1141": {
      "fn": "SafeMath.sub",
      "offset": [
        1351,
        1400
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1142": {
      "fn": "SafeMath.sub",
      "offset": [
        1351,
        1400
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000"
    },
    "1175": {
      "fn": "SafeMath.sub",
      "offset": [
        1351,
        1400
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x44"
    },
    "1177": {
      "fn": "SafeMath.sub",
      "offset": [
        1351,
        1400
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1178": {
      "fn": "SafeMath.sub",
      "offset": [
        1351,
        1400
      ],
      "op": "ADD",
      "path": "0"
    },
    "1179": {
      "fn": "SafeMath.sub",
      "offset": [
        1351,
        1400
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1180": {
      "fn": "SafeMath.sub",
      "offset": [
        1351,
        1400
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1181": {
      "fn": "SafeMath.sub",
      "offset": [
        1351,
        1400
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1182": {
      "fn": "SafeMath.sub",
      "offset": [
        1351,
        1400
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1183": {
      "fn": "SafeMath.sub",
      "offset": [
        1351,
        1400
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1184": {
      "fn": "SafeMath.sub",
      "offset": [
        1351,
        1400
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1185": {
      "fn": "SafeMath.sub",
      "offset": [
        1351,
        1400
      ],
      "op": "SUB",
      "path": "0"
    },
    "1186": {
      "fn": "SafeMath.sub",
      "offset": [
        1351,
        1400
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x64"
    },
    "1188": {
      "fn": "SafeMath.sub",
      "offset": [
        1351,
        1400
      ],
      "op": "ADD",
      "path": "0"
    },
    "1189": {
      "fn": "SafeMath.sub",
      "offset": [
        1351,
        1400
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1190": {
      "fn": "SafeMath.sub",
      "offset": [
        1351,
        1400
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1191": {
      "fn": "SafeMath.sub",
      "offset": [
        1351,
        1400
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1192": {
      "op": "POP"
    },
    "1193": {
      "fn": "SafeMath.sub",
      "offset": [
        1422,
        1427
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1194": {
      "fn": "SafeMath.sub",
      "offset": [
        1422,
        1427
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1195": {
      "fn": "SafeMath.sub",
      "offset": [
        1422,
        1427
      ],
      "op": "SUB",
      "path": "0"
    },
    "1196": {
      "fn": "SafeMath.sub",
      "offset": [
        1274,
        1453
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1197": {
      "fn": "SafeMath.sub",
      "offset": [
        1274,
        1453
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1198": {
      "fn": "SafeMath.sub",
      "offset": [
        1274,
        1453
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1199": {
      "fn": "SafeMath.sub",
      "offset": [
        1274,
        1453
      ],
      "op": "POP",
      "path": "0"
    },
    "1200": {
      "fn": "SafeMath.sub",
      "offset": [
        1274,
        1453
      ],
      "op": "POP",
      "path": "0"
    },
    "1201": {
      "fn": "SafeMath.sub",
      "jump": "o",
      "offset": [
        1274,
        1453
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1202": {
      "fn": "SafeMath.mul",
      "offset": [
        1693,
        2151
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1203": {
      "fn": "SafeMath.mul",
      "offset": [
        1751,
        1758
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1205": {
      "branch": 18,
      "fn": "SafeMath.mul",
      "offset": [
        1991,
        1997
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1206": {
      "fn": "SafeMath.mul",
      "offset": [
        1987,
        2032
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4C1"
    },
    "1209": {
      "branch": 18,
      "fn": "SafeMath.mul",
      "offset": [
        1987,
        2032
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1210": {
      "op": "POP"
    },
    "1211": {
      "fn": "SafeMath.mul",
      "offset": [
        2020,
        2021
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 10,
      "value": "0x0"
    },
    "1213": {
      "fn": "SafeMath.mul",
      "offset": [
        2013,
        2021
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4AC"
    },
    "1216": {
      "fn": "SafeMath.mul",
      "offset": [
        2013,
        2021
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1217": {
      "fn": "SafeMath.mul",
      "offset": [
        1987,
        2032
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1218": {
      "fn": "SafeMath.mul",
      "offset": [
        2054,
        2059
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1219": {
      "fn": "SafeMath.mul",
      "offset": [
        2054,
        2059
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1220": {
      "fn": "SafeMath.mul",
      "offset": [
        2054,
        2059
      ],
      "op": "MUL",
      "path": "0"
    },
    "1221": {
      "fn": "SafeMath.mul",
      "offset": [
        2058,
        2059
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1222": {
      "fn": "SafeMath.mul",
      "offset": [
        2054,
        2055
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1223": {
      "fn": "SafeMath.mul",
      "offset": [
        2054,
        2059
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1224": {
      "fn": "SafeMath.mul",
      "offset": [
        2054,
        2055
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1225": {
      "fn": "SafeMath.mul",
      "offset": [
        2077,
        2082
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 11,
      "value": "0x4CE"
    },
    "1228": {
      "fn": "SafeMath.mul",
      "offset": [
        2077,
        2082
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1229": {
      "dev": "Division by zero",
      "fn": "SafeMath.mul",
      "offset": [
        2077,
        2082
      ],
      "op": "INVALID",
      "path": "0"
    },
    "1230": {
      "fn": "SafeMath.mul",
      "offset": [
        2077,
        2082
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1231": {
      "fn": "SafeMath.mul",
      "offset": [
        2077,
        2082
      ],
      "op": "DIV",
      "path": "0"
    },
    "1232": {
      "branch": 19,
      "fn": "SafeMath.mul",
      "offset": [
        2077,
        2087
      ],
      "op": "EQ",
      "path": "0"
    },
    "1233": {
      "fn": "SafeMath.mul",
      "offset": [
        2069,
        2125
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x50B"
    },
    "1236": {
      "branch": 19,
      "fn": "SafeMath.mul",
      "offset": [
        2069,
        2125
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1237": {
      "fn": "SafeMath.mul",
      "offset": [
        2069,
        2125
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1239": {
      "fn": "SafeMath.mul",
      "offset": [
        2069,
        2125
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1240": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1244": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1246": {
      "op": "SHL"
    },
    "1247": {
      "fn": "SafeMath.mul",
      "offset": [
        2069,
        2125
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1248": {
      "fn": "SafeMath.mul",
      "offset": [
        2069,
        2125
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1249": {
      "fn": "SafeMath.mul",
      "offset": [
        2069,
        2125
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1251": {
      "fn": "SafeMath.mul",
      "offset": [
        2069,
        2125
      ],
      "op": "ADD",
      "path": "0"
    },
    "1252": {
      "fn": "SafeMath.mul",
      "offset": [
        2069,
        2125
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1253": {
      "fn": "SafeMath.mul",
      "offset": [
        2069,
        2125
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1254": {
      "fn": "SafeMath.mul",
      "offset": [
        2069,
        2125
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1256": {
      "fn": "SafeMath.mul",
      "offset": [
        2069,
        2125
      ],
      "op": "ADD",
      "path": "0"
    },
    "1257": {
      "fn": "SafeMath.mul",
      "offset": [
        2069,
        2125
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1258": {
      "fn": "SafeMath.mul",
      "offset": [
        2069,
        2125
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1259": {
      "fn": "SafeMath.mul",
      "offset": [
        2069,
        2125
      ],
      "op": "SUB",
      "path": "0"
    },
    "1260": {
      "fn": "SafeMath.mul",
      "offset": [
        2069,
        2125
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1261": {
      "fn": "SafeMath.mul",
      "offset": [
        2069,
        2125
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1262": {
      "fn": "SafeMath.mul",
      "offset": [
        2069,
        2125
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x21"
    },
    "1264": {
      "fn": "SafeMath.mul",
      "offset": [
        2069,
        2125
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1265": {
      "fn": "SafeMath.mul",
      "offset": [
        2069,
        2125
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1266": {
      "fn": "SafeMath.mul",
      "offset": [
        2069,
        2125
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1268": {
      "fn": "SafeMath.mul",
      "offset": [
        2069,
        2125
      ],
      "op": "ADD",
      "path": "0"
    },
    "1269": {
      "fn": "SafeMath.mul",
      "offset": [
        2069,
        2125
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1270": {
      "fn": "SafeMath.mul",
      "offset": [
        2069,
        2125
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5A4"
    },
    "1273": {
      "fn": "SafeMath.mul",
      "offset": [
        2069,
        2125
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x21"
    },
    "1275": {
      "fn": "SafeMath.mul",
      "offset": [
        2069,
        2125
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1276": {
      "fn": "SafeMath.mul",
      "offset": [
        2069,
        2125
      ],
      "op": "CODECOPY",
      "path": "0"
    },
    "1277": {
      "fn": "SafeMath.mul",
      "offset": [
        2069,
        2125
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1279": {
      "fn": "SafeMath.mul",
      "offset": [
        2069,
        2125
      ],
      "op": "ADD",
      "path": "0"
    },
    "1280": {
      "fn": "SafeMath.mul",
      "offset": [
        2069,
        2125
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1281": {
      "fn": "SafeMath.mul",
      "offset": [
        2069,
        2125
      ],
      "op": "POP",
      "path": "0"
    },
    "1282": {
      "fn": "SafeMath.mul",
      "offset": [
        2069,
        2125
      ],
      "op": "POP",
      "path": "0"
    },
    "1283": {
      "fn": "SafeMath.mul",
      "offset": [
        2069,
        2125
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1285": {
      "fn": "SafeMath.mul",
      "offset": [
        2069,
        2125
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1286": {
      "fn": "SafeMath.mul",
      "offset": [
        2069,
        2125
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1287": {
      "fn": "SafeMath.mul",
      "offset": [
        2069,
        2125
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1288": {
      "fn": "SafeMath.mul",
      "offset": [
        2069,
        2125
      ],
      "op": "SUB",
      "path": "0"
    },
    "1289": {
      "fn": "SafeMath.mul",
      "offset": [
        2069,
        2125
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1290": {
      "fn": "SafeMath.mul",
      "offset": [
        2069,
        2125
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1291": {
      "fn": "SafeMath.mul",
      "offset": [
        2069,
        2125
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1292": {
      "fn": "SafeMath.mul",
      "offset": [
        2143,
        2144
      ],
      "op": "SWAP4",
      "path": "0",
      "statement": 12
    },
    "1293": {
      "fn": "SafeMath.mul",
      "offset": [
        1693,
        2151
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1294": {
      "op": "POP"
    },
    "1295": {
      "op": "POP"
    },
    "1296": {
      "op": "POP"
    },
    "1297": {
      "fn": "SafeMath.mul",
      "jump": "o",
      "offset": [
        1693,
        2151
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1298": {
      "fn": "SafeMath.div",
      "offset": [
        2606,
        2932
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1299": {
      "fn": "SafeMath.div",
      "offset": [
        2664,
        2671
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1301": {
      "fn": "SafeMath.div",
      "offset": [
        2761,
        2762
      ],
      "op": "DUP1",
      "path": "0",
      "statement": 13
    },
    "1302": {
      "fn": "SafeMath.div",
      "offset": [
        2757,
        2758
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1303": {
      "branch": 20,
      "fn": "SafeMath.div",
      "offset": [
        2757,
        2762
      ],
      "op": "GT",
      "path": "0"
    },
    "1304": {
      "fn": "SafeMath.div",
      "offset": [
        2749,
        2793
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x568"
    },
    "1307": {
      "branch": 20,
      "fn": "SafeMath.div",
      "offset": [
        2749,
        2793
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1308": {
      "fn": "SafeMath.div",
      "offset": [
        2749,
        2793
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1310": {
      "fn": "SafeMath.div",
      "offset": [
        2749,
        2793
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1311": {
      "fn": "SafeMath.div",
      "offset": [
        2749,
        2793
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1312": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1316": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1318": {
      "op": "SHL"
    },
    "1319": {
      "fn": "SafeMath.div",
      "offset": [
        2749,
        2793
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1320": {
      "fn": "SafeMath.div",
      "offset": [
        2749,
        2793
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1321": {
      "fn": "SafeMath.div",
      "offset": [
        2749,
        2793
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1323": {
      "fn": "SafeMath.div",
      "offset": [
        2749,
        2793
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1325": {
      "fn": "SafeMath.div",
      "offset": [
        2749,
        2793
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1326": {
      "fn": "SafeMath.div",
      "offset": [
        2749,
        2793
      ],
      "op": "ADD",
      "path": "0"
    },
    "1327": {
      "fn": "SafeMath.div",
      "offset": [
        2749,
        2793
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1328": {
      "fn": "SafeMath.div",
      "offset": [
        2749,
        2793
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1A"
    },
    "1330": {
      "fn": "SafeMath.div",
      "offset": [
        2749,
        2793
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x24"
    },
    "1332": {
      "fn": "SafeMath.div",
      "offset": [
        2749,
        2793
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1333": {
      "fn": "SafeMath.div",
      "offset": [
        2749,
        2793
      ],
      "op": "ADD",
      "path": "0"
    },
    "1334": {
      "fn": "SafeMath.div",
      "offset": [
        2749,
        2793
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1335": {
      "fn": "SafeMath.div",
      "offset": [
        2749,
        2793
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x536166654D6174683A206469766973696F6E206279207A65726F000000000000"
    },
    "1368": {
      "fn": "SafeMath.div",
      "offset": [
        2749,
        2793
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x44"
    },
    "1370": {
      "fn": "SafeMath.div",
      "offset": [
        2749,
        2793
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1371": {
      "fn": "SafeMath.div",
      "offset": [
        2749,
        2793
      ],
      "op": "ADD",
      "path": "0"
    },
    "1372": {
      "fn": "SafeMath.div",
      "offset": [
        2749,
        2793
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1373": {
      "fn": "SafeMath.div",
      "offset": [
        2749,
        2793
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1374": {
      "fn": "SafeMath.div",
      "offset": [
        2749,
        2793
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1375": {
      "fn": "SafeMath.div",
      "offset": [
        2749,
        2793
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1376": {
      "fn": "SafeMath.div",
      "offset": [
        2749,
        2793
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1377": {
      "fn": "SafeMath.div",
      "offset": [
        2749,
        2793
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1378": {
      "fn": "SafeMath.div",
      "offset": [
        2749,
        2793
      ],
      "op": "SUB",
      "path": "0"
    },
    "1379": {
      "fn": "SafeMath.div",
      "offset": [
        2749,
        2793
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x64"
    },
    "1381": {
      "fn": "SafeMath.div",
      "offset": [
        2749,
        2793
      ],
      "op": "ADD",
      "path": "0"
    },
    "1382": {
      "fn": "SafeMath.div",
      "offset": [
        2749,
        2793
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1383": {
      "fn": "SafeMath.div",
      "offset": [
        2749,
        2793
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1384": {
      "fn": "SafeMath.div",
      "offset": [
        2749,
        2793
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1385": {
      "fn": "SafeMath.div",
      "offset": [
        2803,
        2812
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1387": {
      "fn": "SafeMath.div",
      "offset": [
        2819,
        2820
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1388": {
      "fn": "SafeMath.div",
      "offset": [
        2815,
        2816
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1389": {
      "fn": "SafeMath.div",
      "offset": [
        2815,
        2820
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1390": {
      "fn": "SafeMath.div",
      "offset": [
        2815,
        2820
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x573"
    },
    "1393": {
      "fn": "SafeMath.div",
      "offset": [
        2815,
        2820
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1394": {
      "dev": "Division by zero",
      "fn": "SafeMath.div",
      "offset": [
        2815,
        2820
      ],
      "op": "INVALID",
      "path": "0"
    },
    "1395": {
      "fn": "SafeMath.div",
      "offset": [
        2815,
        2820
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1396": {
      "fn": "SafeMath.div",
      "offset": [
        2815,
        2820
      ],
      "op": "DIV",
      "path": "0"
    },
    "1397": {
      "fn": "SafeMath.div",
      "offset": [
        2815,
        2820
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "1398": {
      "fn": "SafeMath.div",
      "offset": [
        2606,
        2932
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "1399": {
      "op": "POP"
    },
    "1400": {
      "op": "POP"
    },
    "1401": {
      "op": "POP"
    },
    "1402": {
      "op": "POP"
    },
    "1403": {
      "fn": "SafeMath.div",
      "jump": "o",
      "offset": [
        2606,
        2932
      ],
      "op": "JUMP",
      "path": "0"
    }
  },
  "sha1": "72fa90262250c2e03aa45eb7725fd5f3f29feef8",
  "source": "pragma solidity ^0.5.0;\n\nimport 'OpenZeppelin/openzeppelin-contracts@2.3.0/contracts/math/SafeMath.sol';\nimport \"../../interfaces/IPriceOracleGetter.sol\";\n\ninterface ISortedOracles {\n    function medianRate(address) external view returns (uint256, uint256);\n    function medianTimestamp(address) external view returns (uint256);\n}\n\ninterface IRegistry {\n    function getAddressForOrDie(bytes32) external view returns (address);\n}\n\ncontract UsingRegistry {\n    bytes32 constant GOLD_TOKEN_REGISTRY_ID = keccak256(abi.encodePacked(\"GoldToken\"));\n    bytes32 constant SORTED_ORACLES_REGISTRY_ID = keccak256(abi.encodePacked(\"SortedOracles\"));\n\n    IRegistry constant public registry = IRegistry(0x000000000000000000000000000000000000ce10);\n\n    function getGoldToken() internal view returns (address) {\n        return registry.getAddressForOrDie(GOLD_TOKEN_REGISTRY_ID);\n    }\n\n    function getSortedOracles() internal view returns (ISortedOracles) {\n        return ISortedOracles(registry.getAddressForOrDie(SORTED_ORACLES_REGISTRY_ID));\n    }\n}\n\n/// @title CeloProxyPriceProvider\n/// @author Moola\n/// @notice Proxy smart contract to get the price of an asset from a price source, with Celo SortedOracles\n///         smart contracts as the only option\ncontract CeloProxyPriceProvider is IPriceOracleGetter, UsingRegistry {\n    using SafeMath for uint256;\n\n    /// @notice Gets an asset price by address\n    /// @param _asset The asset address\n    function getAssetPrice(address _asset) public view returns(uint256) {\n        if (_asset == getGoldToken()) {\n            return 1 ether;\n        }\n        uint256 _price;\n        uint256 _divisor;\n        ISortedOracles _oracles = getSortedOracles();\n        (_price, _divisor) = _oracles.medianRate(_asset);\n        require(_price > 0, \"Reported price is 0\");\n        uint _reportTime = _oracles.medianTimestamp(_asset);\n        require(block.timestamp.sub(_reportTime) < 10 minutes, \"Reported price is older than 10 minutes\");\n        return _divisor.mul(1 ether).div(_price);\n    }\n\n    /// @dev Return the value of the given input as CELO per unit, multiplied by 2**112.\n    /// @param token The ERC-20 token to check the value.\n    function getCELOPx(address token) external view returns (uint) {\n        uint unscaledPrice = getAssetPrice(token);\n        uint px = (unscaledPrice * 2**112) / 10**18;\n        require(px != 0, 'no px');\n        return px;\n    }\n}\n",
  "sourceMap": "1251:1163:1:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1251:1163:1;;;;;;;",
  "sourcePath": "contracts/oracle/SortedOracleProxy.sol",
  "type": "contract"
}