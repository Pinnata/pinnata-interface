{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract IBaseOracle",
          "name": "_source",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "governor",
          "type": "address"
        }
      ],
      "name": "AcceptGovernor",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "governor",
          "type": "address"
        }
      ],
      "name": "SetGovernor",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "pendingGovernor",
          "type": "address"
        }
      ],
      "name": "SetPendingGovernor",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "uint16",
              "name": "borrowFactor",
              "type": "uint16"
            },
            {
              "internalType": "uint16",
              "name": "collateralFactor",
              "type": "uint16"
            },
            {
              "internalType": "uint16",
              "name": "liqIncentive",
              "type": "uint16"
            }
          ],
          "indexed": false,
          "internalType": "struct ProxyOracle.TokenFactors",
          "name": "tokenFactor",
          "type": "tuple"
        }
      ],
      "name": "SetTokenFactor",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "ok",
          "type": "bool"
        }
      ],
      "name": "SetWhitelist",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "UnsetTokenFactor",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "acceptGovernor",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "asCELOBorrow",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "asCELOCollateral",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenIn",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "tokenOut",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenOutId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountIn",
          "type": "uint256"
        }
      ],
      "name": "convertForLiquidation",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "governor",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pendingGovernor",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_pendingGovernor",
          "type": "address"
        }
      ],
      "name": "setPendingGovernor",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "tokens",
          "type": "address[]"
        },
        {
          "components": [
            {
              "internalType": "uint16",
              "name": "borrowFactor",
              "type": "uint16"
            },
            {
              "internalType": "uint16",
              "name": "collateralFactor",
              "type": "uint16"
            },
            {
              "internalType": "uint16",
              "name": "liqIncentive",
              "type": "uint16"
            }
          ],
          "internalType": "struct ProxyOracle.TokenFactors[]",
          "name": "_tokenFactors",
          "type": "tuple[]"
        }
      ],
      "name": "setTokenFactors",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "tokens",
          "type": "address[]"
        },
        {
          "internalType": "bool",
          "name": "ok",
          "type": "bool"
        }
      ],
      "name": "setWhitelistERC1155",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "source",
      "outputs": [
        {
          "internalType": "contract IBaseOracle",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "support",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "supportWrappedToken",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "tokenFactors",
      "outputs": [
        {
          "internalType": "uint16",
          "name": "borrowFactor",
          "type": "uint16"
        },
        {
          "internalType": "uint16",
          "name": "collateralFactor",
          "type": "uint16"
        },
        {
          "internalType": "uint16",
          "name": "liqIncentive",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "tokens",
          "type": "address[]"
        }
      ],
      "name": "unsetTokenFactors",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "whitelistERC1155",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "16": "/Users/kylescott/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/utils/Address.sol",
    "176": "contracts/oracle/ProxyOracle.sol",
    "200": "interfaces/IBaseOracle.sol",
    "204": "interfaces/IERC20Wrapper.sol",
    "208": "interfaces/IOracle.sol",
    "22": "contracts/Governable.sol",
    "6": "/Users/kylescott/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/math/SafeMath.sol",
    "7": "/Users/kylescott/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/proxy/Initializable.sol"
  },
  "ast": {
    "absolutePath": "contracts/oracle/ProxyOracle.sol",
    "exportedSymbols": {
      "ProxyOracle": [
        28146
      ]
    },
    "id": 28147,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 27579,
        "literals": [
          "solidity",
          "0.6",
          ".12"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:176"
      },
      {
        "id": 27580,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "57:33:176"
      },
      {
        "absolutePath": "/Users/kylescott/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/math/SafeMath.sol",
        "file": "OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/math/SafeMath.sol",
        "id": 27581,
        "nodeType": "ImportDirective",
        "scope": 28147,
        "sourceUnit": 36786,
        "src": "92:79:176",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/Governable.sol",
        "file": "../Governable.sol",
        "id": 27582,
        "nodeType": "ImportDirective",
        "scope": 28147,
        "sourceUnit": 109,
        "src": "173:27:176",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/IOracle.sol",
        "file": "../../interfaces/IOracle.sol",
        "id": 27583,
        "nodeType": "ImportDirective",
        "scope": 28147,
        "sourceUnit": 37576,
        "src": "201:38:176",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/IBaseOracle.sol",
        "file": "../../interfaces/IBaseOracle.sol",
        "id": 27584,
        "nodeType": "ImportDirective",
        "scope": 28147,
        "sourceUnit": 38799,
        "src": "240:42:176",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/IERC20Wrapper.sol",
        "file": "../../interfaces/IERC20Wrapper.sol",
        "id": 27585,
        "nodeType": "ImportDirective",
        "scope": 28147,
        "sourceUnit": 37673,
        "src": "283:44:176",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 27586,
              "name": "IOracle",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 37575,
              "src": "353:7:176",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IOracle_$37575",
                "typeString": "contract IOracle"
              }
            },
            "id": 27587,
            "nodeType": "InheritanceSpecifier",
            "src": "353:7:176"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 27588,
              "name": "Governable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 108,
              "src": "362:10:176",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Governable_$108",
                "typeString": "contract Governable"
              }
            },
            "id": 27589,
            "nodeType": "InheritanceSpecifier",
            "src": "362:10:176"
          }
        ],
        "contractDependencies": [
          108,
          36357,
          37575
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 28146,
        "linearizedBaseContracts": [
          28146,
          108,
          36357,
          37575
        ],
        "name": "ProxyOracle",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 27592,
            "libraryName": {
              "contractScope": null,
              "id": 27590,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 36785,
              "src": "383:8:176",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$36785",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "377:24:176",
            "typeName": {
              "id": 27591,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "396:4:176",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 27593,
              "nodeType": "StructuredDocumentation",
              "src": "405:54:176",
              "text": "The governor sets oracle token factor for a token."
            },
            "id": 27599,
            "name": "SetTokenFactor",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 27598,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 27595,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "token",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 27599,
                  "src": "483:21:176",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 27594,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "483:7:176",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 27597,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "tokenFactor",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 27599,
                  "src": "506:24:176",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_TokenFactors_$27618_memory_ptr",
                    "typeString": "struct ProxyOracle.TokenFactors"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 27596,
                    "name": "TokenFactors",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 27618,
                    "src": "506:12:176",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TokenFactors_$27618_storage_ptr",
                      "typeString": "struct ProxyOracle.TokenFactors"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "482:49:176"
            },
            "src": "462:70:176"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 27600,
              "nodeType": "StructuredDocumentation",
              "src": "535:56:176",
              "text": "The governor unsets oracle token factor for a token."
            },
            "id": 27604,
            "name": "UnsetTokenFactor",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 27603,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 27602,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "token",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 27604,
                  "src": "617:21:176",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 27601,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "617:7:176",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "616:23:176"
            },
            "src": "594:46:176"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 27605,
              "nodeType": "StructuredDocumentation",
              "src": "643:59:176",
              "text": "The governor sets token whitelist for an ERC1155 token."
            },
            "id": 27611,
            "name": "SetWhitelist",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 27610,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 27607,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "token",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 27611,
                  "src": "724:21:176",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 27606,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "724:7:176",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 27609,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "ok",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 27611,
                  "src": "747:7:176",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 27608,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "747:4:176",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "723:32:176"
            },
            "src": "705:51:176"
          },
          {
            "canonicalName": "ProxyOracle.TokenFactors",
            "id": 27618,
            "members": [
              {
                "constant": false,
                "id": 27613,
                "mutability": "mutable",
                "name": "borrowFactor",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 27618,
                "src": "786:19:176",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint16",
                  "typeString": "uint16"
                },
                "typeName": {
                  "id": 27612,
                  "name": "uint16",
                  "nodeType": "ElementaryTypeName",
                  "src": "786:6:176",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 27615,
                "mutability": "mutable",
                "name": "collateralFactor",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 27618,
                "src": "867:23:176",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint16",
                  "typeString": "uint16"
                },
                "typeName": {
                  "id": 27614,
                  "name": "uint16",
                  "nodeType": "ElementaryTypeName",
                  "src": "867:6:176",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 27617,
                "mutability": "mutable",
                "name": "liqIncentive",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 27618,
                "src": "956:19:176",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint16",
                  "typeString": "uint16"
                },
                "typeName": {
                  "id": 27616,
                  "name": "uint16",
                  "nodeType": "ElementaryTypeName",
                  "src": "956:6:176",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "TokenFactors",
            "nodeType": "StructDefinition",
            "scope": 28146,
            "src": "760:269:176",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "67e828bf",
            "id": 27620,
            "mutability": "immutable",
            "name": "source",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 28146,
            "src": "1033:35:176",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IBaseOracle_$38798",
              "typeString": "contract IBaseOracle"
            },
            "typeName": {
              "contractScope": null,
              "id": 27619,
              "name": "IBaseOracle",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 38798,
              "src": "1033:11:176",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IBaseOracle_$38798",
                "typeString": "contract IBaseOracle"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "7b3b022d",
            "id": 27624,
            "mutability": "mutable",
            "name": "tokenFactors",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 28146,
            "src": "1094:52:176",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_TokenFactors_$27618_storage_$",
              "typeString": "mapping(address => struct ProxyOracle.TokenFactors)"
            },
            "typeName": {
              "id": 27623,
              "keyType": {
                "id": 27621,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1102:7:176",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1094:32:176",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_TokenFactors_$27618_storage_$",
                "typeString": "mapping(address => struct ProxyOracle.TokenFactors)"
              },
              "valueType": {
                "contractScope": null,
                "id": 27622,
                "name": "TokenFactors",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 27618,
                "src": "1113:12:176",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_TokenFactors_$27618_storage_ptr",
                  "typeString": "struct ProxyOracle.TokenFactors"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "495621fb",
            "id": 27628,
            "mutability": "mutable",
            "name": "whitelistERC1155",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 28146,
            "src": "1196:48:176",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 27627,
              "keyType": {
                "id": 27625,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1204:7:176",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1196:24:176",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 27626,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "1215:4:176",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 27641,
              "nodeType": "Block",
              "src": "1405:53:176",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 27636,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 27634,
                      "name": "source",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 27620,
                      "src": "1411:6:176",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IBaseOracle_$38798",
                        "typeString": "contract IBaseOracle"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 27635,
                      "name": "_source",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 27631,
                      "src": "1420:7:176",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IBaseOracle_$38798",
                        "typeString": "contract IBaseOracle"
                      }
                    },
                    "src": "1411:16:176",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IBaseOracle_$38798",
                      "typeString": "contract IBaseOracle"
                    }
                  },
                  "id": 27637,
                  "nodeType": "ExpressionStatement",
                  "src": "1411:16:176"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 27638,
                      "name": "__Governable__init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 60,
                      "src": "1433:18:176",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 27639,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1433:20:176",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 27640,
                  "nodeType": "ExpressionStatement",
                  "src": "1433:20:176"
                }
              ]
            },
            "documentation": {
              "id": 27629,
              "nodeType": "StructuredDocumentation",
              "src": "1299:63:176",
              "text": "@dev Create the contract and initialize the first governor."
            },
            "id": 27642,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 27632,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 27631,
                  "mutability": "mutable",
                  "name": "_source",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 27642,
                  "src": "1377:19:176",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IBaseOracle_$38798",
                    "typeString": "contract IBaseOracle"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 27630,
                    "name": "IBaseOracle",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 38798,
                    "src": "1377:11:176",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IBaseOracle_$38798",
                      "typeString": "contract IBaseOracle"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1376:21:176"
            },
            "returnParameters": {
              "id": 27633,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1405:0:176"
            },
            "scope": 28146,
            "src": "1365:93:176",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 27735,
              "nodeType": "Block",
              "src": "1754:659:176",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 27659,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 27655,
                            "name": "tokens",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 27646,
                            "src": "1768:6:176",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            }
                          },
                          "id": 27656,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1768:13:176",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 27657,
                            "name": "_tokenFactors",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 27649,
                            "src": "1785:13:176",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_TokenFactors_$27618_memory_ptr_$dyn_memory_ptr",
                              "typeString": "struct ProxyOracle.TokenFactors memory[] memory"
                            }
                          },
                          "id": 27658,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1785:20:176",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1768:37:176",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "696e636f6e73697374656e74206c656e677468",
                        "id": 27660,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1807:21:176",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e39bb8790077c3776fc27d43a4a6ec16cc20ec68b47f9e789badccd37562c187",
                          "typeString": "literal_string \"inconsistent length\""
                        },
                        "value": "inconsistent length"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e39bb8790077c3776fc27d43a4a6ec16cc20ec68b47f9e789badccd37562c187",
                          "typeString": "literal_string \"inconsistent length\""
                        }
                      ],
                      "id": 27654,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1760:7:176",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 27661,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1760:69:176",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 27662,
                  "nodeType": "ExpressionStatement",
                  "src": "1760:69:176"
                },
                {
                  "body": {
                    "id": 27733,
                    "nodeType": "Block",
                    "src": "1882:527:176",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint16",
                                "typeString": "uint16"
                              },
                              "id": 27680,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
                                    "id": 27675,
                                    "name": "_tokenFactors",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 27649,
                                    "src": "1898:13:176",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_struct$_TokenFactors_$27618_memory_ptr_$dyn_memory_ptr",
                                      "typeString": "struct ProxyOracle.TokenFactors memory[] memory"
                                    }
                                  },
                                  "id": 27677,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "id": 27676,
                                    "name": "idx",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 27664,
                                    "src": "1912:3:176",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "1898:18:176",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_TokenFactors_$27618_memory_ptr",
                                    "typeString": "struct ProxyOracle.TokenFactors memory"
                                  }
                                },
                                "id": 27678,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "borrowFactor",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 27613,
                                "src": "1898:31:176",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint16",
                                  "typeString": "uint16"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "argumentTypes": null,
                                "hexValue": "3130303030",
                                "id": 27679,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1933:5:176",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_10000_by_1",
                                  "typeString": "int_const 10000"
                                },
                                "value": "10000"
                              },
                              "src": "1898:40:176",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "626f72726f7720666163746f72206d757374206265206174206c656173742031303025",
                              "id": 27681,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1940:37:176",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c4a560591d37543c98e42ed0066a451561692168e369bd9837c639b76692d844",
                                "typeString": "literal_string \"borrow factor must be at least 100%\""
                              },
                              "value": "borrow factor must be at least 100%"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_c4a560591d37543c98e42ed0066a451561692168e369bd9837c639b76692d844",
                                "typeString": "literal_string \"borrow factor must be at least 100%\""
                              }
                            ],
                            "id": 27674,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "1890:7:176",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 27682,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1890:88:176",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 27683,
                        "nodeType": "ExpressionStatement",
                        "src": "1890:88:176"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint16",
                                "typeString": "uint16"
                              },
                              "id": 27690,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
                                    "id": 27685,
                                    "name": "_tokenFactors",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 27649,
                                    "src": "2003:13:176",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_struct$_TokenFactors_$27618_memory_ptr_$dyn_memory_ptr",
                                      "typeString": "struct ProxyOracle.TokenFactors memory[] memory"
                                    }
                                  },
                                  "id": 27687,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "id": 27686,
                                    "name": "idx",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 27664,
                                    "src": "2017:3:176",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "2003:18:176",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_TokenFactors_$27618_memory_ptr",
                                    "typeString": "struct ProxyOracle.TokenFactors memory"
                                  }
                                },
                                "id": 27688,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "collateralFactor",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 27615,
                                "src": "2003:35:176",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint16",
                                  "typeString": "uint16"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<=",
                              "rightExpression": {
                                "argumentTypes": null,
                                "hexValue": "3130303030",
                                "id": 27689,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2042:5:176",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_10000_by_1",
                                  "typeString": "int_const 10000"
                                },
                                "value": "10000"
                              },
                              "src": "2003:44:176",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "636f6c6c61746572616c20666163746f72206d757374206265206174206d6f73742031303025",
                              "id": 27691,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2057:40:176",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_9da46c231b76c99f237c2626b5984adbbe412bfa07b5c2bfd1de5a55456e2138",
                                "typeString": "literal_string \"collateral factor must be at most 100%\""
                              },
                              "value": "collateral factor must be at most 100%"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_9da46c231b76c99f237c2626b5984adbbe412bfa07b5c2bfd1de5a55456e2138",
                                "typeString": "literal_string \"collateral factor must be at most 100%\""
                              }
                            ],
                            "id": 27684,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "1986:7:176",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 27692,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1986:119:176",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 27693,
                        "nodeType": "ExpressionStatement",
                        "src": "1986:119:176"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint16",
                                "typeString": "uint16"
                              },
                              "id": 27700,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
                                    "id": 27695,
                                    "name": "_tokenFactors",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 27649,
                                    "src": "2121:13:176",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_struct$_TokenFactors_$27618_memory_ptr_$dyn_memory_ptr",
                                      "typeString": "struct ProxyOracle.TokenFactors memory[] memory"
                                    }
                                  },
                                  "id": 27697,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "id": 27696,
                                    "name": "idx",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 27664,
                                    "src": "2135:3:176",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "2121:18:176",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_TokenFactors_$27618_memory_ptr",
                                    "typeString": "struct ProxyOracle.TokenFactors memory"
                                  }
                                },
                                "id": 27698,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "liqIncentive",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 27617,
                                "src": "2121:31:176",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint16",
                                  "typeString": "uint16"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "argumentTypes": null,
                                "hexValue": "3130303030",
                                "id": 27699,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2156:5:176",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_10000_by_1",
                                  "typeString": "int_const 10000"
                                },
                                "value": "10000"
                              },
                              "src": "2121:40:176",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "696e63656e74697665206d757374206265206174206c656173742031303025",
                              "id": 27701,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2163:33:176",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c02605ed4440592dbd6517e833fe1682959d5df0ee58e75ca366aa64b8d4d5ab",
                                "typeString": "literal_string \"incentive must be at least 100%\""
                              },
                              "value": "incentive must be at least 100%"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_c02605ed4440592dbd6517e833fe1682959d5df0ee58e75ca366aa64b8d4d5ab",
                                "typeString": "literal_string \"incentive must be at least 100%\""
                              }
                            ],
                            "id": 27694,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2113:7:176",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 27702,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2113:84:176",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 27703,
                        "nodeType": "ExpressionStatement",
                        "src": "2113:84:176"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint16",
                                "typeString": "uint16"
                              },
                              "id": 27710,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
                                    "id": 27705,
                                    "name": "_tokenFactors",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 27649,
                                    "src": "2213:13:176",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_struct$_TokenFactors_$27618_memory_ptr_$dyn_memory_ptr",
                                      "typeString": "struct ProxyOracle.TokenFactors memory[] memory"
                                    }
                                  },
                                  "id": 27707,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "id": 27706,
                                    "name": "idx",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 27664,
                                    "src": "2227:3:176",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "2213:18:176",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_TokenFactors_$27618_memory_ptr",
                                    "typeString": "struct ProxyOracle.TokenFactors memory"
                                  }
                                },
                                "id": 27708,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "liqIncentive",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 27617,
                                "src": "2213:31:176",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint16",
                                  "typeString": "uint16"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<=",
                              "rightExpression": {
                                "argumentTypes": null,
                                "hexValue": "3230303030",
                                "id": 27709,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2248:5:176",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_20000_by_1",
                                  "typeString": "int_const 20000"
                                },
                                "value": "20000"
                              },
                              "src": "2213:40:176",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "696e63656e74697665206d757374206265206174206d6f73742032303025",
                              "id": 27711,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2255:32:176",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_eb55b280205da15adb479446533f98939aef4d7595dab8838b03879712a15405",
                                "typeString": "literal_string \"incentive must be at most 200%\""
                              },
                              "value": "incentive must be at most 200%"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_eb55b280205da15adb479446533f98939aef4d7595dab8838b03879712a15405",
                                "typeString": "literal_string \"incentive must be at most 200%\""
                              }
                            ],
                            "id": 27704,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2205:7:176",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 27712,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2205:83:176",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 27713,
                        "nodeType": "ExpressionStatement",
                        "src": "2205:83:176"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 27722,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 27714,
                              "name": "tokenFactors",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 27624,
                              "src": "2296:12:176",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_TokenFactors_$27618_storage_$",
                                "typeString": "mapping(address => struct ProxyOracle.TokenFactors storage ref)"
                              }
                            },
                            "id": 27718,
                            "indexExpression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 27715,
                                "name": "tokens",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 27646,
                                "src": "2309:6:176",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                  "typeString": "address[] memory"
                                }
                              },
                              "id": 27717,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 27716,
                                "name": "idx",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 27664,
                                "src": "2316:3:176",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2309:11:176",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "2296:25:176",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TokenFactors_$27618_storage",
                              "typeString": "struct ProxyOracle.TokenFactors storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 27719,
                              "name": "_tokenFactors",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 27649,
                              "src": "2324:13:176",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_TokenFactors_$27618_memory_ptr_$dyn_memory_ptr",
                                "typeString": "struct ProxyOracle.TokenFactors memory[] memory"
                              }
                            },
                            "id": 27721,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 27720,
                              "name": "idx",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 27664,
                              "src": "2338:3:176",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2324:18:176",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TokenFactors_$27618_memory_ptr",
                              "typeString": "struct ProxyOracle.TokenFactors memory"
                            }
                          },
                          "src": "2296:46:176",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TokenFactors_$27618_storage",
                            "typeString": "struct ProxyOracle.TokenFactors storage ref"
                          }
                        },
                        "id": 27723,
                        "nodeType": "ExpressionStatement",
                        "src": "2296:46:176"
                      },
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 27725,
                                "name": "tokens",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 27646,
                                "src": "2370:6:176",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                  "typeString": "address[] memory"
                                }
                              },
                              "id": 27727,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 27726,
                                "name": "idx",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 27664,
                                "src": "2377:3:176",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2370:11:176",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 27728,
                                "name": "_tokenFactors",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 27649,
                                "src": "2383:13:176",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_TokenFactors_$27618_memory_ptr_$dyn_memory_ptr",
                                  "typeString": "struct ProxyOracle.TokenFactors memory[] memory"
                                }
                              },
                              "id": 27730,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 27729,
                                "name": "idx",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 27664,
                                "src": "2397:3:176",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2383:18:176",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_TokenFactors_$27618_memory_ptr",
                                "typeString": "struct ProxyOracle.TokenFactors memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_struct$_TokenFactors_$27618_memory_ptr",
                                "typeString": "struct ProxyOracle.TokenFactors memory"
                              }
                            ],
                            "id": 27724,
                            "name": "SetTokenFactor",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 27599,
                            "src": "2355:14:176",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_struct$_TokenFactors_$27618_memory_ptr_$returns$__$",
                              "typeString": "function (address,struct ProxyOracle.TokenFactors memory)"
                            }
                          },
                          "id": 27731,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2355:47:176",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 27732,
                        "nodeType": "EmitStatement",
                        "src": "2350:52:176"
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 27670,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 27667,
                      "name": "idx",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 27664,
                      "src": "1854:3:176",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 27668,
                        "name": "tokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27646,
                        "src": "1860:6:176",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 27669,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1860:13:176",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1854:19:176",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 27734,
                  "initializationExpression": {
                    "assignments": [
                      27664
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 27664,
                        "mutability": "mutable",
                        "name": "idx",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 27734,
                        "src": "1840:8:176",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 27663,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1840:4:176",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 27666,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 27665,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1851:1:176",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "1840:12:176"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 27672,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "1875:5:176",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 27671,
                        "name": "idx",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27664,
                        "src": "1875:3:176",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 27673,
                    "nodeType": "ExpressionStatement",
                    "src": "1875:5:176"
                  },
                  "nodeType": "ForStatement",
                  "src": "1835:574:176"
                }
              ]
            },
            "documentation": {
              "id": 27643,
              "nodeType": "StructuredDocumentation",
              "src": "1462:175:176",
              "text": "@dev Set oracle token factors for the given list of token addresses.\n @param tokens List of tokens to set info\n @param _tokenFactors List of oracle token factors"
            },
            "functionSelector": "e7a9883e",
            "id": 27736,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 27652,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 27651,
                  "name": "onlyGov",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 36,
                  "src": "1744:7:176",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1744:7:176"
              }
            ],
            "name": "setTokenFactors",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 27650,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 27646,
                  "mutability": "mutable",
                  "name": "tokens",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 27736,
                  "src": "1665:23:176",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 27644,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1665:7:176",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 27645,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "1665:9:176",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 27649,
                  "mutability": "mutable",
                  "name": "_tokenFactors",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 27736,
                  "src": "1690:35:176",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_TokenFactors_$27618_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct ProxyOracle.TokenFactors[]"
                  },
                  "typeName": {
                    "baseType": {
                      "contractScope": null,
                      "id": 27647,
                      "name": "TokenFactors",
                      "nodeType": "UserDefinedTypeName",
                      "referencedDeclaration": 27618,
                      "src": "1690:12:176",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TokenFactors_$27618_storage_ptr",
                        "typeString": "struct ProxyOracle.TokenFactors"
                      }
                    },
                    "id": 27648,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "1690:14:176",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_TokenFactors_$27618_storage_$dyn_storage_ptr",
                      "typeString": "struct ProxyOracle.TokenFactors[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1664:62:176"
            },
            "returnParameters": {
              "id": 27653,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1754:0:176"
            },
            "scope": 28146,
            "src": "1640:773:176",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 27771,
              "nodeType": "Block",
              "src": "2604:146:176",
              "statements": [
                {
                  "body": {
                    "id": 27769,
                    "nodeType": "Block",
                    "src": "2657:89:176",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 27761,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "delete",
                          "prefix": true,
                          "src": "2665:32:176",
                          "subExpression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 27756,
                              "name": "tokenFactors",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 27624,
                              "src": "2672:12:176",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_TokenFactors_$27618_storage_$",
                                "typeString": "mapping(address => struct ProxyOracle.TokenFactors storage ref)"
                              }
                            },
                            "id": 27760,
                            "indexExpression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 27757,
                                "name": "tokens",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 27740,
                                "src": "2685:6:176",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                  "typeString": "address[] memory"
                                }
                              },
                              "id": 27759,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 27758,
                                "name": "idx",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 27746,
                                "src": "2692:3:176",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2685:11:176",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "2672:25:176",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TokenFactors_$27618_storage",
                              "typeString": "struct ProxyOracle.TokenFactors storage ref"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 27762,
                        "nodeType": "ExpressionStatement",
                        "src": "2665:32:176"
                      },
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 27764,
                                "name": "tokens",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 27740,
                                "src": "2727:6:176",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                  "typeString": "address[] memory"
                                }
                              },
                              "id": 27766,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 27765,
                                "name": "idx",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 27746,
                                "src": "2734:3:176",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2727:11:176",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 27763,
                            "name": "UnsetTokenFactor",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 27604,
                            "src": "2710:16:176",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 27767,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2710:29:176",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 27768,
                        "nodeType": "EmitStatement",
                        "src": "2705:34:176"
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 27752,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 27749,
                      "name": "idx",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 27746,
                      "src": "2629:3:176",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 27750,
                        "name": "tokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27740,
                        "src": "2635:6:176",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 27751,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2635:13:176",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2629:19:176",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 27770,
                  "initializationExpression": {
                    "assignments": [
                      27746
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 27746,
                        "mutability": "mutable",
                        "name": "idx",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 27770,
                        "src": "2615:8:176",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 27745,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "2615:4:176",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 27748,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 27747,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2626:1:176",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "2615:12:176"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 27754,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "2650:5:176",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 27753,
                        "name": "idx",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27746,
                        "src": "2650:3:176",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 27755,
                    "nodeType": "ExpressionStatement",
                    "src": "2650:5:176"
                  },
                  "nodeType": "ForStatement",
                  "src": "2610:136:176"
                }
              ]
            },
            "documentation": {
              "id": 27737,
              "nodeType": "StructuredDocumentation",
              "src": "2417:115:176",
              "text": "@dev Unset token factors for the given list of token addresses\n @param tokens List of tokens to unset info"
            },
            "functionSelector": "6437388a",
            "id": 27772,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 27743,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 27742,
                  "name": "onlyGov",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 36,
                  "src": "2596:7:176",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2596:7:176"
              }
            ],
            "name": "unsetTokenFactors",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 27741,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 27740,
                  "mutability": "mutable",
                  "name": "tokens",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 27772,
                  "src": "2562:23:176",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 27738,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "2562:7:176",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 27739,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "2562:9:176",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2561:25:176"
            },
            "returnParameters": {
              "id": 27744,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2604:0:176"
            },
            "scope": 28146,
            "src": "2535:215:176",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 27811,
              "nodeType": "Block",
              "src": "2997:148:176",
              "statements": [
                {
                  "body": {
                    "id": 27809,
                    "nodeType": "Block",
                    "src": "3050:91:176",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 27800,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 27794,
                              "name": "whitelistERC1155",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 27628,
                              "src": "3058:16:176",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 27798,
                            "indexExpression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 27795,
                                "name": "tokens",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 27776,
                                "src": "3075:6:176",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                  "typeString": "address[] memory"
                                }
                              },
                              "id": 27797,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 27796,
                                "name": "idx",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 27784,
                                "src": "3082:3:176",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3075:11:176",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "3058:29:176",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 27799,
                            "name": "ok",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 27778,
                            "src": "3090:2:176",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "3058:34:176",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 27801,
                        "nodeType": "ExpressionStatement",
                        "src": "3058:34:176"
                      },
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 27803,
                                "name": "tokens",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 27776,
                                "src": "3118:6:176",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                  "typeString": "address[] memory"
                                }
                              },
                              "id": 27805,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 27804,
                                "name": "idx",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 27784,
                                "src": "3125:3:176",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3118:11:176",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 27806,
                              "name": "ok",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 27778,
                              "src": "3131:2:176",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 27802,
                            "name": "SetWhitelist",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 27611,
                            "src": "3105:12:176",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bool_$returns$__$",
                              "typeString": "function (address,bool)"
                            }
                          },
                          "id": 27807,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3105:29:176",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 27808,
                        "nodeType": "EmitStatement",
                        "src": "3100:34:176"
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 27790,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 27787,
                      "name": "idx",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 27784,
                      "src": "3022:3:176",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 27788,
                        "name": "tokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27776,
                        "src": "3028:6:176",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 27789,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "3028:13:176",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3022:19:176",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 27810,
                  "initializationExpression": {
                    "assignments": [
                      27784
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 27784,
                        "mutability": "mutable",
                        "name": "idx",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 27810,
                        "src": "3008:8:176",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 27783,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "3008:4:176",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 27786,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 27785,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3019:1:176",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "3008:12:176"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 27792,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "3043:5:176",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 27791,
                        "name": "idx",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27784,
                        "src": "3043:3:176",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 27793,
                    "nodeType": "ExpressionStatement",
                    "src": "3043:5:176"
                  },
                  "nodeType": "ForStatement",
                  "src": "3003:138:176"
                }
              ]
            },
            "documentation": {
              "id": 27773,
              "nodeType": "StructuredDocumentation",
              "src": "2754:160:176",
              "text": "@dev Set whitelist status for the given list of token addresses.\n @param tokens List of tokens to set whitelist status\n @param ok Whitelist status"
            },
            "functionSelector": "78513230",
            "id": 27812,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 27781,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 27780,
                  "name": "onlyGov",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 36,
                  "src": "2989:7:176",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2989:7:176"
              }
            ],
            "name": "setWhitelistERC1155",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 27779,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 27776,
                  "mutability": "mutable",
                  "name": "tokens",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 27812,
                  "src": "2946:23:176",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 27774,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "2946:7:176",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 27775,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "2946:9:176",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 27778,
                  "mutability": "mutable",
                  "name": "ok",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 27812,
                  "src": "2971:7:176",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 27777,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2971:4:176",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2945:34:176"
            },
            "returnParameters": {
              "id": 27782,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2997:0:176"
            },
            "scope": 28146,
            "src": "2917:228:176",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              37526
            ],
            "body": {
              "id": 27846,
              "nodeType": "Block",
              "src": "3450:188:176",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "id": 27826,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "3460:24:176",
                    "subExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 27823,
                        "name": "whitelistERC1155",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27628,
                        "src": "3461:16:176",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 27825,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 27824,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27815,
                        "src": "3478:5:176",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "3461:23:176",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 27829,
                  "nodeType": "IfStatement",
                  "src": "3456:42:176",
                  "trueBody": {
                    "expression": {
                      "argumentTypes": null,
                      "hexValue": "66616c7365",
                      "id": 27827,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3493:5:176",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "functionReturnParameters": 27822,
                    "id": 27828,
                    "nodeType": "Return",
                    "src": "3486:12:176"
                  }
                },
                {
                  "assignments": [
                    27831
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 27831,
                      "mutability": "mutable",
                      "name": "tokenUnderlying",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 27846,
                      "src": "3504:23:176",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 27830,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3504:7:176",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 27838,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 27836,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27817,
                        "src": "3570:2:176",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 27833,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 27815,
                            "src": "3544:5:176",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 27832,
                          "name": "IERC20Wrapper",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37672,
                          "src": "3530:13:176",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20Wrapper_$37672_$",
                            "typeString": "type(contract IERC20Wrapper)"
                          }
                        },
                        "id": 27834,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3530:20:176",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20Wrapper_$37672",
                          "typeString": "contract IERC20Wrapper"
                        }
                      },
                      "id": 27835,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getUnderlyingToken",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 37663,
                      "src": "3530:39:176",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (uint256) view external returns (address)"
                      }
                    },
                    "id": 27837,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3530:43:176",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3504:69:176"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    },
                    "id": 27844,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 27839,
                          "name": "tokenFactors",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 27624,
                          "src": "3586:12:176",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_TokenFactors_$27618_storage_$",
                            "typeString": "mapping(address => struct ProxyOracle.TokenFactors storage ref)"
                          }
                        },
                        "id": 27841,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 27840,
                          "name": "tokenUnderlying",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 27831,
                          "src": "3599:15:176",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3586:29:176",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TokenFactors_$27618_storage",
                          "typeString": "struct ProxyOracle.TokenFactors storage ref"
                        }
                      },
                      "id": 27842,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "liqIncentive",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 27617,
                      "src": "3586:42:176",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 27843,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3632:1:176",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "3586:47:176",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 27822,
                  "id": 27845,
                  "nodeType": "Return",
                  "src": "3579:54:176"
                }
              ]
            },
            "documentation": {
              "id": 27813,
              "nodeType": "StructuredDocumentation",
              "src": "3149:207:176",
              "text": "@dev Return whether the oracle supports evaluating collateral value of the given token.\n @param token ERC1155 token address to check for support\n @param id ERC1155 token id to check for support"
            },
            "functionSelector": "2461a409",
            "id": 27847,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "supportWrappedToken",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 27819,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3426:8:176"
            },
            "parameters": {
              "id": 27818,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 27815,
                  "mutability": "mutable",
                  "name": "token",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 27847,
                  "src": "3388:13:176",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 27814,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3388:7:176",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 27817,
                  "mutability": "mutable",
                  "name": "id",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 27847,
                  "src": "3403:7:176",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 27816,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3403:4:176",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3387:24:176"
            },
            "returnParameters": {
              "id": 27822,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 27821,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 27847,
                  "src": "3444:4:176",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 27820,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3444:4:176",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3443:6:176"
            },
            "scope": 28146,
            "src": "3359:279:176",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              37540
            ],
            "body": {
              "id": 27966,
              "nodeType": "Block",
              "src": "4065:824:176",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 27863,
                          "name": "whitelistERC1155",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 27628,
                          "src": "4079:16:176",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 27865,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 27864,
                          "name": "tokenOut",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 27852,
                          "src": "4096:8:176",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4079:26:176",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "62616420746f6b656e",
                        "id": 27866,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4107:11:176",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_616e08e83727931c4faaa79fa59b5d1cf7e6a017d36ea0a05bb8869d6f353798",
                          "typeString": "literal_string \"bad token\""
                        },
                        "value": "bad token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_616e08e83727931c4faaa79fa59b5d1cf7e6a017d36ea0a05bb8869d6f353798",
                          "typeString": "literal_string \"bad token\""
                        }
                      ],
                      "id": 27862,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4071:7:176",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 27867,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4071:48:176",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 27868,
                  "nodeType": "ExpressionStatement",
                  "src": "4071:48:176"
                },
                {
                  "assignments": [
                    27870
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 27870,
                      "mutability": "mutable",
                      "name": "tokenOutUnderlying",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 27966,
                      "src": "4125:26:176",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 27869,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "4125:7:176",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 27877,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 27875,
                        "name": "tokenOutId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27854,
                        "src": "4197:10:176",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 27872,
                            "name": "tokenOut",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 27852,
                            "src": "4168:8:176",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 27871,
                          "name": "IERC20Wrapper",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37672,
                          "src": "4154:13:176",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20Wrapper_$37672_$",
                            "typeString": "type(contract IERC20Wrapper)"
                          }
                        },
                        "id": 27873,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4154:23:176",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20Wrapper_$37672",
                          "typeString": "contract IERC20Wrapper"
                        }
                      },
                      "id": 27874,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getUnderlyingToken",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 37663,
                      "src": "4154:42:176",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (uint256) view external returns (address)"
                      }
                    },
                    "id": 27876,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4154:54:176",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4125:83:176"
                },
                {
                  "assignments": [
                    27879
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 27879,
                      "mutability": "mutable",
                      "name": "rateUnderlying",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 27966,
                      "src": "4214:19:176",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 27878,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "4214:4:176",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 27886,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 27884,
                        "name": "tokenOutId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27854,
                        "src": "4278:10:176",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 27881,
                            "name": "tokenOut",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 27852,
                            "src": "4250:8:176",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 27880,
                          "name": "IERC20Wrapper",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37672,
                          "src": "4236:13:176",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20Wrapper_$37672_$",
                            "typeString": "type(contract IERC20Wrapper)"
                          }
                        },
                        "id": 27882,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4236:23:176",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20Wrapper_$37672",
                          "typeString": "contract IERC20Wrapper"
                        }
                      },
                      "id": 27883,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getUnderlyingRate",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 37671,
                      "src": "4236:41:176",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) view external returns (uint256)"
                      }
                    },
                    "id": 27885,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4236:53:176",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4214:75:176"
                },
                {
                  "assignments": [
                    27888
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 27888,
                      "mutability": "mutable",
                      "name": "tokenFactorIn",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 27966,
                      "src": "4295:33:176",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TokenFactors_$27618_memory_ptr",
                        "typeString": "struct ProxyOracle.TokenFactors"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 27887,
                        "name": "TokenFactors",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 27618,
                        "src": "4295:12:176",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TokenFactors_$27618_storage_ptr",
                          "typeString": "struct ProxyOracle.TokenFactors"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 27892,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 27889,
                      "name": "tokenFactors",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 27624,
                      "src": "4331:12:176",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_TokenFactors_$27618_storage_$",
                        "typeString": "mapping(address => struct ProxyOracle.TokenFactors storage ref)"
                      }
                    },
                    "id": 27891,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 27890,
                      "name": "tokenIn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 27850,
                      "src": "4344:7:176",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4331:21:176",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TokenFactors_$27618_storage",
                      "typeString": "struct ProxyOracle.TokenFactors storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4295:57:176"
                },
                {
                  "assignments": [
                    27894
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 27894,
                      "mutability": "mutable",
                      "name": "tokenFactorOut",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 27966,
                      "src": "4358:34:176",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TokenFactors_$27618_memory_ptr",
                        "typeString": "struct ProxyOracle.TokenFactors"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 27893,
                        "name": "TokenFactors",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 27618,
                        "src": "4358:12:176",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TokenFactors_$27618_storage_ptr",
                          "typeString": "struct ProxyOracle.TokenFactors"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 27898,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 27895,
                      "name": "tokenFactors",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 27624,
                      "src": "4395:12:176",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_TokenFactors_$27618_storage_$",
                        "typeString": "mapping(address => struct ProxyOracle.TokenFactors storage ref)"
                      }
                    },
                    "id": 27897,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 27896,
                      "name": "tokenOutUnderlying",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 27870,
                      "src": "4408:18:176",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4395:32:176",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TokenFactors_$27618_storage",
                      "typeString": "struct ProxyOracle.TokenFactors storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4358:69:176"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        },
                        "id": 27903,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 27900,
                            "name": "tokenFactorIn",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 27888,
                            "src": "4441:13:176",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TokenFactors_$27618_memory_ptr",
                              "typeString": "struct ProxyOracle.TokenFactors memory"
                            }
                          },
                          "id": 27901,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "liqIncentive",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 27617,
                          "src": "4441:26:176",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 27902,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4471:1:176",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "4441:31:176",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "62616420756e6465726c79696e6720696e",
                        "id": 27904,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4474:19:176",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_de20ce1daa50713b25ca9e120933dfd8a11ccc1000c31b04280c4229f2eaca25",
                          "typeString": "literal_string \"bad underlying in\""
                        },
                        "value": "bad underlying in"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_de20ce1daa50713b25ca9e120933dfd8a11ccc1000c31b04280c4229f2eaca25",
                          "typeString": "literal_string \"bad underlying in\""
                        }
                      ],
                      "id": 27899,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4433:7:176",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 27905,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4433:61:176",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 27906,
                  "nodeType": "ExpressionStatement",
                  "src": "4433:61:176"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        },
                        "id": 27911,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 27908,
                            "name": "tokenFactorOut",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 27894,
                            "src": "4508:14:176",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TokenFactors_$27618_memory_ptr",
                              "typeString": "struct ProxyOracle.TokenFactors memory"
                            }
                          },
                          "id": 27909,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "liqIncentive",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 27617,
                          "src": "4508:27:176",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 27910,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4539:1:176",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "4508:32:176",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "62616420756e6465726c79696e67206f7574",
                        "id": 27912,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4542:20:176",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_26206ec19f9406236dcd1014007b855a7e651ed3f19e2ab44df674f5d2f4a835",
                          "typeString": "literal_string \"bad underlying out\""
                        },
                        "value": "bad underlying out"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_26206ec19f9406236dcd1014007b855a7e651ed3f19e2ab44df674f5d2f4a835",
                          "typeString": "literal_string \"bad underlying out\""
                        }
                      ],
                      "id": 27907,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4500:7:176",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 27913,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4500:63:176",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 27914,
                  "nodeType": "ExpressionStatement",
                  "src": "4500:63:176"
                },
                {
                  "assignments": [
                    27916
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 27916,
                      "mutability": "mutable",
                      "name": "pxIn",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 27966,
                      "src": "4569:9:176",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 27915,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "4569:4:176",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 27921,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 27919,
                        "name": "tokenIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27850,
                        "src": "4598:7:176",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 27917,
                        "name": "source",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27620,
                        "src": "4581:6:176",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IBaseOracle_$38798",
                          "typeString": "contract IBaseOracle"
                        }
                      },
                      "id": 27918,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getCELOPx",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 38797,
                      "src": "4581:16:176",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 27920,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4581:25:176",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4569:37:176"
                },
                {
                  "assignments": [
                    27923
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 27923,
                      "mutability": "mutable",
                      "name": "pxOut",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 27966,
                      "src": "4612:10:176",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 27922,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "4612:4:176",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 27928,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 27926,
                        "name": "tokenOutUnderlying",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27870,
                        "src": "4642:18:176",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 27924,
                        "name": "source",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27620,
                        "src": "4625:6:176",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IBaseOracle_$38798",
                          "typeString": "contract IBaseOracle"
                        }
                      },
                      "id": 27925,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getCELOPx",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 38797,
                      "src": "4625:16:176",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 27927,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4625:36:176",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4612:49:176"
                },
                {
                  "assignments": [
                    27930
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 27930,
                      "mutability": "mutable",
                      "name": "amountOut",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 27966,
                      "src": "4667:14:176",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 27929,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "4667:4:176",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 27938,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 27936,
                        "name": "pxOut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27923,
                        "src": "4707:5:176",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 27933,
                            "name": "pxIn",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 27916,
                            "src": "4697:4:176",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 27931,
                            "name": "amountIn",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 27856,
                            "src": "4684:8:176",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 27932,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "mul",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 36668,
                          "src": "4684:12:176",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 27934,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4684:18:176",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 27935,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "div",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 36690,
                      "src": "4684:22:176",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 27937,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4684:29:176",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4667:46:176"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 27949,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 27939,
                      "name": "amountOut",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 27930,
                      "src": "4719:9:176",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 27947,
                          "name": "rateUnderlying",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 27879,
                          "src": "4757:14:176",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_rational_5192296858534827628530496329220096_by_1",
                                "typeString": "int_const 5192...(26 digits omitted)...0096"
                              },
                              "id": 27944,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "hexValue": "32",
                                "id": 27942,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4745:1:176",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_2_by_1",
                                  "typeString": "int_const 2"
                                },
                                "value": "2"
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "**",
                              "rightExpression": {
                                "argumentTypes": null,
                                "hexValue": "313132",
                                "id": 27943,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4748:3:176",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_112_by_1",
                                  "typeString": "int_const 112"
                                },
                                "value": "112"
                              },
                              "src": "4745:6:176",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_5192296858534827628530496329220096_by_1",
                                "typeString": "int_const 5192...(26 digits omitted)...0096"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_5192296858534827628530496329220096_by_1",
                                "typeString": "int_const 5192...(26 digits omitted)...0096"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 27940,
                              "name": "amountOut",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 27930,
                              "src": "4731:9:176",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 27941,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "mul",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 36668,
                            "src": "4731:13:176",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 27945,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4731:21:176",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 27946,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "div",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 36690,
                        "src": "4731:25:176",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 27948,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4731:41:176",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4719:53:176",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 27950,
                  "nodeType": "ExpressionStatement",
                  "src": "4719:53:176"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_rational_100000000_by_1",
                          "typeString": "int_const 100000000"
                        },
                        "id": 27963,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "hexValue": "3130303030",
                          "id": 27961,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4870:5:176",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10000_by_1",
                            "typeString": "int_const 10000"
                          },
                          "value": "10000"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "3130303030",
                          "id": 27962,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4878:5:176",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10000_by_1",
                            "typeString": "int_const 10000"
                          },
                          "value": "10000"
                        },
                        "src": "4870:13:176",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000000_by_1",
                          "typeString": "int_const 100000000"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_100000000_by_1",
                          "typeString": "int_const 100000000"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 27957,
                              "name": "tokenFactorOut",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 27894,
                              "src": "4837:14:176",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_TokenFactors_$27618_memory_ptr",
                                "typeString": "struct ProxyOracle.TokenFactors memory"
                              }
                            },
                            "id": 27958,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "liqIncentive",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 27617,
                            "src": "4837:27:176",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 27953,
                                  "name": "tokenFactorIn",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 27888,
                                  "src": "4805:13:176",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_TokenFactors_$27618_memory_ptr",
                                    "typeString": "struct ProxyOracle.TokenFactors memory"
                                  }
                                },
                                "id": 27954,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "liqIncentive",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 27617,
                                "src": "4805:26:176",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint16",
                                  "typeString": "uint16"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint16",
                                  "typeString": "uint16"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "id": 27951,
                                "name": "amountOut",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 27930,
                                "src": "4791:9:176",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 27952,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "mul",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 36668,
                              "src": "4791:13:176",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 27955,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4791:41:176",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 27956,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "mul",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 36668,
                          "src": "4791:45:176",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 27959,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4791:74:176",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 27960,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "div",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 36690,
                      "src": "4791:78:176",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 27964,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4791:93:176",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 27861,
                  "id": 27965,
                  "nodeType": "Return",
                  "src": "4778:106:176"
                }
              ]
            },
            "documentation": {
              "id": 27848,
              "nodeType": "StructuredDocumentation",
              "src": "3642:264:176",
              "text": "@dev Return the amount of token out as liquidation reward for liquidating token in.\n @param tokenIn Input ERC20 token\n @param tokenOut Output ERC1155 token\n @param tokenOutId Output ERC1155 token id\n @param amountIn Input ERC20 token amount"
            },
            "functionSelector": "c38e795c",
            "id": 27967,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "convertForLiquidation",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 27858,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4041:8:176"
            },
            "parameters": {
              "id": 27857,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 27850,
                  "mutability": "mutable",
                  "name": "tokenIn",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 27967,
                  "src": "3945:15:176",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 27849,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3945:7:176",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 27852,
                  "mutability": "mutable",
                  "name": "tokenOut",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 27967,
                  "src": "3966:16:176",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 27851,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3966:7:176",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 27854,
                  "mutability": "mutable",
                  "name": "tokenOutId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 27967,
                  "src": "3988:15:176",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 27853,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3988:4:176",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 27856,
                  "mutability": "mutable",
                  "name": "amountIn",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 27967,
                  "src": "4009:13:176",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 27855,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4009:4:176",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3939:87:176"
            },
            "returnParameters": {
              "id": 27861,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 27860,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 27967,
                  "src": "4059:4:176",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 27859,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4059:4:176",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4058:6:176"
            },
            "scope": 28146,
            "src": "3909:980:176",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              37554
            ],
            "body": {
              "id": 28057,
              "nodeType": "Block",
              "src": "5368:568:176",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 27983,
                          "name": "whitelistERC1155",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 27628,
                          "src": "5382:16:176",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 27985,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 27984,
                          "name": "token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 27970,
                          "src": "5399:5:176",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5382:23:176",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "62616420746f6b656e",
                        "id": 27986,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5407:11:176",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_616e08e83727931c4faaa79fa59b5d1cf7e6a017d36ea0a05bb8869d6f353798",
                          "typeString": "literal_string \"bad token\""
                        },
                        "value": "bad token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_616e08e83727931c4faaa79fa59b5d1cf7e6a017d36ea0a05bb8869d6f353798",
                          "typeString": "literal_string \"bad token\""
                        }
                      ],
                      "id": 27982,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5374:7:176",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 27987,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5374:45:176",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 27988,
                  "nodeType": "ExpressionStatement",
                  "src": "5374:45:176"
                },
                {
                  "assignments": [
                    27990
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 27990,
                      "mutability": "mutable",
                      "name": "tokenUnderlying",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 28057,
                      "src": "5425:23:176",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 27989,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "5425:7:176",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 27997,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 27995,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27972,
                        "src": "5491:2:176",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 27992,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 27970,
                            "src": "5465:5:176",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 27991,
                          "name": "IERC20Wrapper",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37672,
                          "src": "5451:13:176",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20Wrapper_$37672_$",
                            "typeString": "type(contract IERC20Wrapper)"
                          }
                        },
                        "id": 27993,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5451:20:176",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20Wrapper_$37672",
                          "typeString": "contract IERC20Wrapper"
                        }
                      },
                      "id": 27994,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getUnderlyingToken",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 37663,
                      "src": "5451:39:176",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (uint256) view external returns (address)"
                      }
                    },
                    "id": 27996,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5451:43:176",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5425:69:176"
                },
                {
                  "assignments": [
                    27999
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 27999,
                      "mutability": "mutable",
                      "name": "rateUnderlying",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 28057,
                      "src": "5500:19:176",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 27998,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "5500:4:176",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 28006,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 28004,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27972,
                        "src": "5561:2:176",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 28001,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 27970,
                            "src": "5536:5:176",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 28000,
                          "name": "IERC20Wrapper",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37672,
                          "src": "5522:13:176",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20Wrapper_$37672_$",
                            "typeString": "type(contract IERC20Wrapper)"
                          }
                        },
                        "id": 28002,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5522:20:176",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20Wrapper_$37672",
                          "typeString": "contract IERC20Wrapper"
                        }
                      },
                      "id": 28003,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getUnderlyingRate",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 37671,
                      "src": "5522:38:176",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) view external returns (uint256)"
                      }
                    },
                    "id": 28005,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5522:42:176",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5500:64:176"
                },
                {
                  "assignments": [
                    28008
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 28008,
                      "mutability": "mutable",
                      "name": "amountUnderlying",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 28057,
                      "src": "5570:21:176",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 28007,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "5570:4:176",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 28018,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_rational_5192296858534827628530496329220096_by_1",
                          "typeString": "int_const 5192...(26 digits omitted)...0096"
                        },
                        "id": 28016,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "hexValue": "32",
                          "id": 28014,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5625:1:176",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "**",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "313132",
                          "id": 28015,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5628:3:176",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_112_by_1",
                            "typeString": "int_const 112"
                          },
                          "value": "112"
                        },
                        "src": "5625:6:176",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_5192296858534827628530496329220096_by_1",
                          "typeString": "int_const 5192...(26 digits omitted)...0096"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_5192296858534827628530496329220096_by_1",
                          "typeString": "int_const 5192...(26 digits omitted)...0096"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 28011,
                            "name": "rateUnderlying",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 27999,
                            "src": "5605:14:176",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 28009,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 27974,
                            "src": "5594:6:176",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 28010,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "mul",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 36668,
                          "src": "5594:10:176",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 28012,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5594:26:176",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 28013,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "div",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 36690,
                      "src": "5594:30:176",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 28017,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5594:38:176",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5570:62:176"
                },
                {
                  "assignments": [
                    28020
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 28020,
                      "mutability": "mutable",
                      "name": "tokenFactor",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 28057,
                      "src": "5638:31:176",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TokenFactors_$27618_memory_ptr",
                        "typeString": "struct ProxyOracle.TokenFactors"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 28019,
                        "name": "TokenFactors",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 27618,
                        "src": "5638:12:176",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TokenFactors_$27618_storage_ptr",
                          "typeString": "struct ProxyOracle.TokenFactors"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 28024,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 28021,
                      "name": "tokenFactors",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 27624,
                      "src": "5672:12:176",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_TokenFactors_$27618_storage_$",
                        "typeString": "mapping(address => struct ProxyOracle.TokenFactors storage ref)"
                      }
                    },
                    "id": 28023,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 28022,
                      "name": "tokenUnderlying",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 27990,
                      "src": "5685:15:176",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "5672:29:176",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TokenFactors_$27618_storage",
                      "typeString": "struct ProxyOracle.TokenFactors storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5638:63:176"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        },
                        "id": 28029,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 28026,
                            "name": "tokenFactor",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 28020,
                            "src": "5715:11:176",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TokenFactors_$27618_memory_ptr",
                              "typeString": "struct ProxyOracle.TokenFactors memory"
                            }
                          },
                          "id": 28027,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "liqIncentive",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 27617,
                          "src": "5715:24:176",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 28028,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5743:1:176",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "5715:29:176",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "62616420756e6465726c79696e6720636f6c6c61746572616c",
                        "id": 28030,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5746:27:176",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_00c0d9ae141be052954a25a4684eb045ce116402bc254e344b415249c8b13698",
                          "typeString": "literal_string \"bad underlying collateral\""
                        },
                        "value": "bad underlying collateral"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_00c0d9ae141be052954a25a4684eb045ce116402bc254e344b415249c8b13698",
                          "typeString": "literal_string \"bad underlying collateral\""
                        }
                      ],
                      "id": 28025,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5707:7:176",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 28031,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5707:67:176",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 28032,
                  "nodeType": "ExpressionStatement",
                  "src": "5707:67:176"
                },
                {
                  "assignments": [
                    28034
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 28034,
                      "mutability": "mutable",
                      "name": "celoValue",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 28057,
                      "src": "5780:14:176",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 28033,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "5780:4:176",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 28047,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_rational_5192296858534827628530496329220096_by_1",
                          "typeString": "int_const 5192...(26 digits omitted)...0096"
                        },
                        "id": 28045,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "hexValue": "32",
                          "id": 28043,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5857:1:176",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "**",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "313132",
                          "id": 28044,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5860:3:176",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_112_by_1",
                            "typeString": "int_const 112"
                          },
                          "value": "112"
                        },
                        "src": "5857:6:176",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_5192296858534827628530496329220096_by_1",
                          "typeString": "int_const 5192...(26 digits omitted)...0096"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_5192296858534827628530496329220096_by_1",
                          "typeString": "int_const 5192...(26 digits omitted)...0096"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 28040,
                            "name": "amountUnderlying",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 28008,
                            "src": "5835:16:176",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 28037,
                                "name": "tokenUnderlying",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 27990,
                                "src": "5814:15:176",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "id": 28035,
                                "name": "source",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 27620,
                                "src": "5797:6:176",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IBaseOracle_$38798",
                                  "typeString": "contract IBaseOracle"
                                }
                              },
                              "id": 28036,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "getCELOPx",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 38797,
                              "src": "5797:16:176",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                "typeString": "function (address) view external returns (uint256)"
                              }
                            },
                            "id": 28038,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5797:33:176",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 28039,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "mul",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 36668,
                          "src": "5797:37:176",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 28041,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5797:55:176",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 28042,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "div",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 36690,
                      "src": "5797:59:176",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 28046,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5797:67:176",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5780:84:176"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "3130303030",
                        "id": 28054,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5925:5:176",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10000_by_1",
                          "typeString": "int_const 10000"
                        },
                        "value": "10000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_10000_by_1",
                          "typeString": "int_const 10000"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 28050,
                              "name": "tokenFactor",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 28020,
                              "src": "5891:11:176",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_TokenFactors_$27618_memory_ptr",
                                "typeString": "struct ProxyOracle.TokenFactors memory"
                              }
                            },
                            "id": 28051,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "collateralFactor",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 27615,
                            "src": "5891:28:176",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 28048,
                            "name": "celoValue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 28034,
                            "src": "5877:9:176",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 28049,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "mul",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 36668,
                          "src": "5877:13:176",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 28052,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5877:43:176",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 28053,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "div",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 36690,
                      "src": "5877:47:176",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 28055,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5877:54:176",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 27981,
                  "id": 28056,
                  "nodeType": "Return",
                  "src": "5870:61:176"
                }
              ]
            },
            "documentation": {
              "id": 27968,
              "nodeType": "StructuredDocumentation",
              "src": "4893:336:176",
              "text": "@dev Return the value of the given input as CELO for collateral purpose.\n @param token ERC1155 token address to get collateral value\n @param id ERC1155 token id to get collateral value\n @param amount Token amount to get collateral value\n @param owner Token owner address (currently unused by this implementation)"
            },
            "functionSelector": "55ab98ee",
            "id": 28058,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "asCELOCollateral",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 27978,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5344:8:176"
            },
            "parameters": {
              "id": 27977,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 27970,
                  "mutability": "mutable",
                  "name": "token",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 28058,
                  "src": "5263:13:176",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 27969,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5263:7:176",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 27972,
                  "mutability": "mutable",
                  "name": "id",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 28058,
                  "src": "5282:7:176",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 27971,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "5282:4:176",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 27974,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 28058,
                  "src": "5295:11:176",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 27973,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "5295:4:176",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 27976,
                  "mutability": "mutable",
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 28058,
                  "src": "5312:13:176",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 27975,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5312:7:176",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5257:72:176"
            },
            "returnParameters": {
              "id": 27981,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 27980,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 28058,
                  "src": "5362:4:176",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 27979,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "5362:4:176",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5361:6:176"
            },
            "scope": 28146,
            "src": "5232:704:176",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              37566
            ],
            "body": {
              "id": 28109,
              "nodeType": "Block",
              "src": "6333:266:176",
              "statements": [
                {
                  "assignments": [
                    28072
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 28072,
                      "mutability": "mutable",
                      "name": "tokenFactor",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 28109,
                      "src": "6339:31:176",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TokenFactors_$27618_memory_ptr",
                        "typeString": "struct ProxyOracle.TokenFactors"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 28071,
                        "name": "TokenFactors",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 27618,
                        "src": "6339:12:176",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TokenFactors_$27618_storage_ptr",
                          "typeString": "struct ProxyOracle.TokenFactors"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 28076,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 28073,
                      "name": "tokenFactors",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 27624,
                      "src": "6373:12:176",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_TokenFactors_$27618_storage_$",
                        "typeString": "mapping(address => struct ProxyOracle.TokenFactors storage ref)"
                      }
                    },
                    "id": 28075,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 28074,
                      "name": "token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 28061,
                      "src": "6386:5:176",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "6373:19:176",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TokenFactors_$27618_storage",
                      "typeString": "struct ProxyOracle.TokenFactors storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6339:53:176"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        },
                        "id": 28081,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 28078,
                            "name": "tokenFactor",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 28072,
                            "src": "6406:11:176",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TokenFactors_$27618_memory_ptr",
                              "typeString": "struct ProxyOracle.TokenFactors memory"
                            }
                          },
                          "id": 28079,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "liqIncentive",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 27617,
                          "src": "6406:24:176",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 28080,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6434:1:176",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "6406:29:176",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "62616420756e6465726c79696e6720626f72726f77",
                        "id": 28082,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6437:23:176",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_856680147dc4c9764da053cdf52a95b603ec9af2400234769c93b252efa65440",
                          "typeString": "literal_string \"bad underlying borrow\""
                        },
                        "value": "bad underlying borrow"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_856680147dc4c9764da053cdf52a95b603ec9af2400234769c93b252efa65440",
                          "typeString": "literal_string \"bad underlying borrow\""
                        }
                      ],
                      "id": 28077,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6398:7:176",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 28083,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6398:63:176",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 28084,
                  "nodeType": "ExpressionStatement",
                  "src": "6398:63:176"
                },
                {
                  "assignments": [
                    28086
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 28086,
                      "mutability": "mutable",
                      "name": "celoValue",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 28109,
                      "src": "6467:14:176",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 28085,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "6467:4:176",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 28099,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_rational_5192296858534827628530496329220096_by_1",
                          "typeString": "int_const 5192...(26 digits omitted)...0096"
                        },
                        "id": 28097,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "hexValue": "32",
                          "id": 28095,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6524:1:176",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "**",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "313132",
                          "id": 28096,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6527:3:176",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_112_by_1",
                            "typeString": "int_const 112"
                          },
                          "value": "112"
                        },
                        "src": "6524:6:176",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_5192296858534827628530496329220096_by_1",
                          "typeString": "int_const 5192...(26 digits omitted)...0096"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_5192296858534827628530496329220096_by_1",
                          "typeString": "int_const 5192...(26 digits omitted)...0096"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 28092,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 28063,
                            "src": "6512:6:176",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 28089,
                                "name": "token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 28061,
                                "src": "6501:5:176",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "id": 28087,
                                "name": "source",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 27620,
                                "src": "6484:6:176",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IBaseOracle_$38798",
                                  "typeString": "contract IBaseOracle"
                                }
                              },
                              "id": 28088,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "getCELOPx",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 38797,
                              "src": "6484:16:176",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                "typeString": "function (address) view external returns (uint256)"
                              }
                            },
                            "id": 28090,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6484:23:176",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 28091,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "mul",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 36668,
                          "src": "6484:27:176",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 28093,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6484:35:176",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 28094,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "div",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 36690,
                      "src": "6484:39:176",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 28098,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6484:47:176",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6467:64:176"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "3130303030",
                        "id": 28106,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6588:5:176",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10000_by_1",
                          "typeString": "int_const 10000"
                        },
                        "value": "10000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_10000_by_1",
                          "typeString": "int_const 10000"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 28102,
                              "name": "tokenFactor",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 28072,
                              "src": "6558:11:176",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_TokenFactors_$27618_memory_ptr",
                                "typeString": "struct ProxyOracle.TokenFactors memory"
                              }
                            },
                            "id": 28103,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "borrowFactor",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 27613,
                            "src": "6558:24:176",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 28100,
                            "name": "celoValue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 28086,
                            "src": "6544:9:176",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 28101,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "mul",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 36668,
                          "src": "6544:13:176",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 28104,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6544:39:176",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 28105,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "div",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 36690,
                      "src": "6544:43:176",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 28107,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6544:50:176",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 28070,
                  "id": 28108,
                  "nodeType": "Return",
                  "src": "6537:57:176"
                }
              ]
            },
            "documentation": {
              "id": 28059,
              "nodeType": "StructuredDocumentation",
              "src": "5940:271:176",
              "text": "@dev Return the value of the given input as CELO for borrow purpose.\n @param token ERC20 token address to get borrow value\n @param amount ERC20 token amount to get borrow value\n @param owner Token owner address (currently unused by this implementation)"
            },
            "functionSelector": "1e3e3518",
            "id": 28110,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "asCELOBorrow",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 28067,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "6309:8:176"
            },
            "parameters": {
              "id": 28066,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28061,
                  "mutability": "mutable",
                  "name": "token",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 28110,
                  "src": "6241:13:176",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 28060,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6241:7:176",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 28063,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 28110,
                  "src": "6260:11:176",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 28062,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "6260:4:176",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 28065,
                  "mutability": "mutable",
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 28110,
                  "src": "6277:13:176",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 28064,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6277:7:176",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6235:59:176"
            },
            "returnParameters": {
              "id": 28070,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28069,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 28110,
                  "src": "6327:4:176",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 28068,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "6327:4:176",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6326:6:176"
            },
            "scope": 28146,
            "src": "6214:385:176",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              37574
            ],
            "body": {
              "id": 28144,
              "nodeType": "Block",
              "src": "6784:160:176",
              "statements": [
                {
                  "clauses": [
                    {
                      "block": {
                        "id": 28137,
                        "nodeType": "Block",
                        "src": "6836:70:176",
                        "statements": [
                          {
                            "expression": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 28135,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 28128,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "argumentTypes": null,
                                  "id": 28126,
                                  "name": "px",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 28124,
                                  "src": "6851:2:176",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "!=",
                                "rightExpression": {
                                  "argumentTypes": null,
                                  "hexValue": "30",
                                  "id": 28127,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "6857:1:176",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "6851:7:176",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&&",
                              "rightExpression": {
                                "argumentTypes": null,
                                "commonType": {
                                  "typeIdentifier": "t_uint16",
                                  "typeString": "uint16"
                                },
                                "id": 28134,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "baseExpression": {
                                      "argumentTypes": null,
                                      "id": 28129,
                                      "name": "tokenFactors",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 27624,
                                      "src": "6862:12:176",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_TokenFactors_$27618_storage_$",
                                        "typeString": "mapping(address => struct ProxyOracle.TokenFactors storage ref)"
                                      }
                                    },
                                    "id": 28131,
                                    "indexExpression": {
                                      "argumentTypes": null,
                                      "id": 28130,
                                      "name": "token",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 28113,
                                      "src": "6875:5:176",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "6862:19:176",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_TokenFactors_$27618_storage",
                                      "typeString": "struct ProxyOracle.TokenFactors storage ref"
                                    }
                                  },
                                  "id": 28132,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "liqIncentive",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 27617,
                                  "src": "6862:32:176",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint16",
                                    "typeString": "uint16"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "!=",
                                "rightExpression": {
                                  "argumentTypes": null,
                                  "hexValue": "30",
                                  "id": 28133,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "6898:1:176",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "6862:37:176",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "6851:48:176",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "functionReturnParameters": 28118,
                            "id": 28136,
                            "nodeType": "Return",
                            "src": "6844:55:176"
                          }
                        ]
                      },
                      "errorName": "",
                      "id": 28138,
                      "nodeType": "TryCatchClause",
                      "parameters": {
                        "id": 28125,
                        "nodeType": "ParameterList",
                        "parameters": [
                          {
                            "constant": false,
                            "id": 28124,
                            "mutability": "mutable",
                            "name": "px",
                            "nodeType": "VariableDeclaration",
                            "overrides": null,
                            "scope": 28138,
                            "src": "6827:7:176",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 28123,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "6827:4:176",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "src": "6826:9:176"
                      },
                      "src": "6818:88:176"
                    },
                    {
                      "block": {
                        "id": 28141,
                        "nodeType": "Block",
                        "src": "6913:27:176",
                        "statements": [
                          {
                            "expression": {
                              "argumentTypes": null,
                              "hexValue": "66616c7365",
                              "id": 28139,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6928:5:176",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "false"
                            },
                            "functionReturnParameters": 28118,
                            "id": 28140,
                            "nodeType": "Return",
                            "src": "6921:12:176"
                          }
                        ]
                      },
                      "errorName": "",
                      "id": 28142,
                      "nodeType": "TryCatchClause",
                      "parameters": null,
                      "src": "6907:33:176"
                    }
                  ],
                  "externalCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 28121,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28113,
                        "src": "6811:5:176",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 28119,
                        "name": "source",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27620,
                        "src": "6794:6:176",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IBaseOracle_$38798",
                          "typeString": "contract IBaseOracle"
                        }
                      },
                      "id": 28120,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getCELOPx",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 38797,
                      "src": "6794:16:176",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 28122,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6794:23:176",
                    "tryCall": true,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 28143,
                  "nodeType": "TryStatement",
                  "src": "6790:150:176"
                }
              ]
            },
            "documentation": {
              "id": 28111,
              "nodeType": "StructuredDocumentation",
              "src": "6603:108:176",
              "text": "@dev Return whether the ERC20 token is supported\n @param token The ERC20 token to check for support"
            },
            "functionSelector": "e660cc08",
            "id": 28145,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "support",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 28115,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "6760:8:176"
            },
            "parameters": {
              "id": 28114,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28113,
                  "mutability": "mutable",
                  "name": "token",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 28145,
                  "src": "6731:13:176",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 28112,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6731:7:176",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6730:15:176"
            },
            "returnParameters": {
              "id": 28118,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28117,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 28145,
                  "src": "6778:4:176",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 28116,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6778:4:176",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6777:6:176"
            },
            "scope": 28146,
            "src": "6714:230:176",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 28147,
        "src": "329:6617:176"
      }
    ],
    "src": "33:6914:176"
  },
  "bytecode": "",
  "bytecodeSha1": "4f0de3438ddfc0de0441e5f9f5c79cdda4fd46ab",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.6.12+commit.27d51765"
  },
  "contractName": "ProxyOracle",
  "coverageMap": {
    "branches": {
      "16": {},
      "176": {
        "ProxyOracle.asCELOCollateral": {
          "41": [
            5382,
            5405,
            true
          ]
        },
        "ProxyOracle.convertForLiquidation": {
          "42": [
            4079,
            4105,
            true
          ],
          "43": [
            4441,
            4472,
            true
          ],
          "44": [
            4508,
            4540,
            true
          ]
        },
        "ProxyOracle.setTokenFactors": {
          "45": [
            1768,
            1805,
            true
          ],
          "46": [
            1898,
            1938,
            true
          ],
          "47": [
            2003,
            2047,
            true
          ],
          "48": [
            2121,
            2161,
            true
          ],
          "49": [
            2213,
            2253,
            true
          ]
        },
        "ProxyOracle.supportWrappedToken": {
          "40": [
            3461,
            3484,
            false
          ]
        }
      },
      "200": {},
      "204": {},
      "208": {},
      "22": {
        "Governable.acceptGovernor": {
          "50": [
            1283,
            1312,
            true
          ]
        }
      },
      "6": {
        "SafeMath.div": {
          "53": [
            4302,
            4307,
            true
          ]
        },
        "SafeMath.mul": {
          "51": [
            3619,
            3625,
            false
          ],
          "52": [
            3680,
            3690,
            true
          ]
        }
      },
      "7": {}
    },
    "statements": {
      "16": {
        "Address.isContract": {
          "34": [
            1117,
            1132
          ]
        }
      },
      "176": {
        "ProxyOracle.asCELOBorrow": {
          "0": [
            6398,
            6461
          ],
          "1": [
            6537,
            6594
          ]
        },
        "ProxyOracle.asCELOCollateral": {
          "4": [
            5374,
            5419
          ],
          "5": [
            5707,
            5774
          ],
          "6": [
            5870,
            5931
          ]
        },
        "ProxyOracle.convertForLiquidation": {
          "13": [
            4071,
            4119
          ],
          "14": [
            4433,
            4494
          ],
          "15": [
            4500,
            4563
          ],
          "16": [
            4719,
            4772
          ],
          "17": [
            4778,
            4884
          ]
        },
        "ProxyOracle.setTokenFactors": {
          "24": [
            1760,
            1829
          ],
          "25": [
            1890,
            1978
          ],
          "26": [
            1986,
            2105
          ],
          "27": [
            2113,
            2197
          ],
          "28": [
            2205,
            2288
          ],
          "29": [
            2296,
            2342
          ],
          "30": [
            2350,
            2402
          ],
          "31": [
            1875,
            1880
          ]
        },
        "ProxyOracle.setWhitelistERC1155": {
          "10": [
            3058,
            3092
          ],
          "11": [
            3100,
            3134
          ],
          "12": [
            3043,
            3048
          ]
        },
        "ProxyOracle.support": {
          "22": [
            6921,
            6933
          ],
          "23": [
            6844,
            6899
          ]
        },
        "ProxyOracle.supportWrappedToken": {
          "2": [
            3486,
            3498
          ],
          "3": [
            3579,
            3633
          ]
        },
        "ProxyOracle.unsetTokenFactors": {
          "7": [
            2665,
            2697
          ],
          "8": [
            2705,
            2739
          ],
          "9": [
            2650,
            2655
          ]
        }
      },
      "200": {},
      "204": {},
      "208": {},
      "22": {
        "Governable.acceptGovernor": {
          "18": [
            1275,
            1341
          ],
          "19": [
            1347,
            1375
          ],
          "20": [
            1381,
            1402
          ],
          "21": [
            1408,
            1439
          ]
        },
        "Governable.setPendingGovernor": {
          "32": [
            1058,
            1092
          ],
          "33": [
            1098,
            1139
          ]
        }
      },
      "6": {
        "SafeMath.div": {
          "38": [
            4294,
            4338
          ],
          "39": [
            4348,
            4360
          ]
        },
        "SafeMath.mul": {
          "35": [
            3627,
            3635
          ],
          "36": [
            3672,
            3728
          ],
          "37": [
            3738,
            3746
          ]
        }
      },
      "7": {}
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts@3.4.0/Address",
    "Governable",
    "IBaseOracle",
    "IERC20Wrapper",
    "IOracle",
    "OpenZeppelin/openzeppelin-contracts@3.4.0/Initializable",
    "OpenZeppelin/openzeppelin-contracts@3.4.0/SafeMath"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106100f55760003560e01c80637851323011610097578063e58bb63911610066578063e58bb639146101eb578063e660cc08146101f3578063e7a9883e14610206578063f235757f14610219576100f5565b8063785132301461019b5780637b3b022d146101ae578063c38e795c146101d0578063e3056a34146101e3576100f5565b8063495621fb116100d3578063495621fb1461015857806355ab98ee1461016b5780636437388a1461017e57806367e828bf14610193576100f5565b80630c340a24146100fa5780631e3e3518146101185780632461a40914610138575b600080fd5b61010261022c565b60405161010f9190611508565b60405180910390f35b61012b6101263660046112d7565b610241565b60405161010f919061184c565b61014b6101463660046112ac565b6103a2565b60405161010f919061151c565b61014b61016636600461122f565b610478565b61012b610179366004611318565b61048d565b61019161018c366004611361565b6106da565b005b6101026107ad565b6101916101a936600461149c565b6107d1565b6101c16101bc36600461122f565b6108be565b60405161010f9392919061182e565b61012b6101de366004611267565b6108e9565b610102610cb8565b610191610cc7565b61014b61020136600461122f565b610d57565b61019161021436600461139c565b610e34565b61019161022736600461122f565b611087565b6000546201000090046001600160a01b031681565b600061024b611186565b506001600160a01b0384166000908152604260209081526040918290208251606081018452905461ffff8082168352620100008204811693830193909352600160201b9004909116918101829052906102bf5760405162461bcd60e51b81526004016102b690611645565b60405180910390fd5b6000610375600160701b61036f877f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166311e56aff8b6040518263ffffffff1660e01b81526004016103199190611508565b60206040518083038186803b15801561033157600080fd5b505afa158015610345573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061036991906114f0565b90611113565b90611154565b905061039861271061036f846000015161ffff168461111390919063ffffffff16565b9695505050505050565b6001600160a01b03821660009081526043602052604081205460ff166103ca57506000610472565b60405163523babb960e11b81526000906001600160a01b0385169063a4775772906103f990869060040161184c565b60206040518083038186803b15801561041157600080fd5b505afa158015610425573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610449919061124b565b6001600160a01b0316600090815260426020526040902054600160201b900461ffff1615159150505b92915050565b60436020526000908152604090205460ff1681565b6001600160a01b03841660009081526043602052604081205460ff166104c55760405162461bcd60e51b81526004016102b690611622565b60405163523babb960e11b81526000906001600160a01b0387169063a4775772906104f490889060040161184c565b60206040518083038186803b15801561050c57600080fd5b505afa158015610520573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610544919061124b565b90506000866001600160a01b031663af8002df876040518263ffffffff1660e01b8152600401610574919061184c565b60206040518083038186803b15801561058c57600080fd5b505afa1580156105a0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105c491906114f0565b905060006105da600160701b61036f8885611113565b90506105e4611186565b506001600160a01b0383166000908152604260209081526040918290208251606081018452905461ffff8082168352620100008204811693830193909352600160201b90049091169181018290529061064f5760405162461bcd60e51b81526004016102b690611527565b60006106a9600160701b61036f857f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166311e56aff8a6040518263ffffffff1660e01b81526004016103199190611508565b90506106cc61271061036f846020015161ffff168461111390919063ffffffff16565b9a9950505050505050505050565b6000546201000090046001600160a01b0316331461070a5760405162461bcd60e51b81526004016102b6906115f8565b60005b81518110156107a9576042600083838151811061072657fe5b6020908102919091018101516001600160a01b03168252810191909152604001600020805465ffffffffffff19169055815182908290811061076457fe5b60200260200101516001600160a01b03167f995b73152d62a9a92bd554852db356f087e63690e0cb9656cedd21a8d0e27c1b60405160405180910390a260010161070d565b5050565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000546201000090046001600160a01b031633146108015760405162461bcd60e51b81526004016102b6906115f8565b60005b82518110156108b957816043600085848151811061081e57fe5b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002060006101000a81548160ff02191690831515021790555082818151811061086957fe5b60200260200101516001600160a01b03167ff6019ec0a78d156d249a1ec7579e2321f6ac7521d6e1d2eacf90ba4a184dcceb836040516108a9919061151c565b60405180910390a2600101610804565b505050565b60426020526000908152604090205461ffff80821691620100008104821691600160201b9091041683565b6001600160a01b03831660009081526043602052604081205460ff166109215760405162461bcd60e51b81526004016102b690611622565b60405163523babb960e11b81526000906001600160a01b0386169063a47757729061095090879060040161184c565b60206040518083038186803b15801561096857600080fd5b505afa15801561097c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109a0919061124b565b90506000856001600160a01b031663af8002df866040518263ffffffff1660e01b81526004016109d0919061184c565b60206040518083038186803b1580156109e857600080fd5b505afa1580156109fc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a2091906114f0565b9050610a2a611186565b506001600160a01b0387166000908152604260209081526040918290208251606081018452905461ffff8082168352620100008204811693830193909352600160201b900490911691810191909152610a81611186565b506001600160a01b0383166000908152604260209081526040918290208251606081018452905461ffff8082168352620100008204811693830193909352600160201b90048216818401529183015116610aed5760405162461bcd60e51b81526004016102b690611775565b604081015161ffff16610b125760405162461bcd60e51b81526004016102b69061155e565b6040516311e56aff60e01b81526000906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906311e56aff90610b61908d90600401611508565b60206040518083038186803b158015610b7957600080fd5b505afa158015610b8d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bb191906114f0565b905060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166311e56aff876040518263ffffffff1660e01b8152600401610c019190611508565b60206040518083038186803b158015610c1957600080fd5b505afa158015610c2d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c5191906114f0565b90506000610c638261036f8b86611113565b9050610c778661036f83600160701b611113565b9050610ca86305f5e10061036f866040015161ffff16610369896040015161ffff168661111390919063ffffffff16565b9c9b505050505050505050505050565b6001546001600160a01b031681565b6001546001600160a01b03163314610cf15760405162461bcd60e51b81526004016102b69061158a565b600180546001600160a01b03191690556000805462010000600160b01b03191633620100008102919091179091556040517fd345d81ce68c70b119a17eee79dc1421700bd9cb21ca148a62dc90983964e82f91610d4d91611508565b60405180910390a1565b6040516311e56aff60e01b81526000906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906311e56aff90610da6908590600401611508565b60206040518083038186803b158015610dbe57600080fd5b505afa925050508015610dee575060408051601f3d908101601f19168201909252610deb918101906114f0565b60015b610dfa57506000610e2f565b8015801590610e2b57506001600160a01b038316600090815260426020526040902054600160201b900461ffff1615155b9150505b919050565b6000546201000090046001600160a01b03163314610e645760405162461bcd60e51b81526004016102b6906115f8565b8051825114610e855760405162461bcd60e51b81526004016102b6906117a0565b60005b82518110156108b957612710828281518110610ea057fe5b60200260200101516000015161ffff161015610ece5760405162461bcd60e51b81526004016102b690611732565b612710828281518110610edd57fe5b60200260200101516020015161ffff161115610f0b5760405162461bcd60e51b81526004016102b6906116b5565b612710828281518110610f1a57fe5b60200260200101516040015161ffff161015610f485760405162461bcd60e51b81526004016102b6906116fb565b614e20828281518110610f5757fe5b60200260200101516040015161ffff161115610f855760405162461bcd60e51b81526004016102b6906117cd565b818181518110610f9157fe5b602002602001015160426000858481518110610fa957fe5b6020908102919091018101516001600160a01b031682528181019290925260409081016000208351815493850151949092015161ffff1990931661ffff9283161763ffff0000191662010000948316949094029390931765ffff000000001916600160201b9190921602179055825183908290811061102457fe5b60200260200101516001600160a01b03167fc35b295ca62f561378f46da3a41b523fb1dc01cfb8d4036f8aa13363958ed45883838151811061106257fe5b60200260200101516040516110779190611804565b60405180910390a2600101610e88565b6000546201000090046001600160a01b031633146110b75760405162461bcd60e51b81526004016102b6906115f8565b600180546001600160a01b0319166001600160a01b0383161790556040517f964dea888b00b2ab53f13dfe7ca334b46e99338c222ae232d98547a1da019f6090611102908390611508565b60405180910390a150565b3b151590565b60008261112257506000610472565b8282028284828161112f57fe5b041461114d5760405162461bcd60e51b81526004016102b690611674565b9392505050565b60008082116111755760405162461bcd60e51b81526004016102b6906115c1565b81838161117e57fe5b049392505050565b604080516060810182526000808252602082018190529181019190915290565b600082601f8301126111b6578081fd5b81356111c96111c48261187c565b611855565b8181529150602080830190848101818402860182018710156111ea57600080fd5b60005b848110156112125781356112008161189c565b845292820192908201906001016111ed565b505050505092915050565b803561ffff8116811461047257600080fd5b600060208284031215611240578081fd5b813561114d8161189c565b60006020828403121561125c578081fd5b815161114d8161189c565b6000806000806080858703121561127c578283fd5b84356112878161189c565b935060208501356112978161189c565b93969395505050506040820135916060013590565b600080604083850312156112be578182fd5b82356112c98161189c565b946020939093013593505050565b6000806000606084860312156112eb578283fd5b83356112f68161189c565b925060208401359150604084013561130d8161189c565b809150509250925092565b6000806000806080858703121561132d578384fd5b84356113388161189c565b9350602085013592506040850135915060608501356113568161189c565b939692955090935050565b600060208284031215611372578081fd5b813567ffffffffffffffff811115611388578182fd5b611394848285016111a6565b949350505050565b60008060408084860312156113af578283fd5b833567ffffffffffffffff808211156113c6578485fd5b6113d2878388016111a6565b94506020915081860135818111156113e8578485fd5b86019050601f810187136113fa578384fd5b80356114086111c48261187c565b818152838101908385016060808502860187018c1015611426578889fd5b8895505b8486101561148b5780828d031215611440578889fd5b61144981611855565b6114538d8461121d565b81526114618d89850161121d565b888201526114718d8a850161121d565b818a0152845260019590950194928601929081019061142a565b50979a909950975050505050505050565b600080604083850312156114ae578182fd5b823567ffffffffffffffff8111156114c4578283fd5b6114d0858286016111a6565b925050602083013580151581146114e5578182fd5b809150509250929050565b600060208284031215611501578081fd5b5051919050565b6001600160a01b0391909116815260200190565b901515815260200190565b60208082526019908201527f62616420756e6465726c79696e6720636f6c6c61746572616c00000000000000604082015260600190565b602080825260129082015271189859081d5b99195c9b1e5a5b99c81bdd5d60721b604082015260600190565b60208082526018908201527f6e6f74207468652070656e64696e6720676f7665726e6f720000000000000000604082015260600190565b6020808252601a908201527f536166654d6174683a206469766973696f6e206279207a65726f000000000000604082015260600190565b60208082526010908201526f3737ba103a34329033b7bb32b93737b960811b604082015260600190565b6020808252600990820152683130b2103a37b5b2b760b91b604082015260600190565b60208082526015908201527462616420756e6465726c79696e6720626f72726f7760581b604082015260600190565b60208082526021908201527f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f6040820152607760f81b606082015260800190565b60208082526026908201527f636f6c6c61746572616c20666163746f72206d757374206265206174206d6f7360408201526574203130302560d01b606082015260800190565b6020808252601f908201527f696e63656e74697665206d757374206265206174206c65617374203130302500604082015260600190565b60208082526023908201527f626f72726f7720666163746f72206d757374206265206174206c65617374203160408201526230302560e81b606082015260800190565b6020808252601190820152703130b2103ab73232b9363cb4b7339034b760791b604082015260600190565b6020808252601390820152720d2dcc6dedce6d2e6e8cadce840d8cadccee8d606b1b604082015260600190565b6020808252601e908201527f696e63656e74697665206d757374206265206174206d6f737420323030250000604082015260600190565b815161ffff9081168252602080840151821690830152604092830151169181019190915260600190565b61ffff93841681529183166020830152909116604082015260600190565b90815260200190565b60405181810167ffffffffffffffff8111828210171561187457600080fd5b604052919050565b600067ffffffffffffffff821115611892578081fd5b5060209081020190565b6001600160a01b03811681146118b157600080fd5b5056fea2646970667358221220c578ff249210f7c7b50c7afe2e3669b0a912c46d3135107cf2c0ca5296f8639c64736f6c634300060c0033",
  "deployedSourceMap": "329:6617:176:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;321:23:22;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6214:385:176;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;3359:279::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1196:48::-;;;;;;:::i;:::-;;:::i;5232:704::-;;;;;;:::i;:::-;;:::i;2535:215::-;;;;;;:::i;:::-;;:::i;:::-;;1033:35;;;:::i;2917:228::-;;;;;;:::i;:::-;;:::i;1094:52::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;3909:980::-;;;;;;:::i;:::-;;:::i;373:30:22:-;;;:::i;1234:210::-;;;:::i;6714:230:176:-;;;;;;:::i;:::-;;:::i;1640:773::-;;;;;;:::i;:::-;;:::i;981:163:22:-;;;;;;:::i;:::-;;:::i;321:23::-;;;;;;-1:-1:-1;;;;;321:23:22;;:::o;6214:385:176:-;6327:4;6339:31;;:::i;:::-;-1:-1:-1;;;;;;6373:19:176;;;;;;:12;:19;;;;;;;;;6339:53;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;6339:53:176;;;;;;;;;;;;6398:63;;;;-1:-1:-1;;;6398:63:176;;;;;;;:::i;:::-;;;;;;;;;6467:14;6484:47;-1:-1:-1;;;6484:35:176;6512:6;6484;-1:-1:-1;;;;;6484:16:176;;6501:5;6484:23;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:27;;:35::i;:::-;:39;;:47::i;:::-;6467:64;;6544:50;6588:5;6544:39;6558:11;:24;;;6544:39;;:9;:13;;:39;;;;:::i;:50::-;6537:57;6214:385;-1:-1:-1;;;;;;6214:385:176:o;3359:279::-;-1:-1:-1;;;;;3461:23:176;;3444:4;3461:23;;;:16;:23;;;;;;;;3456:42;;-1:-1:-1;3493:5:176;3486:12;;3456:42;3530:43;;-1:-1:-1;;;3530:43:176;;3504:23;;-1:-1:-1;;;;;3530:39:176;;;;;:43;;3570:2;;3530:43;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;3586:29:176;;;;;:12;:29;;;;;:42;-1:-1:-1;;;3586:42:176;;;;:47;;;-1:-1:-1;;3359:279:176;;;;;:::o;1196:48::-;;;;;;;;;;;;;;;:::o;5232:704::-;-1:-1:-1;;;;;5382:23:176;;5362:4;5382:23;;;:16;:23;;;;;;;;5374:45;;;;-1:-1:-1;;;5374:45:176;;;;;;;:::i;:::-;5451:43;;-1:-1:-1;;;5451:43:176;;5425:23;;-1:-1:-1;;;;;5451:39:176;;;;;:43;;5491:2;;5451:43;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5425:69;;5500:19;5536:5;-1:-1:-1;;;;;5522:38:176;;5561:2;5522:42;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5500:64;-1:-1:-1;5570:21:176;5594:38;-1:-1:-1;;;5594:26:176;:6;5500:64;5594:10;:26::i;:38::-;5570:62;;5638:31;;:::i;:::-;-1:-1:-1;;;;;;5672:29:176;;;;;;:12;:29;;;;;;;;;5638:63;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;5638:63:176;;;;;;;;;;;;5707:67;;;;-1:-1:-1;;;5707:67:176;;;;;;;:::i;:::-;5780:14;5797:67;-1:-1:-1;;;5797:55:176;5835:16;5797:6;-1:-1:-1;;;;;5797:16:176;;5814:15;5797:33;;;;;;;;;;;;;;;:::i;:67::-;5780:84;;5877:54;5925:5;5877:43;5891:11;:28;;;5877:43;;:9;:13;;:43;;;;:::i;:54::-;5870:61;5232:704;-1:-1:-1;;;;;;;;;;5232:704:176:o;2535:215::-;566:8:22;;;;;-1:-1:-1;;;;;566:8:22;552:10;:22;544:51;;;;-1:-1:-1;;;544:51:22;;;;;;;:::i;:::-;2615:8:176::1;2610:136;2635:6;:13;2629:3;:19;2610:136;;;2672:12;:25;2685:6;2692:3;2685:11;;;;;;;;;::::0;;::::1;::::0;;;;;;;-1:-1:-1;;;;;2672:25:176::1;::::0;;;::::1;::::0;;;;;;-1:-1:-1;2672:25:176;2665:32;;-1:-1:-1;;2665:32:176;;;2727:11;;:6;;2734:3;;2727:11;::::1;;;;;;;;;;;-1:-1:-1::0;;;;;2710:29:176::1;;;;;;;;;;;2650:5;;2610:136;;;;2535:215:::0;:::o;1033:35::-;;;:::o;2917:228::-;566:8:22;;;;;-1:-1:-1;;;;;566:8:22;552:10;:22;544:51;;;;-1:-1:-1;;;544:51:22;;;;;;;:::i;:::-;3008:8:176::1;3003:138;3028:6;:13;3022:3;:19;3003:138;;;3090:2;3058:16;:29;3075:6;3082:3;3075:11;;;;;;;;;;;;;;-1:-1:-1::0;;;;;3058:29:176::1;-1:-1:-1::0;;;;;3058:29:176::1;;;;;;;;;;;;;:34;;;;;;;;;;;;;;;;;;3118:6;3125:3;3118:11;;;;;;;;;;;;;;-1:-1:-1::0;;;;;3105:29:176::1;;3131:2;3105:29;;;;;;:::i;:::-;;;;;;;;3043:5;;3003:138;;;;2917:228:::0;;:::o;1094:52::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1094:52:176;;;;;:::o;3909:980::-;-1:-1:-1;;;;;4079:26:176;;4059:4;4079:26;;;:16;:26;;;;;;;;4071:48;;;;-1:-1:-1;;;4071:48:176;;;;;;;:::i;:::-;4154:54;;-1:-1:-1;;;4154:54:176;;4125:26;;-1:-1:-1;;;;;4154:42:176;;;;;:54;;4197:10;;4154:54;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4125:83;;4214:19;4250:8;-1:-1:-1;;;;;4236:41:176;;4278:10;4236:53;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4214:75;;4295:33;;:::i;:::-;-1:-1:-1;;;;;;4331:21:176;;;;;;:12;:21;;;;;;;;;4295:57;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;4295:57:176;;;;;;;;;;;;4358:34;;:::i;:::-;-1:-1:-1;;;;;;4395:32:176;;;;;;:12;:32;;;;;;;;;4358:69;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;4358:69:176;;;;;;;;4441:26;;;;:31;4433:61;;;;-1:-1:-1;;;4433:61:176;;;;;;;:::i;:::-;4508:27;;;;:32;;4500:63;;;;-1:-1:-1;;;4500:63:176;;;;;;;:::i;:::-;4581:25;;-1:-1:-1;;;4581:25:176;;4569:9;;-1:-1:-1;;;;;4581:6:176;:16;;;;:25;;4598:7;;4581:25;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4569:37;;4612:10;4625:6;-1:-1:-1;;;;;4625:16:176;;4642:18;4625:36;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4612:49;-1:-1:-1;4667:14:176;4684:29;4612:49;4684:18;:8;4697:4;4684:12;:18::i;:29::-;4667:46;-1:-1:-1;4731:41:176;4757:14;4731:21;4667:46;-1:-1:-1;;;4731:13:176;:21::i;:41::-;4719:53;;4791:93;4870:13;4791:74;4837:14;:27;;;4791:74;;:41;4805:13;:26;;;4791:41;;:9;:13;;:41;;;;:::i;:93::-;4778:106;3909:980;-1:-1:-1;;;;;;;;;;;;3909:980:176:o;373:30:22:-;;;-1:-1:-1;;;;;373:30:22;;:::o;1234:210::-;1297:15;;-1:-1:-1;;;;;1297:15:22;1283:10;:29;1275:66;;;;-1:-1:-1;;;1275:66:22;;;;;;;:::i;:::-;1347:15;:28;;-1:-1:-1;;;;;;1347:28:22;;;-1:-1:-1;1381:21:22;;-1:-1:-1;;;;;;1381:21:22;1392:10;1381:21;;;;;;;;;;1413:26;;;;;;;:::i;:::-;;;;;;;;1234:210::o;6714:230:176:-;6794:23;;-1:-1:-1;;;6794:23:176;;6778:4;;-1:-1:-1;;;;;6794:6:176;:16;;;;:23;;6811:5;;6794:23;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6794:23:176;;;;;;;;-1:-1:-1;;6794:23:176;;;;;;;;;;;;:::i;:::-;;;6790:150;;-1:-1:-1;6928:5:176;6921:12;;6790:150;6851:7;;;;;:48;;-1:-1:-1;;;;;;6862:19:176;;;;;;:12;:19;;;;;:32;-1:-1:-1;;;6862:32:176;;;;:37;;6851:48;6844:55;;;6790:150;6714:230;;;:::o;1640:773::-;566:8:22;;;;;-1:-1:-1;;;;;566:8:22;552:10;:22;544:51;;;;-1:-1:-1;;;544:51:22;;;;;;;:::i;:::-;1785:13:176::1;:20;1768:6;:13;:37;1760:69;;;;-1:-1:-1::0;;;1760:69:176::1;;;;;;;:::i;:::-;1840:8;1835:574;1860:6;:13;1854:3;:19;1835:574;;;1933:5;1898:13;1912:3;1898:18;;;;;;;;;;;;;;:31;;;:40;;;;1890:88;;;;-1:-1:-1::0;;;1890:88:176::1;;;;;;;:::i;:::-;2042:5;2003:13;2017:3;2003:18;;;;;;;;;;;;;;:35;;;:44;;;;1986:119;;;;-1:-1:-1::0;;;1986:119:176::1;;;;;;;:::i;:::-;2156:5;2121:13;2135:3;2121:18;;;;;;;;;;;;;;:31;;;:40;;;;2113:84;;;;-1:-1:-1::0;;;2113:84:176::1;;;;;;;:::i;:::-;2248:5;2213:13;2227:3;2213:18;;;;;;;;;;;;;;:31;;;:40;;;;2205:83;;;;-1:-1:-1::0;;;2205:83:176::1;;;;;;;:::i;:::-;2324:13;2338:3;2324:18;;;;;;;;;;;;;;2296:12;:25;2309:6;2316:3;2309:11;;;;;;;;;::::0;;::::1;::::0;;;;;;;-1:-1:-1;;;;;2296:25:176::1;::::0;;;;::::1;::::0;;;;;;;;-1:-1:-1;2296:25:176;:46;;;;;;::::1;::::0;;;;::::1;::::0;-1:-1:-1;;2296:46:176;;::::1;;::::0;;::::1;;-1:-1:-1::0;;2296:46:176::1;::::0;;;::::1;::::0;;;::::1;::::0;;;::::1;-1:-1:-1::0;;2296:46:176::1;-1:-1:-1::0;;;2296:46:176;;;::::1;;;::::0;;2370:11;;;;2377:3;;2370:11;::::1;;;;;;;;;;;-1:-1:-1::0;;;;;2355:47:176::1;;2383:13;2397:3;2383:18;;;;;;;;;;;;;;2355:47;;;;;;:::i;:::-;;;;;;;;1875:5;;1835:574;;981:163:22::0;566:8;;;;;-1:-1:-1;;;;;566:8:22;552:10;:22;544:51;;;;-1:-1:-1;;;544:51:22;;;;;;;:::i;:::-;1058:15:::1;:34:::0;;-1:-1:-1;;;;;;1058:34:22::1;-1:-1:-1::0;;;;;1058:34:22;::::1;;::::0;;1103:36:::1;::::0;::::1;::::0;::::1;::::0;1058:34;;1103:36:::1;:::i;:::-;;;;;;;;981:163:::0;:::o;726:413:16:-;1086:20;1124:8;;;726:413::o;3538:215:6:-;3596:7;3619:6;3615:20;;-1:-1:-1;3634:1:6;3627:8;;3615:20;3657:5;;;3661:1;3657;:5;:1;3680:5;;;;;:10;3672:56;;;;-1:-1:-1;;;3672:56:6;;;;;;;:::i;:::-;3745:1;3538:215;-1:-1:-1;;;3538:215:6:o;4217:150::-;4275:7;4306:1;4302;:5;4294:44;;;;-1:-1:-1;;;4294:44:6;;;;;;;:::i;:::-;4359:1;4355;:5;;;;;;;4217:150;-1:-1:-1;;;4217:150:6:o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;301:707::-;;418:3;411:4;403:6;399:17;395:27;385:2;;-1:-1;;426:12;385:2;473:6;460:20;495:80;510:64;567:6;510:64;:::i;:::-;495:80;:::i;:::-;603:21;;;486:89;-1:-1;647:4;660:14;;;;635:17;;;749;;;740:27;;;;737:36;-1:-1;734:2;;;786:1;;776:12;734:2;811:1;796:206;821:6;818:1;815:13;796:206;;;85:6;72:20;97:33;124:5;97:33;:::i;:::-;889:50;;953:14;;;;981;;;;843:1;836:9;796:206;;;800:14;;;;;378:630;;;;:::o;2684:128::-;2750:20;;23274:6;23263:18;;24485:34;;24475:2;;24533:1;;24523:12;3097:241;;3201:2;3189:9;3180:7;3176:23;3172:32;3169:2;;;-1:-1;;3207:12;3169:2;85:6;72:20;97:33;124:5;97:33;:::i;3345:263::-;;3460:2;3448:9;3439:7;3435:23;3431:32;3428:2;;;-1:-1;;3466:12;3428:2;226:6;220:13;238:33;265:5;238:33;:::i;3615:617::-;;;;;3770:3;3758:9;3749:7;3745:23;3741:33;3738:2;;;-1:-1;;3777:12;3738:2;85:6;72:20;97:33;124:5;97:33;:::i;:::-;3829:63;-1:-1;3929:2;3968:22;;72:20;97:33;72:20;97:33;:::i;:::-;3732:500;;3937:63;;-1:-1;;;;4037:2;4076:22;;2886:20;;4145:2;4184:22;2886:20;;3732:500::o;4239:366::-;;;4360:2;4348:9;4339:7;4335:23;4331:32;4328:2;;;-1:-1;;4366:12;4328:2;85:6;72:20;97:33;124:5;97:33;:::i;:::-;4418:63;4518:2;4557:22;;;;2886:20;;-1:-1;;;4322:283::o;4612:491::-;;;;4750:2;4738:9;4729:7;4725:23;4721:32;4718:2;;;-1:-1;;4756:12;4718:2;85:6;72:20;97:33;124:5;97:33;:::i;:::-;4808:63;-1:-1;4908:2;4947:22;;2886:20;;-1:-1;5016:2;5055:22;;72:20;97:33;72:20;97:33;:::i;:::-;5024:63;;;;4712:391;;;;;:::o;5110:617::-;;;;;5265:3;5253:9;5244:7;5240:23;5236:33;5233:2;;;-1:-1;;5272:12;5233:2;85:6;72:20;97:33;124:5;97:33;:::i;:::-;5324:63;-1:-1;5424:2;5463:22;;2886:20;;-1:-1;5532:2;5571:22;;2886:20;;-1:-1;5640:2;5679:22;;72:20;97:33;72:20;97:33;:::i;:::-;5227:500;;;;-1:-1;5227:500;;-1:-1;;5227:500::o;5734:377::-;;5863:2;5851:9;5842:7;5838:23;5834:32;5831:2;;;-1:-1;;5869:12;5831:2;5927:17;5914:31;5965:18;5957:6;5954:30;5951:2;;;-1:-1;;5987:12;5951:2;6017:78;6087:7;6078:6;6067:9;6063:22;6017:78;:::i;:::-;6007:88;5825:286;-1:-1;;;;5825:286::o;6118:700::-;;;6320:2;;6308:9;6299:7;6295:23;6291:32;6288:2;;;-1:-1;;6326:12;6288:2;6384:17;6371:31;6422:18;;6414:6;6411:30;6408:2;;;-1:-1;;6444:12;6408:2;6474:78;6544:7;6535:6;6524:9;6520:22;6474:78;:::i;:::-;6464:88;;6617:2;;;;6606:9;6602:18;6589:32;6422:18;6633:6;6630:30;6627:2;;;-1:-1;;6663:12;6627:2;6770:22;;;-1:-1;1199:4;1187:17;;1183:27;-1:-1;1173:2;;-1:-1;;1214:12;1173:2;1261:6;1248:20;1283:111;1298:95;1386:6;1298:95;:::i;1283:111::-;1422:21;;;1479:14;;;;1454:17;;;1580:4;1568:17;;;1559:27;;;;1556:36;-1:-1;1553:2;;;-1:-1;;1595:12;1553:2;-1:-1;1621:10;;1615:237;1640:6;1637:1;1634:13;1615:237;;;1580:4;2143:9;2138:3;2134:19;2130:30;2127:2;;;-1:-1;;2163:12;2127:2;2191:20;1580:4;2191:20;:::i;:::-;2301:48;2345:3;2321:22;2301:48;:::i;:::-;2283:16;2276:74;2456:48;2500:3;6617:2;2480:9;2476:22;2456:48;:::i;:::-;6617:2;2442:5;2438:16;2431:74;2607:48;2651:3;6320:2;2631:9;2627:22;2607:48;:::i;:::-;2589:16;;;2582:74;1708:81;;1662:1;1655:9;;;;;1803:14;;;;1831;;;;1615:237;;;-1:-1;6282:536;;6683:119;;-1:-1;6282:536;-1:-1;;;;;;;;6282:536::o;6825:496::-;;;6968:2;6956:9;6947:7;6943:23;6939:32;6936:2;;;-1:-1;;6974:12;6936:2;7032:17;7019:31;7070:18;7062:6;7059:30;7056:2;;;-1:-1;;7092:12;7056:2;7122:78;7192:7;7183:6;7172:9;7168:22;7122:78;:::i;:::-;7112:88;;;7237:2;7277:9;7273:22;1930:20;24390:5;23176:13;23169:21;24368:5;24365:32;24355:2;;-1:-1;;24401:12;24355:2;7245:60;;;;6930:391;;;;;:::o;7328:263::-;;7443:2;7431:9;7422:7;7418:23;7414:32;7411:2;;;-1:-1;;7449:12;7411:2;-1:-1;3034:13;;7405:186;-1:-1;7405:186::o;14019:222::-;-1:-1;;;;;23355:54;;;;7818:37;;14146:2;14131:18;;14117:124::o;14493:210::-;23176:13;;23169:21;7932:34;;14614:2;14599:18;;14585:118::o;14981:416::-;15181:2;15195:47;;;8378:2;15166:18;;;22944:19;8414:27;22984:14;;;8394:48;8461:12;;;15152:245::o;15404:416::-;15604:2;15618:47;;;8712:2;15589:18;;;22944:19;-1:-1;;;22984:14;;;8728:41;8788:12;;;15575:245::o;15827:416::-;16027:2;16041:47;;;9039:2;16012:18;;;22944:19;9075:26;22984:14;;;9055:47;9121:12;;;15998:245::o;16250:416::-;16450:2;16464:47;;;9372:2;16435:18;;;22944:19;9408:28;22984:14;;;9388:49;9456:12;;;16421:245::o;16673:416::-;16873:2;16887:47;;;9707:2;16858:18;;;22944:19;-1:-1;;;22984:14;;;9723:39;9781:12;;;16844:245::o;17096:416::-;17296:2;17310:47;;;10032:1;17281:18;;;22944:19;-1:-1;;;22984:14;;;10047:32;10098:12;;;17267:245::o;17519:416::-;17719:2;17733:47;;;10349:2;17704:18;;;22944:19;-1:-1;;;22984:14;;;10365:44;10428:12;;;17690:245::o;17942:416::-;18142:2;18156:47;;;10679:2;18127:18;;;22944:19;10715:34;22984:14;;;10695:55;-1:-1;;;10770:12;;;10763:25;10807:12;;;18113:245::o;18365:416::-;18565:2;18579:47;;;11058:2;18550:18;;;22944:19;11094:34;22984:14;;;11074:55;-1:-1;;;11149:12;;;11142:30;11191:12;;;18536:245::o;18788:416::-;18988:2;19002:47;;;11442:2;18973:18;;;22944:19;11478:33;22984:14;;;11458:54;11531:12;;;18959:245::o;19211:416::-;19411:2;19425:47;;;11782:2;19396:18;;;22944:19;11818:34;22984:14;;;11798:55;-1:-1;;;11873:12;;;11866:27;11912:12;;;19382:245::o;19634:416::-;19834:2;19848:47;;;12163:2;19819:18;;;22944:19;-1:-1;;;22984:14;;;12179:40;12238:12;;;19805:245::o;20057:416::-;20257:2;20271:47;;;12489:2;20242:18;;;22944:19;-1:-1;;;22984:14;;;12505:42;12566:12;;;20228:245::o;20480:416::-;20680:2;20694:47;;;12817:2;20665:18;;;22944:19;12853:32;22984:14;;;12833:53;12905:12;;;20651:245::o;20903:346::-;13233:23;;23274:6;23263:18;;;13734:36;;13414:4;13403:16;;;13397:23;23263:18;;13472:14;;;13734:36;13574:4;13563:16;;;13557:23;23263:18;13632:14;;;13734:36;;;;21092:2;21077:18;;21063:186::o;21256:432::-;23274:6;23263:18;;;13734:36;;23263:18;;;21593:2;21578:18;;13734:36;23263:18;;;21674:2;21659:18;;13734:36;21433:2;21418:18;;21404:284::o;21695:222::-;13970:37;;;21822:2;21807:18;;21793:124::o;21924:256::-;21986:2;21980:9;22012:17;;;22087:18;22072:34;;22108:22;;;22069:62;22066:2;;;22144:1;;22134:12;22066:2;21986;22153:22;21964:216;;-1:-1;21964:216::o;22187:304::-;;22346:18;22338:6;22335:30;22332:2;;;-1:-1;;22368:12;22332:2;-1:-1;22413:4;22401:17;;;22466:15;;22269:222::o;24185:117::-;-1:-1;;;;;23355:54;;24244:35;;24234:2;;24293:1;;24283:12;24234:2;24228:74;:::o",
  "language": "Solidity",
  "natspec": {
    "events": {
      "SetTokenFactor(address,(uint16,uint16,uint16))": {
        "notice": "The governor sets oracle token factor for a token."
      },
      "SetWhitelist(address,bool)": {
        "notice": "The governor sets token whitelist for an ERC1155 token."
      },
      "UnsetTokenFactor(address)": {
        "notice": "The governor unsets oracle token factor for a token."
      }
    },
    "kind": "dev",
    "methods": {
      "acceptGovernor()": {
        "details": "Accept to become the new governor. Must be called by the pending governor."
      },
      "asCELOBorrow(address,uint256,address)": {
        "details": "Return the value of the given input as CELO for borrow purpose.",
        "params": {
          "amount": "ERC20 token amount to get borrow value",
          "owner": "Token owner address (currently unused by this implementation)",
          "token": "ERC20 token address to get borrow value"
        }
      },
      "asCELOCollateral(address,uint256,uint256,address)": {
        "details": "Return the value of the given input as CELO for collateral purpose.",
        "params": {
          "amount": "Token amount to get collateral value",
          "id": "ERC1155 token id to get collateral value",
          "owner": "Token owner address (currently unused by this implementation)",
          "token": "ERC1155 token address to get collateral value"
        }
      },
      "constructor": {
        "details": "Create the contract and initialize the first governor."
      },
      "convertForLiquidation(address,address,uint256,uint256)": {
        "details": "Return the amount of token out as liquidation reward for liquidating token in.",
        "params": {
          "amountIn": "Input ERC20 token amount",
          "tokenIn": "Input ERC20 token",
          "tokenOut": "Output ERC1155 token",
          "tokenOutId": "Output ERC1155 token id"
        }
      },
      "setPendingGovernor(address)": {
        "details": "Set the pending governor, which will be the governor once accepted.",
        "params": {
          "_pendingGovernor": "The address to become the pending governor."
        }
      },
      "setTokenFactors(address[],(uint16,uint16,uint16)[])": {
        "details": "Set oracle token factors for the given list of token addresses.",
        "params": {
          "_tokenFactors": "List of oracle token factors",
          "tokens": "List of tokens to set info"
        }
      },
      "setWhitelistERC1155(address[],bool)": {
        "details": "Set whitelist status for the given list of token addresses.",
        "params": {
          "ok": "Whitelist status",
          "tokens": "List of tokens to set whitelist status"
        }
      },
      "support(address)": {
        "details": "Return whether the ERC20 token is supported",
        "params": {
          "token": "The ERC20 token to check for support"
        }
      },
      "supportWrappedToken(address,uint256)": {
        "details": "Return whether the oracle supports evaluating collateral value of the given token.",
        "params": {
          "id": "ERC1155 token id to check for support",
          "token": "ERC1155 token address to check for support"
        }
      },
      "unsetTokenFactors(address[])": {
        "details": "Unset token factors for the given list of token addresses",
        "params": {
          "tokens": "List of tokens to unset info"
        }
      }
    },
    "version": 1
  },
  "offset": [
    329,
    6946
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xF5 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x78513230 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xE58BB639 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xE58BB639 EQ PUSH2 0x1EB JUMPI DUP1 PUSH4 0xE660CC08 EQ PUSH2 0x1F3 JUMPI DUP1 PUSH4 0xE7A9883E EQ PUSH2 0x206 JUMPI DUP1 PUSH4 0xF235757F EQ PUSH2 0x219 JUMPI PUSH2 0xF5 JUMP JUMPDEST DUP1 PUSH4 0x78513230 EQ PUSH2 0x19B JUMPI DUP1 PUSH4 0x7B3B022D EQ PUSH2 0x1AE JUMPI DUP1 PUSH4 0xC38E795C EQ PUSH2 0x1D0 JUMPI DUP1 PUSH4 0xE3056A34 EQ PUSH2 0x1E3 JUMPI PUSH2 0xF5 JUMP JUMPDEST DUP1 PUSH4 0x495621FB GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x495621FB EQ PUSH2 0x158 JUMPI DUP1 PUSH4 0x55AB98EE EQ PUSH2 0x16B JUMPI DUP1 PUSH4 0x6437388A EQ PUSH2 0x17E JUMPI DUP1 PUSH4 0x67E828BF EQ PUSH2 0x193 JUMPI PUSH2 0xF5 JUMP JUMPDEST DUP1 PUSH4 0xC340A24 EQ PUSH2 0xFA JUMPI DUP1 PUSH4 0x1E3E3518 EQ PUSH2 0x118 JUMPI DUP1 PUSH4 0x2461A409 EQ PUSH2 0x138 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x102 PUSH2 0x22C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10F SWAP2 SWAP1 PUSH2 0x1508 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x12B PUSH2 0x126 CALLDATASIZE PUSH1 0x4 PUSH2 0x12D7 JUMP JUMPDEST PUSH2 0x241 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10F SWAP2 SWAP1 PUSH2 0x184C JUMP JUMPDEST PUSH2 0x14B PUSH2 0x146 CALLDATASIZE PUSH1 0x4 PUSH2 0x12AC JUMP JUMPDEST PUSH2 0x3A2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10F SWAP2 SWAP1 PUSH2 0x151C JUMP JUMPDEST PUSH2 0x14B PUSH2 0x166 CALLDATASIZE PUSH1 0x4 PUSH2 0x122F JUMP JUMPDEST PUSH2 0x478 JUMP JUMPDEST PUSH2 0x12B PUSH2 0x179 CALLDATASIZE PUSH1 0x4 PUSH2 0x1318 JUMP JUMPDEST PUSH2 0x48D JUMP JUMPDEST PUSH2 0x191 PUSH2 0x18C CALLDATASIZE PUSH1 0x4 PUSH2 0x1361 JUMP JUMPDEST PUSH2 0x6DA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x102 PUSH2 0x7AD JUMP JUMPDEST PUSH2 0x191 PUSH2 0x1A9 CALLDATASIZE PUSH1 0x4 PUSH2 0x149C JUMP JUMPDEST PUSH2 0x7D1 JUMP JUMPDEST PUSH2 0x1C1 PUSH2 0x1BC CALLDATASIZE PUSH1 0x4 PUSH2 0x122F JUMP JUMPDEST PUSH2 0x8BE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10F SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x182E JUMP JUMPDEST PUSH2 0x12B PUSH2 0x1DE CALLDATASIZE PUSH1 0x4 PUSH2 0x1267 JUMP JUMPDEST PUSH2 0x8E9 JUMP JUMPDEST PUSH2 0x102 PUSH2 0xCB8 JUMP JUMPDEST PUSH2 0x191 PUSH2 0xCC7 JUMP JUMPDEST PUSH2 0x14B PUSH2 0x201 CALLDATASIZE PUSH1 0x4 PUSH2 0x122F JUMP JUMPDEST PUSH2 0xD57 JUMP JUMPDEST PUSH2 0x191 PUSH2 0x214 CALLDATASIZE PUSH1 0x4 PUSH2 0x139C JUMP JUMPDEST PUSH2 0xE34 JUMP JUMPDEST PUSH2 0x191 PUSH2 0x227 CALLDATASIZE PUSH1 0x4 PUSH2 0x122F JUMP JUMPDEST PUSH2 0x1087 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH3 0x10000 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x24B PUSH2 0x1186 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x42 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP3 MLOAD PUSH1 0x60 DUP2 ADD DUP5 MSTORE SWAP1 SLOAD PUSH2 0xFFFF DUP1 DUP3 AND DUP4 MSTORE PUSH3 0x10000 DUP3 DIV DUP2 AND SWAP4 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x1 PUSH1 0x20 SHL SWAP1 DIV SWAP1 SWAP2 AND SWAP2 DUP2 ADD DUP3 SWAP1 MSTORE SWAP1 PUSH2 0x2BF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2B6 SWAP1 PUSH2 0x1645 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x375 PUSH1 0x1 PUSH1 0x70 SHL PUSH2 0x36F DUP8 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x11E56AFF DUP12 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x319 SWAP2 SWAP1 PUSH2 0x1508 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x331 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x345 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x369 SWAP2 SWAP1 PUSH2 0x14F0 JUMP JUMPDEST SWAP1 PUSH2 0x1113 JUMP JUMPDEST SWAP1 PUSH2 0x1154 JUMP JUMPDEST SWAP1 POP PUSH2 0x398 PUSH2 0x2710 PUSH2 0x36F DUP5 PUSH1 0x0 ADD MLOAD PUSH2 0xFFFF AND DUP5 PUSH2 0x1113 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x43 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x3CA JUMPI POP PUSH1 0x0 PUSH2 0x472 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x523BABB9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xA4775772 SWAP1 PUSH2 0x3F9 SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0x184C JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x411 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x425 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x449 SWAP2 SWAP1 PUSH2 0x124B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x42 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x20 SHL SWAP1 DIV PUSH2 0xFFFF AND ISZERO ISZERO SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x43 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x43 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x4C5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2B6 SWAP1 PUSH2 0x1622 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x523BABB9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND SWAP1 PUSH4 0xA4775772 SWAP1 PUSH2 0x4F4 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x184C JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x50C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x520 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x544 SWAP2 SWAP1 PUSH2 0x124B JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xAF8002DF DUP8 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x574 SWAP2 SWAP1 PUSH2 0x184C JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x58C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x5A0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5C4 SWAP2 SWAP1 PUSH2 0x14F0 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x5DA PUSH1 0x1 PUSH1 0x70 SHL PUSH2 0x36F DUP9 DUP6 PUSH2 0x1113 JUMP JUMPDEST SWAP1 POP PUSH2 0x5E4 PUSH2 0x1186 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x42 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP3 MLOAD PUSH1 0x60 DUP2 ADD DUP5 MSTORE SWAP1 SLOAD PUSH2 0xFFFF DUP1 DUP3 AND DUP4 MSTORE PUSH3 0x10000 DUP3 DIV DUP2 AND SWAP4 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x1 PUSH1 0x20 SHL SWAP1 DIV SWAP1 SWAP2 AND SWAP2 DUP2 ADD DUP3 SWAP1 MSTORE SWAP1 PUSH2 0x64F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2B6 SWAP1 PUSH2 0x1527 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6A9 PUSH1 0x1 PUSH1 0x70 SHL PUSH2 0x36F DUP6 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x11E56AFF DUP11 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x319 SWAP2 SWAP1 PUSH2 0x1508 JUMP JUMPDEST SWAP1 POP PUSH2 0x6CC PUSH2 0x2710 PUSH2 0x36F DUP5 PUSH1 0x20 ADD MLOAD PUSH2 0xFFFF AND DUP5 PUSH2 0x1113 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP11 SWAP10 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH3 0x10000 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x70A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2B6 SWAP1 PUSH2 0x15F8 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x7A9 JUMPI PUSH1 0x42 PUSH1 0x0 DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x726 JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 MSTORE DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH6 0xFFFFFFFFFFFF NOT AND SWAP1 SSTORE DUP2 MLOAD DUP3 SWAP1 DUP3 SWAP1 DUP2 LT PUSH2 0x764 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x995B73152D62A9A92BD554852DB356F087E63690E0CB9656CEDD21A8D0E27C1B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x1 ADD PUSH2 0x70D JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH3 0x10000 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x801 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2B6 SWAP1 PUSH2 0x15F8 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x8B9 JUMPI DUP2 PUSH1 0x43 PUSH1 0x0 DUP6 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x81E JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP3 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x869 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xF6019EC0A78D156D249A1EC7579E2321F6AC7521D6E1D2EACF90BA4A184DCCEB DUP4 PUSH1 0x40 MLOAD PUSH2 0x8A9 SWAP2 SWAP1 PUSH2 0x151C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x1 ADD PUSH2 0x804 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x42 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xFFFF DUP1 DUP3 AND SWAP2 PUSH3 0x10000 DUP2 DIV DUP3 AND SWAP2 PUSH1 0x1 PUSH1 0x20 SHL SWAP1 SWAP2 DIV AND DUP4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x43 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x921 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2B6 SWAP1 PUSH2 0x1622 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x523BABB9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 PUSH4 0xA4775772 SWAP1 PUSH2 0x950 SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0x184C JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x968 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x97C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9A0 SWAP2 SWAP1 PUSH2 0x124B JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xAF8002DF DUP7 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9D0 SWAP2 SWAP1 PUSH2 0x184C JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x9E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x9FC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA20 SWAP2 SWAP1 PUSH2 0x14F0 JUMP JUMPDEST SWAP1 POP PUSH2 0xA2A PUSH2 0x1186 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x42 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP3 MLOAD PUSH1 0x60 DUP2 ADD DUP5 MSTORE SWAP1 SLOAD PUSH2 0xFFFF DUP1 DUP3 AND DUP4 MSTORE PUSH3 0x10000 DUP3 DIV DUP2 AND SWAP4 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x1 PUSH1 0x20 SHL SWAP1 DIV SWAP1 SWAP2 AND SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH2 0xA81 PUSH2 0x1186 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x42 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP3 MLOAD PUSH1 0x60 DUP2 ADD DUP5 MSTORE SWAP1 SLOAD PUSH2 0xFFFF DUP1 DUP3 AND DUP4 MSTORE PUSH3 0x10000 DUP3 DIV DUP2 AND SWAP4 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x1 PUSH1 0x20 SHL SWAP1 DIV DUP3 AND DUP2 DUP5 ADD MSTORE SWAP2 DUP4 ADD MLOAD AND PUSH2 0xAED JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2B6 SWAP1 PUSH2 0x1775 JUMP JUMPDEST PUSH1 0x40 DUP2 ADD MLOAD PUSH2 0xFFFF AND PUSH2 0xB12 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2B6 SWAP1 PUSH2 0x155E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x11E56AFF PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0x11E56AFF SWAP1 PUSH2 0xB61 SWAP1 DUP14 SWAP1 PUSH1 0x4 ADD PUSH2 0x1508 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xB79 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB8D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xBB1 SWAP2 SWAP1 PUSH2 0x14F0 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x11E56AFF DUP8 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC01 SWAP2 SWAP1 PUSH2 0x1508 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xC19 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xC2D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC51 SWAP2 SWAP1 PUSH2 0x14F0 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xC63 DUP3 PUSH2 0x36F DUP12 DUP7 PUSH2 0x1113 JUMP JUMPDEST SWAP1 POP PUSH2 0xC77 DUP7 PUSH2 0x36F DUP4 PUSH1 0x1 PUSH1 0x70 SHL PUSH2 0x1113 JUMP JUMPDEST SWAP1 POP PUSH2 0xCA8 PUSH4 0x5F5E100 PUSH2 0x36F DUP7 PUSH1 0x40 ADD MLOAD PUSH2 0xFFFF AND PUSH2 0x369 DUP10 PUSH1 0x40 ADD MLOAD PUSH2 0xFFFF AND DUP7 PUSH2 0x1113 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP13 SWAP12 POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xCF1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2B6 SWAP1 PUSH2 0x158A JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE PUSH1 0x0 DUP1 SLOAD PUSH3 0x10000 PUSH1 0x1 PUSH1 0xB0 SHL SUB NOT AND CALLER PUSH3 0x10000 DUP2 MUL SWAP2 SWAP1 SWAP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD PUSH32 0xD345D81CE68C70B119A17EEE79DC1421700BD9CB21CA148A62DC90983964E82F SWAP2 PUSH2 0xD4D SWAP2 PUSH2 0x1508 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x11E56AFF PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0x11E56AFF SWAP1 PUSH2 0xDA6 SWAP1 DUP6 SWAP1 PUSH1 0x4 ADD PUSH2 0x1508 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xDBE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xDEE JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xDEB SWAP2 DUP2 ADD SWAP1 PUSH2 0x14F0 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xDFA JUMPI POP PUSH1 0x0 PUSH2 0xE2F JUMP JUMPDEST DUP1 ISZERO DUP1 ISZERO SWAP1 PUSH2 0xE2B JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x42 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x20 SHL SWAP1 DIV PUSH2 0xFFFF AND ISZERO ISZERO JUMPDEST SWAP2 POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH3 0x10000 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xE64 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2B6 SWAP1 PUSH2 0x15F8 JUMP JUMPDEST DUP1 MLOAD DUP3 MLOAD EQ PUSH2 0xE85 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2B6 SWAP1 PUSH2 0x17A0 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x8B9 JUMPI PUSH2 0x2710 DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xEA0 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 ADD MLOAD PUSH2 0xFFFF AND LT ISZERO PUSH2 0xECE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2B6 SWAP1 PUSH2 0x1732 JUMP JUMPDEST PUSH2 0x2710 DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xEDD JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD PUSH2 0xFFFF AND GT ISZERO PUSH2 0xF0B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2B6 SWAP1 PUSH2 0x16B5 JUMP JUMPDEST PUSH2 0x2710 DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xF1A JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 ADD MLOAD PUSH2 0xFFFF AND LT ISZERO PUSH2 0xF48 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2B6 SWAP1 PUSH2 0x16FB JUMP JUMPDEST PUSH2 0x4E20 DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xF57 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 ADD MLOAD PUSH2 0xFFFF AND GT ISZERO PUSH2 0xF85 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2B6 SWAP1 PUSH2 0x17CD JUMP JUMPDEST DUP2 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0xF91 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x42 PUSH1 0x0 DUP6 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0xFA9 JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 MSTORE DUP2 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 SWAP1 DUP2 ADD PUSH1 0x0 KECCAK256 DUP4 MLOAD DUP2 SLOAD SWAP4 DUP6 ADD MLOAD SWAP5 SWAP1 SWAP3 ADD MLOAD PUSH2 0xFFFF NOT SWAP1 SWAP4 AND PUSH2 0xFFFF SWAP3 DUP4 AND OR PUSH4 0xFFFF0000 NOT AND PUSH3 0x10000 SWAP5 DUP4 AND SWAP5 SWAP1 SWAP5 MUL SWAP4 SWAP1 SWAP4 OR PUSH6 0xFFFF00000000 NOT AND PUSH1 0x1 PUSH1 0x20 SHL SWAP2 SWAP1 SWAP3 AND MUL OR SWAP1 SSTORE DUP3 MLOAD DUP4 SWAP1 DUP3 SWAP1 DUP2 LT PUSH2 0x1024 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xC35B295CA62F561378F46DA3A41B523FB1DC01CFB8D4036F8AA13363958ED458 DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1062 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 MLOAD PUSH2 0x1077 SWAP2 SWAP1 PUSH2 0x1804 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x1 ADD PUSH2 0xE88 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH3 0x10000 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x10B7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2B6 SWAP1 PUSH2 0x15F8 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND OR SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH32 0x964DEA888B00B2AB53F13DFE7CA334B46E99338C222AE232D98547A1DA019F60 SWAP1 PUSH2 0x1102 SWAP1 DUP4 SWAP1 PUSH2 0x1508 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST EXTCODESIZE ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1122 JUMPI POP PUSH1 0x0 PUSH2 0x472 JUMP JUMPDEST DUP3 DUP3 MUL DUP3 DUP5 DUP3 DUP2 PUSH2 0x112F JUMPI INVALID JUMPDEST DIV EQ PUSH2 0x114D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2B6 SWAP1 PUSH2 0x1674 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 GT PUSH2 0x1175 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2B6 SWAP1 PUSH2 0x15C1 JUMP JUMPDEST DUP2 DUP4 DUP2 PUSH2 0x117E JUMPI INVALID JUMPDEST DIV SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x11B6 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x11C9 PUSH2 0x11C4 DUP3 PUSH2 0x187C JUMP JUMPDEST PUSH2 0x1855 JUMP JUMPDEST DUP2 DUP2 MSTORE SWAP2 POP PUSH1 0x20 DUP1 DUP4 ADD SWAP1 DUP5 DUP2 ADD DUP2 DUP5 MUL DUP7 ADD DUP3 ADD DUP8 LT ISZERO PUSH2 0x11EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x1212 JUMPI DUP2 CALLDATALOAD PUSH2 0x1200 DUP2 PUSH2 0x189C JUMP JUMPDEST DUP5 MSTORE SWAP3 DUP3 ADD SWAP3 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x11ED JUMP JUMPDEST POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH2 0xFFFF DUP2 AND DUP2 EQ PUSH2 0x472 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1240 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x114D DUP2 PUSH2 0x189C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x125C JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x114D DUP2 PUSH2 0x189C JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x127C JUMPI DUP3 DUP4 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH2 0x1287 DUP2 PUSH2 0x189C JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH2 0x1297 DUP2 PUSH2 0x189C JUMP JUMPDEST SWAP4 SWAP7 SWAP4 SWAP6 POP POP POP POP PUSH1 0x40 DUP3 ADD CALLDATALOAD SWAP2 PUSH1 0x60 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x12BE JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x12C9 DUP2 PUSH2 0x189C JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x12EB JUMPI DUP3 DUP4 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x12F6 DUP2 PUSH2 0x189C JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH2 0x130D DUP2 PUSH2 0x189C JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x132D JUMPI DUP4 DUP5 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH2 0x1338 DUP2 PUSH2 0x189C JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH2 0x1356 DUP2 PUSH2 0x189C JUMP JUMPDEST SWAP4 SWAP7 SWAP3 SWAP6 POP SWAP1 SWAP4 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1372 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1388 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x1394 DUP5 DUP3 DUP6 ADD PUSH2 0x11A6 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP1 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x13AF JUMPI DUP3 DUP4 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x13C6 JUMPI DUP5 DUP6 REVERT JUMPDEST PUSH2 0x13D2 DUP8 DUP4 DUP9 ADD PUSH2 0x11A6 JUMP JUMPDEST SWAP5 POP PUSH1 0x20 SWAP2 POP DUP2 DUP7 ADD CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x13E8 JUMPI DUP5 DUP6 REVERT JUMPDEST DUP7 ADD SWAP1 POP PUSH1 0x1F DUP2 ADD DUP8 SGT PUSH2 0x13FA JUMPI DUP4 DUP5 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH2 0x1408 PUSH2 0x11C4 DUP3 PUSH2 0x187C JUMP JUMPDEST DUP2 DUP2 MSTORE DUP4 DUP2 ADD SWAP1 DUP4 DUP6 ADD PUSH1 0x60 DUP1 DUP6 MUL DUP7 ADD DUP8 ADD DUP13 LT ISZERO PUSH2 0x1426 JUMPI DUP9 DUP10 REVERT JUMPDEST DUP9 SWAP6 POP JUMPDEST DUP5 DUP7 LT ISZERO PUSH2 0x148B JUMPI DUP1 DUP3 DUP14 SUB SLT ISZERO PUSH2 0x1440 JUMPI DUP9 DUP10 REVERT JUMPDEST PUSH2 0x1449 DUP2 PUSH2 0x1855 JUMP JUMPDEST PUSH2 0x1453 DUP14 DUP5 PUSH2 0x121D JUMP JUMPDEST DUP2 MSTORE PUSH2 0x1461 DUP14 DUP10 DUP6 ADD PUSH2 0x121D JUMP JUMPDEST DUP9 DUP3 ADD MSTORE PUSH2 0x1471 DUP14 DUP11 DUP6 ADD PUSH2 0x121D JUMP JUMPDEST DUP2 DUP11 ADD MSTORE DUP5 MSTORE PUSH1 0x1 SWAP6 SWAP1 SWAP6 ADD SWAP5 SWAP3 DUP7 ADD SWAP3 SWAP1 DUP2 ADD SWAP1 PUSH2 0x142A JUMP JUMPDEST POP SWAP8 SWAP11 SWAP1 SWAP10 POP SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x14AE JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x14C4 JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH2 0x14D0 DUP6 DUP3 DUP7 ADD PUSH2 0x11A6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x14E5 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1501 JUMPI DUP1 DUP2 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x19 SWAP1 DUP3 ADD MSTORE PUSH32 0x62616420756E6465726C79696E6720636F6C6C61746572616C00000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x12 SWAP1 DUP3 ADD MSTORE PUSH18 0x189859081D5B99195C9B1E5A5B99C81BDD5D PUSH1 0x72 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x18 SWAP1 DUP3 ADD MSTORE PUSH32 0x6E6F74207468652070656E64696E6720676F7665726E6F720000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1A SWAP1 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x10 SWAP1 DUP3 ADD MSTORE PUSH16 0x3737BA103A34329033B7BB32B93737B9 PUSH1 0x81 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x9 SWAP1 DUP3 ADD MSTORE PUSH9 0x3130B2103A37B5B2B7 PUSH1 0xB9 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x15 SWAP1 DUP3 ADD MSTORE PUSH21 0x62616420756E6465726C79696E6720626F72726F77 PUSH1 0x58 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x21 SWAP1 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206D756C7469706C69636174696F6E206F766572666C6F PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x77 PUSH1 0xF8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x26 SWAP1 DUP3 ADD MSTORE PUSH32 0x636F6C6C61746572616C20666163746F72206D757374206265206174206D6F73 PUSH1 0x40 DUP3 ADD MSTORE PUSH6 0x742031303025 PUSH1 0xD0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1F SWAP1 DUP3 ADD MSTORE PUSH32 0x696E63656E74697665206D757374206265206174206C65617374203130302500 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x23 SWAP1 DUP3 ADD MSTORE PUSH32 0x626F72726F7720666163746F72206D757374206265206174206C656173742031 PUSH1 0x40 DUP3 ADD MSTORE PUSH3 0x303025 PUSH1 0xE8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x11 SWAP1 DUP3 ADD MSTORE PUSH17 0x3130B2103AB73232B9363CB4B7339034B7 PUSH1 0x79 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x13 SWAP1 DUP3 ADD MSTORE PUSH19 0xD2DCC6DEDCE6D2E6E8CADCE840D8CADCCEE8D PUSH1 0x6B SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1E SWAP1 DUP3 ADD MSTORE PUSH32 0x696E63656E74697665206D757374206265206174206D6F737420323030250000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST DUP2 MLOAD PUSH2 0xFFFF SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP5 ADD MLOAD DUP3 AND SWAP1 DUP4 ADD MSTORE PUSH1 0x40 SWAP3 DUP4 ADD MLOAD AND SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH2 0xFFFF SWAP4 DUP5 AND DUP2 MSTORE SWAP2 DUP4 AND PUSH1 0x20 DUP4 ADD MSTORE SWAP1 SWAP2 AND PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x1874 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1892 JUMPI DUP1 DUP2 REVERT JUMPDEST POP PUSH1 0x20 SWAP1 DUP2 MUL ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x18B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC5 PUSH25 0xFF249210F7C7B50C7AFE2E3669B0A912C46D3135107CF2C0CA MSTORE SWAP7 0xF8 PUSH4 0x9C64736F PUSH13 0x634300060C0033000000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        329,
        6946
      ],
      "op": "PUSH1",
      "path": "176",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        329,
        6946
      ],
      "op": "PUSH1",
      "path": "176",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        329,
        6946
      ],
      "op": "MSTORE",
      "path": "176"
    },
    "5": {
      "fn": null,
      "offset": [
        329,
        6946
      ],
      "op": "CALLVALUE",
      "path": "176"
    },
    "6": {
      "fn": null,
      "offset": [
        329,
        6946
      ],
      "op": "DUP1",
      "path": "176"
    },
    "7": {
      "fn": null,
      "offset": [
        329,
        6946
      ],
      "op": "ISZERO",
      "path": "176"
    },
    "8": {
      "fn": null,
      "offset": [
        329,
        6946
      ],
      "op": "PUSH2",
      "path": "176",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        329,
        6946
      ],
      "op": "JUMPI",
      "path": "176"
    },
    "12": {
      "fn": null,
      "offset": [
        329,
        6946
      ],
      "op": "PUSH1",
      "path": "176",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        329,
        6946
      ],
      "op": "DUP1",
      "path": "176"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        329,
        6946
      ],
      "op": "REVERT",
      "path": "176"
    },
    "16": {
      "fn": null,
      "offset": [
        329,
        6946
      ],
      "op": "JUMPDEST",
      "path": "176"
    },
    "17": {
      "fn": null,
      "offset": [
        329,
        6946
      ],
      "op": "POP",
      "path": "176"
    },
    "18": {
      "fn": null,
      "offset": [
        329,
        6946
      ],
      "op": "PUSH1",
      "path": "176",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        329,
        6946
      ],
      "op": "CALLDATASIZE",
      "path": "176"
    },
    "21": {
      "fn": null,
      "offset": [
        329,
        6946
      ],
      "op": "LT",
      "path": "176"
    },
    "22": {
      "fn": null,
      "offset": [
        329,
        6946
      ],
      "op": "PUSH2",
      "path": "176",
      "value": "0xF5"
    },
    "25": {
      "fn": null,
      "offset": [
        329,
        6946
      ],
      "op": "JUMPI",
      "path": "176"
    },
    "26": {
      "fn": null,
      "offset": [
        329,
        6946
      ],
      "op": "PUSH1",
      "path": "176",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        329,
        6946
      ],
      "op": "CALLDATALOAD",
      "path": "176"
    },
    "29": {
      "fn": null,
      "offset": [
        329,
        6946
      ],
      "op": "PUSH1",
      "path": "176",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        329,
        6946
      ],
      "op": "SHR",
      "path": "176"
    },
    "32": {
      "fn": null,
      "offset": [
        329,
        6946
      ],
      "op": "DUP1",
      "path": "176"
    },
    "33": {
      "fn": null,
      "offset": [
        329,
        6946
      ],
      "op": "PUSH4",
      "path": "176",
      "value": "0x78513230"
    },
    "38": {
      "fn": null,
      "offset": [
        329,
        6946
      ],
      "op": "GT",
      "path": "176"
    },
    "39": {
      "fn": null,
      "offset": [
        329,
        6946
      ],
      "op": "PUSH2",
      "path": "176",
      "value": "0x97"
    },
    "42": {
      "fn": null,
      "offset": [
        329,
        6946
      ],
      "op": "JUMPI",
      "path": "176"
    },
    "43": {
      "fn": null,
      "offset": [
        329,
        6946
      ],
      "op": "DUP1",
      "path": "176"
    },
    "44": {
      "fn": null,
      "offset": [
        329,
        6946
      ],
      "op": "PUSH4",
      "path": "176",
      "value": "0xE58BB639"
    },
    "49": {
      "fn": null,
      "offset": [
        329,
        6946
      ],
      "op": "GT",
      "path": "176"
    },
    "50": {
      "fn": null,
      "offset": [
        329,
        6946
      ],
      "op": "PUSH2",
      "path": "176",
      "value": "0x66"
    },
    "53": {
      "fn": null,
      "offset": [
        329,
        6946
      ],
      "op": "JUMPI",
      "path": "176"
    },
    "54": {
      "fn": null,
      "offset": [
        329,
        6946
      ],
      "op": "DUP1",
      "path": "176"
    },
    "55": {
      "fn": null,
      "offset": [
        329,
        6946
      ],
      "op": "PUSH4",
      "path": "176",
      "value": "0xE58BB639"
    },
    "60": {
      "fn": null,
      "offset": [
        329,
        6946
      ],
      "op": "EQ",
      "path": "176"
    },
    "61": {
      "fn": null,
      "offset": [
        329,
        6946
      ],
      "op": "PUSH2",
      "path": "176",
      "value": "0x1EB"
    },
    "64": {
      "fn": null,
      "offset": [
        329,
        6946
      ],
      "op": "JUMPI",
      "path": "176"
    },
    "65": {
      "fn": null,
      "offset": [
        329,
        6946
      ],
      "op": "DUP1",
      "path": "176"
    },
    "66": {
      "fn": null,
      "offset": [
        329,
        6946
      ],
      "op": "PUSH4",
      "path": "176",
      "value": "0xE660CC08"
    },
    "71": {
      "fn": null,
      "offset": [
        329,
        6946
      ],
      "op": "EQ",
      "path": "176"
    },
    "72": {
      "fn": null,
      "offset": [
        329,
        6946
      ],
      "op": "PUSH2",
      "path": "176",
      "value": "0x1F3"
    },
    "75": {
      "fn": null,
      "offset": [
        329,
        6946
      ],
      "op": "JUMPI",
      "path": "176"
    },
    "76": {
      "fn": null,
      "offset": [
        329,
        6946
      ],
      "op": "DUP1",
      "path": "176"
    },
    "77": {
      "fn": null,
      "offset": [
        329,
        6946
      ],
      "op": "PUSH4",
      "path": "176",
      "value": "0xE7A9883E"
    },
    "82": {
      "fn": null,
      "offset": [
        329,
        6946
      ],
      "op": "EQ",
      "path": "176"
    },
    "83": {
      "fn": null,
      "offset": [
        329,
        6946
      ],
      "op": "PUSH2",
      "path": "176",
      "value": "0x206"
    },
    "86": {
      "fn": null,
      "offset": [
        329,
        6946
      ],
      "op": "JUMPI",
      "path": "176"
    },
    "87": {
      "fn": null,
      "offset": [
        329,
        6946
      ],
      "op": "DUP1",
      "path": "176"
    },
    "88": {
      "fn": null,
      "offset": [
        329,
        6946
      ],
      "op": "PUSH4",
      "path": "176",
      "value": "0xF235757F"
    },
    "93": {
      "fn": null,
      "offset": [
        329,
        6946
      ],
      "op": "EQ",
      "path": "176"
    },
    "94": {
      "fn": null,
      "offset": [
        329,
        6946
      ],
      "op": "PUSH2",
      "path": "176",
      "value": "0x219"
    },
    "97": {
      "fn": null,
      "offset": [
        329,
        6946
      ],
      "op": "JUMPI",
      "path": "176"
    },
    "98": {
      "fn": null,
      "offset": [
        329,
        6946
      ],
      "op": "PUSH2",
      "path": "176",
      "value": "0xF5"
    },
    "101": {
      "fn": null,
      "offset": [
        329,
        6946
      ],
      "op": "JUMP",
      "path": "176"
    },
    "102": {
      "fn": null,
      "offset": [
        329,
        6946
      ],
      "op": "JUMPDEST",
      "path": "176"
    },
    "103": {
      "fn": null,
      "offset": [
        329,
        6946
      ],
      "op": "DUP1",
      "path": "176"
    },
    "104": {
      "fn": null,
      "offset": [
        329,
        6946
      ],
      "op": "PUSH4",
      "path": "176",
      "value": "0x78513230"
    },
    "109": {
      "fn": null,
      "offset": [
        329,
        6946
      ],
      "op": "EQ",
      "path": "176"
    },
    "110": {
      "fn": null,
      "offset": [
        329,
        6946
      ],
      "op": "PUSH2",
      "path": "176",
      "value": "0x19B"
    },
    "113": {
      "fn": null,
      "offset": [
        329,
        6946
      ],
      "op": "JUMPI",
      "path": "176"
    },
    "114": {
      "fn": null,
      "offset": [
        329,
        6946
      ],
      "op": "DUP1",
      "path": "176"
    },
    "115": {
      "fn": null,
      "offset": [
        329,
        6946
      ],
      "op": "PUSH4",
      "path": "176",
      "value": "0x7B3B022D"
    },
    "120": {
      "fn": null,
      "offset": [
        329,
        6946
      ],
      "op": "EQ",
      "path": "176"
    },
    "121": {
      "fn": null,
      "offset": [
        329,
        6946
      ],
      "op": "PUSH2",
      "path": "176",
      "value": "0x1AE"
    },
    "124": {
      "fn": null,
      "offset": [
        329,
        6946
      ],
      "op": "JUMPI",
      "path": "176"
    },
    "125": {
      "fn": null,
      "offset": [
        329,
        6946
      ],
      "op": "DUP1",
      "path": "176"
    },
    "126": {
      "fn": null,
      "offset": [
        329,
        6946
      ],
      "op": "PUSH4",
      "path": "176",
      "value": "0xC38E795C"
    },
    "131": {
      "fn": null,
      "offset": [
        329,
        6946
      ],
      "op": "EQ",
      "path": "176"
    },
    "132": {
      "fn": null,
      "offset": [
        329,
        6946
      ],
      "op": "PUSH2",
      "path": "176",
      "value": "0x1D0"
    },
    "135": {
      "fn": null,
      "offset": [
        329,
        6946
      ],
      "op": "JUMPI",
      "path": "176"
    },
    "136": {
      "fn": null,
      "offset": [
        329,
        6946
      ],
      "op": "DUP1",
      "path": "176"
    },
    "137": {
      "fn": null,
      "offset": [
        329,
        6946
      ],
      "op": "PUSH4",
      "path": "176",
      "value": "0xE3056A34"
    },
    "142": {
      "fn": null,
      "offset": [
        329,
        6946
      ],
      "op": "EQ",
      "path": "176"
    },
    "143": {
      "fn": null,
      "offset": [
        329,
        6946
      ],
      "op": "PUSH2",
      "path": "176",
      "value": "0x1E3"
    },
    "146": {
      "fn": null,
      "offset": [
        329,
        6946
      ],
      "op": "JUMPI",
      "path": "176"
    },
    "147": {
      "fn": null,
      "offset": [
        329,
        6946
      ],
      "op": "PUSH2",
      "path": "176",
      "value": "0xF5"
    },
    "150": {
      "fn": null,
      "offset": [
        329,
        6946
      ],
      "op": "JUMP",
      "path": "176"
    },
    "151": {
      "fn": null,
      "offset": [
        329,
        6946
      ],
      "op": "JUMPDEST",
      "path": "176"
    },
    "152": {
      "fn": null,
      "offset": [
        329,
        6946
      ],
      "op": "DUP1",
      "path": "176"
    },
    "153": {
      "fn": null,
      "offset": [
        329,
        6946
      ],
      "op": "PUSH4",
      "path": "176",
      "value": "0x495621FB"
    },
    "158": {
      "fn": null,
      "offset": [
        329,
        6946
      ],
      "op": "GT",
      "path": "176"
    },
    "159": {
      "fn": null,
      "offset": [
        329,
        6946
      ],
      "op": "PUSH2",
      "path": "176",
      "value": "0xD3"
    },
    "162": {
      "fn": null,
      "offset": [
        329,
        6946
      ],
      "op": "JUMPI",
      "path": "176"
    },
    "163": {
      "fn": null,
      "offset": [
        329,
        6946
      ],
      "op": "DUP1",
      "path": "176"
    },
    "164": {
      "fn": null,
      "offset": [
        329,
        6946
      ],
      "op": "PUSH4",
      "path": "176",
      "value": "0x495621FB"
    },
    "169": {
      "fn": null,
      "offset": [
        329,
        6946
      ],
      "op": "EQ",
      "path": "176"
    },
    "170": {
      "fn": null,
      "offset": [
        329,
        6946
      ],
      "op": "PUSH2",
      "path": "176",
      "value": "0x158"
    },
    "173": {
      "fn": null,
      "offset": [
        329,
        6946
      ],
      "op": "JUMPI",
      "path": "176"
    },
    "174": {
      "fn": null,
      "offset": [
        329,
        6946
      ],
      "op": "DUP1",
      "path": "176"
    },
    "175": {
      "fn": null,
      "offset": [
        329,
        6946
      ],
      "op": "PUSH4",
      "path": "176",
      "value": "0x55AB98EE"
    },
    "180": {
      "fn": null,
      "offset": [
        329,
        6946
      ],
      "op": "EQ",
      "path": "176"
    },
    "181": {
      "fn": null,
      "offset": [
        329,
        6946
      ],
      "op": "PUSH2",
      "path": "176",
      "value": "0x16B"
    },
    "184": {
      "fn": null,
      "offset": [
        329,
        6946
      ],
      "op": "JUMPI",
      "path": "176"
    },
    "185": {
      "fn": null,
      "offset": [
        329,
        6946
      ],
      "op": "DUP1",
      "path": "176"
    },
    "186": {
      "fn": null,
      "offset": [
        329,
        6946
      ],
      "op": "PUSH4",
      "path": "176",
      "value": "0x6437388A"
    },
    "191": {
      "fn": null,
      "offset": [
        329,
        6946
      ],
      "op": "EQ",
      "path": "176"
    },
    "192": {
      "fn": null,
      "offset": [
        329,
        6946
      ],
      "op": "PUSH2",
      "path": "176",
      "value": "0x17E"
    },
    "195": {
      "fn": null,
      "offset": [
        329,
        6946
      ],
      "op": "JUMPI",
      "path": "176"
    },
    "196": {
      "fn": null,
      "offset": [
        329,
        6946
      ],
      "op": "DUP1",
      "path": "176"
    },
    "197": {
      "fn": null,
      "offset": [
        329,
        6946
      ],
      "op": "PUSH4",
      "path": "176",
      "value": "0x67E828BF"
    },
    "202": {
      "fn": null,
      "offset": [
        329,
        6946
      ],
      "op": "EQ",
      "path": "176"
    },
    "203": {
      "fn": null,
      "offset": [
        329,
        6946
      ],
      "op": "PUSH2",
      "path": "176",
      "value": "0x193"
    },
    "206": {
      "fn": null,
      "offset": [
        329,
        6946
      ],
      "op": "JUMPI",
      "path": "176"
    },
    "207": {
      "fn": null,
      "offset": [
        329,
        6946
      ],
      "op": "PUSH2",
      "path": "176",
      "value": "0xF5"
    },
    "210": {
      "fn": null,
      "offset": [
        329,
        6946
      ],
      "op": "JUMP",
      "path": "176"
    },
    "211": {
      "fn": null,
      "offset": [
        329,
        6946
      ],
      "op": "JUMPDEST",
      "path": "176"
    },
    "212": {
      "fn": null,
      "offset": [
        329,
        6946
      ],
      "op": "DUP1",
      "path": "176"
    },
    "213": {
      "fn": null,
      "offset": [
        329,
        6946
      ],
      "op": "PUSH4",
      "path": "176",
      "value": "0xC340A24"
    },
    "218": {
      "fn": null,
      "offset": [
        329,
        6946
      ],
      "op": "EQ",
      "path": "176"
    },
    "219": {
      "fn": null,
      "offset": [
        329,
        6946
      ],
      "op": "PUSH2",
      "path": "176",
      "value": "0xFA"
    },
    "222": {
      "fn": null,
      "offset": [
        329,
        6946
      ],
      "op": "JUMPI",
      "path": "176"
    },
    "223": {
      "fn": null,
      "offset": [
        329,
        6946
      ],
      "op": "DUP1",
      "path": "176"
    },
    "224": {
      "fn": null,
      "offset": [
        329,
        6946
      ],
      "op": "PUSH4",
      "path": "176",
      "value": "0x1E3E3518"
    },
    "229": {
      "fn": null,
      "offset": [
        329,
        6946
      ],
      "op": "EQ",
      "path": "176"
    },
    "230": {
      "fn": null,
      "offset": [
        329,
        6946
      ],
      "op": "PUSH2",
      "path": "176",
      "value": "0x118"
    },
    "233": {
      "fn": null,
      "offset": [
        329,
        6946
      ],
      "op": "JUMPI",
      "path": "176"
    },
    "234": {
      "fn": null,
      "offset": [
        329,
        6946
      ],
      "op": "DUP1",
      "path": "176"
    },
    "235": {
      "fn": null,
      "offset": [
        329,
        6946
      ],
      "op": "PUSH4",
      "path": "176",
      "value": "0x2461A409"
    },
    "240": {
      "fn": null,
      "offset": [
        329,
        6946
      ],
      "op": "EQ",
      "path": "176"
    },
    "241": {
      "fn": null,
      "offset": [
        329,
        6946
      ],
      "op": "PUSH2",
      "path": "176",
      "value": "0x138"
    },
    "244": {
      "fn": null,
      "offset": [
        329,
        6946
      ],
      "op": "JUMPI",
      "path": "176"
    },
    "245": {
      "fn": null,
      "offset": [
        329,
        6946
      ],
      "op": "JUMPDEST",
      "path": "176"
    },
    "246": {
      "fn": null,
      "offset": [
        329,
        6946
      ],
      "op": "PUSH1",
      "path": "176",
      "value": "0x0"
    },
    "248": {
      "fn": null,
      "offset": [
        329,
        6946
      ],
      "op": "DUP1",
      "path": "176"
    },
    "249": {
      "first_revert": true,
      "fn": null,
      "offset": [
        329,
        6946
      ],
      "op": "REVERT",
      "path": "176"
    },
    "250": {
      "offset": [
        321,
        344
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "251": {
      "fn": null,
      "offset": [
        321,
        344
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x102"
    },
    "254": {
      "fn": null,
      "offset": [
        321,
        344
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x22C"
    },
    "257": {
      "fn": null,
      "jump": "i",
      "offset": [
        321,
        344
      ],
      "op": "JUMP",
      "path": "22"
    },
    "258": {
      "fn": null,
      "offset": [
        321,
        344
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "259": {
      "fn": null,
      "offset": [
        321,
        344
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "261": {
      "fn": null,
      "offset": [
        321,
        344
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "262": {
      "fn": null,
      "offset": [
        321,
        344
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x10F"
    },
    "265": {
      "fn": null,
      "offset": [
        321,
        344
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "266": {
      "fn": null,
      "offset": [
        321,
        344
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "267": {
      "fn": null,
      "offset": [
        321,
        344
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1508"
    },
    "270": {
      "fn": null,
      "jump": "i",
      "offset": [
        321,
        344
      ],
      "op": "JUMP",
      "path": "22"
    },
    "271": {
      "fn": null,
      "offset": [
        321,
        344
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "272": {
      "fn": null,
      "offset": [
        321,
        344
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "274": {
      "fn": null,
      "offset": [
        321,
        344
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "275": {
      "fn": null,
      "offset": [
        321,
        344
      ],
      "op": "DUP1",
      "path": "22"
    },
    "276": {
      "fn": null,
      "offset": [
        321,
        344
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "277": {
      "fn": null,
      "offset": [
        321,
        344
      ],
      "op": "SUB",
      "path": "22"
    },
    "278": {
      "fn": null,
      "offset": [
        321,
        344
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "279": {
      "fn": null,
      "offset": [
        321,
        344
      ],
      "op": "RETURN",
      "path": "22"
    },
    "280": {
      "fn": "ProxyOracle.asCELOBorrow",
      "offset": [
        6214,
        6599
      ],
      "op": "JUMPDEST",
      "path": "176"
    },
    "281": {
      "fn": "ProxyOracle.asCELOBorrow",
      "offset": [
        6214,
        6599
      ],
      "op": "PUSH2",
      "path": "176",
      "value": "0x12B"
    },
    "284": {
      "fn": "ProxyOracle.asCELOBorrow",
      "offset": [
        6214,
        6599
      ],
      "op": "PUSH2",
      "path": "176",
      "value": "0x126"
    },
    "287": {
      "fn": "ProxyOracle.asCELOBorrow",
      "offset": [
        6214,
        6599
      ],
      "op": "CALLDATASIZE",
      "path": "176"
    },
    "288": {
      "fn": "ProxyOracle.asCELOBorrow",
      "offset": [
        6214,
        6599
      ],
      "op": "PUSH1",
      "path": "176",
      "value": "0x4"
    },
    "290": {
      "fn": "ProxyOracle.asCELOBorrow",
      "offset": [
        6214,
        6599
      ],
      "op": "PUSH2",
      "path": "176",
      "value": "0x12D7"
    },
    "293": {
      "fn": "ProxyOracle.asCELOBorrow",
      "jump": "i",
      "offset": [
        6214,
        6599
      ],
      "op": "JUMP",
      "path": "176"
    },
    "294": {
      "fn": "ProxyOracle.asCELOBorrow",
      "offset": [
        6214,
        6599
      ],
      "op": "JUMPDEST",
      "path": "176"
    },
    "295": {
      "fn": "ProxyOracle.asCELOBorrow",
      "offset": [
        6214,
        6599
      ],
      "op": "PUSH2",
      "path": "176",
      "value": "0x241"
    },
    "298": {
      "fn": "ProxyOracle.asCELOBorrow",
      "jump": "i",
      "offset": [
        6214,
        6599
      ],
      "op": "JUMP",
      "path": "176"
    },
    "299": {
      "fn": "ProxyOracle.asCELOBorrow",
      "offset": [
        6214,
        6599
      ],
      "op": "JUMPDEST",
      "path": "176"
    },
    "300": {
      "fn": "ProxyOracle.asCELOBorrow",
      "offset": [
        6214,
        6599
      ],
      "op": "PUSH1",
      "path": "176",
      "value": "0x40"
    },
    "302": {
      "fn": "ProxyOracle.asCELOBorrow",
      "offset": [
        6214,
        6599
      ],
      "op": "MLOAD",
      "path": "176"
    },
    "303": {
      "fn": "ProxyOracle.asCELOBorrow",
      "offset": [
        6214,
        6599
      ],
      "op": "PUSH2",
      "path": "176",
      "value": "0x10F"
    },
    "306": {
      "fn": "ProxyOracle.asCELOBorrow",
      "offset": [
        6214,
        6599
      ],
      "op": "SWAP2",
      "path": "176"
    },
    "307": {
      "fn": "ProxyOracle.asCELOBorrow",
      "offset": [
        6214,
        6599
      ],
      "op": "SWAP1",
      "path": "176"
    },
    "308": {
      "fn": "ProxyOracle.asCELOBorrow",
      "offset": [
        6214,
        6599
      ],
      "op": "PUSH2",
      "path": "176",
      "value": "0x184C"
    },
    "311": {
      "fn": "ProxyOracle.asCELOBorrow",
      "jump": "i",
      "offset": [
        6214,
        6599
      ],
      "op": "JUMP",
      "path": "176"
    },
    "312": {
      "fn": "ProxyOracle.supportWrappedToken",
      "offset": [
        3359,
        3638
      ],
      "op": "JUMPDEST",
      "path": "176"
    },
    "313": {
      "fn": "ProxyOracle.supportWrappedToken",
      "offset": [
        3359,
        3638
      ],
      "op": "PUSH2",
      "path": "176",
      "value": "0x14B"
    },
    "316": {
      "fn": "ProxyOracle.supportWrappedToken",
      "offset": [
        3359,
        3638
      ],
      "op": "PUSH2",
      "path": "176",
      "value": "0x146"
    },
    "319": {
      "fn": "ProxyOracle.supportWrappedToken",
      "offset": [
        3359,
        3638
      ],
      "op": "CALLDATASIZE",
      "path": "176"
    },
    "320": {
      "fn": "ProxyOracle.supportWrappedToken",
      "offset": [
        3359,
        3638
      ],
      "op": "PUSH1",
      "path": "176",
      "value": "0x4"
    },
    "322": {
      "fn": "ProxyOracle.supportWrappedToken",
      "offset": [
        3359,
        3638
      ],
      "op": "PUSH2",
      "path": "176",
      "value": "0x12AC"
    },
    "325": {
      "fn": "ProxyOracle.supportWrappedToken",
      "jump": "i",
      "offset": [
        3359,
        3638
      ],
      "op": "JUMP",
      "path": "176"
    },
    "326": {
      "fn": "ProxyOracle.supportWrappedToken",
      "offset": [
        3359,
        3638
      ],
      "op": "JUMPDEST",
      "path": "176"
    },
    "327": {
      "fn": "ProxyOracle.supportWrappedToken",
      "offset": [
        3359,
        3638
      ],
      "op": "PUSH2",
      "path": "176",
      "value": "0x3A2"
    },
    "330": {
      "fn": "ProxyOracle.supportWrappedToken",
      "jump": "i",
      "offset": [
        3359,
        3638
      ],
      "op": "JUMP",
      "path": "176"
    },
    "331": {
      "fn": "ProxyOracle.supportWrappedToken",
      "offset": [
        3359,
        3638
      ],
      "op": "JUMPDEST",
      "path": "176"
    },
    "332": {
      "fn": "ProxyOracle.supportWrappedToken",
      "offset": [
        3359,
        3638
      ],
      "op": "PUSH1",
      "path": "176",
      "value": "0x40"
    },
    "334": {
      "fn": "ProxyOracle.supportWrappedToken",
      "offset": [
        3359,
        3638
      ],
      "op": "MLOAD",
      "path": "176"
    },
    "335": {
      "fn": "ProxyOracle.supportWrappedToken",
      "offset": [
        3359,
        3638
      ],
      "op": "PUSH2",
      "path": "176",
      "value": "0x10F"
    },
    "338": {
      "fn": "ProxyOracle.supportWrappedToken",
      "offset": [
        3359,
        3638
      ],
      "op": "SWAP2",
      "path": "176"
    },
    "339": {
      "fn": "ProxyOracle.supportWrappedToken",
      "offset": [
        3359,
        3638
      ],
      "op": "SWAP1",
      "path": "176"
    },
    "340": {
      "fn": "ProxyOracle.supportWrappedToken",
      "offset": [
        3359,
        3638
      ],
      "op": "PUSH2",
      "path": "176",
      "value": "0x151C"
    },
    "343": {
      "fn": "ProxyOracle.supportWrappedToken",
      "jump": "i",
      "offset": [
        3359,
        3638
      ],
      "op": "JUMP",
      "path": "176"
    },
    "344": {
      "offset": [
        1196,
        1244
      ],
      "op": "JUMPDEST",
      "path": "176"
    },
    "345": {
      "fn": "ProxyOracle.supportWrappedToken",
      "offset": [
        1196,
        1244
      ],
      "op": "PUSH2",
      "path": "176",
      "value": "0x14B"
    },
    "348": {
      "fn": "ProxyOracle.supportWrappedToken",
      "offset": [
        1196,
        1244
      ],
      "op": "PUSH2",
      "path": "176",
      "value": "0x166"
    },
    "351": {
      "fn": "ProxyOracle.supportWrappedToken",
      "offset": [
        1196,
        1244
      ],
      "op": "CALLDATASIZE",
      "path": "176"
    },
    "352": {
      "fn": "ProxyOracle.supportWrappedToken",
      "offset": [
        1196,
        1244
      ],
      "op": "PUSH1",
      "path": "176",
      "value": "0x4"
    },
    "354": {
      "fn": "ProxyOracle.supportWrappedToken",
      "offset": [
        1196,
        1244
      ],
      "op": "PUSH2",
      "path": "176",
      "value": "0x122F"
    },
    "357": {
      "fn": "ProxyOracle.supportWrappedToken",
      "jump": "i",
      "offset": [
        1196,
        1244
      ],
      "op": "JUMP",
      "path": "176"
    },
    "358": {
      "fn": "ProxyOracle.supportWrappedToken",
      "offset": [
        1196,
        1244
      ],
      "op": "JUMPDEST",
      "path": "176"
    },
    "359": {
      "fn": "ProxyOracle.supportWrappedToken",
      "offset": [
        1196,
        1244
      ],
      "op": "PUSH2",
      "path": "176",
      "value": "0x478"
    },
    "362": {
      "fn": "ProxyOracle.supportWrappedToken",
      "jump": "i",
      "offset": [
        1196,
        1244
      ],
      "op": "JUMP",
      "path": "176"
    },
    "363": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5232,
        5936
      ],
      "op": "JUMPDEST",
      "path": "176"
    },
    "364": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5232,
        5936
      ],
      "op": "PUSH2",
      "path": "176",
      "value": "0x12B"
    },
    "367": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5232,
        5936
      ],
      "op": "PUSH2",
      "path": "176",
      "value": "0x179"
    },
    "370": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5232,
        5936
      ],
      "op": "CALLDATASIZE",
      "path": "176"
    },
    "371": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5232,
        5936
      ],
      "op": "PUSH1",
      "path": "176",
      "value": "0x4"
    },
    "373": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5232,
        5936
      ],
      "op": "PUSH2",
      "path": "176",
      "value": "0x1318"
    },
    "376": {
      "fn": "ProxyOracle.asCELOCollateral",
      "jump": "i",
      "offset": [
        5232,
        5936
      ],
      "op": "JUMP",
      "path": "176"
    },
    "377": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5232,
        5936
      ],
      "op": "JUMPDEST",
      "path": "176"
    },
    "378": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5232,
        5936
      ],
      "op": "PUSH2",
      "path": "176",
      "value": "0x48D"
    },
    "381": {
      "fn": "ProxyOracle.asCELOCollateral",
      "jump": "i",
      "offset": [
        5232,
        5936
      ],
      "op": "JUMP",
      "path": "176"
    },
    "382": {
      "fn": "ProxyOracle.unsetTokenFactors",
      "offset": [
        2535,
        2750
      ],
      "op": "JUMPDEST",
      "path": "176"
    },
    "383": {
      "fn": "ProxyOracle.unsetTokenFactors",
      "offset": [
        2535,
        2750
      ],
      "op": "PUSH2",
      "path": "176",
      "value": "0x191"
    },
    "386": {
      "fn": "ProxyOracle.unsetTokenFactors",
      "offset": [
        2535,
        2750
      ],
      "op": "PUSH2",
      "path": "176",
      "value": "0x18C"
    },
    "389": {
      "fn": "ProxyOracle.unsetTokenFactors",
      "offset": [
        2535,
        2750
      ],
      "op": "CALLDATASIZE",
      "path": "176"
    },
    "390": {
      "fn": "ProxyOracle.unsetTokenFactors",
      "offset": [
        2535,
        2750
      ],
      "op": "PUSH1",
      "path": "176",
      "value": "0x4"
    },
    "392": {
      "fn": "ProxyOracle.unsetTokenFactors",
      "offset": [
        2535,
        2750
      ],
      "op": "PUSH2",
      "path": "176",
      "value": "0x1361"
    },
    "395": {
      "fn": "ProxyOracle.unsetTokenFactors",
      "jump": "i",
      "offset": [
        2535,
        2750
      ],
      "op": "JUMP",
      "path": "176"
    },
    "396": {
      "fn": "ProxyOracle.unsetTokenFactors",
      "offset": [
        2535,
        2750
      ],
      "op": "JUMPDEST",
      "path": "176"
    },
    "397": {
      "fn": "ProxyOracle.unsetTokenFactors",
      "offset": [
        2535,
        2750
      ],
      "op": "PUSH2",
      "path": "176",
      "value": "0x6DA"
    },
    "400": {
      "fn": "ProxyOracle.unsetTokenFactors",
      "jump": "i",
      "offset": [
        2535,
        2750
      ],
      "op": "JUMP",
      "path": "176"
    },
    "401": {
      "fn": "ProxyOracle.unsetTokenFactors",
      "offset": [
        2535,
        2750
      ],
      "op": "JUMPDEST",
      "path": "176"
    },
    "402": {
      "fn": "ProxyOracle.unsetTokenFactors",
      "offset": [
        2535,
        2750
      ],
      "op": "STOP",
      "path": "176"
    },
    "403": {
      "offset": [
        1033,
        1068
      ],
      "op": "JUMPDEST",
      "path": "176"
    },
    "404": {
      "fn": "ProxyOracle.unsetTokenFactors",
      "offset": [
        1033,
        1068
      ],
      "op": "PUSH2",
      "path": "176",
      "value": "0x102"
    },
    "407": {
      "fn": "ProxyOracle.unsetTokenFactors",
      "offset": [
        1033,
        1068
      ],
      "op": "PUSH2",
      "path": "176",
      "value": "0x7AD"
    },
    "410": {
      "fn": "ProxyOracle.unsetTokenFactors",
      "jump": "i",
      "offset": [
        1033,
        1068
      ],
      "op": "JUMP",
      "path": "176"
    },
    "411": {
      "fn": "ProxyOracle.setWhitelistERC1155",
      "offset": [
        2917,
        3145
      ],
      "op": "JUMPDEST",
      "path": "176"
    },
    "412": {
      "fn": "ProxyOracle.setWhitelistERC1155",
      "offset": [
        2917,
        3145
      ],
      "op": "PUSH2",
      "path": "176",
      "value": "0x191"
    },
    "415": {
      "fn": "ProxyOracle.setWhitelistERC1155",
      "offset": [
        2917,
        3145
      ],
      "op": "PUSH2",
      "path": "176",
      "value": "0x1A9"
    },
    "418": {
      "fn": "ProxyOracle.setWhitelistERC1155",
      "offset": [
        2917,
        3145
      ],
      "op": "CALLDATASIZE",
      "path": "176"
    },
    "419": {
      "fn": "ProxyOracle.setWhitelistERC1155",
      "offset": [
        2917,
        3145
      ],
      "op": "PUSH1",
      "path": "176",
      "value": "0x4"
    },
    "421": {
      "fn": "ProxyOracle.setWhitelistERC1155",
      "offset": [
        2917,
        3145
      ],
      "op": "PUSH2",
      "path": "176",
      "value": "0x149C"
    },
    "424": {
      "fn": "ProxyOracle.setWhitelistERC1155",
      "jump": "i",
      "offset": [
        2917,
        3145
      ],
      "op": "JUMP",
      "path": "176"
    },
    "425": {
      "fn": "ProxyOracle.setWhitelistERC1155",
      "offset": [
        2917,
        3145
      ],
      "op": "JUMPDEST",
      "path": "176"
    },
    "426": {
      "fn": "ProxyOracle.setWhitelistERC1155",
      "offset": [
        2917,
        3145
      ],
      "op": "PUSH2",
      "path": "176",
      "value": "0x7D1"
    },
    "429": {
      "fn": "ProxyOracle.setWhitelistERC1155",
      "jump": "i",
      "offset": [
        2917,
        3145
      ],
      "op": "JUMP",
      "path": "176"
    },
    "430": {
      "offset": [
        1094,
        1146
      ],
      "op": "JUMPDEST",
      "path": "176"
    },
    "431": {
      "fn": "ProxyOracle.setWhitelistERC1155",
      "offset": [
        1094,
        1146
      ],
      "op": "PUSH2",
      "path": "176",
      "value": "0x1C1"
    },
    "434": {
      "fn": "ProxyOracle.setWhitelistERC1155",
      "offset": [
        1094,
        1146
      ],
      "op": "PUSH2",
      "path": "176",
      "value": "0x1BC"
    },
    "437": {
      "fn": "ProxyOracle.setWhitelistERC1155",
      "offset": [
        1094,
        1146
      ],
      "op": "CALLDATASIZE",
      "path": "176"
    },
    "438": {
      "fn": "ProxyOracle.setWhitelistERC1155",
      "offset": [
        1094,
        1146
      ],
      "op": "PUSH1",
      "path": "176",
      "value": "0x4"
    },
    "440": {
      "fn": "ProxyOracle.setWhitelistERC1155",
      "offset": [
        1094,
        1146
      ],
      "op": "PUSH2",
      "path": "176",
      "value": "0x122F"
    },
    "443": {
      "fn": "ProxyOracle.setWhitelistERC1155",
      "jump": "i",
      "offset": [
        1094,
        1146
      ],
      "op": "JUMP",
      "path": "176"
    },
    "444": {
      "fn": "ProxyOracle.setWhitelistERC1155",
      "offset": [
        1094,
        1146
      ],
      "op": "JUMPDEST",
      "path": "176"
    },
    "445": {
      "fn": "ProxyOracle.setWhitelistERC1155",
      "offset": [
        1094,
        1146
      ],
      "op": "PUSH2",
      "path": "176",
      "value": "0x8BE"
    },
    "448": {
      "fn": "ProxyOracle.setWhitelistERC1155",
      "jump": "i",
      "offset": [
        1094,
        1146
      ],
      "op": "JUMP",
      "path": "176"
    },
    "449": {
      "fn": "ProxyOracle.setWhitelistERC1155",
      "offset": [
        1094,
        1146
      ],
      "op": "JUMPDEST",
      "path": "176"
    },
    "450": {
      "fn": "ProxyOracle.setWhitelistERC1155",
      "offset": [
        1094,
        1146
      ],
      "op": "PUSH1",
      "path": "176",
      "value": "0x40"
    },
    "452": {
      "fn": "ProxyOracle.setWhitelistERC1155",
      "offset": [
        1094,
        1146
      ],
      "op": "MLOAD",
      "path": "176"
    },
    "453": {
      "fn": "ProxyOracle.setWhitelistERC1155",
      "offset": [
        1094,
        1146
      ],
      "op": "PUSH2",
      "path": "176",
      "value": "0x10F"
    },
    "456": {
      "fn": "ProxyOracle.setWhitelistERC1155",
      "offset": [
        1094,
        1146
      ],
      "op": "SWAP4",
      "path": "176"
    },
    "457": {
      "fn": "ProxyOracle.setWhitelistERC1155",
      "offset": [
        1094,
        1146
      ],
      "op": "SWAP3",
      "path": "176"
    },
    "458": {
      "fn": "ProxyOracle.setWhitelistERC1155",
      "offset": [
        1094,
        1146
      ],
      "op": "SWAP2",
      "path": "176"
    },
    "459": {
      "fn": "ProxyOracle.setWhitelistERC1155",
      "offset": [
        1094,
        1146
      ],
      "op": "SWAP1",
      "path": "176"
    },
    "460": {
      "fn": "ProxyOracle.setWhitelistERC1155",
      "offset": [
        1094,
        1146
      ],
      "op": "PUSH2",
      "path": "176",
      "value": "0x182E"
    },
    "463": {
      "fn": "ProxyOracle.setWhitelistERC1155",
      "jump": "i",
      "offset": [
        1094,
        1146
      ],
      "op": "JUMP",
      "path": "176"
    },
    "464": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        3909,
        4889
      ],
      "op": "JUMPDEST",
      "path": "176"
    },
    "465": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        3909,
        4889
      ],
      "op": "PUSH2",
      "path": "176",
      "value": "0x12B"
    },
    "468": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        3909,
        4889
      ],
      "op": "PUSH2",
      "path": "176",
      "value": "0x1DE"
    },
    "471": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        3909,
        4889
      ],
      "op": "CALLDATASIZE",
      "path": "176"
    },
    "472": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        3909,
        4889
      ],
      "op": "PUSH1",
      "path": "176",
      "value": "0x4"
    },
    "474": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        3909,
        4889
      ],
      "op": "PUSH2",
      "path": "176",
      "value": "0x1267"
    },
    "477": {
      "fn": "ProxyOracle.convertForLiquidation",
      "jump": "i",
      "offset": [
        3909,
        4889
      ],
      "op": "JUMP",
      "path": "176"
    },
    "478": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        3909,
        4889
      ],
      "op": "JUMPDEST",
      "path": "176"
    },
    "479": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        3909,
        4889
      ],
      "op": "PUSH2",
      "path": "176",
      "value": "0x8E9"
    },
    "482": {
      "fn": "ProxyOracle.convertForLiquidation",
      "jump": "i",
      "offset": [
        3909,
        4889
      ],
      "op": "JUMP",
      "path": "176"
    },
    "483": {
      "offset": [
        373,
        403
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "484": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        373,
        403
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x102"
    },
    "487": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        373,
        403
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xCB8"
    },
    "490": {
      "fn": "ProxyOracle.convertForLiquidation",
      "jump": "i",
      "offset": [
        373,
        403
      ],
      "op": "JUMP",
      "path": "22"
    },
    "491": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1234,
        1444
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "492": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1234,
        1444
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x191"
    },
    "495": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1234,
        1444
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xCC7"
    },
    "498": {
      "fn": "Governable.acceptGovernor",
      "jump": "i",
      "offset": [
        1234,
        1444
      ],
      "op": "JUMP",
      "path": "22"
    },
    "499": {
      "fn": "ProxyOracle.support",
      "offset": [
        6714,
        6944
      ],
      "op": "JUMPDEST",
      "path": "176"
    },
    "500": {
      "fn": "ProxyOracle.support",
      "offset": [
        6714,
        6944
      ],
      "op": "PUSH2",
      "path": "176",
      "value": "0x14B"
    },
    "503": {
      "fn": "ProxyOracle.support",
      "offset": [
        6714,
        6944
      ],
      "op": "PUSH2",
      "path": "176",
      "value": "0x201"
    },
    "506": {
      "fn": "ProxyOracle.support",
      "offset": [
        6714,
        6944
      ],
      "op": "CALLDATASIZE",
      "path": "176"
    },
    "507": {
      "fn": "ProxyOracle.support",
      "offset": [
        6714,
        6944
      ],
      "op": "PUSH1",
      "path": "176",
      "value": "0x4"
    },
    "509": {
      "fn": "ProxyOracle.support",
      "offset": [
        6714,
        6944
      ],
      "op": "PUSH2",
      "path": "176",
      "value": "0x122F"
    },
    "512": {
      "fn": "ProxyOracle.support",
      "jump": "i",
      "offset": [
        6714,
        6944
      ],
      "op": "JUMP",
      "path": "176"
    },
    "513": {
      "fn": "ProxyOracle.support",
      "offset": [
        6714,
        6944
      ],
      "op": "JUMPDEST",
      "path": "176"
    },
    "514": {
      "fn": "ProxyOracle.support",
      "offset": [
        6714,
        6944
      ],
      "op": "PUSH2",
      "path": "176",
      "value": "0xD57"
    },
    "517": {
      "fn": "ProxyOracle.support",
      "jump": "i",
      "offset": [
        6714,
        6944
      ],
      "op": "JUMP",
      "path": "176"
    },
    "518": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        1640,
        2413
      ],
      "op": "JUMPDEST",
      "path": "176"
    },
    "519": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        1640,
        2413
      ],
      "op": "PUSH2",
      "path": "176",
      "value": "0x191"
    },
    "522": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        1640,
        2413
      ],
      "op": "PUSH2",
      "path": "176",
      "value": "0x214"
    },
    "525": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        1640,
        2413
      ],
      "op": "CALLDATASIZE",
      "path": "176"
    },
    "526": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        1640,
        2413
      ],
      "op": "PUSH1",
      "path": "176",
      "value": "0x4"
    },
    "528": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        1640,
        2413
      ],
      "op": "PUSH2",
      "path": "176",
      "value": "0x139C"
    },
    "531": {
      "fn": "ProxyOracle.setTokenFactors",
      "jump": "i",
      "offset": [
        1640,
        2413
      ],
      "op": "JUMP",
      "path": "176"
    },
    "532": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        1640,
        2413
      ],
      "op": "JUMPDEST",
      "path": "176"
    },
    "533": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        1640,
        2413
      ],
      "op": "PUSH2",
      "path": "176",
      "value": "0xE34"
    },
    "536": {
      "fn": "ProxyOracle.setTokenFactors",
      "jump": "i",
      "offset": [
        1640,
        2413
      ],
      "op": "JUMP",
      "path": "176"
    },
    "537": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        981,
        1144
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "538": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        981,
        1144
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x191"
    },
    "541": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        981,
        1144
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x227"
    },
    "544": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        981,
        1144
      ],
      "op": "CALLDATASIZE",
      "path": "22"
    },
    "545": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        981,
        1144
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "547": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        981,
        1144
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x122F"
    },
    "550": {
      "fn": "Governable.setPendingGovernor",
      "jump": "i",
      "offset": [
        981,
        1144
      ],
      "op": "JUMP",
      "path": "22"
    },
    "551": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        981,
        1144
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "552": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        981,
        1144
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1087"
    },
    "555": {
      "fn": "Governable.setPendingGovernor",
      "jump": "i",
      "offset": [
        981,
        1144
      ],
      "op": "JUMP",
      "path": "22"
    },
    "556": {
      "offset": [
        321,
        344
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "557": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        321,
        344
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "559": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        321,
        344
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "560": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        321,
        344
      ],
      "op": "PUSH3",
      "path": "22",
      "value": "0x10000"
    },
    "564": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        321,
        344
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "565": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        321,
        344
      ],
      "op": "DIV",
      "path": "22"
    },
    "566": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "568": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "570": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "572": {
      "op": "SHL"
    },
    "573": {
      "op": "SUB"
    },
    "574": {
      "offset": [
        321,
        344
      ],
      "op": "AND",
      "path": "22"
    },
    "575": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        321,
        344
      ],
      "op": "DUP2",
      "path": "22"
    },
    "576": {
      "fn": "Governable.setPendingGovernor",
      "jump": "o",
      "offset": [
        321,
        344
      ],
      "op": "JUMP",
      "path": "22"
    },
    "577": {
      "fn": "ProxyOracle.asCELOBorrow",
      "offset": [
        6214,
        6599
      ],
      "op": "JUMPDEST",
      "path": "176"
    },
    "578": {
      "fn": "ProxyOracle.asCELOBorrow",
      "offset": [
        6327,
        6331
      ],
      "op": "PUSH1",
      "path": "176",
      "value": "0x0"
    },
    "580": {
      "fn": "ProxyOracle.asCELOBorrow",
      "offset": [
        6339,
        6370
      ],
      "op": "PUSH2",
      "path": "176",
      "value": "0x24B"
    },
    "583": {
      "fn": "ProxyOracle.asCELOBorrow",
      "offset": [
        6339,
        6370
      ],
      "op": "PUSH2",
      "path": "176",
      "value": "0x1186"
    },
    "586": {
      "fn": "ProxyOracle.asCELOBorrow",
      "jump": "i",
      "offset": [
        6339,
        6370
      ],
      "op": "JUMP",
      "path": "176"
    },
    "587": {
      "fn": "ProxyOracle.asCELOBorrow",
      "offset": [
        6339,
        6370
      ],
      "op": "JUMPDEST",
      "path": "176"
    },
    "588": {
      "op": "POP"
    },
    "589": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "591": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "593": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "595": {
      "op": "SHL"
    },
    "596": {
      "op": "SUB"
    },
    "597": {
      "fn": "ProxyOracle.asCELOBorrow",
      "offset": [
        6373,
        6392
      ],
      "op": "DUP5",
      "path": "176"
    },
    "598": {
      "fn": "ProxyOracle.asCELOBorrow",
      "offset": [
        6373,
        6392
      ],
      "op": "AND",
      "path": "176"
    },
    "599": {
      "fn": "ProxyOracle.asCELOBorrow",
      "offset": [
        6373,
        6392
      ],
      "op": "PUSH1",
      "path": "176",
      "value": "0x0"
    },
    "601": {
      "fn": "ProxyOracle.asCELOBorrow",
      "offset": [
        6373,
        6392
      ],
      "op": "SWAP1",
      "path": "176"
    },
    "602": {
      "fn": "ProxyOracle.asCELOBorrow",
      "offset": [
        6373,
        6392
      ],
      "op": "DUP2",
      "path": "176"
    },
    "603": {
      "fn": "ProxyOracle.asCELOBorrow",
      "offset": [
        6373,
        6392
      ],
      "op": "MSTORE",
      "path": "176"
    },
    "604": {
      "fn": "ProxyOracle.asCELOBorrow",
      "offset": [
        6373,
        6385
      ],
      "op": "PUSH1",
      "path": "176",
      "value": "0x42"
    },
    "606": {
      "fn": "ProxyOracle.asCELOBorrow",
      "offset": [
        6373,
        6392
      ],
      "op": "PUSH1",
      "path": "176",
      "value": "0x20"
    },
    "608": {
      "fn": "ProxyOracle.asCELOBorrow",
      "offset": [
        6373,
        6392
      ],
      "op": "SWAP1",
      "path": "176"
    },
    "609": {
      "fn": "ProxyOracle.asCELOBorrow",
      "offset": [
        6373,
        6392
      ],
      "op": "DUP2",
      "path": "176"
    },
    "610": {
      "fn": "ProxyOracle.asCELOBorrow",
      "offset": [
        6373,
        6392
      ],
      "op": "MSTORE",
      "path": "176"
    },
    "611": {
      "fn": "ProxyOracle.asCELOBorrow",
      "offset": [
        6373,
        6392
      ],
      "op": "PUSH1",
      "path": "176",
      "value": "0x40"
    },
    "613": {
      "fn": "ProxyOracle.asCELOBorrow",
      "offset": [
        6373,
        6392
      ],
      "op": "SWAP2",
      "path": "176"
    },
    "614": {
      "fn": "ProxyOracle.asCELOBorrow",
      "offset": [
        6373,
        6392
      ],
      "op": "DUP3",
      "path": "176"
    },
    "615": {
      "fn": "ProxyOracle.asCELOBorrow",
      "offset": [
        6373,
        6392
      ],
      "op": "SWAP1",
      "path": "176"
    },
    "616": {
      "fn": "ProxyOracle.asCELOBorrow",
      "offset": [
        6373,
        6392
      ],
      "op": "KECCAK256",
      "path": "176"
    },
    "617": {
      "fn": "ProxyOracle.asCELOBorrow",
      "offset": [
        6339,
        6392
      ],
      "op": "DUP3",
      "path": "176"
    },
    "618": {
      "fn": "ProxyOracle.asCELOBorrow",
      "offset": [
        6339,
        6392
      ],
      "op": "MLOAD",
      "path": "176"
    },
    "619": {
      "fn": "ProxyOracle.asCELOBorrow",
      "offset": [
        6339,
        6392
      ],
      "op": "PUSH1",
      "path": "176",
      "value": "0x60"
    },
    "621": {
      "fn": "ProxyOracle.asCELOBorrow",
      "offset": [
        6339,
        6392
      ],
      "op": "DUP2",
      "path": "176"
    },
    "622": {
      "fn": "ProxyOracle.asCELOBorrow",
      "offset": [
        6339,
        6392
      ],
      "op": "ADD",
      "path": "176"
    },
    "623": {
      "fn": "ProxyOracle.asCELOBorrow",
      "offset": [
        6339,
        6392
      ],
      "op": "DUP5",
      "path": "176"
    },
    "624": {
      "fn": "ProxyOracle.asCELOBorrow",
      "offset": [
        6339,
        6392
      ],
      "op": "MSTORE",
      "path": "176"
    },
    "625": {
      "fn": "ProxyOracle.asCELOBorrow",
      "offset": [
        6339,
        6392
      ],
      "op": "SWAP1",
      "path": "176"
    },
    "626": {
      "fn": "ProxyOracle.asCELOBorrow",
      "offset": [
        6339,
        6392
      ],
      "op": "SLOAD",
      "path": "176"
    },
    "627": {
      "fn": "ProxyOracle.asCELOBorrow",
      "offset": [
        6339,
        6392
      ],
      "op": "PUSH2",
      "path": "176",
      "value": "0xFFFF"
    },
    "630": {
      "fn": "ProxyOracle.asCELOBorrow",
      "offset": [
        6339,
        6392
      ],
      "op": "DUP1",
      "path": "176"
    },
    "631": {
      "fn": "ProxyOracle.asCELOBorrow",
      "offset": [
        6339,
        6392
      ],
      "op": "DUP3",
      "path": "176"
    },
    "632": {
      "fn": "ProxyOracle.asCELOBorrow",
      "offset": [
        6339,
        6392
      ],
      "op": "AND",
      "path": "176"
    },
    "633": {
      "fn": "ProxyOracle.asCELOBorrow",
      "offset": [
        6339,
        6392
      ],
      "op": "DUP4",
      "path": "176"
    },
    "634": {
      "fn": "ProxyOracle.asCELOBorrow",
      "offset": [
        6339,
        6392
      ],
      "op": "MSTORE",
      "path": "176"
    },
    "635": {
      "fn": "ProxyOracle.asCELOBorrow",
      "offset": [
        6339,
        6392
      ],
      "op": "PUSH3",
      "path": "176",
      "value": "0x10000"
    },
    "639": {
      "fn": "ProxyOracle.asCELOBorrow",
      "offset": [
        6339,
        6392
      ],
      "op": "DUP3",
      "path": "176"
    },
    "640": {
      "fn": "ProxyOracle.asCELOBorrow",
      "offset": [
        6339,
        6392
      ],
      "op": "DIV",
      "path": "176"
    },
    "641": {
      "fn": "ProxyOracle.asCELOBorrow",
      "offset": [
        6339,
        6392
      ],
      "op": "DUP2",
      "path": "176"
    },
    "642": {
      "fn": "ProxyOracle.asCELOBorrow",
      "offset": [
        6339,
        6392
      ],
      "op": "AND",
      "path": "176"
    },
    "643": {
      "fn": "ProxyOracle.asCELOBorrow",
      "offset": [
        6339,
        6392
      ],
      "op": "SWAP4",
      "path": "176"
    },
    "644": {
      "fn": "ProxyOracle.asCELOBorrow",
      "offset": [
        6339,
        6392
      ],
      "op": "DUP4",
      "path": "176"
    },
    "645": {
      "fn": "ProxyOracle.asCELOBorrow",
      "offset": [
        6339,
        6392
      ],
      "op": "ADD",
      "path": "176"
    },
    "646": {
      "fn": "ProxyOracle.asCELOBorrow",
      "offset": [
        6339,
        6392
      ],
      "op": "SWAP4",
      "path": "176"
    },
    "647": {
      "fn": "ProxyOracle.asCELOBorrow",
      "offset": [
        6339,
        6392
      ],
      "op": "SWAP1",
      "path": "176"
    },
    "648": {
      "fn": "ProxyOracle.asCELOBorrow",
      "offset": [
        6339,
        6392
      ],
      "op": "SWAP4",
      "path": "176"
    },
    "649": {
      "fn": "ProxyOracle.asCELOBorrow",
      "offset": [
        6339,
        6392
      ],
      "op": "MSTORE",
      "path": "176"
    },
    "650": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "652": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "654": {
      "op": "SHL"
    },
    "655": {
      "fn": "ProxyOracle.asCELOBorrow",
      "offset": [
        6339,
        6392
      ],
      "op": "SWAP1",
      "path": "176"
    },
    "656": {
      "fn": "ProxyOracle.asCELOBorrow",
      "offset": [
        6339,
        6392
      ],
      "op": "DIV",
      "path": "176"
    },
    "657": {
      "fn": "ProxyOracle.asCELOBorrow",
      "offset": [
        6339,
        6392
      ],
      "op": "SWAP1",
      "path": "176"
    },
    "658": {
      "fn": "ProxyOracle.asCELOBorrow",
      "offset": [
        6339,
        6392
      ],
      "op": "SWAP2",
      "path": "176"
    },
    "659": {
      "fn": "ProxyOracle.asCELOBorrow",
      "offset": [
        6339,
        6392
      ],
      "op": "AND",
      "path": "176"
    },
    "660": {
      "fn": "ProxyOracle.asCELOBorrow",
      "offset": [
        6339,
        6392
      ],
      "op": "SWAP2",
      "path": "176"
    },
    "661": {
      "fn": "ProxyOracle.asCELOBorrow",
      "offset": [
        6339,
        6392
      ],
      "op": "DUP2",
      "path": "176"
    },
    "662": {
      "fn": "ProxyOracle.asCELOBorrow",
      "offset": [
        6339,
        6392
      ],
      "op": "ADD",
      "path": "176"
    },
    "663": {
      "fn": "ProxyOracle.asCELOBorrow",
      "offset": [
        6339,
        6392
      ],
      "op": "DUP3",
      "path": "176"
    },
    "664": {
      "fn": "ProxyOracle.asCELOBorrow",
      "offset": [
        6339,
        6392
      ],
      "op": "SWAP1",
      "path": "176"
    },
    "665": {
      "fn": "ProxyOracle.asCELOBorrow",
      "offset": [
        6339,
        6392
      ],
      "op": "MSTORE",
      "path": "176"
    },
    "666": {
      "fn": "ProxyOracle.asCELOBorrow",
      "offset": [
        6339,
        6392
      ],
      "op": "SWAP1",
      "path": "176"
    },
    "667": {
      "fn": "ProxyOracle.asCELOBorrow",
      "offset": [
        6398,
        6461
      ],
      "op": "PUSH2",
      "path": "176",
      "statement": 0,
      "value": "0x2BF"
    },
    "670": {
      "fn": "ProxyOracle.asCELOBorrow",
      "offset": [
        6398,
        6461
      ],
      "op": "JUMPI",
      "path": "176"
    },
    "671": {
      "fn": "ProxyOracle.asCELOBorrow",
      "offset": [
        6398,
        6461
      ],
      "op": "PUSH1",
      "path": "176",
      "value": "0x40"
    },
    "673": {
      "fn": "ProxyOracle.asCELOBorrow",
      "offset": [
        6398,
        6461
      ],
      "op": "MLOAD",
      "path": "176"
    },
    "674": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "678": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "680": {
      "op": "SHL"
    },
    "681": {
      "fn": "ProxyOracle.asCELOBorrow",
      "offset": [
        6398,
        6461
      ],
      "op": "DUP2",
      "path": "176"
    },
    "682": {
      "fn": "ProxyOracle.asCELOBorrow",
      "offset": [
        6398,
        6461
      ],
      "op": "MSTORE",
      "path": "176"
    },
    "683": {
      "fn": "ProxyOracle.asCELOBorrow",
      "offset": [
        6398,
        6461
      ],
      "op": "PUSH1",
      "path": "176",
      "value": "0x4"
    },
    "685": {
      "fn": "ProxyOracle.asCELOBorrow",
      "offset": [
        6398,
        6461
      ],
      "op": "ADD",
      "path": "176"
    },
    "686": {
      "fn": "ProxyOracle.asCELOBorrow",
      "offset": [
        6398,
        6461
      ],
      "op": "PUSH2",
      "path": "176",
      "value": "0x2B6"
    },
    "689": {
      "fn": "ProxyOracle.asCELOBorrow",
      "offset": [
        6398,
        6461
      ],
      "op": "SWAP1",
      "path": "176"
    },
    "690": {
      "fn": "ProxyOracle.asCELOBorrow",
      "offset": [
        6398,
        6461
      ],
      "op": "PUSH2",
      "path": "176",
      "value": "0x1645"
    },
    "693": {
      "fn": "ProxyOracle.asCELOBorrow",
      "jump": "i",
      "offset": [
        6398,
        6461
      ],
      "op": "JUMP",
      "path": "176"
    },
    "694": {
      "fn": "ProxyOracle.asCELOBorrow",
      "offset": [
        6398,
        6461
      ],
      "op": "JUMPDEST",
      "path": "176"
    },
    "695": {
      "fn": "ProxyOracle.asCELOBorrow",
      "offset": [
        6398,
        6461
      ],
      "op": "PUSH1",
      "path": "176",
      "value": "0x40"
    },
    "697": {
      "fn": "ProxyOracle.asCELOBorrow",
      "offset": [
        6398,
        6461
      ],
      "op": "MLOAD",
      "path": "176"
    },
    "698": {
      "fn": "ProxyOracle.asCELOBorrow",
      "offset": [
        6398,
        6461
      ],
      "op": "DUP1",
      "path": "176"
    },
    "699": {
      "fn": "ProxyOracle.asCELOBorrow",
      "offset": [
        6398,
        6461
      ],
      "op": "SWAP2",
      "path": "176"
    },
    "700": {
      "fn": "ProxyOracle.asCELOBorrow",
      "offset": [
        6398,
        6461
      ],
      "op": "SUB",
      "path": "176"
    },
    "701": {
      "fn": "ProxyOracle.asCELOBorrow",
      "offset": [
        6398,
        6461
      ],
      "op": "SWAP1",
      "path": "176"
    },
    "702": {
      "fn": "ProxyOracle.asCELOBorrow",
      "offset": [
        6398,
        6461
      ],
      "op": "REVERT",
      "path": "176"
    },
    "703": {
      "fn": "ProxyOracle.asCELOBorrow",
      "offset": [
        6398,
        6461
      ],
      "op": "JUMPDEST",
      "path": "176"
    },
    "704": {
      "fn": "ProxyOracle.asCELOBorrow",
      "offset": [
        6467,
        6481
      ],
      "op": "PUSH1",
      "path": "176",
      "value": "0x0"
    },
    "706": {
      "fn": "ProxyOracle.asCELOBorrow",
      "offset": [
        6484,
        6531
      ],
      "op": "PUSH2",
      "path": "176",
      "value": "0x375"
    },
    "709": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "711": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "713": {
      "op": "SHL"
    },
    "714": {
      "fn": "ProxyOracle.asCELOBorrow",
      "offset": [
        6484,
        6519
      ],
      "op": "PUSH2",
      "path": "176",
      "value": "0x36F"
    },
    "717": {
      "fn": "ProxyOracle.asCELOBorrow",
      "offset": [
        6512,
        6518
      ],
      "op": "DUP8",
      "path": "176"
    },
    "718": {
      "fn": "ProxyOracle.asCELOBorrow",
      "offset": [
        6484,
        6490
      ],
      "op": "PUSH32",
      "path": "176",
      "value": "0x0"
    },
    "751": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "753": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "755": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "757": {
      "op": "SHL"
    },
    "758": {
      "op": "SUB"
    },
    "759": {
      "fn": "ProxyOracle.asCELOBorrow",
      "offset": [
        6484,
        6500
      ],
      "op": "AND",
      "path": "176"
    },
    "760": {
      "fn": "ProxyOracle.asCELOBorrow",
      "offset": [
        6484,
        6500
      ],
      "op": "PUSH4",
      "path": "176",
      "value": "0x11E56AFF"
    },
    "765": {
      "fn": "ProxyOracle.asCELOBorrow",
      "offset": [
        6501,
        6506
      ],
      "op": "DUP12",
      "path": "176"
    },
    "766": {
      "fn": "ProxyOracle.asCELOBorrow",
      "offset": [
        6484,
        6507
      ],
      "op": "PUSH1",
      "path": "176",
      "value": "0x40"
    },
    "768": {
      "fn": "ProxyOracle.asCELOBorrow",
      "offset": [
        6484,
        6507
      ],
      "op": "MLOAD",
      "path": "176"
    },
    "769": {
      "fn": "ProxyOracle.asCELOBorrow",
      "offset": [
        6484,
        6507
      ],
      "op": "DUP3",
      "path": "176"
    },
    "770": {
      "fn": "ProxyOracle.asCELOBorrow",
      "offset": [
        6484,
        6507
      ],
      "op": "PUSH4",
      "path": "176",
      "value": "0xFFFFFFFF"
    },
    "775": {
      "fn": "ProxyOracle.asCELOBorrow",
      "offset": [
        6484,
        6507
      ],
      "op": "AND",
      "path": "176"
    },
    "776": {
      "fn": "ProxyOracle.asCELOBorrow",
      "offset": [
        6484,
        6507
      ],
      "op": "PUSH1",
      "path": "176",
      "value": "0xE0"
    },
    "778": {
      "fn": "ProxyOracle.asCELOBorrow",
      "offset": [
        6484,
        6507
      ],
      "op": "SHL",
      "path": "176"
    },
    "779": {
      "fn": "ProxyOracle.asCELOBorrow",
      "offset": [
        6484,
        6507
      ],
      "op": "DUP2",
      "path": "176"
    },
    "780": {
      "fn": "ProxyOracle.asCELOBorrow",
      "offset": [
        6484,
        6507
      ],
      "op": "MSTORE",
      "path": "176"
    },
    "781": {
      "fn": "ProxyOracle.asCELOBorrow",
      "offset": [
        6484,
        6507
      ],
      "op": "PUSH1",
      "path": "176",
      "value": "0x4"
    },
    "783": {
      "fn": "ProxyOracle.asCELOBorrow",
      "offset": [
        6484,
        6507
      ],
      "op": "ADD",
      "path": "176"
    },
    "784": {
      "fn": "ProxyOracle.asCELOBorrow",
      "offset": [
        6484,
        6507
      ],
      "op": "PUSH2",
      "path": "176",
      "value": "0x319"
    },
    "787": {
      "fn": "ProxyOracle.asCELOBorrow",
      "offset": [
        6484,
        6507
      ],
      "op": "SWAP2",
      "path": "176"
    },
    "788": {
      "fn": "ProxyOracle.asCELOBorrow",
      "offset": [
        6484,
        6507
      ],
      "op": "SWAP1",
      "path": "176"
    },
    "789": {
      "fn": "ProxyOracle.asCELOBorrow",
      "offset": [
        6484,
        6507
      ],
      "op": "PUSH2",
      "path": "176",
      "value": "0x1508"
    },
    "792": {
      "fn": "ProxyOracle.asCELOBorrow",
      "jump": "i",
      "offset": [
        6484,
        6507
      ],
      "op": "JUMP",
      "path": "176"
    },
    "793": {
      "fn": "ProxyOracle.asCELOBorrow",
      "offset": [
        6484,
        6507
      ],
      "op": "JUMPDEST",
      "path": "176"
    },
    "794": {
      "fn": "ProxyOracle.asCELOBorrow",
      "offset": [
        6484,
        6507
      ],
      "op": "PUSH1",
      "path": "176",
      "value": "0x20"
    },
    "796": {
      "fn": "ProxyOracle.asCELOBorrow",
      "offset": [
        6484,
        6507
      ],
      "op": "PUSH1",
      "path": "176",
      "value": "0x40"
    },
    "798": {
      "fn": "ProxyOracle.asCELOBorrow",
      "offset": [
        6484,
        6507
      ],
      "op": "MLOAD",
      "path": "176"
    },
    "799": {
      "fn": "ProxyOracle.asCELOBorrow",
      "offset": [
        6484,
        6507
      ],
      "op": "DUP1",
      "path": "176"
    },
    "800": {
      "fn": "ProxyOracle.asCELOBorrow",
      "offset": [
        6484,
        6507
      ],
      "op": "DUP4",
      "path": "176"
    },
    "801": {
      "fn": "ProxyOracle.asCELOBorrow",
      "offset": [
        6484,
        6507
      ],
      "op": "SUB",
      "path": "176"
    },
    "802": {
      "fn": "ProxyOracle.asCELOBorrow",
      "offset": [
        6484,
        6507
      ],
      "op": "DUP2",
      "path": "176"
    },
    "803": {
      "fn": "ProxyOracle.asCELOBorrow",
      "offset": [
        6484,
        6507
      ],
      "op": "DUP7",
      "path": "176"
    },
    "804": {
      "fn": "ProxyOracle.asCELOBorrow",
      "offset": [
        6484,
        6507
      ],
      "op": "DUP1",
      "path": "176"
    },
    "805": {
      "fn": "ProxyOracle.asCELOBorrow",
      "offset": [
        6484,
        6507
      ],
      "op": "EXTCODESIZE",
      "path": "176"
    },
    "806": {
      "fn": "ProxyOracle.asCELOBorrow",
      "offset": [
        6484,
        6507
      ],
      "op": "ISZERO",
      "path": "176"
    },
    "807": {
      "fn": "ProxyOracle.asCELOBorrow",
      "offset": [
        6484,
        6507
      ],
      "op": "DUP1",
      "path": "176"
    },
    "808": {
      "fn": "ProxyOracle.asCELOBorrow",
      "offset": [
        6484,
        6507
      ],
      "op": "ISZERO",
      "path": "176"
    },
    "809": {
      "fn": "ProxyOracle.asCELOBorrow",
      "offset": [
        6484,
        6507
      ],
      "op": "PUSH2",
      "path": "176",
      "value": "0x331"
    },
    "812": {
      "fn": "ProxyOracle.asCELOBorrow",
      "offset": [
        6484,
        6507
      ],
      "op": "JUMPI",
      "path": "176"
    },
    "813": {
      "fn": "ProxyOracle.asCELOBorrow",
      "offset": [
        6484,
        6507
      ],
      "op": "PUSH1",
      "path": "176",
      "value": "0x0"
    },
    "815": {
      "fn": "ProxyOracle.asCELOBorrow",
      "offset": [
        6484,
        6507
      ],
      "op": "DUP1",
      "path": "176"
    },
    "816": {
      "fn": "ProxyOracle.asCELOBorrow",
      "offset": [
        6484,
        6507
      ],
      "op": "REVERT",
      "path": "176"
    },
    "817": {
      "fn": "ProxyOracle.asCELOBorrow",
      "offset": [
        6484,
        6507
      ],
      "op": "JUMPDEST",
      "path": "176"
    },
    "818": {
      "fn": "ProxyOracle.asCELOBorrow",
      "offset": [
        6484,
        6507
      ],
      "op": "POP",
      "path": "176"
    },
    "819": {
      "fn": "ProxyOracle.asCELOBorrow",
      "offset": [
        6484,
        6507
      ],
      "op": "GAS",
      "path": "176"
    },
    "820": {
      "fn": "ProxyOracle.asCELOBorrow",
      "offset": [
        6484,
        6507
      ],
      "op": "STATICCALL",
      "path": "176"
    },
    "821": {
      "fn": "ProxyOracle.asCELOBorrow",
      "offset": [
        6484,
        6507
      ],
      "op": "ISZERO",
      "path": "176"
    },
    "822": {
      "fn": "ProxyOracle.asCELOBorrow",
      "offset": [
        6484,
        6507
      ],
      "op": "DUP1",
      "path": "176"
    },
    "823": {
      "fn": "ProxyOracle.asCELOBorrow",
      "offset": [
        6484,
        6507
      ],
      "op": "ISZERO",
      "path": "176"
    },
    "824": {
      "fn": "ProxyOracle.asCELOBorrow",
      "offset": [
        6484,
        6507
      ],
      "op": "PUSH2",
      "path": "176",
      "value": "0x345"
    },
    "827": {
      "fn": "ProxyOracle.asCELOBorrow",
      "offset": [
        6484,
        6507
      ],
      "op": "JUMPI",
      "path": "176"
    },
    "828": {
      "fn": "ProxyOracle.asCELOBorrow",
      "offset": [
        6484,
        6507
      ],
      "op": "RETURNDATASIZE",
      "path": "176"
    },
    "829": {
      "fn": "ProxyOracle.asCELOBorrow",
      "offset": [
        6484,
        6507
      ],
      "op": "PUSH1",
      "path": "176",
      "value": "0x0"
    },
    "831": {
      "fn": "ProxyOracle.asCELOBorrow",
      "offset": [
        6484,
        6507
      ],
      "op": "DUP1",
      "path": "176"
    },
    "832": {
      "fn": "ProxyOracle.asCELOBorrow",
      "offset": [
        6484,
        6507
      ],
      "op": "RETURNDATACOPY",
      "path": "176"
    },
    "833": {
      "fn": "ProxyOracle.asCELOBorrow",
      "offset": [
        6484,
        6507
      ],
      "op": "RETURNDATASIZE",
      "path": "176"
    },
    "834": {
      "fn": "ProxyOracle.asCELOBorrow",
      "offset": [
        6484,
        6507
      ],
      "op": "PUSH1",
      "path": "176",
      "value": "0x0"
    },
    "836": {
      "fn": "ProxyOracle.asCELOBorrow",
      "offset": [
        6484,
        6507
      ],
      "op": "REVERT",
      "path": "176"
    },
    "837": {
      "fn": "ProxyOracle.asCELOBorrow",
      "offset": [
        6484,
        6507
      ],
      "op": "JUMPDEST",
      "path": "176"
    },
    "838": {
      "fn": "ProxyOracle.asCELOBorrow",
      "offset": [
        6484,
        6507
      ],
      "op": "POP",
      "path": "176"
    },
    "839": {
      "fn": "ProxyOracle.asCELOBorrow",
      "offset": [
        6484,
        6507
      ],
      "op": "POP",
      "path": "176"
    },
    "840": {
      "fn": "ProxyOracle.asCELOBorrow",
      "offset": [
        6484,
        6507
      ],
      "op": "POP",
      "path": "176"
    },
    "841": {
      "fn": "ProxyOracle.asCELOBorrow",
      "offset": [
        6484,
        6507
      ],
      "op": "POP",
      "path": "176"
    },
    "842": {
      "fn": "ProxyOracle.asCELOBorrow",
      "offset": [
        6484,
        6507
      ],
      "op": "PUSH1",
      "path": "176",
      "value": "0x40"
    },
    "844": {
      "fn": "ProxyOracle.asCELOBorrow",
      "offset": [
        6484,
        6507
      ],
      "op": "MLOAD",
      "path": "176"
    },
    "845": {
      "fn": "ProxyOracle.asCELOBorrow",
      "offset": [
        6484,
        6507
      ],
      "op": "RETURNDATASIZE",
      "path": "176"
    },
    "846": {
      "fn": "ProxyOracle.asCELOBorrow",
      "offset": [
        6484,
        6507
      ],
      "op": "PUSH1",
      "path": "176",
      "value": "0x1F"
    },
    "848": {
      "fn": "ProxyOracle.asCELOBorrow",
      "offset": [
        6484,
        6507
      ],
      "op": "NOT",
      "path": "176"
    },
    "849": {
      "fn": "ProxyOracle.asCELOBorrow",
      "offset": [
        6484,
        6507
      ],
      "op": "PUSH1",
      "path": "176",
      "value": "0x1F"
    },
    "851": {
      "fn": "ProxyOracle.asCELOBorrow",
      "offset": [
        6484,
        6507
      ],
      "op": "DUP3",
      "path": "176"
    },
    "852": {
      "fn": "ProxyOracle.asCELOBorrow",
      "offset": [
        6484,
        6507
      ],
      "op": "ADD",
      "path": "176"
    },
    "853": {
      "fn": "ProxyOracle.asCELOBorrow",
      "offset": [
        6484,
        6507
      ],
      "op": "AND",
      "path": "176"
    },
    "854": {
      "fn": "ProxyOracle.asCELOBorrow",
      "offset": [
        6484,
        6507
      ],
      "op": "DUP3",
      "path": "176"
    },
    "855": {
      "fn": "ProxyOracle.asCELOBorrow",
      "offset": [
        6484,
        6507
      ],
      "op": "ADD",
      "path": "176"
    },
    "856": {
      "fn": "ProxyOracle.asCELOBorrow",
      "offset": [
        6484,
        6507
      ],
      "op": "DUP1",
      "path": "176"
    },
    "857": {
      "fn": "ProxyOracle.asCELOBorrow",
      "offset": [
        6484,
        6507
      ],
      "op": "PUSH1",
      "path": "176",
      "value": "0x40"
    },
    "859": {
      "fn": "ProxyOracle.asCELOBorrow",
      "offset": [
        6484,
        6507
      ],
      "op": "MSTORE",
      "path": "176"
    },
    "860": {
      "fn": "ProxyOracle.asCELOBorrow",
      "offset": [
        6484,
        6507
      ],
      "op": "POP",
      "path": "176"
    },
    "861": {
      "fn": "ProxyOracle.asCELOBorrow",
      "offset": [
        6484,
        6507
      ],
      "op": "DUP2",
      "path": "176"
    },
    "862": {
      "fn": "ProxyOracle.asCELOBorrow",
      "offset": [
        6484,
        6507
      ],
      "op": "ADD",
      "path": "176"
    },
    "863": {
      "fn": "ProxyOracle.asCELOBorrow",
      "offset": [
        6484,
        6507
      ],
      "op": "SWAP1",
      "path": "176"
    },
    "864": {
      "fn": "ProxyOracle.asCELOBorrow",
      "offset": [
        6484,
        6507
      ],
      "op": "PUSH2",
      "path": "176",
      "value": "0x369"
    },
    "867": {
      "fn": "ProxyOracle.asCELOBorrow",
      "offset": [
        6484,
        6507
      ],
      "op": "SWAP2",
      "path": "176"
    },
    "868": {
      "fn": "ProxyOracle.asCELOBorrow",
      "offset": [
        6484,
        6507
      ],
      "op": "SWAP1",
      "path": "176"
    },
    "869": {
      "fn": "ProxyOracle.asCELOBorrow",
      "offset": [
        6484,
        6507
      ],
      "op": "PUSH2",
      "path": "176",
      "value": "0x14F0"
    },
    "872": {
      "fn": "ProxyOracle.asCELOBorrow",
      "jump": "i",
      "offset": [
        6484,
        6507
      ],
      "op": "JUMP",
      "path": "176"
    },
    "873": {
      "fn": "ProxyOracle.asCELOBorrow",
      "offset": [
        6484,
        6507
      ],
      "op": "JUMPDEST",
      "path": "176"
    },
    "874": {
      "fn": "ProxyOracle.asCELOBorrow",
      "offset": [
        6484,
        6511
      ],
      "op": "SWAP1",
      "path": "176"
    },
    "875": {
      "fn": "ProxyOracle.asCELOBorrow",
      "offset": [
        6484,
        6511
      ],
      "op": "PUSH2",
      "path": "176",
      "value": "0x1113"
    },
    "878": {
      "fn": "ProxyOracle.asCELOBorrow",
      "jump": "i",
      "offset": [
        6484,
        6519
      ],
      "op": "JUMP",
      "path": "176"
    },
    "879": {
      "fn": "ProxyOracle.asCELOBorrow",
      "offset": [
        6484,
        6519
      ],
      "op": "JUMPDEST",
      "path": "176"
    },
    "880": {
      "fn": "ProxyOracle.asCELOBorrow",
      "offset": [
        6484,
        6523
      ],
      "op": "SWAP1",
      "path": "176"
    },
    "881": {
      "fn": "ProxyOracle.asCELOBorrow",
      "offset": [
        6484,
        6523
      ],
      "op": "PUSH2",
      "path": "176",
      "value": "0x1154"
    },
    "884": {
      "fn": "ProxyOracle.asCELOBorrow",
      "jump": "i",
      "offset": [
        6484,
        6531
      ],
      "op": "JUMP",
      "path": "176"
    },
    "885": {
      "fn": "ProxyOracle.asCELOBorrow",
      "offset": [
        6484,
        6531
      ],
      "op": "JUMPDEST",
      "path": "176"
    },
    "886": {
      "fn": "ProxyOracle.asCELOBorrow",
      "offset": [
        6467,
        6531
      ],
      "op": "SWAP1",
      "path": "176"
    },
    "887": {
      "fn": "ProxyOracle.asCELOBorrow",
      "offset": [
        6467,
        6531
      ],
      "op": "POP",
      "path": "176"
    },
    "888": {
      "fn": "ProxyOracle.asCELOBorrow",
      "offset": [
        6544,
        6594
      ],
      "op": "PUSH2",
      "path": "176",
      "statement": 1,
      "value": "0x398"
    },
    "891": {
      "fn": "ProxyOracle.asCELOBorrow",
      "offset": [
        6588,
        6593
      ],
      "op": "PUSH2",
      "path": "176",
      "value": "0x2710"
    },
    "894": {
      "fn": "ProxyOracle.asCELOBorrow",
      "offset": [
        6544,
        6583
      ],
      "op": "PUSH2",
      "path": "176",
      "value": "0x36F"
    },
    "897": {
      "fn": "ProxyOracle.asCELOBorrow",
      "offset": [
        6558,
        6569
      ],
      "op": "DUP5",
      "path": "176"
    },
    "898": {
      "fn": "ProxyOracle.asCELOBorrow",
      "offset": [
        6558,
        6582
      ],
      "op": "PUSH1",
      "path": "176",
      "value": "0x0"
    },
    "900": {
      "fn": "ProxyOracle.asCELOBorrow",
      "offset": [
        6558,
        6582
      ],
      "op": "ADD",
      "path": "176"
    },
    "901": {
      "fn": "ProxyOracle.asCELOBorrow",
      "offset": [
        6558,
        6582
      ],
      "op": "MLOAD",
      "path": "176"
    },
    "902": {
      "fn": "ProxyOracle.asCELOBorrow",
      "offset": [
        6544,
        6583
      ],
      "op": "PUSH2",
      "path": "176",
      "value": "0xFFFF"
    },
    "905": {
      "fn": "ProxyOracle.asCELOBorrow",
      "offset": [
        6544,
        6583
      ],
      "op": "AND",
      "path": "176"
    },
    "906": {
      "fn": "ProxyOracle.asCELOBorrow",
      "offset": [
        6544,
        6553
      ],
      "op": "DUP5",
      "path": "176"
    },
    "907": {
      "fn": "ProxyOracle.asCELOBorrow",
      "offset": [
        6544,
        6557
      ],
      "op": "PUSH2",
      "path": "176",
      "value": "0x1113"
    },
    "910": {
      "fn": "ProxyOracle.asCELOBorrow",
      "offset": [
        6544,
        6557
      ],
      "op": "SWAP1",
      "path": "176"
    },
    "911": {
      "fn": "ProxyOracle.asCELOBorrow",
      "offset": [
        6544,
        6583
      ],
      "op": "SWAP2",
      "path": "176"
    },
    "912": {
      "fn": "ProxyOracle.asCELOBorrow",
      "offset": [
        6544,
        6583
      ],
      "op": "SWAP1",
      "path": "176"
    },
    "913": {
      "fn": "ProxyOracle.asCELOBorrow",
      "offset": [
        6544,
        6583
      ],
      "op": "PUSH4",
      "path": "176",
      "value": "0xFFFFFFFF"
    },
    "918": {
      "fn": "ProxyOracle.asCELOBorrow",
      "offset": [
        6544,
        6583
      ],
      "op": "AND",
      "path": "176"
    },
    "919": {
      "fn": "ProxyOracle.asCELOBorrow",
      "jump": "i",
      "offset": [
        6544,
        6583
      ],
      "op": "JUMP",
      "path": "176"
    },
    "920": {
      "fn": "ProxyOracle.asCELOBorrow",
      "offset": [
        6544,
        6594
      ],
      "op": "JUMPDEST",
      "path": "176"
    },
    "921": {
      "fn": "ProxyOracle.asCELOBorrow",
      "offset": [
        6537,
        6594
      ],
      "op": "SWAP7",
      "path": "176"
    },
    "922": {
      "fn": "ProxyOracle.asCELOBorrow",
      "offset": [
        6214,
        6599
      ],
      "op": "SWAP6",
      "path": "176"
    },
    "923": {
      "op": "POP"
    },
    "924": {
      "op": "POP"
    },
    "925": {
      "op": "POP"
    },
    "926": {
      "op": "POP"
    },
    "927": {
      "op": "POP"
    },
    "928": {
      "op": "POP"
    },
    "929": {
      "fn": "ProxyOracle.asCELOBorrow",
      "jump": "o",
      "offset": [
        6214,
        6599
      ],
      "op": "JUMP",
      "path": "176"
    },
    "930": {
      "fn": "ProxyOracle.supportWrappedToken",
      "offset": [
        3359,
        3638
      ],
      "op": "JUMPDEST",
      "path": "176"
    },
    "931": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "933": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "935": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "937": {
      "op": "SHL"
    },
    "938": {
      "op": "SUB"
    },
    "939": {
      "fn": "ProxyOracle.supportWrappedToken",
      "offset": [
        3461,
        3484
      ],
      "op": "DUP3",
      "path": "176"
    },
    "940": {
      "fn": "ProxyOracle.supportWrappedToken",
      "offset": [
        3461,
        3484
      ],
      "op": "AND",
      "path": "176"
    },
    "941": {
      "fn": "ProxyOracle.supportWrappedToken",
      "offset": [
        3444,
        3448
      ],
      "op": "PUSH1",
      "path": "176",
      "value": "0x0"
    },
    "943": {
      "fn": "ProxyOracle.supportWrappedToken",
      "offset": [
        3461,
        3484
      ],
      "op": "SWAP1",
      "path": "176"
    },
    "944": {
      "fn": "ProxyOracle.supportWrappedToken",
      "offset": [
        3461,
        3484
      ],
      "op": "DUP2",
      "path": "176"
    },
    "945": {
      "fn": "ProxyOracle.supportWrappedToken",
      "offset": [
        3461,
        3484
      ],
      "op": "MSTORE",
      "path": "176"
    },
    "946": {
      "fn": "ProxyOracle.supportWrappedToken",
      "offset": [
        3461,
        3477
      ],
      "op": "PUSH1",
      "path": "176",
      "value": "0x43"
    },
    "948": {
      "fn": "ProxyOracle.supportWrappedToken",
      "offset": [
        3461,
        3484
      ],
      "op": "PUSH1",
      "path": "176",
      "value": "0x20"
    },
    "950": {
      "fn": "ProxyOracle.supportWrappedToken",
      "offset": [
        3461,
        3484
      ],
      "op": "MSTORE",
      "path": "176"
    },
    "951": {
      "fn": "ProxyOracle.supportWrappedToken",
      "offset": [
        3461,
        3484
      ],
      "op": "PUSH1",
      "path": "176",
      "value": "0x40"
    },
    "953": {
      "fn": "ProxyOracle.supportWrappedToken",
      "offset": [
        3461,
        3484
      ],
      "op": "DUP2",
      "path": "176"
    },
    "954": {
      "fn": "ProxyOracle.supportWrappedToken",
      "offset": [
        3461,
        3484
      ],
      "op": "KECCAK256",
      "path": "176"
    },
    "955": {
      "fn": "ProxyOracle.supportWrappedToken",
      "offset": [
        3461,
        3484
      ],
      "op": "SLOAD",
      "path": "176"
    },
    "956": {
      "fn": "ProxyOracle.supportWrappedToken",
      "offset": [
        3461,
        3484
      ],
      "op": "PUSH1",
      "path": "176",
      "value": "0xFF"
    },
    "958": {
      "branch": 40,
      "fn": "ProxyOracle.supportWrappedToken",
      "offset": [
        3461,
        3484
      ],
      "op": "AND",
      "path": "176"
    },
    "959": {
      "fn": "ProxyOracle.supportWrappedToken",
      "offset": [
        3456,
        3498
      ],
      "op": "PUSH2",
      "path": "176",
      "value": "0x3CA"
    },
    "962": {
      "branch": 40,
      "fn": "ProxyOracle.supportWrappedToken",
      "offset": [
        3456,
        3498
      ],
      "op": "JUMPI",
      "path": "176"
    },
    "963": {
      "op": "POP"
    },
    "964": {
      "fn": "ProxyOracle.supportWrappedToken",
      "offset": [
        3493,
        3498
      ],
      "op": "PUSH1",
      "path": "176",
      "statement": 2,
      "value": "0x0"
    },
    "966": {
      "fn": "ProxyOracle.supportWrappedToken",
      "offset": [
        3486,
        3498
      ],
      "op": "PUSH2",
      "path": "176",
      "value": "0x472"
    },
    "969": {
      "fn": "ProxyOracle.supportWrappedToken",
      "offset": [
        3486,
        3498
      ],
      "op": "JUMP",
      "path": "176"
    },
    "970": {
      "fn": "ProxyOracle.supportWrappedToken",
      "offset": [
        3456,
        3498
      ],
      "op": "JUMPDEST",
      "path": "176"
    },
    "971": {
      "fn": "ProxyOracle.supportWrappedToken",
      "offset": [
        3530,
        3573
      ],
      "op": "PUSH1",
      "path": "176",
      "value": "0x40"
    },
    "973": {
      "fn": "ProxyOracle.supportWrappedToken",
      "offset": [
        3530,
        3573
      ],
      "op": "MLOAD",
      "path": "176"
    },
    "974": {
      "op": "PUSH4",
      "value": "0x523BABB9"
    },
    "979": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "981": {
      "op": "SHL"
    },
    "982": {
      "fn": "ProxyOracle.supportWrappedToken",
      "offset": [
        3530,
        3573
      ],
      "op": "DUP2",
      "path": "176"
    },
    "983": {
      "fn": "ProxyOracle.supportWrappedToken",
      "offset": [
        3530,
        3573
      ],
      "op": "MSTORE",
      "path": "176"
    },
    "984": {
      "fn": "ProxyOracle.supportWrappedToken",
      "offset": [
        3504,
        3527
      ],
      "op": "PUSH1",
      "path": "176",
      "value": "0x0"
    },
    "986": {
      "fn": "ProxyOracle.supportWrappedToken",
      "offset": [
        3504,
        3527
      ],
      "op": "SWAP1",
      "path": "176"
    },
    "987": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "989": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "991": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "993": {
      "op": "SHL"
    },
    "994": {
      "op": "SUB"
    },
    "995": {
      "fn": "ProxyOracle.supportWrappedToken",
      "offset": [
        3530,
        3569
      ],
      "op": "DUP6",
      "path": "176"
    },
    "996": {
      "fn": "ProxyOracle.supportWrappedToken",
      "offset": [
        3530,
        3569
      ],
      "op": "AND",
      "path": "176"
    },
    "997": {
      "fn": "ProxyOracle.supportWrappedToken",
      "offset": [
        3530,
        3569
      ],
      "op": "SWAP1",
      "path": "176"
    },
    "998": {
      "fn": "ProxyOracle.supportWrappedToken",
      "offset": [
        3530,
        3569
      ],
      "op": "PUSH4",
      "path": "176",
      "value": "0xA4775772"
    },
    "1003": {
      "fn": "ProxyOracle.supportWrappedToken",
      "offset": [
        3530,
        3569
      ],
      "op": "SWAP1",
      "path": "176"
    },
    "1004": {
      "fn": "ProxyOracle.supportWrappedToken",
      "offset": [
        3530,
        3573
      ],
      "op": "PUSH2",
      "path": "176",
      "value": "0x3F9"
    },
    "1007": {
      "fn": "ProxyOracle.supportWrappedToken",
      "offset": [
        3530,
        3573
      ],
      "op": "SWAP1",
      "path": "176"
    },
    "1008": {
      "fn": "ProxyOracle.supportWrappedToken",
      "offset": [
        3570,
        3572
      ],
      "op": "DUP7",
      "path": "176"
    },
    "1009": {
      "fn": "ProxyOracle.supportWrappedToken",
      "offset": [
        3570,
        3572
      ],
      "op": "SWAP1",
      "path": "176"
    },
    "1010": {
      "fn": "ProxyOracle.supportWrappedToken",
      "offset": [
        3530,
        3573
      ],
      "op": "PUSH1",
      "path": "176",
      "value": "0x4"
    },
    "1012": {
      "fn": "ProxyOracle.supportWrappedToken",
      "offset": [
        3530,
        3573
      ],
      "op": "ADD",
      "path": "176"
    },
    "1013": {
      "fn": "ProxyOracle.supportWrappedToken",
      "offset": [
        3530,
        3573
      ],
      "op": "PUSH2",
      "path": "176",
      "value": "0x184C"
    },
    "1016": {
      "fn": "ProxyOracle.supportWrappedToken",
      "jump": "i",
      "offset": [
        3530,
        3573
      ],
      "op": "JUMP",
      "path": "176"
    },
    "1017": {
      "fn": "ProxyOracle.supportWrappedToken",
      "offset": [
        3530,
        3573
      ],
      "op": "JUMPDEST",
      "path": "176"
    },
    "1018": {
      "fn": "ProxyOracle.supportWrappedToken",
      "offset": [
        3530,
        3573
      ],
      "op": "PUSH1",
      "path": "176",
      "value": "0x20"
    },
    "1020": {
      "fn": "ProxyOracle.supportWrappedToken",
      "offset": [
        3530,
        3573
      ],
      "op": "PUSH1",
      "path": "176",
      "value": "0x40"
    },
    "1022": {
      "fn": "ProxyOracle.supportWrappedToken",
      "offset": [
        3530,
        3573
      ],
      "op": "MLOAD",
      "path": "176"
    },
    "1023": {
      "fn": "ProxyOracle.supportWrappedToken",
      "offset": [
        3530,
        3573
      ],
      "op": "DUP1",
      "path": "176"
    },
    "1024": {
      "fn": "ProxyOracle.supportWrappedToken",
      "offset": [
        3530,
        3573
      ],
      "op": "DUP4",
      "path": "176"
    },
    "1025": {
      "fn": "ProxyOracle.supportWrappedToken",
      "offset": [
        3530,
        3573
      ],
      "op": "SUB",
      "path": "176"
    },
    "1026": {
      "fn": "ProxyOracle.supportWrappedToken",
      "offset": [
        3530,
        3573
      ],
      "op": "DUP2",
      "path": "176"
    },
    "1027": {
      "fn": "ProxyOracle.supportWrappedToken",
      "offset": [
        3530,
        3573
      ],
      "op": "DUP7",
      "path": "176"
    },
    "1028": {
      "fn": "ProxyOracle.supportWrappedToken",
      "offset": [
        3530,
        3573
      ],
      "op": "DUP1",
      "path": "176"
    },
    "1029": {
      "fn": "ProxyOracle.supportWrappedToken",
      "offset": [
        3530,
        3573
      ],
      "op": "EXTCODESIZE",
      "path": "176"
    },
    "1030": {
      "fn": "ProxyOracle.supportWrappedToken",
      "offset": [
        3530,
        3573
      ],
      "op": "ISZERO",
      "path": "176"
    },
    "1031": {
      "fn": "ProxyOracle.supportWrappedToken",
      "offset": [
        3530,
        3573
      ],
      "op": "DUP1",
      "path": "176"
    },
    "1032": {
      "fn": "ProxyOracle.supportWrappedToken",
      "offset": [
        3530,
        3573
      ],
      "op": "ISZERO",
      "path": "176"
    },
    "1033": {
      "fn": "ProxyOracle.supportWrappedToken",
      "offset": [
        3530,
        3573
      ],
      "op": "PUSH2",
      "path": "176",
      "value": "0x411"
    },
    "1036": {
      "fn": "ProxyOracle.supportWrappedToken",
      "offset": [
        3530,
        3573
      ],
      "op": "JUMPI",
      "path": "176"
    },
    "1037": {
      "fn": "ProxyOracle.supportWrappedToken",
      "offset": [
        3530,
        3573
      ],
      "op": "PUSH1",
      "path": "176",
      "value": "0x0"
    },
    "1039": {
      "fn": "ProxyOracle.supportWrappedToken",
      "offset": [
        3530,
        3573
      ],
      "op": "DUP1",
      "path": "176"
    },
    "1040": {
      "fn": "ProxyOracle.supportWrappedToken",
      "offset": [
        3530,
        3573
      ],
      "op": "REVERT",
      "path": "176"
    },
    "1041": {
      "fn": "ProxyOracle.supportWrappedToken",
      "offset": [
        3530,
        3573
      ],
      "op": "JUMPDEST",
      "path": "176"
    },
    "1042": {
      "fn": "ProxyOracle.supportWrappedToken",
      "offset": [
        3530,
        3573
      ],
      "op": "POP",
      "path": "176"
    },
    "1043": {
      "fn": "ProxyOracle.supportWrappedToken",
      "offset": [
        3530,
        3573
      ],
      "op": "GAS",
      "path": "176"
    },
    "1044": {
      "fn": "ProxyOracle.supportWrappedToken",
      "offset": [
        3530,
        3573
      ],
      "op": "STATICCALL",
      "path": "176"
    },
    "1045": {
      "fn": "ProxyOracle.supportWrappedToken",
      "offset": [
        3530,
        3573
      ],
      "op": "ISZERO",
      "path": "176"
    },
    "1046": {
      "fn": "ProxyOracle.supportWrappedToken",
      "offset": [
        3530,
        3573
      ],
      "op": "DUP1",
      "path": "176"
    },
    "1047": {
      "fn": "ProxyOracle.supportWrappedToken",
      "offset": [
        3530,
        3573
      ],
      "op": "ISZERO",
      "path": "176"
    },
    "1048": {
      "fn": "ProxyOracle.supportWrappedToken",
      "offset": [
        3530,
        3573
      ],
      "op": "PUSH2",
      "path": "176",
      "value": "0x425"
    },
    "1051": {
      "fn": "ProxyOracle.supportWrappedToken",
      "offset": [
        3530,
        3573
      ],
      "op": "JUMPI",
      "path": "176"
    },
    "1052": {
      "fn": "ProxyOracle.supportWrappedToken",
      "offset": [
        3530,
        3573
      ],
      "op": "RETURNDATASIZE",
      "path": "176"
    },
    "1053": {
      "fn": "ProxyOracle.supportWrappedToken",
      "offset": [
        3530,
        3573
      ],
      "op": "PUSH1",
      "path": "176",
      "value": "0x0"
    },
    "1055": {
      "fn": "ProxyOracle.supportWrappedToken",
      "offset": [
        3530,
        3573
      ],
      "op": "DUP1",
      "path": "176"
    },
    "1056": {
      "fn": "ProxyOracle.supportWrappedToken",
      "offset": [
        3530,
        3573
      ],
      "op": "RETURNDATACOPY",
      "path": "176"
    },
    "1057": {
      "fn": "ProxyOracle.supportWrappedToken",
      "offset": [
        3530,
        3573
      ],
      "op": "RETURNDATASIZE",
      "path": "176"
    },
    "1058": {
      "fn": "ProxyOracle.supportWrappedToken",
      "offset": [
        3530,
        3573
      ],
      "op": "PUSH1",
      "path": "176",
      "value": "0x0"
    },
    "1060": {
      "fn": "ProxyOracle.supportWrappedToken",
      "offset": [
        3530,
        3573
      ],
      "op": "REVERT",
      "path": "176"
    },
    "1061": {
      "fn": "ProxyOracle.supportWrappedToken",
      "offset": [
        3530,
        3573
      ],
      "op": "JUMPDEST",
      "path": "176"
    },
    "1062": {
      "fn": "ProxyOracle.supportWrappedToken",
      "offset": [
        3530,
        3573
      ],
      "op": "POP",
      "path": "176"
    },
    "1063": {
      "fn": "ProxyOracle.supportWrappedToken",
      "offset": [
        3530,
        3573
      ],
      "op": "POP",
      "path": "176"
    },
    "1064": {
      "fn": "ProxyOracle.supportWrappedToken",
      "offset": [
        3530,
        3573
      ],
      "op": "POP",
      "path": "176"
    },
    "1065": {
      "fn": "ProxyOracle.supportWrappedToken",
      "offset": [
        3530,
        3573
      ],
      "op": "POP",
      "path": "176"
    },
    "1066": {
      "fn": "ProxyOracle.supportWrappedToken",
      "offset": [
        3530,
        3573
      ],
      "op": "PUSH1",
      "path": "176",
      "value": "0x40"
    },
    "1068": {
      "fn": "ProxyOracle.supportWrappedToken",
      "offset": [
        3530,
        3573
      ],
      "op": "MLOAD",
      "path": "176"
    },
    "1069": {
      "fn": "ProxyOracle.supportWrappedToken",
      "offset": [
        3530,
        3573
      ],
      "op": "RETURNDATASIZE",
      "path": "176"
    },
    "1070": {
      "fn": "ProxyOracle.supportWrappedToken",
      "offset": [
        3530,
        3573
      ],
      "op": "PUSH1",
      "path": "176",
      "value": "0x1F"
    },
    "1072": {
      "fn": "ProxyOracle.supportWrappedToken",
      "offset": [
        3530,
        3573
      ],
      "op": "NOT",
      "path": "176"
    },
    "1073": {
      "fn": "ProxyOracle.supportWrappedToken",
      "offset": [
        3530,
        3573
      ],
      "op": "PUSH1",
      "path": "176",
      "value": "0x1F"
    },
    "1075": {
      "fn": "ProxyOracle.supportWrappedToken",
      "offset": [
        3530,
        3573
      ],
      "op": "DUP3",
      "path": "176"
    },
    "1076": {
      "fn": "ProxyOracle.supportWrappedToken",
      "offset": [
        3530,
        3573
      ],
      "op": "ADD",
      "path": "176"
    },
    "1077": {
      "fn": "ProxyOracle.supportWrappedToken",
      "offset": [
        3530,
        3573
      ],
      "op": "AND",
      "path": "176"
    },
    "1078": {
      "fn": "ProxyOracle.supportWrappedToken",
      "offset": [
        3530,
        3573
      ],
      "op": "DUP3",
      "path": "176"
    },
    "1079": {
      "fn": "ProxyOracle.supportWrappedToken",
      "offset": [
        3530,
        3573
      ],
      "op": "ADD",
      "path": "176"
    },
    "1080": {
      "fn": "ProxyOracle.supportWrappedToken",
      "offset": [
        3530,
        3573
      ],
      "op": "DUP1",
      "path": "176"
    },
    "1081": {
      "fn": "ProxyOracle.supportWrappedToken",
      "offset": [
        3530,
        3573
      ],
      "op": "PUSH1",
      "path": "176",
      "value": "0x40"
    },
    "1083": {
      "fn": "ProxyOracle.supportWrappedToken",
      "offset": [
        3530,
        3573
      ],
      "op": "MSTORE",
      "path": "176"
    },
    "1084": {
      "fn": "ProxyOracle.supportWrappedToken",
      "offset": [
        3530,
        3573
      ],
      "op": "POP",
      "path": "176"
    },
    "1085": {
      "fn": "ProxyOracle.supportWrappedToken",
      "offset": [
        3530,
        3573
      ],
      "op": "DUP2",
      "path": "176"
    },
    "1086": {
      "fn": "ProxyOracle.supportWrappedToken",
      "offset": [
        3530,
        3573
      ],
      "op": "ADD",
      "path": "176"
    },
    "1087": {
      "fn": "ProxyOracle.supportWrappedToken",
      "offset": [
        3530,
        3573
      ],
      "op": "SWAP1",
      "path": "176"
    },
    "1088": {
      "fn": "ProxyOracle.supportWrappedToken",
      "offset": [
        3530,
        3573
      ],
      "op": "PUSH2",
      "path": "176",
      "value": "0x449"
    },
    "1091": {
      "fn": "ProxyOracle.supportWrappedToken",
      "offset": [
        3530,
        3573
      ],
      "op": "SWAP2",
      "path": "176"
    },
    "1092": {
      "fn": "ProxyOracle.supportWrappedToken",
      "offset": [
        3530,
        3573
      ],
      "op": "SWAP1",
      "path": "176"
    },
    "1093": {
      "fn": "ProxyOracle.supportWrappedToken",
      "offset": [
        3530,
        3573
      ],
      "op": "PUSH2",
      "path": "176",
      "value": "0x124B"
    },
    "1096": {
      "fn": "ProxyOracle.supportWrappedToken",
      "jump": "i",
      "offset": [
        3530,
        3573
      ],
      "op": "JUMP",
      "path": "176"
    },
    "1097": {
      "fn": "ProxyOracle.supportWrappedToken",
      "offset": [
        3530,
        3573
      ],
      "op": "JUMPDEST",
      "path": "176"
    },
    "1098": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1100": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1102": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1104": {
      "op": "SHL"
    },
    "1105": {
      "op": "SUB"
    },
    "1106": {
      "fn": "ProxyOracle.supportWrappedToken",
      "offset": [
        3586,
        3615
      ],
      "op": "AND",
      "path": "176",
      "statement": 3
    },
    "1107": {
      "fn": "ProxyOracle.supportWrappedToken",
      "offset": [
        3586,
        3615
      ],
      "op": "PUSH1",
      "path": "176",
      "value": "0x0"
    },
    "1109": {
      "fn": "ProxyOracle.supportWrappedToken",
      "offset": [
        3586,
        3615
      ],
      "op": "SWAP1",
      "path": "176"
    },
    "1110": {
      "fn": "ProxyOracle.supportWrappedToken",
      "offset": [
        3586,
        3615
      ],
      "op": "DUP2",
      "path": "176"
    },
    "1111": {
      "fn": "ProxyOracle.supportWrappedToken",
      "offset": [
        3586,
        3615
      ],
      "op": "MSTORE",
      "path": "176"
    },
    "1112": {
      "fn": "ProxyOracle.supportWrappedToken",
      "offset": [
        3586,
        3598
      ],
      "op": "PUSH1",
      "path": "176",
      "value": "0x42"
    },
    "1114": {
      "fn": "ProxyOracle.supportWrappedToken",
      "offset": [
        3586,
        3615
      ],
      "op": "PUSH1",
      "path": "176",
      "value": "0x20"
    },
    "1116": {
      "fn": "ProxyOracle.supportWrappedToken",
      "offset": [
        3586,
        3615
      ],
      "op": "MSTORE",
      "path": "176"
    },
    "1117": {
      "fn": "ProxyOracle.supportWrappedToken",
      "offset": [
        3586,
        3615
      ],
      "op": "PUSH1",
      "path": "176",
      "value": "0x40"
    },
    "1119": {
      "fn": "ProxyOracle.supportWrappedToken",
      "offset": [
        3586,
        3615
      ],
      "op": "SWAP1",
      "path": "176"
    },
    "1120": {
      "fn": "ProxyOracle.supportWrappedToken",
      "offset": [
        3586,
        3615
      ],
      "op": "KECCAK256",
      "path": "176"
    },
    "1121": {
      "fn": "ProxyOracle.supportWrappedToken",
      "offset": [
        3586,
        3628
      ],
      "op": "SLOAD",
      "path": "176"
    },
    "1122": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1124": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1126": {
      "op": "SHL"
    },
    "1127": {
      "fn": "ProxyOracle.supportWrappedToken",
      "offset": [
        3586,
        3628
      ],
      "op": "SWAP1",
      "path": "176"
    },
    "1128": {
      "fn": "ProxyOracle.supportWrappedToken",
      "offset": [
        3586,
        3628
      ],
      "op": "DIV",
      "path": "176"
    },
    "1129": {
      "fn": "ProxyOracle.supportWrappedToken",
      "offset": [
        3586,
        3628
      ],
      "op": "PUSH2",
      "path": "176",
      "value": "0xFFFF"
    },
    "1132": {
      "fn": "ProxyOracle.supportWrappedToken",
      "offset": [
        3586,
        3628
      ],
      "op": "AND",
      "path": "176"
    },
    "1133": {
      "fn": "ProxyOracle.supportWrappedToken",
      "offset": [
        3586,
        3633
      ],
      "op": "ISZERO",
      "path": "176"
    },
    "1134": {
      "fn": "ProxyOracle.supportWrappedToken",
      "offset": [
        3586,
        3633
      ],
      "op": "ISZERO",
      "path": "176"
    },
    "1135": {
      "fn": "ProxyOracle.supportWrappedToken",
      "offset": [
        3586,
        3633
      ],
      "op": "SWAP2",
      "path": "176"
    },
    "1136": {
      "op": "POP"
    },
    "1137": {
      "op": "POP"
    },
    "1138": {
      "fn": "ProxyOracle.supportWrappedToken",
      "offset": [
        3359,
        3638
      ],
      "op": "JUMPDEST",
      "path": "176"
    },
    "1139": {
      "fn": "ProxyOracle.supportWrappedToken",
      "offset": [
        3359,
        3638
      ],
      "op": "SWAP3",
      "path": "176"
    },
    "1140": {
      "fn": "ProxyOracle.supportWrappedToken",
      "offset": [
        3359,
        3638
      ],
      "op": "SWAP2",
      "path": "176"
    },
    "1141": {
      "fn": "ProxyOracle.supportWrappedToken",
      "offset": [
        3359,
        3638
      ],
      "op": "POP",
      "path": "176"
    },
    "1142": {
      "fn": "ProxyOracle.supportWrappedToken",
      "offset": [
        3359,
        3638
      ],
      "op": "POP",
      "path": "176"
    },
    "1143": {
      "fn": "ProxyOracle.supportWrappedToken",
      "jump": "o",
      "offset": [
        3359,
        3638
      ],
      "op": "JUMP",
      "path": "176"
    },
    "1144": {
      "offset": [
        1196,
        1244
      ],
      "op": "JUMPDEST",
      "path": "176"
    },
    "1145": {
      "fn": "ProxyOracle.supportWrappedToken",
      "offset": [
        1196,
        1244
      ],
      "op": "PUSH1",
      "path": "176",
      "value": "0x43"
    },
    "1147": {
      "fn": "ProxyOracle.supportWrappedToken",
      "offset": [
        1196,
        1244
      ],
      "op": "PUSH1",
      "path": "176",
      "value": "0x20"
    },
    "1149": {
      "fn": "ProxyOracle.supportWrappedToken",
      "offset": [
        1196,
        1244
      ],
      "op": "MSTORE",
      "path": "176"
    },
    "1150": {
      "fn": "ProxyOracle.supportWrappedToken",
      "offset": [
        1196,
        1244
      ],
      "op": "PUSH1",
      "path": "176",
      "value": "0x0"
    },
    "1152": {
      "fn": "ProxyOracle.supportWrappedToken",
      "offset": [
        1196,
        1244
      ],
      "op": "SWAP1",
      "path": "176"
    },
    "1153": {
      "fn": "ProxyOracle.supportWrappedToken",
      "offset": [
        1196,
        1244
      ],
      "op": "DUP2",
      "path": "176"
    },
    "1154": {
      "fn": "ProxyOracle.supportWrappedToken",
      "offset": [
        1196,
        1244
      ],
      "op": "MSTORE",
      "path": "176"
    },
    "1155": {
      "fn": "ProxyOracle.supportWrappedToken",
      "offset": [
        1196,
        1244
      ],
      "op": "PUSH1",
      "path": "176",
      "value": "0x40"
    },
    "1157": {
      "fn": "ProxyOracle.supportWrappedToken",
      "offset": [
        1196,
        1244
      ],
      "op": "SWAP1",
      "path": "176"
    },
    "1158": {
      "fn": "ProxyOracle.supportWrappedToken",
      "offset": [
        1196,
        1244
      ],
      "op": "KECCAK256",
      "path": "176"
    },
    "1159": {
      "fn": "ProxyOracle.supportWrappedToken",
      "offset": [
        1196,
        1244
      ],
      "op": "SLOAD",
      "path": "176"
    },
    "1160": {
      "fn": "ProxyOracle.supportWrappedToken",
      "offset": [
        1196,
        1244
      ],
      "op": "PUSH1",
      "path": "176",
      "value": "0xFF"
    },
    "1162": {
      "fn": "ProxyOracle.supportWrappedToken",
      "offset": [
        1196,
        1244
      ],
      "op": "AND",
      "path": "176"
    },
    "1163": {
      "fn": "ProxyOracle.supportWrappedToken",
      "offset": [
        1196,
        1244
      ],
      "op": "DUP2",
      "path": "176"
    },
    "1164": {
      "fn": "ProxyOracle.supportWrappedToken",
      "jump": "o",
      "offset": [
        1196,
        1244
      ],
      "op": "JUMP",
      "path": "176"
    },
    "1165": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5232,
        5936
      ],
      "op": "JUMPDEST",
      "path": "176"
    },
    "1166": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1168": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1170": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1172": {
      "op": "SHL"
    },
    "1173": {
      "op": "SUB"
    },
    "1174": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5382,
        5405
      ],
      "op": "DUP5",
      "path": "176",
      "statement": 4
    },
    "1175": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5382,
        5405
      ],
      "op": "AND",
      "path": "176"
    },
    "1176": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5362,
        5366
      ],
      "op": "PUSH1",
      "path": "176",
      "value": "0x0"
    },
    "1178": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5382,
        5405
      ],
      "op": "SWAP1",
      "path": "176"
    },
    "1179": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5382,
        5405
      ],
      "op": "DUP2",
      "path": "176"
    },
    "1180": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5382,
        5405
      ],
      "op": "MSTORE",
      "path": "176"
    },
    "1181": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5382,
        5398
      ],
      "op": "PUSH1",
      "path": "176",
      "value": "0x43"
    },
    "1183": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5382,
        5405
      ],
      "op": "PUSH1",
      "path": "176",
      "value": "0x20"
    },
    "1185": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5382,
        5405
      ],
      "op": "MSTORE",
      "path": "176"
    },
    "1186": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5382,
        5405
      ],
      "op": "PUSH1",
      "path": "176",
      "value": "0x40"
    },
    "1188": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5382,
        5405
      ],
      "op": "DUP2",
      "path": "176"
    },
    "1189": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5382,
        5405
      ],
      "op": "KECCAK256",
      "path": "176"
    },
    "1190": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5382,
        5405
      ],
      "op": "SLOAD",
      "path": "176"
    },
    "1191": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5382,
        5405
      ],
      "op": "PUSH1",
      "path": "176",
      "value": "0xFF"
    },
    "1193": {
      "branch": 41,
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5382,
        5405
      ],
      "op": "AND",
      "path": "176"
    },
    "1194": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5374,
        5419
      ],
      "op": "PUSH2",
      "path": "176",
      "value": "0x4C5"
    },
    "1197": {
      "branch": 41,
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5374,
        5419
      ],
      "op": "JUMPI",
      "path": "176"
    },
    "1198": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5374,
        5419
      ],
      "op": "PUSH1",
      "path": "176",
      "value": "0x40"
    },
    "1200": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5374,
        5419
      ],
      "op": "MLOAD",
      "path": "176"
    },
    "1201": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1205": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1207": {
      "op": "SHL"
    },
    "1208": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5374,
        5419
      ],
      "op": "DUP2",
      "path": "176"
    },
    "1209": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5374,
        5419
      ],
      "op": "MSTORE",
      "path": "176"
    },
    "1210": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5374,
        5419
      ],
      "op": "PUSH1",
      "path": "176",
      "value": "0x4"
    },
    "1212": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5374,
        5419
      ],
      "op": "ADD",
      "path": "176"
    },
    "1213": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5374,
        5419
      ],
      "op": "PUSH2",
      "path": "176",
      "value": "0x2B6"
    },
    "1216": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5374,
        5419
      ],
      "op": "SWAP1",
      "path": "176"
    },
    "1217": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5374,
        5419
      ],
      "op": "PUSH2",
      "path": "176",
      "value": "0x1622"
    },
    "1220": {
      "fn": "ProxyOracle.asCELOCollateral",
      "jump": "i",
      "offset": [
        5374,
        5419
      ],
      "op": "JUMP",
      "path": "176"
    },
    "1221": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5374,
        5419
      ],
      "op": "JUMPDEST",
      "path": "176"
    },
    "1222": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5451,
        5494
      ],
      "op": "PUSH1",
      "path": "176",
      "value": "0x40"
    },
    "1224": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5451,
        5494
      ],
      "op": "MLOAD",
      "path": "176"
    },
    "1225": {
      "op": "PUSH4",
      "value": "0x523BABB9"
    },
    "1230": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "1232": {
      "op": "SHL"
    },
    "1233": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5451,
        5494
      ],
      "op": "DUP2",
      "path": "176"
    },
    "1234": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5451,
        5494
      ],
      "op": "MSTORE",
      "path": "176"
    },
    "1235": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5425,
        5448
      ],
      "op": "PUSH1",
      "path": "176",
      "value": "0x0"
    },
    "1237": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5425,
        5448
      ],
      "op": "SWAP1",
      "path": "176"
    },
    "1238": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1240": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1242": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1244": {
      "op": "SHL"
    },
    "1245": {
      "op": "SUB"
    },
    "1246": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5451,
        5490
      ],
      "op": "DUP8",
      "path": "176"
    },
    "1247": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5451,
        5490
      ],
      "op": "AND",
      "path": "176"
    },
    "1248": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5451,
        5490
      ],
      "op": "SWAP1",
      "path": "176"
    },
    "1249": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5451,
        5490
      ],
      "op": "PUSH4",
      "path": "176",
      "value": "0xA4775772"
    },
    "1254": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5451,
        5490
      ],
      "op": "SWAP1",
      "path": "176"
    },
    "1255": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5451,
        5494
      ],
      "op": "PUSH2",
      "path": "176",
      "value": "0x4F4"
    },
    "1258": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5451,
        5494
      ],
      "op": "SWAP1",
      "path": "176"
    },
    "1259": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5491,
        5493
      ],
      "op": "DUP9",
      "path": "176"
    },
    "1260": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5491,
        5493
      ],
      "op": "SWAP1",
      "path": "176"
    },
    "1261": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5451,
        5494
      ],
      "op": "PUSH1",
      "path": "176",
      "value": "0x4"
    },
    "1263": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5451,
        5494
      ],
      "op": "ADD",
      "path": "176"
    },
    "1264": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5451,
        5494
      ],
      "op": "PUSH2",
      "path": "176",
      "value": "0x184C"
    },
    "1267": {
      "fn": "ProxyOracle.asCELOCollateral",
      "jump": "i",
      "offset": [
        5451,
        5494
      ],
      "op": "JUMP",
      "path": "176"
    },
    "1268": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5451,
        5494
      ],
      "op": "JUMPDEST",
      "path": "176"
    },
    "1269": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5451,
        5494
      ],
      "op": "PUSH1",
      "path": "176",
      "value": "0x20"
    },
    "1271": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5451,
        5494
      ],
      "op": "PUSH1",
      "path": "176",
      "value": "0x40"
    },
    "1273": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5451,
        5494
      ],
      "op": "MLOAD",
      "path": "176"
    },
    "1274": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5451,
        5494
      ],
      "op": "DUP1",
      "path": "176"
    },
    "1275": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5451,
        5494
      ],
      "op": "DUP4",
      "path": "176"
    },
    "1276": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5451,
        5494
      ],
      "op": "SUB",
      "path": "176"
    },
    "1277": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5451,
        5494
      ],
      "op": "DUP2",
      "path": "176"
    },
    "1278": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5451,
        5494
      ],
      "op": "DUP7",
      "path": "176"
    },
    "1279": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5451,
        5494
      ],
      "op": "DUP1",
      "path": "176"
    },
    "1280": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5451,
        5494
      ],
      "op": "EXTCODESIZE",
      "path": "176"
    },
    "1281": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5451,
        5494
      ],
      "op": "ISZERO",
      "path": "176"
    },
    "1282": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5451,
        5494
      ],
      "op": "DUP1",
      "path": "176"
    },
    "1283": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5451,
        5494
      ],
      "op": "ISZERO",
      "path": "176"
    },
    "1284": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5451,
        5494
      ],
      "op": "PUSH2",
      "path": "176",
      "value": "0x50C"
    },
    "1287": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5451,
        5494
      ],
      "op": "JUMPI",
      "path": "176"
    },
    "1288": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5451,
        5494
      ],
      "op": "PUSH1",
      "path": "176",
      "value": "0x0"
    },
    "1290": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5451,
        5494
      ],
      "op": "DUP1",
      "path": "176"
    },
    "1291": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5451,
        5494
      ],
      "op": "REVERT",
      "path": "176"
    },
    "1292": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5451,
        5494
      ],
      "op": "JUMPDEST",
      "path": "176"
    },
    "1293": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5451,
        5494
      ],
      "op": "POP",
      "path": "176"
    },
    "1294": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5451,
        5494
      ],
      "op": "GAS",
      "path": "176"
    },
    "1295": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5451,
        5494
      ],
      "op": "STATICCALL",
      "path": "176"
    },
    "1296": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5451,
        5494
      ],
      "op": "ISZERO",
      "path": "176"
    },
    "1297": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5451,
        5494
      ],
      "op": "DUP1",
      "path": "176"
    },
    "1298": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5451,
        5494
      ],
      "op": "ISZERO",
      "path": "176"
    },
    "1299": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5451,
        5494
      ],
      "op": "PUSH2",
      "path": "176",
      "value": "0x520"
    },
    "1302": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5451,
        5494
      ],
      "op": "JUMPI",
      "path": "176"
    },
    "1303": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5451,
        5494
      ],
      "op": "RETURNDATASIZE",
      "path": "176"
    },
    "1304": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5451,
        5494
      ],
      "op": "PUSH1",
      "path": "176",
      "value": "0x0"
    },
    "1306": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5451,
        5494
      ],
      "op": "DUP1",
      "path": "176"
    },
    "1307": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5451,
        5494
      ],
      "op": "RETURNDATACOPY",
      "path": "176"
    },
    "1308": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5451,
        5494
      ],
      "op": "RETURNDATASIZE",
      "path": "176"
    },
    "1309": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5451,
        5494
      ],
      "op": "PUSH1",
      "path": "176",
      "value": "0x0"
    },
    "1311": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5451,
        5494
      ],
      "op": "REVERT",
      "path": "176"
    },
    "1312": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5451,
        5494
      ],
      "op": "JUMPDEST",
      "path": "176"
    },
    "1313": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5451,
        5494
      ],
      "op": "POP",
      "path": "176"
    },
    "1314": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5451,
        5494
      ],
      "op": "POP",
      "path": "176"
    },
    "1315": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5451,
        5494
      ],
      "op": "POP",
      "path": "176"
    },
    "1316": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5451,
        5494
      ],
      "op": "POP",
      "path": "176"
    },
    "1317": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5451,
        5494
      ],
      "op": "PUSH1",
      "path": "176",
      "value": "0x40"
    },
    "1319": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5451,
        5494
      ],
      "op": "MLOAD",
      "path": "176"
    },
    "1320": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5451,
        5494
      ],
      "op": "RETURNDATASIZE",
      "path": "176"
    },
    "1321": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5451,
        5494
      ],
      "op": "PUSH1",
      "path": "176",
      "value": "0x1F"
    },
    "1323": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5451,
        5494
      ],
      "op": "NOT",
      "path": "176"
    },
    "1324": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5451,
        5494
      ],
      "op": "PUSH1",
      "path": "176",
      "value": "0x1F"
    },
    "1326": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5451,
        5494
      ],
      "op": "DUP3",
      "path": "176"
    },
    "1327": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5451,
        5494
      ],
      "op": "ADD",
      "path": "176"
    },
    "1328": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5451,
        5494
      ],
      "op": "AND",
      "path": "176"
    },
    "1329": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5451,
        5494
      ],
      "op": "DUP3",
      "path": "176"
    },
    "1330": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5451,
        5494
      ],
      "op": "ADD",
      "path": "176"
    },
    "1331": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5451,
        5494
      ],
      "op": "DUP1",
      "path": "176"
    },
    "1332": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5451,
        5494
      ],
      "op": "PUSH1",
      "path": "176",
      "value": "0x40"
    },
    "1334": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5451,
        5494
      ],
      "op": "MSTORE",
      "path": "176"
    },
    "1335": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5451,
        5494
      ],
      "op": "POP",
      "path": "176"
    },
    "1336": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5451,
        5494
      ],
      "op": "DUP2",
      "path": "176"
    },
    "1337": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5451,
        5494
      ],
      "op": "ADD",
      "path": "176"
    },
    "1338": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5451,
        5494
      ],
      "op": "SWAP1",
      "path": "176"
    },
    "1339": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5451,
        5494
      ],
      "op": "PUSH2",
      "path": "176",
      "value": "0x544"
    },
    "1342": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5451,
        5494
      ],
      "op": "SWAP2",
      "path": "176"
    },
    "1343": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5451,
        5494
      ],
      "op": "SWAP1",
      "path": "176"
    },
    "1344": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5451,
        5494
      ],
      "op": "PUSH2",
      "path": "176",
      "value": "0x124B"
    },
    "1347": {
      "fn": "ProxyOracle.asCELOCollateral",
      "jump": "i",
      "offset": [
        5451,
        5494
      ],
      "op": "JUMP",
      "path": "176"
    },
    "1348": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5451,
        5494
      ],
      "op": "JUMPDEST",
      "path": "176"
    },
    "1349": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5425,
        5494
      ],
      "op": "SWAP1",
      "path": "176"
    },
    "1350": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5425,
        5494
      ],
      "op": "POP",
      "path": "176"
    },
    "1351": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5500,
        5519
      ],
      "op": "PUSH1",
      "path": "176",
      "value": "0x0"
    },
    "1353": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5536,
        5541
      ],
      "op": "DUP7",
      "path": "176"
    },
    "1354": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1356": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1358": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1360": {
      "op": "SHL"
    },
    "1361": {
      "op": "SUB"
    },
    "1362": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5522,
        5560
      ],
      "op": "AND",
      "path": "176"
    },
    "1363": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5522,
        5560
      ],
      "op": "PUSH4",
      "path": "176",
      "value": "0xAF8002DF"
    },
    "1368": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5561,
        5563
      ],
      "op": "DUP8",
      "path": "176"
    },
    "1369": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5522,
        5564
      ],
      "op": "PUSH1",
      "path": "176",
      "value": "0x40"
    },
    "1371": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5522,
        5564
      ],
      "op": "MLOAD",
      "path": "176"
    },
    "1372": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5522,
        5564
      ],
      "op": "DUP3",
      "path": "176"
    },
    "1373": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5522,
        5564
      ],
      "op": "PUSH4",
      "path": "176",
      "value": "0xFFFFFFFF"
    },
    "1378": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5522,
        5564
      ],
      "op": "AND",
      "path": "176"
    },
    "1379": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5522,
        5564
      ],
      "op": "PUSH1",
      "path": "176",
      "value": "0xE0"
    },
    "1381": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5522,
        5564
      ],
      "op": "SHL",
      "path": "176"
    },
    "1382": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5522,
        5564
      ],
      "op": "DUP2",
      "path": "176"
    },
    "1383": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5522,
        5564
      ],
      "op": "MSTORE",
      "path": "176"
    },
    "1384": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5522,
        5564
      ],
      "op": "PUSH1",
      "path": "176",
      "value": "0x4"
    },
    "1386": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5522,
        5564
      ],
      "op": "ADD",
      "path": "176"
    },
    "1387": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5522,
        5564
      ],
      "op": "PUSH2",
      "path": "176",
      "value": "0x574"
    },
    "1390": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5522,
        5564
      ],
      "op": "SWAP2",
      "path": "176"
    },
    "1391": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5522,
        5564
      ],
      "op": "SWAP1",
      "path": "176"
    },
    "1392": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5522,
        5564
      ],
      "op": "PUSH2",
      "path": "176",
      "value": "0x184C"
    },
    "1395": {
      "fn": "ProxyOracle.asCELOCollateral",
      "jump": "i",
      "offset": [
        5522,
        5564
      ],
      "op": "JUMP",
      "path": "176"
    },
    "1396": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5522,
        5564
      ],
      "op": "JUMPDEST",
      "path": "176"
    },
    "1397": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5522,
        5564
      ],
      "op": "PUSH1",
      "path": "176",
      "value": "0x20"
    },
    "1399": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5522,
        5564
      ],
      "op": "PUSH1",
      "path": "176",
      "value": "0x40"
    },
    "1401": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5522,
        5564
      ],
      "op": "MLOAD",
      "path": "176"
    },
    "1402": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5522,
        5564
      ],
      "op": "DUP1",
      "path": "176"
    },
    "1403": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5522,
        5564
      ],
      "op": "DUP4",
      "path": "176"
    },
    "1404": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5522,
        5564
      ],
      "op": "SUB",
      "path": "176"
    },
    "1405": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5522,
        5564
      ],
      "op": "DUP2",
      "path": "176"
    },
    "1406": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5522,
        5564
      ],
      "op": "DUP7",
      "path": "176"
    },
    "1407": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5522,
        5564
      ],
      "op": "DUP1",
      "path": "176"
    },
    "1408": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5522,
        5564
      ],
      "op": "EXTCODESIZE",
      "path": "176"
    },
    "1409": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5522,
        5564
      ],
      "op": "ISZERO",
      "path": "176"
    },
    "1410": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5522,
        5564
      ],
      "op": "DUP1",
      "path": "176"
    },
    "1411": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5522,
        5564
      ],
      "op": "ISZERO",
      "path": "176"
    },
    "1412": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5522,
        5564
      ],
      "op": "PUSH2",
      "path": "176",
      "value": "0x58C"
    },
    "1415": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5522,
        5564
      ],
      "op": "JUMPI",
      "path": "176"
    },
    "1416": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5522,
        5564
      ],
      "op": "PUSH1",
      "path": "176",
      "value": "0x0"
    },
    "1418": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5522,
        5564
      ],
      "op": "DUP1",
      "path": "176"
    },
    "1419": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5522,
        5564
      ],
      "op": "REVERT",
      "path": "176"
    },
    "1420": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5522,
        5564
      ],
      "op": "JUMPDEST",
      "path": "176"
    },
    "1421": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5522,
        5564
      ],
      "op": "POP",
      "path": "176"
    },
    "1422": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5522,
        5564
      ],
      "op": "GAS",
      "path": "176"
    },
    "1423": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5522,
        5564
      ],
      "op": "STATICCALL",
      "path": "176"
    },
    "1424": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5522,
        5564
      ],
      "op": "ISZERO",
      "path": "176"
    },
    "1425": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5522,
        5564
      ],
      "op": "DUP1",
      "path": "176"
    },
    "1426": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5522,
        5564
      ],
      "op": "ISZERO",
      "path": "176"
    },
    "1427": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5522,
        5564
      ],
      "op": "PUSH2",
      "path": "176",
      "value": "0x5A0"
    },
    "1430": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5522,
        5564
      ],
      "op": "JUMPI",
      "path": "176"
    },
    "1431": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5522,
        5564
      ],
      "op": "RETURNDATASIZE",
      "path": "176"
    },
    "1432": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5522,
        5564
      ],
      "op": "PUSH1",
      "path": "176",
      "value": "0x0"
    },
    "1434": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5522,
        5564
      ],
      "op": "DUP1",
      "path": "176"
    },
    "1435": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5522,
        5564
      ],
      "op": "RETURNDATACOPY",
      "path": "176"
    },
    "1436": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5522,
        5564
      ],
      "op": "RETURNDATASIZE",
      "path": "176"
    },
    "1437": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5522,
        5564
      ],
      "op": "PUSH1",
      "path": "176",
      "value": "0x0"
    },
    "1439": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5522,
        5564
      ],
      "op": "REVERT",
      "path": "176"
    },
    "1440": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5522,
        5564
      ],
      "op": "JUMPDEST",
      "path": "176"
    },
    "1441": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5522,
        5564
      ],
      "op": "POP",
      "path": "176"
    },
    "1442": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5522,
        5564
      ],
      "op": "POP",
      "path": "176"
    },
    "1443": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5522,
        5564
      ],
      "op": "POP",
      "path": "176"
    },
    "1444": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5522,
        5564
      ],
      "op": "POP",
      "path": "176"
    },
    "1445": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5522,
        5564
      ],
      "op": "PUSH1",
      "path": "176",
      "value": "0x40"
    },
    "1447": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5522,
        5564
      ],
      "op": "MLOAD",
      "path": "176"
    },
    "1448": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5522,
        5564
      ],
      "op": "RETURNDATASIZE",
      "path": "176"
    },
    "1449": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5522,
        5564
      ],
      "op": "PUSH1",
      "path": "176",
      "value": "0x1F"
    },
    "1451": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5522,
        5564
      ],
      "op": "NOT",
      "path": "176"
    },
    "1452": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5522,
        5564
      ],
      "op": "PUSH1",
      "path": "176",
      "value": "0x1F"
    },
    "1454": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5522,
        5564
      ],
      "op": "DUP3",
      "path": "176"
    },
    "1455": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5522,
        5564
      ],
      "op": "ADD",
      "path": "176"
    },
    "1456": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5522,
        5564
      ],
      "op": "AND",
      "path": "176"
    },
    "1457": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5522,
        5564
      ],
      "op": "DUP3",
      "path": "176"
    },
    "1458": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5522,
        5564
      ],
      "op": "ADD",
      "path": "176"
    },
    "1459": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5522,
        5564
      ],
      "op": "DUP1",
      "path": "176"
    },
    "1460": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5522,
        5564
      ],
      "op": "PUSH1",
      "path": "176",
      "value": "0x40"
    },
    "1462": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5522,
        5564
      ],
      "op": "MSTORE",
      "path": "176"
    },
    "1463": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5522,
        5564
      ],
      "op": "POP",
      "path": "176"
    },
    "1464": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5522,
        5564
      ],
      "op": "DUP2",
      "path": "176"
    },
    "1465": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5522,
        5564
      ],
      "op": "ADD",
      "path": "176"
    },
    "1466": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5522,
        5564
      ],
      "op": "SWAP1",
      "path": "176"
    },
    "1467": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5522,
        5564
      ],
      "op": "PUSH2",
      "path": "176",
      "value": "0x5C4"
    },
    "1470": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5522,
        5564
      ],
      "op": "SWAP2",
      "path": "176"
    },
    "1471": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5522,
        5564
      ],
      "op": "SWAP1",
      "path": "176"
    },
    "1472": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5522,
        5564
      ],
      "op": "PUSH2",
      "path": "176",
      "value": "0x14F0"
    },
    "1475": {
      "fn": "ProxyOracle.asCELOCollateral",
      "jump": "i",
      "offset": [
        5522,
        5564
      ],
      "op": "JUMP",
      "path": "176"
    },
    "1476": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5522,
        5564
      ],
      "op": "JUMPDEST",
      "path": "176"
    },
    "1477": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5500,
        5564
      ],
      "op": "SWAP1",
      "path": "176"
    },
    "1478": {
      "op": "POP"
    },
    "1479": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5570,
        5591
      ],
      "op": "PUSH1",
      "path": "176",
      "value": "0x0"
    },
    "1481": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5594,
        5632
      ],
      "op": "PUSH2",
      "path": "176",
      "value": "0x5DA"
    },
    "1484": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1486": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "1488": {
      "op": "SHL"
    },
    "1489": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5594,
        5620
      ],
      "op": "PUSH2",
      "path": "176",
      "value": "0x36F"
    },
    "1492": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5594,
        5600
      ],
      "op": "DUP9",
      "path": "176"
    },
    "1493": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5500,
        5564
      ],
      "op": "DUP6",
      "path": "176"
    },
    "1494": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5594,
        5604
      ],
      "op": "PUSH2",
      "path": "176",
      "value": "0x1113"
    },
    "1497": {
      "fn": "ProxyOracle.asCELOCollateral",
      "jump": "i",
      "offset": [
        5594,
        5620
      ],
      "op": "JUMP",
      "path": "176"
    },
    "1498": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5594,
        5632
      ],
      "op": "JUMPDEST",
      "path": "176"
    },
    "1499": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5570,
        5632
      ],
      "op": "SWAP1",
      "path": "176"
    },
    "1500": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5570,
        5632
      ],
      "op": "POP",
      "path": "176"
    },
    "1501": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5638,
        5669
      ],
      "op": "PUSH2",
      "path": "176",
      "value": "0x5E4"
    },
    "1504": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5638,
        5669
      ],
      "op": "PUSH2",
      "path": "176",
      "value": "0x1186"
    },
    "1507": {
      "fn": "ProxyOracle.asCELOCollateral",
      "jump": "i",
      "offset": [
        5638,
        5669
      ],
      "op": "JUMP",
      "path": "176"
    },
    "1508": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5638,
        5669
      ],
      "op": "JUMPDEST",
      "path": "176"
    },
    "1509": {
      "op": "POP"
    },
    "1510": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1512": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1514": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1516": {
      "op": "SHL"
    },
    "1517": {
      "op": "SUB"
    },
    "1518": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5672,
        5701
      ],
      "op": "DUP4",
      "path": "176"
    },
    "1519": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5672,
        5701
      ],
      "op": "AND",
      "path": "176"
    },
    "1520": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5672,
        5701
      ],
      "op": "PUSH1",
      "path": "176",
      "value": "0x0"
    },
    "1522": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5672,
        5701
      ],
      "op": "SWAP1",
      "path": "176"
    },
    "1523": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5672,
        5701
      ],
      "op": "DUP2",
      "path": "176"
    },
    "1524": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5672,
        5701
      ],
      "op": "MSTORE",
      "path": "176"
    },
    "1525": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5672,
        5684
      ],
      "op": "PUSH1",
      "path": "176",
      "value": "0x42"
    },
    "1527": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5672,
        5701
      ],
      "op": "PUSH1",
      "path": "176",
      "value": "0x20"
    },
    "1529": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5672,
        5701
      ],
      "op": "SWAP1",
      "path": "176"
    },
    "1530": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5672,
        5701
      ],
      "op": "DUP2",
      "path": "176"
    },
    "1531": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5672,
        5701
      ],
      "op": "MSTORE",
      "path": "176"
    },
    "1532": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5672,
        5701
      ],
      "op": "PUSH1",
      "path": "176",
      "value": "0x40"
    },
    "1534": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5672,
        5701
      ],
      "op": "SWAP2",
      "path": "176"
    },
    "1535": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5672,
        5701
      ],
      "op": "DUP3",
      "path": "176"
    },
    "1536": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5672,
        5701
      ],
      "op": "SWAP1",
      "path": "176"
    },
    "1537": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5672,
        5701
      ],
      "op": "KECCAK256",
      "path": "176"
    },
    "1538": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5638,
        5701
      ],
      "op": "DUP3",
      "path": "176"
    },
    "1539": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5638,
        5701
      ],
      "op": "MLOAD",
      "path": "176"
    },
    "1540": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5638,
        5701
      ],
      "op": "PUSH1",
      "path": "176",
      "value": "0x60"
    },
    "1542": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5638,
        5701
      ],
      "op": "DUP2",
      "path": "176"
    },
    "1543": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5638,
        5701
      ],
      "op": "ADD",
      "path": "176"
    },
    "1544": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5638,
        5701
      ],
      "op": "DUP5",
      "path": "176"
    },
    "1545": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5638,
        5701
      ],
      "op": "MSTORE",
      "path": "176"
    },
    "1546": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5638,
        5701
      ],
      "op": "SWAP1",
      "path": "176"
    },
    "1547": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5638,
        5701
      ],
      "op": "SLOAD",
      "path": "176"
    },
    "1548": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5638,
        5701
      ],
      "op": "PUSH2",
      "path": "176",
      "value": "0xFFFF"
    },
    "1551": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5638,
        5701
      ],
      "op": "DUP1",
      "path": "176"
    },
    "1552": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5638,
        5701
      ],
      "op": "DUP3",
      "path": "176"
    },
    "1553": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5638,
        5701
      ],
      "op": "AND",
      "path": "176"
    },
    "1554": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5638,
        5701
      ],
      "op": "DUP4",
      "path": "176"
    },
    "1555": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5638,
        5701
      ],
      "op": "MSTORE",
      "path": "176"
    },
    "1556": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5638,
        5701
      ],
      "op": "PUSH3",
      "path": "176",
      "value": "0x10000"
    },
    "1560": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5638,
        5701
      ],
      "op": "DUP3",
      "path": "176"
    },
    "1561": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5638,
        5701
      ],
      "op": "DIV",
      "path": "176"
    },
    "1562": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5638,
        5701
      ],
      "op": "DUP2",
      "path": "176"
    },
    "1563": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5638,
        5701
      ],
      "op": "AND",
      "path": "176"
    },
    "1564": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5638,
        5701
      ],
      "op": "SWAP4",
      "path": "176"
    },
    "1565": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5638,
        5701
      ],
      "op": "DUP4",
      "path": "176"
    },
    "1566": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5638,
        5701
      ],
      "op": "ADD",
      "path": "176"
    },
    "1567": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5638,
        5701
      ],
      "op": "SWAP4",
      "path": "176"
    },
    "1568": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5638,
        5701
      ],
      "op": "SWAP1",
      "path": "176"
    },
    "1569": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5638,
        5701
      ],
      "op": "SWAP4",
      "path": "176"
    },
    "1570": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5638,
        5701
      ],
      "op": "MSTORE",
      "path": "176"
    },
    "1571": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1573": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1575": {
      "op": "SHL"
    },
    "1576": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5638,
        5701
      ],
      "op": "SWAP1",
      "path": "176"
    },
    "1577": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5638,
        5701
      ],
      "op": "DIV",
      "path": "176"
    },
    "1578": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5638,
        5701
      ],
      "op": "SWAP1",
      "path": "176"
    },
    "1579": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5638,
        5701
      ],
      "op": "SWAP2",
      "path": "176"
    },
    "1580": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5638,
        5701
      ],
      "op": "AND",
      "path": "176"
    },
    "1581": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5638,
        5701
      ],
      "op": "SWAP2",
      "path": "176"
    },
    "1582": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5638,
        5701
      ],
      "op": "DUP2",
      "path": "176"
    },
    "1583": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5638,
        5701
      ],
      "op": "ADD",
      "path": "176"
    },
    "1584": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5638,
        5701
      ],
      "op": "DUP3",
      "path": "176"
    },
    "1585": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5638,
        5701
      ],
      "op": "SWAP1",
      "path": "176"
    },
    "1586": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5638,
        5701
      ],
      "op": "MSTORE",
      "path": "176"
    },
    "1587": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5638,
        5701
      ],
      "op": "SWAP1",
      "path": "176"
    },
    "1588": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5707,
        5774
      ],
      "op": "PUSH2",
      "path": "176",
      "statement": 5,
      "value": "0x64F"
    },
    "1591": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5707,
        5774
      ],
      "op": "JUMPI",
      "path": "176"
    },
    "1592": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5707,
        5774
      ],
      "op": "PUSH1",
      "path": "176",
      "value": "0x40"
    },
    "1594": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5707,
        5774
      ],
      "op": "MLOAD",
      "path": "176"
    },
    "1595": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1599": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1601": {
      "op": "SHL"
    },
    "1602": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5707,
        5774
      ],
      "op": "DUP2",
      "path": "176"
    },
    "1603": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5707,
        5774
      ],
      "op": "MSTORE",
      "path": "176"
    },
    "1604": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5707,
        5774
      ],
      "op": "PUSH1",
      "path": "176",
      "value": "0x4"
    },
    "1606": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5707,
        5774
      ],
      "op": "ADD",
      "path": "176"
    },
    "1607": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5707,
        5774
      ],
      "op": "PUSH2",
      "path": "176",
      "value": "0x2B6"
    },
    "1610": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5707,
        5774
      ],
      "op": "SWAP1",
      "path": "176"
    },
    "1611": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5707,
        5774
      ],
      "op": "PUSH2",
      "path": "176",
      "value": "0x1527"
    },
    "1614": {
      "fn": "ProxyOracle.asCELOCollateral",
      "jump": "i",
      "offset": [
        5707,
        5774
      ],
      "op": "JUMP",
      "path": "176"
    },
    "1615": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5707,
        5774
      ],
      "op": "JUMPDEST",
      "path": "176"
    },
    "1616": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5780,
        5794
      ],
      "op": "PUSH1",
      "path": "176",
      "value": "0x0"
    },
    "1618": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5797,
        5864
      ],
      "op": "PUSH2",
      "path": "176",
      "value": "0x6A9"
    },
    "1621": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1623": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "1625": {
      "op": "SHL"
    },
    "1626": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5797,
        5852
      ],
      "op": "PUSH2",
      "path": "176",
      "value": "0x36F"
    },
    "1629": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5835,
        5851
      ],
      "op": "DUP6",
      "path": "176"
    },
    "1630": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5797,
        5803
      ],
      "op": "PUSH32",
      "path": "176",
      "value": "0x0"
    },
    "1663": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1665": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1667": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1669": {
      "op": "SHL"
    },
    "1670": {
      "op": "SUB"
    },
    "1671": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5797,
        5813
      ],
      "op": "AND",
      "path": "176"
    },
    "1672": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5797,
        5813
      ],
      "op": "PUSH4",
      "path": "176",
      "value": "0x11E56AFF"
    },
    "1677": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5814,
        5829
      ],
      "op": "DUP11",
      "path": "176"
    },
    "1678": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5797,
        5830
      ],
      "op": "PUSH1",
      "path": "176",
      "value": "0x40"
    },
    "1680": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5797,
        5830
      ],
      "op": "MLOAD",
      "path": "176"
    },
    "1681": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5797,
        5830
      ],
      "op": "DUP3",
      "path": "176"
    },
    "1682": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5797,
        5830
      ],
      "op": "PUSH4",
      "path": "176",
      "value": "0xFFFFFFFF"
    },
    "1687": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5797,
        5830
      ],
      "op": "AND",
      "path": "176"
    },
    "1688": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5797,
        5830
      ],
      "op": "PUSH1",
      "path": "176",
      "value": "0xE0"
    },
    "1690": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5797,
        5830
      ],
      "op": "SHL",
      "path": "176"
    },
    "1691": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5797,
        5830
      ],
      "op": "DUP2",
      "path": "176"
    },
    "1692": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5797,
        5830
      ],
      "op": "MSTORE",
      "path": "176"
    },
    "1693": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5797,
        5830
      ],
      "op": "PUSH1",
      "path": "176",
      "value": "0x4"
    },
    "1695": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5797,
        5830
      ],
      "op": "ADD",
      "path": "176"
    },
    "1696": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5797,
        5830
      ],
      "op": "PUSH2",
      "path": "176",
      "value": "0x319"
    },
    "1699": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5797,
        5830
      ],
      "op": "SWAP2",
      "path": "176"
    },
    "1700": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5797,
        5830
      ],
      "op": "SWAP1",
      "path": "176"
    },
    "1701": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5797,
        5830
      ],
      "op": "PUSH2",
      "path": "176",
      "value": "0x1508"
    },
    "1704": {
      "fn": "ProxyOracle.asCELOCollateral",
      "jump": "i",
      "offset": [
        5797,
        5830
      ],
      "op": "JUMP",
      "path": "176"
    },
    "1705": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5797,
        5864
      ],
      "op": "JUMPDEST",
      "path": "176"
    },
    "1706": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5780,
        5864
      ],
      "op": "SWAP1",
      "path": "176"
    },
    "1707": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5780,
        5864
      ],
      "op": "POP",
      "path": "176"
    },
    "1708": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5877,
        5931
      ],
      "op": "PUSH2",
      "path": "176",
      "statement": 6,
      "value": "0x6CC"
    },
    "1711": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5925,
        5930
      ],
      "op": "PUSH2",
      "path": "176",
      "value": "0x2710"
    },
    "1714": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5877,
        5920
      ],
      "op": "PUSH2",
      "path": "176",
      "value": "0x36F"
    },
    "1717": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5891,
        5902
      ],
      "op": "DUP5",
      "path": "176"
    },
    "1718": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5891,
        5919
      ],
      "op": "PUSH1",
      "path": "176",
      "value": "0x20"
    },
    "1720": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5891,
        5919
      ],
      "op": "ADD",
      "path": "176"
    },
    "1721": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5891,
        5919
      ],
      "op": "MLOAD",
      "path": "176"
    },
    "1722": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5877,
        5920
      ],
      "op": "PUSH2",
      "path": "176",
      "value": "0xFFFF"
    },
    "1725": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5877,
        5920
      ],
      "op": "AND",
      "path": "176"
    },
    "1726": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5877,
        5886
      ],
      "op": "DUP5",
      "path": "176"
    },
    "1727": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5877,
        5890
      ],
      "op": "PUSH2",
      "path": "176",
      "value": "0x1113"
    },
    "1730": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5877,
        5890
      ],
      "op": "SWAP1",
      "path": "176"
    },
    "1731": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5877,
        5920
      ],
      "op": "SWAP2",
      "path": "176"
    },
    "1732": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5877,
        5920
      ],
      "op": "SWAP1",
      "path": "176"
    },
    "1733": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5877,
        5920
      ],
      "op": "PUSH4",
      "path": "176",
      "value": "0xFFFFFFFF"
    },
    "1738": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5877,
        5920
      ],
      "op": "AND",
      "path": "176"
    },
    "1739": {
      "fn": "ProxyOracle.asCELOCollateral",
      "jump": "i",
      "offset": [
        5877,
        5920
      ],
      "op": "JUMP",
      "path": "176"
    },
    "1740": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5877,
        5931
      ],
      "op": "JUMPDEST",
      "path": "176"
    },
    "1741": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5870,
        5931
      ],
      "op": "SWAP11",
      "path": "176"
    },
    "1742": {
      "fn": "ProxyOracle.asCELOCollateral",
      "offset": [
        5232,
        5936
      ],
      "op": "SWAP10",
      "path": "176"
    },
    "1743": {
      "op": "POP"
    },
    "1744": {
      "op": "POP"
    },
    "1745": {
      "op": "POP"
    },
    "1746": {
      "op": "POP"
    },
    "1747": {
      "op": "POP"
    },
    "1748": {
      "op": "POP"
    },
    "1749": {
      "op": "POP"
    },
    "1750": {
      "op": "POP"
    },
    "1751": {
      "op": "POP"
    },
    "1752": {
      "op": "POP"
    },
    "1753": {
      "fn": "ProxyOracle.asCELOCollateral",
      "jump": "o",
      "offset": [
        5232,
        5936
      ],
      "op": "JUMP",
      "path": "176"
    },
    "1754": {
      "fn": "ProxyOracle.unsetTokenFactors",
      "offset": [
        2535,
        2750
      ],
      "op": "JUMPDEST",
      "path": "176"
    },
    "1755": {
      "offset": [
        566,
        574
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "1757": {
      "fn": "ProxyOracle.unsetTokenFactors",
      "offset": [
        566,
        574
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "1758": {
      "fn": "ProxyOracle.unsetTokenFactors",
      "offset": [
        566,
        574
      ],
      "op": "PUSH3",
      "path": "22",
      "value": "0x10000"
    },
    "1762": {
      "fn": "ProxyOracle.unsetTokenFactors",
      "offset": [
        566,
        574
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1763": {
      "fn": "ProxyOracle.unsetTokenFactors",
      "offset": [
        566,
        574
      ],
      "op": "DIV",
      "path": "22"
    },
    "1764": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1766": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1768": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1770": {
      "op": "SHL"
    },
    "1771": {
      "op": "SUB"
    },
    "1772": {
      "offset": [
        566,
        574
      ],
      "op": "AND",
      "path": "22"
    },
    "1773": {
      "offset": [
        552,
        562
      ],
      "op": "CALLER",
      "path": "22"
    },
    "1774": {
      "offset": [
        552,
        574
      ],
      "op": "EQ",
      "path": "22"
    },
    "1775": {
      "offset": [
        544,
        595
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x70A"
    },
    "1778": {
      "offset": [
        544,
        595
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "1779": {
      "fn": "ProxyOracle.unsetTokenFactors",
      "offset": [
        544,
        595
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "1781": {
      "fn": "ProxyOracle.unsetTokenFactors",
      "offset": [
        544,
        595
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "1782": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1786": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1788": {
      "op": "SHL"
    },
    "1789": {
      "offset": [
        544,
        595
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1790": {
      "fn": "ProxyOracle.unsetTokenFactors",
      "offset": [
        544,
        595
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "1791": {
      "fn": "ProxyOracle.unsetTokenFactors",
      "offset": [
        544,
        595
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "1793": {
      "fn": "ProxyOracle.unsetTokenFactors",
      "offset": [
        544,
        595
      ],
      "op": "ADD",
      "path": "22"
    },
    "1794": {
      "fn": "ProxyOracle.unsetTokenFactors",
      "offset": [
        544,
        595
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2B6"
    },
    "1797": {
      "fn": "ProxyOracle.unsetTokenFactors",
      "offset": [
        544,
        595
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1798": {
      "fn": "ProxyOracle.unsetTokenFactors",
      "offset": [
        544,
        595
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x15F8"
    },
    "1801": {
      "fn": "ProxyOracle.unsetTokenFactors",
      "jump": "i",
      "offset": [
        544,
        595
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1802": {
      "fn": "ProxyOracle.unsetTokenFactors",
      "offset": [
        544,
        595
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1803": {
      "fn": "ProxyOracle.unsetTokenFactors",
      "offset": [
        2615,
        2623
      ],
      "op": "PUSH1",
      "path": "176",
      "value": "0x0"
    },
    "1805": {
      "fn": "ProxyOracle.unsetTokenFactors",
      "offset": [
        2610,
        2746
      ],
      "op": "JUMPDEST",
      "path": "176"
    },
    "1806": {
      "fn": "ProxyOracle.unsetTokenFactors",
      "offset": [
        2635,
        2641
      ],
      "op": "DUP2",
      "path": "176"
    },
    "1807": {
      "fn": "ProxyOracle.unsetTokenFactors",
      "offset": [
        2635,
        2648
      ],
      "op": "MLOAD",
      "path": "176"
    },
    "1808": {
      "fn": "ProxyOracle.unsetTokenFactors",
      "offset": [
        2629,
        2632
      ],
      "op": "DUP2",
      "path": "176"
    },
    "1809": {
      "fn": "ProxyOracle.unsetTokenFactors",
      "offset": [
        2629,
        2648
      ],
      "op": "LT",
      "path": "176"
    },
    "1810": {
      "fn": "ProxyOracle.unsetTokenFactors",
      "offset": [
        2610,
        2746
      ],
      "op": "ISZERO",
      "path": "176"
    },
    "1811": {
      "fn": "ProxyOracle.unsetTokenFactors",
      "offset": [
        2610,
        2746
      ],
      "op": "PUSH2",
      "path": "176",
      "value": "0x7A9"
    },
    "1814": {
      "fn": "ProxyOracle.unsetTokenFactors",
      "offset": [
        2610,
        2746
      ],
      "op": "JUMPI",
      "path": "176"
    },
    "1815": {
      "fn": "ProxyOracle.unsetTokenFactors",
      "offset": [
        2672,
        2684
      ],
      "op": "PUSH1",
      "path": "176",
      "statement": 7,
      "value": "0x42"
    },
    "1817": {
      "fn": "ProxyOracle.unsetTokenFactors",
      "offset": [
        2672,
        2697
      ],
      "op": "PUSH1",
      "path": "176",
      "value": "0x0"
    },
    "1819": {
      "fn": "ProxyOracle.unsetTokenFactors",
      "offset": [
        2685,
        2691
      ],
      "op": "DUP4",
      "path": "176"
    },
    "1820": {
      "fn": "ProxyOracle.unsetTokenFactors",
      "offset": [
        2692,
        2695
      ],
      "op": "DUP4",
      "path": "176"
    },
    "1821": {
      "fn": "ProxyOracle.unsetTokenFactors",
      "offset": [
        2685,
        2696
      ],
      "op": "DUP2",
      "path": "176"
    },
    "1822": {
      "fn": "ProxyOracle.unsetTokenFactors",
      "offset": [
        2685,
        2696
      ],
      "op": "MLOAD",
      "path": "176"
    },
    "1823": {
      "fn": "ProxyOracle.unsetTokenFactors",
      "offset": [
        2685,
        2696
      ],
      "op": "DUP2",
      "path": "176"
    },
    "1824": {
      "fn": "ProxyOracle.unsetTokenFactors",
      "offset": [
        2685,
        2696
      ],
      "op": "LT",
      "path": "176"
    },
    "1825": {
      "fn": "ProxyOracle.unsetTokenFactors",
      "offset": [
        2685,
        2696
      ],
      "op": "PUSH2",
      "path": "176",
      "value": "0x726"
    },
    "1828": {
      "fn": "ProxyOracle.unsetTokenFactors",
      "offset": [
        2685,
        2696
      ],
      "op": "JUMPI",
      "path": "176"
    },
    "1829": {
      "dev": "Index out of range",
      "fn": "ProxyOracle.unsetTokenFactors",
      "offset": [
        2685,
        2696
      ],
      "op": "INVALID",
      "path": "176"
    },
    "1830": {
      "fn": "ProxyOracle.unsetTokenFactors",
      "offset": [
        2685,
        2696
      ],
      "op": "JUMPDEST",
      "path": "176"
    },
    "1831": {
      "fn": "ProxyOracle.unsetTokenFactors",
      "offset": [
        2685,
        2696
      ],
      "op": "PUSH1",
      "path": "176",
      "value": "0x20"
    },
    "1833": {
      "fn": "ProxyOracle.unsetTokenFactors",
      "offset": [
        2685,
        2696
      ],
      "op": "SWAP1",
      "path": "176"
    },
    "1834": {
      "fn": "ProxyOracle.unsetTokenFactors",
      "offset": [
        2685,
        2696
      ],
      "op": "DUP2",
      "path": "176"
    },
    "1835": {
      "fn": "ProxyOracle.unsetTokenFactors",
      "offset": [
        2685,
        2696
      ],
      "op": "MUL",
      "path": "176"
    },
    "1836": {
      "fn": "ProxyOracle.unsetTokenFactors",
      "offset": [
        2685,
        2696
      ],
      "op": "SWAP2",
      "path": "176"
    },
    "1837": {
      "fn": "ProxyOracle.unsetTokenFactors",
      "offset": [
        2685,
        2696
      ],
      "op": "SWAP1",
      "path": "176"
    },
    "1838": {
      "fn": "ProxyOracle.unsetTokenFactors",
      "offset": [
        2685,
        2696
      ],
      "op": "SWAP2",
      "path": "176"
    },
    "1839": {
      "fn": "ProxyOracle.unsetTokenFactors",
      "offset": [
        2685,
        2696
      ],
      "op": "ADD",
      "path": "176"
    },
    "1840": {
      "fn": "ProxyOracle.unsetTokenFactors",
      "offset": [
        2685,
        2696
      ],
      "op": "DUP2",
      "path": "176"
    },
    "1841": {
      "fn": "ProxyOracle.unsetTokenFactors",
      "offset": [
        2685,
        2696
      ],
      "op": "ADD",
      "path": "176"
    },
    "1842": {
      "fn": "ProxyOracle.unsetTokenFactors",
      "offset": [
        2685,
        2696
      ],
      "op": "MLOAD",
      "path": "176"
    },
    "1843": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1845": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1847": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1849": {
      "op": "SHL"
    },
    "1850": {
      "op": "SUB"
    },
    "1851": {
      "fn": "ProxyOracle.unsetTokenFactors",
      "offset": [
        2672,
        2697
      ],
      "op": "AND",
      "path": "176"
    },
    "1852": {
      "fn": "ProxyOracle.unsetTokenFactors",
      "offset": [
        2672,
        2697
      ],
      "op": "DUP3",
      "path": "176"
    },
    "1853": {
      "fn": "ProxyOracle.unsetTokenFactors",
      "offset": [
        2672,
        2697
      ],
      "op": "MSTORE",
      "path": "176"
    },
    "1854": {
      "fn": "ProxyOracle.unsetTokenFactors",
      "offset": [
        2672,
        2697
      ],
      "op": "DUP2",
      "path": "176"
    },
    "1855": {
      "fn": "ProxyOracle.unsetTokenFactors",
      "offset": [
        2672,
        2697
      ],
      "op": "ADD",
      "path": "176"
    },
    "1856": {
      "fn": "ProxyOracle.unsetTokenFactors",
      "offset": [
        2672,
        2697
      ],
      "op": "SWAP2",
      "path": "176"
    },
    "1857": {
      "fn": "ProxyOracle.unsetTokenFactors",
      "offset": [
        2672,
        2697
      ],
      "op": "SWAP1",
      "path": "176"
    },
    "1858": {
      "fn": "ProxyOracle.unsetTokenFactors",
      "offset": [
        2672,
        2697
      ],
      "op": "SWAP2",
      "path": "176"
    },
    "1859": {
      "fn": "ProxyOracle.unsetTokenFactors",
      "offset": [
        2672,
        2697
      ],
      "op": "MSTORE",
      "path": "176"
    },
    "1860": {
      "fn": "ProxyOracle.unsetTokenFactors",
      "offset": [
        2672,
        2697
      ],
      "op": "PUSH1",
      "path": "176",
      "value": "0x40"
    },
    "1862": {
      "fn": "ProxyOracle.unsetTokenFactors",
      "offset": [
        2672,
        2697
      ],
      "op": "ADD",
      "path": "176"
    },
    "1863": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1865": {
      "fn": "ProxyOracle.unsetTokenFactors",
      "offset": [
        2672,
        2697
      ],
      "op": "KECCAK256",
      "path": "176"
    },
    "1866": {
      "fn": "ProxyOracle.unsetTokenFactors",
      "offset": [
        2665,
        2697
      ],
      "op": "DUP1",
      "path": "176"
    },
    "1867": {
      "fn": "ProxyOracle.unsetTokenFactors",
      "offset": [
        2665,
        2697
      ],
      "op": "SLOAD",
      "path": "176"
    },
    "1868": {
      "op": "PUSH6",
      "value": "0xFFFFFFFFFFFF"
    },
    "1875": {
      "op": "NOT"
    },
    "1876": {
      "fn": "ProxyOracle.unsetTokenFactors",
      "offset": [
        2665,
        2697
      ],
      "op": "AND",
      "path": "176"
    },
    "1877": {
      "fn": "ProxyOracle.unsetTokenFactors",
      "offset": [
        2665,
        2697
      ],
      "op": "SWAP1",
      "path": "176"
    },
    "1878": {
      "fn": "ProxyOracle.unsetTokenFactors",
      "offset": [
        2665,
        2697
      ],
      "op": "SSTORE",
      "path": "176"
    },
    "1879": {
      "fn": "ProxyOracle.unsetTokenFactors",
      "offset": [
        2727,
        2738
      ],
      "op": "DUP2",
      "path": "176",
      "statement": 8
    },
    "1880": {
      "fn": "ProxyOracle.unsetTokenFactors",
      "offset": [
        2727,
        2738
      ],
      "op": "MLOAD",
      "path": "176"
    },
    "1881": {
      "fn": "ProxyOracle.unsetTokenFactors",
      "offset": [
        2727,
        2733
      ],
      "op": "DUP3",
      "path": "176"
    },
    "1882": {
      "fn": "ProxyOracle.unsetTokenFactors",
      "offset": [
        2727,
        2733
      ],
      "op": "SWAP1",
      "path": "176"
    },
    "1883": {
      "fn": "ProxyOracle.unsetTokenFactors",
      "offset": [
        2734,
        2737
      ],
      "op": "DUP3",
      "path": "176"
    },
    "1884": {
      "fn": "ProxyOracle.unsetTokenFactors",
      "offset": [
        2734,
        2737
      ],
      "op": "SWAP1",
      "path": "176"
    },
    "1885": {
      "fn": "ProxyOracle.unsetTokenFactors",
      "offset": [
        2727,
        2738
      ],
      "op": "DUP2",
      "path": "176"
    },
    "1886": {
      "fn": "ProxyOracle.unsetTokenFactors",
      "offset": [
        2727,
        2738
      ],
      "op": "LT",
      "path": "176"
    },
    "1887": {
      "fn": "ProxyOracle.unsetTokenFactors",
      "offset": [
        2727,
        2738
      ],
      "op": "PUSH2",
      "path": "176",
      "value": "0x764"
    },
    "1890": {
      "fn": "ProxyOracle.unsetTokenFactors",
      "offset": [
        2727,
        2738
      ],
      "op": "JUMPI",
      "path": "176"
    },
    "1891": {
      "dev": "Index out of range",
      "fn": "ProxyOracle.unsetTokenFactors",
      "offset": [
        2727,
        2738
      ],
      "op": "INVALID",
      "path": "176"
    },
    "1892": {
      "fn": "ProxyOracle.unsetTokenFactors",
      "offset": [
        2727,
        2738
      ],
      "op": "JUMPDEST",
      "path": "176"
    },
    "1893": {
      "fn": "ProxyOracle.unsetTokenFactors",
      "offset": [
        2727,
        2738
      ],
      "op": "PUSH1",
      "path": "176",
      "value": "0x20"
    },
    "1895": {
      "fn": "ProxyOracle.unsetTokenFactors",
      "offset": [
        2727,
        2738
      ],
      "op": "MUL",
      "path": "176"
    },
    "1896": {
      "fn": "ProxyOracle.unsetTokenFactors",
      "offset": [
        2727,
        2738
      ],
      "op": "PUSH1",
      "path": "176",
      "value": "0x20"
    },
    "1898": {
      "fn": "ProxyOracle.unsetTokenFactors",
      "offset": [
        2727,
        2738
      ],
      "op": "ADD",
      "path": "176"
    },
    "1899": {
      "fn": "ProxyOracle.unsetTokenFactors",
      "offset": [
        2727,
        2738
      ],
      "op": "ADD",
      "path": "176"
    },
    "1900": {
      "fn": "ProxyOracle.unsetTokenFactors",
      "offset": [
        2727,
        2738
      ],
      "op": "MLOAD",
      "path": "176"
    },
    "1901": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1903": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1905": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1907": {
      "op": "SHL"
    },
    "1908": {
      "op": "SUB"
    },
    "1909": {
      "fn": "ProxyOracle.unsetTokenFactors",
      "offset": [
        2710,
        2739
      ],
      "op": "AND",
      "path": "176"
    },
    "1910": {
      "fn": "ProxyOracle.unsetTokenFactors",
      "offset": [
        2710,
        2739
      ],
      "op": "PUSH32",
      "path": "176",
      "value": "0x995B73152D62A9A92BD554852DB356F087E63690E0CB9656CEDD21A8D0E27C1B"
    },
    "1943": {
      "fn": "ProxyOracle.unsetTokenFactors",
      "offset": [
        2710,
        2739
      ],
      "op": "PUSH1",
      "path": "176",
      "value": "0x40"
    },
    "1945": {
      "fn": "ProxyOracle.unsetTokenFactors",
      "offset": [
        2710,
        2739
      ],
      "op": "MLOAD",
      "path": "176"
    },
    "1946": {
      "fn": "ProxyOracle.unsetTokenFactors",
      "offset": [
        2710,
        2739
      ],
      "op": "PUSH1",
      "path": "176",
      "value": "0x40"
    },
    "1948": {
      "fn": "ProxyOracle.unsetTokenFactors",
      "offset": [
        2710,
        2739
      ],
      "op": "MLOAD",
      "path": "176"
    },
    "1949": {
      "fn": "ProxyOracle.unsetTokenFactors",
      "offset": [
        2710,
        2739
      ],
      "op": "DUP1",
      "path": "176"
    },
    "1950": {
      "fn": "ProxyOracle.unsetTokenFactors",
      "offset": [
        2710,
        2739
      ],
      "op": "SWAP2",
      "path": "176"
    },
    "1951": {
      "fn": "ProxyOracle.unsetTokenFactors",
      "offset": [
        2710,
        2739
      ],
      "op": "SUB",
      "path": "176"
    },
    "1952": {
      "fn": "ProxyOracle.unsetTokenFactors",
      "offset": [
        2710,
        2739
      ],
      "op": "SWAP1",
      "path": "176"
    },
    "1953": {
      "fn": "ProxyOracle.unsetTokenFactors",
      "offset": [
        2710,
        2739
      ],
      "op": "LOG2",
      "path": "176"
    },
    "1954": {
      "fn": "ProxyOracle.unsetTokenFactors",
      "offset": [
        2650,
        2655
      ],
      "op": "PUSH1",
      "path": "176",
      "statement": 9,
      "value": "0x1"
    },
    "1956": {
      "fn": "ProxyOracle.unsetTokenFactors",
      "offset": [
        2650,
        2655
      ],
      "op": "ADD",
      "path": "176"
    },
    "1957": {
      "fn": "ProxyOracle.unsetTokenFactors",
      "offset": [
        2610,
        2746
      ],
      "op": "PUSH2",
      "path": "176",
      "value": "0x70D"
    },
    "1960": {
      "fn": "ProxyOracle.unsetTokenFactors",
      "offset": [
        2610,
        2746
      ],
      "op": "JUMP",
      "path": "176"
    },
    "1961": {
      "fn": "ProxyOracle.unsetTokenFactors",
      "offset": [
        2610,
        2746
      ],
      "op": "JUMPDEST",
      "path": "176"
    },
    "1962": {
      "fn": "ProxyOracle.unsetTokenFactors",
      "offset": [
        2610,
        2746
      ],
      "op": "POP",
      "path": "176"
    },
    "1963": {
      "fn": "ProxyOracle.unsetTokenFactors",
      "offset": [
        2535,
        2750
      ],
      "op": "POP",
      "path": "176"
    },
    "1964": {
      "fn": "ProxyOracle.unsetTokenFactors",
      "jump": "o",
      "offset": [
        2535,
        2750
      ],
      "op": "JUMP",
      "path": "176"
    },
    "1965": {
      "offset": [
        1033,
        1068
      ],
      "op": "JUMPDEST",
      "path": "176"
    },
    "1966": {
      "fn": "ProxyOracle.unsetTokenFactors",
      "offset": [
        1033,
        1068
      ],
      "op": "PUSH32",
      "path": "176",
      "value": "0x0"
    },
    "1999": {
      "fn": "ProxyOracle.unsetTokenFactors",
      "offset": [
        1033,
        1068
      ],
      "op": "DUP2",
      "path": "176"
    },
    "2000": {
      "fn": "ProxyOracle.unsetTokenFactors",
      "jump": "o",
      "offset": [
        1033,
        1068
      ],
      "op": "JUMP",
      "path": "176"
    },
    "2001": {
      "fn": "ProxyOracle.setWhitelistERC1155",
      "offset": [
        2917,
        3145
      ],
      "op": "JUMPDEST",
      "path": "176"
    },
    "2002": {
      "offset": [
        566,
        574
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "2004": {
      "fn": "ProxyOracle.setWhitelistERC1155",
      "offset": [
        566,
        574
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "2005": {
      "fn": "ProxyOracle.setWhitelistERC1155",
      "offset": [
        566,
        574
      ],
      "op": "PUSH3",
      "path": "22",
      "value": "0x10000"
    },
    "2009": {
      "fn": "ProxyOracle.setWhitelistERC1155",
      "offset": [
        566,
        574
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2010": {
      "fn": "ProxyOracle.setWhitelistERC1155",
      "offset": [
        566,
        574
      ],
      "op": "DIV",
      "path": "22"
    },
    "2011": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2013": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2015": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2017": {
      "op": "SHL"
    },
    "2018": {
      "op": "SUB"
    },
    "2019": {
      "offset": [
        566,
        574
      ],
      "op": "AND",
      "path": "22"
    },
    "2020": {
      "offset": [
        552,
        562
      ],
      "op": "CALLER",
      "path": "22"
    },
    "2021": {
      "offset": [
        552,
        574
      ],
      "op": "EQ",
      "path": "22"
    },
    "2022": {
      "offset": [
        544,
        595
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x801"
    },
    "2025": {
      "offset": [
        544,
        595
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "2026": {
      "fn": "ProxyOracle.setWhitelistERC1155",
      "offset": [
        544,
        595
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "2028": {
      "fn": "ProxyOracle.setWhitelistERC1155",
      "offset": [
        544,
        595
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "2029": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2033": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2035": {
      "op": "SHL"
    },
    "2036": {
      "offset": [
        544,
        595
      ],
      "op": "DUP2",
      "path": "22"
    },
    "2037": {
      "fn": "ProxyOracle.setWhitelistERC1155",
      "offset": [
        544,
        595
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "2038": {
      "fn": "ProxyOracle.setWhitelistERC1155",
      "offset": [
        544,
        595
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "2040": {
      "fn": "ProxyOracle.setWhitelistERC1155",
      "offset": [
        544,
        595
      ],
      "op": "ADD",
      "path": "22"
    },
    "2041": {
      "fn": "ProxyOracle.setWhitelistERC1155",
      "offset": [
        544,
        595
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2B6"
    },
    "2044": {
      "fn": "ProxyOracle.setWhitelistERC1155",
      "offset": [
        544,
        595
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2045": {
      "fn": "ProxyOracle.setWhitelistERC1155",
      "offset": [
        544,
        595
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x15F8"
    },
    "2048": {
      "fn": "ProxyOracle.setWhitelistERC1155",
      "jump": "i",
      "offset": [
        544,
        595
      ],
      "op": "JUMP",
      "path": "22"
    },
    "2049": {
      "fn": "ProxyOracle.setWhitelistERC1155",
      "offset": [
        544,
        595
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2050": {
      "fn": "ProxyOracle.setWhitelistERC1155",
      "offset": [
        3008,
        3016
      ],
      "op": "PUSH1",
      "path": "176",
      "value": "0x0"
    },
    "2052": {
      "fn": "ProxyOracle.setWhitelistERC1155",
      "offset": [
        3003,
        3141
      ],
      "op": "JUMPDEST",
      "path": "176"
    },
    "2053": {
      "fn": "ProxyOracle.setWhitelistERC1155",
      "offset": [
        3028,
        3034
      ],
      "op": "DUP3",
      "path": "176"
    },
    "2054": {
      "fn": "ProxyOracle.setWhitelistERC1155",
      "offset": [
        3028,
        3041
      ],
      "op": "MLOAD",
      "path": "176"
    },
    "2055": {
      "fn": "ProxyOracle.setWhitelistERC1155",
      "offset": [
        3022,
        3025
      ],
      "op": "DUP2",
      "path": "176"
    },
    "2056": {
      "fn": "ProxyOracle.setWhitelistERC1155",
      "offset": [
        3022,
        3041
      ],
      "op": "LT",
      "path": "176"
    },
    "2057": {
      "fn": "ProxyOracle.setWhitelistERC1155",
      "offset": [
        3003,
        3141
      ],
      "op": "ISZERO",
      "path": "176"
    },
    "2058": {
      "fn": "ProxyOracle.setWhitelistERC1155",
      "offset": [
        3003,
        3141
      ],
      "op": "PUSH2",
      "path": "176",
      "value": "0x8B9"
    },
    "2061": {
      "fn": "ProxyOracle.setWhitelistERC1155",
      "offset": [
        3003,
        3141
      ],
      "op": "JUMPI",
      "path": "176"
    },
    "2062": {
      "fn": "ProxyOracle.setWhitelistERC1155",
      "offset": [
        3090,
        3092
      ],
      "op": "DUP2",
      "path": "176",
      "statement": 10
    },
    "2063": {
      "fn": "ProxyOracle.setWhitelistERC1155",
      "offset": [
        3058,
        3074
      ],
      "op": "PUSH1",
      "path": "176",
      "value": "0x43"
    },
    "2065": {
      "fn": "ProxyOracle.setWhitelistERC1155",
      "offset": [
        3058,
        3087
      ],
      "op": "PUSH1",
      "path": "176",
      "value": "0x0"
    },
    "2067": {
      "fn": "ProxyOracle.setWhitelistERC1155",
      "offset": [
        3075,
        3081
      ],
      "op": "DUP6",
      "path": "176"
    },
    "2068": {
      "fn": "ProxyOracle.setWhitelistERC1155",
      "offset": [
        3082,
        3085
      ],
      "op": "DUP5",
      "path": "176"
    },
    "2069": {
      "fn": "ProxyOracle.setWhitelistERC1155",
      "offset": [
        3075,
        3086
      ],
      "op": "DUP2",
      "path": "176"
    },
    "2070": {
      "fn": "ProxyOracle.setWhitelistERC1155",
      "offset": [
        3075,
        3086
      ],
      "op": "MLOAD",
      "path": "176"
    },
    "2071": {
      "fn": "ProxyOracle.setWhitelistERC1155",
      "offset": [
        3075,
        3086
      ],
      "op": "DUP2",
      "path": "176"
    },
    "2072": {
      "fn": "ProxyOracle.setWhitelistERC1155",
      "offset": [
        3075,
        3086
      ],
      "op": "LT",
      "path": "176"
    },
    "2073": {
      "fn": "ProxyOracle.setWhitelistERC1155",
      "offset": [
        3075,
        3086
      ],
      "op": "PUSH2",
      "path": "176",
      "value": "0x81E"
    },
    "2076": {
      "fn": "ProxyOracle.setWhitelistERC1155",
      "offset": [
        3075,
        3086
      ],
      "op": "JUMPI",
      "path": "176"
    },
    "2077": {
      "dev": "Index out of range",
      "fn": "ProxyOracle.setWhitelistERC1155",
      "offset": [
        3075,
        3086
      ],
      "op": "INVALID",
      "path": "176"
    },
    "2078": {
      "fn": "ProxyOracle.setWhitelistERC1155",
      "offset": [
        3075,
        3086
      ],
      "op": "JUMPDEST",
      "path": "176"
    },
    "2079": {
      "fn": "ProxyOracle.setWhitelistERC1155",
      "offset": [
        3075,
        3086
      ],
      "op": "PUSH1",
      "path": "176",
      "value": "0x20"
    },
    "2081": {
      "fn": "ProxyOracle.setWhitelistERC1155",
      "offset": [
        3075,
        3086
      ],
      "op": "MUL",
      "path": "176"
    },
    "2082": {
      "fn": "ProxyOracle.setWhitelistERC1155",
      "offset": [
        3075,
        3086
      ],
      "op": "PUSH1",
      "path": "176",
      "value": "0x20"
    },
    "2084": {
      "fn": "ProxyOracle.setWhitelistERC1155",
      "offset": [
        3075,
        3086
      ],
      "op": "ADD",
      "path": "176"
    },
    "2085": {
      "fn": "ProxyOracle.setWhitelistERC1155",
      "offset": [
        3075,
        3086
      ],
      "op": "ADD",
      "path": "176"
    },
    "2086": {
      "fn": "ProxyOracle.setWhitelistERC1155",
      "offset": [
        3075,
        3086
      ],
      "op": "MLOAD",
      "path": "176"
    },
    "2087": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2089": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2091": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2093": {
      "op": "SHL"
    },
    "2094": {
      "op": "SUB"
    },
    "2095": {
      "fn": "ProxyOracle.setWhitelistERC1155",
      "offset": [
        3058,
        3087
      ],
      "op": "AND",
      "path": "176"
    },
    "2096": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2098": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2100": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2102": {
      "op": "SHL"
    },
    "2103": {
      "op": "SUB"
    },
    "2104": {
      "fn": "ProxyOracle.setWhitelistERC1155",
      "offset": [
        3058,
        3087
      ],
      "op": "AND",
      "path": "176"
    },
    "2105": {
      "fn": "ProxyOracle.setWhitelistERC1155",
      "offset": [
        3058,
        3087
      ],
      "op": "DUP2",
      "path": "176"
    },
    "2106": {
      "fn": "ProxyOracle.setWhitelistERC1155",
      "offset": [
        3058,
        3087
      ],
      "op": "MSTORE",
      "path": "176"
    },
    "2107": {
      "fn": "ProxyOracle.setWhitelistERC1155",
      "offset": [
        3058,
        3087
      ],
      "op": "PUSH1",
      "path": "176",
      "value": "0x20"
    },
    "2109": {
      "fn": "ProxyOracle.setWhitelistERC1155",
      "offset": [
        3058,
        3087
      ],
      "op": "ADD",
      "path": "176"
    },
    "2110": {
      "fn": "ProxyOracle.setWhitelistERC1155",
      "offset": [
        3058,
        3087
      ],
      "op": "SWAP1",
      "path": "176"
    },
    "2111": {
      "fn": "ProxyOracle.setWhitelistERC1155",
      "offset": [
        3058,
        3087
      ],
      "op": "DUP2",
      "path": "176"
    },
    "2112": {
      "fn": "ProxyOracle.setWhitelistERC1155",
      "offset": [
        3058,
        3087
      ],
      "op": "MSTORE",
      "path": "176"
    },
    "2113": {
      "fn": "ProxyOracle.setWhitelistERC1155",
      "offset": [
        3058,
        3087
      ],
      "op": "PUSH1",
      "path": "176",
      "value": "0x20"
    },
    "2115": {
      "fn": "ProxyOracle.setWhitelistERC1155",
      "offset": [
        3058,
        3087
      ],
      "op": "ADD",
      "path": "176"
    },
    "2116": {
      "fn": "ProxyOracle.setWhitelistERC1155",
      "offset": [
        3058,
        3087
      ],
      "op": "PUSH1",
      "path": "176",
      "value": "0x0"
    },
    "2118": {
      "fn": "ProxyOracle.setWhitelistERC1155",
      "offset": [
        3058,
        3087
      ],
      "op": "KECCAK256",
      "path": "176"
    },
    "2119": {
      "fn": "ProxyOracle.setWhitelistERC1155",
      "offset": [
        3058,
        3087
      ],
      "op": "PUSH1",
      "path": "176",
      "value": "0x0"
    },
    "2121": {
      "fn": "ProxyOracle.setWhitelistERC1155",
      "offset": [
        3058,
        3092
      ],
      "op": "PUSH2",
      "path": "176",
      "value": "0x100"
    },
    "2124": {
      "fn": "ProxyOracle.setWhitelistERC1155",
      "offset": [
        3058,
        3092
      ],
      "op": "EXP",
      "path": "176"
    },
    "2125": {
      "fn": "ProxyOracle.setWhitelistERC1155",
      "offset": [
        3058,
        3092
      ],
      "op": "DUP2",
      "path": "176"
    },
    "2126": {
      "fn": "ProxyOracle.setWhitelistERC1155",
      "offset": [
        3058,
        3092
      ],
      "op": "SLOAD",
      "path": "176"
    },
    "2127": {
      "fn": "ProxyOracle.setWhitelistERC1155",
      "offset": [
        3058,
        3092
      ],
      "op": "DUP2",
      "path": "176"
    },
    "2128": {
      "fn": "ProxyOracle.setWhitelistERC1155",
      "offset": [
        3058,
        3092
      ],
      "op": "PUSH1",
      "path": "176",
      "value": "0xFF"
    },
    "2130": {
      "fn": "ProxyOracle.setWhitelistERC1155",
      "offset": [
        3058,
        3092
      ],
      "op": "MUL",
      "path": "176"
    },
    "2131": {
      "fn": "ProxyOracle.setWhitelistERC1155",
      "offset": [
        3058,
        3092
      ],
      "op": "NOT",
      "path": "176"
    },
    "2132": {
      "fn": "ProxyOracle.setWhitelistERC1155",
      "offset": [
        3058,
        3092
      ],
      "op": "AND",
      "path": "176"
    },
    "2133": {
      "fn": "ProxyOracle.setWhitelistERC1155",
      "offset": [
        3058,
        3092
      ],
      "op": "SWAP1",
      "path": "176"
    },
    "2134": {
      "fn": "ProxyOracle.setWhitelistERC1155",
      "offset": [
        3058,
        3092
      ],
      "op": "DUP4",
      "path": "176"
    },
    "2135": {
      "fn": "ProxyOracle.setWhitelistERC1155",
      "offset": [
        3058,
        3092
      ],
      "op": "ISZERO",
      "path": "176"
    },
    "2136": {
      "fn": "ProxyOracle.setWhitelistERC1155",
      "offset": [
        3058,
        3092
      ],
      "op": "ISZERO",
      "path": "176"
    },
    "2137": {
      "fn": "ProxyOracle.setWhitelistERC1155",
      "offset": [
        3058,
        3092
      ],
      "op": "MUL",
      "path": "176"
    },
    "2138": {
      "fn": "ProxyOracle.setWhitelistERC1155",
      "offset": [
        3058,
        3092
      ],
      "op": "OR",
      "path": "176"
    },
    "2139": {
      "fn": "ProxyOracle.setWhitelistERC1155",
      "offset": [
        3058,
        3092
      ],
      "op": "SWAP1",
      "path": "176"
    },
    "2140": {
      "fn": "ProxyOracle.setWhitelistERC1155",
      "offset": [
        3058,
        3092
      ],
      "op": "SSTORE",
      "path": "176"
    },
    "2141": {
      "fn": "ProxyOracle.setWhitelistERC1155",
      "offset": [
        3058,
        3092
      ],
      "op": "POP",
      "path": "176"
    },
    "2142": {
      "fn": "ProxyOracle.setWhitelistERC1155",
      "offset": [
        3118,
        3124
      ],
      "op": "DUP3",
      "path": "176",
      "statement": 11
    },
    "2143": {
      "fn": "ProxyOracle.setWhitelistERC1155",
      "offset": [
        3125,
        3128
      ],
      "op": "DUP2",
      "path": "176"
    },
    "2144": {
      "fn": "ProxyOracle.setWhitelistERC1155",
      "offset": [
        3118,
        3129
      ],
      "op": "DUP2",
      "path": "176"
    },
    "2145": {
      "fn": "ProxyOracle.setWhitelistERC1155",
      "offset": [
        3118,
        3129
      ],
      "op": "MLOAD",
      "path": "176"
    },
    "2146": {
      "fn": "ProxyOracle.setWhitelistERC1155",
      "offset": [
        3118,
        3129
      ],
      "op": "DUP2",
      "path": "176"
    },
    "2147": {
      "fn": "ProxyOracle.setWhitelistERC1155",
      "offset": [
        3118,
        3129
      ],
      "op": "LT",
      "path": "176"
    },
    "2148": {
      "fn": "ProxyOracle.setWhitelistERC1155",
      "offset": [
        3118,
        3129
      ],
      "op": "PUSH2",
      "path": "176",
      "value": "0x869"
    },
    "2151": {
      "fn": "ProxyOracle.setWhitelistERC1155",
      "offset": [
        3118,
        3129
      ],
      "op": "JUMPI",
      "path": "176"
    },
    "2152": {
      "dev": "Index out of range",
      "fn": "ProxyOracle.setWhitelistERC1155",
      "offset": [
        3118,
        3129
      ],
      "op": "INVALID",
      "path": "176"
    },
    "2153": {
      "fn": "ProxyOracle.setWhitelistERC1155",
      "offset": [
        3118,
        3129
      ],
      "op": "JUMPDEST",
      "path": "176"
    },
    "2154": {
      "fn": "ProxyOracle.setWhitelistERC1155",
      "offset": [
        3118,
        3129
      ],
      "op": "PUSH1",
      "path": "176",
      "value": "0x20"
    },
    "2156": {
      "fn": "ProxyOracle.setWhitelistERC1155",
      "offset": [
        3118,
        3129
      ],
      "op": "MUL",
      "path": "176"
    },
    "2157": {
      "fn": "ProxyOracle.setWhitelistERC1155",
      "offset": [
        3118,
        3129
      ],
      "op": "PUSH1",
      "path": "176",
      "value": "0x20"
    },
    "2159": {
      "fn": "ProxyOracle.setWhitelistERC1155",
      "offset": [
        3118,
        3129
      ],
      "op": "ADD",
      "path": "176"
    },
    "2160": {
      "fn": "ProxyOracle.setWhitelistERC1155",
      "offset": [
        3118,
        3129
      ],
      "op": "ADD",
      "path": "176"
    },
    "2161": {
      "fn": "ProxyOracle.setWhitelistERC1155",
      "offset": [
        3118,
        3129
      ],
      "op": "MLOAD",
      "path": "176"
    },
    "2162": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2164": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2166": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2168": {
      "op": "SHL"
    },
    "2169": {
      "op": "SUB"
    },
    "2170": {
      "fn": "ProxyOracle.setWhitelistERC1155",
      "offset": [
        3105,
        3134
      ],
      "op": "AND",
      "path": "176"
    },
    "2171": {
      "fn": "ProxyOracle.setWhitelistERC1155",
      "offset": [
        3105,
        3134
      ],
      "op": "PUSH32",
      "path": "176",
      "value": "0xF6019EC0A78D156D249A1EC7579E2321F6AC7521D6E1D2EACF90BA4A184DCCEB"
    },
    "2204": {
      "fn": "ProxyOracle.setWhitelistERC1155",
      "offset": [
        3131,
        3133
      ],
      "op": "DUP4",
      "path": "176"
    },
    "2205": {
      "fn": "ProxyOracle.setWhitelistERC1155",
      "offset": [
        3105,
        3134
      ],
      "op": "PUSH1",
      "path": "176",
      "value": "0x40"
    },
    "2207": {
      "fn": "ProxyOracle.setWhitelistERC1155",
      "offset": [
        3105,
        3134
      ],
      "op": "MLOAD",
      "path": "176"
    },
    "2208": {
      "fn": "ProxyOracle.setWhitelistERC1155",
      "offset": [
        3105,
        3134
      ],
      "op": "PUSH2",
      "path": "176",
      "value": "0x8A9"
    },
    "2211": {
      "fn": "ProxyOracle.setWhitelistERC1155",
      "offset": [
        3105,
        3134
      ],
      "op": "SWAP2",
      "path": "176"
    },
    "2212": {
      "fn": "ProxyOracle.setWhitelistERC1155",
      "offset": [
        3105,
        3134
      ],
      "op": "SWAP1",
      "path": "176"
    },
    "2213": {
      "fn": "ProxyOracle.setWhitelistERC1155",
      "offset": [
        3105,
        3134
      ],
      "op": "PUSH2",
      "path": "176",
      "value": "0x151C"
    },
    "2216": {
      "fn": "ProxyOracle.setWhitelistERC1155",
      "jump": "i",
      "offset": [
        3105,
        3134
      ],
      "op": "JUMP",
      "path": "176"
    },
    "2217": {
      "fn": "ProxyOracle.setWhitelistERC1155",
      "offset": [
        3105,
        3134
      ],
      "op": "JUMPDEST",
      "path": "176"
    },
    "2218": {
      "fn": "ProxyOracle.setWhitelistERC1155",
      "offset": [
        3105,
        3134
      ],
      "op": "PUSH1",
      "path": "176",
      "value": "0x40"
    },
    "2220": {
      "fn": "ProxyOracle.setWhitelistERC1155",
      "offset": [
        3105,
        3134
      ],
      "op": "MLOAD",
      "path": "176"
    },
    "2221": {
      "fn": "ProxyOracle.setWhitelistERC1155",
      "offset": [
        3105,
        3134
      ],
      "op": "DUP1",
      "path": "176"
    },
    "2222": {
      "fn": "ProxyOracle.setWhitelistERC1155",
      "offset": [
        3105,
        3134
      ],
      "op": "SWAP2",
      "path": "176"
    },
    "2223": {
      "fn": "ProxyOracle.setWhitelistERC1155",
      "offset": [
        3105,
        3134
      ],
      "op": "SUB",
      "path": "176"
    },
    "2224": {
      "fn": "ProxyOracle.setWhitelistERC1155",
      "offset": [
        3105,
        3134
      ],
      "op": "SWAP1",
      "path": "176"
    },
    "2225": {
      "fn": "ProxyOracle.setWhitelistERC1155",
      "offset": [
        3105,
        3134
      ],
      "op": "LOG2",
      "path": "176"
    },
    "2226": {
      "fn": "ProxyOracle.setWhitelistERC1155",
      "offset": [
        3043,
        3048
      ],
      "op": "PUSH1",
      "path": "176",
      "statement": 12,
      "value": "0x1"
    },
    "2228": {
      "fn": "ProxyOracle.setWhitelistERC1155",
      "offset": [
        3043,
        3048
      ],
      "op": "ADD",
      "path": "176"
    },
    "2229": {
      "fn": "ProxyOracle.setWhitelistERC1155",
      "offset": [
        3003,
        3141
      ],
      "op": "PUSH2",
      "path": "176",
      "value": "0x804"
    },
    "2232": {
      "fn": "ProxyOracle.setWhitelistERC1155",
      "offset": [
        3003,
        3141
      ],
      "op": "JUMP",
      "path": "176"
    },
    "2233": {
      "fn": "ProxyOracle.setWhitelistERC1155",
      "offset": [
        3003,
        3141
      ],
      "op": "JUMPDEST",
      "path": "176"
    },
    "2234": {
      "fn": "ProxyOracle.setWhitelistERC1155",
      "offset": [
        3003,
        3141
      ],
      "op": "POP",
      "path": "176"
    },
    "2235": {
      "fn": "ProxyOracle.setWhitelistERC1155",
      "offset": [
        2917,
        3145
      ],
      "op": "POP",
      "path": "176"
    },
    "2236": {
      "fn": "ProxyOracle.setWhitelistERC1155",
      "offset": [
        2917,
        3145
      ],
      "op": "POP",
      "path": "176"
    },
    "2237": {
      "fn": "ProxyOracle.setWhitelistERC1155",
      "jump": "o",
      "offset": [
        2917,
        3145
      ],
      "op": "JUMP",
      "path": "176"
    },
    "2238": {
      "offset": [
        1094,
        1146
      ],
      "op": "JUMPDEST",
      "path": "176"
    },
    "2239": {
      "fn": "ProxyOracle.setWhitelistERC1155",
      "offset": [
        1094,
        1146
      ],
      "op": "PUSH1",
      "path": "176",
      "value": "0x42"
    },
    "2241": {
      "fn": "ProxyOracle.setWhitelistERC1155",
      "offset": [
        1094,
        1146
      ],
      "op": "PUSH1",
      "path": "176",
      "value": "0x20"
    },
    "2243": {
      "fn": "ProxyOracle.setWhitelistERC1155",
      "offset": [
        1094,
        1146
      ],
      "op": "MSTORE",
      "path": "176"
    },
    "2244": {
      "fn": "ProxyOracle.setWhitelistERC1155",
      "offset": [
        1094,
        1146
      ],
      "op": "PUSH1",
      "path": "176",
      "value": "0x0"
    },
    "2246": {
      "fn": "ProxyOracle.setWhitelistERC1155",
      "offset": [
        1094,
        1146
      ],
      "op": "SWAP1",
      "path": "176"
    },
    "2247": {
      "fn": "ProxyOracle.setWhitelistERC1155",
      "offset": [
        1094,
        1146
      ],
      "op": "DUP2",
      "path": "176"
    },
    "2248": {
      "fn": "ProxyOracle.setWhitelistERC1155",
      "offset": [
        1094,
        1146
      ],
      "op": "MSTORE",
      "path": "176"
    },
    "2249": {
      "fn": "ProxyOracle.setWhitelistERC1155",
      "offset": [
        1094,
        1146
      ],
      "op": "PUSH1",
      "path": "176",
      "value": "0x40"
    },
    "2251": {
      "fn": "ProxyOracle.setWhitelistERC1155",
      "offset": [
        1094,
        1146
      ],
      "op": "SWAP1",
      "path": "176"
    },
    "2252": {
      "fn": "ProxyOracle.setWhitelistERC1155",
      "offset": [
        1094,
        1146
      ],
      "op": "KECCAK256",
      "path": "176"
    },
    "2253": {
      "fn": "ProxyOracle.setWhitelistERC1155",
      "offset": [
        1094,
        1146
      ],
      "op": "SLOAD",
      "path": "176"
    },
    "2254": {
      "fn": "ProxyOracle.setWhitelistERC1155",
      "offset": [
        1094,
        1146
      ],
      "op": "PUSH2",
      "path": "176",
      "value": "0xFFFF"
    },
    "2257": {
      "fn": "ProxyOracle.setWhitelistERC1155",
      "offset": [
        1094,
        1146
      ],
      "op": "DUP1",
      "path": "176"
    },
    "2258": {
      "fn": "ProxyOracle.setWhitelistERC1155",
      "offset": [
        1094,
        1146
      ],
      "op": "DUP3",
      "path": "176"
    },
    "2259": {
      "fn": "ProxyOracle.setWhitelistERC1155",
      "offset": [
        1094,
        1146
      ],
      "op": "AND",
      "path": "176"
    },
    "2260": {
      "fn": "ProxyOracle.setWhitelistERC1155",
      "offset": [
        1094,
        1146
      ],
      "op": "SWAP2",
      "path": "176"
    },
    "2261": {
      "fn": "ProxyOracle.setWhitelistERC1155",
      "offset": [
        1094,
        1146
      ],
      "op": "PUSH3",
      "path": "176",
      "value": "0x10000"
    },
    "2265": {
      "fn": "ProxyOracle.setWhitelistERC1155",
      "offset": [
        1094,
        1146
      ],
      "op": "DUP2",
      "path": "176"
    },
    "2266": {
      "fn": "ProxyOracle.setWhitelistERC1155",
      "offset": [
        1094,
        1146
      ],
      "op": "DIV",
      "path": "176"
    },
    "2267": {
      "fn": "ProxyOracle.setWhitelistERC1155",
      "offset": [
        1094,
        1146
      ],
      "op": "DUP3",
      "path": "176"
    },
    "2268": {
      "fn": "ProxyOracle.setWhitelistERC1155",
      "offset": [
        1094,
        1146
      ],
      "op": "AND",
      "path": "176"
    },
    "2269": {
      "fn": "ProxyOracle.setWhitelistERC1155",
      "offset": [
        1094,
        1146
      ],
      "op": "SWAP2",
      "path": "176"
    },
    "2270": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2272": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2274": {
      "op": "SHL"
    },
    "2275": {
      "offset": [
        1094,
        1146
      ],
      "op": "SWAP1",
      "path": "176"
    },
    "2276": {
      "fn": "ProxyOracle.setWhitelistERC1155",
      "offset": [
        1094,
        1146
      ],
      "op": "SWAP2",
      "path": "176"
    },
    "2277": {
      "fn": "ProxyOracle.setWhitelistERC1155",
      "offset": [
        1094,
        1146
      ],
      "op": "DIV",
      "path": "176"
    },
    "2278": {
      "fn": "ProxyOracle.setWhitelistERC1155",
      "offset": [
        1094,
        1146
      ],
      "op": "AND",
      "path": "176"
    },
    "2279": {
      "fn": "ProxyOracle.setWhitelistERC1155",
      "offset": [
        1094,
        1146
      ],
      "op": "DUP4",
      "path": "176"
    },
    "2280": {
      "fn": "ProxyOracle.setWhitelistERC1155",
      "jump": "o",
      "offset": [
        1094,
        1146
      ],
      "op": "JUMP",
      "path": "176"
    },
    "2281": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        3909,
        4889
      ],
      "op": "JUMPDEST",
      "path": "176"
    },
    "2282": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2284": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2286": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2288": {
      "op": "SHL"
    },
    "2289": {
      "op": "SUB"
    },
    "2290": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4079,
        4105
      ],
      "op": "DUP4",
      "path": "176",
      "statement": 13
    },
    "2291": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4079,
        4105
      ],
      "op": "AND",
      "path": "176"
    },
    "2292": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4059,
        4063
      ],
      "op": "PUSH1",
      "path": "176",
      "value": "0x0"
    },
    "2294": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4079,
        4105
      ],
      "op": "SWAP1",
      "path": "176"
    },
    "2295": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4079,
        4105
      ],
      "op": "DUP2",
      "path": "176"
    },
    "2296": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4079,
        4105
      ],
      "op": "MSTORE",
      "path": "176"
    },
    "2297": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4079,
        4095
      ],
      "op": "PUSH1",
      "path": "176",
      "value": "0x43"
    },
    "2299": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4079,
        4105
      ],
      "op": "PUSH1",
      "path": "176",
      "value": "0x20"
    },
    "2301": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4079,
        4105
      ],
      "op": "MSTORE",
      "path": "176"
    },
    "2302": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4079,
        4105
      ],
      "op": "PUSH1",
      "path": "176",
      "value": "0x40"
    },
    "2304": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4079,
        4105
      ],
      "op": "DUP2",
      "path": "176"
    },
    "2305": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4079,
        4105
      ],
      "op": "KECCAK256",
      "path": "176"
    },
    "2306": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4079,
        4105
      ],
      "op": "SLOAD",
      "path": "176"
    },
    "2307": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4079,
        4105
      ],
      "op": "PUSH1",
      "path": "176",
      "value": "0xFF"
    },
    "2309": {
      "branch": 42,
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4079,
        4105
      ],
      "op": "AND",
      "path": "176"
    },
    "2310": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4071,
        4119
      ],
      "op": "PUSH2",
      "path": "176",
      "value": "0x921"
    },
    "2313": {
      "branch": 42,
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4071,
        4119
      ],
      "op": "JUMPI",
      "path": "176"
    },
    "2314": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4071,
        4119
      ],
      "op": "PUSH1",
      "path": "176",
      "value": "0x40"
    },
    "2316": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4071,
        4119
      ],
      "op": "MLOAD",
      "path": "176"
    },
    "2317": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2321": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2323": {
      "op": "SHL"
    },
    "2324": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4071,
        4119
      ],
      "op": "DUP2",
      "path": "176"
    },
    "2325": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4071,
        4119
      ],
      "op": "MSTORE",
      "path": "176"
    },
    "2326": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4071,
        4119
      ],
      "op": "PUSH1",
      "path": "176",
      "value": "0x4"
    },
    "2328": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4071,
        4119
      ],
      "op": "ADD",
      "path": "176"
    },
    "2329": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4071,
        4119
      ],
      "op": "PUSH2",
      "path": "176",
      "value": "0x2B6"
    },
    "2332": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4071,
        4119
      ],
      "op": "SWAP1",
      "path": "176"
    },
    "2333": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4071,
        4119
      ],
      "op": "PUSH2",
      "path": "176",
      "value": "0x1622"
    },
    "2336": {
      "fn": "ProxyOracle.convertForLiquidation",
      "jump": "i",
      "offset": [
        4071,
        4119
      ],
      "op": "JUMP",
      "path": "176"
    },
    "2337": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4071,
        4119
      ],
      "op": "JUMPDEST",
      "path": "176"
    },
    "2338": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4154,
        4208
      ],
      "op": "PUSH1",
      "path": "176",
      "value": "0x40"
    },
    "2340": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4154,
        4208
      ],
      "op": "MLOAD",
      "path": "176"
    },
    "2341": {
      "op": "PUSH4",
      "value": "0x523BABB9"
    },
    "2346": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "2348": {
      "op": "SHL"
    },
    "2349": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4154,
        4208
      ],
      "op": "DUP2",
      "path": "176"
    },
    "2350": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4154,
        4208
      ],
      "op": "MSTORE",
      "path": "176"
    },
    "2351": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4125,
        4151
      ],
      "op": "PUSH1",
      "path": "176",
      "value": "0x0"
    },
    "2353": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4125,
        4151
      ],
      "op": "SWAP1",
      "path": "176"
    },
    "2354": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2356": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2358": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2360": {
      "op": "SHL"
    },
    "2361": {
      "op": "SUB"
    },
    "2362": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4154,
        4196
      ],
      "op": "DUP7",
      "path": "176"
    },
    "2363": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4154,
        4196
      ],
      "op": "AND",
      "path": "176"
    },
    "2364": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4154,
        4196
      ],
      "op": "SWAP1",
      "path": "176"
    },
    "2365": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4154,
        4196
      ],
      "op": "PUSH4",
      "path": "176",
      "value": "0xA4775772"
    },
    "2370": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4154,
        4196
      ],
      "op": "SWAP1",
      "path": "176"
    },
    "2371": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4154,
        4208
      ],
      "op": "PUSH2",
      "path": "176",
      "value": "0x950"
    },
    "2374": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4154,
        4208
      ],
      "op": "SWAP1",
      "path": "176"
    },
    "2375": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4197,
        4207
      ],
      "op": "DUP8",
      "path": "176"
    },
    "2376": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4197,
        4207
      ],
      "op": "SWAP1",
      "path": "176"
    },
    "2377": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4154,
        4208
      ],
      "op": "PUSH1",
      "path": "176",
      "value": "0x4"
    },
    "2379": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4154,
        4208
      ],
      "op": "ADD",
      "path": "176"
    },
    "2380": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4154,
        4208
      ],
      "op": "PUSH2",
      "path": "176",
      "value": "0x184C"
    },
    "2383": {
      "fn": "ProxyOracle.convertForLiquidation",
      "jump": "i",
      "offset": [
        4154,
        4208
      ],
      "op": "JUMP",
      "path": "176"
    },
    "2384": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4154,
        4208
      ],
      "op": "JUMPDEST",
      "path": "176"
    },
    "2385": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4154,
        4208
      ],
      "op": "PUSH1",
      "path": "176",
      "value": "0x20"
    },
    "2387": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4154,
        4208
      ],
      "op": "PUSH1",
      "path": "176",
      "value": "0x40"
    },
    "2389": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4154,
        4208
      ],
      "op": "MLOAD",
      "path": "176"
    },
    "2390": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4154,
        4208
      ],
      "op": "DUP1",
      "path": "176"
    },
    "2391": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4154,
        4208
      ],
      "op": "DUP4",
      "path": "176"
    },
    "2392": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4154,
        4208
      ],
      "op": "SUB",
      "path": "176"
    },
    "2393": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4154,
        4208
      ],
      "op": "DUP2",
      "path": "176"
    },
    "2394": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4154,
        4208
      ],
      "op": "DUP7",
      "path": "176"
    },
    "2395": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4154,
        4208
      ],
      "op": "DUP1",
      "path": "176"
    },
    "2396": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4154,
        4208
      ],
      "op": "EXTCODESIZE",
      "path": "176"
    },
    "2397": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4154,
        4208
      ],
      "op": "ISZERO",
      "path": "176"
    },
    "2398": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4154,
        4208
      ],
      "op": "DUP1",
      "path": "176"
    },
    "2399": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4154,
        4208
      ],
      "op": "ISZERO",
      "path": "176"
    },
    "2400": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4154,
        4208
      ],
      "op": "PUSH2",
      "path": "176",
      "value": "0x968"
    },
    "2403": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4154,
        4208
      ],
      "op": "JUMPI",
      "path": "176"
    },
    "2404": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4154,
        4208
      ],
      "op": "PUSH1",
      "path": "176",
      "value": "0x0"
    },
    "2406": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4154,
        4208
      ],
      "op": "DUP1",
      "path": "176"
    },
    "2407": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4154,
        4208
      ],
      "op": "REVERT",
      "path": "176"
    },
    "2408": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4154,
        4208
      ],
      "op": "JUMPDEST",
      "path": "176"
    },
    "2409": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4154,
        4208
      ],
      "op": "POP",
      "path": "176"
    },
    "2410": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4154,
        4208
      ],
      "op": "GAS",
      "path": "176"
    },
    "2411": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4154,
        4208
      ],
      "op": "STATICCALL",
      "path": "176"
    },
    "2412": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4154,
        4208
      ],
      "op": "ISZERO",
      "path": "176"
    },
    "2413": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4154,
        4208
      ],
      "op": "DUP1",
      "path": "176"
    },
    "2414": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4154,
        4208
      ],
      "op": "ISZERO",
      "path": "176"
    },
    "2415": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4154,
        4208
      ],
      "op": "PUSH2",
      "path": "176",
      "value": "0x97C"
    },
    "2418": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4154,
        4208
      ],
      "op": "JUMPI",
      "path": "176"
    },
    "2419": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4154,
        4208
      ],
      "op": "RETURNDATASIZE",
      "path": "176"
    },
    "2420": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4154,
        4208
      ],
      "op": "PUSH1",
      "path": "176",
      "value": "0x0"
    },
    "2422": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4154,
        4208
      ],
      "op": "DUP1",
      "path": "176"
    },
    "2423": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4154,
        4208
      ],
      "op": "RETURNDATACOPY",
      "path": "176"
    },
    "2424": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4154,
        4208
      ],
      "op": "RETURNDATASIZE",
      "path": "176"
    },
    "2425": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4154,
        4208
      ],
      "op": "PUSH1",
      "path": "176",
      "value": "0x0"
    },
    "2427": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4154,
        4208
      ],
      "op": "REVERT",
      "path": "176"
    },
    "2428": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4154,
        4208
      ],
      "op": "JUMPDEST",
      "path": "176"
    },
    "2429": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4154,
        4208
      ],
      "op": "POP",
      "path": "176"
    },
    "2430": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4154,
        4208
      ],
      "op": "POP",
      "path": "176"
    },
    "2431": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4154,
        4208
      ],
      "op": "POP",
      "path": "176"
    },
    "2432": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4154,
        4208
      ],
      "op": "POP",
      "path": "176"
    },
    "2433": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4154,
        4208
      ],
      "op": "PUSH1",
      "path": "176",
      "value": "0x40"
    },
    "2435": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4154,
        4208
      ],
      "op": "MLOAD",
      "path": "176"
    },
    "2436": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4154,
        4208
      ],
      "op": "RETURNDATASIZE",
      "path": "176"
    },
    "2437": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4154,
        4208
      ],
      "op": "PUSH1",
      "path": "176",
      "value": "0x1F"
    },
    "2439": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4154,
        4208
      ],
      "op": "NOT",
      "path": "176"
    },
    "2440": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4154,
        4208
      ],
      "op": "PUSH1",
      "path": "176",
      "value": "0x1F"
    },
    "2442": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4154,
        4208
      ],
      "op": "DUP3",
      "path": "176"
    },
    "2443": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4154,
        4208
      ],
      "op": "ADD",
      "path": "176"
    },
    "2444": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4154,
        4208
      ],
      "op": "AND",
      "path": "176"
    },
    "2445": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4154,
        4208
      ],
      "op": "DUP3",
      "path": "176"
    },
    "2446": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4154,
        4208
      ],
      "op": "ADD",
      "path": "176"
    },
    "2447": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4154,
        4208
      ],
      "op": "DUP1",
      "path": "176"
    },
    "2448": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4154,
        4208
      ],
      "op": "PUSH1",
      "path": "176",
      "value": "0x40"
    },
    "2450": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4154,
        4208
      ],
      "op": "MSTORE",
      "path": "176"
    },
    "2451": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4154,
        4208
      ],
      "op": "POP",
      "path": "176"
    },
    "2452": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4154,
        4208
      ],
      "op": "DUP2",
      "path": "176"
    },
    "2453": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4154,
        4208
      ],
      "op": "ADD",
      "path": "176"
    },
    "2454": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4154,
        4208
      ],
      "op": "SWAP1",
      "path": "176"
    },
    "2455": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4154,
        4208
      ],
      "op": "PUSH2",
      "path": "176",
      "value": "0x9A0"
    },
    "2458": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4154,
        4208
      ],
      "op": "SWAP2",
      "path": "176"
    },
    "2459": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4154,
        4208
      ],
      "op": "SWAP1",
      "path": "176"
    },
    "2460": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4154,
        4208
      ],
      "op": "PUSH2",
      "path": "176",
      "value": "0x124B"
    },
    "2463": {
      "fn": "ProxyOracle.convertForLiquidation",
      "jump": "i",
      "offset": [
        4154,
        4208
      ],
      "op": "JUMP",
      "path": "176"
    },
    "2464": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4154,
        4208
      ],
      "op": "JUMPDEST",
      "path": "176"
    },
    "2465": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4125,
        4208
      ],
      "op": "SWAP1",
      "path": "176"
    },
    "2466": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4125,
        4208
      ],
      "op": "POP",
      "path": "176"
    },
    "2467": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4214,
        4233
      ],
      "op": "PUSH1",
      "path": "176",
      "value": "0x0"
    },
    "2469": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4250,
        4258
      ],
      "op": "DUP6",
      "path": "176"
    },
    "2470": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2472": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2474": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2476": {
      "op": "SHL"
    },
    "2477": {
      "op": "SUB"
    },
    "2478": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4236,
        4277
      ],
      "op": "AND",
      "path": "176"
    },
    "2479": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4236,
        4277
      ],
      "op": "PUSH4",
      "path": "176",
      "value": "0xAF8002DF"
    },
    "2484": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4278,
        4288
      ],
      "op": "DUP7",
      "path": "176"
    },
    "2485": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4236,
        4289
      ],
      "op": "PUSH1",
      "path": "176",
      "value": "0x40"
    },
    "2487": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4236,
        4289
      ],
      "op": "MLOAD",
      "path": "176"
    },
    "2488": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4236,
        4289
      ],
      "op": "DUP3",
      "path": "176"
    },
    "2489": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4236,
        4289
      ],
      "op": "PUSH4",
      "path": "176",
      "value": "0xFFFFFFFF"
    },
    "2494": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4236,
        4289
      ],
      "op": "AND",
      "path": "176"
    },
    "2495": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4236,
        4289
      ],
      "op": "PUSH1",
      "path": "176",
      "value": "0xE0"
    },
    "2497": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4236,
        4289
      ],
      "op": "SHL",
      "path": "176"
    },
    "2498": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4236,
        4289
      ],
      "op": "DUP2",
      "path": "176"
    },
    "2499": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4236,
        4289
      ],
      "op": "MSTORE",
      "path": "176"
    },
    "2500": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4236,
        4289
      ],
      "op": "PUSH1",
      "path": "176",
      "value": "0x4"
    },
    "2502": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4236,
        4289
      ],
      "op": "ADD",
      "path": "176"
    },
    "2503": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4236,
        4289
      ],
      "op": "PUSH2",
      "path": "176",
      "value": "0x9D0"
    },
    "2506": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4236,
        4289
      ],
      "op": "SWAP2",
      "path": "176"
    },
    "2507": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4236,
        4289
      ],
      "op": "SWAP1",
      "path": "176"
    },
    "2508": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4236,
        4289
      ],
      "op": "PUSH2",
      "path": "176",
      "value": "0x184C"
    },
    "2511": {
      "fn": "ProxyOracle.convertForLiquidation",
      "jump": "i",
      "offset": [
        4236,
        4289
      ],
      "op": "JUMP",
      "path": "176"
    },
    "2512": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4236,
        4289
      ],
      "op": "JUMPDEST",
      "path": "176"
    },
    "2513": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4236,
        4289
      ],
      "op": "PUSH1",
      "path": "176",
      "value": "0x20"
    },
    "2515": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4236,
        4289
      ],
      "op": "PUSH1",
      "path": "176",
      "value": "0x40"
    },
    "2517": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4236,
        4289
      ],
      "op": "MLOAD",
      "path": "176"
    },
    "2518": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4236,
        4289
      ],
      "op": "DUP1",
      "path": "176"
    },
    "2519": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4236,
        4289
      ],
      "op": "DUP4",
      "path": "176"
    },
    "2520": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4236,
        4289
      ],
      "op": "SUB",
      "path": "176"
    },
    "2521": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4236,
        4289
      ],
      "op": "DUP2",
      "path": "176"
    },
    "2522": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4236,
        4289
      ],
      "op": "DUP7",
      "path": "176"
    },
    "2523": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4236,
        4289
      ],
      "op": "DUP1",
      "path": "176"
    },
    "2524": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4236,
        4289
      ],
      "op": "EXTCODESIZE",
      "path": "176"
    },
    "2525": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4236,
        4289
      ],
      "op": "ISZERO",
      "path": "176"
    },
    "2526": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4236,
        4289
      ],
      "op": "DUP1",
      "path": "176"
    },
    "2527": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4236,
        4289
      ],
      "op": "ISZERO",
      "path": "176"
    },
    "2528": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4236,
        4289
      ],
      "op": "PUSH2",
      "path": "176",
      "value": "0x9E8"
    },
    "2531": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4236,
        4289
      ],
      "op": "JUMPI",
      "path": "176"
    },
    "2532": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4236,
        4289
      ],
      "op": "PUSH1",
      "path": "176",
      "value": "0x0"
    },
    "2534": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4236,
        4289
      ],
      "op": "DUP1",
      "path": "176"
    },
    "2535": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4236,
        4289
      ],
      "op": "REVERT",
      "path": "176"
    },
    "2536": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4236,
        4289
      ],
      "op": "JUMPDEST",
      "path": "176"
    },
    "2537": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4236,
        4289
      ],
      "op": "POP",
      "path": "176"
    },
    "2538": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4236,
        4289
      ],
      "op": "GAS",
      "path": "176"
    },
    "2539": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4236,
        4289
      ],
      "op": "STATICCALL",
      "path": "176"
    },
    "2540": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4236,
        4289
      ],
      "op": "ISZERO",
      "path": "176"
    },
    "2541": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4236,
        4289
      ],
      "op": "DUP1",
      "path": "176"
    },
    "2542": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4236,
        4289
      ],
      "op": "ISZERO",
      "path": "176"
    },
    "2543": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4236,
        4289
      ],
      "op": "PUSH2",
      "path": "176",
      "value": "0x9FC"
    },
    "2546": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4236,
        4289
      ],
      "op": "JUMPI",
      "path": "176"
    },
    "2547": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4236,
        4289
      ],
      "op": "RETURNDATASIZE",
      "path": "176"
    },
    "2548": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4236,
        4289
      ],
      "op": "PUSH1",
      "path": "176",
      "value": "0x0"
    },
    "2550": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4236,
        4289
      ],
      "op": "DUP1",
      "path": "176"
    },
    "2551": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4236,
        4289
      ],
      "op": "RETURNDATACOPY",
      "path": "176"
    },
    "2552": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4236,
        4289
      ],
      "op": "RETURNDATASIZE",
      "path": "176"
    },
    "2553": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4236,
        4289
      ],
      "op": "PUSH1",
      "path": "176",
      "value": "0x0"
    },
    "2555": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4236,
        4289
      ],
      "op": "REVERT",
      "path": "176"
    },
    "2556": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4236,
        4289
      ],
      "op": "JUMPDEST",
      "path": "176"
    },
    "2557": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4236,
        4289
      ],
      "op": "POP",
      "path": "176"
    },
    "2558": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4236,
        4289
      ],
      "op": "POP",
      "path": "176"
    },
    "2559": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4236,
        4289
      ],
      "op": "POP",
      "path": "176"
    },
    "2560": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4236,
        4289
      ],
      "op": "POP",
      "path": "176"
    },
    "2561": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4236,
        4289
      ],
      "op": "PUSH1",
      "path": "176",
      "value": "0x40"
    },
    "2563": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4236,
        4289
      ],
      "op": "MLOAD",
      "path": "176"
    },
    "2564": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4236,
        4289
      ],
      "op": "RETURNDATASIZE",
      "path": "176"
    },
    "2565": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4236,
        4289
      ],
      "op": "PUSH1",
      "path": "176",
      "value": "0x1F"
    },
    "2567": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4236,
        4289
      ],
      "op": "NOT",
      "path": "176"
    },
    "2568": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4236,
        4289
      ],
      "op": "PUSH1",
      "path": "176",
      "value": "0x1F"
    },
    "2570": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4236,
        4289
      ],
      "op": "DUP3",
      "path": "176"
    },
    "2571": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4236,
        4289
      ],
      "op": "ADD",
      "path": "176"
    },
    "2572": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4236,
        4289
      ],
      "op": "AND",
      "path": "176"
    },
    "2573": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4236,
        4289
      ],
      "op": "DUP3",
      "path": "176"
    },
    "2574": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4236,
        4289
      ],
      "op": "ADD",
      "path": "176"
    },
    "2575": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4236,
        4289
      ],
      "op": "DUP1",
      "path": "176"
    },
    "2576": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4236,
        4289
      ],
      "op": "PUSH1",
      "path": "176",
      "value": "0x40"
    },
    "2578": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4236,
        4289
      ],
      "op": "MSTORE",
      "path": "176"
    },
    "2579": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4236,
        4289
      ],
      "op": "POP",
      "path": "176"
    },
    "2580": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4236,
        4289
      ],
      "op": "DUP2",
      "path": "176"
    },
    "2581": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4236,
        4289
      ],
      "op": "ADD",
      "path": "176"
    },
    "2582": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4236,
        4289
      ],
      "op": "SWAP1",
      "path": "176"
    },
    "2583": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4236,
        4289
      ],
      "op": "PUSH2",
      "path": "176",
      "value": "0xA20"
    },
    "2586": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4236,
        4289
      ],
      "op": "SWAP2",
      "path": "176"
    },
    "2587": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4236,
        4289
      ],
      "op": "SWAP1",
      "path": "176"
    },
    "2588": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4236,
        4289
      ],
      "op": "PUSH2",
      "path": "176",
      "value": "0x14F0"
    },
    "2591": {
      "fn": "ProxyOracle.convertForLiquidation",
      "jump": "i",
      "offset": [
        4236,
        4289
      ],
      "op": "JUMP",
      "path": "176"
    },
    "2592": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4236,
        4289
      ],
      "op": "JUMPDEST",
      "path": "176"
    },
    "2593": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4214,
        4289
      ],
      "op": "SWAP1",
      "path": "176"
    },
    "2594": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4214,
        4289
      ],
      "op": "POP",
      "path": "176"
    },
    "2595": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4295,
        4328
      ],
      "op": "PUSH2",
      "path": "176",
      "value": "0xA2A"
    },
    "2598": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4295,
        4328
      ],
      "op": "PUSH2",
      "path": "176",
      "value": "0x1186"
    },
    "2601": {
      "fn": "ProxyOracle.convertForLiquidation",
      "jump": "i",
      "offset": [
        4295,
        4328
      ],
      "op": "JUMP",
      "path": "176"
    },
    "2602": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4295,
        4328
      ],
      "op": "JUMPDEST",
      "path": "176"
    },
    "2603": {
      "op": "POP"
    },
    "2604": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2606": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2608": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2610": {
      "op": "SHL"
    },
    "2611": {
      "op": "SUB"
    },
    "2612": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4331,
        4352
      ],
      "op": "DUP8",
      "path": "176"
    },
    "2613": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4331,
        4352
      ],
      "op": "AND",
      "path": "176"
    },
    "2614": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4331,
        4352
      ],
      "op": "PUSH1",
      "path": "176",
      "value": "0x0"
    },
    "2616": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4331,
        4352
      ],
      "op": "SWAP1",
      "path": "176"
    },
    "2617": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4331,
        4352
      ],
      "op": "DUP2",
      "path": "176"
    },
    "2618": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4331,
        4352
      ],
      "op": "MSTORE",
      "path": "176"
    },
    "2619": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4331,
        4343
      ],
      "op": "PUSH1",
      "path": "176",
      "value": "0x42"
    },
    "2621": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4331,
        4352
      ],
      "op": "PUSH1",
      "path": "176",
      "value": "0x20"
    },
    "2623": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4331,
        4352
      ],
      "op": "SWAP1",
      "path": "176"
    },
    "2624": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4331,
        4352
      ],
      "op": "DUP2",
      "path": "176"
    },
    "2625": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4331,
        4352
      ],
      "op": "MSTORE",
      "path": "176"
    },
    "2626": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4331,
        4352
      ],
      "op": "PUSH1",
      "path": "176",
      "value": "0x40"
    },
    "2628": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4331,
        4352
      ],
      "op": "SWAP2",
      "path": "176"
    },
    "2629": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4331,
        4352
      ],
      "op": "DUP3",
      "path": "176"
    },
    "2630": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4331,
        4352
      ],
      "op": "SWAP1",
      "path": "176"
    },
    "2631": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4331,
        4352
      ],
      "op": "KECCAK256",
      "path": "176"
    },
    "2632": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4295,
        4352
      ],
      "op": "DUP3",
      "path": "176"
    },
    "2633": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4295,
        4352
      ],
      "op": "MLOAD",
      "path": "176"
    },
    "2634": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4295,
        4352
      ],
      "op": "PUSH1",
      "path": "176",
      "value": "0x60"
    },
    "2636": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4295,
        4352
      ],
      "op": "DUP2",
      "path": "176"
    },
    "2637": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4295,
        4352
      ],
      "op": "ADD",
      "path": "176"
    },
    "2638": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4295,
        4352
      ],
      "op": "DUP5",
      "path": "176"
    },
    "2639": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4295,
        4352
      ],
      "op": "MSTORE",
      "path": "176"
    },
    "2640": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4295,
        4352
      ],
      "op": "SWAP1",
      "path": "176"
    },
    "2641": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4295,
        4352
      ],
      "op": "SLOAD",
      "path": "176"
    },
    "2642": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4295,
        4352
      ],
      "op": "PUSH2",
      "path": "176",
      "value": "0xFFFF"
    },
    "2645": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4295,
        4352
      ],
      "op": "DUP1",
      "path": "176"
    },
    "2646": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4295,
        4352
      ],
      "op": "DUP3",
      "path": "176"
    },
    "2647": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4295,
        4352
      ],
      "op": "AND",
      "path": "176"
    },
    "2648": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4295,
        4352
      ],
      "op": "DUP4",
      "path": "176"
    },
    "2649": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4295,
        4352
      ],
      "op": "MSTORE",
      "path": "176"
    },
    "2650": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4295,
        4352
      ],
      "op": "PUSH3",
      "path": "176",
      "value": "0x10000"
    },
    "2654": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4295,
        4352
      ],
      "op": "DUP3",
      "path": "176"
    },
    "2655": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4295,
        4352
      ],
      "op": "DIV",
      "path": "176"
    },
    "2656": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4295,
        4352
      ],
      "op": "DUP2",
      "path": "176"
    },
    "2657": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4295,
        4352
      ],
      "op": "AND",
      "path": "176"
    },
    "2658": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4295,
        4352
      ],
      "op": "SWAP4",
      "path": "176"
    },
    "2659": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4295,
        4352
      ],
      "op": "DUP4",
      "path": "176"
    },
    "2660": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4295,
        4352
      ],
      "op": "ADD",
      "path": "176"
    },
    "2661": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4295,
        4352
      ],
      "op": "SWAP4",
      "path": "176"
    },
    "2662": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4295,
        4352
      ],
      "op": "SWAP1",
      "path": "176"
    },
    "2663": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4295,
        4352
      ],
      "op": "SWAP4",
      "path": "176"
    },
    "2664": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4295,
        4352
      ],
      "op": "MSTORE",
      "path": "176"
    },
    "2665": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2667": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2669": {
      "op": "SHL"
    },
    "2670": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4295,
        4352
      ],
      "op": "SWAP1",
      "path": "176"
    },
    "2671": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4295,
        4352
      ],
      "op": "DIV",
      "path": "176"
    },
    "2672": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4295,
        4352
      ],
      "op": "SWAP1",
      "path": "176"
    },
    "2673": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4295,
        4352
      ],
      "op": "SWAP2",
      "path": "176"
    },
    "2674": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4295,
        4352
      ],
      "op": "AND",
      "path": "176"
    },
    "2675": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4295,
        4352
      ],
      "op": "SWAP2",
      "path": "176"
    },
    "2676": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4295,
        4352
      ],
      "op": "DUP2",
      "path": "176"
    },
    "2677": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4295,
        4352
      ],
      "op": "ADD",
      "path": "176"
    },
    "2678": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4295,
        4352
      ],
      "op": "SWAP2",
      "path": "176"
    },
    "2679": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4295,
        4352
      ],
      "op": "SWAP1",
      "path": "176"
    },
    "2680": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4295,
        4352
      ],
      "op": "SWAP2",
      "path": "176"
    },
    "2681": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4295,
        4352
      ],
      "op": "MSTORE",
      "path": "176"
    },
    "2682": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4358,
        4392
      ],
      "op": "PUSH2",
      "path": "176",
      "value": "0xA81"
    },
    "2685": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4358,
        4392
      ],
      "op": "PUSH2",
      "path": "176",
      "value": "0x1186"
    },
    "2688": {
      "fn": "ProxyOracle.convertForLiquidation",
      "jump": "i",
      "offset": [
        4358,
        4392
      ],
      "op": "JUMP",
      "path": "176"
    },
    "2689": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4358,
        4392
      ],
      "op": "JUMPDEST",
      "path": "176"
    },
    "2690": {
      "op": "POP"
    },
    "2691": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2693": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2695": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2697": {
      "op": "SHL"
    },
    "2698": {
      "op": "SUB"
    },
    "2699": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4395,
        4427
      ],
      "op": "DUP4",
      "path": "176"
    },
    "2700": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4395,
        4427
      ],
      "op": "AND",
      "path": "176"
    },
    "2701": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4395,
        4427
      ],
      "op": "PUSH1",
      "path": "176",
      "value": "0x0"
    },
    "2703": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4395,
        4427
      ],
      "op": "SWAP1",
      "path": "176"
    },
    "2704": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4395,
        4427
      ],
      "op": "DUP2",
      "path": "176"
    },
    "2705": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4395,
        4427
      ],
      "op": "MSTORE",
      "path": "176"
    },
    "2706": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4395,
        4407
      ],
      "op": "PUSH1",
      "path": "176",
      "value": "0x42"
    },
    "2708": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4395,
        4427
      ],
      "op": "PUSH1",
      "path": "176",
      "value": "0x20"
    },
    "2710": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4395,
        4427
      ],
      "op": "SWAP1",
      "path": "176"
    },
    "2711": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4395,
        4427
      ],
      "op": "DUP2",
      "path": "176"
    },
    "2712": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4395,
        4427
      ],
      "op": "MSTORE",
      "path": "176"
    },
    "2713": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4395,
        4427
      ],
      "op": "PUSH1",
      "path": "176",
      "value": "0x40"
    },
    "2715": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4395,
        4427
      ],
      "op": "SWAP2",
      "path": "176"
    },
    "2716": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4395,
        4427
      ],
      "op": "DUP3",
      "path": "176"
    },
    "2717": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4395,
        4427
      ],
      "op": "SWAP1",
      "path": "176"
    },
    "2718": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4395,
        4427
      ],
      "op": "KECCAK256",
      "path": "176"
    },
    "2719": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4358,
        4427
      ],
      "op": "DUP3",
      "path": "176"
    },
    "2720": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4358,
        4427
      ],
      "op": "MLOAD",
      "path": "176"
    },
    "2721": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4358,
        4427
      ],
      "op": "PUSH1",
      "path": "176",
      "value": "0x60"
    },
    "2723": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4358,
        4427
      ],
      "op": "DUP2",
      "path": "176"
    },
    "2724": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4358,
        4427
      ],
      "op": "ADD",
      "path": "176"
    },
    "2725": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4358,
        4427
      ],
      "op": "DUP5",
      "path": "176"
    },
    "2726": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4358,
        4427
      ],
      "op": "MSTORE",
      "path": "176"
    },
    "2727": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4358,
        4427
      ],
      "op": "SWAP1",
      "path": "176"
    },
    "2728": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4358,
        4427
      ],
      "op": "SLOAD",
      "path": "176"
    },
    "2729": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4358,
        4427
      ],
      "op": "PUSH2",
      "path": "176",
      "value": "0xFFFF"
    },
    "2732": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4358,
        4427
      ],
      "op": "DUP1",
      "path": "176"
    },
    "2733": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4358,
        4427
      ],
      "op": "DUP3",
      "path": "176"
    },
    "2734": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4358,
        4427
      ],
      "op": "AND",
      "path": "176"
    },
    "2735": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4358,
        4427
      ],
      "op": "DUP4",
      "path": "176"
    },
    "2736": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4358,
        4427
      ],
      "op": "MSTORE",
      "path": "176"
    },
    "2737": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4358,
        4427
      ],
      "op": "PUSH3",
      "path": "176",
      "value": "0x10000"
    },
    "2741": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4358,
        4427
      ],
      "op": "DUP3",
      "path": "176"
    },
    "2742": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4358,
        4427
      ],
      "op": "DIV",
      "path": "176"
    },
    "2743": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4358,
        4427
      ],
      "op": "DUP2",
      "path": "176"
    },
    "2744": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4358,
        4427
      ],
      "op": "AND",
      "path": "176"
    },
    "2745": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4358,
        4427
      ],
      "op": "SWAP4",
      "path": "176"
    },
    "2746": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4358,
        4427
      ],
      "op": "DUP4",
      "path": "176"
    },
    "2747": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4358,
        4427
      ],
      "op": "ADD",
      "path": "176"
    },
    "2748": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4358,
        4427
      ],
      "op": "SWAP4",
      "path": "176"
    },
    "2749": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4358,
        4427
      ],
      "op": "SWAP1",
      "path": "176"
    },
    "2750": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4358,
        4427
      ],
      "op": "SWAP4",
      "path": "176"
    },
    "2751": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4358,
        4427
      ],
      "op": "MSTORE",
      "path": "176"
    },
    "2752": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2754": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2756": {
      "op": "SHL"
    },
    "2757": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4358,
        4427
      ],
      "op": "SWAP1",
      "path": "176"
    },
    "2758": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4358,
        4427
      ],
      "op": "DIV",
      "path": "176"
    },
    "2759": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4358,
        4427
      ],
      "op": "DUP3",
      "path": "176"
    },
    "2760": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4358,
        4427
      ],
      "op": "AND",
      "path": "176"
    },
    "2761": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4358,
        4427
      ],
      "op": "DUP2",
      "path": "176"
    },
    "2762": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4358,
        4427
      ],
      "op": "DUP5",
      "path": "176"
    },
    "2763": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4358,
        4427
      ],
      "op": "ADD",
      "path": "176"
    },
    "2764": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4358,
        4427
      ],
      "op": "MSTORE",
      "path": "176"
    },
    "2765": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4441,
        4467
      ],
      "op": "SWAP2",
      "path": "176",
      "statement": 14
    },
    "2766": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4441,
        4467
      ],
      "op": "DUP4",
      "path": "176"
    },
    "2767": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4441,
        4467
      ],
      "op": "ADD",
      "path": "176"
    },
    "2768": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4441,
        4467
      ],
      "op": "MLOAD",
      "path": "176"
    },
    "2769": {
      "branch": 43,
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4441,
        4472
      ],
      "op": "AND",
      "path": "176"
    },
    "2770": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4433,
        4494
      ],
      "op": "PUSH2",
      "path": "176",
      "value": "0xAED"
    },
    "2773": {
      "branch": 43,
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4433,
        4494
      ],
      "op": "JUMPI",
      "path": "176"
    },
    "2774": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4433,
        4494
      ],
      "op": "PUSH1",
      "path": "176",
      "value": "0x40"
    },
    "2776": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4433,
        4494
      ],
      "op": "MLOAD",
      "path": "176"
    },
    "2777": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2781": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2783": {
      "op": "SHL"
    },
    "2784": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4433,
        4494
      ],
      "op": "DUP2",
      "path": "176"
    },
    "2785": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4433,
        4494
      ],
      "op": "MSTORE",
      "path": "176"
    },
    "2786": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4433,
        4494
      ],
      "op": "PUSH1",
      "path": "176",
      "value": "0x4"
    },
    "2788": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4433,
        4494
      ],
      "op": "ADD",
      "path": "176"
    },
    "2789": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4433,
        4494
      ],
      "op": "PUSH2",
      "path": "176",
      "value": "0x2B6"
    },
    "2792": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4433,
        4494
      ],
      "op": "SWAP1",
      "path": "176"
    },
    "2793": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4433,
        4494
      ],
      "op": "PUSH2",
      "path": "176",
      "value": "0x1775"
    },
    "2796": {
      "fn": "ProxyOracle.convertForLiquidation",
      "jump": "i",
      "offset": [
        4433,
        4494
      ],
      "op": "JUMP",
      "path": "176"
    },
    "2797": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4433,
        4494
      ],
      "op": "JUMPDEST",
      "path": "176"
    },
    "2798": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4508,
        4535
      ],
      "op": "PUSH1",
      "path": "176",
      "statement": 15,
      "value": "0x40"
    },
    "2800": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4508,
        4535
      ],
      "op": "DUP2",
      "path": "176"
    },
    "2801": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4508,
        4535
      ],
      "op": "ADD",
      "path": "176"
    },
    "2802": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4508,
        4535
      ],
      "op": "MLOAD",
      "path": "176"
    },
    "2803": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4508,
        4540
      ],
      "op": "PUSH2",
      "path": "176",
      "value": "0xFFFF"
    },
    "2806": {
      "branch": 44,
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4508,
        4540
      ],
      "op": "AND",
      "path": "176"
    },
    "2807": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4500,
        4563
      ],
      "op": "PUSH2",
      "path": "176",
      "value": "0xB12"
    },
    "2810": {
      "branch": 44,
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4500,
        4563
      ],
      "op": "JUMPI",
      "path": "176"
    },
    "2811": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4500,
        4563
      ],
      "op": "PUSH1",
      "path": "176",
      "value": "0x40"
    },
    "2813": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4500,
        4563
      ],
      "op": "MLOAD",
      "path": "176"
    },
    "2814": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2818": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2820": {
      "op": "SHL"
    },
    "2821": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4500,
        4563
      ],
      "op": "DUP2",
      "path": "176"
    },
    "2822": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4500,
        4563
      ],
      "op": "MSTORE",
      "path": "176"
    },
    "2823": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4500,
        4563
      ],
      "op": "PUSH1",
      "path": "176",
      "value": "0x4"
    },
    "2825": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4500,
        4563
      ],
      "op": "ADD",
      "path": "176"
    },
    "2826": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4500,
        4563
      ],
      "op": "PUSH2",
      "path": "176",
      "value": "0x2B6"
    },
    "2829": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4500,
        4563
      ],
      "op": "SWAP1",
      "path": "176"
    },
    "2830": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4500,
        4563
      ],
      "op": "PUSH2",
      "path": "176",
      "value": "0x155E"
    },
    "2833": {
      "fn": "ProxyOracle.convertForLiquidation",
      "jump": "i",
      "offset": [
        4500,
        4563
      ],
      "op": "JUMP",
      "path": "176"
    },
    "2834": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4500,
        4563
      ],
      "op": "JUMPDEST",
      "path": "176"
    },
    "2835": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4581,
        4606
      ],
      "op": "PUSH1",
      "path": "176",
      "value": "0x40"
    },
    "2837": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4581,
        4606
      ],
      "op": "MLOAD",
      "path": "176"
    },
    "2838": {
      "op": "PUSH4",
      "value": "0x11E56AFF"
    },
    "2843": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2845": {
      "op": "SHL"
    },
    "2846": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4581,
        4606
      ],
      "op": "DUP2",
      "path": "176"
    },
    "2847": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4581,
        4606
      ],
      "op": "MSTORE",
      "path": "176"
    },
    "2848": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4569,
        4578
      ],
      "op": "PUSH1",
      "path": "176",
      "value": "0x0"
    },
    "2850": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4569,
        4578
      ],
      "op": "SWAP1",
      "path": "176"
    },
    "2851": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2853": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2855": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2857": {
      "op": "SHL"
    },
    "2858": {
      "op": "SUB"
    },
    "2859": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4581,
        4587
      ],
      "op": "PUSH32",
      "path": "176",
      "value": "0x0"
    },
    "2892": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4581,
        4597
      ],
      "op": "AND",
      "path": "176"
    },
    "2893": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4581,
        4597
      ],
      "op": "SWAP1",
      "path": "176"
    },
    "2894": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4581,
        4597
      ],
      "op": "PUSH4",
      "path": "176",
      "value": "0x11E56AFF"
    },
    "2899": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4581,
        4597
      ],
      "op": "SWAP1",
      "path": "176"
    },
    "2900": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4581,
        4606
      ],
      "op": "PUSH2",
      "path": "176",
      "value": "0xB61"
    },
    "2903": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4581,
        4606
      ],
      "op": "SWAP1",
      "path": "176"
    },
    "2904": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4598,
        4605
      ],
      "op": "DUP14",
      "path": "176"
    },
    "2905": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4598,
        4605
      ],
      "op": "SWAP1",
      "path": "176"
    },
    "2906": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4581,
        4606
      ],
      "op": "PUSH1",
      "path": "176",
      "value": "0x4"
    },
    "2908": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4581,
        4606
      ],
      "op": "ADD",
      "path": "176"
    },
    "2909": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4581,
        4606
      ],
      "op": "PUSH2",
      "path": "176",
      "value": "0x1508"
    },
    "2912": {
      "fn": "ProxyOracle.convertForLiquidation",
      "jump": "i",
      "offset": [
        4581,
        4606
      ],
      "op": "JUMP",
      "path": "176"
    },
    "2913": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4581,
        4606
      ],
      "op": "JUMPDEST",
      "path": "176"
    },
    "2914": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4581,
        4606
      ],
      "op": "PUSH1",
      "path": "176",
      "value": "0x20"
    },
    "2916": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4581,
        4606
      ],
      "op": "PUSH1",
      "path": "176",
      "value": "0x40"
    },
    "2918": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4581,
        4606
      ],
      "op": "MLOAD",
      "path": "176"
    },
    "2919": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4581,
        4606
      ],
      "op": "DUP1",
      "path": "176"
    },
    "2920": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4581,
        4606
      ],
      "op": "DUP4",
      "path": "176"
    },
    "2921": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4581,
        4606
      ],
      "op": "SUB",
      "path": "176"
    },
    "2922": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4581,
        4606
      ],
      "op": "DUP2",
      "path": "176"
    },
    "2923": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4581,
        4606
      ],
      "op": "DUP7",
      "path": "176"
    },
    "2924": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4581,
        4606
      ],
      "op": "DUP1",
      "path": "176"
    },
    "2925": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4581,
        4606
      ],
      "op": "EXTCODESIZE",
      "path": "176"
    },
    "2926": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4581,
        4606
      ],
      "op": "ISZERO",
      "path": "176"
    },
    "2927": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4581,
        4606
      ],
      "op": "DUP1",
      "path": "176"
    },
    "2928": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4581,
        4606
      ],
      "op": "ISZERO",
      "path": "176"
    },
    "2929": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4581,
        4606
      ],
      "op": "PUSH2",
      "path": "176",
      "value": "0xB79"
    },
    "2932": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4581,
        4606
      ],
      "op": "JUMPI",
      "path": "176"
    },
    "2933": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4581,
        4606
      ],
      "op": "PUSH1",
      "path": "176",
      "value": "0x0"
    },
    "2935": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4581,
        4606
      ],
      "op": "DUP1",
      "path": "176"
    },
    "2936": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4581,
        4606
      ],
      "op": "REVERT",
      "path": "176"
    },
    "2937": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4581,
        4606
      ],
      "op": "JUMPDEST",
      "path": "176"
    },
    "2938": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4581,
        4606
      ],
      "op": "POP",
      "path": "176"
    },
    "2939": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4581,
        4606
      ],
      "op": "GAS",
      "path": "176"
    },
    "2940": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4581,
        4606
      ],
      "op": "STATICCALL",
      "path": "176"
    },
    "2941": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4581,
        4606
      ],
      "op": "ISZERO",
      "path": "176"
    },
    "2942": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4581,
        4606
      ],
      "op": "DUP1",
      "path": "176"
    },
    "2943": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4581,
        4606
      ],
      "op": "ISZERO",
      "path": "176"
    },
    "2944": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4581,
        4606
      ],
      "op": "PUSH2",
      "path": "176",
      "value": "0xB8D"
    },
    "2947": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4581,
        4606
      ],
      "op": "JUMPI",
      "path": "176"
    },
    "2948": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4581,
        4606
      ],
      "op": "RETURNDATASIZE",
      "path": "176"
    },
    "2949": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4581,
        4606
      ],
      "op": "PUSH1",
      "path": "176",
      "value": "0x0"
    },
    "2951": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4581,
        4606
      ],
      "op": "DUP1",
      "path": "176"
    },
    "2952": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4581,
        4606
      ],
      "op": "RETURNDATACOPY",
      "path": "176"
    },
    "2953": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4581,
        4606
      ],
      "op": "RETURNDATASIZE",
      "path": "176"
    },
    "2954": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4581,
        4606
      ],
      "op": "PUSH1",
      "path": "176",
      "value": "0x0"
    },
    "2956": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4581,
        4606
      ],
      "op": "REVERT",
      "path": "176"
    },
    "2957": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4581,
        4606
      ],
      "op": "JUMPDEST",
      "path": "176"
    },
    "2958": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4581,
        4606
      ],
      "op": "POP",
      "path": "176"
    },
    "2959": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4581,
        4606
      ],
      "op": "POP",
      "path": "176"
    },
    "2960": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4581,
        4606
      ],
      "op": "POP",
      "path": "176"
    },
    "2961": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4581,
        4606
      ],
      "op": "POP",
      "path": "176"
    },
    "2962": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4581,
        4606
      ],
      "op": "PUSH1",
      "path": "176",
      "value": "0x40"
    },
    "2964": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4581,
        4606
      ],
      "op": "MLOAD",
      "path": "176"
    },
    "2965": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4581,
        4606
      ],
      "op": "RETURNDATASIZE",
      "path": "176"
    },
    "2966": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4581,
        4606
      ],
      "op": "PUSH1",
      "path": "176",
      "value": "0x1F"
    },
    "2968": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4581,
        4606
      ],
      "op": "NOT",
      "path": "176"
    },
    "2969": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4581,
        4606
      ],
      "op": "PUSH1",
      "path": "176",
      "value": "0x1F"
    },
    "2971": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4581,
        4606
      ],
      "op": "DUP3",
      "path": "176"
    },
    "2972": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4581,
        4606
      ],
      "op": "ADD",
      "path": "176"
    },
    "2973": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4581,
        4606
      ],
      "op": "AND",
      "path": "176"
    },
    "2974": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4581,
        4606
      ],
      "op": "DUP3",
      "path": "176"
    },
    "2975": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4581,
        4606
      ],
      "op": "ADD",
      "path": "176"
    },
    "2976": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4581,
        4606
      ],
      "op": "DUP1",
      "path": "176"
    },
    "2977": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4581,
        4606
      ],
      "op": "PUSH1",
      "path": "176",
      "value": "0x40"
    },
    "2979": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4581,
        4606
      ],
      "op": "MSTORE",
      "path": "176"
    },
    "2980": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4581,
        4606
      ],
      "op": "POP",
      "path": "176"
    },
    "2981": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4581,
        4606
      ],
      "op": "DUP2",
      "path": "176"
    },
    "2982": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4581,
        4606
      ],
      "op": "ADD",
      "path": "176"
    },
    "2983": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4581,
        4606
      ],
      "op": "SWAP1",
      "path": "176"
    },
    "2984": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4581,
        4606
      ],
      "op": "PUSH2",
      "path": "176",
      "value": "0xBB1"
    },
    "2987": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4581,
        4606
      ],
      "op": "SWAP2",
      "path": "176"
    },
    "2988": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4581,
        4606
      ],
      "op": "SWAP1",
      "path": "176"
    },
    "2989": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4581,
        4606
      ],
      "op": "PUSH2",
      "path": "176",
      "value": "0x14F0"
    },
    "2992": {
      "fn": "ProxyOracle.convertForLiquidation",
      "jump": "i",
      "offset": [
        4581,
        4606
      ],
      "op": "JUMP",
      "path": "176"
    },
    "2993": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4581,
        4606
      ],
      "op": "JUMPDEST",
      "path": "176"
    },
    "2994": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4569,
        4606
      ],
      "op": "SWAP1",
      "path": "176"
    },
    "2995": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4569,
        4606
      ],
      "op": "POP",
      "path": "176"
    },
    "2996": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4612,
        4622
      ],
      "op": "PUSH1",
      "path": "176",
      "value": "0x0"
    },
    "2998": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4625,
        4631
      ],
      "op": "PUSH32",
      "path": "176",
      "value": "0x0"
    },
    "3031": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3033": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3035": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3037": {
      "op": "SHL"
    },
    "3038": {
      "op": "SUB"
    },
    "3039": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4625,
        4641
      ],
      "op": "AND",
      "path": "176"
    },
    "3040": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4625,
        4641
      ],
      "op": "PUSH4",
      "path": "176",
      "value": "0x11E56AFF"
    },
    "3045": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4642,
        4660
      ],
      "op": "DUP8",
      "path": "176"
    },
    "3046": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4625,
        4661
      ],
      "op": "PUSH1",
      "path": "176",
      "value": "0x40"
    },
    "3048": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4625,
        4661
      ],
      "op": "MLOAD",
      "path": "176"
    },
    "3049": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4625,
        4661
      ],
      "op": "DUP3",
      "path": "176"
    },
    "3050": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4625,
        4661
      ],
      "op": "PUSH4",
      "path": "176",
      "value": "0xFFFFFFFF"
    },
    "3055": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4625,
        4661
      ],
      "op": "AND",
      "path": "176"
    },
    "3056": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4625,
        4661
      ],
      "op": "PUSH1",
      "path": "176",
      "value": "0xE0"
    },
    "3058": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4625,
        4661
      ],
      "op": "SHL",
      "path": "176"
    },
    "3059": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4625,
        4661
      ],
      "op": "DUP2",
      "path": "176"
    },
    "3060": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4625,
        4661
      ],
      "op": "MSTORE",
      "path": "176"
    },
    "3061": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4625,
        4661
      ],
      "op": "PUSH1",
      "path": "176",
      "value": "0x4"
    },
    "3063": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4625,
        4661
      ],
      "op": "ADD",
      "path": "176"
    },
    "3064": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4625,
        4661
      ],
      "op": "PUSH2",
      "path": "176",
      "value": "0xC01"
    },
    "3067": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4625,
        4661
      ],
      "op": "SWAP2",
      "path": "176"
    },
    "3068": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4625,
        4661
      ],
      "op": "SWAP1",
      "path": "176"
    },
    "3069": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4625,
        4661
      ],
      "op": "PUSH2",
      "path": "176",
      "value": "0x1508"
    },
    "3072": {
      "fn": "ProxyOracle.convertForLiquidation",
      "jump": "i",
      "offset": [
        4625,
        4661
      ],
      "op": "JUMP",
      "path": "176"
    },
    "3073": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4625,
        4661
      ],
      "op": "JUMPDEST",
      "path": "176"
    },
    "3074": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4625,
        4661
      ],
      "op": "PUSH1",
      "path": "176",
      "value": "0x20"
    },
    "3076": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4625,
        4661
      ],
      "op": "PUSH1",
      "path": "176",
      "value": "0x40"
    },
    "3078": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4625,
        4661
      ],
      "op": "MLOAD",
      "path": "176"
    },
    "3079": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4625,
        4661
      ],
      "op": "DUP1",
      "path": "176"
    },
    "3080": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4625,
        4661
      ],
      "op": "DUP4",
      "path": "176"
    },
    "3081": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4625,
        4661
      ],
      "op": "SUB",
      "path": "176"
    },
    "3082": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4625,
        4661
      ],
      "op": "DUP2",
      "path": "176"
    },
    "3083": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4625,
        4661
      ],
      "op": "DUP7",
      "path": "176"
    },
    "3084": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4625,
        4661
      ],
      "op": "DUP1",
      "path": "176"
    },
    "3085": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4625,
        4661
      ],
      "op": "EXTCODESIZE",
      "path": "176"
    },
    "3086": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4625,
        4661
      ],
      "op": "ISZERO",
      "path": "176"
    },
    "3087": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4625,
        4661
      ],
      "op": "DUP1",
      "path": "176"
    },
    "3088": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4625,
        4661
      ],
      "op": "ISZERO",
      "path": "176"
    },
    "3089": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4625,
        4661
      ],
      "op": "PUSH2",
      "path": "176",
      "value": "0xC19"
    },
    "3092": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4625,
        4661
      ],
      "op": "JUMPI",
      "path": "176"
    },
    "3093": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4625,
        4661
      ],
      "op": "PUSH1",
      "path": "176",
      "value": "0x0"
    },
    "3095": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4625,
        4661
      ],
      "op": "DUP1",
      "path": "176"
    },
    "3096": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4625,
        4661
      ],
      "op": "REVERT",
      "path": "176"
    },
    "3097": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4625,
        4661
      ],
      "op": "JUMPDEST",
      "path": "176"
    },
    "3098": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4625,
        4661
      ],
      "op": "POP",
      "path": "176"
    },
    "3099": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4625,
        4661
      ],
      "op": "GAS",
      "path": "176"
    },
    "3100": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4625,
        4661
      ],
      "op": "STATICCALL",
      "path": "176"
    },
    "3101": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4625,
        4661
      ],
      "op": "ISZERO",
      "path": "176"
    },
    "3102": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4625,
        4661
      ],
      "op": "DUP1",
      "path": "176"
    },
    "3103": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4625,
        4661
      ],
      "op": "ISZERO",
      "path": "176"
    },
    "3104": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4625,
        4661
      ],
      "op": "PUSH2",
      "path": "176",
      "value": "0xC2D"
    },
    "3107": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4625,
        4661
      ],
      "op": "JUMPI",
      "path": "176"
    },
    "3108": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4625,
        4661
      ],
      "op": "RETURNDATASIZE",
      "path": "176"
    },
    "3109": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4625,
        4661
      ],
      "op": "PUSH1",
      "path": "176",
      "value": "0x0"
    },
    "3111": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4625,
        4661
      ],
      "op": "DUP1",
      "path": "176"
    },
    "3112": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4625,
        4661
      ],
      "op": "RETURNDATACOPY",
      "path": "176"
    },
    "3113": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4625,
        4661
      ],
      "op": "RETURNDATASIZE",
      "path": "176"
    },
    "3114": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4625,
        4661
      ],
      "op": "PUSH1",
      "path": "176",
      "value": "0x0"
    },
    "3116": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4625,
        4661
      ],
      "op": "REVERT",
      "path": "176"
    },
    "3117": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4625,
        4661
      ],
      "op": "JUMPDEST",
      "path": "176"
    },
    "3118": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4625,
        4661
      ],
      "op": "POP",
      "path": "176"
    },
    "3119": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4625,
        4661
      ],
      "op": "POP",
      "path": "176"
    },
    "3120": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4625,
        4661
      ],
      "op": "POP",
      "path": "176"
    },
    "3121": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4625,
        4661
      ],
      "op": "POP",
      "path": "176"
    },
    "3122": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4625,
        4661
      ],
      "op": "PUSH1",
      "path": "176",
      "value": "0x40"
    },
    "3124": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4625,
        4661
      ],
      "op": "MLOAD",
      "path": "176"
    },
    "3125": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4625,
        4661
      ],
      "op": "RETURNDATASIZE",
      "path": "176"
    },
    "3126": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4625,
        4661
      ],
      "op": "PUSH1",
      "path": "176",
      "value": "0x1F"
    },
    "3128": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4625,
        4661
      ],
      "op": "NOT",
      "path": "176"
    },
    "3129": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4625,
        4661
      ],
      "op": "PUSH1",
      "path": "176",
      "value": "0x1F"
    },
    "3131": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4625,
        4661
      ],
      "op": "DUP3",
      "path": "176"
    },
    "3132": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4625,
        4661
      ],
      "op": "ADD",
      "path": "176"
    },
    "3133": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4625,
        4661
      ],
      "op": "AND",
      "path": "176"
    },
    "3134": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4625,
        4661
      ],
      "op": "DUP3",
      "path": "176"
    },
    "3135": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4625,
        4661
      ],
      "op": "ADD",
      "path": "176"
    },
    "3136": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4625,
        4661
      ],
      "op": "DUP1",
      "path": "176"
    },
    "3137": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4625,
        4661
      ],
      "op": "PUSH1",
      "path": "176",
      "value": "0x40"
    },
    "3139": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4625,
        4661
      ],
      "op": "MSTORE",
      "path": "176"
    },
    "3140": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4625,
        4661
      ],
      "op": "POP",
      "path": "176"
    },
    "3141": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4625,
        4661
      ],
      "op": "DUP2",
      "path": "176"
    },
    "3142": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4625,
        4661
      ],
      "op": "ADD",
      "path": "176"
    },
    "3143": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4625,
        4661
      ],
      "op": "SWAP1",
      "path": "176"
    },
    "3144": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4625,
        4661
      ],
      "op": "PUSH2",
      "path": "176",
      "value": "0xC51"
    },
    "3147": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4625,
        4661
      ],
      "op": "SWAP2",
      "path": "176"
    },
    "3148": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4625,
        4661
      ],
      "op": "SWAP1",
      "path": "176"
    },
    "3149": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4625,
        4661
      ],
      "op": "PUSH2",
      "path": "176",
      "value": "0x14F0"
    },
    "3152": {
      "fn": "ProxyOracle.convertForLiquidation",
      "jump": "i",
      "offset": [
        4625,
        4661
      ],
      "op": "JUMP",
      "path": "176"
    },
    "3153": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4625,
        4661
      ],
      "op": "JUMPDEST",
      "path": "176"
    },
    "3154": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4612,
        4661
      ],
      "op": "SWAP1",
      "path": "176"
    },
    "3155": {
      "op": "POP"
    },
    "3156": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4667,
        4681
      ],
      "op": "PUSH1",
      "path": "176",
      "value": "0x0"
    },
    "3158": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4684,
        4713
      ],
      "op": "PUSH2",
      "path": "176",
      "value": "0xC63"
    },
    "3161": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4612,
        4661
      ],
      "op": "DUP3",
      "path": "176"
    },
    "3162": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4684,
        4702
      ],
      "op": "PUSH2",
      "path": "176",
      "value": "0x36F"
    },
    "3165": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4684,
        4692
      ],
      "op": "DUP12",
      "path": "176"
    },
    "3166": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4697,
        4701
      ],
      "op": "DUP7",
      "path": "176"
    },
    "3167": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4684,
        4696
      ],
      "op": "PUSH2",
      "path": "176",
      "value": "0x1113"
    },
    "3170": {
      "fn": "ProxyOracle.convertForLiquidation",
      "jump": "i",
      "offset": [
        4684,
        4702
      ],
      "op": "JUMP",
      "path": "176"
    },
    "3171": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4684,
        4713
      ],
      "op": "JUMPDEST",
      "path": "176"
    },
    "3172": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4667,
        4713
      ],
      "op": "SWAP1",
      "path": "176"
    },
    "3173": {
      "op": "POP"
    },
    "3174": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4731,
        4772
      ],
      "op": "PUSH2",
      "path": "176",
      "statement": 16,
      "value": "0xC77"
    },
    "3177": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4757,
        4771
      ],
      "op": "DUP7",
      "path": "176"
    },
    "3178": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4731,
        4752
      ],
      "op": "PUSH2",
      "path": "176",
      "value": "0x36F"
    },
    "3181": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4667,
        4713
      ],
      "op": "DUP4",
      "path": "176"
    },
    "3182": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3184": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "3186": {
      "op": "SHL"
    },
    "3187": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4731,
        4744
      ],
      "op": "PUSH2",
      "path": "176",
      "value": "0x1113"
    },
    "3190": {
      "fn": "ProxyOracle.convertForLiquidation",
      "jump": "i",
      "offset": [
        4731,
        4752
      ],
      "op": "JUMP",
      "path": "176"
    },
    "3191": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4731,
        4772
      ],
      "op": "JUMPDEST",
      "path": "176"
    },
    "3192": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4719,
        4772
      ],
      "op": "SWAP1",
      "path": "176"
    },
    "3193": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4719,
        4772
      ],
      "op": "POP",
      "path": "176"
    },
    "3194": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4791,
        4884
      ],
      "op": "PUSH2",
      "path": "176",
      "statement": 17,
      "value": "0xCA8"
    },
    "3197": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4870,
        4883
      ],
      "op": "PUSH4",
      "path": "176",
      "value": "0x5F5E100"
    },
    "3202": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4791,
        4865
      ],
      "op": "PUSH2",
      "path": "176",
      "value": "0x36F"
    },
    "3205": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4837,
        4851
      ],
      "op": "DUP7",
      "path": "176"
    },
    "3206": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4837,
        4864
      ],
      "op": "PUSH1",
      "path": "176",
      "value": "0x40"
    },
    "3208": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4837,
        4864
      ],
      "op": "ADD",
      "path": "176"
    },
    "3209": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4837,
        4864
      ],
      "op": "MLOAD",
      "path": "176"
    },
    "3210": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4791,
        4865
      ],
      "op": "PUSH2",
      "path": "176",
      "value": "0xFFFF"
    },
    "3213": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4791,
        4865
      ],
      "op": "AND",
      "path": "176"
    },
    "3214": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4791,
        4832
      ],
      "op": "PUSH2",
      "path": "176",
      "value": "0x369"
    },
    "3217": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4805,
        4818
      ],
      "op": "DUP10",
      "path": "176"
    },
    "3218": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4805,
        4831
      ],
      "op": "PUSH1",
      "path": "176",
      "value": "0x40"
    },
    "3220": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4805,
        4831
      ],
      "op": "ADD",
      "path": "176"
    },
    "3221": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4805,
        4831
      ],
      "op": "MLOAD",
      "path": "176"
    },
    "3222": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4791,
        4832
      ],
      "op": "PUSH2",
      "path": "176",
      "value": "0xFFFF"
    },
    "3225": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4791,
        4832
      ],
      "op": "AND",
      "path": "176"
    },
    "3226": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4791,
        4800
      ],
      "op": "DUP7",
      "path": "176"
    },
    "3227": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4791,
        4804
      ],
      "op": "PUSH2",
      "path": "176",
      "value": "0x1113"
    },
    "3230": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4791,
        4804
      ],
      "op": "SWAP1",
      "path": "176"
    },
    "3231": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4791,
        4832
      ],
      "op": "SWAP2",
      "path": "176"
    },
    "3232": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4791,
        4832
      ],
      "op": "SWAP1",
      "path": "176"
    },
    "3233": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4791,
        4832
      ],
      "op": "PUSH4",
      "path": "176",
      "value": "0xFFFFFFFF"
    },
    "3238": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4791,
        4832
      ],
      "op": "AND",
      "path": "176"
    },
    "3239": {
      "fn": "ProxyOracle.convertForLiquidation",
      "jump": "i",
      "offset": [
        4791,
        4832
      ],
      "op": "JUMP",
      "path": "176"
    },
    "3240": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4791,
        4884
      ],
      "op": "JUMPDEST",
      "path": "176"
    },
    "3241": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        4778,
        4884
      ],
      "op": "SWAP13",
      "path": "176"
    },
    "3242": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        3909,
        4889
      ],
      "op": "SWAP12",
      "path": "176"
    },
    "3243": {
      "op": "POP"
    },
    "3244": {
      "op": "POP"
    },
    "3245": {
      "op": "POP"
    },
    "3246": {
      "op": "POP"
    },
    "3247": {
      "op": "POP"
    },
    "3248": {
      "op": "POP"
    },
    "3249": {
      "op": "POP"
    },
    "3250": {
      "op": "POP"
    },
    "3251": {
      "op": "POP"
    },
    "3252": {
      "op": "POP"
    },
    "3253": {
      "op": "POP"
    },
    "3254": {
      "op": "POP"
    },
    "3255": {
      "fn": "ProxyOracle.convertForLiquidation",
      "jump": "o",
      "offset": [
        3909,
        4889
      ],
      "op": "JUMP",
      "path": "176"
    },
    "3256": {
      "offset": [
        373,
        403
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "3257": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        373,
        403
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x1"
    },
    "3259": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        373,
        403
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "3260": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3262": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3264": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3266": {
      "op": "SHL"
    },
    "3267": {
      "op": "SUB"
    },
    "3268": {
      "offset": [
        373,
        403
      ],
      "op": "AND",
      "path": "22"
    },
    "3269": {
      "fn": "ProxyOracle.convertForLiquidation",
      "offset": [
        373,
        403
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3270": {
      "fn": "ProxyOracle.convertForLiquidation",
      "jump": "o",
      "offset": [
        373,
        403
      ],
      "op": "JUMP",
      "path": "22"
    },
    "3271": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1234,
        1444
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "3272": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1297,
        1312
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 18,
      "value": "0x1"
    },
    "3274": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1297,
        1312
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "3275": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3277": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3279": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3281": {
      "op": "SHL"
    },
    "3282": {
      "op": "SUB"
    },
    "3283": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1297,
        1312
      ],
      "op": "AND",
      "path": "22"
    },
    "3284": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1283,
        1293
      ],
      "op": "CALLER",
      "path": "22"
    },
    "3285": {
      "branch": 50,
      "fn": "Governable.acceptGovernor",
      "offset": [
        1283,
        1312
      ],
      "op": "EQ",
      "path": "22"
    },
    "3286": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1275,
        1341
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xCF1"
    },
    "3289": {
      "branch": 50,
      "fn": "Governable.acceptGovernor",
      "offset": [
        1275,
        1341
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "3290": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1275,
        1341
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "3292": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1275,
        1341
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "3293": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3297": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3299": {
      "op": "SHL"
    },
    "3300": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1275,
        1341
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3301": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1275,
        1341
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "3302": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1275,
        1341
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "3304": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1275,
        1341
      ],
      "op": "ADD",
      "path": "22"
    },
    "3305": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1275,
        1341
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2B6"
    },
    "3308": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1275,
        1341
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "3309": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1275,
        1341
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x158A"
    },
    "3312": {
      "fn": "Governable.acceptGovernor",
      "jump": "i",
      "offset": [
        1275,
        1341
      ],
      "op": "JUMP",
      "path": "22"
    },
    "3313": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1275,
        1341
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "3314": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1347,
        1362
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 19,
      "value": "0x1"
    },
    "3316": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1347,
        1375
      ],
      "op": "DUP1",
      "path": "22"
    },
    "3317": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1347,
        1375
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "3318": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3320": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3322": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3324": {
      "op": "SHL"
    },
    "3325": {
      "op": "SUB"
    },
    "3326": {
      "op": "NOT"
    },
    "3327": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1347,
        1375
      ],
      "op": "AND",
      "path": "22"
    },
    "3328": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1347,
        1375
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "3329": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1347,
        1375
      ],
      "op": "SSTORE",
      "path": "22"
    },
    "3330": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3332": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1381,
        1402
      ],
      "op": "DUP1",
      "path": "22",
      "statement": 20
    },
    "3333": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1381,
        1402
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "3334": {
      "op": "PUSH3",
      "value": "0x10000"
    },
    "3338": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3340": {
      "op": "PUSH1",
      "value": "0xB0"
    },
    "3342": {
      "op": "SHL"
    },
    "3343": {
      "op": "SUB"
    },
    "3344": {
      "op": "NOT"
    },
    "3345": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1381,
        1402
      ],
      "op": "AND",
      "path": "22"
    },
    "3346": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1392,
        1402
      ],
      "op": "CALLER",
      "path": "22"
    },
    "3347": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1381,
        1402
      ],
      "op": "PUSH3",
      "path": "22",
      "value": "0x10000"
    },
    "3351": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1381,
        1402
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3352": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1381,
        1402
      ],
      "op": "MUL",
      "path": "22"
    },
    "3353": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1381,
        1402
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "3354": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1381,
        1402
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "3355": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1381,
        1402
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "3356": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1381,
        1402
      ],
      "op": "OR",
      "path": "22"
    },
    "3357": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1381,
        1402
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "3358": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1381,
        1402
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "3359": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1381,
        1402
      ],
      "op": "SSTORE",
      "path": "22"
    },
    "3360": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1413,
        1439
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 21,
      "value": "0x40"
    },
    "3362": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1413,
        1439
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "3363": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1413,
        1439
      ],
      "op": "PUSH32",
      "path": "22",
      "value": "0xD345D81CE68C70B119A17EEE79DC1421700BD9CB21CA148A62DC90983964E82F"
    },
    "3396": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1413,
        1439
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "3397": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1413,
        1439
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xD4D"
    },
    "3400": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1413,
        1439
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "3401": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1413,
        1439
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1508"
    },
    "3404": {
      "fn": "Governable.acceptGovernor",
      "jump": "i",
      "offset": [
        1413,
        1439
      ],
      "op": "JUMP",
      "path": "22"
    },
    "3405": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1413,
        1439
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "3406": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1413,
        1439
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "3408": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1413,
        1439
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "3409": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1413,
        1439
      ],
      "op": "DUP1",
      "path": "22"
    },
    "3410": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1413,
        1439
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "3411": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1413,
        1439
      ],
      "op": "SUB",
      "path": "22"
    },
    "3412": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1413,
        1439
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "3413": {
      "fn": "Governable.acceptGovernor",
      "offset": [
        1413,
        1439
      ],
      "op": "LOG1",
      "path": "22"
    },
    "3414": {
      "fn": "Governable.acceptGovernor",
      "jump": "o",
      "offset": [
        1234,
        1444
      ],
      "op": "JUMP",
      "path": "22"
    },
    "3415": {
      "fn": "ProxyOracle.support",
      "offset": [
        6714,
        6944
      ],
      "op": "JUMPDEST",
      "path": "176"
    },
    "3416": {
      "fn": "ProxyOracle.support",
      "offset": [
        6794,
        6817
      ],
      "op": "PUSH1",
      "path": "176",
      "value": "0x40"
    },
    "3418": {
      "fn": "ProxyOracle.support",
      "offset": [
        6794,
        6817
      ],
      "op": "MLOAD",
      "path": "176"
    },
    "3419": {
      "op": "PUSH4",
      "value": "0x11E56AFF"
    },
    "3424": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3426": {
      "op": "SHL"
    },
    "3427": {
      "fn": "ProxyOracle.support",
      "offset": [
        6794,
        6817
      ],
      "op": "DUP2",
      "path": "176"
    },
    "3428": {
      "fn": "ProxyOracle.support",
      "offset": [
        6794,
        6817
      ],
      "op": "MSTORE",
      "path": "176"
    },
    "3429": {
      "fn": "ProxyOracle.support",
      "offset": [
        6778,
        6782
      ],
      "op": "PUSH1",
      "path": "176",
      "value": "0x0"
    },
    "3431": {
      "fn": "ProxyOracle.support",
      "offset": [
        6778,
        6782
      ],
      "op": "SWAP1",
      "path": "176"
    },
    "3432": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3434": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3436": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3438": {
      "op": "SHL"
    },
    "3439": {
      "op": "SUB"
    },
    "3440": {
      "fn": "ProxyOracle.support",
      "offset": [
        6794,
        6800
      ],
      "op": "PUSH32",
      "path": "176",
      "value": "0x0"
    },
    "3473": {
      "fn": "ProxyOracle.support",
      "offset": [
        6794,
        6810
      ],
      "op": "AND",
      "path": "176"
    },
    "3474": {
      "fn": "ProxyOracle.support",
      "offset": [
        6794,
        6810
      ],
      "op": "SWAP1",
      "path": "176"
    },
    "3475": {
      "fn": "ProxyOracle.support",
      "offset": [
        6794,
        6810
      ],
      "op": "PUSH4",
      "path": "176",
      "value": "0x11E56AFF"
    },
    "3480": {
      "fn": "ProxyOracle.support",
      "offset": [
        6794,
        6810
      ],
      "op": "SWAP1",
      "path": "176"
    },
    "3481": {
      "fn": "ProxyOracle.support",
      "offset": [
        6794,
        6817
      ],
      "op": "PUSH2",
      "path": "176",
      "value": "0xDA6"
    },
    "3484": {
      "fn": "ProxyOracle.support",
      "offset": [
        6794,
        6817
      ],
      "op": "SWAP1",
      "path": "176"
    },
    "3485": {
      "fn": "ProxyOracle.support",
      "offset": [
        6811,
        6816
      ],
      "op": "DUP6",
      "path": "176"
    },
    "3486": {
      "fn": "ProxyOracle.support",
      "offset": [
        6811,
        6816
      ],
      "op": "SWAP1",
      "path": "176"
    },
    "3487": {
      "fn": "ProxyOracle.support",
      "offset": [
        6794,
        6817
      ],
      "op": "PUSH1",
      "path": "176",
      "value": "0x4"
    },
    "3489": {
      "fn": "ProxyOracle.support",
      "offset": [
        6794,
        6817
      ],
      "op": "ADD",
      "path": "176"
    },
    "3490": {
      "fn": "ProxyOracle.support",
      "offset": [
        6794,
        6817
      ],
      "op": "PUSH2",
      "path": "176",
      "value": "0x1508"
    },
    "3493": {
      "fn": "ProxyOracle.support",
      "jump": "i",
      "offset": [
        6794,
        6817
      ],
      "op": "JUMP",
      "path": "176"
    },
    "3494": {
      "fn": "ProxyOracle.support",
      "offset": [
        6794,
        6817
      ],
      "op": "JUMPDEST",
      "path": "176"
    },
    "3495": {
      "fn": "ProxyOracle.support",
      "offset": [
        6794,
        6817
      ],
      "op": "PUSH1",
      "path": "176",
      "value": "0x20"
    },
    "3497": {
      "fn": "ProxyOracle.support",
      "offset": [
        6794,
        6817
      ],
      "op": "PUSH1",
      "path": "176",
      "value": "0x40"
    },
    "3499": {
      "fn": "ProxyOracle.support",
      "offset": [
        6794,
        6817
      ],
      "op": "MLOAD",
      "path": "176"
    },
    "3500": {
      "fn": "ProxyOracle.support",
      "offset": [
        6794,
        6817
      ],
      "op": "DUP1",
      "path": "176"
    },
    "3501": {
      "fn": "ProxyOracle.support",
      "offset": [
        6794,
        6817
      ],
      "op": "DUP4",
      "path": "176"
    },
    "3502": {
      "fn": "ProxyOracle.support",
      "offset": [
        6794,
        6817
      ],
      "op": "SUB",
      "path": "176"
    },
    "3503": {
      "fn": "ProxyOracle.support",
      "offset": [
        6794,
        6817
      ],
      "op": "DUP2",
      "path": "176"
    },
    "3504": {
      "fn": "ProxyOracle.support",
      "offset": [
        6794,
        6817
      ],
      "op": "DUP7",
      "path": "176"
    },
    "3505": {
      "fn": "ProxyOracle.support",
      "offset": [
        6794,
        6817
      ],
      "op": "DUP1",
      "path": "176"
    },
    "3506": {
      "fn": "ProxyOracle.support",
      "offset": [
        6794,
        6817
      ],
      "op": "EXTCODESIZE",
      "path": "176"
    },
    "3507": {
      "fn": "ProxyOracle.support",
      "offset": [
        6794,
        6817
      ],
      "op": "ISZERO",
      "path": "176"
    },
    "3508": {
      "fn": "ProxyOracle.support",
      "offset": [
        6794,
        6817
      ],
      "op": "DUP1",
      "path": "176"
    },
    "3509": {
      "fn": "ProxyOracle.support",
      "offset": [
        6794,
        6817
      ],
      "op": "ISZERO",
      "path": "176"
    },
    "3510": {
      "fn": "ProxyOracle.support",
      "offset": [
        6794,
        6817
      ],
      "op": "PUSH2",
      "path": "176",
      "value": "0xDBE"
    },
    "3513": {
      "fn": "ProxyOracle.support",
      "offset": [
        6794,
        6817
      ],
      "op": "JUMPI",
      "path": "176"
    },
    "3514": {
      "fn": "ProxyOracle.support",
      "offset": [
        6794,
        6817
      ],
      "op": "PUSH1",
      "path": "176",
      "value": "0x0"
    },
    "3516": {
      "fn": "ProxyOracle.support",
      "offset": [
        6794,
        6817
      ],
      "op": "DUP1",
      "path": "176"
    },
    "3517": {
      "fn": "ProxyOracle.support",
      "offset": [
        6794,
        6817
      ],
      "op": "REVERT",
      "path": "176"
    },
    "3518": {
      "fn": "ProxyOracle.support",
      "offset": [
        6794,
        6817
      ],
      "op": "JUMPDEST",
      "path": "176"
    },
    "3519": {
      "fn": "ProxyOracle.support",
      "offset": [
        6794,
        6817
      ],
      "op": "POP",
      "path": "176"
    },
    "3520": {
      "fn": "ProxyOracle.support",
      "offset": [
        6794,
        6817
      ],
      "op": "GAS",
      "path": "176"
    },
    "3521": {
      "fn": "ProxyOracle.support",
      "offset": [
        6794,
        6817
      ],
      "op": "STATICCALL",
      "path": "176"
    },
    "3522": {
      "fn": "ProxyOracle.support",
      "offset": [
        6794,
        6817
      ],
      "op": "SWAP3",
      "path": "176"
    },
    "3523": {
      "fn": "ProxyOracle.support",
      "offset": [
        6794,
        6817
      ],
      "op": "POP",
      "path": "176"
    },
    "3524": {
      "fn": "ProxyOracle.support",
      "offset": [
        6794,
        6817
      ],
      "op": "POP",
      "path": "176"
    },
    "3525": {
      "fn": "ProxyOracle.support",
      "offset": [
        6794,
        6817
      ],
      "op": "POP",
      "path": "176"
    },
    "3526": {
      "fn": "ProxyOracle.support",
      "offset": [
        6794,
        6817
      ],
      "op": "DUP1",
      "path": "176"
    },
    "3527": {
      "fn": "ProxyOracle.support",
      "offset": [
        6794,
        6817
      ],
      "op": "ISZERO",
      "path": "176"
    },
    "3528": {
      "fn": "ProxyOracle.support",
      "offset": [
        6794,
        6817
      ],
      "op": "PUSH2",
      "path": "176",
      "value": "0xDEE"
    },
    "3531": {
      "fn": "ProxyOracle.support",
      "offset": [
        6794,
        6817
      ],
      "op": "JUMPI",
      "path": "176"
    },
    "3532": {
      "op": "POP"
    },
    "3533": {
      "fn": "ProxyOracle.support",
      "offset": [
        6794,
        6817
      ],
      "op": "PUSH1",
      "path": "176",
      "value": "0x40"
    },
    "3535": {
      "fn": "ProxyOracle.support",
      "offset": [
        6794,
        6817
      ],
      "op": "DUP1",
      "path": "176"
    },
    "3536": {
      "fn": "ProxyOracle.support",
      "offset": [
        6794,
        6817
      ],
      "op": "MLOAD",
      "path": "176"
    },
    "3537": {
      "fn": "ProxyOracle.support",
      "offset": [
        6794,
        6817
      ],
      "op": "PUSH1",
      "path": "176",
      "value": "0x1F"
    },
    "3539": {
      "fn": "ProxyOracle.support",
      "offset": [
        6794,
        6817
      ],
      "op": "RETURNDATASIZE",
      "path": "176"
    },
    "3540": {
      "fn": "ProxyOracle.support",
      "offset": [
        6794,
        6817
      ],
      "op": "SWAP1",
      "path": "176"
    },
    "3541": {
      "fn": "ProxyOracle.support",
      "offset": [
        6794,
        6817
      ],
      "op": "DUP2",
      "path": "176"
    },
    "3542": {
      "fn": "ProxyOracle.support",
      "offset": [
        6794,
        6817
      ],
      "op": "ADD",
      "path": "176"
    },
    "3543": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3545": {
      "op": "NOT"
    },
    "3546": {
      "fn": "ProxyOracle.support",
      "offset": [
        6794,
        6817
      ],
      "op": "AND",
      "path": "176"
    },
    "3547": {
      "fn": "ProxyOracle.support",
      "offset": [
        6794,
        6817
      ],
      "op": "DUP3",
      "path": "176"
    },
    "3548": {
      "fn": "ProxyOracle.support",
      "offset": [
        6794,
        6817
      ],
      "op": "ADD",
      "path": "176"
    },
    "3549": {
      "fn": "ProxyOracle.support",
      "offset": [
        6794,
        6817
      ],
      "op": "SWAP1",
      "path": "176"
    },
    "3550": {
      "fn": "ProxyOracle.support",
      "offset": [
        6794,
        6817
      ],
      "op": "SWAP3",
      "path": "176"
    },
    "3551": {
      "fn": "ProxyOracle.support",
      "offset": [
        6794,
        6817
      ],
      "op": "MSTORE",
      "path": "176"
    },
    "3552": {
      "fn": "ProxyOracle.support",
      "offset": [
        6794,
        6817
      ],
      "op": "PUSH2",
      "path": "176",
      "value": "0xDEB"
    },
    "3555": {
      "fn": "ProxyOracle.support",
      "offset": [
        6794,
        6817
      ],
      "op": "SWAP2",
      "path": "176"
    },
    "3556": {
      "fn": "ProxyOracle.support",
      "offset": [
        6794,
        6817
      ],
      "op": "DUP2",
      "path": "176"
    },
    "3557": {
      "fn": "ProxyOracle.support",
      "offset": [
        6794,
        6817
      ],
      "op": "ADD",
      "path": "176"
    },
    "3558": {
      "fn": "ProxyOracle.support",
      "offset": [
        6794,
        6817
      ],
      "op": "SWAP1",
      "path": "176"
    },
    "3559": {
      "fn": "ProxyOracle.support",
      "offset": [
        6794,
        6817
      ],
      "op": "PUSH2",
      "path": "176",
      "value": "0x14F0"
    },
    "3562": {
      "fn": "ProxyOracle.support",
      "jump": "i",
      "offset": [
        6794,
        6817
      ],
      "op": "JUMP",
      "path": "176"
    },
    "3563": {
      "fn": "ProxyOracle.support",
      "offset": [
        6794,
        6817
      ],
      "op": "JUMPDEST",
      "path": "176"
    },
    "3564": {
      "fn": "ProxyOracle.support",
      "offset": [
        6794,
        6817
      ],
      "op": "PUSH1",
      "path": "176",
      "value": "0x1"
    },
    "3566": {
      "fn": "ProxyOracle.support",
      "offset": [
        6794,
        6817
      ],
      "op": "JUMPDEST",
      "path": "176"
    },
    "3567": {
      "fn": "ProxyOracle.support",
      "offset": [
        6790,
        6940
      ],
      "op": "PUSH2",
      "path": "176",
      "value": "0xDFA"
    },
    "3570": {
      "fn": "ProxyOracle.support",
      "offset": [
        6790,
        6940
      ],
      "op": "JUMPI",
      "path": "176"
    },
    "3571": {
      "op": "POP"
    },
    "3572": {
      "fn": "ProxyOracle.support",
      "offset": [
        6928,
        6933
      ],
      "op": "PUSH1",
      "path": "176",
      "statement": 22,
      "value": "0x0"
    },
    "3574": {
      "fn": "ProxyOracle.support",
      "offset": [
        6921,
        6933
      ],
      "op": "PUSH2",
      "path": "176",
      "value": "0xE2F"
    },
    "3577": {
      "fn": "ProxyOracle.support",
      "offset": [
        6921,
        6933
      ],
      "op": "JUMP",
      "path": "176"
    },
    "3578": {
      "fn": "ProxyOracle.support",
      "offset": [
        6790,
        6940
      ],
      "op": "JUMPDEST",
      "path": "176"
    },
    "3579": {
      "fn": "ProxyOracle.support",
      "offset": [
        6851,
        6858
      ],
      "op": "DUP1",
      "path": "176",
      "statement": 23
    },
    "3580": {
      "fn": "ProxyOracle.support",
      "offset": [
        6851,
        6858
      ],
      "op": "ISZERO",
      "path": "176"
    },
    "3581": {
      "fn": "ProxyOracle.support",
      "offset": [
        6851,
        6858
      ],
      "op": "DUP1",
      "path": "176"
    },
    "3582": {
      "fn": "ProxyOracle.support",
      "offset": [
        6851,
        6858
      ],
      "op": "ISZERO",
      "path": "176"
    },
    "3583": {
      "fn": "ProxyOracle.support",
      "offset": [
        6851,
        6858
      ],
      "op": "SWAP1",
      "path": "176"
    },
    "3584": {
      "fn": "ProxyOracle.support",
      "offset": [
        6851,
        6899
      ],
      "op": "PUSH2",
      "path": "176",
      "value": "0xE2B"
    },
    "3587": {
      "fn": "ProxyOracle.support",
      "offset": [
        6851,
        6899
      ],
      "op": "JUMPI",
      "path": "176"
    },
    "3588": {
      "op": "POP"
    },
    "3589": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3591": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3593": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3595": {
      "op": "SHL"
    },
    "3596": {
      "op": "SUB"
    },
    "3597": {
      "fn": "ProxyOracle.support",
      "offset": [
        6862,
        6881
      ],
      "op": "DUP4",
      "path": "176"
    },
    "3598": {
      "fn": "ProxyOracle.support",
      "offset": [
        6862,
        6881
      ],
      "op": "AND",
      "path": "176"
    },
    "3599": {
      "fn": "ProxyOracle.support",
      "offset": [
        6862,
        6881
      ],
      "op": "PUSH1",
      "path": "176",
      "value": "0x0"
    },
    "3601": {
      "fn": "ProxyOracle.support",
      "offset": [
        6862,
        6881
      ],
      "op": "SWAP1",
      "path": "176"
    },
    "3602": {
      "fn": "ProxyOracle.support",
      "offset": [
        6862,
        6881
      ],
      "op": "DUP2",
      "path": "176"
    },
    "3603": {
      "fn": "ProxyOracle.support",
      "offset": [
        6862,
        6881
      ],
      "op": "MSTORE",
      "path": "176"
    },
    "3604": {
      "fn": "ProxyOracle.support",
      "offset": [
        6862,
        6874
      ],
      "op": "PUSH1",
      "path": "176",
      "value": "0x42"
    },
    "3606": {
      "fn": "ProxyOracle.support",
      "offset": [
        6862,
        6881
      ],
      "op": "PUSH1",
      "path": "176",
      "value": "0x20"
    },
    "3608": {
      "fn": "ProxyOracle.support",
      "offset": [
        6862,
        6881
      ],
      "op": "MSTORE",
      "path": "176"
    },
    "3609": {
      "fn": "ProxyOracle.support",
      "offset": [
        6862,
        6881
      ],
      "op": "PUSH1",
      "path": "176",
      "value": "0x40"
    },
    "3611": {
      "fn": "ProxyOracle.support",
      "offset": [
        6862,
        6881
      ],
      "op": "SWAP1",
      "path": "176"
    },
    "3612": {
      "fn": "ProxyOracle.support",
      "offset": [
        6862,
        6881
      ],
      "op": "KECCAK256",
      "path": "176"
    },
    "3613": {
      "fn": "ProxyOracle.support",
      "offset": [
        6862,
        6894
      ],
      "op": "SLOAD",
      "path": "176"
    },
    "3614": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3616": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3618": {
      "op": "SHL"
    },
    "3619": {
      "fn": "ProxyOracle.support",
      "offset": [
        6862,
        6894
      ],
      "op": "SWAP1",
      "path": "176"
    },
    "3620": {
      "fn": "ProxyOracle.support",
      "offset": [
        6862,
        6894
      ],
      "op": "DIV",
      "path": "176"
    },
    "3621": {
      "fn": "ProxyOracle.support",
      "offset": [
        6862,
        6894
      ],
      "op": "PUSH2",
      "path": "176",
      "value": "0xFFFF"
    },
    "3624": {
      "fn": "ProxyOracle.support",
      "offset": [
        6862,
        6894
      ],
      "op": "AND",
      "path": "176"
    },
    "3625": {
      "fn": "ProxyOracle.support",
      "offset": [
        6862,
        6899
      ],
      "op": "ISZERO",
      "path": "176"
    },
    "3626": {
      "fn": "ProxyOracle.support",
      "offset": [
        6862,
        6899
      ],
      "op": "ISZERO",
      "path": "176"
    },
    "3627": {
      "fn": "ProxyOracle.support",
      "offset": [
        6851,
        6899
      ],
      "op": "JUMPDEST",
      "path": "176"
    },
    "3628": {
      "fn": "ProxyOracle.support",
      "offset": [
        6844,
        6899
      ],
      "op": "SWAP2",
      "path": "176"
    },
    "3629": {
      "fn": "ProxyOracle.support",
      "offset": [
        6844,
        6899
      ],
      "op": "POP",
      "path": "176"
    },
    "3630": {
      "fn": "ProxyOracle.support",
      "offset": [
        6844,
        6899
      ],
      "op": "POP",
      "path": "176"
    },
    "3631": {
      "fn": "ProxyOracle.support",
      "offset": [
        6790,
        6940
      ],
      "op": "JUMPDEST",
      "path": "176"
    },
    "3632": {
      "fn": "ProxyOracle.support",
      "offset": [
        6714,
        6944
      ],
      "op": "SWAP2",
      "path": "176"
    },
    "3633": {
      "fn": "ProxyOracle.support",
      "offset": [
        6714,
        6944
      ],
      "op": "SWAP1",
      "path": "176"
    },
    "3634": {
      "fn": "ProxyOracle.support",
      "offset": [
        6714,
        6944
      ],
      "op": "POP",
      "path": "176"
    },
    "3635": {
      "fn": "ProxyOracle.support",
      "jump": "o",
      "offset": [
        6714,
        6944
      ],
      "op": "JUMP",
      "path": "176"
    },
    "3636": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        1640,
        2413
      ],
      "op": "JUMPDEST",
      "path": "176"
    },
    "3637": {
      "offset": [
        566,
        574
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "3639": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        566,
        574
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "3640": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        566,
        574
      ],
      "op": "PUSH3",
      "path": "22",
      "value": "0x10000"
    },
    "3644": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        566,
        574
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "3645": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        566,
        574
      ],
      "op": "DIV",
      "path": "22"
    },
    "3646": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3648": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3650": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3652": {
      "op": "SHL"
    },
    "3653": {
      "op": "SUB"
    },
    "3654": {
      "offset": [
        566,
        574
      ],
      "op": "AND",
      "path": "22"
    },
    "3655": {
      "offset": [
        552,
        562
      ],
      "op": "CALLER",
      "path": "22"
    },
    "3656": {
      "offset": [
        552,
        574
      ],
      "op": "EQ",
      "path": "22"
    },
    "3657": {
      "offset": [
        544,
        595
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xE64"
    },
    "3660": {
      "offset": [
        544,
        595
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "3661": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        544,
        595
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "3663": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        544,
        595
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "3664": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3668": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3670": {
      "op": "SHL"
    },
    "3671": {
      "offset": [
        544,
        595
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3672": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        544,
        595
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "3673": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        544,
        595
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "3675": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        544,
        595
      ],
      "op": "ADD",
      "path": "22"
    },
    "3676": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        544,
        595
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2B6"
    },
    "3679": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        544,
        595
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "3680": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        544,
        595
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x15F8"
    },
    "3683": {
      "fn": "ProxyOracle.setTokenFactors",
      "jump": "i",
      "offset": [
        544,
        595
      ],
      "op": "JUMP",
      "path": "22"
    },
    "3684": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        544,
        595
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "3685": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        1785,
        1798
      ],
      "op": "DUP1",
      "path": "176",
      "statement": 24
    },
    "3686": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        1785,
        1805
      ],
      "op": "MLOAD",
      "path": "176"
    },
    "3687": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        1768,
        1774
      ],
      "op": "DUP3",
      "path": "176"
    },
    "3688": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        1768,
        1781
      ],
      "op": "MLOAD",
      "path": "176"
    },
    "3689": {
      "branch": 45,
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        1768,
        1805
      ],
      "op": "EQ",
      "path": "176"
    },
    "3690": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        1760,
        1829
      ],
      "op": "PUSH2",
      "path": "176",
      "value": "0xE85"
    },
    "3693": {
      "branch": 45,
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        1760,
        1829
      ],
      "op": "JUMPI",
      "path": "176"
    },
    "3694": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        1760,
        1829
      ],
      "op": "PUSH1",
      "path": "176",
      "value": "0x40"
    },
    "3696": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        1760,
        1829
      ],
      "op": "MLOAD",
      "path": "176"
    },
    "3697": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3701": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3703": {
      "op": "SHL"
    },
    "3704": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        1760,
        1829
      ],
      "op": "DUP2",
      "path": "176"
    },
    "3705": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        1760,
        1829
      ],
      "op": "MSTORE",
      "path": "176"
    },
    "3706": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        1760,
        1829
      ],
      "op": "PUSH1",
      "path": "176",
      "value": "0x4"
    },
    "3708": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        1760,
        1829
      ],
      "op": "ADD",
      "path": "176"
    },
    "3709": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        1760,
        1829
      ],
      "op": "PUSH2",
      "path": "176",
      "value": "0x2B6"
    },
    "3712": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        1760,
        1829
      ],
      "op": "SWAP1",
      "path": "176"
    },
    "3713": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        1760,
        1829
      ],
      "op": "PUSH2",
      "path": "176",
      "value": "0x17A0"
    },
    "3716": {
      "fn": "ProxyOracle.setTokenFactors",
      "jump": "i",
      "offset": [
        1760,
        1829
      ],
      "op": "JUMP",
      "path": "176"
    },
    "3717": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        1760,
        1829
      ],
      "op": "JUMPDEST",
      "path": "176"
    },
    "3718": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        1840,
        1848
      ],
      "op": "PUSH1",
      "path": "176",
      "value": "0x0"
    },
    "3720": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        1835,
        2409
      ],
      "op": "JUMPDEST",
      "path": "176"
    },
    "3721": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        1860,
        1866
      ],
      "op": "DUP3",
      "path": "176"
    },
    "3722": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        1860,
        1873
      ],
      "op": "MLOAD",
      "path": "176"
    },
    "3723": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        1854,
        1857
      ],
      "op": "DUP2",
      "path": "176"
    },
    "3724": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        1854,
        1873
      ],
      "op": "LT",
      "path": "176"
    },
    "3725": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        1835,
        2409
      ],
      "op": "ISZERO",
      "path": "176"
    },
    "3726": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        1835,
        2409
      ],
      "op": "PUSH2",
      "path": "176",
      "value": "0x8B9"
    },
    "3729": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        1835,
        2409
      ],
      "op": "JUMPI",
      "path": "176"
    },
    "3730": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        1933,
        1938
      ],
      "op": "PUSH2",
      "path": "176",
      "statement": 25,
      "value": "0x2710"
    },
    "3733": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        1898,
        1911
      ],
      "op": "DUP3",
      "path": "176"
    },
    "3734": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        1912,
        1915
      ],
      "op": "DUP3",
      "path": "176"
    },
    "3735": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        1898,
        1916
      ],
      "op": "DUP2",
      "path": "176"
    },
    "3736": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        1898,
        1916
      ],
      "op": "MLOAD",
      "path": "176"
    },
    "3737": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        1898,
        1916
      ],
      "op": "DUP2",
      "path": "176"
    },
    "3738": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        1898,
        1916
      ],
      "op": "LT",
      "path": "176"
    },
    "3739": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        1898,
        1916
      ],
      "op": "PUSH2",
      "path": "176",
      "value": "0xEA0"
    },
    "3742": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        1898,
        1916
      ],
      "op": "JUMPI",
      "path": "176"
    },
    "3743": {
      "dev": "Index out of range",
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        1898,
        1916
      ],
      "op": "INVALID",
      "path": "176"
    },
    "3744": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        1898,
        1916
      ],
      "op": "JUMPDEST",
      "path": "176"
    },
    "3745": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        1898,
        1916
      ],
      "op": "PUSH1",
      "path": "176",
      "value": "0x20"
    },
    "3747": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        1898,
        1916
      ],
      "op": "MUL",
      "path": "176"
    },
    "3748": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        1898,
        1916
      ],
      "op": "PUSH1",
      "path": "176",
      "value": "0x20"
    },
    "3750": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        1898,
        1916
      ],
      "op": "ADD",
      "path": "176"
    },
    "3751": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        1898,
        1916
      ],
      "op": "ADD",
      "path": "176"
    },
    "3752": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        1898,
        1916
      ],
      "op": "MLOAD",
      "path": "176"
    },
    "3753": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        1898,
        1929
      ],
      "op": "PUSH1",
      "path": "176",
      "value": "0x0"
    },
    "3755": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        1898,
        1929
      ],
      "op": "ADD",
      "path": "176"
    },
    "3756": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        1898,
        1929
      ],
      "op": "MLOAD",
      "path": "176"
    },
    "3757": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        1898,
        1938
      ],
      "op": "PUSH2",
      "path": "176",
      "value": "0xFFFF"
    },
    "3760": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        1898,
        1938
      ],
      "op": "AND",
      "path": "176"
    },
    "3761": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        1898,
        1938
      ],
      "op": "LT",
      "path": "176"
    },
    "3762": {
      "branch": 46,
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        1898,
        1938
      ],
      "op": "ISZERO",
      "path": "176"
    },
    "3763": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        1890,
        1978
      ],
      "op": "PUSH2",
      "path": "176",
      "value": "0xECE"
    },
    "3766": {
      "branch": 46,
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        1890,
        1978
      ],
      "op": "JUMPI",
      "path": "176"
    },
    "3767": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        1890,
        1978
      ],
      "op": "PUSH1",
      "path": "176",
      "value": "0x40"
    },
    "3769": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        1890,
        1978
      ],
      "op": "MLOAD",
      "path": "176"
    },
    "3770": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3774": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3776": {
      "op": "SHL"
    },
    "3777": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        1890,
        1978
      ],
      "op": "DUP2",
      "path": "176"
    },
    "3778": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        1890,
        1978
      ],
      "op": "MSTORE",
      "path": "176"
    },
    "3779": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        1890,
        1978
      ],
      "op": "PUSH1",
      "path": "176",
      "value": "0x4"
    },
    "3781": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        1890,
        1978
      ],
      "op": "ADD",
      "path": "176"
    },
    "3782": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        1890,
        1978
      ],
      "op": "PUSH2",
      "path": "176",
      "value": "0x2B6"
    },
    "3785": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        1890,
        1978
      ],
      "op": "SWAP1",
      "path": "176"
    },
    "3786": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        1890,
        1978
      ],
      "op": "PUSH2",
      "path": "176",
      "value": "0x1732"
    },
    "3789": {
      "fn": "ProxyOracle.setTokenFactors",
      "jump": "i",
      "offset": [
        1890,
        1978
      ],
      "op": "JUMP",
      "path": "176"
    },
    "3790": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        1890,
        1978
      ],
      "op": "JUMPDEST",
      "path": "176"
    },
    "3791": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        2042,
        2047
      ],
      "op": "PUSH2",
      "path": "176",
      "statement": 26,
      "value": "0x2710"
    },
    "3794": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        2003,
        2016
      ],
      "op": "DUP3",
      "path": "176"
    },
    "3795": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        2017,
        2020
      ],
      "op": "DUP3",
      "path": "176"
    },
    "3796": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        2003,
        2021
      ],
      "op": "DUP2",
      "path": "176"
    },
    "3797": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        2003,
        2021
      ],
      "op": "MLOAD",
      "path": "176"
    },
    "3798": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        2003,
        2021
      ],
      "op": "DUP2",
      "path": "176"
    },
    "3799": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        2003,
        2021
      ],
      "op": "LT",
      "path": "176"
    },
    "3800": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        2003,
        2021
      ],
      "op": "PUSH2",
      "path": "176",
      "value": "0xEDD"
    },
    "3803": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        2003,
        2021
      ],
      "op": "JUMPI",
      "path": "176"
    },
    "3804": {
      "dev": "Index out of range",
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        2003,
        2021
      ],
      "op": "INVALID",
      "path": "176"
    },
    "3805": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        2003,
        2021
      ],
      "op": "JUMPDEST",
      "path": "176"
    },
    "3806": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        2003,
        2021
      ],
      "op": "PUSH1",
      "path": "176",
      "value": "0x20"
    },
    "3808": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        2003,
        2021
      ],
      "op": "MUL",
      "path": "176"
    },
    "3809": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        2003,
        2021
      ],
      "op": "PUSH1",
      "path": "176",
      "value": "0x20"
    },
    "3811": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        2003,
        2021
      ],
      "op": "ADD",
      "path": "176"
    },
    "3812": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        2003,
        2021
      ],
      "op": "ADD",
      "path": "176"
    },
    "3813": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        2003,
        2021
      ],
      "op": "MLOAD",
      "path": "176"
    },
    "3814": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        2003,
        2038
      ],
      "op": "PUSH1",
      "path": "176",
      "value": "0x20"
    },
    "3816": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        2003,
        2038
      ],
      "op": "ADD",
      "path": "176"
    },
    "3817": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        2003,
        2038
      ],
      "op": "MLOAD",
      "path": "176"
    },
    "3818": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        2003,
        2047
      ],
      "op": "PUSH2",
      "path": "176",
      "value": "0xFFFF"
    },
    "3821": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        2003,
        2047
      ],
      "op": "AND",
      "path": "176"
    },
    "3822": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        2003,
        2047
      ],
      "op": "GT",
      "path": "176"
    },
    "3823": {
      "branch": 47,
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        2003,
        2047
      ],
      "op": "ISZERO",
      "path": "176"
    },
    "3824": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        1986,
        2105
      ],
      "op": "PUSH2",
      "path": "176",
      "value": "0xF0B"
    },
    "3827": {
      "branch": 47,
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        1986,
        2105
      ],
      "op": "JUMPI",
      "path": "176"
    },
    "3828": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        1986,
        2105
      ],
      "op": "PUSH1",
      "path": "176",
      "value": "0x40"
    },
    "3830": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        1986,
        2105
      ],
      "op": "MLOAD",
      "path": "176"
    },
    "3831": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3835": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3837": {
      "op": "SHL"
    },
    "3838": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        1986,
        2105
      ],
      "op": "DUP2",
      "path": "176"
    },
    "3839": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        1986,
        2105
      ],
      "op": "MSTORE",
      "path": "176"
    },
    "3840": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        1986,
        2105
      ],
      "op": "PUSH1",
      "path": "176",
      "value": "0x4"
    },
    "3842": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        1986,
        2105
      ],
      "op": "ADD",
      "path": "176"
    },
    "3843": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        1986,
        2105
      ],
      "op": "PUSH2",
      "path": "176",
      "value": "0x2B6"
    },
    "3846": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        1986,
        2105
      ],
      "op": "SWAP1",
      "path": "176"
    },
    "3847": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        1986,
        2105
      ],
      "op": "PUSH2",
      "path": "176",
      "value": "0x16B5"
    },
    "3850": {
      "fn": "ProxyOracle.setTokenFactors",
      "jump": "i",
      "offset": [
        1986,
        2105
      ],
      "op": "JUMP",
      "path": "176"
    },
    "3851": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        1986,
        2105
      ],
      "op": "JUMPDEST",
      "path": "176"
    },
    "3852": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        2156,
        2161
      ],
      "op": "PUSH2",
      "path": "176",
      "statement": 27,
      "value": "0x2710"
    },
    "3855": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        2121,
        2134
      ],
      "op": "DUP3",
      "path": "176"
    },
    "3856": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        2135,
        2138
      ],
      "op": "DUP3",
      "path": "176"
    },
    "3857": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        2121,
        2139
      ],
      "op": "DUP2",
      "path": "176"
    },
    "3858": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        2121,
        2139
      ],
      "op": "MLOAD",
      "path": "176"
    },
    "3859": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        2121,
        2139
      ],
      "op": "DUP2",
      "path": "176"
    },
    "3860": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        2121,
        2139
      ],
      "op": "LT",
      "path": "176"
    },
    "3861": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        2121,
        2139
      ],
      "op": "PUSH2",
      "path": "176",
      "value": "0xF1A"
    },
    "3864": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        2121,
        2139
      ],
      "op": "JUMPI",
      "path": "176"
    },
    "3865": {
      "dev": "Index out of range",
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        2121,
        2139
      ],
      "op": "INVALID",
      "path": "176"
    },
    "3866": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        2121,
        2139
      ],
      "op": "JUMPDEST",
      "path": "176"
    },
    "3867": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        2121,
        2139
      ],
      "op": "PUSH1",
      "path": "176",
      "value": "0x20"
    },
    "3869": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        2121,
        2139
      ],
      "op": "MUL",
      "path": "176"
    },
    "3870": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        2121,
        2139
      ],
      "op": "PUSH1",
      "path": "176",
      "value": "0x20"
    },
    "3872": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        2121,
        2139
      ],
      "op": "ADD",
      "path": "176"
    },
    "3873": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        2121,
        2139
      ],
      "op": "ADD",
      "path": "176"
    },
    "3874": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        2121,
        2139
      ],
      "op": "MLOAD",
      "path": "176"
    },
    "3875": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        2121,
        2152
      ],
      "op": "PUSH1",
      "path": "176",
      "value": "0x40"
    },
    "3877": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        2121,
        2152
      ],
      "op": "ADD",
      "path": "176"
    },
    "3878": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        2121,
        2152
      ],
      "op": "MLOAD",
      "path": "176"
    },
    "3879": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        2121,
        2161
      ],
      "op": "PUSH2",
      "path": "176",
      "value": "0xFFFF"
    },
    "3882": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        2121,
        2161
      ],
      "op": "AND",
      "path": "176"
    },
    "3883": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        2121,
        2161
      ],
      "op": "LT",
      "path": "176"
    },
    "3884": {
      "branch": 48,
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        2121,
        2161
      ],
      "op": "ISZERO",
      "path": "176"
    },
    "3885": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        2113,
        2197
      ],
      "op": "PUSH2",
      "path": "176",
      "value": "0xF48"
    },
    "3888": {
      "branch": 48,
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        2113,
        2197
      ],
      "op": "JUMPI",
      "path": "176"
    },
    "3889": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        2113,
        2197
      ],
      "op": "PUSH1",
      "path": "176",
      "value": "0x40"
    },
    "3891": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        2113,
        2197
      ],
      "op": "MLOAD",
      "path": "176"
    },
    "3892": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3896": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3898": {
      "op": "SHL"
    },
    "3899": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        2113,
        2197
      ],
      "op": "DUP2",
      "path": "176"
    },
    "3900": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        2113,
        2197
      ],
      "op": "MSTORE",
      "path": "176"
    },
    "3901": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        2113,
        2197
      ],
      "op": "PUSH1",
      "path": "176",
      "value": "0x4"
    },
    "3903": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        2113,
        2197
      ],
      "op": "ADD",
      "path": "176"
    },
    "3904": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        2113,
        2197
      ],
      "op": "PUSH2",
      "path": "176",
      "value": "0x2B6"
    },
    "3907": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        2113,
        2197
      ],
      "op": "SWAP1",
      "path": "176"
    },
    "3908": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        2113,
        2197
      ],
      "op": "PUSH2",
      "path": "176",
      "value": "0x16FB"
    },
    "3911": {
      "fn": "ProxyOracle.setTokenFactors",
      "jump": "i",
      "offset": [
        2113,
        2197
      ],
      "op": "JUMP",
      "path": "176"
    },
    "3912": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        2113,
        2197
      ],
      "op": "JUMPDEST",
      "path": "176"
    },
    "3913": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        2248,
        2253
      ],
      "op": "PUSH2",
      "path": "176",
      "statement": 28,
      "value": "0x4E20"
    },
    "3916": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        2213,
        2226
      ],
      "op": "DUP3",
      "path": "176"
    },
    "3917": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        2227,
        2230
      ],
      "op": "DUP3",
      "path": "176"
    },
    "3918": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        2213,
        2231
      ],
      "op": "DUP2",
      "path": "176"
    },
    "3919": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        2213,
        2231
      ],
      "op": "MLOAD",
      "path": "176"
    },
    "3920": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        2213,
        2231
      ],
      "op": "DUP2",
      "path": "176"
    },
    "3921": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        2213,
        2231
      ],
      "op": "LT",
      "path": "176"
    },
    "3922": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        2213,
        2231
      ],
      "op": "PUSH2",
      "path": "176",
      "value": "0xF57"
    },
    "3925": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        2213,
        2231
      ],
      "op": "JUMPI",
      "path": "176"
    },
    "3926": {
      "dev": "Index out of range",
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        2213,
        2231
      ],
      "op": "INVALID",
      "path": "176"
    },
    "3927": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        2213,
        2231
      ],
      "op": "JUMPDEST",
      "path": "176"
    },
    "3928": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        2213,
        2231
      ],
      "op": "PUSH1",
      "path": "176",
      "value": "0x20"
    },
    "3930": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        2213,
        2231
      ],
      "op": "MUL",
      "path": "176"
    },
    "3931": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        2213,
        2231
      ],
      "op": "PUSH1",
      "path": "176",
      "value": "0x20"
    },
    "3933": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        2213,
        2231
      ],
      "op": "ADD",
      "path": "176"
    },
    "3934": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        2213,
        2231
      ],
      "op": "ADD",
      "path": "176"
    },
    "3935": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        2213,
        2231
      ],
      "op": "MLOAD",
      "path": "176"
    },
    "3936": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        2213,
        2244
      ],
      "op": "PUSH1",
      "path": "176",
      "value": "0x40"
    },
    "3938": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        2213,
        2244
      ],
      "op": "ADD",
      "path": "176"
    },
    "3939": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        2213,
        2244
      ],
      "op": "MLOAD",
      "path": "176"
    },
    "3940": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        2213,
        2253
      ],
      "op": "PUSH2",
      "path": "176",
      "value": "0xFFFF"
    },
    "3943": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        2213,
        2253
      ],
      "op": "AND",
      "path": "176"
    },
    "3944": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        2213,
        2253
      ],
      "op": "GT",
      "path": "176"
    },
    "3945": {
      "branch": 49,
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        2213,
        2253
      ],
      "op": "ISZERO",
      "path": "176"
    },
    "3946": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        2205,
        2288
      ],
      "op": "PUSH2",
      "path": "176",
      "value": "0xF85"
    },
    "3949": {
      "branch": 49,
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        2205,
        2288
      ],
      "op": "JUMPI",
      "path": "176"
    },
    "3950": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        2205,
        2288
      ],
      "op": "PUSH1",
      "path": "176",
      "value": "0x40"
    },
    "3952": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        2205,
        2288
      ],
      "op": "MLOAD",
      "path": "176"
    },
    "3953": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3957": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3959": {
      "op": "SHL"
    },
    "3960": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        2205,
        2288
      ],
      "op": "DUP2",
      "path": "176"
    },
    "3961": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        2205,
        2288
      ],
      "op": "MSTORE",
      "path": "176"
    },
    "3962": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        2205,
        2288
      ],
      "op": "PUSH1",
      "path": "176",
      "value": "0x4"
    },
    "3964": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        2205,
        2288
      ],
      "op": "ADD",
      "path": "176"
    },
    "3965": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        2205,
        2288
      ],
      "op": "PUSH2",
      "path": "176",
      "value": "0x2B6"
    },
    "3968": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        2205,
        2288
      ],
      "op": "SWAP1",
      "path": "176"
    },
    "3969": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        2205,
        2288
      ],
      "op": "PUSH2",
      "path": "176",
      "value": "0x17CD"
    },
    "3972": {
      "fn": "ProxyOracle.setTokenFactors",
      "jump": "i",
      "offset": [
        2205,
        2288
      ],
      "op": "JUMP",
      "path": "176"
    },
    "3973": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        2205,
        2288
      ],
      "op": "JUMPDEST",
      "path": "176"
    },
    "3974": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        2324,
        2337
      ],
      "op": "DUP2",
      "path": "176",
      "statement": 29
    },
    "3975": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        2338,
        2341
      ],
      "op": "DUP2",
      "path": "176"
    },
    "3976": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        2324,
        2342
      ],
      "op": "DUP2",
      "path": "176"
    },
    "3977": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        2324,
        2342
      ],
      "op": "MLOAD",
      "path": "176"
    },
    "3978": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        2324,
        2342
      ],
      "op": "DUP2",
      "path": "176"
    },
    "3979": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        2324,
        2342
      ],
      "op": "LT",
      "path": "176"
    },
    "3980": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        2324,
        2342
      ],
      "op": "PUSH2",
      "path": "176",
      "value": "0xF91"
    },
    "3983": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        2324,
        2342
      ],
      "op": "JUMPI",
      "path": "176"
    },
    "3984": {
      "dev": "Index out of range",
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        2324,
        2342
      ],
      "op": "INVALID",
      "path": "176"
    },
    "3985": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        2324,
        2342
      ],
      "op": "JUMPDEST",
      "path": "176"
    },
    "3986": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        2324,
        2342
      ],
      "op": "PUSH1",
      "path": "176",
      "value": "0x20"
    },
    "3988": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        2324,
        2342
      ],
      "op": "MUL",
      "path": "176"
    },
    "3989": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        2324,
        2342
      ],
      "op": "PUSH1",
      "path": "176",
      "value": "0x20"
    },
    "3991": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        2324,
        2342
      ],
      "op": "ADD",
      "path": "176"
    },
    "3992": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        2324,
        2342
      ],
      "op": "ADD",
      "path": "176"
    },
    "3993": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        2324,
        2342
      ],
      "op": "MLOAD",
      "path": "176"
    },
    "3994": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        2296,
        2308
      ],
      "op": "PUSH1",
      "path": "176",
      "value": "0x42"
    },
    "3996": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        2296,
        2321
      ],
      "op": "PUSH1",
      "path": "176",
      "value": "0x0"
    },
    "3998": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        2309,
        2315
      ],
      "op": "DUP6",
      "path": "176"
    },
    "3999": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        2316,
        2319
      ],
      "op": "DUP5",
      "path": "176"
    },
    "4000": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        2309,
        2320
      ],
      "op": "DUP2",
      "path": "176"
    },
    "4001": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        2309,
        2320
      ],
      "op": "MLOAD",
      "path": "176"
    },
    "4002": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        2309,
        2320
      ],
      "op": "DUP2",
      "path": "176"
    },
    "4003": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        2309,
        2320
      ],
      "op": "LT",
      "path": "176"
    },
    "4004": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        2309,
        2320
      ],
      "op": "PUSH2",
      "path": "176",
      "value": "0xFA9"
    },
    "4007": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        2309,
        2320
      ],
      "op": "JUMPI",
      "path": "176"
    },
    "4008": {
      "dev": "Index out of range",
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        2309,
        2320
      ],
      "op": "INVALID",
      "path": "176"
    },
    "4009": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        2309,
        2320
      ],
      "op": "JUMPDEST",
      "path": "176"
    },
    "4010": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        2309,
        2320
      ],
      "op": "PUSH1",
      "path": "176",
      "value": "0x20"
    },
    "4012": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        2309,
        2320
      ],
      "op": "SWAP1",
      "path": "176"
    },
    "4013": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        2309,
        2320
      ],
      "op": "DUP2",
      "path": "176"
    },
    "4014": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        2309,
        2320
      ],
      "op": "MUL",
      "path": "176"
    },
    "4015": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        2309,
        2320
      ],
      "op": "SWAP2",
      "path": "176"
    },
    "4016": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        2309,
        2320
      ],
      "op": "SWAP1",
      "path": "176"
    },
    "4017": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        2309,
        2320
      ],
      "op": "SWAP2",
      "path": "176"
    },
    "4018": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        2309,
        2320
      ],
      "op": "ADD",
      "path": "176"
    },
    "4019": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        2309,
        2320
      ],
      "op": "DUP2",
      "path": "176"
    },
    "4020": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        2309,
        2320
      ],
      "op": "ADD",
      "path": "176"
    },
    "4021": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        2309,
        2320
      ],
      "op": "MLOAD",
      "path": "176"
    },
    "4022": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4024": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4026": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4028": {
      "op": "SHL"
    },
    "4029": {
      "op": "SUB"
    },
    "4030": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        2296,
        2321
      ],
      "op": "AND",
      "path": "176"
    },
    "4031": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        2296,
        2321
      ],
      "op": "DUP3",
      "path": "176"
    },
    "4032": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        2296,
        2321
      ],
      "op": "MSTORE",
      "path": "176"
    },
    "4033": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        2296,
        2321
      ],
      "op": "DUP2",
      "path": "176"
    },
    "4034": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        2296,
        2321
      ],
      "op": "DUP2",
      "path": "176"
    },
    "4035": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        2296,
        2321
      ],
      "op": "ADD",
      "path": "176"
    },
    "4036": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        2296,
        2321
      ],
      "op": "SWAP3",
      "path": "176"
    },
    "4037": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        2296,
        2321
      ],
      "op": "SWAP1",
      "path": "176"
    },
    "4038": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        2296,
        2321
      ],
      "op": "SWAP3",
      "path": "176"
    },
    "4039": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        2296,
        2321
      ],
      "op": "MSTORE",
      "path": "176"
    },
    "4040": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        2296,
        2321
      ],
      "op": "PUSH1",
      "path": "176",
      "value": "0x40"
    },
    "4042": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        2296,
        2321
      ],
      "op": "SWAP1",
      "path": "176"
    },
    "4043": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        2296,
        2321
      ],
      "op": "DUP2",
      "path": "176"
    },
    "4044": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        2296,
        2321
      ],
      "op": "ADD",
      "path": "176"
    },
    "4045": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4047": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        2296,
        2321
      ],
      "op": "KECCAK256",
      "path": "176"
    },
    "4048": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        2296,
        2342
      ],
      "op": "DUP4",
      "path": "176"
    },
    "4049": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        2296,
        2342
      ],
      "op": "MLOAD",
      "path": "176"
    },
    "4050": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        2296,
        2342
      ],
      "op": "DUP2",
      "path": "176"
    },
    "4051": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        2296,
        2342
      ],
      "op": "SLOAD",
      "path": "176"
    },
    "4052": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        2296,
        2342
      ],
      "op": "SWAP4",
      "path": "176"
    },
    "4053": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        2296,
        2342
      ],
      "op": "DUP6",
      "path": "176"
    },
    "4054": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        2296,
        2342
      ],
      "op": "ADD",
      "path": "176"
    },
    "4055": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        2296,
        2342
      ],
      "op": "MLOAD",
      "path": "176"
    },
    "4056": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        2296,
        2342
      ],
      "op": "SWAP5",
      "path": "176"
    },
    "4057": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        2296,
        2342
      ],
      "op": "SWAP1",
      "path": "176"
    },
    "4058": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        2296,
        2342
      ],
      "op": "SWAP3",
      "path": "176"
    },
    "4059": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        2296,
        2342
      ],
      "op": "ADD",
      "path": "176"
    },
    "4060": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        2296,
        2342
      ],
      "op": "MLOAD",
      "path": "176"
    },
    "4061": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "4064": {
      "op": "NOT"
    },
    "4065": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        2296,
        2342
      ],
      "op": "SWAP1",
      "path": "176"
    },
    "4066": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        2296,
        2342
      ],
      "op": "SWAP4",
      "path": "176"
    },
    "4067": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        2296,
        2342
      ],
      "op": "AND",
      "path": "176"
    },
    "4068": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        2296,
        2342
      ],
      "op": "PUSH2",
      "path": "176",
      "value": "0xFFFF"
    },
    "4071": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        2296,
        2342
      ],
      "op": "SWAP3",
      "path": "176"
    },
    "4072": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        2296,
        2342
      ],
      "op": "DUP4",
      "path": "176"
    },
    "4073": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        2296,
        2342
      ],
      "op": "AND",
      "path": "176"
    },
    "4074": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        2296,
        2342
      ],
      "op": "OR",
      "path": "176"
    },
    "4075": {
      "op": "PUSH4",
      "value": "0xFFFF0000"
    },
    "4080": {
      "op": "NOT"
    },
    "4081": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        2296,
        2342
      ],
      "op": "AND",
      "path": "176"
    },
    "4082": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        2296,
        2342
      ],
      "op": "PUSH3",
      "path": "176",
      "value": "0x10000"
    },
    "4086": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        2296,
        2342
      ],
      "op": "SWAP5",
      "path": "176"
    },
    "4087": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        2296,
        2342
      ],
      "op": "DUP4",
      "path": "176"
    },
    "4088": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        2296,
        2342
      ],
      "op": "AND",
      "path": "176"
    },
    "4089": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        2296,
        2342
      ],
      "op": "SWAP5",
      "path": "176"
    },
    "4090": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        2296,
        2342
      ],
      "op": "SWAP1",
      "path": "176"
    },
    "4091": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        2296,
        2342
      ],
      "op": "SWAP5",
      "path": "176"
    },
    "4092": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        2296,
        2342
      ],
      "op": "MUL",
      "path": "176"
    },
    "4093": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        2296,
        2342
      ],
      "op": "SWAP4",
      "path": "176"
    },
    "4094": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        2296,
        2342
      ],
      "op": "SWAP1",
      "path": "176"
    },
    "4095": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        2296,
        2342
      ],
      "op": "SWAP4",
      "path": "176"
    },
    "4096": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        2296,
        2342
      ],
      "op": "OR",
      "path": "176"
    },
    "4097": {
      "op": "PUSH6",
      "value": "0xFFFF00000000"
    },
    "4104": {
      "op": "NOT"
    },
    "4105": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        2296,
        2342
      ],
      "op": "AND",
      "path": "176"
    },
    "4106": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4108": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4110": {
      "op": "SHL"
    },
    "4111": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        2296,
        2342
      ],
      "op": "SWAP2",
      "path": "176"
    },
    "4112": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        2296,
        2342
      ],
      "op": "SWAP1",
      "path": "176"
    },
    "4113": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        2296,
        2342
      ],
      "op": "SWAP3",
      "path": "176"
    },
    "4114": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        2296,
        2342
      ],
      "op": "AND",
      "path": "176"
    },
    "4115": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        2296,
        2342
      ],
      "op": "MUL",
      "path": "176"
    },
    "4116": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        2296,
        2342
      ],
      "op": "OR",
      "path": "176"
    },
    "4117": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        2296,
        2342
      ],
      "op": "SWAP1",
      "path": "176"
    },
    "4118": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        2296,
        2342
      ],
      "op": "SSTORE",
      "path": "176"
    },
    "4119": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        2370,
        2381
      ],
      "op": "DUP3",
      "path": "176",
      "statement": 30
    },
    "4120": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        2370,
        2381
      ],
      "op": "MLOAD",
      "path": "176"
    },
    "4121": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        2370,
        2381
      ],
      "op": "DUP4",
      "path": "176"
    },
    "4122": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        2370,
        2381
      ],
      "op": "SWAP1",
      "path": "176"
    },
    "4123": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        2377,
        2380
      ],
      "op": "DUP3",
      "path": "176"
    },
    "4124": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        2377,
        2380
      ],
      "op": "SWAP1",
      "path": "176"
    },
    "4125": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        2370,
        2381
      ],
      "op": "DUP2",
      "path": "176"
    },
    "4126": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        2370,
        2381
      ],
      "op": "LT",
      "path": "176"
    },
    "4127": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        2370,
        2381
      ],
      "op": "PUSH2",
      "path": "176",
      "value": "0x1024"
    },
    "4130": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        2370,
        2381
      ],
      "op": "JUMPI",
      "path": "176"
    },
    "4131": {
      "dev": "Index out of range",
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        2370,
        2381
      ],
      "op": "INVALID",
      "path": "176"
    },
    "4132": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        2370,
        2381
      ],
      "op": "JUMPDEST",
      "path": "176"
    },
    "4133": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        2370,
        2381
      ],
      "op": "PUSH1",
      "path": "176",
      "value": "0x20"
    },
    "4135": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        2370,
        2381
      ],
      "op": "MUL",
      "path": "176"
    },
    "4136": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        2370,
        2381
      ],
      "op": "PUSH1",
      "path": "176",
      "value": "0x20"
    },
    "4138": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        2370,
        2381
      ],
      "op": "ADD",
      "path": "176"
    },
    "4139": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        2370,
        2381
      ],
      "op": "ADD",
      "path": "176"
    },
    "4140": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        2370,
        2381
      ],
      "op": "MLOAD",
      "path": "176"
    },
    "4141": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4143": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4145": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4147": {
      "op": "SHL"
    },
    "4148": {
      "op": "SUB"
    },
    "4149": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        2355,
        2402
      ],
      "op": "AND",
      "path": "176"
    },
    "4150": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        2355,
        2402
      ],
      "op": "PUSH32",
      "path": "176",
      "value": "0xC35B295CA62F561378F46DA3A41B523FB1DC01CFB8D4036F8AA13363958ED458"
    },
    "4183": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        2383,
        2396
      ],
      "op": "DUP4",
      "path": "176"
    },
    "4184": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        2397,
        2400
      ],
      "op": "DUP4",
      "path": "176"
    },
    "4185": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        2383,
        2401
      ],
      "op": "DUP2",
      "path": "176"
    },
    "4186": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        2383,
        2401
      ],
      "op": "MLOAD",
      "path": "176"
    },
    "4187": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        2383,
        2401
      ],
      "op": "DUP2",
      "path": "176"
    },
    "4188": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        2383,
        2401
      ],
      "op": "LT",
      "path": "176"
    },
    "4189": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        2383,
        2401
      ],
      "op": "PUSH2",
      "path": "176",
      "value": "0x1062"
    },
    "4192": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        2383,
        2401
      ],
      "op": "JUMPI",
      "path": "176"
    },
    "4193": {
      "dev": "Index out of range",
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        2383,
        2401
      ],
      "op": "INVALID",
      "path": "176"
    },
    "4194": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        2383,
        2401
      ],
      "op": "JUMPDEST",
      "path": "176"
    },
    "4195": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        2383,
        2401
      ],
      "op": "PUSH1",
      "path": "176",
      "value": "0x20"
    },
    "4197": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        2383,
        2401
      ],
      "op": "MUL",
      "path": "176"
    },
    "4198": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        2383,
        2401
      ],
      "op": "PUSH1",
      "path": "176",
      "value": "0x20"
    },
    "4200": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        2383,
        2401
      ],
      "op": "ADD",
      "path": "176"
    },
    "4201": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        2383,
        2401
      ],
      "op": "ADD",
      "path": "176"
    },
    "4202": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        2383,
        2401
      ],
      "op": "MLOAD",
      "path": "176"
    },
    "4203": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        2355,
        2402
      ],
      "op": "PUSH1",
      "path": "176",
      "value": "0x40"
    },
    "4205": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        2355,
        2402
      ],
      "op": "MLOAD",
      "path": "176"
    },
    "4206": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        2355,
        2402
      ],
      "op": "PUSH2",
      "path": "176",
      "value": "0x1077"
    },
    "4209": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        2355,
        2402
      ],
      "op": "SWAP2",
      "path": "176"
    },
    "4210": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        2355,
        2402
      ],
      "op": "SWAP1",
      "path": "176"
    },
    "4211": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        2355,
        2402
      ],
      "op": "PUSH2",
      "path": "176",
      "value": "0x1804"
    },
    "4214": {
      "fn": "ProxyOracle.setTokenFactors",
      "jump": "i",
      "offset": [
        2355,
        2402
      ],
      "op": "JUMP",
      "path": "176"
    },
    "4215": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        2355,
        2402
      ],
      "op": "JUMPDEST",
      "path": "176"
    },
    "4216": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        2355,
        2402
      ],
      "op": "PUSH1",
      "path": "176",
      "value": "0x40"
    },
    "4218": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        2355,
        2402
      ],
      "op": "MLOAD",
      "path": "176"
    },
    "4219": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        2355,
        2402
      ],
      "op": "DUP1",
      "path": "176"
    },
    "4220": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        2355,
        2402
      ],
      "op": "SWAP2",
      "path": "176"
    },
    "4221": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        2355,
        2402
      ],
      "op": "SUB",
      "path": "176"
    },
    "4222": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        2355,
        2402
      ],
      "op": "SWAP1",
      "path": "176"
    },
    "4223": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        2355,
        2402
      ],
      "op": "LOG2",
      "path": "176"
    },
    "4224": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        1875,
        1880
      ],
      "op": "PUSH1",
      "path": "176",
      "statement": 31,
      "value": "0x1"
    },
    "4226": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        1875,
        1880
      ],
      "op": "ADD",
      "path": "176"
    },
    "4227": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        1835,
        2409
      ],
      "op": "PUSH2",
      "path": "176",
      "value": "0xE88"
    },
    "4230": {
      "fn": "ProxyOracle.setTokenFactors",
      "offset": [
        1835,
        2409
      ],
      "op": "JUMP",
      "path": "176"
    },
    "4231": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        981,
        1144
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "4232": {
      "offset": [
        566,
        574
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "4234": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        566,
        574
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "4235": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        566,
        574
      ],
      "op": "PUSH3",
      "path": "22",
      "value": "0x10000"
    },
    "4239": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        566,
        574
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "4240": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        566,
        574
      ],
      "op": "DIV",
      "path": "22"
    },
    "4241": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4243": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4245": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4247": {
      "op": "SHL"
    },
    "4248": {
      "op": "SUB"
    },
    "4249": {
      "offset": [
        566,
        574
      ],
      "op": "AND",
      "path": "22"
    },
    "4250": {
      "offset": [
        552,
        562
      ],
      "op": "CALLER",
      "path": "22"
    },
    "4251": {
      "offset": [
        552,
        574
      ],
      "op": "EQ",
      "path": "22"
    },
    "4252": {
      "offset": [
        544,
        595
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x10B7"
    },
    "4255": {
      "offset": [
        544,
        595
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "4256": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        544,
        595
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "4258": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        544,
        595
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "4259": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4263": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4265": {
      "op": "SHL"
    },
    "4266": {
      "offset": [
        544,
        595
      ],
      "op": "DUP2",
      "path": "22"
    },
    "4267": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        544,
        595
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "4268": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        544,
        595
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "4270": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        544,
        595
      ],
      "op": "ADD",
      "path": "22"
    },
    "4271": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        544,
        595
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2B6"
    },
    "4274": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        544,
        595
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "4275": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        544,
        595
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x15F8"
    },
    "4278": {
      "fn": "Governable.setPendingGovernor",
      "jump": "i",
      "offset": [
        544,
        595
      ],
      "op": "JUMP",
      "path": "22"
    },
    "4279": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        544,
        595
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "4280": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        1058,
        1073
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 32,
      "value": "0x1"
    },
    "4282": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        1058,
        1092
      ],
      "op": "DUP1",
      "path": "22"
    },
    "4283": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        1058,
        1092
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "4284": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4286": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4288": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4290": {
      "op": "SHL"
    },
    "4291": {
      "op": "SUB"
    },
    "4292": {
      "op": "NOT"
    },
    "4293": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        1058,
        1092
      ],
      "op": "AND",
      "path": "22"
    },
    "4294": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4296": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4298": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4300": {
      "op": "SHL"
    },
    "4301": {
      "op": "SUB"
    },
    "4302": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        1058,
        1092
      ],
      "op": "DUP4",
      "path": "22"
    },
    "4303": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        1058,
        1092
      ],
      "op": "AND",
      "path": "22"
    },
    "4304": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        1058,
        1092
      ],
      "op": "OR",
      "path": "22"
    },
    "4305": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        1058,
        1092
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "4306": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        1058,
        1092
      ],
      "op": "SSTORE",
      "path": "22"
    },
    "4307": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        1103,
        1139
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 33,
      "value": "0x40"
    },
    "4309": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        1103,
        1139
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "4310": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        1103,
        1139
      ],
      "op": "PUSH32",
      "path": "22",
      "value": "0x964DEA888B00B2AB53F13DFE7CA334B46E99338C222AE232D98547A1DA019F60"
    },
    "4343": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        1103,
        1139
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "4344": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        1103,
        1139
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1102"
    },
    "4347": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        1103,
        1139
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "4348": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        1058,
        1092
      ],
      "op": "DUP4",
      "path": "22"
    },
    "4349": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        1058,
        1092
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "4350": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        1103,
        1139
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1508"
    },
    "4353": {
      "fn": "Governable.setPendingGovernor",
      "jump": "i",
      "offset": [
        1103,
        1139
      ],
      "op": "JUMP",
      "path": "22"
    },
    "4354": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        1103,
        1139
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "4355": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        1103,
        1139
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "4357": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        1103,
        1139
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "4358": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        1103,
        1139
      ],
      "op": "DUP1",
      "path": "22"
    },
    "4359": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        1103,
        1139
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "4360": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        1103,
        1139
      ],
      "op": "SUB",
      "path": "22"
    },
    "4361": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        1103,
        1139
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "4362": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        1103,
        1139
      ],
      "op": "LOG1",
      "path": "22"
    },
    "4363": {
      "fn": "Governable.setPendingGovernor",
      "offset": [
        981,
        1144
      ],
      "op": "POP",
      "path": "22"
    },
    "4364": {
      "fn": "Governable.setPendingGovernor",
      "jump": "o",
      "offset": [
        981,
        1144
      ],
      "op": "JUMP",
      "path": "22"
    },
    "4365": {
      "fn": "Address.isContract",
      "offset": [
        726,
        1139
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4366": {
      "fn": "Address.isContract",
      "offset": [
        1086,
        1106
      ],
      "op": "EXTCODESIZE",
      "path": "16"
    },
    "4367": {
      "fn": "Address.isContract",
      "offset": [
        1124,
        1132
      ],
      "op": "ISZERO",
      "path": "16",
      "statement": 34
    },
    "4368": {
      "fn": "Address.isContract",
      "offset": [
        1124,
        1132
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "4369": {
      "fn": "Address.isContract",
      "offset": [
        1124,
        1132
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4370": {
      "fn": "Address.isContract",
      "jump": "o",
      "offset": [
        726,
        1139
      ],
      "op": "JUMP",
      "path": "16"
    },
    "4371": {
      "fn": "SafeMath.mul",
      "offset": [
        3538,
        3753
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4372": {
      "fn": "SafeMath.mul",
      "offset": [
        3596,
        3603
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "4374": {
      "branch": 51,
      "fn": "SafeMath.mul",
      "offset": [
        3619,
        3625
      ],
      "op": "DUP3",
      "path": "6"
    },
    "4375": {
      "fn": "SafeMath.mul",
      "offset": [
        3615,
        3635
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1122"
    },
    "4378": {
      "branch": 51,
      "fn": "SafeMath.mul",
      "offset": [
        3615,
        3635
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "4379": {
      "op": "POP"
    },
    "4380": {
      "fn": "SafeMath.mul",
      "offset": [
        3634,
        3635
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 35,
      "value": "0x0"
    },
    "4382": {
      "fn": "SafeMath.mul",
      "offset": [
        3627,
        3635
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x472"
    },
    "4385": {
      "fn": "SafeMath.mul",
      "offset": [
        3627,
        3635
      ],
      "op": "JUMP",
      "path": "6"
    },
    "4386": {
      "fn": "SafeMath.mul",
      "offset": [
        3615,
        3635
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4387": {
      "fn": "SafeMath.mul",
      "offset": [
        3657,
        3662
      ],
      "op": "DUP3",
      "path": "6"
    },
    "4388": {
      "fn": "SafeMath.mul",
      "offset": [
        3657,
        3662
      ],
      "op": "DUP3",
      "path": "6"
    },
    "4389": {
      "fn": "SafeMath.mul",
      "offset": [
        3657,
        3662
      ],
      "op": "MUL",
      "path": "6"
    },
    "4390": {
      "fn": "SafeMath.mul",
      "offset": [
        3661,
        3662
      ],
      "op": "DUP3",
      "path": "6"
    },
    "4391": {
      "fn": "SafeMath.mul",
      "offset": [
        3657,
        3658
      ],
      "op": "DUP5",
      "path": "6"
    },
    "4392": {
      "fn": "SafeMath.mul",
      "offset": [
        3657,
        3662
      ],
      "op": "DUP3",
      "path": "6"
    },
    "4393": {
      "fn": "SafeMath.mul",
      "offset": [
        3657,
        3658
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4394": {
      "fn": "SafeMath.mul",
      "offset": [
        3680,
        3685
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 36,
      "value": "0x112F"
    },
    "4397": {
      "fn": "SafeMath.mul",
      "offset": [
        3680,
        3685
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "4398": {
      "dev": "Division by zero",
      "fn": "SafeMath.mul",
      "offset": [
        3680,
        3685
      ],
      "op": "INVALID",
      "path": "6"
    },
    "4399": {
      "fn": "SafeMath.mul",
      "offset": [
        3680,
        3685
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4400": {
      "fn": "SafeMath.mul",
      "offset": [
        3680,
        3685
      ],
      "op": "DIV",
      "path": "6"
    },
    "4401": {
      "branch": 52,
      "fn": "SafeMath.mul",
      "offset": [
        3680,
        3690
      ],
      "op": "EQ",
      "path": "6"
    },
    "4402": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x114D"
    },
    "4405": {
      "branch": 52,
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "4406": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "4408": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "4409": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4413": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4415": {
      "op": "SHL"
    },
    "4416": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4417": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4418": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "4420": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "ADD",
      "path": "6"
    },
    "4421": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2B6"
    },
    "4424": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4425": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1674"
    },
    "4428": {
      "fn": "SafeMath.mul",
      "jump": "i",
      "offset": [
        3672,
        3728
      ],
      "op": "JUMP",
      "path": "6"
    },
    "4429": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4430": {
      "fn": "SafeMath.mul",
      "offset": [
        3745,
        3746
      ],
      "op": "SWAP4",
      "path": "6",
      "statement": 37
    },
    "4431": {
      "fn": "SafeMath.mul",
      "offset": [
        3538,
        3753
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "4432": {
      "op": "POP"
    },
    "4433": {
      "op": "POP"
    },
    "4434": {
      "op": "POP"
    },
    "4435": {
      "fn": "SafeMath.mul",
      "jump": "o",
      "offset": [
        3538,
        3753
      ],
      "op": "JUMP",
      "path": "6"
    },
    "4436": {
      "fn": "SafeMath.div",
      "offset": [
        4217,
        4367
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4437": {
      "fn": "SafeMath.div",
      "offset": [
        4275,
        4282
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "4439": {
      "fn": "SafeMath.div",
      "offset": [
        4306,
        4307
      ],
      "op": "DUP1",
      "path": "6",
      "statement": 38
    },
    "4440": {
      "fn": "SafeMath.div",
      "offset": [
        4302,
        4303
      ],
      "op": "DUP3",
      "path": "6"
    },
    "4441": {
      "branch": 53,
      "fn": "SafeMath.div",
      "offset": [
        4302,
        4307
      ],
      "op": "GT",
      "path": "6"
    },
    "4442": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1175"
    },
    "4445": {
      "branch": 53,
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "4446": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "4448": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "4449": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4453": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4455": {
      "op": "SHL"
    },
    "4456": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4457": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4458": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "4460": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "ADD",
      "path": "6"
    },
    "4461": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2B6"
    },
    "4464": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4465": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x15C1"
    },
    "4468": {
      "fn": "SafeMath.div",
      "jump": "i",
      "offset": [
        4294,
        4338
      ],
      "op": "JUMP",
      "path": "6"
    },
    "4469": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4470": {
      "fn": "SafeMath.div",
      "offset": [
        4359,
        4360
      ],
      "op": "DUP2",
      "path": "6",
      "statement": 39
    },
    "4471": {
      "fn": "SafeMath.div",
      "offset": [
        4355,
        4356
      ],
      "op": "DUP4",
      "path": "6"
    },
    "4472": {
      "fn": "SafeMath.div",
      "offset": [
        4355,
        4360
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4473": {
      "fn": "SafeMath.div",
      "offset": [
        4355,
        4360
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x117E"
    },
    "4476": {
      "fn": "SafeMath.div",
      "offset": [
        4355,
        4360
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "4477": {
      "dev": "Division by zero",
      "fn": "SafeMath.div",
      "offset": [
        4355,
        4360
      ],
      "op": "INVALID",
      "path": "6"
    },
    "4478": {
      "fn": "SafeMath.div",
      "offset": [
        4355,
        4360
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4479": {
      "fn": "SafeMath.div",
      "offset": [
        4355,
        4360
      ],
      "op": "DIV",
      "path": "6"
    },
    "4480": {
      "fn": "SafeMath.div",
      "offset": [
        4355,
        4360
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "4481": {
      "fn": "SafeMath.div",
      "offset": [
        4217,
        4367
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "4482": {
      "op": "POP"
    },
    "4483": {
      "op": "POP"
    },
    "4484": {
      "op": "POP"
    },
    "4485": {
      "fn": "SafeMath.div",
      "jump": "o",
      "offset": [
        4217,
        4367
      ],
      "op": "JUMP",
      "path": "6"
    },
    "4486": {
      "op": "JUMPDEST"
    },
    "4487": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4489": {
      "op": "DUP1"
    },
    "4490": {
      "op": "MLOAD"
    },
    "4491": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4493": {
      "op": "DUP2"
    },
    "4494": {
      "op": "ADD"
    },
    "4495": {
      "op": "DUP3"
    },
    "4496": {
      "op": "MSTORE"
    },
    "4497": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4499": {
      "op": "DUP1"
    },
    "4500": {
      "op": "DUP3"
    },
    "4501": {
      "op": "MSTORE"
    },
    "4502": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4504": {
      "op": "DUP3"
    },
    "4505": {
      "op": "ADD"
    },
    "4506": {
      "op": "DUP2"
    },
    "4507": {
      "op": "SWAP1"
    },
    "4508": {
      "op": "MSTORE"
    },
    "4509": {
      "op": "SWAP2"
    },
    "4510": {
      "op": "DUP2"
    },
    "4511": {
      "op": "ADD"
    },
    "4512": {
      "op": "SWAP2"
    },
    "4513": {
      "op": "SWAP1"
    },
    "4514": {
      "op": "SWAP2"
    },
    "4515": {
      "op": "MSTORE"
    },
    "4516": {
      "op": "SWAP1"
    },
    "4517": {
      "op": "JUMP"
    },
    "4518": {
      "op": "JUMPDEST"
    },
    "4519": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4521": {
      "op": "DUP3"
    },
    "4522": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4524": {
      "op": "DUP4"
    },
    "4525": {
      "op": "ADD"
    },
    "4526": {
      "op": "SLT"
    },
    "4527": {
      "op": "PUSH2",
      "value": "0x11B6"
    },
    "4530": {
      "op": "JUMPI"
    },
    "4531": {
      "op": "DUP1"
    },
    "4532": {
      "op": "DUP2"
    },
    "4533": {
      "op": "REVERT"
    },
    "4534": {
      "op": "JUMPDEST"
    },
    "4535": {
      "op": "DUP2"
    },
    "4536": {
      "op": "CALLDATALOAD"
    },
    "4537": {
      "op": "PUSH2",
      "value": "0x11C9"
    },
    "4540": {
      "op": "PUSH2",
      "value": "0x11C4"
    },
    "4543": {
      "op": "DUP3"
    },
    "4544": {
      "op": "PUSH2",
      "value": "0x187C"
    },
    "4547": {
      "op": "JUMP"
    },
    "4548": {
      "op": "JUMPDEST"
    },
    "4549": {
      "op": "PUSH2",
      "value": "0x1855"
    },
    "4552": {
      "op": "JUMP"
    },
    "4553": {
      "op": "JUMPDEST"
    },
    "4554": {
      "op": "DUP2"
    },
    "4555": {
      "op": "DUP2"
    },
    "4556": {
      "op": "MSTORE"
    },
    "4557": {
      "op": "SWAP2"
    },
    "4558": {
      "op": "POP"
    },
    "4559": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4561": {
      "op": "DUP1"
    },
    "4562": {
      "op": "DUP4"
    },
    "4563": {
      "op": "ADD"
    },
    "4564": {
      "op": "SWAP1"
    },
    "4565": {
      "op": "DUP5"
    },
    "4566": {
      "op": "DUP2"
    },
    "4567": {
      "op": "ADD"
    },
    "4568": {
      "op": "DUP2"
    },
    "4569": {
      "op": "DUP5"
    },
    "4570": {
      "op": "MUL"
    },
    "4571": {
      "op": "DUP7"
    },
    "4572": {
      "op": "ADD"
    },
    "4573": {
      "op": "DUP3"
    },
    "4574": {
      "op": "ADD"
    },
    "4575": {
      "op": "DUP8"
    },
    "4576": {
      "op": "LT"
    },
    "4577": {
      "op": "ISZERO"
    },
    "4578": {
      "op": "PUSH2",
      "value": "0x11EA"
    },
    "4581": {
      "op": "JUMPI"
    },
    "4582": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4584": {
      "op": "DUP1"
    },
    "4585": {
      "op": "REVERT"
    },
    "4586": {
      "op": "JUMPDEST"
    },
    "4587": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4589": {
      "op": "JUMPDEST"
    },
    "4590": {
      "op": "DUP5"
    },
    "4591": {
      "op": "DUP2"
    },
    "4592": {
      "op": "LT"
    },
    "4593": {
      "op": "ISZERO"
    },
    "4594": {
      "op": "PUSH2",
      "value": "0x1212"
    },
    "4597": {
      "op": "JUMPI"
    },
    "4598": {
      "op": "DUP2"
    },
    "4599": {
      "op": "CALLDATALOAD"
    },
    "4600": {
      "op": "PUSH2",
      "value": "0x1200"
    },
    "4603": {
      "op": "DUP2"
    },
    "4604": {
      "op": "PUSH2",
      "value": "0x189C"
    },
    "4607": {
      "op": "JUMP"
    },
    "4608": {
      "op": "JUMPDEST"
    },
    "4609": {
      "op": "DUP5"
    },
    "4610": {
      "op": "MSTORE"
    },
    "4611": {
      "op": "SWAP3"
    },
    "4612": {
      "op": "DUP3"
    },
    "4613": {
      "op": "ADD"
    },
    "4614": {
      "op": "SWAP3"
    },
    "4615": {
      "op": "SWAP1"
    },
    "4616": {
      "op": "DUP3"
    },
    "4617": {
      "op": "ADD"
    },
    "4618": {
      "op": "SWAP1"
    },
    "4619": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4621": {
      "op": "ADD"
    },
    "4622": {
      "op": "PUSH2",
      "value": "0x11ED"
    },
    "4625": {
      "op": "JUMP"
    },
    "4626": {
      "op": "JUMPDEST"
    },
    "4627": {
      "op": "POP"
    },
    "4628": {
      "op": "POP"
    },
    "4629": {
      "op": "POP"
    },
    "4630": {
      "op": "POP"
    },
    "4631": {
      "op": "POP"
    },
    "4632": {
      "op": "SWAP3"
    },
    "4633": {
      "op": "SWAP2"
    },
    "4634": {
      "op": "POP"
    },
    "4635": {
      "op": "POP"
    },
    "4636": {
      "op": "JUMP"
    },
    "4637": {
      "op": "JUMPDEST"
    },
    "4638": {
      "op": "DUP1"
    },
    "4639": {
      "op": "CALLDATALOAD"
    },
    "4640": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "4643": {
      "op": "DUP2"
    },
    "4644": {
      "op": "AND"
    },
    "4645": {
      "op": "DUP2"
    },
    "4646": {
      "op": "EQ"
    },
    "4647": {
      "op": "PUSH2",
      "value": "0x472"
    },
    "4650": {
      "op": "JUMPI"
    },
    "4651": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4653": {
      "op": "DUP1"
    },
    "4654": {
      "op": "REVERT"
    },
    "4655": {
      "op": "JUMPDEST"
    },
    "4656": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4658": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4660": {
      "op": "DUP3"
    },
    "4661": {
      "op": "DUP5"
    },
    "4662": {
      "op": "SUB"
    },
    "4663": {
      "op": "SLT"
    },
    "4664": {
      "op": "ISZERO"
    },
    "4665": {
      "op": "PUSH2",
      "value": "0x1240"
    },
    "4668": {
      "op": "JUMPI"
    },
    "4669": {
      "op": "DUP1"
    },
    "4670": {
      "op": "DUP2"
    },
    "4671": {
      "op": "REVERT"
    },
    "4672": {
      "op": "JUMPDEST"
    },
    "4673": {
      "op": "DUP2"
    },
    "4674": {
      "op": "CALLDATALOAD"
    },
    "4675": {
      "op": "PUSH2",
      "value": "0x114D"
    },
    "4678": {
      "op": "DUP2"
    },
    "4679": {
      "op": "PUSH2",
      "value": "0x189C"
    },
    "4682": {
      "op": "JUMP"
    },
    "4683": {
      "op": "JUMPDEST"
    },
    "4684": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4686": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4688": {
      "op": "DUP3"
    },
    "4689": {
      "op": "DUP5"
    },
    "4690": {
      "op": "SUB"
    },
    "4691": {
      "op": "SLT"
    },
    "4692": {
      "op": "ISZERO"
    },
    "4693": {
      "op": "PUSH2",
      "value": "0x125C"
    },
    "4696": {
      "op": "JUMPI"
    },
    "4697": {
      "op": "DUP1"
    },
    "4698": {
      "op": "DUP2"
    },
    "4699": {
      "op": "REVERT"
    },
    "4700": {
      "op": "JUMPDEST"
    },
    "4701": {
      "op": "DUP2"
    },
    "4702": {
      "op": "MLOAD"
    },
    "4703": {
      "op": "PUSH2",
      "value": "0x114D"
    },
    "4706": {
      "op": "DUP2"
    },
    "4707": {
      "op": "PUSH2",
      "value": "0x189C"
    },
    "4710": {
      "op": "JUMP"
    },
    "4711": {
      "op": "JUMPDEST"
    },
    "4712": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4714": {
      "op": "DUP1"
    },
    "4715": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4717": {
      "op": "DUP1"
    },
    "4718": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4720": {
      "op": "DUP6"
    },
    "4721": {
      "op": "DUP8"
    },
    "4722": {
      "op": "SUB"
    },
    "4723": {
      "op": "SLT"
    },
    "4724": {
      "op": "ISZERO"
    },
    "4725": {
      "op": "PUSH2",
      "value": "0x127C"
    },
    "4728": {
      "op": "JUMPI"
    },
    "4729": {
      "op": "DUP3"
    },
    "4730": {
      "op": "DUP4"
    },
    "4731": {
      "op": "REVERT"
    },
    "4732": {
      "op": "JUMPDEST"
    },
    "4733": {
      "op": "DUP5"
    },
    "4734": {
      "op": "CALLDATALOAD"
    },
    "4735": {
      "op": "PUSH2",
      "value": "0x1287"
    },
    "4738": {
      "op": "DUP2"
    },
    "4739": {
      "op": "PUSH2",
      "value": "0x189C"
    },
    "4742": {
      "op": "JUMP"
    },
    "4743": {
      "op": "JUMPDEST"
    },
    "4744": {
      "op": "SWAP4"
    },
    "4745": {
      "op": "POP"
    },
    "4746": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4748": {
      "op": "DUP6"
    },
    "4749": {
      "op": "ADD"
    },
    "4750": {
      "op": "CALLDATALOAD"
    },
    "4751": {
      "op": "PUSH2",
      "value": "0x1297"
    },
    "4754": {
      "op": "DUP2"
    },
    "4755": {
      "op": "PUSH2",
      "value": "0x189C"
    },
    "4758": {
      "op": "JUMP"
    },
    "4759": {
      "op": "JUMPDEST"
    },
    "4760": {
      "op": "SWAP4"
    },
    "4761": {
      "op": "SWAP7"
    },
    "4762": {
      "op": "SWAP4"
    },
    "4763": {
      "op": "SWAP6"
    },
    "4764": {
      "op": "POP"
    },
    "4765": {
      "op": "POP"
    },
    "4766": {
      "op": "POP"
    },
    "4767": {
      "op": "POP"
    },
    "4768": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4770": {
      "op": "DUP3"
    },
    "4771": {
      "op": "ADD"
    },
    "4772": {
      "op": "CALLDATALOAD"
    },
    "4773": {
      "op": "SWAP2"
    },
    "4774": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4776": {
      "op": "ADD"
    },
    "4777": {
      "op": "CALLDATALOAD"
    },
    "4778": {
      "op": "SWAP1"
    },
    "4779": {
      "op": "JUMP"
    },
    "4780": {
      "op": "JUMPDEST"
    },
    "4781": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4783": {
      "op": "DUP1"
    },
    "4784": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4786": {
      "op": "DUP4"
    },
    "4787": {
      "op": "DUP6"
    },
    "4788": {
      "op": "SUB"
    },
    "4789": {
      "op": "SLT"
    },
    "4790": {
      "op": "ISZERO"
    },
    "4791": {
      "op": "PUSH2",
      "value": "0x12BE"
    },
    "4794": {
      "op": "JUMPI"
    },
    "4795": {
      "op": "DUP2"
    },
    "4796": {
      "op": "DUP3"
    },
    "4797": {
      "op": "REVERT"
    },
    "4798": {
      "op": "JUMPDEST"
    },
    "4799": {
      "op": "DUP3"
    },
    "4800": {
      "op": "CALLDATALOAD"
    },
    "4801": {
      "op": "PUSH2",
      "value": "0x12C9"
    },
    "4804": {
      "op": "DUP2"
    },
    "4805": {
      "op": "PUSH2",
      "value": "0x189C"
    },
    "4808": {
      "op": "JUMP"
    },
    "4809": {
      "op": "JUMPDEST"
    },
    "4810": {
      "op": "SWAP5"
    },
    "4811": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4813": {
      "op": "SWAP4"
    },
    "4814": {
      "op": "SWAP1"
    },
    "4815": {
      "op": "SWAP4"
    },
    "4816": {
      "op": "ADD"
    },
    "4817": {
      "op": "CALLDATALOAD"
    },
    "4818": {
      "op": "SWAP4"
    },
    "4819": {
      "op": "POP"
    },
    "4820": {
      "op": "POP"
    },
    "4821": {
      "op": "POP"
    },
    "4822": {
      "op": "JUMP"
    },
    "4823": {
      "op": "JUMPDEST"
    },
    "4824": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4826": {
      "op": "DUP1"
    },
    "4827": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4829": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4831": {
      "op": "DUP5"
    },
    "4832": {
      "op": "DUP7"
    },
    "4833": {
      "op": "SUB"
    },
    "4834": {
      "op": "SLT"
    },
    "4835": {
      "op": "ISZERO"
    },
    "4836": {
      "op": "PUSH2",
      "value": "0x12EB"
    },
    "4839": {
      "op": "JUMPI"
    },
    "4840": {
      "op": "DUP3"
    },
    "4841": {
      "op": "DUP4"
    },
    "4842": {
      "op": "REVERT"
    },
    "4843": {
      "op": "JUMPDEST"
    },
    "4844": {
      "op": "DUP4"
    },
    "4845": {
      "op": "CALLDATALOAD"
    },
    "4846": {
      "op": "PUSH2",
      "value": "0x12F6"
    },
    "4849": {
      "op": "DUP2"
    },
    "4850": {
      "op": "PUSH2",
      "value": "0x189C"
    },
    "4853": {
      "op": "JUMP"
    },
    "4854": {
      "op": "JUMPDEST"
    },
    "4855": {
      "op": "SWAP3"
    },
    "4856": {
      "op": "POP"
    },
    "4857": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4859": {
      "op": "DUP5"
    },
    "4860": {
      "op": "ADD"
    },
    "4861": {
      "op": "CALLDATALOAD"
    },
    "4862": {
      "op": "SWAP2"
    },
    "4863": {
      "op": "POP"
    },
    "4864": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4866": {
      "op": "DUP5"
    },
    "4867": {
      "op": "ADD"
    },
    "4868": {
      "op": "CALLDATALOAD"
    },
    "4869": {
      "op": "PUSH2",
      "value": "0x130D"
    },
    "4872": {
      "op": "DUP2"
    },
    "4873": {
      "op": "PUSH2",
      "value": "0x189C"
    },
    "4876": {
      "op": "JUMP"
    },
    "4877": {
      "op": "JUMPDEST"
    },
    "4878": {
      "op": "DUP1"
    },
    "4879": {
      "op": "SWAP2"
    },
    "4880": {
      "op": "POP"
    },
    "4881": {
      "op": "POP"
    },
    "4882": {
      "op": "SWAP3"
    },
    "4883": {
      "op": "POP"
    },
    "4884": {
      "op": "SWAP3"
    },
    "4885": {
      "op": "POP"
    },
    "4886": {
      "op": "SWAP3"
    },
    "4887": {
      "op": "JUMP"
    },
    "4888": {
      "op": "JUMPDEST"
    },
    "4889": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4891": {
      "op": "DUP1"
    },
    "4892": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4894": {
      "op": "DUP1"
    },
    "4895": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4897": {
      "op": "DUP6"
    },
    "4898": {
      "op": "DUP8"
    },
    "4899": {
      "op": "SUB"
    },
    "4900": {
      "op": "SLT"
    },
    "4901": {
      "op": "ISZERO"
    },
    "4902": {
      "op": "PUSH2",
      "value": "0x132D"
    },
    "4905": {
      "op": "JUMPI"
    },
    "4906": {
      "op": "DUP4"
    },
    "4907": {
      "op": "DUP5"
    },
    "4908": {
      "op": "REVERT"
    },
    "4909": {
      "op": "JUMPDEST"
    },
    "4910": {
      "op": "DUP5"
    },
    "4911": {
      "op": "CALLDATALOAD"
    },
    "4912": {
      "op": "PUSH2",
      "value": "0x1338"
    },
    "4915": {
      "op": "DUP2"
    },
    "4916": {
      "op": "PUSH2",
      "value": "0x189C"
    },
    "4919": {
      "op": "JUMP"
    },
    "4920": {
      "op": "JUMPDEST"
    },
    "4921": {
      "op": "SWAP4"
    },
    "4922": {
      "op": "POP"
    },
    "4923": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4925": {
      "op": "DUP6"
    },
    "4926": {
      "op": "ADD"
    },
    "4927": {
      "op": "CALLDATALOAD"
    },
    "4928": {
      "op": "SWAP3"
    },
    "4929": {
      "op": "POP"
    },
    "4930": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4932": {
      "op": "DUP6"
    },
    "4933": {
      "op": "ADD"
    },
    "4934": {
      "op": "CALLDATALOAD"
    },
    "4935": {
      "op": "SWAP2"
    },
    "4936": {
      "op": "POP"
    },
    "4937": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4939": {
      "op": "DUP6"
    },
    "4940": {
      "op": "ADD"
    },
    "4941": {
      "op": "CALLDATALOAD"
    },
    "4942": {
      "op": "PUSH2",
      "value": "0x1356"
    },
    "4945": {
      "op": "DUP2"
    },
    "4946": {
      "op": "PUSH2",
      "value": "0x189C"
    },
    "4949": {
      "op": "JUMP"
    },
    "4950": {
      "op": "JUMPDEST"
    },
    "4951": {
      "op": "SWAP4"
    },
    "4952": {
      "op": "SWAP7"
    },
    "4953": {
      "op": "SWAP3"
    },
    "4954": {
      "op": "SWAP6"
    },
    "4955": {
      "op": "POP"
    },
    "4956": {
      "op": "SWAP1"
    },
    "4957": {
      "op": "SWAP4"
    },
    "4958": {
      "op": "POP"
    },
    "4959": {
      "op": "POP"
    },
    "4960": {
      "op": "JUMP"
    },
    "4961": {
      "op": "JUMPDEST"
    },
    "4962": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4964": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4966": {
      "op": "DUP3"
    },
    "4967": {
      "op": "DUP5"
    },
    "4968": {
      "op": "SUB"
    },
    "4969": {
      "op": "SLT"
    },
    "4970": {
      "op": "ISZERO"
    },
    "4971": {
      "op": "PUSH2",
      "value": "0x1372"
    },
    "4974": {
      "op": "JUMPI"
    },
    "4975": {
      "op": "DUP1"
    },
    "4976": {
      "op": "DUP2"
    },
    "4977": {
      "op": "REVERT"
    },
    "4978": {
      "op": "JUMPDEST"
    },
    "4979": {
      "op": "DUP2"
    },
    "4980": {
      "op": "CALLDATALOAD"
    },
    "4981": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "4990": {
      "op": "DUP2"
    },
    "4991": {
      "op": "GT"
    },
    "4992": {
      "op": "ISZERO"
    },
    "4993": {
      "op": "PUSH2",
      "value": "0x1388"
    },
    "4996": {
      "op": "JUMPI"
    },
    "4997": {
      "op": "DUP2"
    },
    "4998": {
      "op": "DUP3"
    },
    "4999": {
      "op": "REVERT"
    },
    "5000": {
      "op": "JUMPDEST"
    },
    "5001": {
      "op": "PUSH2",
      "value": "0x1394"
    },
    "5004": {
      "op": "DUP5"
    },
    "5005": {
      "op": "DUP3"
    },
    "5006": {
      "op": "DUP6"
    },
    "5007": {
      "op": "ADD"
    },
    "5008": {
      "op": "PUSH2",
      "value": "0x11A6"
    },
    "5011": {
      "op": "JUMP"
    },
    "5012": {
      "op": "JUMPDEST"
    },
    "5013": {
      "op": "SWAP5"
    },
    "5014": {
      "op": "SWAP4"
    },
    "5015": {
      "op": "POP"
    },
    "5016": {
      "op": "POP"
    },
    "5017": {
      "op": "POP"
    },
    "5018": {
      "op": "POP"
    },
    "5019": {
      "op": "JUMP"
    },
    "5020": {
      "op": "JUMPDEST"
    },
    "5021": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5023": {
      "op": "DUP1"
    },
    "5024": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5026": {
      "op": "DUP1"
    },
    "5027": {
      "op": "DUP5"
    },
    "5028": {
      "op": "DUP7"
    },
    "5029": {
      "op": "SUB"
    },
    "5030": {
      "op": "SLT"
    },
    "5031": {
      "op": "ISZERO"
    },
    "5032": {
      "op": "PUSH2",
      "value": "0x13AF"
    },
    "5035": {
      "op": "JUMPI"
    },
    "5036": {
      "op": "DUP3"
    },
    "5037": {
      "op": "DUP4"
    },
    "5038": {
      "op": "REVERT"
    },
    "5039": {
      "op": "JUMPDEST"
    },
    "5040": {
      "op": "DUP4"
    },
    "5041": {
      "op": "CALLDATALOAD"
    },
    "5042": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "5051": {
      "op": "DUP1"
    },
    "5052": {
      "op": "DUP3"
    },
    "5053": {
      "op": "GT"
    },
    "5054": {
      "op": "ISZERO"
    },
    "5055": {
      "op": "PUSH2",
      "value": "0x13C6"
    },
    "5058": {
      "op": "JUMPI"
    },
    "5059": {
      "op": "DUP5"
    },
    "5060": {
      "op": "DUP6"
    },
    "5061": {
      "op": "REVERT"
    },
    "5062": {
      "op": "JUMPDEST"
    },
    "5063": {
      "op": "PUSH2",
      "value": "0x13D2"
    },
    "5066": {
      "op": "DUP8"
    },
    "5067": {
      "op": "DUP4"
    },
    "5068": {
      "op": "DUP9"
    },
    "5069": {
      "op": "ADD"
    },
    "5070": {
      "op": "PUSH2",
      "value": "0x11A6"
    },
    "5073": {
      "op": "JUMP"
    },
    "5074": {
      "op": "JUMPDEST"
    },
    "5075": {
      "op": "SWAP5"
    },
    "5076": {
      "op": "POP"
    },
    "5077": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5079": {
      "op": "SWAP2"
    },
    "5080": {
      "op": "POP"
    },
    "5081": {
      "op": "DUP2"
    },
    "5082": {
      "op": "DUP7"
    },
    "5083": {
      "op": "ADD"
    },
    "5084": {
      "op": "CALLDATALOAD"
    },
    "5085": {
      "op": "DUP2"
    },
    "5086": {
      "op": "DUP2"
    },
    "5087": {
      "op": "GT"
    },
    "5088": {
      "op": "ISZERO"
    },
    "5089": {
      "op": "PUSH2",
      "value": "0x13E8"
    },
    "5092": {
      "op": "JUMPI"
    },
    "5093": {
      "op": "DUP5"
    },
    "5094": {
      "op": "DUP6"
    },
    "5095": {
      "op": "REVERT"
    },
    "5096": {
      "op": "JUMPDEST"
    },
    "5097": {
      "op": "DUP7"
    },
    "5098": {
      "op": "ADD"
    },
    "5099": {
      "op": "SWAP1"
    },
    "5100": {
      "op": "POP"
    },
    "5101": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5103": {
      "op": "DUP2"
    },
    "5104": {
      "op": "ADD"
    },
    "5105": {
      "op": "DUP8"
    },
    "5106": {
      "op": "SGT"
    },
    "5107": {
      "op": "PUSH2",
      "value": "0x13FA"
    },
    "5110": {
      "op": "JUMPI"
    },
    "5111": {
      "op": "DUP4"
    },
    "5112": {
      "op": "DUP5"
    },
    "5113": {
      "op": "REVERT"
    },
    "5114": {
      "op": "JUMPDEST"
    },
    "5115": {
      "op": "DUP1"
    },
    "5116": {
      "op": "CALLDATALOAD"
    },
    "5117": {
      "op": "PUSH2",
      "value": "0x1408"
    },
    "5120": {
      "op": "PUSH2",
      "value": "0x11C4"
    },
    "5123": {
      "op": "DUP3"
    },
    "5124": {
      "op": "PUSH2",
      "value": "0x187C"
    },
    "5127": {
      "op": "JUMP"
    },
    "5128": {
      "op": "JUMPDEST"
    },
    "5129": {
      "op": "DUP2"
    },
    "5130": {
      "op": "DUP2"
    },
    "5131": {
      "op": "MSTORE"
    },
    "5132": {
      "op": "DUP4"
    },
    "5133": {
      "op": "DUP2"
    },
    "5134": {
      "op": "ADD"
    },
    "5135": {
      "op": "SWAP1"
    },
    "5136": {
      "op": "DUP4"
    },
    "5137": {
      "op": "DUP6"
    },
    "5138": {
      "op": "ADD"
    },
    "5139": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5141": {
      "op": "DUP1"
    },
    "5142": {
      "op": "DUP6"
    },
    "5143": {
      "op": "MUL"
    },
    "5144": {
      "op": "DUP7"
    },
    "5145": {
      "op": "ADD"
    },
    "5146": {
      "op": "DUP8"
    },
    "5147": {
      "op": "ADD"
    },
    "5148": {
      "op": "DUP13"
    },
    "5149": {
      "op": "LT"
    },
    "5150": {
      "op": "ISZERO"
    },
    "5151": {
      "op": "PUSH2",
      "value": "0x1426"
    },
    "5154": {
      "op": "JUMPI"
    },
    "5155": {
      "op": "DUP9"
    },
    "5156": {
      "op": "DUP10"
    },
    "5157": {
      "op": "REVERT"
    },
    "5158": {
      "op": "JUMPDEST"
    },
    "5159": {
      "op": "DUP9"
    },
    "5160": {
      "op": "SWAP6"
    },
    "5161": {
      "op": "POP"
    },
    "5162": {
      "op": "JUMPDEST"
    },
    "5163": {
      "op": "DUP5"
    },
    "5164": {
      "op": "DUP7"
    },
    "5165": {
      "op": "LT"
    },
    "5166": {
      "op": "ISZERO"
    },
    "5167": {
      "op": "PUSH2",
      "value": "0x148B"
    },
    "5170": {
      "op": "JUMPI"
    },
    "5171": {
      "op": "DUP1"
    },
    "5172": {
      "op": "DUP3"
    },
    "5173": {
      "op": "DUP14"
    },
    "5174": {
      "op": "SUB"
    },
    "5175": {
      "op": "SLT"
    },
    "5176": {
      "op": "ISZERO"
    },
    "5177": {
      "op": "PUSH2",
      "value": "0x1440"
    },
    "5180": {
      "op": "JUMPI"
    },
    "5181": {
      "op": "DUP9"
    },
    "5182": {
      "op": "DUP10"
    },
    "5183": {
      "op": "REVERT"
    },
    "5184": {
      "op": "JUMPDEST"
    },
    "5185": {
      "op": "PUSH2",
      "value": "0x1449"
    },
    "5188": {
      "op": "DUP2"
    },
    "5189": {
      "op": "PUSH2",
      "value": "0x1855"
    },
    "5192": {
      "op": "JUMP"
    },
    "5193": {
      "op": "JUMPDEST"
    },
    "5194": {
      "op": "PUSH2",
      "value": "0x1453"
    },
    "5197": {
      "op": "DUP14"
    },
    "5198": {
      "op": "DUP5"
    },
    "5199": {
      "op": "PUSH2",
      "value": "0x121D"
    },
    "5202": {
      "op": "JUMP"
    },
    "5203": {
      "op": "JUMPDEST"
    },
    "5204": {
      "op": "DUP2"
    },
    "5205": {
      "op": "MSTORE"
    },
    "5206": {
      "op": "PUSH2",
      "value": "0x1461"
    },
    "5209": {
      "op": "DUP14"
    },
    "5210": {
      "op": "DUP10"
    },
    "5211": {
      "op": "DUP6"
    },
    "5212": {
      "op": "ADD"
    },
    "5213": {
      "op": "PUSH2",
      "value": "0x121D"
    },
    "5216": {
      "op": "JUMP"
    },
    "5217": {
      "op": "JUMPDEST"
    },
    "5218": {
      "op": "DUP9"
    },
    "5219": {
      "op": "DUP3"
    },
    "5220": {
      "op": "ADD"
    },
    "5221": {
      "op": "MSTORE"
    },
    "5222": {
      "op": "PUSH2",
      "value": "0x1471"
    },
    "5225": {
      "op": "DUP14"
    },
    "5226": {
      "op": "DUP11"
    },
    "5227": {
      "op": "DUP6"
    },
    "5228": {
      "op": "ADD"
    },
    "5229": {
      "op": "PUSH2",
      "value": "0x121D"
    },
    "5232": {
      "op": "JUMP"
    },
    "5233": {
      "op": "JUMPDEST"
    },
    "5234": {
      "op": "DUP2"
    },
    "5235": {
      "op": "DUP11"
    },
    "5236": {
      "op": "ADD"
    },
    "5237": {
      "op": "MSTORE"
    },
    "5238": {
      "op": "DUP5"
    },
    "5239": {
      "op": "MSTORE"
    },
    "5240": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5242": {
      "op": "SWAP6"
    },
    "5243": {
      "op": "SWAP1"
    },
    "5244": {
      "op": "SWAP6"
    },
    "5245": {
      "op": "ADD"
    },
    "5246": {
      "op": "SWAP5"
    },
    "5247": {
      "op": "SWAP3"
    },
    "5248": {
      "op": "DUP7"
    },
    "5249": {
      "op": "ADD"
    },
    "5250": {
      "op": "SWAP3"
    },
    "5251": {
      "op": "SWAP1"
    },
    "5252": {
      "op": "DUP2"
    },
    "5253": {
      "op": "ADD"
    },
    "5254": {
      "op": "SWAP1"
    },
    "5255": {
      "op": "PUSH2",
      "value": "0x142A"
    },
    "5258": {
      "op": "JUMP"
    },
    "5259": {
      "op": "JUMPDEST"
    },
    "5260": {
      "op": "POP"
    },
    "5261": {
      "op": "SWAP8"
    },
    "5262": {
      "op": "SWAP11"
    },
    "5263": {
      "op": "SWAP1"
    },
    "5264": {
      "op": "SWAP10"
    },
    "5265": {
      "op": "POP"
    },
    "5266": {
      "op": "SWAP8"
    },
    "5267": {
      "op": "POP"
    },
    "5268": {
      "op": "POP"
    },
    "5269": {
      "op": "POP"
    },
    "5270": {
      "op": "POP"
    },
    "5271": {
      "op": "POP"
    },
    "5272": {
      "op": "POP"
    },
    "5273": {
      "op": "POP"
    },
    "5274": {
      "op": "POP"
    },
    "5275": {
      "op": "JUMP"
    },
    "5276": {
      "op": "JUMPDEST"
    },
    "5277": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5279": {
      "op": "DUP1"
    },
    "5280": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5282": {
      "op": "DUP4"
    },
    "5283": {
      "op": "DUP6"
    },
    "5284": {
      "op": "SUB"
    },
    "5285": {
      "op": "SLT"
    },
    "5286": {
      "op": "ISZERO"
    },
    "5287": {
      "op": "PUSH2",
      "value": "0x14AE"
    },
    "5290": {
      "op": "JUMPI"
    },
    "5291": {
      "op": "DUP2"
    },
    "5292": {
      "op": "DUP3"
    },
    "5293": {
      "op": "REVERT"
    },
    "5294": {
      "op": "JUMPDEST"
    },
    "5295": {
      "op": "DUP3"
    },
    "5296": {
      "op": "CALLDATALOAD"
    },
    "5297": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "5306": {
      "op": "DUP2"
    },
    "5307": {
      "op": "GT"
    },
    "5308": {
      "op": "ISZERO"
    },
    "5309": {
      "op": "PUSH2",
      "value": "0x14C4"
    },
    "5312": {
      "op": "JUMPI"
    },
    "5313": {
      "op": "DUP3"
    },
    "5314": {
      "op": "DUP4"
    },
    "5315": {
      "op": "REVERT"
    },
    "5316": {
      "op": "JUMPDEST"
    },
    "5317": {
      "op": "PUSH2",
      "value": "0x14D0"
    },
    "5320": {
      "op": "DUP6"
    },
    "5321": {
      "op": "DUP3"
    },
    "5322": {
      "op": "DUP7"
    },
    "5323": {
      "op": "ADD"
    },
    "5324": {
      "op": "PUSH2",
      "value": "0x11A6"
    },
    "5327": {
      "op": "JUMP"
    },
    "5328": {
      "op": "JUMPDEST"
    },
    "5329": {
      "op": "SWAP3"
    },
    "5330": {
      "op": "POP"
    },
    "5331": {
      "op": "POP"
    },
    "5332": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5334": {
      "op": "DUP4"
    },
    "5335": {
      "op": "ADD"
    },
    "5336": {
      "op": "CALLDATALOAD"
    },
    "5337": {
      "op": "DUP1"
    },
    "5338": {
      "op": "ISZERO"
    },
    "5339": {
      "op": "ISZERO"
    },
    "5340": {
      "op": "DUP2"
    },
    "5341": {
      "op": "EQ"
    },
    "5342": {
      "op": "PUSH2",
      "value": "0x14E5"
    },
    "5345": {
      "op": "JUMPI"
    },
    "5346": {
      "op": "DUP2"
    },
    "5347": {
      "op": "DUP3"
    },
    "5348": {
      "op": "REVERT"
    },
    "5349": {
      "op": "JUMPDEST"
    },
    "5350": {
      "op": "DUP1"
    },
    "5351": {
      "op": "SWAP2"
    },
    "5352": {
      "op": "POP"
    },
    "5353": {
      "op": "POP"
    },
    "5354": {
      "op": "SWAP3"
    },
    "5355": {
      "op": "POP"
    },
    "5356": {
      "op": "SWAP3"
    },
    "5357": {
      "op": "SWAP1"
    },
    "5358": {
      "op": "POP"
    },
    "5359": {
      "op": "JUMP"
    },
    "5360": {
      "op": "JUMPDEST"
    },
    "5361": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5363": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5365": {
      "op": "DUP3"
    },
    "5366": {
      "op": "DUP5"
    },
    "5367": {
      "op": "SUB"
    },
    "5368": {
      "op": "SLT"
    },
    "5369": {
      "op": "ISZERO"
    },
    "5370": {
      "op": "PUSH2",
      "value": "0x1501"
    },
    "5373": {
      "op": "JUMPI"
    },
    "5374": {
      "op": "DUP1"
    },
    "5375": {
      "op": "DUP2"
    },
    "5376": {
      "op": "REVERT"
    },
    "5377": {
      "op": "JUMPDEST"
    },
    "5378": {
      "op": "POP"
    },
    "5379": {
      "op": "MLOAD"
    },
    "5380": {
      "op": "SWAP2"
    },
    "5381": {
      "op": "SWAP1"
    },
    "5382": {
      "op": "POP"
    },
    "5383": {
      "op": "JUMP"
    },
    "5384": {
      "op": "JUMPDEST"
    },
    "5385": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5387": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5389": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5391": {
      "op": "SHL"
    },
    "5392": {
      "op": "SUB"
    },
    "5393": {
      "op": "SWAP2"
    },
    "5394": {
      "op": "SWAP1"
    },
    "5395": {
      "op": "SWAP2"
    },
    "5396": {
      "op": "AND"
    },
    "5397": {
      "op": "DUP2"
    },
    "5398": {
      "op": "MSTORE"
    },
    "5399": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5401": {
      "op": "ADD"
    },
    "5402": {
      "op": "SWAP1"
    },
    "5403": {
      "op": "JUMP"
    },
    "5404": {
      "op": "JUMPDEST"
    },
    "5405": {
      "op": "SWAP1"
    },
    "5406": {
      "op": "ISZERO"
    },
    "5407": {
      "op": "ISZERO"
    },
    "5408": {
      "op": "DUP2"
    },
    "5409": {
      "op": "MSTORE"
    },
    "5410": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5412": {
      "op": "ADD"
    },
    "5413": {
      "op": "SWAP1"
    },
    "5414": {
      "op": "JUMP"
    },
    "5415": {
      "op": "JUMPDEST"
    },
    "5416": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5418": {
      "op": "DUP1"
    },
    "5419": {
      "op": "DUP3"
    },
    "5420": {
      "op": "MSTORE"
    },
    "5421": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "5423": {
      "op": "SWAP1"
    },
    "5424": {
      "op": "DUP3"
    },
    "5425": {
      "op": "ADD"
    },
    "5426": {
      "op": "MSTORE"
    },
    "5427": {
      "op": "PUSH32",
      "value": "0x62616420756E6465726C79696E6720636F6C6C61746572616C00000000000000"
    },
    "5460": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5462": {
      "op": "DUP3"
    },
    "5463": {
      "op": "ADD"
    },
    "5464": {
      "op": "MSTORE"
    },
    "5465": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5467": {
      "op": "ADD"
    },
    "5468": {
      "op": "SWAP1"
    },
    "5469": {
      "op": "JUMP"
    },
    "5470": {
      "op": "JUMPDEST"
    },
    "5471": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5473": {
      "op": "DUP1"
    },
    "5474": {
      "op": "DUP3"
    },
    "5475": {
      "op": "MSTORE"
    },
    "5476": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "5478": {
      "op": "SWAP1"
    },
    "5479": {
      "op": "DUP3"
    },
    "5480": {
      "op": "ADD"
    },
    "5481": {
      "op": "MSTORE"
    },
    "5482": {
      "op": "PUSH18",
      "value": "0x189859081D5B99195C9B1E5A5B99C81BDD5D"
    },
    "5501": {
      "op": "PUSH1",
      "value": "0x72"
    },
    "5503": {
      "op": "SHL"
    },
    "5504": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5506": {
      "op": "DUP3"
    },
    "5507": {
      "op": "ADD"
    },
    "5508": {
      "op": "MSTORE"
    },
    "5509": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5511": {
      "op": "ADD"
    },
    "5512": {
      "op": "SWAP1"
    },
    "5513": {
      "op": "JUMP"
    },
    "5514": {
      "op": "JUMPDEST"
    },
    "5515": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5517": {
      "op": "DUP1"
    },
    "5518": {
      "op": "DUP3"
    },
    "5519": {
      "op": "MSTORE"
    },
    "5520": {
      "op": "PUSH1",
      "value": "0x18"
    },
    "5522": {
      "op": "SWAP1"
    },
    "5523": {
      "op": "DUP3"
    },
    "5524": {
      "op": "ADD"
    },
    "5525": {
      "op": "MSTORE"
    },
    "5526": {
      "op": "PUSH32",
      "value": "0x6E6F74207468652070656E64696E6720676F7665726E6F720000000000000000"
    },
    "5559": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5561": {
      "op": "DUP3"
    },
    "5562": {
      "op": "ADD"
    },
    "5563": {
      "op": "MSTORE"
    },
    "5564": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5566": {
      "op": "ADD"
    },
    "5567": {
      "op": "SWAP1"
    },
    "5568": {
      "op": "JUMP"
    },
    "5569": {
      "op": "JUMPDEST"
    },
    "5570": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5572": {
      "op": "DUP1"
    },
    "5573": {
      "op": "DUP3"
    },
    "5574": {
      "op": "MSTORE"
    },
    "5575": {
      "op": "PUSH1",
      "value": "0x1A"
    },
    "5577": {
      "op": "SWAP1"
    },
    "5578": {
      "op": "DUP3"
    },
    "5579": {
      "op": "ADD"
    },
    "5580": {
      "op": "MSTORE"
    },
    "5581": {
      "op": "PUSH32",
      "value": "0x536166654D6174683A206469766973696F6E206279207A65726F000000000000"
    },
    "5614": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5616": {
      "op": "DUP3"
    },
    "5617": {
      "op": "ADD"
    },
    "5618": {
      "op": "MSTORE"
    },
    "5619": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5621": {
      "op": "ADD"
    },
    "5622": {
      "op": "SWAP1"
    },
    "5623": {
      "op": "JUMP"
    },
    "5624": {
      "op": "JUMPDEST"
    },
    "5625": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5627": {
      "op": "DUP1"
    },
    "5628": {
      "op": "DUP3"
    },
    "5629": {
      "op": "MSTORE"
    },
    "5630": {
      "op": "PUSH1",
      "value": "0x10"
    },
    "5632": {
      "op": "SWAP1"
    },
    "5633": {
      "op": "DUP3"
    },
    "5634": {
      "op": "ADD"
    },
    "5635": {
      "op": "MSTORE"
    },
    "5636": {
      "op": "PUSH16",
      "value": "0x3737BA103A34329033B7BB32B93737B9"
    },
    "5653": {
      "op": "PUSH1",
      "value": "0x81"
    },
    "5655": {
      "op": "SHL"
    },
    "5656": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5658": {
      "op": "DUP3"
    },
    "5659": {
      "op": "ADD"
    },
    "5660": {
      "op": "MSTORE"
    },
    "5661": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5663": {
      "op": "ADD"
    },
    "5664": {
      "op": "SWAP1"
    },
    "5665": {
      "op": "JUMP"
    },
    "5666": {
      "op": "JUMPDEST"
    },
    "5667": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5669": {
      "op": "DUP1"
    },
    "5670": {
      "op": "DUP3"
    },
    "5671": {
      "op": "MSTORE"
    },
    "5672": {
      "op": "PUSH1",
      "value": "0x9"
    },
    "5674": {
      "op": "SWAP1"
    },
    "5675": {
      "op": "DUP3"
    },
    "5676": {
      "op": "ADD"
    },
    "5677": {
      "op": "MSTORE"
    },
    "5678": {
      "op": "PUSH9",
      "value": "0x3130B2103A37B5B2B7"
    },
    "5688": {
      "op": "PUSH1",
      "value": "0xB9"
    },
    "5690": {
      "op": "SHL"
    },
    "5691": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5693": {
      "op": "DUP3"
    },
    "5694": {
      "op": "ADD"
    },
    "5695": {
      "op": "MSTORE"
    },
    "5696": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5698": {
      "op": "ADD"
    },
    "5699": {
      "op": "SWAP1"
    },
    "5700": {
      "op": "JUMP"
    },
    "5701": {
      "op": "JUMPDEST"
    },
    "5702": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5704": {
      "op": "DUP1"
    },
    "5705": {
      "op": "DUP3"
    },
    "5706": {
      "op": "MSTORE"
    },
    "5707": {
      "op": "PUSH1",
      "value": "0x15"
    },
    "5709": {
      "op": "SWAP1"
    },
    "5710": {
      "op": "DUP3"
    },
    "5711": {
      "op": "ADD"
    },
    "5712": {
      "op": "MSTORE"
    },
    "5713": {
      "op": "PUSH21",
      "value": "0x62616420756E6465726C79696E6720626F72726F77"
    },
    "5735": {
      "op": "PUSH1",
      "value": "0x58"
    },
    "5737": {
      "op": "SHL"
    },
    "5738": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5740": {
      "op": "DUP3"
    },
    "5741": {
      "op": "ADD"
    },
    "5742": {
      "op": "MSTORE"
    },
    "5743": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5745": {
      "op": "ADD"
    },
    "5746": {
      "op": "SWAP1"
    },
    "5747": {
      "op": "JUMP"
    },
    "5748": {
      "op": "JUMPDEST"
    },
    "5749": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5751": {
      "op": "DUP1"
    },
    "5752": {
      "op": "DUP3"
    },
    "5753": {
      "op": "MSTORE"
    },
    "5754": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "5756": {
      "op": "SWAP1"
    },
    "5757": {
      "op": "DUP3"
    },
    "5758": {
      "op": "ADD"
    },
    "5759": {
      "op": "MSTORE"
    },
    "5760": {
      "op": "PUSH32",
      "value": "0x536166654D6174683A206D756C7469706C69636174696F6E206F766572666C6F"
    },
    "5793": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5795": {
      "op": "DUP3"
    },
    "5796": {
      "op": "ADD"
    },
    "5797": {
      "op": "MSTORE"
    },
    "5798": {
      "op": "PUSH1",
      "value": "0x77"
    },
    "5800": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "5802": {
      "op": "SHL"
    },
    "5803": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5805": {
      "op": "DUP3"
    },
    "5806": {
      "op": "ADD"
    },
    "5807": {
      "op": "MSTORE"
    },
    "5808": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5810": {
      "op": "ADD"
    },
    "5811": {
      "op": "SWAP1"
    },
    "5812": {
      "op": "JUMP"
    },
    "5813": {
      "op": "JUMPDEST"
    },
    "5814": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5816": {
      "op": "DUP1"
    },
    "5817": {
      "op": "DUP3"
    },
    "5818": {
      "op": "MSTORE"
    },
    "5819": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "5821": {
      "op": "SWAP1"
    },
    "5822": {
      "op": "DUP3"
    },
    "5823": {
      "op": "ADD"
    },
    "5824": {
      "op": "MSTORE"
    },
    "5825": {
      "op": "PUSH32",
      "value": "0x636F6C6C61746572616C20666163746F72206D757374206265206174206D6F73"
    },
    "5858": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5860": {
      "op": "DUP3"
    },
    "5861": {
      "op": "ADD"
    },
    "5862": {
      "op": "MSTORE"
    },
    "5863": {
      "op": "PUSH6",
      "value": "0x742031303025"
    },
    "5870": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "5872": {
      "op": "SHL"
    },
    "5873": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5875": {
      "op": "DUP3"
    },
    "5876": {
      "op": "ADD"
    },
    "5877": {
      "op": "MSTORE"
    },
    "5878": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5880": {
      "op": "ADD"
    },
    "5881": {
      "op": "SWAP1"
    },
    "5882": {
      "op": "JUMP"
    },
    "5883": {
      "op": "JUMPDEST"
    },
    "5884": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5886": {
      "op": "DUP1"
    },
    "5887": {
      "op": "DUP3"
    },
    "5888": {
      "op": "MSTORE"
    },
    "5889": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5891": {
      "op": "SWAP1"
    },
    "5892": {
      "op": "DUP3"
    },
    "5893": {
      "op": "ADD"
    },
    "5894": {
      "op": "MSTORE"
    },
    "5895": {
      "op": "PUSH32",
      "value": "0x696E63656E74697665206D757374206265206174206C65617374203130302500"
    },
    "5928": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5930": {
      "op": "DUP3"
    },
    "5931": {
      "op": "ADD"
    },
    "5932": {
      "op": "MSTORE"
    },
    "5933": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5935": {
      "op": "ADD"
    },
    "5936": {
      "op": "SWAP1"
    },
    "5937": {
      "op": "JUMP"
    },
    "5938": {
      "op": "JUMPDEST"
    },
    "5939": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5941": {
      "op": "DUP1"
    },
    "5942": {
      "op": "DUP3"
    },
    "5943": {
      "op": "MSTORE"
    },
    "5944": {
      "op": "PUSH1",
      "value": "0x23"
    },
    "5946": {
      "op": "SWAP1"
    },
    "5947": {
      "op": "DUP3"
    },
    "5948": {
      "op": "ADD"
    },
    "5949": {
      "op": "MSTORE"
    },
    "5950": {
      "op": "PUSH32",
      "value": "0x626F72726F7720666163746F72206D757374206265206174206C656173742031"
    },
    "5983": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5985": {
      "op": "DUP3"
    },
    "5986": {
      "op": "ADD"
    },
    "5987": {
      "op": "MSTORE"
    },
    "5988": {
      "op": "PUSH3",
      "value": "0x303025"
    },
    "5992": {
      "op": "PUSH1",
      "value": "0xE8"
    },
    "5994": {
      "op": "SHL"
    },
    "5995": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5997": {
      "op": "DUP3"
    },
    "5998": {
      "op": "ADD"
    },
    "5999": {
      "op": "MSTORE"
    },
    "6000": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "6002": {
      "op": "ADD"
    },
    "6003": {
      "op": "SWAP1"
    },
    "6004": {
      "op": "JUMP"
    },
    "6005": {
      "op": "JUMPDEST"
    },
    "6006": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6008": {
      "op": "DUP1"
    },
    "6009": {
      "op": "DUP3"
    },
    "6010": {
      "op": "MSTORE"
    },
    "6011": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "6013": {
      "op": "SWAP1"
    },
    "6014": {
      "op": "DUP3"
    },
    "6015": {
      "op": "ADD"
    },
    "6016": {
      "op": "MSTORE"
    },
    "6017": {
      "op": "PUSH17",
      "value": "0x3130B2103AB73232B9363CB4B7339034B7"
    },
    "6035": {
      "op": "PUSH1",
      "value": "0x79"
    },
    "6037": {
      "op": "SHL"
    },
    "6038": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6040": {
      "op": "DUP3"
    },
    "6041": {
      "op": "ADD"
    },
    "6042": {
      "op": "MSTORE"
    },
    "6043": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "6045": {
      "op": "ADD"
    },
    "6046": {
      "op": "SWAP1"
    },
    "6047": {
      "op": "JUMP"
    },
    "6048": {
      "op": "JUMPDEST"
    },
    "6049": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6051": {
      "op": "DUP1"
    },
    "6052": {
      "op": "DUP3"
    },
    "6053": {
      "op": "MSTORE"
    },
    "6054": {
      "op": "PUSH1",
      "value": "0x13"
    },
    "6056": {
      "op": "SWAP1"
    },
    "6057": {
      "op": "DUP3"
    },
    "6058": {
      "op": "ADD"
    },
    "6059": {
      "op": "MSTORE"
    },
    "6060": {
      "op": "PUSH19",
      "value": "0xD2DCC6DEDCE6D2E6E8CADCE840D8CADCCEE8D"
    },
    "6080": {
      "op": "PUSH1",
      "value": "0x6B"
    },
    "6082": {
      "op": "SHL"
    },
    "6083": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6085": {
      "op": "DUP3"
    },
    "6086": {
      "op": "ADD"
    },
    "6087": {
      "op": "MSTORE"
    },
    "6088": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "6090": {
      "op": "ADD"
    },
    "6091": {
      "op": "SWAP1"
    },
    "6092": {
      "op": "JUMP"
    },
    "6093": {
      "op": "JUMPDEST"
    },
    "6094": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6096": {
      "op": "DUP1"
    },
    "6097": {
      "op": "DUP3"
    },
    "6098": {
      "op": "MSTORE"
    },
    "6099": {
      "op": "PUSH1",
      "value": "0x1E"
    },
    "6101": {
      "op": "SWAP1"
    },
    "6102": {
      "op": "DUP3"
    },
    "6103": {
      "op": "ADD"
    },
    "6104": {
      "op": "MSTORE"
    },
    "6105": {
      "op": "PUSH32",
      "value": "0x696E63656E74697665206D757374206265206174206D6F737420323030250000"
    },
    "6138": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6140": {
      "op": "DUP3"
    },
    "6141": {
      "op": "ADD"
    },
    "6142": {
      "op": "MSTORE"
    },
    "6143": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "6145": {
      "op": "ADD"
    },
    "6146": {
      "op": "SWAP1"
    },
    "6147": {
      "op": "JUMP"
    },
    "6148": {
      "op": "JUMPDEST"
    },
    "6149": {
      "op": "DUP2"
    },
    "6150": {
      "op": "MLOAD"
    },
    "6151": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "6154": {
      "op": "SWAP1"
    },
    "6155": {
      "op": "DUP2"
    },
    "6156": {
      "op": "AND"
    },
    "6157": {
      "op": "DUP3"
    },
    "6158": {
      "op": "MSTORE"
    },
    "6159": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6161": {
      "op": "DUP1"
    },
    "6162": {
      "op": "DUP5"
    },
    "6163": {
      "op": "ADD"
    },
    "6164": {
      "op": "MLOAD"
    },
    "6165": {
      "op": "DUP3"
    },
    "6166": {
      "op": "AND"
    },
    "6167": {
      "op": "SWAP1"
    },
    "6168": {
      "op": "DUP4"
    },
    "6169": {
      "op": "ADD"
    },
    "6170": {
      "op": "MSTORE"
    },
    "6171": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6173": {
      "op": "SWAP3"
    },
    "6174": {
      "op": "DUP4"
    },
    "6175": {
      "op": "ADD"
    },
    "6176": {
      "op": "MLOAD"
    },
    "6177": {
      "op": "AND"
    },
    "6178": {
      "op": "SWAP2"
    },
    "6179": {
      "op": "DUP2"
    },
    "6180": {
      "op": "ADD"
    },
    "6181": {
      "op": "SWAP2"
    },
    "6182": {
      "op": "SWAP1"
    },
    "6183": {
      "op": "SWAP2"
    },
    "6184": {
      "op": "MSTORE"
    },
    "6185": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "6187": {
      "op": "ADD"
    },
    "6188": {
      "op": "SWAP1"
    },
    "6189": {
      "op": "JUMP"
    },
    "6190": {
      "op": "JUMPDEST"
    },
    "6191": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "6194": {
      "op": "SWAP4"
    },
    "6195": {
      "op": "DUP5"
    },
    "6196": {
      "op": "AND"
    },
    "6197": {
      "op": "DUP2"
    },
    "6198": {
      "op": "MSTORE"
    },
    "6199": {
      "op": "SWAP2"
    },
    "6200": {
      "op": "DUP4"
    },
    "6201": {
      "op": "AND"
    },
    "6202": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6204": {
      "op": "DUP4"
    },
    "6205": {
      "op": "ADD"
    },
    "6206": {
      "op": "MSTORE"
    },
    "6207": {
      "op": "SWAP1"
    },
    "6208": {
      "op": "SWAP2"
    },
    "6209": {
      "op": "AND"
    },
    "6210": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6212": {
      "op": "DUP3"
    },
    "6213": {
      "op": "ADD"
    },
    "6214": {
      "op": "MSTORE"
    },
    "6215": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "6217": {
      "op": "ADD"
    },
    "6218": {
      "op": "SWAP1"
    },
    "6219": {
      "op": "JUMP"
    },
    "6220": {
      "op": "JUMPDEST"
    },
    "6221": {
      "op": "SWAP1"
    },
    "6222": {
      "op": "DUP2"
    },
    "6223": {
      "op": "MSTORE"
    },
    "6224": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6226": {
      "op": "ADD"
    },
    "6227": {
      "op": "SWAP1"
    },
    "6228": {
      "op": "JUMP"
    },
    "6229": {
      "op": "JUMPDEST"
    },
    "6230": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6232": {
      "op": "MLOAD"
    },
    "6233": {
      "op": "DUP2"
    },
    "6234": {
      "op": "DUP2"
    },
    "6235": {
      "op": "ADD"
    },
    "6236": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "6245": {
      "op": "DUP2"
    },
    "6246": {
      "op": "GT"
    },
    "6247": {
      "op": "DUP3"
    },
    "6248": {
      "op": "DUP3"
    },
    "6249": {
      "op": "LT"
    },
    "6250": {
      "op": "OR"
    },
    "6251": {
      "op": "ISZERO"
    },
    "6252": {
      "op": "PUSH2",
      "value": "0x1874"
    },
    "6255": {
      "op": "JUMPI"
    },
    "6256": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6258": {
      "op": "DUP1"
    },
    "6259": {
      "op": "REVERT"
    },
    "6260": {
      "op": "JUMPDEST"
    },
    "6261": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6263": {
      "op": "MSTORE"
    },
    "6264": {
      "op": "SWAP2"
    },
    "6265": {
      "op": "SWAP1"
    },
    "6266": {
      "op": "POP"
    },
    "6267": {
      "op": "JUMP"
    },
    "6268": {
      "op": "JUMPDEST"
    },
    "6269": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6271": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "6280": {
      "op": "DUP3"
    },
    "6281": {
      "op": "GT"
    },
    "6282": {
      "op": "ISZERO"
    },
    "6283": {
      "op": "PUSH2",
      "value": "0x1892"
    },
    "6286": {
      "op": "JUMPI"
    },
    "6287": {
      "op": "DUP1"
    },
    "6288": {
      "op": "DUP2"
    },
    "6289": {
      "op": "REVERT"
    },
    "6290": {
      "op": "JUMPDEST"
    },
    "6291": {
      "op": "POP"
    },
    "6292": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6294": {
      "op": "SWAP1"
    },
    "6295": {
      "op": "DUP2"
    },
    "6296": {
      "op": "MUL"
    },
    "6297": {
      "op": "ADD"
    },
    "6298": {
      "op": "SWAP1"
    },
    "6299": {
      "op": "JUMP"
    },
    "6300": {
      "op": "JUMPDEST"
    },
    "6301": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6303": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6305": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6307": {
      "op": "SHL"
    },
    "6308": {
      "op": "SUB"
    },
    "6309": {
      "op": "DUP2"
    },
    "6310": {
      "op": "AND"
    },
    "6311": {
      "op": "DUP2"
    },
    "6312": {
      "op": "EQ"
    },
    "6313": {
      "op": "PUSH2",
      "value": "0x18B1"
    },
    "6316": {
      "op": "JUMPI"
    },
    "6317": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6319": {
      "op": "DUP1"
    },
    "6320": {
      "op": "REVERT"
    },
    "6321": {
      "op": "JUMPDEST"
    },
    "6322": {
      "op": "POP"
    },
    "6323": {
      "op": "JUMP"
    }
  },
  "sha1": "375c83e38966a042be637d4d584b6b2062e36a40",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity 0.6.12;\npragma experimental ABIEncoderV2;\n\nimport 'OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/math/SafeMath.sol';\n\nimport '../Governable.sol';\nimport '../../interfaces/IOracle.sol';\nimport '../../interfaces/IBaseOracle.sol';\nimport '../../interfaces/IERC20Wrapper.sol';\n\ncontract ProxyOracle is IOracle, Governable {\n  using SafeMath for uint;\n\n  /// The governor sets oracle token factor for a token.\n  event SetTokenFactor(address indexed token, TokenFactors tokenFactor);\n  /// The governor unsets oracle token factor for a token.\n  event UnsetTokenFactor(address indexed token);\n  /// The governor sets token whitelist for an ERC1155 token.\n  event SetWhitelist(address indexed token, bool ok);\n\n  struct TokenFactors {\n    uint16 borrowFactor; // The borrow factor for this token, multiplied by 1e4.\n    uint16 collateralFactor; // The collateral factor for this token, multiplied by 1e4.\n    uint16 liqIncentive; // The liquidation incentive, multiplied by 1e4.\n  }\n\n  IBaseOracle public immutable source; // Main oracle source\n  mapping(address => TokenFactors) public tokenFactors; // Mapping from token address to oracle info.\n  mapping(address => bool) public whitelistERC1155; // Mapping from token address to whitelist status\n\n  /// @dev Create the contract and initialize the first governor.\n  constructor(IBaseOracle _source) public {\n    source = _source;\n    __Governable__init();\n  }\n\n  /// @dev Set oracle token factors for the given list of token addresses.\n  /// @param tokens List of tokens to set info\n  /// @param _tokenFactors List of oracle token factors\n  function setTokenFactors(address[] memory tokens, TokenFactors[] memory _tokenFactors)\n    external\n    onlyGov\n  {\n    require(tokens.length == _tokenFactors.length, 'inconsistent length');\n    for (uint idx = 0; idx < tokens.length; idx++) {\n      require(_tokenFactors[idx].borrowFactor >= 10000, 'borrow factor must be at least 100%');\n      require(\n        _tokenFactors[idx].collateralFactor <= 10000,\n        'collateral factor must be at most 100%'\n      );\n      require(_tokenFactors[idx].liqIncentive >= 10000, 'incentive must be at least 100%');\n      require(_tokenFactors[idx].liqIncentive <= 20000, 'incentive must be at most 200%');\n      tokenFactors[tokens[idx]] = _tokenFactors[idx];\n      emit SetTokenFactor(tokens[idx], _tokenFactors[idx]);\n    }\n  }\n\n  /// @dev Unset token factors for the given list of token addresses\n  /// @param tokens List of tokens to unset info\n  function unsetTokenFactors(address[] memory tokens) external onlyGov {\n    for (uint idx = 0; idx < tokens.length; idx++) {\n      delete tokenFactors[tokens[idx]];\n      emit UnsetTokenFactor(tokens[idx]);\n    }\n  }\n\n  /// @dev Set whitelist status for the given list of token addresses.\n  /// @param tokens List of tokens to set whitelist status\n  /// @param ok Whitelist status\n  function setWhitelistERC1155(address[] memory tokens, bool ok) external onlyGov {\n    for (uint idx = 0; idx < tokens.length; idx++) {\n      whitelistERC1155[tokens[idx]] = ok;\n      emit SetWhitelist(tokens[idx], ok);\n    }\n  }\n\n  /// @dev Return whether the oracle supports evaluating collateral value of the given token.\n  /// @param token ERC1155 token address to check for support\n  /// @param id ERC1155 token id to check for support\n  function supportWrappedToken(address token, uint id) external view override returns (bool) {\n    if (!whitelistERC1155[token]) return false;\n    address tokenUnderlying = IERC20Wrapper(token).getUnderlyingToken(id);\n    return tokenFactors[tokenUnderlying].liqIncentive != 0;\n  }\n\n  /// @dev Return the amount of token out as liquidation reward for liquidating token in.\n  /// @param tokenIn Input ERC20 token\n  /// @param tokenOut Output ERC1155 token\n  /// @param tokenOutId Output ERC1155 token id\n  /// @param amountIn Input ERC20 token amount\n  function convertForLiquidation(\n    address tokenIn,\n    address tokenOut,\n    uint tokenOutId,\n    uint amountIn\n  ) external view override returns (uint) {\n    require(whitelistERC1155[tokenOut], 'bad token');\n    address tokenOutUnderlying = IERC20Wrapper(tokenOut).getUnderlyingToken(tokenOutId);\n    uint rateUnderlying = IERC20Wrapper(tokenOut).getUnderlyingRate(tokenOutId);\n    TokenFactors memory tokenFactorIn = tokenFactors[tokenIn];\n    TokenFactors memory tokenFactorOut = tokenFactors[tokenOutUnderlying];\n    require(tokenFactorIn.liqIncentive != 0, 'bad underlying in');\n    require(tokenFactorOut.liqIncentive != 0, 'bad underlying out');\n    uint pxIn = source.getCELOPx(tokenIn);\n    uint pxOut = source.getCELOPx(tokenOutUnderlying);\n    uint amountOut = amountIn.mul(pxIn).div(pxOut);\n    amountOut = amountOut.mul(2**112).div(rateUnderlying);\n    return\n      amountOut.mul(tokenFactorIn.liqIncentive).mul(tokenFactorOut.liqIncentive).div(10000 * 10000);\n  }\n\n  /// @dev Return the value of the given input as CELO for collateral purpose.\n  /// @param token ERC1155 token address to get collateral value\n  /// @param id ERC1155 token id to get collateral value\n  /// @param amount Token amount to get collateral value\n  /// @param owner Token owner address (currently unused by this implementation)\n  function asCELOCollateral(\n    address token,\n    uint id,\n    uint amount,\n    address owner\n  ) external view override returns (uint) {\n    require(whitelistERC1155[token], 'bad token');\n    address tokenUnderlying = IERC20Wrapper(token).getUnderlyingToken(id);\n    uint rateUnderlying = IERC20Wrapper(token).getUnderlyingRate(id);\n    uint amountUnderlying = amount.mul(rateUnderlying).div(2**112);\n    TokenFactors memory tokenFactor = tokenFactors[tokenUnderlying];\n    require(tokenFactor.liqIncentive != 0, 'bad underlying collateral');\n    uint celoValue = source.getCELOPx(tokenUnderlying).mul(amountUnderlying).div(2**112);\n    return celoValue.mul(tokenFactor.collateralFactor).div(10000);\n  }\n\n  /// @dev Return the value of the given input as CELO for borrow purpose.\n  /// @param token ERC20 token address to get borrow value\n  /// @param amount ERC20 token amount to get borrow value\n  /// @param owner Token owner address (currently unused by this implementation)\n  function asCELOBorrow(\n    address token,\n    uint amount,\n    address owner\n  ) external view override returns (uint) {\n    TokenFactors memory tokenFactor = tokenFactors[token];\n    require(tokenFactor.liqIncentive != 0, 'bad underlying borrow');\n    uint celoValue = source.getCELOPx(token).mul(amount).div(2**112);\n    return celoValue.mul(tokenFactor.borrowFactor).div(10000);\n  }\n\n  /// @dev Return whether the ERC20 token is supported\n  /// @param token The ERC20 token to check for support\n  function support(address token) external view override returns (bool) {\n    try source.getCELOPx(token) returns (uint px) {\n      return px != 0 && tokenFactors[token].liqIncentive != 0;\n    } catch {\n      return false;\n    }\n  }\n}\n",
  "sourceMap": "329:6617:176:-:0;;;1365:93;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;1411:16:176;;;;;;;1433:20;:18;:20::i;:::-;1365:93;329:6617;;673:151:22;1501:13:7;;;;;;;;:33;;-1:-1:-1;1518:16:7;:14;:16::i;:::-;1501:50;;;-1:-1:-1;1539:12:7;;;;1538:13;1501:50;1493:109;;;;-1:-1:-1;;;1493:109:7;;;;;;;:::i;:::-;;;;;;;;;1613:19;1636:13;;;;;;1635:14;1659:98;;;;1693:13;:20;;-1:-1:-1;;;;1693:20:7;;;;;1727:19;1709:4;1727:19;;;1659:98;730:8:22::1;:21:::0;;-1:-1:-1;;;;;;730:21:22::1;741:10;730:21:::0;;::::1;::::0;;;::::1;::::0;;;-1:-1:-1;757:28:22;;-1:-1:-1;;;;;;757:28:22::1;::::0;;796:23:::1;::::0;::::1;::::0;::::1;::::0;::::1;:::i;:::-;;;;;;;;1783:14:7::0;1779:66;;;1829:5;1813:21;;-1:-1:-1;;1813:21:7;;;1779:66;673:151:22;:::o;1941:112:7:-;1989:4;2013:33;2040:4;2013:18;;;;;:33;;:::i;:::-;2012:34;2005:41;;1941:112;:::o;726:413:16:-;1086:20;1124:8;;;726:413::o;188:305:-1:-;;324:2;312:9;303:7;299:23;295:32;292:2;;;-1:-1;;330:12;292:2;104:13;;-1:-1;;;;;2160:54;;2685:56;;2675:2;;-1:-1;;2745:12;2675:2;382:95;286:207;-1:-1;;;286:207::o;1041:238::-;-1:-1;;;;;2160:54;;;;579:58;;1176:2;1161:18;;1147:132::o;1286:416::-;1486:2;1500:47;;;874:2;1471:18;;;1813:19;910:34;1853:14;;;890:55;-1:-1;;;965:12;;;958:38;1015:12;;;1457:245::o;:::-;329:6617:176;;;;;;;;;;;",
  "sourcePath": "contracts/oracle/ProxyOracle.sol",
  "type": "contract"
}