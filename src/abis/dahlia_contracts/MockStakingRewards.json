{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_rewardsDistribution",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_rewardsToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_stakingToken",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "oldOwner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnerChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnerNominated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Recovered",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "reward",
          "type": "uint256"
        }
      ],
      "name": "RewardAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "reward",
          "type": "uint256"
        }
      ],
      "name": "RewardPaid",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newDuration",
          "type": "uint256"
        }
      ],
      "name": "RewardsDurationUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Staked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Withdrawn",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "acceptOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "earned",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "exit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getReward",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getRewardForDuration",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lastTimeRewardApplicable",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lastUpdateTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "nominateNewOwner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "nominatedOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "reward",
          "type": "uint256"
        }
      ],
      "name": "notifyRewardAmount",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "periodFinish",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenAmount",
          "type": "uint256"
        }
      ],
      "name": "recoverERC20",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "rewardPerToken",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "rewardPerTokenStored",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "rewardRate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "rewards",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "rewardsDistribution",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "rewardsDuration",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "rewardsToken",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_rewardsDistribution",
          "type": "address"
        }
      ],
      "name": "setRewardsDistribution",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_rewardsDuration",
          "type": "uint256"
        }
      ],
      "name": "setRewardsDuration",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "stake",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "stakingToken",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "updatePeriodFinish",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "userRewardPerTokenPaid",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "/Users/kylescott/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.0.0/contracts/security/ReentrancyGuard.sol",
    "1": "/Users/kylescott/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.0.0/contracts/token/ERC20/IERC20.sol",
    "10": "interfaces/IStakingRewards.sol",
    "2": "/Users/kylescott/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.0.0/contracts/token/ERC20/utils/SafeERC20.sol",
    "3": "/Users/kylescott/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.0.0/contracts/utils/Address.sol",
    "4": "/Users/kylescott/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.0.0/contracts/utils/math/Math.sol",
    "5": "/Users/kylescott/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.0.0/contracts/utils/math/SafeMath.sol",
    "7": "contracts/mock/MockStaking.sol"
  },
  "ast": {
    "absolutePath": "contracts/mock/MockStaking.sol",
    "exportedSymbols": {
      "Address": [
        2784
      ],
      "IERC20": [
        2488
      ],
      "IStakingRewards": [
        2410
      ],
      "Math": [
        2018
      ],
      "MockStakingRewards": [
        1681
      ],
      "Owned": [
        1052
      ],
      "ReentrancyGuard": [
        1721
      ],
      "RewardsDistributionRecipient": [
        1086
      ],
      "SafeERC20": [
        1945
      ],
      "SafeMath": [
        2330
      ]
    },
    "id": 1682,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 940,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".3"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:7"
      },
      {
        "absolutePath": "/Users/kylescott/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.0.0/contracts/utils/math/SafeMath.sol",
        "file": "OpenZeppelin/openzeppelin-contracts@4.0.0/contracts/utils/math/SafeMath.sol",
        "id": 941,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1682,
        "sourceUnit": 2331,
        "src": "25:85:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/kylescott/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.0.0/contracts/utils/math/Math.sol",
        "file": "OpenZeppelin/openzeppelin-contracts@4.0.0/contracts/utils/math/Math.sol",
        "id": 942,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1682,
        "sourceUnit": 2019,
        "src": "111:81:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/kylescott/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.0.0/contracts/token/ERC20/utils/SafeERC20.sol",
        "file": "OpenZeppelin/openzeppelin-contracts@4.0.0/contracts/token/ERC20/utils/SafeERC20.sol",
        "id": 943,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1682,
        "sourceUnit": 1946,
        "src": "193:93:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/kylescott/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.0.0/contracts/security/ReentrancyGuard.sol",
        "file": "OpenZeppelin/openzeppelin-contracts@4.0.0/contracts/security/ReentrancyGuard.sol",
        "id": 944,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1682,
        "sourceUnit": 1722,
        "src": "287:90:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/IStakingRewards.sol",
        "file": "../../interfaces/IStakingRewards.sol",
        "id": 945,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1682,
        "sourceUnit": 2411,
        "src": "394:46:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 946,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".3"
        ],
        "nodeType": "PragmaDirective",
        "src": "442:23:7"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 1052,
        "linearizedBaseContracts": [
          1052
        ],
        "name": "Owned",
        "nameLocation": "539:5:7",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "8da5cb5b",
            "id": 948,
            "mutability": "mutable",
            "name": "owner",
            "nameLocation": "566:5:7",
            "nodeType": "VariableDeclaration",
            "scope": 1052,
            "src": "551:20:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 947,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "551:7:7",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "53a47bb7",
            "id": 950,
            "mutability": "mutable",
            "name": "nominatedOwner",
            "nameLocation": "592:14:7",
            "nodeType": "VariableDeclaration",
            "scope": 1052,
            "src": "577:29:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 949,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "577:7:7",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 977,
              "nodeType": "Block",
              "src": "641:146:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 961,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 956,
                          "name": "_owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 952,
                          "src": "659:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 959,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "677:1:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 958,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "669:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 957,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "669:7:7",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 960,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "669:10:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "659:20:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f776e657220616464726573732063616e6e6f742062652030",
                        "id": 962,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "681:27:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_cbb17bca9ae641614fb20d9f081dbba535c7a48d3eadd7b25242a97252df8c96",
                          "typeString": "literal_string \"Owner address cannot be 0\""
                        },
                        "value": "Owner address cannot be 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_cbb17bca9ae641614fb20d9f081dbba535c7a48d3eadd7b25242a97252df8c96",
                          "typeString": "literal_string \"Owner address cannot be 0\""
                        }
                      ],
                      "id": 955,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "651:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 963,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "651:58:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 964,
                  "nodeType": "ExpressionStatement",
                  "src": "651:58:7"
                },
                {
                  "expression": {
                    "id": 967,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 965,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 948,
                      "src": "719:5:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 966,
                      "name": "_owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 952,
                      "src": "727:6:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "719:14:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 968,
                  "nodeType": "ExpressionStatement",
                  "src": "719:14:7"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 972,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "769:1:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 971,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "761:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 970,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "761:7:7",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 973,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "761:10:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 974,
                        "name": "_owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 952,
                        "src": "773:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 969,
                      "name": "OwnerChanged",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1051,
                      "src": "748:12:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 975,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "748:32:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 976,
                  "nodeType": "EmitStatement",
                  "src": "743:37:7"
                }
              ]
            },
            "id": 978,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 953,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 952,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nameLocation": "633:6:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 978,
                  "src": "625:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 951,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "625:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "624:16:7"
            },
            "returnParameters": {
              "id": 954,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "641:0:7"
            },
            "scope": 1052,
            "src": "613:174:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 993,
              "nodeType": "Block",
              "src": "854:77:7",
              "statements": [
                {
                  "expression": {
                    "id": 987,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 985,
                      "name": "nominatedOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 950,
                      "src": "864:14:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 986,
                      "name": "_owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 980,
                      "src": "881:6:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "864:23:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 988,
                  "nodeType": "ExpressionStatement",
                  "src": "864:23:7"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 990,
                        "name": "_owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 980,
                        "src": "917:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 989,
                      "name": "OwnerNominated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1045,
                      "src": "902:14:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 991,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "902:22:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 992,
                  "nodeType": "EmitStatement",
                  "src": "897:27:7"
                }
              ]
            },
            "functionSelector": "1627540c",
            "id": 994,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 983,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 982,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1029,
                  "src": "844:9:7"
                },
                "nodeType": "ModifierInvocation",
                "src": "844:9:7"
              }
            ],
            "name": "nominateNewOwner",
            "nameLocation": "802:16:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 981,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 980,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nameLocation": "827:6:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 994,
                  "src": "819:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 979,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "819:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "818:16:7"
            },
            "returnParameters": {
              "id": 984,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "854:0:7"
            },
            "scope": 1052,
            "src": "793:138:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1021,
              "nodeType": "Block",
              "src": "973:230:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1001,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 998,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "991:3:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 999,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "991:10:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 1000,
                          "name": "nominatedOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 950,
                          "src": "1005:14:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "991:28:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f75206d757374206265206e6f6d696e61746564206265666f726520796f752063616e20616363657074206f776e657273686970",
                        "id": 1002,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1021:55:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1149e36cd24095bebc9341ef03810e0e2a00039190624df6f2d7934141e2233b",
                          "typeString": "literal_string \"You must be nominated before you can accept ownership\""
                        },
                        "value": "You must be nominated before you can accept ownership"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1149e36cd24095bebc9341ef03810e0e2a00039190624df6f2d7934141e2233b",
                          "typeString": "literal_string \"You must be nominated before you can accept ownership\""
                        }
                      ],
                      "id": 997,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "983:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1003,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "983:94:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1004,
                  "nodeType": "ExpressionStatement",
                  "src": "983:94:7"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1006,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 948,
                        "src": "1105:5:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1007,
                        "name": "nominatedOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 950,
                        "src": "1112:14:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1005,
                      "name": "OwnerChanged",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1051,
                      "src": "1092:12:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 1008,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1092:35:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1009,
                  "nodeType": "EmitStatement",
                  "src": "1087:40:7"
                },
                {
                  "expression": {
                    "id": 1012,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1010,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 948,
                      "src": "1137:5:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1011,
                      "name": "nominatedOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 950,
                      "src": "1145:14:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1137:22:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1013,
                  "nodeType": "ExpressionStatement",
                  "src": "1137:22:7"
                },
                {
                  "expression": {
                    "id": 1019,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1014,
                      "name": "nominatedOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 950,
                      "src": "1169:14:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 1017,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1194:1:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 1016,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1186:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 1015,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1186:7:7",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 1018,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1186:10:7",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1169:27:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1020,
                  "nodeType": "ExpressionStatement",
                  "src": "1169:27:7"
                }
              ]
            },
            "functionSelector": "79ba5097",
            "id": 1022,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "acceptOwnership",
            "nameLocation": "946:15:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 995,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "961:2:7"
            },
            "returnParameters": {
              "id": 996,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "973:0:7"
            },
            "scope": 1052,
            "src": "937:266:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1028,
              "nodeType": "Block",
              "src": "1228:40:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 1024,
                      "name": "_onlyOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1041,
                      "src": "1238:10:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$__$",
                        "typeString": "function () view"
                      }
                    },
                    "id": 1025,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1238:12:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1026,
                  "nodeType": "ExpressionStatement",
                  "src": "1238:12:7"
                },
                {
                  "id": 1027,
                  "nodeType": "PlaceholderStatement",
                  "src": "1260:1:7"
                }
              ]
            },
            "id": 1029,
            "name": "onlyOwner",
            "nameLocation": "1218:9:7",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 1023,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1228:0:7"
            },
            "src": "1209:59:7",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1040,
              "nodeType": "Block",
              "src": "1309:96:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1036,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1033,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1327:3:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1034,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1327:10:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 1035,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 948,
                          "src": "1341:5:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1327:19:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c792074686520636f6e7472616374206f776e6572206d617920706572666f726d207468697320616374696f6e",
                        "id": 1037,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1348:49:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_873d2051b76e0142b287297afdfc273bf1ab5c24ee229ed4ef117f1ff0679a4a",
                          "typeString": "literal_string \"Only the contract owner may perform this action\""
                        },
                        "value": "Only the contract owner may perform this action"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_873d2051b76e0142b287297afdfc273bf1ab5c24ee229ed4ef117f1ff0679a4a",
                          "typeString": "literal_string \"Only the contract owner may perform this action\""
                        }
                      ],
                      "id": 1032,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1319:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1038,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1319:79:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1039,
                  "nodeType": "ExpressionStatement",
                  "src": "1319:79:7"
                }
              ]
            },
            "id": 1041,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_onlyOwner",
            "nameLocation": "1283:10:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1030,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1293:2:7"
            },
            "returnParameters": {
              "id": 1031,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1309:0:7"
            },
            "scope": 1052,
            "src": "1274:131:7",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "private"
          },
          {
            "anonymous": false,
            "id": 1045,
            "name": "OwnerNominated",
            "nameLocation": "1417:14:7",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1044,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1043,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "newOwner",
                  "nameLocation": "1440:8:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1045,
                  "src": "1432:16:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1042,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1432:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1431:18:7"
            },
            "src": "1411:39:7"
          },
          {
            "anonymous": false,
            "id": 1051,
            "name": "OwnerChanged",
            "nameLocation": "1461:12:7",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1050,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1047,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "oldOwner",
                  "nameLocation": "1482:8:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1051,
                  "src": "1474:16:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1046,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1474:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1049,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "newOwner",
                  "nameLocation": "1500:8:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1051,
                  "src": "1492:16:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1048,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1492:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1473:36:7"
            },
            "src": "1455:55:7"
          }
        ],
        "scope": 1682,
        "src": "530:982:7",
        "usedErrors": []
      },
      {
        "abstract": true,
        "baseContracts": [
          {
            "baseName": {
              "id": 1053,
              "name": "Owned",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1052,
              "src": "1650:5:7"
            },
            "id": 1054,
            "nodeType": "InheritanceSpecifier",
            "src": "1650:5:7"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": false,
        "id": 1086,
        "linearizedBaseContracts": [
          1086,
          1052
        ],
        "name": "RewardsDistributionRecipient",
        "nameLocation": "1618:28:7",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "3fc6df6e",
            "id": 1056,
            "mutability": "mutable",
            "name": "rewardsDistribution",
            "nameLocation": "1677:19:7",
            "nodeType": "VariableDeclaration",
            "scope": 1086,
            "src": "1662:34:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1055,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1662:7:7",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "functionSelector": "3c6b16ab",
            "id": 1061,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "notifyRewardAmount",
            "nameLocation": "1712:18:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1059,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1058,
                  "mutability": "mutable",
                  "name": "reward",
                  "nameLocation": "1739:6:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1061,
                  "src": "1731:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1057,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1731:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1730:16:7"
            },
            "returnParameters": {
              "id": 1060,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1763:0:7"
            },
            "scope": 1086,
            "src": "1703:61:7",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1072,
              "nodeType": "Block",
              "src": "1805:116:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1067,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1064,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1823:3:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1065,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1823:10:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 1066,
                          "name": "rewardsDistribution",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1056,
                          "src": "1837:19:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1823:33:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "43616c6c6572206973206e6f742052657761726473446973747269627574696f6e20636f6e7472616374",
                        "id": 1068,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1858:44:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d50b095422f4cbfcb4c90fbd4d55aaf0967bf1d90e94bb6a1ae9fc4ee7e733de",
                          "typeString": "literal_string \"Caller is not RewardsDistribution contract\""
                        },
                        "value": "Caller is not RewardsDistribution contract"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d50b095422f4cbfcb4c90fbd4d55aaf0967bf1d90e94bb6a1ae9fc4ee7e733de",
                          "typeString": "literal_string \"Caller is not RewardsDistribution contract\""
                        }
                      ],
                      "id": 1063,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1815:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1069,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1815:88:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1070,
                  "nodeType": "ExpressionStatement",
                  "src": "1815:88:7"
                },
                {
                  "id": 1071,
                  "nodeType": "PlaceholderStatement",
                  "src": "1913:1:7"
                }
              ]
            },
            "id": 1073,
            "name": "onlyRewardsDistribution",
            "nameLocation": "1779:23:7",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 1062,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1802:2:7"
            },
            "src": "1770:151:7",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1084,
              "nodeType": "Block",
              "src": "2008:59:7",
              "statements": [
                {
                  "expression": {
                    "id": 1082,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1080,
                      "name": "rewardsDistribution",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1056,
                      "src": "2018:19:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1081,
                      "name": "_rewardsDistribution",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1075,
                      "src": "2040:20:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2018:42:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1083,
                  "nodeType": "ExpressionStatement",
                  "src": "2018:42:7"
                }
              ]
            },
            "functionSelector": "19762143",
            "id": 1085,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1078,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1077,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1029,
                  "src": "1998:9:7"
                },
                "nodeType": "ModifierInvocation",
                "src": "1998:9:7"
              }
            ],
            "name": "setRewardsDistribution",
            "nameLocation": "1936:22:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1076,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1075,
                  "mutability": "mutable",
                  "name": "_rewardsDistribution",
                  "nameLocation": "1967:20:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1085,
                  "src": "1959:28:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1074,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1959:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1958:30:7"
            },
            "returnParameters": {
              "id": 1079,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2008:0:7"
            },
            "scope": 1086,
            "src": "1927:140:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 1682,
        "src": "1600:469:7",
        "usedErrors": []
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 1087,
              "name": "IStakingRewards",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2410,
              "src": "2198:15:7"
            },
            "id": 1088,
            "nodeType": "InheritanceSpecifier",
            "src": "2198:15:7"
          },
          {
            "baseName": {
              "id": 1089,
              "name": "RewardsDistributionRecipient",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1086,
              "src": "2215:28:7"
            },
            "id": 1090,
            "nodeType": "InheritanceSpecifier",
            "src": "2215:28:7"
          },
          {
            "baseName": {
              "id": 1091,
              "name": "ReentrancyGuard",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1721,
              "src": "2245:15:7"
            },
            "id": 1092,
            "nodeType": "InheritanceSpecifier",
            "src": "2245:15:7"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 1681,
        "linearizedBaseContracts": [
          1681,
          1721,
          1086,
          1052,
          2410
        ],
        "name": "MockStakingRewards",
        "nameLocation": "2176:18:7",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 1095,
            "libraryName": {
              "id": 1093,
              "name": "SafeMath",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2330,
              "src": "2273:8:7"
            },
            "nodeType": "UsingForDirective",
            "src": "2267:27:7",
            "typeName": {
              "id": 1094,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2286:7:7",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 1099,
            "libraryName": {
              "id": 1096,
              "name": "SafeERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1945,
              "src": "2305:9:7"
            },
            "nodeType": "UsingForDirective",
            "src": "2299:27:7",
            "typeName": {
              "id": 1098,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 1097,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 2488,
                "src": "2319:6:7"
              },
              "referencedDeclaration": 2488,
              "src": "2319:6:7",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$2488",
                "typeString": "contract IERC20"
              }
            }
          },
          {
            "constant": false,
            "functionSelector": "d1af0c7d",
            "id": 1102,
            "mutability": "mutable",
            "name": "rewardsToken",
            "nameLocation": "2395:12:7",
            "nodeType": "VariableDeclaration",
            "scope": 1681,
            "src": "2381:26:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$2488",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 1101,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 1100,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 2488,
                "src": "2381:6:7"
              },
              "referencedDeclaration": 2488,
              "src": "2381:6:7",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$2488",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "72f702f3",
            "id": 1105,
            "mutability": "mutable",
            "name": "stakingToken",
            "nameLocation": "2427:12:7",
            "nodeType": "VariableDeclaration",
            "scope": 1681,
            "src": "2413:26:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$2488",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 1104,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 1103,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 2488,
                "src": "2413:6:7"
              },
              "referencedDeclaration": 2488,
              "src": "2413:6:7",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$2488",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "ebe2b12b",
            "id": 1108,
            "mutability": "mutable",
            "name": "periodFinish",
            "nameLocation": "2460:12:7",
            "nodeType": "VariableDeclaration",
            "scope": 1681,
            "src": "2445:31:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1106,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2445:7:7",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "30",
              "id": 1107,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2475:1:7",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "7b0a47ee",
            "id": 1111,
            "mutability": "mutable",
            "name": "rewardRate",
            "nameLocation": "2497:10:7",
            "nodeType": "VariableDeclaration",
            "scope": 1681,
            "src": "2482:29:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1109,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2482:7:7",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "30",
              "id": 1110,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2510:1:7",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "386a9525",
            "id": 1114,
            "mutability": "mutable",
            "name": "rewardsDuration",
            "nameLocation": "2532:15:7",
            "nodeType": "VariableDeclaration",
            "scope": 1681,
            "src": "2517:39:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1112,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2517:7:7",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "37",
              "id": 1113,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2550:6:7",
              "subdenomination": "days",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_604800_by_1",
                "typeString": "int_const 604800"
              },
              "value": "7"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "c8f33c91",
            "id": 1116,
            "mutability": "mutable",
            "name": "lastUpdateTime",
            "nameLocation": "2577:14:7",
            "nodeType": "VariableDeclaration",
            "scope": 1681,
            "src": "2562:29:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1115,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2562:7:7",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "df136d65",
            "id": 1118,
            "mutability": "mutable",
            "name": "rewardPerTokenStored",
            "nameLocation": "2612:20:7",
            "nodeType": "VariableDeclaration",
            "scope": 1681,
            "src": "2597:35:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1117,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2597:7:7",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "8b876347",
            "id": 1122,
            "mutability": "mutable",
            "name": "userRewardPerTokenPaid",
            "nameLocation": "2674:22:7",
            "nodeType": "VariableDeclaration",
            "scope": 1681,
            "src": "2639:57:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 1121,
              "keyType": {
                "id": 1119,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "2647:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "2639:27:7",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 1120,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "2658:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "0700037d",
            "id": 1126,
            "mutability": "mutable",
            "name": "rewards",
            "nameLocation": "2737:7:7",
            "nodeType": "VariableDeclaration",
            "scope": 1681,
            "src": "2702:42:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 1125,
              "keyType": {
                "id": 1123,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "2710:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "2702:27:7",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 1124,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "2721:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 1128,
            "mutability": "mutable",
            "name": "_totalSupply",
            "nameLocation": "2767:12:7",
            "nodeType": "VariableDeclaration",
            "scope": 1681,
            "src": "2751:28:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1127,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2751:7:7",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 1132,
            "mutability": "mutable",
            "name": "_balances",
            "nameLocation": "2821:9:7",
            "nodeType": "VariableDeclaration",
            "scope": 1681,
            "src": "2785:45:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 1131,
              "keyType": {
                "id": 1129,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "2793:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "2785:27:7",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 1130,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "2804:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 1162,
              "nodeType": "Block",
              "src": "3038:151:7",
              "statements": [
                {
                  "expression": {
                    "id": 1150,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1146,
                      "name": "rewardsToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1102,
                      "src": "3048:12:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$2488",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 1148,
                          "name": "_rewardsToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1138,
                          "src": "3070:13:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 1147,
                        "name": "IERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2488,
                        "src": "3063:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC20_$2488_$",
                          "typeString": "type(contract IERC20)"
                        }
                      },
                      "id": 1149,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3063:21:7",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$2488",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "3048:36:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$2488",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 1151,
                  "nodeType": "ExpressionStatement",
                  "src": "3048:36:7"
                },
                {
                  "expression": {
                    "id": 1156,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1152,
                      "name": "stakingToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1105,
                      "src": "3094:12:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$2488",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 1154,
                          "name": "_stakingToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1140,
                          "src": "3116:13:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 1153,
                        "name": "IERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2488,
                        "src": "3109:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC20_$2488_$",
                          "typeString": "type(contract IERC20)"
                        }
                      },
                      "id": 1155,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3109:21:7",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$2488",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "3094:36:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$2488",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 1157,
                  "nodeType": "ExpressionStatement",
                  "src": "3094:36:7"
                },
                {
                  "expression": {
                    "id": 1160,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1158,
                      "name": "rewardsDistribution",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1056,
                      "src": "3140:19:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1159,
                      "name": "_rewardsDistribution",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1136,
                      "src": "3162:20:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3140:42:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1161,
                  "nodeType": "ExpressionStatement",
                  "src": "3140:42:7"
                }
              ]
            },
            "id": 1163,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 1143,
                    "name": "_owner",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1134,
                    "src": "3030:6:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 1144,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 1142,
                  "name": "Owned",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1052,
                  "src": "3024:5:7"
                },
                "nodeType": "ModifierInvocation",
                "src": "3024:13:7"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1141,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1134,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nameLocation": "2911:6:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1163,
                  "src": "2903:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1133,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2903:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1136,
                  "mutability": "mutable",
                  "name": "_rewardsDistribution",
                  "nameLocation": "2935:20:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1163,
                  "src": "2927:28:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1135,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2927:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1138,
                  "mutability": "mutable",
                  "name": "_rewardsToken",
                  "nameLocation": "2973:13:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1163,
                  "src": "2965:21:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1137,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2965:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1140,
                  "mutability": "mutable",
                  "name": "_stakingToken",
                  "nameLocation": "3004:13:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1163,
                  "src": "2996:21:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1139,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2996:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2893:130:7"
            },
            "returnParameters": {
              "id": 1145,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3038:0:7"
            },
            "scope": 1681,
            "src": "2882:307:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              2386
            ],
            "body": {
              "id": 1171,
              "nodeType": "Block",
              "src": "3298:36:7",
              "statements": [
                {
                  "expression": {
                    "id": 1169,
                    "name": "_totalSupply",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1128,
                    "src": "3315:12:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1168,
                  "id": 1170,
                  "nodeType": "Return",
                  "src": "3308:19:7"
                }
              ]
            },
            "functionSelector": "18160ddd",
            "id": 1172,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "totalSupply",
            "nameLocation": "3243:11:7",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1165,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3271:8:7"
            },
            "parameters": {
              "id": 1164,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3254:2:7"
            },
            "returnParameters": {
              "id": 1168,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1167,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1172,
                  "src": "3289:7:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1166,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3289:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3288:9:7"
            },
            "scope": 1681,
            "src": "3234:100:7",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              2393
            ],
            "body": {
              "id": 1184,
              "nodeType": "Block",
              "src": "3417:42:7",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 1180,
                      "name": "_balances",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1132,
                      "src": "3434:9:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 1182,
                    "indexExpression": {
                      "id": 1181,
                      "name": "account",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1174,
                      "src": "3444:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3434:18:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1179,
                  "id": 1183,
                  "nodeType": "Return",
                  "src": "3427:25:7"
                }
              ]
            },
            "functionSelector": "70a08231",
            "id": 1185,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOf",
            "nameLocation": "3349:9:7",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1176,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3390:8:7"
            },
            "parameters": {
              "id": 1175,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1174,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "3367:7:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1185,
                  "src": "3359:15:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1173,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3359:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3358:17:7"
            },
            "returnParameters": {
              "id": 1179,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1178,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1185,
                  "src": "3408:7:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1177,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3408:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3407:9:7"
            },
            "scope": 1681,
            "src": "3340:119:7",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              2364
            ],
            "body": {
              "id": 1198,
              "nodeType": "Block",
              "src": "3540:63:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1193,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "3566:5:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 1194,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "3566:15:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1195,
                        "name": "periodFinish",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1108,
                        "src": "3583:12:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1191,
                        "name": "Math",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2018,
                        "src": "3557:4:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Math_$2018_$",
                          "typeString": "type(library Math)"
                        }
                      },
                      "id": 1192,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "min",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1984,
                      "src": "3557:8:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 1196,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3557:39:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1190,
                  "id": 1197,
                  "nodeType": "Return",
                  "src": "3550:46:7"
                }
              ]
            },
            "functionSelector": "80faa57d",
            "id": 1199,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "lastTimeRewardApplicable",
            "nameLocation": "3474:24:7",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1187,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3513:8:7"
            },
            "parameters": {
              "id": 1186,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3498:2:7"
            },
            "returnParameters": {
              "id": 1190,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1189,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1199,
                  "src": "3531:7:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1188,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3531:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3530:9:7"
            },
            "scope": 1681,
            "src": "3465:138:7",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              2369
            ],
            "body": {
              "id": 1230,
              "nodeType": "Block",
              "src": "3674:266:7",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1207,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1205,
                      "name": "_totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1128,
                      "src": "3688:12:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 1206,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3704:1:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "3688:17:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1211,
                  "nodeType": "IfStatement",
                  "src": "3684:75:7",
                  "trueBody": {
                    "id": 1210,
                    "nodeType": "Block",
                    "src": "3707:52:7",
                    "statements": [
                      {
                        "expression": {
                          "id": 1208,
                          "name": "rewardPerTokenStored",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1118,
                          "src": "3728:20:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 1204,
                        "id": 1209,
                        "nodeType": "Return",
                        "src": "3721:27:7"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1226,
                            "name": "_totalSupply",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1128,
                            "src": "3906:12:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "hexValue": "31653138",
                                "id": 1223,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3896:4:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                  "typeString": "int_const 1000000000000000000"
                                },
                                "value": "1e18"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                  "typeString": "int_const 1000000000000000000"
                                }
                              ],
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 1220,
                                    "name": "rewardRate",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1111,
                                    "src": "3880:10:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 1217,
                                        "name": "lastUpdateTime",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1116,
                                        "src": "3860:14:7",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "expression": {
                                        "arguments": [],
                                        "expression": {
                                          "argumentTypes": [],
                                          "id": 1214,
                                          "name": "lastTimeRewardApplicable",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1199,
                                          "src": "3829:24:7",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                            "typeString": "function () view returns (uint256)"
                                          }
                                        },
                                        "id": 1215,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "3829:26:7",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "id": 1216,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "sub",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 2209,
                                      "src": "3829:30:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                                      }
                                    },
                                    "id": 1218,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "3829:46:7",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 1219,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "mul",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2224,
                                  "src": "3829:50:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                    "typeString": "function (uint256,uint256) pure returns (uint256)"
                                  }
                                },
                                "id": 1221,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3829:62:7",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1222,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "mul",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2224,
                              "src": "3829:66:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 1224,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3829:72:7",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1225,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "div",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2239,
                          "src": "3829:76:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 1227,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3829:90:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1212,
                        "name": "rewardPerTokenStored",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1118,
                        "src": "3787:20:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 1213,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "add",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2194,
                      "src": "3787:24:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 1228,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3787:146:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1204,
                  "id": 1229,
                  "nodeType": "Return",
                  "src": "3768:165:7"
                }
              ]
            },
            "functionSelector": "cd3daf9d",
            "id": 1231,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "rewardPerToken",
            "nameLocation": "3618:14:7",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1201,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3647:8:7"
            },
            "parameters": {
              "id": 1200,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3632:2:7"
            },
            "returnParameters": {
              "id": 1204,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1203,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1231,
                  "src": "3665:7:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1202,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3665:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3664:9:7"
            },
            "scope": 1681,
            "src": "3609:331:7",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              2376
            ],
            "body": {
              "id": 1260,
              "nodeType": "Block",
              "src": "4018:133:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 1255,
                          "name": "rewards",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1126,
                          "src": "4127:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                          }
                        },
                        "id": 1257,
                        "indexExpression": {
                          "id": 1256,
                          "name": "account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1233,
                          "src": "4135:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4127:16:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "hexValue": "31653138",
                            "id": 1252,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4117:4:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            },
                            "value": "1e18"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "baseExpression": {
                                      "id": 1246,
                                      "name": "userRewardPerTokenPaid",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1122,
                                      "src": "4079:22:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                        "typeString": "mapping(address => uint256)"
                                      }
                                    },
                                    "id": 1248,
                                    "indexExpression": {
                                      "id": 1247,
                                      "name": "account",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1233,
                                      "src": "4102:7:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "4079:31:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "arguments": [],
                                    "expression": {
                                      "argumentTypes": [],
                                      "id": 1243,
                                      "name": "rewardPerToken",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1231,
                                      "src": "4058:14:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                        "typeString": "function () view returns (uint256)"
                                      }
                                    },
                                    "id": 1244,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "4058:16:7",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 1245,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sub",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2209,
                                  "src": "4058:20:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                    "typeString": "function (uint256,uint256) pure returns (uint256)"
                                  }
                                },
                                "id": 1249,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4058:53:7",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "baseExpression": {
                                  "id": 1239,
                                  "name": "_balances",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1132,
                                  "src": "4035:9:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                    "typeString": "mapping(address => uint256)"
                                  }
                                },
                                "id": 1241,
                                "indexExpression": {
                                  "id": 1240,
                                  "name": "account",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1233,
                                  "src": "4045:7:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "4035:18:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1242,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "mul",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2224,
                              "src": "4035:22:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 1250,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4035:77:7",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1251,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "div",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2239,
                          "src": "4035:81:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 1253,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4035:87:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 1254,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "add",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2194,
                      "src": "4035:91:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 1258,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4035:109:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1238,
                  "id": 1259,
                  "nodeType": "Return",
                  "src": "4028:116:7"
                }
              ]
            },
            "functionSelector": "008cc262",
            "id": 1261,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "earned",
            "nameLocation": "3955:6:7",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1235,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3991:8:7"
            },
            "parameters": {
              "id": 1234,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1233,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "3970:7:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1261,
                  "src": "3962:15:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1232,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3962:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3961:17:7"
            },
            "returnParameters": {
              "id": 1238,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1237,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1261,
                  "src": "4009:7:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1236,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4009:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4008:9:7"
            },
            "scope": 1681,
            "src": "3946:205:7",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              2381
            ],
            "body": {
              "id": 1272,
              "nodeType": "Block",
              "src": "4230:55:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1269,
                        "name": "rewardsDuration",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1114,
                        "src": "4262:15:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1267,
                        "name": "rewardRate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1111,
                        "src": "4247:10:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 1268,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mul",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2224,
                      "src": "4247:14:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 1270,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4247:31:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1266,
                  "id": 1271,
                  "nodeType": "Return",
                  "src": "4240:38:7"
                }
              ]
            },
            "functionSelector": "1c1f78eb",
            "id": 1273,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getRewardForDuration",
            "nameLocation": "4166:20:7",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1263,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4203:8:7"
            },
            "parameters": {
              "id": 1262,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4186:2:7"
            },
            "returnParameters": {
              "id": 1266,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1265,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1273,
                  "src": "4221:7:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1264,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4221:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4220:9:7"
            },
            "scope": 1681,
            "src": "4157:128:7",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              2398
            ],
            "body": {
              "id": 1330,
              "nodeType": "Block",
              "src": "4460:285:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1288,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1286,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1275,
                          "src": "4478:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1287,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4487:1:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "4478:10:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "43616e6e6f74207374616b652030",
                        "id": 1289,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4490:16:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2972ce884b95fc24c703b7f04fae79e4ca7287e77fa26ed09d1faa4263e887ab",
                          "typeString": "literal_string \"Cannot stake 0\""
                        },
                        "value": "Cannot stake 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2972ce884b95fc24c703b7f04fae79e4ca7287e77fa26ed09d1faa4263e887ab",
                          "typeString": "literal_string \"Cannot stake 0\""
                        }
                      ],
                      "id": 1285,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4470:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1290,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4470:37:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1291,
                  "nodeType": "ExpressionStatement",
                  "src": "4470:37:7"
                },
                {
                  "expression": {
                    "id": 1297,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1292,
                      "name": "_totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1128,
                      "src": "4517:12:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 1295,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1275,
                          "src": "4549:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 1293,
                          "name": "_totalSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1128,
                          "src": "4532:12:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1294,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2194,
                        "src": "4532:16:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 1296,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4532:24:7",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4517:39:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1298,
                  "nodeType": "ExpressionStatement",
                  "src": "4517:39:7"
                },
                {
                  "expression": {
                    "id": 1310,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1299,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1132,
                        "src": "4566:9:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1302,
                      "indexExpression": {
                        "expression": {
                          "id": 1300,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4576:3:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1301,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4576:10:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4566:21:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 1308,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1275,
                          "src": "4616:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "baseExpression": {
                            "id": 1303,
                            "name": "_balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1132,
                            "src": "4590:9:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 1306,
                          "indexExpression": {
                            "expression": {
                              "id": 1304,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "4600:3:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1305,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "4600:10:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4590:21:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1307,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2194,
                        "src": "4590:25:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 1309,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4590:33:7",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4566:57:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1311,
                  "nodeType": "ExpressionStatement",
                  "src": "4566:57:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1315,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4663:3:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1316,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4663:10:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 1319,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "4683:4:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockStakingRewards_$1681",
                              "typeString": "contract MockStakingRewards"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MockStakingRewards_$1681",
                              "typeString": "contract MockStakingRewards"
                            }
                          ],
                          "id": 1318,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4675:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1317,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4675:7:7",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1320,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4675:13:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1321,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1275,
                        "src": "4690:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1312,
                        "name": "stakingToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1105,
                        "src": "4633:12:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$2488",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 1314,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1778,
                      "src": "4633:29:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$2488_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$2488_$",
                        "typeString": "function (contract IERC20,address,address,uint256)"
                      }
                    },
                    "id": 1322,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4633:64:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1323,
                  "nodeType": "ExpressionStatement",
                  "src": "4633:64:7"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1325,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4719:3:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1326,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4719:10:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1327,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1275,
                        "src": "4731:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1324,
                      "name": "Staked",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1658,
                      "src": "4712:6:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1328,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4712:26:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1329,
                  "nodeType": "EmitStatement",
                  "src": "4707:31:7"
                }
              ]
            },
            "functionSelector": "a694fc3a",
            "id": 1331,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1279,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1278,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1720,
                  "src": "4422:12:7"
                },
                "nodeType": "ModifierInvocation",
                "src": "4422:12:7"
              },
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 1281,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -15,
                      "src": "4448:3:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 1282,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "4448:10:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 1283,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1280,
                  "name": "updateReward",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1648,
                  "src": "4435:12:7"
                },
                "nodeType": "ModifierInvocation",
                "src": "4435:24:7"
              }
            ],
            "name": "stake",
            "nameLocation": "4382:5:7",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1277,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4413:8:7"
            },
            "parameters": {
              "id": 1276,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1275,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "4396:6:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1331,
                  "src": "4388:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1274,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4388:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4387:16:7"
            },
            "returnParameters": {
              "id": 1284,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4460:0:7"
            },
            "scope": 1681,
            "src": "4373:372:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              2403
            ],
            "body": {
              "id": 1384,
              "nodeType": "Block",
              "src": "4839:272:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1346,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1344,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1333,
                          "src": "4857:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1345,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4866:1:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "4857:10:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "43616e6e6f742077697468647261772030",
                        "id": 1347,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4869:19:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8d85b8e7f4404d04d93e8d532ad219ceeba0becfbc18622bad46b31e08b1f0b0",
                          "typeString": "literal_string \"Cannot withdraw 0\""
                        },
                        "value": "Cannot withdraw 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8d85b8e7f4404d04d93e8d532ad219ceeba0becfbc18622bad46b31e08b1f0b0",
                          "typeString": "literal_string \"Cannot withdraw 0\""
                        }
                      ],
                      "id": 1343,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4849:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1348,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4849:40:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1349,
                  "nodeType": "ExpressionStatement",
                  "src": "4849:40:7"
                },
                {
                  "expression": {
                    "id": 1355,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1350,
                      "name": "_totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1128,
                      "src": "4899:12:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 1353,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1333,
                          "src": "4931:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 1351,
                          "name": "_totalSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1128,
                          "src": "4914:12:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1352,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2209,
                        "src": "4914:16:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 1354,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4914:24:7",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4899:39:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1356,
                  "nodeType": "ExpressionStatement",
                  "src": "4899:39:7"
                },
                {
                  "expression": {
                    "id": 1368,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1357,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1132,
                        "src": "4948:9:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1360,
                      "indexExpression": {
                        "expression": {
                          "id": 1358,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4958:3:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1359,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4958:10:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4948:21:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 1366,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1333,
                          "src": "4998:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "baseExpression": {
                            "id": 1361,
                            "name": "_balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1132,
                            "src": "4972:9:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 1364,
                          "indexExpression": {
                            "expression": {
                              "id": 1362,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "4982:3:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1363,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "4982:10:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4972:21:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1365,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2209,
                        "src": "4972:25:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 1367,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4972:33:7",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4948:57:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1369,
                  "nodeType": "ExpressionStatement",
                  "src": "4948:57:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1373,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "5041:3:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1374,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5041:10:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1375,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1333,
                        "src": "5053:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1370,
                        "name": "stakingToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1105,
                        "src": "5015:12:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$2488",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 1372,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1752,
                      "src": "5015:25:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$2488_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$2488_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 1376,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5015:45:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1377,
                  "nodeType": "ExpressionStatement",
                  "src": "5015:45:7"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1379,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "5085:3:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1380,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5085:10:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1381,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1333,
                        "src": "5097:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1378,
                      "name": "Withdrawn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1664,
                      "src": "5075:9:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1382,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5075:29:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1383,
                  "nodeType": "EmitStatement",
                  "src": "5070:34:7"
                }
              ]
            },
            "functionSelector": "2e1a7d4d",
            "id": 1385,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1337,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1336,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1720,
                  "src": "4801:12:7"
                },
                "nodeType": "ModifierInvocation",
                "src": "4801:12:7"
              },
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 1339,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -15,
                      "src": "4827:3:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 1340,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "4827:10:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 1341,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1338,
                  "name": "updateReward",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1648,
                  "src": "4814:12:7"
                },
                "nodeType": "ModifierInvocation",
                "src": "4814:24:7"
              }
            ],
            "name": "withdraw",
            "nameLocation": "4760:8:7",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1335,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4792:8:7"
            },
            "parameters": {
              "id": 1334,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1333,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "4777:6:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1385,
                  "src": "4769:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1332,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4769:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4768:16:7"
            },
            "returnParameters": {
              "id": 1342,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4839:0:7"
            },
            "scope": 1681,
            "src": "4751:360:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              2406
            ],
            "body": {
              "id": 1428,
              "nodeType": "Block",
              "src": "5192:234:7",
              "statements": [
                {
                  "assignments": [
                    1396
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1396,
                      "mutability": "mutable",
                      "name": "reward",
                      "nameLocation": "5210:6:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 1428,
                      "src": "5202:14:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1395,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5202:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1401,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1397,
                      "name": "rewards",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1126,
                      "src": "5219:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 1400,
                    "indexExpression": {
                      "expression": {
                        "id": 1398,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "5227:3:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 1399,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "5227:10:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "5219:19:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5202:36:7"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1404,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1402,
                      "name": "reward",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1396,
                      "src": "5252:6:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 1403,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5261:1:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "5252:10:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1427,
                  "nodeType": "IfStatement",
                  "src": "5248:172:7",
                  "trueBody": {
                    "id": 1426,
                    "nodeType": "Block",
                    "src": "5264:156:7",
                    "statements": [
                      {
                        "expression": {
                          "id": 1410,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 1405,
                              "name": "rewards",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1126,
                              "src": "5278:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 1408,
                            "indexExpression": {
                              "expression": {
                                "id": 1406,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "5286:3:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1407,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "5286:10:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "5278:19:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "30",
                            "id": 1409,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5300:1:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "5278:23:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1411,
                        "nodeType": "ExpressionStatement",
                        "src": "5278:23:7"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1415,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "5341:3:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1416,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "5341:10:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1417,
                              "name": "reward",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1396,
                              "src": "5353:6:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 1412,
                              "name": "rewardsToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1102,
                              "src": "5315:12:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$2488",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 1414,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeTransfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1752,
                            "src": "5315:25:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$2488_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$2488_$",
                              "typeString": "function (contract IERC20,address,uint256)"
                            }
                          },
                          "id": 1418,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5315:45:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1419,
                        "nodeType": "ExpressionStatement",
                        "src": "5315:45:7"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1421,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "5390:3:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1422,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "5390:10:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1423,
                              "name": "reward",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1396,
                              "src": "5402:6:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1420,
                            "name": "RewardPaid",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1670,
                            "src": "5379:10:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 1424,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5379:30:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1425,
                        "nodeType": "EmitStatement",
                        "src": "5374:35:7"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "3d18b912",
            "id": 1429,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1389,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1388,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1720,
                  "src": "5154:12:7"
                },
                "nodeType": "ModifierInvocation",
                "src": "5154:12:7"
              },
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 1391,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -15,
                      "src": "5180:3:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 1392,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "5180:10:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 1393,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1390,
                  "name": "updateReward",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1648,
                  "src": "5167:12:7"
                },
                "nodeType": "ModifierInvocation",
                "src": "5167:24:7"
              }
            ],
            "name": "getReward",
            "nameLocation": "5126:9:7",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1387,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5145:8:7"
            },
            "parameters": {
              "id": 1386,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5135:2:7"
            },
            "returnParameters": {
              "id": 1394,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5192:0:7"
            },
            "scope": 1681,
            "src": "5117:309:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              2409
            ],
            "body": {
              "id": 1443,
              "nodeType": "Block",
              "src": "5466:69:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 1434,
                          "name": "_balances",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1132,
                          "src": "5485:9:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                          }
                        },
                        "id": 1437,
                        "indexExpression": {
                          "expression": {
                            "id": 1435,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "5495:3:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1436,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "5495:10:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5485:21:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1433,
                      "name": "withdraw",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1385,
                      "src": "5476:8:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 1438,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5476:31:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1439,
                  "nodeType": "ExpressionStatement",
                  "src": "5476:31:7"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 1440,
                      "name": "getReward",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1429,
                      "src": "5517:9:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 1441,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5517:11:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1442,
                  "nodeType": "ExpressionStatement",
                  "src": "5517:11:7"
                }
              ]
            },
            "functionSelector": "e9fad8ee",
            "id": 1444,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "exit",
            "nameLocation": "5441:4:7",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1431,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5457:8:7"
            },
            "parameters": {
              "id": 1430,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5445:2:7"
            },
            "returnParameters": {
              "id": 1432,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5466:0:7"
            },
            "scope": 1681,
            "src": "5432:103:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              1061
            ],
            "body": {
              "id": 1534,
              "nodeType": "Block",
              "src": "5706:962:7",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1461,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 1458,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "5720:5:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 1459,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "5720:15:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">=",
                    "rightExpression": {
                      "id": 1460,
                      "name": "periodFinish",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1108,
                      "src": "5739:12:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5720:31:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 1495,
                    "nodeType": "Block",
                    "src": "5824:204:7",
                    "statements": [
                      {
                        "assignments": [
                          1471
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1471,
                            "mutability": "mutable",
                            "name": "remaining",
                            "nameLocation": "5846:9:7",
                            "nodeType": "VariableDeclaration",
                            "scope": 1495,
                            "src": "5838:17:7",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1470,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "5838:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1477,
                        "initialValue": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1474,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "5875:5:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 1475,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "src": "5875:15:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 1472,
                              "name": "periodFinish",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1108,
                              "src": "5858:12:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 1473,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sub",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2209,
                            "src": "5858:16:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 1476,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5858:33:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5838:53:7"
                      },
                      {
                        "assignments": [
                          1479
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1479,
                            "mutability": "mutable",
                            "name": "leftover",
                            "nameLocation": "5913:8:7",
                            "nodeType": "VariableDeclaration",
                            "scope": 1495,
                            "src": "5905:16:7",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1478,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "5905:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1484,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 1482,
                              "name": "rewardRate",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1111,
                              "src": "5938:10:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 1480,
                              "name": "remaining",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1471,
                              "src": "5924:9:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 1481,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "mul",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2224,
                            "src": "5924:13:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 1483,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5924:25:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5905:44:7"
                      },
                      {
                        "expression": {
                          "id": 1493,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1485,
                            "name": "rewardRate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1111,
                            "src": "5963:10:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 1491,
                                "name": "rewardsDuration",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1114,
                                "src": "6001:15:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 1488,
                                    "name": "leftover",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1479,
                                    "src": "5987:8:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "id": 1486,
                                    "name": "reward",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1446,
                                    "src": "5976:6:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 1487,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "add",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2194,
                                  "src": "5976:10:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                    "typeString": "function (uint256,uint256) pure returns (uint256)"
                                  }
                                },
                                "id": 1489,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5976:20:7",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1490,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "div",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2239,
                              "src": "5976:24:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 1492,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5976:41:7",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5963:54:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1494,
                        "nodeType": "ExpressionStatement",
                        "src": "5963:54:7"
                      }
                    ]
                  },
                  "id": 1496,
                  "nodeType": "IfStatement",
                  "src": "5716:312:7",
                  "trueBody": {
                    "id": 1469,
                    "nodeType": "Block",
                    "src": "5753:65:7",
                    "statements": [
                      {
                        "expression": {
                          "id": 1467,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1462,
                            "name": "rewardRate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1111,
                            "src": "5767:10:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 1465,
                                "name": "rewardsDuration",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1114,
                                "src": "5791:15:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 1463,
                                "name": "reward",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1446,
                                "src": "5780:6:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1464,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "div",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2239,
                              "src": "5780:10:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 1466,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5780:27:7",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5767:40:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1468,
                        "nodeType": "ExpressionStatement",
                        "src": "5767:40:7"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    1498
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1498,
                      "mutability": "mutable",
                      "name": "balance",
                      "nameLocation": "6387:7:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 1534,
                      "src": "6382:12:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1497,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "6382:4:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1506,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1503,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "6428:4:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockStakingRewards_$1681",
                              "typeString": "contract MockStakingRewards"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MockStakingRewards_$1681",
                              "typeString": "contract MockStakingRewards"
                            }
                          ],
                          "id": 1502,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6420:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1501,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6420:7:7",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1504,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6420:13:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 1499,
                        "name": "rewardsToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1102,
                        "src": "6397:12:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$2488",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 1500,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2427,
                      "src": "6397:22:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 1505,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6397:37:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6382:52:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1513,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1508,
                          "name": "rewardRate",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1111,
                          "src": "6452:10:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 1511,
                              "name": "rewardsDuration",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1114,
                              "src": "6478:15:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 1509,
                              "name": "balance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1498,
                              "src": "6466:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 1510,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "div",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2239,
                            "src": "6466:11:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 1512,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6466:28:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6452:42:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "50726f76696465642072657761726420746f6f2068696768",
                        "id": 1514,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6496:26:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_af294828ccb7807394ab9c640e14eb2534ed0e75bb2e1346f1bb81dd84cda810",
                          "typeString": "literal_string \"Provided reward too high\""
                        },
                        "value": "Provided reward too high"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_af294828ccb7807394ab9c640e14eb2534ed0e75bb2e1346f1bb81dd84cda810",
                          "typeString": "literal_string \"Provided reward too high\""
                        }
                      ],
                      "id": 1507,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6444:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1515,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6444:79:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1516,
                  "nodeType": "ExpressionStatement",
                  "src": "6444:79:7"
                },
                {
                  "expression": {
                    "id": 1520,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1517,
                      "name": "lastUpdateTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1116,
                      "src": "6534:14:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 1518,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "6551:5:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 1519,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "6551:15:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6534:32:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1521,
                  "nodeType": "ExpressionStatement",
                  "src": "6534:32:7"
                },
                {
                  "expression": {
                    "id": 1528,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1522,
                      "name": "periodFinish",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1108,
                      "src": "6576:12:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 1526,
                          "name": "rewardsDuration",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1114,
                          "src": "6611:15:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "expression": {
                            "id": 1523,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "6591:5:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 1524,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "6591:15:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1525,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2194,
                        "src": "6591:19:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 1527,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6591:36:7",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6576:51:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1529,
                  "nodeType": "ExpressionStatement",
                  "src": "6576:51:7"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1531,
                        "name": "reward",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1446,
                        "src": "6654:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1530,
                      "name": "RewardAdded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1652,
                      "src": "6642:11:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 1532,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6642:19:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1533,
                  "nodeType": "EmitStatement",
                  "src": "6637:24:7"
                }
              ]
            },
            "functionSelector": "3c6b16ab",
            "id": 1535,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1450,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1449,
                  "name": "onlyRewardsDistribution",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1073,
                  "src": "5657:23:7"
                },
                "nodeType": "ModifierInvocation",
                "src": "5657:23:7"
              },
              {
                "arguments": [
                  {
                    "arguments": [
                      {
                        "hexValue": "30",
                        "id": 1454,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5702:1:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 1453,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "5694:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 1452,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "5694:7:7",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 1455,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5694:10:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 1456,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1451,
                  "name": "updateReward",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1648,
                  "src": "5681:12:7"
                },
                "nodeType": "ModifierInvocation",
                "src": "5681:24:7"
              }
            ],
            "name": "notifyRewardAmount",
            "nameLocation": "5604:18:7",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1448,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5648:8:7"
            },
            "parameters": {
              "id": 1447,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1446,
                  "mutability": "mutable",
                  "name": "reward",
                  "nameLocation": "5631:6:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1535,
                  "src": "5623:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1445,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5623:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5622:16:7"
            },
            "returnParameters": {
              "id": 1457,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5706:0:7"
            },
            "scope": 1681,
            "src": "5595:1073:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1552,
              "nodeType": "Block",
              "src": "6798:41:7",
              "statements": [
                {
                  "expression": {
                    "id": 1550,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1548,
                      "name": "periodFinish",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1108,
                      "src": "6808:12:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1549,
                      "name": "timestamp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1537,
                      "src": "6823:9:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6808:24:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1551,
                  "nodeType": "ExpressionStatement",
                  "src": "6808:24:7"
                }
              ]
            },
            "functionSelector": "556f6e6b",
            "id": 1553,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1540,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1539,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1029,
                  "src": "6763:9:7"
                },
                "nodeType": "ModifierInvocation",
                "src": "6763:9:7"
              },
              {
                "arguments": [
                  {
                    "arguments": [
                      {
                        "hexValue": "30",
                        "id": 1544,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6794:1:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 1543,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "6786:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 1542,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "6786:7:7",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 1545,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6786:10:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 1546,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1541,
                  "name": "updateReward",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1648,
                  "src": "6773:12:7"
                },
                "nodeType": "ModifierInvocation",
                "src": "6773:24:7"
              }
            ],
            "name": "updatePeriodFinish",
            "nameLocation": "6719:18:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1538,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1537,
                  "mutability": "mutable",
                  "name": "timestamp",
                  "nameLocation": "6743:9:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1553,
                  "src": "6738:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1536,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "6738:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6737:16:7"
            },
            "returnParameters": {
              "id": 1547,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6798:0:7"
            },
            "scope": 1681,
            "src": "6710:129:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1585,
              "nodeType": "Block",
              "src": "7035:214:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1568,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1563,
                          "name": "tokenAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1555,
                          "src": "7053:12:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 1566,
                              "name": "stakingToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1105,
                              "src": "7077:12:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$2488",
                                "typeString": "contract IERC20"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IERC20_$2488",
                                "typeString": "contract IERC20"
                              }
                            ],
                            "id": 1565,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "7069:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1564,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "7069:7:7",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1567,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7069:21:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "7053:37:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "43616e6e6f7420776974686472617720746865207374616b696e6720746f6b656e",
                        "id": 1569,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7092:35:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f43de9f2a3539b2ac9cf1844588e9cc0acd1b2bdb1ec43734f76440993ede0a9",
                          "typeString": "literal_string \"Cannot withdraw the staking token\""
                        },
                        "value": "Cannot withdraw the staking token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f43de9f2a3539b2ac9cf1844588e9cc0acd1b2bdb1ec43734f76440993ede0a9",
                          "typeString": "literal_string \"Cannot withdraw the staking token\""
                        }
                      ],
                      "id": 1562,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7045:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1570,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7045:83:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1571,
                  "nodeType": "ExpressionStatement",
                  "src": "7045:83:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1576,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 948,
                        "src": "7172:5:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1577,
                        "name": "tokenAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1557,
                        "src": "7179:11:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 1573,
                            "name": "tokenAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1555,
                            "src": "7145:12:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1572,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2488,
                          "src": "7138:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$2488_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 1574,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7138:20:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$2488",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 1575,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1752,
                      "src": "7138:33:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$2488_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$2488_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 1578,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7138:53:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1579,
                  "nodeType": "ExpressionStatement",
                  "src": "7138:53:7"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1581,
                        "name": "tokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1555,
                        "src": "7216:12:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1582,
                        "name": "tokenAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1557,
                        "src": "7230:11:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1580,
                      "name": "Recovered",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1680,
                      "src": "7206:9:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1583,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7206:36:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1584,
                  "nodeType": "EmitStatement",
                  "src": "7201:41:7"
                }
              ]
            },
            "functionSelector": "8980f11f",
            "id": 1586,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1560,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1559,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1029,
                  "src": "7025:9:7"
                },
                "nodeType": "ModifierInvocation",
                "src": "7025:9:7"
              }
            ],
            "name": "recoverERC20",
            "nameLocation": "6960:12:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1558,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1555,
                  "mutability": "mutable",
                  "name": "tokenAddress",
                  "nameLocation": "6981:12:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1586,
                  "src": "6973:20:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1554,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6973:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1557,
                  "mutability": "mutable",
                  "name": "tokenAmount",
                  "nameLocation": "7003:11:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1586,
                  "src": "6995:19:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1556,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6995:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6972:43:7"
            },
            "returnParameters": {
              "id": 1561,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7035:0:7"
            },
            "scope": 1681,
            "src": "6951:298:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1609,
              "nodeType": "Block",
              "src": "7328:280:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1597,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1594,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "7359:5:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 1595,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "7359:15:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "id": 1596,
                          "name": "periodFinish",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1108,
                          "src": "7377:12:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "7359:30:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "50726576696f7573207265776172647320706572696f64206d75737420626520636f6d706c657465206265666f7265206368616e67696e6720746865206475726174696f6e20666f7220746865206e657720706572696f64",
                        "id": 1598,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7403:90:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_07f2725172f5941b576a01ec7036d341e0c837e280f27b110cb3e6fd2f2c4a56",
                          "typeString": "literal_string \"Previous rewards period must be complete before changing the duration for the new period\""
                        },
                        "value": "Previous rewards period must be complete before changing the duration for the new period"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_07f2725172f5941b576a01ec7036d341e0c837e280f27b110cb3e6fd2f2c4a56",
                          "typeString": "literal_string \"Previous rewards period must be complete before changing the duration for the new period\""
                        }
                      ],
                      "id": 1593,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7338:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1599,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7338:165:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1600,
                  "nodeType": "ExpressionStatement",
                  "src": "7338:165:7"
                },
                {
                  "expression": {
                    "id": 1603,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1601,
                      "name": "rewardsDuration",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1114,
                      "src": "7513:15:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1602,
                      "name": "_rewardsDuration",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1588,
                      "src": "7531:16:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7513:34:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1604,
                  "nodeType": "ExpressionStatement",
                  "src": "7513:34:7"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1606,
                        "name": "rewardsDuration",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1114,
                        "src": "7585:15:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1605,
                      "name": "RewardsDurationUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1674,
                      "src": "7562:22:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 1607,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7562:39:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1608,
                  "nodeType": "EmitStatement",
                  "src": "7557:44:7"
                }
              ]
            },
            "functionSelector": "cc1a378f",
            "id": 1610,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1591,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1590,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1029,
                  "src": "7318:9:7"
                },
                "nodeType": "ModifierInvocation",
                "src": "7318:9:7"
              }
            ],
            "name": "setRewardsDuration",
            "nameLocation": "7264:18:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1589,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1588,
                  "mutability": "mutable",
                  "name": "_rewardsDuration",
                  "nameLocation": "7291:16:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1610,
                  "src": "7283:24:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1587,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7283:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7282:26:7"
            },
            "returnParameters": {
              "id": 1592,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7328:0:7"
            },
            "scope": 1681,
            "src": "7255:353:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1647,
              "nodeType": "Block",
              "src": "7696:283:7",
              "statements": [
                {
                  "expression": {
                    "id": 1617,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1614,
                      "name": "rewardPerTokenStored",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1118,
                      "src": "7706:20:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 1615,
                        "name": "rewardPerToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1231,
                        "src": "7729:14:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                          "typeString": "function () view returns (uint256)"
                        }
                      },
                      "id": 1616,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7729:16:7",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7706:39:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1618,
                  "nodeType": "ExpressionStatement",
                  "src": "7706:39:7"
                },
                {
                  "expression": {
                    "id": 1622,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1619,
                      "name": "lastUpdateTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1116,
                      "src": "7755:14:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 1620,
                        "name": "lastTimeRewardApplicable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1199,
                        "src": "7772:24:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                          "typeString": "function () view returns (uint256)"
                        }
                      },
                      "id": 1621,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7772:26:7",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7755:43:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1623,
                  "nodeType": "ExpressionStatement",
                  "src": "7755:43:7"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 1629,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1624,
                      "name": "account",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1612,
                      "src": "7812:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 1627,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7831:1:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 1626,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "7823:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 1625,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7823:7:7",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 1628,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7823:10:7",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "7812:21:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1645,
                  "nodeType": "IfStatement",
                  "src": "7808:154:7",
                  "trueBody": {
                    "id": 1644,
                    "nodeType": "Block",
                    "src": "7835:127:7",
                    "statements": [
                      {
                        "expression": {
                          "id": 1636,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 1630,
                              "name": "rewards",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1126,
                              "src": "7849:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 1632,
                            "indexExpression": {
                              "id": 1631,
                              "name": "account",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1612,
                              "src": "7857:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "7849:16:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 1634,
                                "name": "account",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1612,
                                "src": "7875:7:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 1633,
                              "name": "earned",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1261,
                              "src": "7868:6:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                                "typeString": "function (address) view returns (uint256)"
                              }
                            },
                            "id": 1635,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7868:15:7",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7849:34:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1637,
                        "nodeType": "ExpressionStatement",
                        "src": "7849:34:7"
                      },
                      {
                        "expression": {
                          "id": 1642,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 1638,
                              "name": "userRewardPerTokenPaid",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1122,
                              "src": "7897:22:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 1640,
                            "indexExpression": {
                              "id": 1639,
                              "name": "account",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1612,
                              "src": "7920:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "7897:31:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1641,
                            "name": "rewardPerTokenStored",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1118,
                            "src": "7931:20:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7897:54:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1643,
                        "nodeType": "ExpressionStatement",
                        "src": "7897:54:7"
                      }
                    ]
                  }
                },
                {
                  "id": 1646,
                  "nodeType": "PlaceholderStatement",
                  "src": "7971:1:7"
                }
              ]
            },
            "id": 1648,
            "name": "updateReward",
            "nameLocation": "7666:12:7",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 1613,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1612,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "7687:7:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1648,
                  "src": "7679:15:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1611,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7679:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7678:17:7"
            },
            "src": "7657:322:7",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "id": 1652,
            "name": "RewardAdded",
            "nameLocation": "8031:11:7",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1651,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1650,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "reward",
                  "nameLocation": "8051:6:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1652,
                  "src": "8043:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1649,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8043:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8042:16:7"
            },
            "src": "8025:34:7"
          },
          {
            "anonymous": false,
            "id": 1658,
            "name": "Staked",
            "nameLocation": "8070:6:7",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1657,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1654,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "8093:4:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1658,
                  "src": "8077:20:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1653,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8077:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1656,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "8107:6:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1658,
                  "src": "8099:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1655,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8099:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8076:38:7"
            },
            "src": "8064:51:7"
          },
          {
            "anonymous": false,
            "id": 1664,
            "name": "Withdrawn",
            "nameLocation": "8126:9:7",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1663,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1660,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "8152:4:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1664,
                  "src": "8136:20:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1659,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8136:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1662,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "8166:6:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1664,
                  "src": "8158:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1661,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8158:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8135:38:7"
            },
            "src": "8120:54:7"
          },
          {
            "anonymous": false,
            "id": 1670,
            "name": "RewardPaid",
            "nameLocation": "8185:10:7",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1669,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1666,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "8212:4:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1670,
                  "src": "8196:20:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1665,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8196:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1668,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "reward",
                  "nameLocation": "8226:6:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1670,
                  "src": "8218:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1667,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8218:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8195:38:7"
            },
            "src": "8179:55:7"
          },
          {
            "anonymous": false,
            "id": 1674,
            "name": "RewardsDurationUpdated",
            "nameLocation": "8245:22:7",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1673,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1672,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "newDuration",
                  "nameLocation": "8276:11:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1674,
                  "src": "8268:19:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1671,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8268:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8267:21:7"
            },
            "src": "8239:50:7"
          },
          {
            "anonymous": false,
            "id": 1680,
            "name": "Recovered",
            "nameLocation": "8300:9:7",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1679,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1676,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "8318:5:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1680,
                  "src": "8310:13:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1675,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8310:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1678,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "8333:6:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1680,
                  "src": "8325:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1677,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8325:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8309:31:7"
            },
            "src": "8294:47:7"
          }
        ],
        "scope": 1682,
        "src": "2167:6176:7",
        "usedErrors": []
      }
    ],
    "src": "0:8343:7"
  },
  "bytecode": "60806040526000600655600060075562093a806008553480156200002257600080fd5b506040516200162838038062001628833981016040819052620000459162000162565b836001600160a01b038116620000a15760405162461bcd60e51b815260206004820152601960248201527f4f776e657220616464726573732063616e6e6f74206265203000000000000000604482015260640160405180910390fd5b600080546001600160a01b0319166001600160a01b03831690811782556040805192835260208301919091527fb532073b38c83145e3e5135377a08bf9aab55bc0fd7c1179cd4fb995d2a5159c910160405180910390a1506001600355600480546001600160a01b039384166001600160a01b03199182161790915560058054928416928216929092179091556002805493909216921691909117905550620001bf565b80516001600160a01b03811681146200015d57600080fd5b919050565b600080600080608085870312156200017957600080fd5b620001848562000145565b9350620001946020860162000145565b9250620001a46040860162000145565b9150620001b46060860162000145565b905092959194509250565b61145980620001cf6000396000f3fe608060405234801561001057600080fd5b50600436106101ce5760003560e01c806372f702f311610104578063a694fc3a116100a2578063d1af0c7d11610071578063d1af0c7d146103ab578063df136d65146103be578063e9fad8ee146103c7578063ebe2b12b146103cf57600080fd5b8063a694fc3a14610374578063c8f33c9114610387578063cc1a378f14610390578063cd3daf9d146103a357600080fd5b806380faa57d116100de57806380faa57d146103265780638980f11f1461032e5780638b876347146103415780638da5cb5b1461036157600080fd5b806372f702f31461030257806379ba5097146103155780637b0a47ee1461031d57600080fd5b8063386a9525116101715780633fc6df6e1161014b5780633fc6df6e1461028857806353a47bb7146102b3578063556f6e6b146102c657806370a08231146102d957600080fd5b8063386a9525146102645780633c6b16ab1461026d5780633d18b9121461028057600080fd5b806318160ddd116101ad57806318160ddd1461022e57806319762143146102365780631c1f78eb146102495780632e1a7d4d1461025157600080fd5b80628cc262146101d35780630700037d146101f95780631627540c14610219575b600080fd5b6101e66101e1366004611252565b6103d8565b6040519081526020015b60405180910390f35b6101e6610207366004611252565b600c6020526000908152604090205481565b61022c610227366004611252565b610456565b005b600d546101e6565b61022c610244366004611252565b6104b3565b6101e66104dd565b61022c61025f3660046112b9565b6104fb565b6101e660085481565b61022c61027b3660046112b9565b610660565b61022c6108c2565b60025461029b906001600160a01b031681565b6040516001600160a01b0390911681526020016101f0565b60015461029b906001600160a01b031681565b61022c6102d43660046112b9565b6109bf565b6101e66102e7366004611252565b6001600160a01b03166000908152600e602052604090205490565b60055461029b906001600160a01b031681565b61022c610a29565b6101e660075481565b6101e6610b13565b61022c61033c36600461126d565b610b21565b6101e661034f366004611252565b600b6020526000908152604090205481565b60005461029b906001600160a01b031681565b61022c6103823660046112b9565b610bf1565b6101e660095481565b61022c61039e3660046112b9565b610d3e565b6101e6610e18565b60045461029b906001600160a01b031681565b6101e6600a5481565b61022c610e64565b6101e660065481565b6001600160a01b0381166000908152600c6020908152604080832054600b909252822054610450919061044a90670de0b6b3a764000090610444906104259061041f610e18565b90610e87565b6001600160a01b0388166000908152600e602052604090205490610e9a565b90610ea6565b90610eb2565b92915050565b61045e610ebe565b600180546001600160a01b0319166001600160a01b0383169081179091556040519081527f906a1c6bd7e3091ea86693dd029a831c19049ce77f1dce2ce0bab1cacbabce22906020015b60405180910390a150565b6104bb610ebe565b600280546001600160a01b0319166001600160a01b0392909216919091179055565b60006104f6600854600754610e9a90919063ffffffff16565b905090565b600260035414156105275760405162461bcd60e51b815260040161051e9061133a565b60405180910390fd5b600260035533610535610e18565b600a55610540610b13565b6009556001600160a01b038116156105875761055b816103d8565b6001600160a01b0382166000908152600c6020908152604080832093909355600a54600b909152919020555b600082116105cb5760405162461bcd60e51b8152602060048201526011602482015270043616e6e6f74207769746864726177203607c1b604482015260640161051e565b600d546105d89083610e87565b600d55336000908152600e60205260409020546105f59083610e87565b336000818152600e6020526040902091909155600554610621916001600160a01b039091169084610f30565b60405182815233907f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d5906020015b60405180910390a250506001600355565b6002546001600160a01b031633146106cd5760405162461bcd60e51b815260206004820152602a60248201527f43616c6c6572206973206e6f742052657761726473446973747269627574696f6044820152691b8818dbdb9d1c9858dd60b21b606482015260840161051e565b60006106d7610e18565b600a556106e2610b13565b6009556001600160a01b03811615610729576106fd816103d8565b6001600160a01b0382166000908152600c6020908152604080832093909355600a54600b909152919020555b600654421061074857600854610740908390610ea6565b60075561078b565b6006546000906107589042610e87565b9050600061077160075483610e9a90919063ffffffff16565b600854909150610785906104448684610eb2565b60075550505b600480546040516370a0823160e01b815230928101929092526000916001600160a01b03909116906370a082319060240160206040518083038186803b1580156107d457600080fd5b505afa1580156107e8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061080c91906112d2565b905061082360085482610ea690919063ffffffff16565b60075411156108745760405162461bcd60e51b815260206004820152601860248201527f50726f76696465642072657761726420746f6f20686967680000000000000000604482015260640161051e565b4260098190556008546108879190610eb2565b6006556040518381527fde88a922e0d3b88b24e9623efeb464919c6bf9f66857a65e2bfcf2ce87a9433d9060200160405180910390a1505050565b600260035414156108e55760405162461bcd60e51b815260040161051e9061133a565b6002600355336108f3610e18565b600a556108fe610b13565b6009556001600160a01b0381161561094557610919816103d8565b6001600160a01b0382166000908152600c6020908152604080832093909355600a54600b909152919020555b336000908152600c602052604090205480156109b657336000818152600c6020526040812055600454610984916001600160a01b039091169083610f30565b60405181815233907fe2403640ba68fed3a2f88b7557551d1993f84b99bb10ff833f0cf8db0c5e04869060200161064f565b50506001600355565b6109c7610ebe565b60006109d1610e18565b600a556109dc610b13565b6009556001600160a01b03811615610a23576109f7816103d8565b6001600160a01b0382166000908152600c6020908152604080832093909355600a54600b909152919020555b50600655565b6001546001600160a01b03163314610aa15760405162461bcd60e51b815260206004820152603560248201527f596f75206d757374206265206e6f6d696e61746564206265666f726520796f7560448201527402063616e20616363657074206f776e65727368697605c1b606482015260840161051e565b600054600154604080516001600160a01b0393841681529290911660208301527fb532073b38c83145e3e5135377a08bf9aab55bc0fd7c1179cd4fb995d2a5159c910160405180910390a160018054600080546001600160a01b03199081166001600160a01b03841617909155169055565b60006104f642600654610f98565b610b29610ebe565b6005546001600160a01b0383811691161415610b915760405162461bcd60e51b815260206004820152602160248201527f43616e6e6f7420776974686472617720746865207374616b696e6720746f6b656044820152603760f91b606482015260840161051e565b600054610bab906001600160a01b03848116911683610f30565b604080516001600160a01b0384168152602081018390527f8c1256b8896378cd5044f80c202f9772b9d77dc85c8a6eb51967210b09bfaa28910160405180910390a15050565b60026003541415610c145760405162461bcd60e51b815260040161051e9061133a565b600260035533610c22610e18565b600a55610c2d610b13565b6009556001600160a01b03811615610c7457610c48816103d8565b6001600160a01b0382166000908152600c6020908152604080832093909355600a54600b909152919020555b60008211610cb55760405162461bcd60e51b815260206004820152600e60248201526d043616e6e6f74207374616b6520360941b604482015260640161051e565b600d54610cc29083610eb2565b600d55336000908152600e6020526040902054610cdf9083610eb2565b336000818152600e6020526040902091909155600554610d0c916001600160a01b03909116903085610fae565b60405182815233907f9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d9060200161064f565b610d46610ebe565b6006544211610de35760405162461bcd60e51b815260206004820152605860248201527f50726576696f7573207265776172647320706572696f64206d7573742062652060448201527f636f6d706c657465206265666f7265206368616e67696e67207468652064757260648201527f6174696f6e20666f7220746865206e657720706572696f640000000000000000608482015260a40161051e565b60088190556040518181527ffb46ca5a5e06d4540d6387b930a7c978bce0db5f449ec6b3f5d07c6e1d44f2d3906020016104a8565b6000600d5460001415610e2c5750600a5490565b6104f6610e5b600d54610444670de0b6b3a7640000610e55600754610e5560095461041f610b13565b90610e9a565b600a5490610eb2565b336000908152600e6020526040902054610e7d906104fb565b610e856108c2565b565b6000610e9382846113ca565b9392505050565b6000610e9382846113ab565b6000610e938284611389565b6000610e938284611371565b6000546001600160a01b03163314610e855760405162461bcd60e51b815260206004820152602f60248201527f4f6e6c792074686520636f6e7472616374206f776e6572206d6179207065726660448201526e37b936903a3434b99030b1ba34b7b760891b606482015260840161051e565b6040516001600160a01b038316602482015260448101829052610f9390849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152610fec565b505050565b6000818310610fa75781610e93565b5090919050565b6040516001600160a01b0380851660248301528316604482015260648101829052610fe69085906323b872dd60e01b90608401610f5c565b50505050565b6000611041826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166110be9092919063ffffffff16565b805190915015610f93578080602001905181019061105f9190611297565b610f935760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b606482015260840161051e565b60606110cd84846000856110d5565b949350505050565b6060824710156111365760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b606482015260840161051e565b843b6111845760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161051e565b600080866001600160a01b031685876040516111a091906112eb565b60006040518083038185875af1925050503d80600081146111dd576040519150601f19603f3d011682016040523d82523d6000602084013e6111e2565b606091505b50915091506111f28282866111fd565b979650505050505050565b6060831561120c575081610e93565b82511561121c5782518084602001fd5b8160405162461bcd60e51b815260040161051e9190611307565b80356001600160a01b038116811461124d57600080fd5b919050565b60006020828403121561126457600080fd5b610e9382611236565b6000806040838503121561128057600080fd5b61128983611236565b946020939093013593505050565b6000602082840312156112a957600080fd5b81518015158114610e9357600080fd5b6000602082840312156112cb57600080fd5b5035919050565b6000602082840312156112e457600080fd5b5051919050565b600082516112fd8184602087016113e1565b9190910192915050565b60208152600082518060208401526113268160408501602087016113e1565b601f01601f19169190910160400192915050565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b600082198211156113845761138461140d565b500190565b6000826113a657634e487b7160e01b600052601260045260246000fd5b500490565b60008160001904831182151516156113c5576113c561140d565b500290565b6000828210156113dc576113dc61140d565b500390565b60005b838110156113fc5781810151838201526020016113e4565b83811115610fe65750506000910152565b634e487b7160e01b600052601160045260246000fdfea26469706673582212201560259773278f060ff8d7a2d1b87ea3f36ea6b3f9259ad90cd23feac4dd77e964736f6c63430008070033",
  "bytecodeSha1": "280d0378552dd68ee603479d54478f32db68c16d",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.7+commit.e28d00a7"
  },
  "contractName": "MockStakingRewards",
  "coverageMap": {
    "branches": {
      "0": {
        "MockStakingRewards.stake": {
          "72": [
            2260,
            2279,
            true
          ]
        }
      },
      "1": {},
      "10": {},
      "2": {
        "SafeERC20._callOptionalReturn": {
          "73": [
            3550,
            3571,
            false
          ],
          "74": [
            3679,
            3709,
            true
          ]
        }
      },
      "3": {
        "Address._verifyCallResult": {
          "69": [
            7226,
            7233,
            false
          ],
          "70": [
            7367,
            7388,
            false
          ]
        },
        "Address.functionCallWithValue": {
          "68": [
            4759,
            4789,
            true
          ]
        }
      },
      "4": {
        "Math.min": {
          "71": [
            475,
            480,
            true
          ]
        }
      },
      "5": {},
      "7": {
        "MockStakingRewards.getReward": {
          "60": [
            5252,
            5262,
            false
          ]
        },
        "MockStakingRewards.notifyRewardAmount": {
          "58": [
            5720,
            5751,
            false
          ],
          "59": [
            6452,
            6494,
            true
          ]
        },
        "MockStakingRewards.recoverERC20": {
          "62": [
            7053,
            7090,
            true
          ]
        },
        "MockStakingRewards.rewardPerToken": {
          "66": [
            3688,
            3705,
            false
          ]
        },
        "MockStakingRewards.setRewardsDuration": {
          "65": [
            7359,
            7389,
            true
          ]
        },
        "MockStakingRewards.stake": {
          "63": [
            7812,
            7833,
            false
          ],
          "64": [
            4478,
            4488,
            true
          ]
        },
        "MockStakingRewards.withdraw": {
          "57": [
            4857,
            4867,
            true
          ]
        },
        "Owned._onlyOwner": {
          "67": [
            1327,
            1346,
            true
          ]
        },
        "Owned.acceptOwnership": {
          "61": [
            991,
            1019,
            true
          ]
        }
      }
    },
    "statements": {
      "0": {},
      "1": {},
      "10": {},
      "2": {
        "SafeERC20._callOptionalReturn": {
          "50": [
            3671,
            3756
          ]
        },
        "SafeERC20.safeTransfer": {
          "47": [
            716,
            802
          ]
        },
        "SafeERC20.safeTransferFrom": {
          "49": [
            915,
            1011
          ]
        }
      },
      "3": {
        "Address._verifyCallResult": {
          "55": [
            7249,
            7266
          ],
          "56": [
            7757,
            7777
          ]
        },
        "Address.functionCall": {
          "51": [
            3700,
            3759
          ]
        },
        "Address.functionCallWithValue": {
          "52": [
            4751,
            4832
          ],
          "53": [
            4842,
            4902
          ],
          "54": [
            5057,
            5116
          ]
        }
      },
      "4": {
        "Math.min": {
          "48": [
            468,
            488
          ]
        }
      },
      "5": {
        "SafeMath.add": {
          "45": [
            2749,
            2761
          ]
        },
        "SafeMath.div": {
          "44": [
            3844,
            3856
          ]
        },
        "SafeMath.mul": {
          "43": [
            3459,
            3471
          ]
        },
        "SafeMath.sub": {
          "42": [
            3116,
            3128
          ]
        }
      },
      "7": {
        "MockStakingRewards.balanceOf": {
          "1": [
            3427,
            3452
          ]
        },
        "MockStakingRewards.earned": {
          "2": [
            4028,
            4144
          ]
        },
        "MockStakingRewards.exit": {
          "40": [
            5476,
            5507
          ],
          "41": [
            5517,
            5528
          ]
        },
        "MockStakingRewards.getReward": {
          "18": [
            5278,
            5301
          ],
          "19": [
            5315,
            5360
          ],
          "20": [
            5374,
            5409
          ]
        },
        "MockStakingRewards.getRewardForDuration": {
          "6": [
            4240,
            4278
          ]
        },
        "MockStakingRewards.lastTimeRewardApplicable": {
          "26": [
            3550,
            3596
          ]
        },
        "MockStakingRewards.notifyRewardAmount": {
          "12": [
            5767,
            5807
          ],
          "13": [
            5963,
            6017
          ],
          "14": [
            6444,
            6523
          ],
          "15": [
            6534,
            6566
          ],
          "16": [
            6576,
            6627
          ],
          "17": [
            6637,
            6661
          ]
        },
        "MockStakingRewards.recoverERC20": {
          "27": [
            7045,
            7128
          ],
          "28": [
            7138,
            7191
          ],
          "29": [
            7201,
            7242
          ]
        },
        "MockStakingRewards.rewardPerToken": {
          "38": [
            3721,
            3748
          ],
          "39": [
            3768,
            3933
          ]
        },
        "MockStakingRewards.setRewardsDuration": {
          "35": [
            7338,
            7503
          ],
          "36": [
            7513,
            7547
          ],
          "37": [
            7557,
            7601
          ]
        },
        "MockStakingRewards.stake": {
          "30": [
            4470,
            4507
          ],
          "31": [
            4517,
            4556
          ],
          "32": [
            4566,
            4623
          ],
          "33": [
            4633,
            4697
          ],
          "34": [
            4707,
            4738
          ]
        },
        "MockStakingRewards.totalSupply": {
          "0": [
            3308,
            3327
          ]
        },
        "MockStakingRewards.updatePeriodFinish": {
          "21": [
            6808,
            6832
          ]
        },
        "MockStakingRewards.withdraw": {
          "7": [
            4849,
            4889
          ],
          "8": [
            4899,
            4938
          ],
          "9": [
            4948,
            5005
          ],
          "10": [
            5015,
            5060
          ],
          "11": [
            5070,
            5104
          ]
        },
        "Owned._onlyOwner": {
          "46": [
            1319,
            1398
          ]
        },
        "Owned.acceptOwnership": {
          "22": [
            983,
            1077
          ],
          "23": [
            1087,
            1127
          ],
          "24": [
            1137,
            1159
          ],
          "25": [
            1169,
            1196
          ]
        },
        "Owned.nominateNewOwner": {
          "3": [
            864,
            887
          ],
          "4": [
            897,
            924
          ]
        },
        "RewardsDistributionRecipient.setRewardsDistribution": {
          "5": [
            2018,
            2060
          ]
        }
      }
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts@4.0.0/Address",
    "OpenZeppelin/openzeppelin-contracts@4.0.0/IERC20",
    "IStakingRewards",
    "OpenZeppelin/openzeppelin-contracts@4.0.0/Math",
    "Owned",
    "OpenZeppelin/openzeppelin-contracts@4.0.0/ReentrancyGuard",
    "RewardsDistributionRecipient",
    "OpenZeppelin/openzeppelin-contracts@4.0.0/SafeERC20",
    "OpenZeppelin/openzeppelin-contracts@4.0.0/SafeMath"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106101ce5760003560e01c806372f702f311610104578063a694fc3a116100a2578063d1af0c7d11610071578063d1af0c7d146103ab578063df136d65146103be578063e9fad8ee146103c7578063ebe2b12b146103cf57600080fd5b8063a694fc3a14610374578063c8f33c9114610387578063cc1a378f14610390578063cd3daf9d146103a357600080fd5b806380faa57d116100de57806380faa57d146103265780638980f11f1461032e5780638b876347146103415780638da5cb5b1461036157600080fd5b806372f702f31461030257806379ba5097146103155780637b0a47ee1461031d57600080fd5b8063386a9525116101715780633fc6df6e1161014b5780633fc6df6e1461028857806353a47bb7146102b3578063556f6e6b146102c657806370a08231146102d957600080fd5b8063386a9525146102645780633c6b16ab1461026d5780633d18b9121461028057600080fd5b806318160ddd116101ad57806318160ddd1461022e57806319762143146102365780631c1f78eb146102495780632e1a7d4d1461025157600080fd5b80628cc262146101d35780630700037d146101f95780631627540c14610219575b600080fd5b6101e66101e1366004611252565b6103d8565b6040519081526020015b60405180910390f35b6101e6610207366004611252565b600c6020526000908152604090205481565b61022c610227366004611252565b610456565b005b600d546101e6565b61022c610244366004611252565b6104b3565b6101e66104dd565b61022c61025f3660046112b9565b6104fb565b6101e660085481565b61022c61027b3660046112b9565b610660565b61022c6108c2565b60025461029b906001600160a01b031681565b6040516001600160a01b0390911681526020016101f0565b60015461029b906001600160a01b031681565b61022c6102d43660046112b9565b6109bf565b6101e66102e7366004611252565b6001600160a01b03166000908152600e602052604090205490565b60055461029b906001600160a01b031681565b61022c610a29565b6101e660075481565b6101e6610b13565b61022c61033c36600461126d565b610b21565b6101e661034f366004611252565b600b6020526000908152604090205481565b60005461029b906001600160a01b031681565b61022c6103823660046112b9565b610bf1565b6101e660095481565b61022c61039e3660046112b9565b610d3e565b6101e6610e18565b60045461029b906001600160a01b031681565b6101e6600a5481565b61022c610e64565b6101e660065481565b6001600160a01b0381166000908152600c6020908152604080832054600b909252822054610450919061044a90670de0b6b3a764000090610444906104259061041f610e18565b90610e87565b6001600160a01b0388166000908152600e602052604090205490610e9a565b90610ea6565b90610eb2565b92915050565b61045e610ebe565b600180546001600160a01b0319166001600160a01b0383169081179091556040519081527f906a1c6bd7e3091ea86693dd029a831c19049ce77f1dce2ce0bab1cacbabce22906020015b60405180910390a150565b6104bb610ebe565b600280546001600160a01b0319166001600160a01b0392909216919091179055565b60006104f6600854600754610e9a90919063ffffffff16565b905090565b600260035414156105275760405162461bcd60e51b815260040161051e9061133a565b60405180910390fd5b600260035533610535610e18565b600a55610540610b13565b6009556001600160a01b038116156105875761055b816103d8565b6001600160a01b0382166000908152600c6020908152604080832093909355600a54600b909152919020555b600082116105cb5760405162461bcd60e51b8152602060048201526011602482015270043616e6e6f74207769746864726177203607c1b604482015260640161051e565b600d546105d89083610e87565b600d55336000908152600e60205260409020546105f59083610e87565b336000818152600e6020526040902091909155600554610621916001600160a01b039091169084610f30565b60405182815233907f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d5906020015b60405180910390a250506001600355565b6002546001600160a01b031633146106cd5760405162461bcd60e51b815260206004820152602a60248201527f43616c6c6572206973206e6f742052657761726473446973747269627574696f6044820152691b8818dbdb9d1c9858dd60b21b606482015260840161051e565b60006106d7610e18565b600a556106e2610b13565b6009556001600160a01b03811615610729576106fd816103d8565b6001600160a01b0382166000908152600c6020908152604080832093909355600a54600b909152919020555b600654421061074857600854610740908390610ea6565b60075561078b565b6006546000906107589042610e87565b9050600061077160075483610e9a90919063ffffffff16565b600854909150610785906104448684610eb2565b60075550505b600480546040516370a0823160e01b815230928101929092526000916001600160a01b03909116906370a082319060240160206040518083038186803b1580156107d457600080fd5b505afa1580156107e8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061080c91906112d2565b905061082360085482610ea690919063ffffffff16565b60075411156108745760405162461bcd60e51b815260206004820152601860248201527f50726f76696465642072657761726420746f6f20686967680000000000000000604482015260640161051e565b4260098190556008546108879190610eb2565b6006556040518381527fde88a922e0d3b88b24e9623efeb464919c6bf9f66857a65e2bfcf2ce87a9433d9060200160405180910390a1505050565b600260035414156108e55760405162461bcd60e51b815260040161051e9061133a565b6002600355336108f3610e18565b600a556108fe610b13565b6009556001600160a01b0381161561094557610919816103d8565b6001600160a01b0382166000908152600c6020908152604080832093909355600a54600b909152919020555b336000908152600c602052604090205480156109b657336000818152600c6020526040812055600454610984916001600160a01b039091169083610f30565b60405181815233907fe2403640ba68fed3a2f88b7557551d1993f84b99bb10ff833f0cf8db0c5e04869060200161064f565b50506001600355565b6109c7610ebe565b60006109d1610e18565b600a556109dc610b13565b6009556001600160a01b03811615610a23576109f7816103d8565b6001600160a01b0382166000908152600c6020908152604080832093909355600a54600b909152919020555b50600655565b6001546001600160a01b03163314610aa15760405162461bcd60e51b815260206004820152603560248201527f596f75206d757374206265206e6f6d696e61746564206265666f726520796f7560448201527402063616e20616363657074206f776e65727368697605c1b606482015260840161051e565b600054600154604080516001600160a01b0393841681529290911660208301527fb532073b38c83145e3e5135377a08bf9aab55bc0fd7c1179cd4fb995d2a5159c910160405180910390a160018054600080546001600160a01b03199081166001600160a01b03841617909155169055565b60006104f642600654610f98565b610b29610ebe565b6005546001600160a01b0383811691161415610b915760405162461bcd60e51b815260206004820152602160248201527f43616e6e6f7420776974686472617720746865207374616b696e6720746f6b656044820152603760f91b606482015260840161051e565b600054610bab906001600160a01b03848116911683610f30565b604080516001600160a01b0384168152602081018390527f8c1256b8896378cd5044f80c202f9772b9d77dc85c8a6eb51967210b09bfaa28910160405180910390a15050565b60026003541415610c145760405162461bcd60e51b815260040161051e9061133a565b600260035533610c22610e18565b600a55610c2d610b13565b6009556001600160a01b03811615610c7457610c48816103d8565b6001600160a01b0382166000908152600c6020908152604080832093909355600a54600b909152919020555b60008211610cb55760405162461bcd60e51b815260206004820152600e60248201526d043616e6e6f74207374616b6520360941b604482015260640161051e565b600d54610cc29083610eb2565b600d55336000908152600e6020526040902054610cdf9083610eb2565b336000818152600e6020526040902091909155600554610d0c916001600160a01b03909116903085610fae565b60405182815233907f9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d9060200161064f565b610d46610ebe565b6006544211610de35760405162461bcd60e51b815260206004820152605860248201527f50726576696f7573207265776172647320706572696f64206d7573742062652060448201527f636f6d706c657465206265666f7265206368616e67696e67207468652064757260648201527f6174696f6e20666f7220746865206e657720706572696f640000000000000000608482015260a40161051e565b60088190556040518181527ffb46ca5a5e06d4540d6387b930a7c978bce0db5f449ec6b3f5d07c6e1d44f2d3906020016104a8565b6000600d5460001415610e2c5750600a5490565b6104f6610e5b600d54610444670de0b6b3a7640000610e55600754610e5560095461041f610b13565b90610e9a565b600a5490610eb2565b336000908152600e6020526040902054610e7d906104fb565b610e856108c2565b565b6000610e9382846113ca565b9392505050565b6000610e9382846113ab565b6000610e938284611389565b6000610e938284611371565b6000546001600160a01b03163314610e855760405162461bcd60e51b815260206004820152602f60248201527f4f6e6c792074686520636f6e7472616374206f776e6572206d6179207065726660448201526e37b936903a3434b99030b1ba34b7b760891b606482015260840161051e565b6040516001600160a01b038316602482015260448101829052610f9390849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152610fec565b505050565b6000818310610fa75781610e93565b5090919050565b6040516001600160a01b0380851660248301528316604482015260648101829052610fe69085906323b872dd60e01b90608401610f5c565b50505050565b6000611041826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166110be9092919063ffffffff16565b805190915015610f93578080602001905181019061105f9190611297565b610f935760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b606482015260840161051e565b60606110cd84846000856110d5565b949350505050565b6060824710156111365760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b606482015260840161051e565b843b6111845760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161051e565b600080866001600160a01b031685876040516111a091906112eb565b60006040518083038185875af1925050503d80600081146111dd576040519150601f19603f3d011682016040523d82523d6000602084013e6111e2565b606091505b50915091506111f28282866111fd565b979650505050505050565b6060831561120c575081610e93565b82511561121c5782518084602001fd5b8160405162461bcd60e51b815260040161051e9190611307565b80356001600160a01b038116811461124d57600080fd5b919050565b60006020828403121561126457600080fd5b610e9382611236565b6000806040838503121561128057600080fd5b61128983611236565b946020939093013593505050565b6000602082840312156112a957600080fd5b81518015158114610e9357600080fd5b6000602082840312156112cb57600080fd5b5035919050565b6000602082840312156112e457600080fd5b5051919050565b600082516112fd8184602087016113e1565b9190910192915050565b60208152600082518060208401526113268160408501602087016113e1565b601f01601f19169190910160400192915050565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b600082198211156113845761138461140d565b500190565b6000826113a657634e487b7160e01b600052601260045260246000fd5b500490565b60008160001904831182151516156113c5576113c561140d565b500290565b6000828210156113dc576113dc61140d565b500390565b60005b838110156113fc5781810151838201526020016113e4565b83811115610fe65750506000910152565b634e487b7160e01b600052601160045260246000fdfea26469706673582212201560259773278f060ff8d7a2d1b87ea3f36ea6b3f9259ad90cd23feac4dd77e964736f6c63430008070033",
  "deployedSourceMap": "2167:6176:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3946:205;;;;;;:::i;:::-;;:::i;:::-;;;8236:25:11;;;8224:2;8209:18;3946:205:7;;;;;;;;2702:42;;;;;;:::i;:::-;;;;;;;;;;;;;;793:138;;;;;;:::i;:::-;;:::i;:::-;;3234:100;3315:12;;3234:100;;1927:140;;;;;;:::i;:::-;;:::i;4157:128::-;;;:::i;4751:360::-;;;;;;:::i;:::-;;:::i;2517:39::-;;;;;;5595:1073;;;;;;:::i;:::-;;:::i;5117:309::-;;;:::i;1662:34::-;;;;;-1:-1:-1;;;;;1662:34:7;;;;;;-1:-1:-1;;;;;1741:32:11;;;1723:51;;1711:2;1696:18;1662:34:7;1577:203:11;577:29:7;;;;;-1:-1:-1;;;;;577:29:7;;;6710:129;;;;;;:::i;:::-;;:::i;3340:119::-;;;;;;:::i;:::-;-1:-1:-1;;;;;3434:18:7;3408:7;3434:18;;;:9;:18;;;;;;;3340:119;2413:26;;;;;-1:-1:-1;;;;;2413:26:7;;;937:266;;;:::i;2482:29::-;;;;;;3465:138;;;:::i;6951:298::-;;;;;;:::i;:::-;;:::i;2639:57::-;;;;;;:::i;:::-;;;;;;;;;;;;;;551:20;;;;;-1:-1:-1;;;;;551:20:7;;;4373:372;;;;;;:::i;:::-;;:::i;2562:29::-;;;;;;7255:353;;;;;;:::i;:::-;;:::i;3609:331::-;;;:::i;2381:26::-;;;;;-1:-1:-1;;;;;2381:26:7;;;2597:35;;;;;;5432:103;;;:::i;2445:31::-;;;;;;3946:205;-1:-1:-1;;;;;4127:16:7;;4009:7;4127:16;;;:7;:16;;;;;;;;;4079:22;:31;;;;;;4035:109;;4127:16;4035:87;;4117:4;;4035:77;;4058:53;;:16;:14;:16::i;:::-;:20;;:53::i;:::-;-1:-1:-1;;;;;4035:18:7;;;;;;:9;:18;;;;;;;:22;:77::i;:::-;:81;;:87::i;:::-;:91;;:109::i;:::-;4028:116;3946:205;-1:-1:-1;;3946:205:7:o;793:138::-;1238:12;:10;:12::i;:::-;864:14:::1;:23:::0;;-1:-1:-1;;;;;;864:23:7::1;-1:-1:-1::0;;;;;864:23:7;::::1;::::0;;::::1;::::0;;;902:22:::1;::::0;1723:51:11;;;902:22:7::1;::::0;1711:2:11;1696:18;902:22:7::1;;;;;;;;793:138:::0;:::o;1927:140::-;1238:12;:10;:12::i;:::-;2018:19:::1;:42:::0;;-1:-1:-1;;;;;;2018:42:7::1;-1:-1:-1::0;;;;;2018:42:7;;;::::1;::::0;;;::::1;::::0;;1927:140::o;4157:128::-;4221:7;4247:31;4262:15;;4247:10;;:14;;:31;;;;:::i;:::-;4240:38;;4157:128;:::o;4751:360::-;1680:1:0;2260:7;;:19;;2252:63;;;;-1:-1:-1;;;2252:63:0;;;;;;;:::i;:::-;;;;;;;;;1680:1;2390:7;:18;4827:10:7::1;7729:16;:14;:16::i;:::-;7706:20;:39:::0;7772:26:::1;:24;:26::i;:::-;7755:14;:43:::0;-1:-1:-1;;;;;7812:21:7;::::1;::::0;7808:154:::1;;7868:15;7875:7;7868:6;:15::i;:::-;-1:-1:-1::0;;;;;7849:16:7;::::1;;::::0;;;:7:::1;:16;::::0;;;;;;;:34;;;;7931:20:::1;::::0;7897:22:::1;:31:::0;;;;;;:54;7808:154:::1;4866:1:::2;4857:6;:10;4849:40;;;::::0;-1:-1:-1;;;4849:40:7;;5651:2:11;4849:40:7::2;::::0;::::2;5633:21:11::0;5690:2;5670:18;;;5663:30;-1:-1:-1;;;5709:18:11;;;5702:47;5766:18;;4849:40:7::2;5449:341:11::0;4849:40:7::2;4914:12;::::0;:24:::2;::::0;4931:6;4914:16:::2;:24::i;:::-;4899:12;:39:::0;4982:10:::2;4972:21;::::0;;;:9:::2;:21;::::0;;;;;:33:::2;::::0;4998:6;4972:25:::2;:33::i;:::-;4958:10;4948:21;::::0;;;:9:::2;:21;::::0;;;;:57;;;;5015:12:::2;::::0;:45:::2;::::0;-1:-1:-1;;;;;5015:12:7;;::::2;::::0;5053:6;5015:25:::2;:45::i;:::-;5075:29;::::0;8236:25:11;;;5085:10:7::2;::::0;5075:29:::2;::::0;8224:2:11;8209:18;5075:29:7::2;;;;;;;;-1:-1:-1::0;;1637:1:0;2563:7;:22;4751:360:7:o;5595:1073::-;1837:19;;-1:-1:-1;;;;;1837:19:7;1823:10;:33;1815:88;;;;-1:-1:-1;;;1815:88:7;;6708:2:11;1815:88:7;;;6690:21:11;6747:2;6727:18;;;6720:30;6786:34;6766:18;;;6759:62;-1:-1:-1;;;6837:18:11;;;6830:40;6887:19;;1815:88:7;6506:406:11;1815:88:7;5702:1:::1;7729:16;:14;:16::i;:::-;7706:20;:39:::0;7772:26:::1;:24;:26::i;:::-;7755:14;:43:::0;-1:-1:-1;;;;;7812:21:7;::::1;::::0;7808:154:::1;;7868:15;7875:7;7868:6;:15::i;:::-;-1:-1:-1::0;;;;;7849:16:7;::::1;;::::0;;;:7:::1;:16;::::0;;;;;;;:34;;;;7931:20:::1;::::0;7897:22:::1;:31:::0;;;;;;:54;7808:154:::1;5739:12:::2;;5720:15;:31;5716:312;;5791:15;::::0;5780:27:::2;::::0;:6;;:10:::2;:27::i;:::-;5767:10;:40:::0;5716:312:::2;;;5858:12;::::0;5838:17:::2;::::0;5858:33:::2;::::0;5875:15:::2;5858:16;:33::i;:::-;5838:53;;5905:16;5924:25;5938:10;;5924:9;:13;;:25;;;;:::i;:::-;6001:15;::::0;5905:44;;-1:-1:-1;5976:41:7::2;::::0;:20:::2;:6:::0;5905:44;5976:10:::2;:20::i;:41::-;5963:10;:54:::0;-1:-1:-1;;5716:312:7::2;6397:12;::::0;;:37:::2;::::0;-1:-1:-1;;;6397:37:7;;6428:4:::2;6397:37:::0;;::::2;1723:51:11::0;;;;6382:12:7::2;::::0;-1:-1:-1;;;;;6397:12:7;;::::2;::::0;:22:::2;::::0;1696:18:11;;6397:37:7::2;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6382:52;;6466:28;6478:15;;6466:7;:11;;:28;;;;:::i;:::-;6452:10;;:42;;6444:79;;;::::0;-1:-1:-1;;;6444:79:7;;5997:2:11;6444:79:7::2;::::0;::::2;5979:21:11::0;6036:2;6016:18;;;6009:30;6075:26;6055:18;;;6048:54;6119:18;;6444:79:7::2;5795:348:11::0;6444:79:7::2;6551:15;6534:14;:32:::0;;;6611:15:::2;::::0;6591:36:::2;::::0;6551:15;6591:19:::2;:36::i;:::-;6576:12;:51:::0;6642:19:::2;::::0;8236:25:11;;;6642:19:7::2;::::0;8224:2:11;8209:18;6642:19:7::2;;;;;;;5706:962;1913:1:::1;5595:1073:::0;:::o;5117:309::-;1680:1:0;2260:7;;:19;;2252:63;;;;-1:-1:-1;;;2252:63:0;;;;;;;:::i;:::-;1680:1;2390:7;:18;5180:10:7::1;7729:16;:14;:16::i;:::-;7706:20;:39:::0;7772:26:::1;:24;:26::i;:::-;7755:14;:43:::0;-1:-1:-1;;;;;7812:21:7;::::1;::::0;7808:154:::1;;7868:15;7875:7;7868:6;:15::i;:::-;-1:-1:-1::0;;;;;7849:16:7;::::1;;::::0;;;:7:::1;:16;::::0;;;;;;;:34;;;;7931:20:::1;::::0;7897:22:::1;:31:::0;;;;;;:54;7808:154:::1;5227:10:::2;5202:14;5219:19:::0;;;:7:::2;:19;::::0;;;;;5252:10;;5248:172:::2;;5286:10;5300:1;5278:19:::0;;;:7:::2;:19;::::0;;;;:23;5315:12:::2;::::0;:45:::2;::::0;-1:-1:-1;;;;;5315:12:7;;::::2;::::0;5353:6;5315:25:::2;:45::i;:::-;5379:30;::::0;8236:25:11;;;5390:10:7::2;::::0;5379:30:::2;::::0;8224:2:11;8209:18;5379:30:7::2;8090:177:11::0;5248:172:7::2;-1:-1:-1::0;;1637:1:0;2563:7;:22;5117:309:7:o;6710:129::-;1238:12;:10;:12::i;:::-;6794:1:::1;7729:16;:14;:16::i;:::-;7706:20;:39:::0;7772:26:::1;:24;:26::i;:::-;7755:14;:43:::0;-1:-1:-1;;;;;7812:21:7;::::1;::::0;7808:154:::1;;7868:15;7875:7;7868:6;:15::i;:::-;-1:-1:-1::0;;;;;7849:16:7;::::1;;::::0;;;:7:::1;:16;::::0;;;;;;;:34;;;;7931:20:::1;::::0;7897:22:::1;:31:::0;;;;;;:54;7808:154:::1;-1:-1:-1::0;6808:12:7::2;:24:::0;6710:129::o;937:266::-;1005:14;;-1:-1:-1;;;;;1005:14:7;991:10;:28;983:94;;;;-1:-1:-1;;;983:94:7;;4063:2:11;983:94:7;;;4045:21:11;4102:2;4082:18;;;4075:30;4141:34;4121:18;;;4114:62;-1:-1:-1;;;4192:18:11;;;4185:51;4253:19;;983:94:7;3861:417:11;983:94:7;1105:5;;;1112:14;1092:35;;;-1:-1:-1;;;;;1105:5:7;;;1997:34:11;;1112:14:7;;;;2062:2:11;2047:18;;2040:43;1092:35:7;;1932:18:11;1092:35:7;;;;;;;1145:14;;;;1137:22;;-1:-1:-1;;;;;;1137:22:7;;;-1:-1:-1;;;;;1145:14:7;;1137:22;;;;1169:27;;;937:266::o;3465:138::-;3531:7;3557:39;3566:15;3583:12;;3557:8;:39::i;6951:298::-;1238:12;:10;:12::i;:::-;7077::::1;::::0;-1:-1:-1;;;;;7053:37:7;;::::1;7077:12:::0;::::1;7053:37;;7045:83;;;::::0;-1:-1:-1;;;7045:83:7;;7890:2:11;7045:83:7::1;::::0;::::1;7872:21:11::0;7929:2;7909:18;;;7902:30;7968:34;7948:18;;;7941:62;-1:-1:-1;;;8019:18:11;;;8012:31;8060:19;;7045:83:7::1;7688:397:11::0;7045:83:7::1;7172:5;::::0;7138:53:::1;::::0;-1:-1:-1;;;;;7138:33:7;;::::1;::::0;7172:5:::1;7179:11:::0;7138:33:::1;:53::i;:::-;7206:36;::::0;;-1:-1:-1;;;;;2666:32:11;;2648:51;;2730:2;2715:18;;2708:34;;;7206:36:7::1;::::0;2621:18:11;7206:36:7::1;;;;;;;6951:298:::0;;:::o;4373:372::-;1680:1:0;2260:7;;:19;;2252:63;;;;-1:-1:-1;;;2252:63:0;;;;;;;:::i;:::-;1680:1;2390:7;:18;4448:10:7::1;7729:16;:14;:16::i;:::-;7706:20;:39:::0;7772:26:::1;:24;:26::i;:::-;7755:14;:43:::0;-1:-1:-1;;;;;7812:21:7;::::1;::::0;7808:154:::1;;7868:15;7875:7;7868:6;:15::i;:::-;-1:-1:-1::0;;;;;7849:16:7;::::1;;::::0;;;:7:::1;:16;::::0;;;;;;;:34;;;;7931:20:::1;::::0;7897:22:::1;:31:::0;;;;;;:54;7808:154:::1;4487:1:::2;4478:6;:10;4470:37;;;::::0;-1:-1:-1;;;4470:37:7;;4485:2:11;4470:37:7::2;::::0;::::2;4467:21:11::0;4524:2;4504:18;;;4497:30;-1:-1:-1;;;4543:18:11;;;4536:44;4597:18;;4470:37:7::2;4283:338:11::0;4470:37:7::2;4532:12;::::0;:24:::2;::::0;4549:6;4532:16:::2;:24::i;:::-;4517:12;:39:::0;4600:10:::2;4590:21;::::0;;;:9:::2;:21;::::0;;;;;:33:::2;::::0;4616:6;4590:25:::2;:33::i;:::-;4576:10;4566:21;::::0;;;:9:::2;:21;::::0;;;;:57;;;;4633:12:::2;::::0;:64:::2;::::0;-1:-1:-1;;;;;4633:12:7;;::::2;::::0;4683:4:::2;4690:6:::0;4633:29:::2;:64::i;:::-;4712:26;::::0;8236:25:11;;;4719:10:7::2;::::0;4712:26:::2;::::0;8224:2:11;8209:18;4712:26:7::2;8090:177:11::0;7255:353:7;1238:12;:10;:12::i;:::-;7377::::1;;7359:15;:30;7338:165;;;::::0;-1:-1:-1;;;7338:165:7;;3566:2:11;7338:165:7::1;::::0;::::1;3548:21:11::0;3605:2;3585:18;;;3578:30;3644:34;3624:18;;;3617:62;3715:34;3695:18;;;3688:62;3787:26;3766:19;;;3759:55;3831:19;;7338:165:7::1;3364:492:11::0;7338:165:7::1;7513:15;:34:::0;;;7562:39:::1;::::0;8236:25:11;;;7562:39:7::1;::::0;8224:2:11;8209:18;7562:39:7::1;8090:177:11::0;3609:331:7;3665:7;3688:12;;3704:1;3688:17;3684:75;;;-1:-1:-1;3728:20:7;;;3609:331::o;3684:75::-;3787:146;3829:90;3906:12;;3829:72;3896:4;3829:62;3880:10;;3829:46;3860:14;;3829:26;:24;:26::i;:46::-;:50;;:62::i;:90::-;3787:20;;;:24;:146::i;5432:103::-;5495:10;5485:21;;;;:9;:21;;;;;;5476:31;;:8;:31::i;:::-;5517:11;:9;:11::i;:::-;5432:103::o;3039:96:5:-;3097:7;3123:5;3127:1;3123;:5;:::i;:::-;3116:12;3039:96;-1:-1:-1;;;3039:96:5:o;3382:::-;3440:7;3466:5;3470:1;3466;:5;:::i;3767:96::-;3825:7;3851:5;3855:1;3851;:5;:::i;2672:96::-;2730:7;2756:5;2760:1;2756;:5;:::i;1274:131:7:-;1341:5;;-1:-1:-1;;;;;1341:5:7;1327:10;:19;1319:79;;;;-1:-1:-1;;;1319:79:7;;5235:2:11;1319:79:7;;;5217:21:11;5274:2;5254:18;;;5247:30;5313:34;5293:18;;;5286:62;-1:-1:-1;;;5364:18:11;;;5357:45;5419:19;;1319:79:7;5033:411:11;634:175:2;743:58;;-1:-1:-1;;;;;2666:32:11;;743:58:2;;;2648:51:11;2715:18;;;2708:34;;;716:86:2;;736:5;;-1:-1:-1;;;766:23:2;2621:18:11;;743:58:2;;;;-1:-1:-1;;743:58:2;;;;;;;;;;;;;;-1:-1:-1;;;;;743:58:2;-1:-1:-1;;;;;;743:58:2;;;;;;;;;;716:19;:86::i;:::-;634:175;;;:::o;391:104:4:-;449:7;479:1;475;:5;:13;;487:1;475:13;;;-1:-1:-1;483:1:4;;391:104;-1:-1:-1;391:104:4:o;815:203:2:-;942:68;;-1:-1:-1;;;;;2352:15:11;;;942:68:2;;;2334:34:11;2404:15;;2384:18;;;2377:43;2436:18;;;2429:34;;;915:96:2;;935:5;;-1:-1:-1;;;965:27:2;2269:18:11;;942:68:2;2094:375:11;915:96:2;815:203;;;;:::o;3022:751::-;3441:23;3467:69;3495:4;3467:69;;;;;;;;;;;;;;;;;3475:5;-1:-1:-1;;;;;3467:27:2;;;:69;;;;;:::i;:::-;3550:17;;3441:95;;-1:-1:-1;3550:21:2;3546:221;;3690:10;3679:30;;;;;;;;;;;;:::i;:::-;3671:85;;;;-1:-1:-1;;;3671:85:2;;7119:2:11;3671:85:2;;;7101:21:11;7158:2;7138:18;;;7131:30;7197:34;7177:18;;;7170:62;-1:-1:-1;;;7248:18:11;;;7241:40;7298:19;;3671:85:2;6917:406:11;3573:193:3;3676:12;3707:52;3729:6;3737:4;3743:1;3746:12;3707:21;:52::i;:::-;3700:59;3573:193;-1:-1:-1;;;;3573:193:3:o;4600:523::-;4727:12;4784:5;4759:21;:30;;4751:81;;;;-1:-1:-1;;;4751:81:3;;4828:2:11;4751:81:3;;;4810:21:11;4867:2;4847:18;;;4840:30;4906:34;4886:18;;;4879:62;-1:-1:-1;;;4957:18:11;;;4950:36;5003:19;;4751:81:3;4626:402:11;4751:81:3;1078:20;;4842:60;;;;-1:-1:-1;;;4842:60:3;;6350:2:11;4842:60:3;;;6332:21:11;6389:2;6369:18;;;6362:30;6428:31;6408:18;;;6401:59;6477:18;;4842:60:3;6148:353:11;4842:60:3;4973:12;4987:23;5014:6;-1:-1:-1;;;;;5014:11:3;5034:5;5042:4;5014:33;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4972:75;;;;5064:52;5082:7;5091:10;5103:12;5064:17;:52::i;:::-;5057:59;4600:523;-1:-1:-1;;;;;;;4600:523:3:o;7083:725::-;7198:12;7226:7;7222:580;;;-1:-1:-1;7256:10:3;7249:17;;7222:580;7367:17;;:21;7363:429;;7625:10;7619:17;7685:15;7672:10;7668:2;7664:19;7657:44;7363:429;7764:12;7757:20;;-1:-1:-1;;;7757:20:3;;;;;;;;:::i;14:173:11:-;82:20;;-1:-1:-1;;;;;131:31:11;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:186::-;251:6;304:2;292:9;283:7;279:23;275:32;272:52;;;320:1;317;310:12;272:52;343:29;362:9;343:29;:::i;383:254::-;451:6;459;512:2;500:9;491:7;487:23;483:32;480:52;;;528:1;525;518:12;480:52;551:29;570:9;551:29;:::i;:::-;541:39;627:2;612:18;;;;599:32;;-1:-1:-1;;;383:254:11:o;642:277::-;709:6;762:2;750:9;741:7;737:23;733:32;730:52;;;778:1;775;768:12;730:52;810:9;804:16;863:5;856:13;849:21;842:5;839:32;829:60;;885:1;882;875:12;924:180;983:6;1036:2;1024:9;1015:7;1011:23;1007:32;1004:52;;;1052:1;1049;1042:12;1004:52;-1:-1:-1;1075:23:11;;924:180;-1:-1:-1;924:180:11:o;1109:184::-;1179:6;1232:2;1220:9;1211:7;1207:23;1203:32;1200:52;;;1248:1;1245;1238:12;1200:52;-1:-1:-1;1271:16:11;;1109:184;-1:-1:-1;1109:184:11:o;1298:274::-;1427:3;1465:6;1459:13;1481:53;1527:6;1522:3;1515:4;1507:6;1503:17;1481:53;:::i;:::-;1550:16;;;;;1298:274;-1:-1:-1;;1298:274:11:o;2976:383::-;3125:2;3114:9;3107:21;3088:4;3157:6;3151:13;3200:6;3195:2;3184:9;3180:18;3173:34;3216:66;3275:6;3270:2;3259:9;3255:18;3250:2;3242:6;3238:15;3216:66;:::i;:::-;3343:2;3322:15;-1:-1:-1;;3318:29:11;3303:45;;;;3350:2;3299:54;;2976:383;-1:-1:-1;;2976:383:11:o;7328:355::-;7530:2;7512:21;;;7569:2;7549:18;;;7542:30;7608:33;7603:2;7588:18;;7581:61;7674:2;7659:18;;7328:355::o;8272:128::-;8312:3;8343:1;8339:6;8336:1;8333:13;8330:39;;;8349:18;;:::i;:::-;-1:-1:-1;8385:9:11;;8272:128::o;8405:217::-;8445:1;8471;8461:132;;8515:10;8510:3;8506:20;8503:1;8496:31;8550:4;8547:1;8540:15;8578:4;8575:1;8568:15;8461:132;-1:-1:-1;8607:9:11;;8405:217::o;8627:168::-;8667:7;8733:1;8729;8725:6;8721:14;8718:1;8715:21;8710:1;8703:9;8696:17;8692:45;8689:71;;;8740:18;;:::i;:::-;-1:-1:-1;8780:9:11;;8627:168::o;8800:125::-;8840:4;8868:1;8865;8862:8;8859:34;;;8873:18;;:::i;:::-;-1:-1:-1;8910:9:11;;8800:125::o;8930:258::-;9002:1;9012:113;9026:6;9023:1;9020:13;9012:113;;;9102:11;;;9096:18;9083:11;;;9076:39;9048:2;9041:10;9012:113;;;9143:6;9140:1;9137:13;9134:48;;;-1:-1:-1;;9178:1:11;9160:16;;9153:27;8930:258::o;9193:127::-;9254:10;9249:3;9245:20;9242:1;9235:31;9285:4;9282:1;9275:15;9309:4;9306:1;9299:15",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "offset": [
    2167,
    8343
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1CE JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x72F702F3 GT PUSH2 0x104 JUMPI DUP1 PUSH4 0xA694FC3A GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xD1AF0C7D GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xD1AF0C7D EQ PUSH2 0x3AB JUMPI DUP1 PUSH4 0xDF136D65 EQ PUSH2 0x3BE JUMPI DUP1 PUSH4 0xE9FAD8EE EQ PUSH2 0x3C7 JUMPI DUP1 PUSH4 0xEBE2B12B EQ PUSH2 0x3CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA694FC3A EQ PUSH2 0x374 JUMPI DUP1 PUSH4 0xC8F33C91 EQ PUSH2 0x387 JUMPI DUP1 PUSH4 0xCC1A378F EQ PUSH2 0x390 JUMPI DUP1 PUSH4 0xCD3DAF9D EQ PUSH2 0x3A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x80FAA57D GT PUSH2 0xDE JUMPI DUP1 PUSH4 0x80FAA57D EQ PUSH2 0x326 JUMPI DUP1 PUSH4 0x8980F11F EQ PUSH2 0x32E JUMPI DUP1 PUSH4 0x8B876347 EQ PUSH2 0x341 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x361 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x72F702F3 EQ PUSH2 0x302 JUMPI DUP1 PUSH4 0x79BA5097 EQ PUSH2 0x315 JUMPI DUP1 PUSH4 0x7B0A47EE EQ PUSH2 0x31D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x386A9525 GT PUSH2 0x171 JUMPI DUP1 PUSH4 0x3FC6DF6E GT PUSH2 0x14B JUMPI DUP1 PUSH4 0x3FC6DF6E EQ PUSH2 0x288 JUMPI DUP1 PUSH4 0x53A47BB7 EQ PUSH2 0x2B3 JUMPI DUP1 PUSH4 0x556F6E6B EQ PUSH2 0x2C6 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x386A9525 EQ PUSH2 0x264 JUMPI DUP1 PUSH4 0x3C6B16AB EQ PUSH2 0x26D JUMPI DUP1 PUSH4 0x3D18B912 EQ PUSH2 0x280 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0x1AD JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x22E JUMPI DUP1 PUSH4 0x19762143 EQ PUSH2 0x236 JUMPI DUP1 PUSH4 0x1C1F78EB EQ PUSH2 0x249 JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x251 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH3 0x8CC262 EQ PUSH2 0x1D3 JUMPI DUP1 PUSH4 0x700037D EQ PUSH2 0x1F9 JUMPI DUP1 PUSH4 0x1627540C EQ PUSH2 0x219 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1E6 PUSH2 0x1E1 CALLDATASIZE PUSH1 0x4 PUSH2 0x1252 JUMP JUMPDEST PUSH2 0x3D8 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E6 PUSH2 0x207 CALLDATASIZE PUSH1 0x4 PUSH2 0x1252 JUMP JUMPDEST PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x22C PUSH2 0x227 CALLDATASIZE PUSH1 0x4 PUSH2 0x1252 JUMP JUMPDEST PUSH2 0x456 JUMP JUMPDEST STOP JUMPDEST PUSH1 0xD SLOAD PUSH2 0x1E6 JUMP JUMPDEST PUSH2 0x22C PUSH2 0x244 CALLDATASIZE PUSH1 0x4 PUSH2 0x1252 JUMP JUMPDEST PUSH2 0x4B3 JUMP JUMPDEST PUSH2 0x1E6 PUSH2 0x4DD JUMP JUMPDEST PUSH2 0x22C PUSH2 0x25F CALLDATASIZE PUSH1 0x4 PUSH2 0x12B9 JUMP JUMPDEST PUSH2 0x4FB JUMP JUMPDEST PUSH2 0x1E6 PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x22C PUSH2 0x27B CALLDATASIZE PUSH1 0x4 PUSH2 0x12B9 JUMP JUMPDEST PUSH2 0x660 JUMP JUMPDEST PUSH2 0x22C PUSH2 0x8C2 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x29B SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1F0 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x29B SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x22C PUSH2 0x2D4 CALLDATASIZE PUSH1 0x4 PUSH2 0x12B9 JUMP JUMPDEST PUSH2 0x9BF JUMP JUMPDEST PUSH2 0x1E6 PUSH2 0x2E7 CALLDATASIZE PUSH1 0x4 PUSH2 0x1252 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH2 0x29B SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x22C PUSH2 0xA29 JUMP JUMPDEST PUSH2 0x1E6 PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1E6 PUSH2 0xB13 JUMP JUMPDEST PUSH2 0x22C PUSH2 0x33C CALLDATASIZE PUSH1 0x4 PUSH2 0x126D JUMP JUMPDEST PUSH2 0xB21 JUMP JUMPDEST PUSH2 0x1E6 PUSH2 0x34F CALLDATASIZE PUSH1 0x4 PUSH2 0x1252 JUMP JUMPDEST PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x29B SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x22C PUSH2 0x382 CALLDATASIZE PUSH1 0x4 PUSH2 0x12B9 JUMP JUMPDEST PUSH2 0xBF1 JUMP JUMPDEST PUSH2 0x1E6 PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x22C PUSH2 0x39E CALLDATASIZE PUSH1 0x4 PUSH2 0x12B9 JUMP JUMPDEST PUSH2 0xD3E JUMP JUMPDEST PUSH2 0x1E6 PUSH2 0xE18 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0x29B SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x1E6 PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH2 0x22C PUSH2 0xE64 JUMP JUMPDEST PUSH2 0x1E6 PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH1 0xB SWAP1 SWAP3 MSTORE DUP3 KECCAK256 SLOAD PUSH2 0x450 SWAP2 SWAP1 PUSH2 0x44A SWAP1 PUSH8 0xDE0B6B3A7640000 SWAP1 PUSH2 0x444 SWAP1 PUSH2 0x425 SWAP1 PUSH2 0x41F PUSH2 0xE18 JUMP JUMPDEST SWAP1 PUSH2 0xE87 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 PUSH2 0xE9A JUMP JUMPDEST SWAP1 PUSH2 0xEA6 JUMP JUMPDEST SWAP1 PUSH2 0xEB2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x45E PUSH2 0xEBE JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x906A1C6BD7E3091EA86693DD029A831C19049CE77F1DCE2CE0BAB1CACBABCE22 SWAP1 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0x4BB PUSH2 0xEBE JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4F6 PUSH1 0x8 SLOAD PUSH1 0x7 SLOAD PUSH2 0xE9A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x3 SLOAD EQ ISZERO PUSH2 0x527 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x51E SWAP1 PUSH2 0x133A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x3 SSTORE CALLER PUSH2 0x535 PUSH2 0xE18 JUMP JUMPDEST PUSH1 0xA SSTORE PUSH2 0x540 PUSH2 0xB13 JUMP JUMPDEST PUSH1 0x9 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x587 JUMPI PUSH2 0x55B DUP2 PUSH2 0x3D8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0xA SLOAD PUSH1 0xB SWAP1 SWAP2 MSTORE SWAP2 SWAP1 KECCAK256 SSTORE JUMPDEST PUSH1 0x0 DUP3 GT PUSH2 0x5CB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x43616E6E6F74207769746864726177203 PUSH1 0x7C SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x51E JUMP JUMPDEST PUSH1 0xD SLOAD PUSH2 0x5D8 SWAP1 DUP4 PUSH2 0xE87 JUMP JUMPDEST PUSH1 0xD SSTORE CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x5F5 SWAP1 DUP4 PUSH2 0xE87 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x5 SLOAD PUSH2 0x621 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP5 PUSH2 0xF30 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE CALLER SWAP1 PUSH32 0x7084F5476618D8E60B11EF0D7D3F06914655ADB8793E28FF7F018D4C76D505D5 SWAP1 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP PUSH1 0x1 PUSH1 0x3 SSTORE JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x6CD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616C6C6572206973206E6F742052657761726473446973747269627574696F PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x1B8818DBDB9D1C9858DD PUSH1 0xB2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x51E JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6D7 PUSH2 0xE18 JUMP JUMPDEST PUSH1 0xA SSTORE PUSH2 0x6E2 PUSH2 0xB13 JUMP JUMPDEST PUSH1 0x9 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x729 JUMPI PUSH2 0x6FD DUP2 PUSH2 0x3D8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0xA SLOAD PUSH1 0xB SWAP1 SWAP2 MSTORE SWAP2 SWAP1 KECCAK256 SSTORE JUMPDEST PUSH1 0x6 SLOAD TIMESTAMP LT PUSH2 0x748 JUMPI PUSH1 0x8 SLOAD PUSH2 0x740 SWAP1 DUP4 SWAP1 PUSH2 0xEA6 JUMP JUMPDEST PUSH1 0x7 SSTORE PUSH2 0x78B JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x0 SWAP1 PUSH2 0x758 SWAP1 TIMESTAMP PUSH2 0xE87 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x771 PUSH1 0x7 SLOAD DUP4 PUSH2 0xE9A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x8 SLOAD SWAP1 SWAP2 POP PUSH2 0x785 SWAP1 PUSH2 0x444 DUP7 DUP5 PUSH2 0xEB2 JUMP JUMPDEST PUSH1 0x7 SSTORE POP POP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x7D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x7E8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x80C SWAP2 SWAP1 PUSH2 0x12D2 JUMP JUMPDEST SWAP1 POP PUSH2 0x823 PUSH1 0x8 SLOAD DUP3 PUSH2 0xEA6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x7 SLOAD GT ISZERO PUSH2 0x874 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50726F76696465642072657761726420746F6F20686967680000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x51E JUMP JUMPDEST TIMESTAMP PUSH1 0x9 DUP2 SWAP1 SSTORE PUSH1 0x8 SLOAD PUSH2 0x887 SWAP2 SWAP1 PUSH2 0xEB2 JUMP JUMPDEST PUSH1 0x6 SSTORE PUSH1 0x40 MLOAD DUP4 DUP2 MSTORE PUSH32 0xDE88A922E0D3B88B24E9623EFEB464919C6BF9F66857A65E2BFCF2CE87A9433D SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x3 SLOAD EQ ISZERO PUSH2 0x8E5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x51E SWAP1 PUSH2 0x133A JUMP JUMPDEST PUSH1 0x2 PUSH1 0x3 SSTORE CALLER PUSH2 0x8F3 PUSH2 0xE18 JUMP JUMPDEST PUSH1 0xA SSTORE PUSH2 0x8FE PUSH2 0xB13 JUMP JUMPDEST PUSH1 0x9 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x945 JUMPI PUSH2 0x919 DUP2 PUSH2 0x3D8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0xA SLOAD PUSH1 0xB SWAP1 SWAP2 MSTORE SWAP2 SWAP1 KECCAK256 SSTORE JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP1 ISZERO PUSH2 0x9B6 JUMPI CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SSTORE PUSH1 0x4 SLOAD PUSH2 0x984 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP4 PUSH2 0xF30 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE CALLER SWAP1 PUSH32 0xE2403640BA68FED3A2F88B7557551D1993F84B99BB10FF833F0CF8DB0C5E0486 SWAP1 PUSH1 0x20 ADD PUSH2 0x64F JUMP JUMPDEST POP POP PUSH1 0x1 PUSH1 0x3 SSTORE JUMP JUMPDEST PUSH2 0x9C7 PUSH2 0xEBE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9D1 PUSH2 0xE18 JUMP JUMPDEST PUSH1 0xA SSTORE PUSH2 0x9DC PUSH2 0xB13 JUMP JUMPDEST PUSH1 0x9 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0xA23 JUMPI PUSH2 0x9F7 DUP2 PUSH2 0x3D8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0xA SLOAD PUSH1 0xB SWAP1 SWAP2 MSTORE SWAP2 SWAP1 KECCAK256 SSTORE JUMPDEST POP PUSH1 0x6 SSTORE JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xAA1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x35 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F75206D757374206265206E6F6D696E61746564206265666F726520796F75 PUSH1 0x44 DUP3 ADD MSTORE PUSH21 0x2063616E20616363657074206F776E65727368697 PUSH1 0x5C SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x51E JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND DUP2 MSTORE SWAP3 SWAP1 SWAP2 AND PUSH1 0x20 DUP4 ADD MSTORE PUSH32 0xB532073B38C83145E3E5135377A08BF9AAB55BC0FD7C1179CD4FB995D2A5159C SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x1 DUP1 SLOAD PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND OR SWAP1 SWAP2 SSTORE AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4F6 TIMESTAMP PUSH1 0x6 SLOAD PUSH2 0xF98 JUMP JUMPDEST PUSH2 0xB29 PUSH2 0xEBE JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND SWAP2 AND EQ ISZERO PUSH2 0xB91 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F7420776974686472617720746865207374616B696E6720746F6B65 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x37 PUSH1 0xF9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x51E JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0xBAB SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 AND DUP4 PUSH2 0xF30 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE PUSH32 0x8C1256B8896378CD5044F80C202F9772B9D77DC85C8A6EB51967210B09BFAA28 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x3 SLOAD EQ ISZERO PUSH2 0xC14 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x51E SWAP1 PUSH2 0x133A JUMP JUMPDEST PUSH1 0x2 PUSH1 0x3 SSTORE CALLER PUSH2 0xC22 PUSH2 0xE18 JUMP JUMPDEST PUSH1 0xA SSTORE PUSH2 0xC2D PUSH2 0xB13 JUMP JUMPDEST PUSH1 0x9 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0xC74 JUMPI PUSH2 0xC48 DUP2 PUSH2 0x3D8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0xA SLOAD PUSH1 0xB SWAP1 SWAP2 MSTORE SWAP2 SWAP1 KECCAK256 SSTORE JUMPDEST PUSH1 0x0 DUP3 GT PUSH2 0xCB5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x43616E6E6F74207374616B65203 PUSH1 0x94 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x51E JUMP JUMPDEST PUSH1 0xD SLOAD PUSH2 0xCC2 SWAP1 DUP4 PUSH2 0xEB2 JUMP JUMPDEST PUSH1 0xD SSTORE CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xCDF SWAP1 DUP4 PUSH2 0xEB2 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x5 SLOAD PUSH2 0xD0C SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 ADDRESS DUP6 PUSH2 0xFAE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE CALLER SWAP1 PUSH32 0x9E71BC8EEA02A63969F509818F2DAFB9254532904319F9DBDA79B67BD34A5F3D SWAP1 PUSH1 0x20 ADD PUSH2 0x64F JUMP JUMPDEST PUSH2 0xD46 PUSH2 0xEBE JUMP JUMPDEST PUSH1 0x6 SLOAD TIMESTAMP GT PUSH2 0xDE3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x58 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50726576696F7573207265776172647320706572696F64206D75737420626520 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x636F6D706C657465206265666F7265206368616E67696E672074686520647572 PUSH1 0x64 DUP3 ADD MSTORE PUSH32 0x6174696F6E20666F7220746865206E657720706572696F640000000000000000 PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH2 0x51E JUMP JUMPDEST PUSH1 0x8 DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH32 0xFB46CA5A5E06D4540D6387B930A7C978BCE0DB5F449EC6B3F5D07C6E1D44F2D3 SWAP1 PUSH1 0x20 ADD PUSH2 0x4A8 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xD SLOAD PUSH1 0x0 EQ ISZERO PUSH2 0xE2C JUMPI POP PUSH1 0xA SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x4F6 PUSH2 0xE5B PUSH1 0xD SLOAD PUSH2 0x444 PUSH8 0xDE0B6B3A7640000 PUSH2 0xE55 PUSH1 0x7 SLOAD PUSH2 0xE55 PUSH1 0x9 SLOAD PUSH2 0x41F PUSH2 0xB13 JUMP JUMPDEST SWAP1 PUSH2 0xE9A JUMP JUMPDEST PUSH1 0xA SLOAD SWAP1 PUSH2 0xEB2 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xE7D SWAP1 PUSH2 0x4FB JUMP JUMPDEST PUSH2 0xE85 PUSH2 0x8C2 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE93 DUP3 DUP5 PUSH2 0x13CA JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE93 DUP3 DUP5 PUSH2 0x13AB JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE93 DUP3 DUP5 PUSH2 0x1389 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE93 DUP3 DUP5 PUSH2 0x1371 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xE85 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C792074686520636F6E7472616374206F776E6572206D61792070657266 PUSH1 0x44 DUP3 ADD MSTORE PUSH15 0x37B936903A3434B99030B1BA34B7B7 PUSH1 0x89 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x51E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0xF93 SWAP1 DUP5 SWAP1 PUSH4 0xA9059CBB PUSH1 0xE0 SHL SWAP1 PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 MSTORE PUSH2 0xFEC JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 LT PUSH2 0xFA7 JUMPI DUP2 PUSH2 0xE93 JUMP JUMPDEST POP SWAP1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x24 DUP4 ADD MSTORE DUP4 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0xFE6 SWAP1 DUP6 SWAP1 PUSH4 0x23B872DD PUSH1 0xE0 SHL SWAP1 PUSH1 0x84 ADD PUSH2 0xF5C JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1041 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x10BE SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0xF93 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x105F SWAP2 SWAP1 PUSH2 0x1297 JUMP JUMPDEST PUSH2 0xF93 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x1BDD081CDD58D8D95959 PUSH1 0xB2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x51E JUMP JUMPDEST PUSH1 0x60 PUSH2 0x10CD DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x10D5 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x1136 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x1C8818D85B1B PUSH1 0xD2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x51E JUMP JUMPDEST DUP5 EXTCODESIZE PUSH2 0x1184 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x51E JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x11A0 SWAP2 SWAP1 PUSH2 0x12EB JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x11DD JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x11E2 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x11F2 DUP3 DUP3 DUP7 PUSH2 0x11FD JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x120C JUMPI POP DUP2 PUSH2 0xE93 JUMP JUMPDEST DUP3 MLOAD ISZERO PUSH2 0x121C JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x51E SWAP2 SWAP1 PUSH2 0x1307 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x124D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1264 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE93 DUP3 PUSH2 0x1236 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1280 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1289 DUP4 PUSH2 0x1236 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x12A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xE93 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x12CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x12E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x12FD DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x13E1 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x1326 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x13E1 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1F SWAP1 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x1384 JUMPI PUSH2 0x1384 PUSH2 0x140D JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x13A6 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x13C5 JUMPI PUSH2 0x13C5 PUSH2 0x140D JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x13DC JUMPI PUSH2 0x13DC PUSH2 0x140D JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x13FC JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x13E4 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0xFE6 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ISZERO PUSH1 0x25 SWAP8 PUSH20 0x278F060FF8D7A2D1B87EA3F36EA6B3F9259AD90C 0xD2 EXTCODEHASH 0xEA 0xC4 0xDD PUSH24 0xE964736F6C63430008070033000000000000000000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        2167,
        8343
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        2167,
        8343
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        2167,
        8343
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "5": {
      "fn": null,
      "offset": [
        2167,
        8343
      ],
      "op": "CALLVALUE",
      "path": "7"
    },
    "6": {
      "fn": null,
      "offset": [
        2167,
        8343
      ],
      "op": "DUP1",
      "path": "7"
    },
    "7": {
      "fn": null,
      "offset": [
        2167,
        8343
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "8": {
      "fn": null,
      "offset": [
        2167,
        8343
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        2167,
        8343
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "12": {
      "fn": null,
      "offset": [
        2167,
        8343
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        2167,
        8343
      ],
      "op": "DUP1",
      "path": "7"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        2167,
        8343
      ],
      "op": "REVERT",
      "path": "7"
    },
    "16": {
      "fn": null,
      "offset": [
        2167,
        8343
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "17": {
      "fn": null,
      "offset": [
        2167,
        8343
      ],
      "op": "POP",
      "path": "7"
    },
    "18": {
      "fn": null,
      "offset": [
        2167,
        8343
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        2167,
        8343
      ],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "21": {
      "fn": null,
      "offset": [
        2167,
        8343
      ],
      "op": "LT",
      "path": "7"
    },
    "22": {
      "fn": null,
      "offset": [
        2167,
        8343
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1CE"
    },
    "25": {
      "fn": null,
      "offset": [
        2167,
        8343
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "26": {
      "fn": null,
      "offset": [
        2167,
        8343
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        2167,
        8343
      ],
      "op": "CALLDATALOAD",
      "path": "7"
    },
    "29": {
      "fn": null,
      "offset": [
        2167,
        8343
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        2167,
        8343
      ],
      "op": "SHR",
      "path": "7"
    },
    "32": {
      "fn": null,
      "offset": [
        2167,
        8343
      ],
      "op": "DUP1",
      "path": "7"
    },
    "33": {
      "fn": null,
      "offset": [
        2167,
        8343
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x72F702F3"
    },
    "38": {
      "fn": null,
      "offset": [
        2167,
        8343
      ],
      "op": "GT",
      "path": "7"
    },
    "39": {
      "fn": null,
      "offset": [
        2167,
        8343
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x104"
    },
    "42": {
      "fn": null,
      "offset": [
        2167,
        8343
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "43": {
      "fn": null,
      "offset": [
        2167,
        8343
      ],
      "op": "DUP1",
      "path": "7"
    },
    "44": {
      "fn": null,
      "offset": [
        2167,
        8343
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0xA694FC3A"
    },
    "49": {
      "fn": null,
      "offset": [
        2167,
        8343
      ],
      "op": "GT",
      "path": "7"
    },
    "50": {
      "fn": null,
      "offset": [
        2167,
        8343
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xA2"
    },
    "53": {
      "fn": null,
      "offset": [
        2167,
        8343
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "54": {
      "fn": null,
      "offset": [
        2167,
        8343
      ],
      "op": "DUP1",
      "path": "7"
    },
    "55": {
      "fn": null,
      "offset": [
        2167,
        8343
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0xD1AF0C7D"
    },
    "60": {
      "fn": null,
      "offset": [
        2167,
        8343
      ],
      "op": "GT",
      "path": "7"
    },
    "61": {
      "fn": null,
      "offset": [
        2167,
        8343
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x71"
    },
    "64": {
      "fn": null,
      "offset": [
        2167,
        8343
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "65": {
      "fn": null,
      "offset": [
        2167,
        8343
      ],
      "op": "DUP1",
      "path": "7"
    },
    "66": {
      "fn": null,
      "offset": [
        2167,
        8343
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0xD1AF0C7D"
    },
    "71": {
      "fn": null,
      "offset": [
        2167,
        8343
      ],
      "op": "EQ",
      "path": "7"
    },
    "72": {
      "fn": null,
      "offset": [
        2167,
        8343
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x3AB"
    },
    "75": {
      "fn": null,
      "offset": [
        2167,
        8343
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "76": {
      "fn": null,
      "offset": [
        2167,
        8343
      ],
      "op": "DUP1",
      "path": "7"
    },
    "77": {
      "fn": null,
      "offset": [
        2167,
        8343
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0xDF136D65"
    },
    "82": {
      "fn": null,
      "offset": [
        2167,
        8343
      ],
      "op": "EQ",
      "path": "7"
    },
    "83": {
      "fn": null,
      "offset": [
        2167,
        8343
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x3BE"
    },
    "86": {
      "fn": null,
      "offset": [
        2167,
        8343
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "87": {
      "fn": null,
      "offset": [
        2167,
        8343
      ],
      "op": "DUP1",
      "path": "7"
    },
    "88": {
      "fn": null,
      "offset": [
        2167,
        8343
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0xE9FAD8EE"
    },
    "93": {
      "fn": null,
      "offset": [
        2167,
        8343
      ],
      "op": "EQ",
      "path": "7"
    },
    "94": {
      "fn": null,
      "offset": [
        2167,
        8343
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x3C7"
    },
    "97": {
      "fn": null,
      "offset": [
        2167,
        8343
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "98": {
      "fn": null,
      "offset": [
        2167,
        8343
      ],
      "op": "DUP1",
      "path": "7"
    },
    "99": {
      "fn": null,
      "offset": [
        2167,
        8343
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0xEBE2B12B"
    },
    "104": {
      "fn": null,
      "offset": [
        2167,
        8343
      ],
      "op": "EQ",
      "path": "7"
    },
    "105": {
      "fn": null,
      "offset": [
        2167,
        8343
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x3CF"
    },
    "108": {
      "fn": null,
      "offset": [
        2167,
        8343
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "109": {
      "fn": null,
      "offset": [
        2167,
        8343
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "111": {
      "fn": null,
      "offset": [
        2167,
        8343
      ],
      "op": "DUP1",
      "path": "7"
    },
    "112": {
      "fn": null,
      "offset": [
        2167,
        8343
      ],
      "op": "REVERT",
      "path": "7"
    },
    "113": {
      "fn": null,
      "offset": [
        2167,
        8343
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "114": {
      "fn": null,
      "offset": [
        2167,
        8343
      ],
      "op": "DUP1",
      "path": "7"
    },
    "115": {
      "fn": null,
      "offset": [
        2167,
        8343
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0xA694FC3A"
    },
    "120": {
      "fn": null,
      "offset": [
        2167,
        8343
      ],
      "op": "EQ",
      "path": "7"
    },
    "121": {
      "fn": null,
      "offset": [
        2167,
        8343
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x374"
    },
    "124": {
      "fn": null,
      "offset": [
        2167,
        8343
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "125": {
      "fn": null,
      "offset": [
        2167,
        8343
      ],
      "op": "DUP1",
      "path": "7"
    },
    "126": {
      "fn": null,
      "offset": [
        2167,
        8343
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0xC8F33C91"
    },
    "131": {
      "fn": null,
      "offset": [
        2167,
        8343
      ],
      "op": "EQ",
      "path": "7"
    },
    "132": {
      "fn": null,
      "offset": [
        2167,
        8343
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x387"
    },
    "135": {
      "fn": null,
      "offset": [
        2167,
        8343
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "136": {
      "fn": null,
      "offset": [
        2167,
        8343
      ],
      "op": "DUP1",
      "path": "7"
    },
    "137": {
      "fn": null,
      "offset": [
        2167,
        8343
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0xCC1A378F"
    },
    "142": {
      "fn": null,
      "offset": [
        2167,
        8343
      ],
      "op": "EQ",
      "path": "7"
    },
    "143": {
      "fn": null,
      "offset": [
        2167,
        8343
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x390"
    },
    "146": {
      "fn": null,
      "offset": [
        2167,
        8343
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "147": {
      "fn": null,
      "offset": [
        2167,
        8343
      ],
      "op": "DUP1",
      "path": "7"
    },
    "148": {
      "fn": null,
      "offset": [
        2167,
        8343
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0xCD3DAF9D"
    },
    "153": {
      "fn": null,
      "offset": [
        2167,
        8343
      ],
      "op": "EQ",
      "path": "7"
    },
    "154": {
      "fn": null,
      "offset": [
        2167,
        8343
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x3A3"
    },
    "157": {
      "fn": null,
      "offset": [
        2167,
        8343
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "158": {
      "fn": null,
      "offset": [
        2167,
        8343
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "160": {
      "fn": null,
      "offset": [
        2167,
        8343
      ],
      "op": "DUP1",
      "path": "7"
    },
    "161": {
      "fn": null,
      "offset": [
        2167,
        8343
      ],
      "op": "REVERT",
      "path": "7"
    },
    "162": {
      "fn": null,
      "offset": [
        2167,
        8343
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "163": {
      "fn": null,
      "offset": [
        2167,
        8343
      ],
      "op": "DUP1",
      "path": "7"
    },
    "164": {
      "fn": null,
      "offset": [
        2167,
        8343
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x80FAA57D"
    },
    "169": {
      "fn": null,
      "offset": [
        2167,
        8343
      ],
      "op": "GT",
      "path": "7"
    },
    "170": {
      "fn": null,
      "offset": [
        2167,
        8343
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xDE"
    },
    "173": {
      "fn": null,
      "offset": [
        2167,
        8343
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "174": {
      "fn": null,
      "offset": [
        2167,
        8343
      ],
      "op": "DUP1",
      "path": "7"
    },
    "175": {
      "fn": null,
      "offset": [
        2167,
        8343
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x80FAA57D"
    },
    "180": {
      "fn": null,
      "offset": [
        2167,
        8343
      ],
      "op": "EQ",
      "path": "7"
    },
    "181": {
      "fn": null,
      "offset": [
        2167,
        8343
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x326"
    },
    "184": {
      "fn": null,
      "offset": [
        2167,
        8343
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "185": {
      "fn": null,
      "offset": [
        2167,
        8343
      ],
      "op": "DUP1",
      "path": "7"
    },
    "186": {
      "fn": null,
      "offset": [
        2167,
        8343
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x8980F11F"
    },
    "191": {
      "fn": null,
      "offset": [
        2167,
        8343
      ],
      "op": "EQ",
      "path": "7"
    },
    "192": {
      "fn": null,
      "offset": [
        2167,
        8343
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x32E"
    },
    "195": {
      "fn": null,
      "offset": [
        2167,
        8343
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "196": {
      "fn": null,
      "offset": [
        2167,
        8343
      ],
      "op": "DUP1",
      "path": "7"
    },
    "197": {
      "fn": null,
      "offset": [
        2167,
        8343
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x8B876347"
    },
    "202": {
      "fn": null,
      "offset": [
        2167,
        8343
      ],
      "op": "EQ",
      "path": "7"
    },
    "203": {
      "fn": null,
      "offset": [
        2167,
        8343
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x341"
    },
    "206": {
      "fn": null,
      "offset": [
        2167,
        8343
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "207": {
      "fn": null,
      "offset": [
        2167,
        8343
      ],
      "op": "DUP1",
      "path": "7"
    },
    "208": {
      "fn": null,
      "offset": [
        2167,
        8343
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x8DA5CB5B"
    },
    "213": {
      "fn": null,
      "offset": [
        2167,
        8343
      ],
      "op": "EQ",
      "path": "7"
    },
    "214": {
      "fn": null,
      "offset": [
        2167,
        8343
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x361"
    },
    "217": {
      "fn": null,
      "offset": [
        2167,
        8343
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "218": {
      "fn": null,
      "offset": [
        2167,
        8343
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "220": {
      "fn": null,
      "offset": [
        2167,
        8343
      ],
      "op": "DUP1",
      "path": "7"
    },
    "221": {
      "fn": null,
      "offset": [
        2167,
        8343
      ],
      "op": "REVERT",
      "path": "7"
    },
    "222": {
      "fn": null,
      "offset": [
        2167,
        8343
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "223": {
      "fn": null,
      "offset": [
        2167,
        8343
      ],
      "op": "DUP1",
      "path": "7"
    },
    "224": {
      "fn": null,
      "offset": [
        2167,
        8343
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x72F702F3"
    },
    "229": {
      "fn": null,
      "offset": [
        2167,
        8343
      ],
      "op": "EQ",
      "path": "7"
    },
    "230": {
      "fn": null,
      "offset": [
        2167,
        8343
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x302"
    },
    "233": {
      "fn": null,
      "offset": [
        2167,
        8343
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "234": {
      "fn": null,
      "offset": [
        2167,
        8343
      ],
      "op": "DUP1",
      "path": "7"
    },
    "235": {
      "fn": null,
      "offset": [
        2167,
        8343
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x79BA5097"
    },
    "240": {
      "fn": null,
      "offset": [
        2167,
        8343
      ],
      "op": "EQ",
      "path": "7"
    },
    "241": {
      "fn": null,
      "offset": [
        2167,
        8343
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x315"
    },
    "244": {
      "fn": null,
      "offset": [
        2167,
        8343
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "245": {
      "fn": null,
      "offset": [
        2167,
        8343
      ],
      "op": "DUP1",
      "path": "7"
    },
    "246": {
      "fn": null,
      "offset": [
        2167,
        8343
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x7B0A47EE"
    },
    "251": {
      "fn": null,
      "offset": [
        2167,
        8343
      ],
      "op": "EQ",
      "path": "7"
    },
    "252": {
      "fn": null,
      "offset": [
        2167,
        8343
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x31D"
    },
    "255": {
      "fn": null,
      "offset": [
        2167,
        8343
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "256": {
      "fn": null,
      "offset": [
        2167,
        8343
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "258": {
      "fn": null,
      "offset": [
        2167,
        8343
      ],
      "op": "DUP1",
      "path": "7"
    },
    "259": {
      "fn": null,
      "offset": [
        2167,
        8343
      ],
      "op": "REVERT",
      "path": "7"
    },
    "260": {
      "fn": null,
      "offset": [
        2167,
        8343
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "261": {
      "fn": null,
      "offset": [
        2167,
        8343
      ],
      "op": "DUP1",
      "path": "7"
    },
    "262": {
      "fn": null,
      "offset": [
        2167,
        8343
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x386A9525"
    },
    "267": {
      "fn": null,
      "offset": [
        2167,
        8343
      ],
      "op": "GT",
      "path": "7"
    },
    "268": {
      "fn": null,
      "offset": [
        2167,
        8343
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x171"
    },
    "271": {
      "fn": null,
      "offset": [
        2167,
        8343
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "272": {
      "fn": null,
      "offset": [
        2167,
        8343
      ],
      "op": "DUP1",
      "path": "7"
    },
    "273": {
      "fn": null,
      "offset": [
        2167,
        8343
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x3FC6DF6E"
    },
    "278": {
      "fn": null,
      "offset": [
        2167,
        8343
      ],
      "op": "GT",
      "path": "7"
    },
    "279": {
      "fn": null,
      "offset": [
        2167,
        8343
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x14B"
    },
    "282": {
      "fn": null,
      "offset": [
        2167,
        8343
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "283": {
      "fn": null,
      "offset": [
        2167,
        8343
      ],
      "op": "DUP1",
      "path": "7"
    },
    "284": {
      "fn": null,
      "offset": [
        2167,
        8343
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x3FC6DF6E"
    },
    "289": {
      "fn": null,
      "offset": [
        2167,
        8343
      ],
      "op": "EQ",
      "path": "7"
    },
    "290": {
      "fn": null,
      "offset": [
        2167,
        8343
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x288"
    },
    "293": {
      "fn": null,
      "offset": [
        2167,
        8343
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "294": {
      "fn": null,
      "offset": [
        2167,
        8343
      ],
      "op": "DUP1",
      "path": "7"
    },
    "295": {
      "fn": null,
      "offset": [
        2167,
        8343
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x53A47BB7"
    },
    "300": {
      "fn": null,
      "offset": [
        2167,
        8343
      ],
      "op": "EQ",
      "path": "7"
    },
    "301": {
      "fn": null,
      "offset": [
        2167,
        8343
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2B3"
    },
    "304": {
      "fn": null,
      "offset": [
        2167,
        8343
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "305": {
      "fn": null,
      "offset": [
        2167,
        8343
      ],
      "op": "DUP1",
      "path": "7"
    },
    "306": {
      "fn": null,
      "offset": [
        2167,
        8343
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x556F6E6B"
    },
    "311": {
      "fn": null,
      "offset": [
        2167,
        8343
      ],
      "op": "EQ",
      "path": "7"
    },
    "312": {
      "fn": null,
      "offset": [
        2167,
        8343
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2C6"
    },
    "315": {
      "fn": null,
      "offset": [
        2167,
        8343
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "316": {
      "fn": null,
      "offset": [
        2167,
        8343
      ],
      "op": "DUP1",
      "path": "7"
    },
    "317": {
      "fn": null,
      "offset": [
        2167,
        8343
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x70A08231"
    },
    "322": {
      "fn": null,
      "offset": [
        2167,
        8343
      ],
      "op": "EQ",
      "path": "7"
    },
    "323": {
      "fn": null,
      "offset": [
        2167,
        8343
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2D9"
    },
    "326": {
      "fn": null,
      "offset": [
        2167,
        8343
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "327": {
      "fn": null,
      "offset": [
        2167,
        8343
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "329": {
      "fn": null,
      "offset": [
        2167,
        8343
      ],
      "op": "DUP1",
      "path": "7"
    },
    "330": {
      "fn": null,
      "offset": [
        2167,
        8343
      ],
      "op": "REVERT",
      "path": "7"
    },
    "331": {
      "fn": null,
      "offset": [
        2167,
        8343
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "332": {
      "fn": null,
      "offset": [
        2167,
        8343
      ],
      "op": "DUP1",
      "path": "7"
    },
    "333": {
      "fn": null,
      "offset": [
        2167,
        8343
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x386A9525"
    },
    "338": {
      "fn": null,
      "offset": [
        2167,
        8343
      ],
      "op": "EQ",
      "path": "7"
    },
    "339": {
      "fn": null,
      "offset": [
        2167,
        8343
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x264"
    },
    "342": {
      "fn": null,
      "offset": [
        2167,
        8343
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "343": {
      "fn": null,
      "offset": [
        2167,
        8343
      ],
      "op": "DUP1",
      "path": "7"
    },
    "344": {
      "fn": null,
      "offset": [
        2167,
        8343
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x3C6B16AB"
    },
    "349": {
      "fn": null,
      "offset": [
        2167,
        8343
      ],
      "op": "EQ",
      "path": "7"
    },
    "350": {
      "fn": null,
      "offset": [
        2167,
        8343
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x26D"
    },
    "353": {
      "fn": null,
      "offset": [
        2167,
        8343
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "354": {
      "fn": null,
      "offset": [
        2167,
        8343
      ],
      "op": "DUP1",
      "path": "7"
    },
    "355": {
      "fn": null,
      "offset": [
        2167,
        8343
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x3D18B912"
    },
    "360": {
      "fn": null,
      "offset": [
        2167,
        8343
      ],
      "op": "EQ",
      "path": "7"
    },
    "361": {
      "fn": null,
      "offset": [
        2167,
        8343
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x280"
    },
    "364": {
      "fn": null,
      "offset": [
        2167,
        8343
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "365": {
      "fn": null,
      "offset": [
        2167,
        8343
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "367": {
      "fn": null,
      "offset": [
        2167,
        8343
      ],
      "op": "DUP1",
      "path": "7"
    },
    "368": {
      "fn": null,
      "offset": [
        2167,
        8343
      ],
      "op": "REVERT",
      "path": "7"
    },
    "369": {
      "fn": null,
      "offset": [
        2167,
        8343
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "370": {
      "fn": null,
      "offset": [
        2167,
        8343
      ],
      "op": "DUP1",
      "path": "7"
    },
    "371": {
      "fn": null,
      "offset": [
        2167,
        8343
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x18160DDD"
    },
    "376": {
      "fn": null,
      "offset": [
        2167,
        8343
      ],
      "op": "GT",
      "path": "7"
    },
    "377": {
      "fn": null,
      "offset": [
        2167,
        8343
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1AD"
    },
    "380": {
      "fn": null,
      "offset": [
        2167,
        8343
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "381": {
      "fn": null,
      "offset": [
        2167,
        8343
      ],
      "op": "DUP1",
      "path": "7"
    },
    "382": {
      "fn": null,
      "offset": [
        2167,
        8343
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x18160DDD"
    },
    "387": {
      "fn": null,
      "offset": [
        2167,
        8343
      ],
      "op": "EQ",
      "path": "7"
    },
    "388": {
      "fn": null,
      "offset": [
        2167,
        8343
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x22E"
    },
    "391": {
      "fn": null,
      "offset": [
        2167,
        8343
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "392": {
      "fn": null,
      "offset": [
        2167,
        8343
      ],
      "op": "DUP1",
      "path": "7"
    },
    "393": {
      "fn": null,
      "offset": [
        2167,
        8343
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x19762143"
    },
    "398": {
      "fn": null,
      "offset": [
        2167,
        8343
      ],
      "op": "EQ",
      "path": "7"
    },
    "399": {
      "fn": null,
      "offset": [
        2167,
        8343
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x236"
    },
    "402": {
      "fn": null,
      "offset": [
        2167,
        8343
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "403": {
      "fn": null,
      "offset": [
        2167,
        8343
      ],
      "op": "DUP1",
      "path": "7"
    },
    "404": {
      "fn": null,
      "offset": [
        2167,
        8343
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x1C1F78EB"
    },
    "409": {
      "fn": null,
      "offset": [
        2167,
        8343
      ],
      "op": "EQ",
      "path": "7"
    },
    "410": {
      "fn": null,
      "offset": [
        2167,
        8343
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x249"
    },
    "413": {
      "fn": null,
      "offset": [
        2167,
        8343
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "414": {
      "fn": null,
      "offset": [
        2167,
        8343
      ],
      "op": "DUP1",
      "path": "7"
    },
    "415": {
      "fn": null,
      "offset": [
        2167,
        8343
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x2E1A7D4D"
    },
    "420": {
      "fn": null,
      "offset": [
        2167,
        8343
      ],
      "op": "EQ",
      "path": "7"
    },
    "421": {
      "fn": null,
      "offset": [
        2167,
        8343
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x251"
    },
    "424": {
      "fn": null,
      "offset": [
        2167,
        8343
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "425": {
      "fn": null,
      "offset": [
        2167,
        8343
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "427": {
      "fn": null,
      "offset": [
        2167,
        8343
      ],
      "op": "DUP1",
      "path": "7"
    },
    "428": {
      "fn": null,
      "offset": [
        2167,
        8343
      ],
      "op": "REVERT",
      "path": "7"
    },
    "429": {
      "fn": null,
      "offset": [
        2167,
        8343
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "430": {
      "fn": null,
      "offset": [
        2167,
        8343
      ],
      "op": "DUP1",
      "path": "7"
    },
    "431": {
      "fn": null,
      "offset": [
        2167,
        8343
      ],
      "op": "PUSH3",
      "path": "7",
      "value": "0x8CC262"
    },
    "435": {
      "fn": null,
      "offset": [
        2167,
        8343
      ],
      "op": "EQ",
      "path": "7"
    },
    "436": {
      "fn": null,
      "offset": [
        2167,
        8343
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1D3"
    },
    "439": {
      "fn": null,
      "offset": [
        2167,
        8343
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "440": {
      "fn": null,
      "offset": [
        2167,
        8343
      ],
      "op": "DUP1",
      "path": "7"
    },
    "441": {
      "fn": null,
      "offset": [
        2167,
        8343
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x700037D"
    },
    "446": {
      "fn": null,
      "offset": [
        2167,
        8343
      ],
      "op": "EQ",
      "path": "7"
    },
    "447": {
      "fn": null,
      "offset": [
        2167,
        8343
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1F9"
    },
    "450": {
      "fn": null,
      "offset": [
        2167,
        8343
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "451": {
      "fn": null,
      "offset": [
        2167,
        8343
      ],
      "op": "DUP1",
      "path": "7"
    },
    "452": {
      "fn": null,
      "offset": [
        2167,
        8343
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x1627540C"
    },
    "457": {
      "fn": null,
      "offset": [
        2167,
        8343
      ],
      "op": "EQ",
      "path": "7"
    },
    "458": {
      "fn": null,
      "offset": [
        2167,
        8343
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x219"
    },
    "461": {
      "fn": null,
      "offset": [
        2167,
        8343
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "462": {
      "fn": null,
      "offset": [
        2167,
        8343
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "463": {
      "fn": null,
      "offset": [
        2167,
        8343
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "465": {
      "fn": null,
      "offset": [
        2167,
        8343
      ],
      "op": "DUP1",
      "path": "7"
    },
    "466": {
      "first_revert": true,
      "fn": null,
      "offset": [
        2167,
        8343
      ],
      "op": "REVERT",
      "path": "7"
    },
    "467": {
      "fn": "MockStakingRewards.earned",
      "offset": [
        3946,
        4151
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "468": {
      "fn": "MockStakingRewards.earned",
      "offset": [
        3946,
        4151
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1E6"
    },
    "471": {
      "fn": "MockStakingRewards.earned",
      "offset": [
        3946,
        4151
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1E1"
    },
    "474": {
      "fn": "MockStakingRewards.earned",
      "offset": [
        3946,
        4151
      ],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "475": {
      "fn": "MockStakingRewards.earned",
      "offset": [
        3946,
        4151
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "477": {
      "fn": "MockStakingRewards.earned",
      "offset": [
        3946,
        4151
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1252"
    },
    "480": {
      "fn": "MockStakingRewards.earned",
      "jump": "i",
      "offset": [
        3946,
        4151
      ],
      "op": "JUMP",
      "path": "7"
    },
    "481": {
      "fn": "MockStakingRewards.earned",
      "offset": [
        3946,
        4151
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "482": {
      "fn": "MockStakingRewards.earned",
      "offset": [
        3946,
        4151
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x3D8"
    },
    "485": {
      "fn": "MockStakingRewards.earned",
      "jump": "i",
      "offset": [
        3946,
        4151
      ],
      "op": "JUMP",
      "path": "7"
    },
    "486": {
      "fn": "MockStakingRewards.earned",
      "offset": [
        3946,
        4151
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "487": {
      "fn": "MockStakingRewards.earned",
      "offset": [
        3946,
        4151
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "489": {
      "fn": "MockStakingRewards.earned",
      "offset": [
        3946,
        4151
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "490": {
      "op": "SWAP1"
    },
    "491": {
      "op": "DUP2"
    },
    "492": {
      "op": "MSTORE"
    },
    "493": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "495": {
      "op": "ADD"
    },
    "496": {
      "fn": "MockStakingRewards.earned",
      "offset": [
        3946,
        4151
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "497": {
      "fn": "MockStakingRewards.earned",
      "offset": [
        3946,
        4151
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "499": {
      "fn": "MockStakingRewards.earned",
      "offset": [
        3946,
        4151
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "500": {
      "fn": "MockStakingRewards.earned",
      "offset": [
        3946,
        4151
      ],
      "op": "DUP1",
      "path": "7"
    },
    "501": {
      "fn": "MockStakingRewards.earned",
      "offset": [
        3946,
        4151
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "502": {
      "fn": "MockStakingRewards.earned",
      "offset": [
        3946,
        4151
      ],
      "op": "SUB",
      "path": "7"
    },
    "503": {
      "fn": "MockStakingRewards.earned",
      "offset": [
        3946,
        4151
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "504": {
      "fn": "MockStakingRewards.earned",
      "offset": [
        3946,
        4151
      ],
      "op": "RETURN",
      "path": "7"
    },
    "505": {
      "offset": [
        2702,
        2744
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "506": {
      "fn": "MockStakingRewards.earned",
      "offset": [
        2702,
        2744
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1E6"
    },
    "509": {
      "fn": "MockStakingRewards.earned",
      "offset": [
        2702,
        2744
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x207"
    },
    "512": {
      "fn": "MockStakingRewards.earned",
      "offset": [
        2702,
        2744
      ],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "513": {
      "fn": "MockStakingRewards.earned",
      "offset": [
        2702,
        2744
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "515": {
      "fn": "MockStakingRewards.earned",
      "offset": [
        2702,
        2744
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1252"
    },
    "518": {
      "fn": "MockStakingRewards.earned",
      "jump": "i",
      "offset": [
        2702,
        2744
      ],
      "op": "JUMP",
      "path": "7"
    },
    "519": {
      "fn": "MockStakingRewards.earned",
      "offset": [
        2702,
        2744
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "520": {
      "fn": "MockStakingRewards.earned",
      "offset": [
        2702,
        2744
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xC"
    },
    "522": {
      "fn": "MockStakingRewards.earned",
      "offset": [
        2702,
        2744
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "524": {
      "fn": "MockStakingRewards.earned",
      "offset": [
        2702,
        2744
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "525": {
      "fn": "MockStakingRewards.earned",
      "offset": [
        2702,
        2744
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "527": {
      "fn": "MockStakingRewards.earned",
      "offset": [
        2702,
        2744
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "528": {
      "fn": "MockStakingRewards.earned",
      "offset": [
        2702,
        2744
      ],
      "op": "DUP2",
      "path": "7"
    },
    "529": {
      "fn": "MockStakingRewards.earned",
      "offset": [
        2702,
        2744
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "530": {
      "fn": "MockStakingRewards.earned",
      "offset": [
        2702,
        2744
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "532": {
      "fn": "MockStakingRewards.earned",
      "offset": [
        2702,
        2744
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "533": {
      "fn": "MockStakingRewards.earned",
      "offset": [
        2702,
        2744
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "534": {
      "fn": "MockStakingRewards.earned",
      "offset": [
        2702,
        2744
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "535": {
      "fn": "MockStakingRewards.earned",
      "offset": [
        2702,
        2744
      ],
      "op": "DUP2",
      "path": "7"
    },
    "536": {
      "fn": "MockStakingRewards.earned",
      "offset": [
        2702,
        2744
      ],
      "op": "JUMP",
      "path": "7"
    },
    "537": {
      "fn": "Owned.nominateNewOwner",
      "offset": [
        793,
        931
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "538": {
      "fn": "Owned.nominateNewOwner",
      "offset": [
        793,
        931
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x22C"
    },
    "541": {
      "fn": "Owned.nominateNewOwner",
      "offset": [
        793,
        931
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x227"
    },
    "544": {
      "fn": "Owned.nominateNewOwner",
      "offset": [
        793,
        931
      ],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "545": {
      "fn": "Owned.nominateNewOwner",
      "offset": [
        793,
        931
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "547": {
      "fn": "Owned.nominateNewOwner",
      "offset": [
        793,
        931
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1252"
    },
    "550": {
      "fn": "Owned.nominateNewOwner",
      "jump": "i",
      "offset": [
        793,
        931
      ],
      "op": "JUMP",
      "path": "7"
    },
    "551": {
      "fn": "Owned.nominateNewOwner",
      "offset": [
        793,
        931
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "552": {
      "fn": "Owned.nominateNewOwner",
      "offset": [
        793,
        931
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x456"
    },
    "555": {
      "fn": "Owned.nominateNewOwner",
      "jump": "i",
      "offset": [
        793,
        931
      ],
      "op": "JUMP",
      "path": "7"
    },
    "556": {
      "fn": "Owned.nominateNewOwner",
      "offset": [
        793,
        931
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "557": {
      "fn": "Owned.nominateNewOwner",
      "offset": [
        793,
        931
      ],
      "op": "STOP",
      "path": "7"
    },
    "558": {
      "fn": "MockStakingRewards.totalSupply",
      "offset": [
        3234,
        3334
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "559": {
      "fn": "MockStakingRewards.totalSupply",
      "offset": [
        3315,
        3327
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 0,
      "value": "0xD"
    },
    "561": {
      "fn": "MockStakingRewards.totalSupply",
      "offset": [
        3315,
        3327
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "562": {
      "fn": "MockStakingRewards.totalSupply",
      "offset": [
        3234,
        3334
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1E6"
    },
    "565": {
      "fn": "MockStakingRewards.totalSupply",
      "offset": [
        3234,
        3334
      ],
      "op": "JUMP",
      "path": "7"
    },
    "566": {
      "fn": "RewardsDistributionRecipient.setRewardsDistribution",
      "offset": [
        1927,
        2067
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "567": {
      "fn": "RewardsDistributionRecipient.setRewardsDistribution",
      "offset": [
        1927,
        2067
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x22C"
    },
    "570": {
      "fn": "RewardsDistributionRecipient.setRewardsDistribution",
      "offset": [
        1927,
        2067
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x244"
    },
    "573": {
      "fn": "RewardsDistributionRecipient.setRewardsDistribution",
      "offset": [
        1927,
        2067
      ],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "574": {
      "fn": "RewardsDistributionRecipient.setRewardsDistribution",
      "offset": [
        1927,
        2067
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "576": {
      "fn": "RewardsDistributionRecipient.setRewardsDistribution",
      "offset": [
        1927,
        2067
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1252"
    },
    "579": {
      "fn": "RewardsDistributionRecipient.setRewardsDistribution",
      "jump": "i",
      "offset": [
        1927,
        2067
      ],
      "op": "JUMP",
      "path": "7"
    },
    "580": {
      "fn": "RewardsDistributionRecipient.setRewardsDistribution",
      "offset": [
        1927,
        2067
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "581": {
      "fn": "RewardsDistributionRecipient.setRewardsDistribution",
      "offset": [
        1927,
        2067
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x4B3"
    },
    "584": {
      "fn": "RewardsDistributionRecipient.setRewardsDistribution",
      "jump": "i",
      "offset": [
        1927,
        2067
      ],
      "op": "JUMP",
      "path": "7"
    },
    "585": {
      "fn": "MockStakingRewards.getRewardForDuration",
      "offset": [
        4157,
        4285
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "586": {
      "fn": "MockStakingRewards.getRewardForDuration",
      "offset": [
        4157,
        4285
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1E6"
    },
    "589": {
      "fn": "MockStakingRewards.getRewardForDuration",
      "offset": [
        4157,
        4285
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x4DD"
    },
    "592": {
      "fn": "MockStakingRewards.getRewardForDuration",
      "jump": "i",
      "offset": [
        4157,
        4285
      ],
      "op": "JUMP",
      "path": "7"
    },
    "593": {
      "fn": "MockStakingRewards.withdraw",
      "offset": [
        4751,
        5111
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "594": {
      "fn": "MockStakingRewards.withdraw",
      "offset": [
        4751,
        5111
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x22C"
    },
    "597": {
      "fn": "MockStakingRewards.withdraw",
      "offset": [
        4751,
        5111
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x25F"
    },
    "600": {
      "fn": "MockStakingRewards.withdraw",
      "offset": [
        4751,
        5111
      ],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "601": {
      "fn": "MockStakingRewards.withdraw",
      "offset": [
        4751,
        5111
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "603": {
      "fn": "MockStakingRewards.withdraw",
      "offset": [
        4751,
        5111
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x12B9"
    },
    "606": {
      "fn": "MockStakingRewards.withdraw",
      "jump": "i",
      "offset": [
        4751,
        5111
      ],
      "op": "JUMP",
      "path": "7"
    },
    "607": {
      "fn": "MockStakingRewards.withdraw",
      "offset": [
        4751,
        5111
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "608": {
      "fn": "MockStakingRewards.withdraw",
      "offset": [
        4751,
        5111
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x4FB"
    },
    "611": {
      "fn": "MockStakingRewards.withdraw",
      "jump": "i",
      "offset": [
        4751,
        5111
      ],
      "op": "JUMP",
      "path": "7"
    },
    "612": {
      "offset": [
        2517,
        2556
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "613": {
      "fn": "MockStakingRewards.withdraw",
      "offset": [
        2517,
        2556
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1E6"
    },
    "616": {
      "fn": "MockStakingRewards.withdraw",
      "offset": [
        2517,
        2556
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x8"
    },
    "618": {
      "fn": "MockStakingRewards.withdraw",
      "offset": [
        2517,
        2556
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "619": {
      "fn": "MockStakingRewards.withdraw",
      "offset": [
        2517,
        2556
      ],
      "op": "DUP2",
      "path": "7"
    },
    "620": {
      "fn": "MockStakingRewards.withdraw",
      "offset": [
        2517,
        2556
      ],
      "op": "JUMP",
      "path": "7"
    },
    "621": {
      "fn": "MockStakingRewards.notifyRewardAmount",
      "offset": [
        5595,
        6668
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "622": {
      "fn": "MockStakingRewards.notifyRewardAmount",
      "offset": [
        5595,
        6668
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x22C"
    },
    "625": {
      "fn": "MockStakingRewards.notifyRewardAmount",
      "offset": [
        5595,
        6668
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x27B"
    },
    "628": {
      "fn": "MockStakingRewards.notifyRewardAmount",
      "offset": [
        5595,
        6668
      ],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "629": {
      "fn": "MockStakingRewards.notifyRewardAmount",
      "offset": [
        5595,
        6668
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "631": {
      "fn": "MockStakingRewards.notifyRewardAmount",
      "offset": [
        5595,
        6668
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x12B9"
    },
    "634": {
      "fn": "MockStakingRewards.notifyRewardAmount",
      "jump": "i",
      "offset": [
        5595,
        6668
      ],
      "op": "JUMP",
      "path": "7"
    },
    "635": {
      "fn": "MockStakingRewards.notifyRewardAmount",
      "offset": [
        5595,
        6668
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "636": {
      "fn": "MockStakingRewards.notifyRewardAmount",
      "offset": [
        5595,
        6668
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x660"
    },
    "639": {
      "fn": "MockStakingRewards.notifyRewardAmount",
      "jump": "i",
      "offset": [
        5595,
        6668
      ],
      "op": "JUMP",
      "path": "7"
    },
    "640": {
      "fn": "MockStakingRewards.getReward",
      "offset": [
        5117,
        5426
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "641": {
      "fn": "MockStakingRewards.getReward",
      "offset": [
        5117,
        5426
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x22C"
    },
    "644": {
      "fn": "MockStakingRewards.getReward",
      "offset": [
        5117,
        5426
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x8C2"
    },
    "647": {
      "fn": "MockStakingRewards.getReward",
      "jump": "i",
      "offset": [
        5117,
        5426
      ],
      "op": "JUMP",
      "path": "7"
    },
    "648": {
      "offset": [
        1662,
        1696
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "649": {
      "fn": "MockStakingRewards.getReward",
      "offset": [
        1662,
        1696
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x2"
    },
    "651": {
      "fn": "MockStakingRewards.getReward",
      "offset": [
        1662,
        1696
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "652": {
      "fn": "MockStakingRewards.getReward",
      "offset": [
        1662,
        1696
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x29B"
    },
    "655": {
      "fn": "MockStakingRewards.getReward",
      "offset": [
        1662,
        1696
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "656": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "658": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "660": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "662": {
      "op": "SHL"
    },
    "663": {
      "op": "SUB"
    },
    "664": {
      "offset": [
        1662,
        1696
      ],
      "op": "AND",
      "path": "7"
    },
    "665": {
      "fn": "MockStakingRewards.getReward",
      "offset": [
        1662,
        1696
      ],
      "op": "DUP2",
      "path": "7"
    },
    "666": {
      "fn": "MockStakingRewards.getReward",
      "offset": [
        1662,
        1696
      ],
      "op": "JUMP",
      "path": "7"
    },
    "667": {
      "fn": "MockStakingRewards.getReward",
      "offset": [
        1662,
        1696
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "668": {
      "fn": "MockStakingRewards.getReward",
      "offset": [
        1662,
        1696
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "670": {
      "fn": "MockStakingRewards.getReward",
      "offset": [
        1662,
        1696
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "671": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "673": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "675": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "677": {
      "op": "SHL"
    },
    "678": {
      "op": "SUB"
    },
    "679": {
      "op": "SWAP1"
    },
    "680": {
      "op": "SWAP2"
    },
    "681": {
      "op": "AND"
    },
    "682": {
      "op": "DUP2"
    },
    "683": {
      "op": "MSTORE"
    },
    "684": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "686": {
      "op": "ADD"
    },
    "687": {
      "offset": [
        1662,
        1696
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1F0"
    },
    "690": {
      "op": "JUMP"
    },
    "691": {
      "offset": [
        577,
        606
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "692": {
      "fn": "MockStakingRewards.getReward",
      "offset": [
        577,
        606
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1"
    },
    "694": {
      "fn": "MockStakingRewards.getReward",
      "offset": [
        577,
        606
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "695": {
      "fn": "MockStakingRewards.getReward",
      "offset": [
        577,
        606
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x29B"
    },
    "698": {
      "fn": "MockStakingRewards.getReward",
      "offset": [
        577,
        606
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "699": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "701": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "703": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "705": {
      "op": "SHL"
    },
    "706": {
      "op": "SUB"
    },
    "707": {
      "offset": [
        577,
        606
      ],
      "op": "AND",
      "path": "7"
    },
    "708": {
      "fn": "MockStakingRewards.getReward",
      "offset": [
        577,
        606
      ],
      "op": "DUP2",
      "path": "7"
    },
    "709": {
      "fn": "MockStakingRewards.getReward",
      "offset": [
        577,
        606
      ],
      "op": "JUMP",
      "path": "7"
    },
    "710": {
      "fn": "MockStakingRewards.updatePeriodFinish",
      "offset": [
        6710,
        6839
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "711": {
      "fn": "MockStakingRewards.updatePeriodFinish",
      "offset": [
        6710,
        6839
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x22C"
    },
    "714": {
      "fn": "MockStakingRewards.updatePeriodFinish",
      "offset": [
        6710,
        6839
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2D4"
    },
    "717": {
      "fn": "MockStakingRewards.updatePeriodFinish",
      "offset": [
        6710,
        6839
      ],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "718": {
      "fn": "MockStakingRewards.updatePeriodFinish",
      "offset": [
        6710,
        6839
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "720": {
      "fn": "MockStakingRewards.updatePeriodFinish",
      "offset": [
        6710,
        6839
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x12B9"
    },
    "723": {
      "fn": "MockStakingRewards.updatePeriodFinish",
      "jump": "i",
      "offset": [
        6710,
        6839
      ],
      "op": "JUMP",
      "path": "7"
    },
    "724": {
      "fn": "MockStakingRewards.updatePeriodFinish",
      "offset": [
        6710,
        6839
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "725": {
      "fn": "MockStakingRewards.updatePeriodFinish",
      "offset": [
        6710,
        6839
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x9BF"
    },
    "728": {
      "fn": "MockStakingRewards.updatePeriodFinish",
      "jump": "i",
      "offset": [
        6710,
        6839
      ],
      "op": "JUMP",
      "path": "7"
    },
    "729": {
      "fn": "MockStakingRewards.balanceOf",
      "offset": [
        3340,
        3459
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "730": {
      "fn": "MockStakingRewards.balanceOf",
      "offset": [
        3340,
        3459
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1E6"
    },
    "733": {
      "fn": "MockStakingRewards.balanceOf",
      "offset": [
        3340,
        3459
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2E7"
    },
    "736": {
      "fn": "MockStakingRewards.balanceOf",
      "offset": [
        3340,
        3459
      ],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "737": {
      "fn": "MockStakingRewards.balanceOf",
      "offset": [
        3340,
        3459
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "739": {
      "fn": "MockStakingRewards.balanceOf",
      "offset": [
        3340,
        3459
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1252"
    },
    "742": {
      "fn": "MockStakingRewards.balanceOf",
      "jump": "i",
      "offset": [
        3340,
        3459
      ],
      "op": "JUMP",
      "path": "7"
    },
    "743": {
      "fn": "MockStakingRewards.balanceOf",
      "offset": [
        3340,
        3459
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "744": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "746": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "748": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "750": {
      "op": "SHL"
    },
    "751": {
      "op": "SUB"
    },
    "752": {
      "fn": "MockStakingRewards.balanceOf",
      "offset": [
        3434,
        3452
      ],
      "op": "AND",
      "path": "7",
      "statement": 1
    },
    "753": {
      "fn": "MockStakingRewards.balanceOf",
      "offset": [
        3408,
        3415
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "755": {
      "fn": "MockStakingRewards.balanceOf",
      "offset": [
        3434,
        3452
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "756": {
      "fn": "MockStakingRewards.balanceOf",
      "offset": [
        3434,
        3452
      ],
      "op": "DUP2",
      "path": "7"
    },
    "757": {
      "fn": "MockStakingRewards.balanceOf",
      "offset": [
        3434,
        3452
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "758": {
      "fn": "MockStakingRewards.balanceOf",
      "offset": [
        3434,
        3443
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xE"
    },
    "760": {
      "fn": "MockStakingRewards.balanceOf",
      "offset": [
        3434,
        3452
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "762": {
      "fn": "MockStakingRewards.balanceOf",
      "offset": [
        3434,
        3452
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "763": {
      "fn": "MockStakingRewards.balanceOf",
      "offset": [
        3434,
        3452
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "765": {
      "fn": "MockStakingRewards.balanceOf",
      "offset": [
        3434,
        3452
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "766": {
      "fn": "MockStakingRewards.balanceOf",
      "offset": [
        3434,
        3452
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "767": {
      "fn": "MockStakingRewards.balanceOf",
      "offset": [
        3434,
        3452
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "768": {
      "fn": "MockStakingRewards.balanceOf",
      "offset": [
        3434,
        3452
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "769": {
      "fn": "MockStakingRewards.balanceOf",
      "offset": [
        3340,
        3459
      ],
      "op": "JUMP",
      "path": "7"
    },
    "770": {
      "offset": [
        2413,
        2439
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "771": {
      "fn": "MockStakingRewards.balanceOf",
      "offset": [
        2413,
        2439
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x5"
    },
    "773": {
      "fn": "MockStakingRewards.balanceOf",
      "offset": [
        2413,
        2439
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "774": {
      "fn": "MockStakingRewards.balanceOf",
      "offset": [
        2413,
        2439
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x29B"
    },
    "777": {
      "fn": "MockStakingRewards.balanceOf",
      "offset": [
        2413,
        2439
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "778": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "780": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "782": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "784": {
      "op": "SHL"
    },
    "785": {
      "op": "SUB"
    },
    "786": {
      "offset": [
        2413,
        2439
      ],
      "op": "AND",
      "path": "7"
    },
    "787": {
      "fn": "MockStakingRewards.balanceOf",
      "offset": [
        2413,
        2439
      ],
      "op": "DUP2",
      "path": "7"
    },
    "788": {
      "fn": "MockStakingRewards.balanceOf",
      "offset": [
        2413,
        2439
      ],
      "op": "JUMP",
      "path": "7"
    },
    "789": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        937,
        1203
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "790": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        937,
        1203
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x22C"
    },
    "793": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        937,
        1203
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xA29"
    },
    "796": {
      "fn": "Owned.acceptOwnership",
      "jump": "i",
      "offset": [
        937,
        1203
      ],
      "op": "JUMP",
      "path": "7"
    },
    "797": {
      "offset": [
        2482,
        2511
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "798": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        2482,
        2511
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1E6"
    },
    "801": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        2482,
        2511
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x7"
    },
    "803": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        2482,
        2511
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "804": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        2482,
        2511
      ],
      "op": "DUP2",
      "path": "7"
    },
    "805": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        2482,
        2511
      ],
      "op": "JUMP",
      "path": "7"
    },
    "806": {
      "fn": "MockStakingRewards.lastTimeRewardApplicable",
      "offset": [
        3465,
        3603
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "807": {
      "fn": "MockStakingRewards.lastTimeRewardApplicable",
      "offset": [
        3465,
        3603
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1E6"
    },
    "810": {
      "fn": "MockStakingRewards.lastTimeRewardApplicable",
      "offset": [
        3465,
        3603
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xB13"
    },
    "813": {
      "fn": "MockStakingRewards.lastTimeRewardApplicable",
      "jump": "i",
      "offset": [
        3465,
        3603
      ],
      "op": "JUMP",
      "path": "7"
    },
    "814": {
      "fn": "MockStakingRewards.recoverERC20",
      "offset": [
        6951,
        7249
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "815": {
      "fn": "MockStakingRewards.recoverERC20",
      "offset": [
        6951,
        7249
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x22C"
    },
    "818": {
      "fn": "MockStakingRewards.recoverERC20",
      "offset": [
        6951,
        7249
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x33C"
    },
    "821": {
      "fn": "MockStakingRewards.recoverERC20",
      "offset": [
        6951,
        7249
      ],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "822": {
      "fn": "MockStakingRewards.recoverERC20",
      "offset": [
        6951,
        7249
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "824": {
      "fn": "MockStakingRewards.recoverERC20",
      "offset": [
        6951,
        7249
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x126D"
    },
    "827": {
      "fn": "MockStakingRewards.recoverERC20",
      "jump": "i",
      "offset": [
        6951,
        7249
      ],
      "op": "JUMP",
      "path": "7"
    },
    "828": {
      "fn": "MockStakingRewards.recoverERC20",
      "offset": [
        6951,
        7249
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "829": {
      "fn": "MockStakingRewards.recoverERC20",
      "offset": [
        6951,
        7249
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xB21"
    },
    "832": {
      "fn": "MockStakingRewards.recoverERC20",
      "jump": "i",
      "offset": [
        6951,
        7249
      ],
      "op": "JUMP",
      "path": "7"
    },
    "833": {
      "offset": [
        2639,
        2696
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "834": {
      "fn": "MockStakingRewards.recoverERC20",
      "offset": [
        2639,
        2696
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1E6"
    },
    "837": {
      "fn": "MockStakingRewards.recoverERC20",
      "offset": [
        2639,
        2696
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x34F"
    },
    "840": {
      "fn": "MockStakingRewards.recoverERC20",
      "offset": [
        2639,
        2696
      ],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "841": {
      "fn": "MockStakingRewards.recoverERC20",
      "offset": [
        2639,
        2696
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "843": {
      "fn": "MockStakingRewards.recoverERC20",
      "offset": [
        2639,
        2696
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1252"
    },
    "846": {
      "fn": "MockStakingRewards.recoverERC20",
      "jump": "i",
      "offset": [
        2639,
        2696
      ],
      "op": "JUMP",
      "path": "7"
    },
    "847": {
      "fn": "MockStakingRewards.recoverERC20",
      "offset": [
        2639,
        2696
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "848": {
      "fn": "MockStakingRewards.recoverERC20",
      "offset": [
        2639,
        2696
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xB"
    },
    "850": {
      "fn": "MockStakingRewards.recoverERC20",
      "offset": [
        2639,
        2696
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "852": {
      "fn": "MockStakingRewards.recoverERC20",
      "offset": [
        2639,
        2696
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "853": {
      "fn": "MockStakingRewards.recoverERC20",
      "offset": [
        2639,
        2696
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "855": {
      "fn": "MockStakingRewards.recoverERC20",
      "offset": [
        2639,
        2696
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "856": {
      "fn": "MockStakingRewards.recoverERC20",
      "offset": [
        2639,
        2696
      ],
      "op": "DUP2",
      "path": "7"
    },
    "857": {
      "fn": "MockStakingRewards.recoverERC20",
      "offset": [
        2639,
        2696
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "858": {
      "fn": "MockStakingRewards.recoverERC20",
      "offset": [
        2639,
        2696
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "860": {
      "fn": "MockStakingRewards.recoverERC20",
      "offset": [
        2639,
        2696
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "861": {
      "fn": "MockStakingRewards.recoverERC20",
      "offset": [
        2639,
        2696
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "862": {
      "fn": "MockStakingRewards.recoverERC20",
      "offset": [
        2639,
        2696
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "863": {
      "fn": "MockStakingRewards.recoverERC20",
      "offset": [
        2639,
        2696
      ],
      "op": "DUP2",
      "path": "7"
    },
    "864": {
      "fn": "MockStakingRewards.recoverERC20",
      "offset": [
        2639,
        2696
      ],
      "op": "JUMP",
      "path": "7"
    },
    "865": {
      "offset": [
        551,
        571
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "866": {
      "fn": "MockStakingRewards.recoverERC20",
      "offset": [
        551,
        571
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "868": {
      "fn": "MockStakingRewards.recoverERC20",
      "offset": [
        551,
        571
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "869": {
      "fn": "MockStakingRewards.recoverERC20",
      "offset": [
        551,
        571
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x29B"
    },
    "872": {
      "fn": "MockStakingRewards.recoverERC20",
      "offset": [
        551,
        571
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "873": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "875": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "877": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "879": {
      "op": "SHL"
    },
    "880": {
      "op": "SUB"
    },
    "881": {
      "offset": [
        551,
        571
      ],
      "op": "AND",
      "path": "7"
    },
    "882": {
      "fn": "MockStakingRewards.recoverERC20",
      "offset": [
        551,
        571
      ],
      "op": "DUP2",
      "path": "7"
    },
    "883": {
      "fn": "MockStakingRewards.recoverERC20",
      "offset": [
        551,
        571
      ],
      "op": "JUMP",
      "path": "7"
    },
    "884": {
      "fn": "MockStakingRewards.stake",
      "offset": [
        4373,
        4745
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "885": {
      "fn": "MockStakingRewards.stake",
      "offset": [
        4373,
        4745
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x22C"
    },
    "888": {
      "fn": "MockStakingRewards.stake",
      "offset": [
        4373,
        4745
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x382"
    },
    "891": {
      "fn": "MockStakingRewards.stake",
      "offset": [
        4373,
        4745
      ],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "892": {
      "fn": "MockStakingRewards.stake",
      "offset": [
        4373,
        4745
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "894": {
      "fn": "MockStakingRewards.stake",
      "offset": [
        4373,
        4745
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x12B9"
    },
    "897": {
      "fn": "MockStakingRewards.stake",
      "jump": "i",
      "offset": [
        4373,
        4745
      ],
      "op": "JUMP",
      "path": "7"
    },
    "898": {
      "fn": "MockStakingRewards.stake",
      "offset": [
        4373,
        4745
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "899": {
      "fn": "MockStakingRewards.stake",
      "offset": [
        4373,
        4745
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xBF1"
    },
    "902": {
      "fn": "MockStakingRewards.stake",
      "jump": "i",
      "offset": [
        4373,
        4745
      ],
      "op": "JUMP",
      "path": "7"
    },
    "903": {
      "offset": [
        2562,
        2591
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "904": {
      "fn": "MockStakingRewards.stake",
      "offset": [
        2562,
        2591
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1E6"
    },
    "907": {
      "fn": "MockStakingRewards.stake",
      "offset": [
        2562,
        2591
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x9"
    },
    "909": {
      "fn": "MockStakingRewards.stake",
      "offset": [
        2562,
        2591
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "910": {
      "fn": "MockStakingRewards.stake",
      "offset": [
        2562,
        2591
      ],
      "op": "DUP2",
      "path": "7"
    },
    "911": {
      "fn": "MockStakingRewards.stake",
      "offset": [
        2562,
        2591
      ],
      "op": "JUMP",
      "path": "7"
    },
    "912": {
      "fn": "MockStakingRewards.setRewardsDuration",
      "offset": [
        7255,
        7608
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "913": {
      "fn": "MockStakingRewards.setRewardsDuration",
      "offset": [
        7255,
        7608
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x22C"
    },
    "916": {
      "fn": "MockStakingRewards.setRewardsDuration",
      "offset": [
        7255,
        7608
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x39E"
    },
    "919": {
      "fn": "MockStakingRewards.setRewardsDuration",
      "offset": [
        7255,
        7608
      ],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "920": {
      "fn": "MockStakingRewards.setRewardsDuration",
      "offset": [
        7255,
        7608
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "922": {
      "fn": "MockStakingRewards.setRewardsDuration",
      "offset": [
        7255,
        7608
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x12B9"
    },
    "925": {
      "fn": "MockStakingRewards.setRewardsDuration",
      "jump": "i",
      "offset": [
        7255,
        7608
      ],
      "op": "JUMP",
      "path": "7"
    },
    "926": {
      "fn": "MockStakingRewards.setRewardsDuration",
      "offset": [
        7255,
        7608
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "927": {
      "fn": "MockStakingRewards.setRewardsDuration",
      "offset": [
        7255,
        7608
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xD3E"
    },
    "930": {
      "fn": "MockStakingRewards.setRewardsDuration",
      "jump": "i",
      "offset": [
        7255,
        7608
      ],
      "op": "JUMP",
      "path": "7"
    },
    "931": {
      "fn": "MockStakingRewards.rewardPerToken",
      "offset": [
        3609,
        3940
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "932": {
      "fn": "MockStakingRewards.rewardPerToken",
      "offset": [
        3609,
        3940
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1E6"
    },
    "935": {
      "fn": "MockStakingRewards.rewardPerToken",
      "offset": [
        3609,
        3940
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xE18"
    },
    "938": {
      "fn": "MockStakingRewards.rewardPerToken",
      "jump": "i",
      "offset": [
        3609,
        3940
      ],
      "op": "JUMP",
      "path": "7"
    },
    "939": {
      "offset": [
        2381,
        2407
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "940": {
      "fn": "MockStakingRewards.rewardPerToken",
      "offset": [
        2381,
        2407
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "942": {
      "fn": "MockStakingRewards.rewardPerToken",
      "offset": [
        2381,
        2407
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "943": {
      "fn": "MockStakingRewards.rewardPerToken",
      "offset": [
        2381,
        2407
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x29B"
    },
    "946": {
      "fn": "MockStakingRewards.rewardPerToken",
      "offset": [
        2381,
        2407
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "947": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "949": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "951": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "953": {
      "op": "SHL"
    },
    "954": {
      "op": "SUB"
    },
    "955": {
      "offset": [
        2381,
        2407
      ],
      "op": "AND",
      "path": "7"
    },
    "956": {
      "fn": "MockStakingRewards.rewardPerToken",
      "offset": [
        2381,
        2407
      ],
      "op": "DUP2",
      "path": "7"
    },
    "957": {
      "fn": "MockStakingRewards.rewardPerToken",
      "offset": [
        2381,
        2407
      ],
      "op": "JUMP",
      "path": "7"
    },
    "958": {
      "offset": [
        2597,
        2632
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "959": {
      "fn": "MockStakingRewards.rewardPerToken",
      "offset": [
        2597,
        2632
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1E6"
    },
    "962": {
      "fn": "MockStakingRewards.rewardPerToken",
      "offset": [
        2597,
        2632
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xA"
    },
    "964": {
      "fn": "MockStakingRewards.rewardPerToken",
      "offset": [
        2597,
        2632
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "965": {
      "fn": "MockStakingRewards.rewardPerToken",
      "offset": [
        2597,
        2632
      ],
      "op": "DUP2",
      "path": "7"
    },
    "966": {
      "fn": "MockStakingRewards.rewardPerToken",
      "offset": [
        2597,
        2632
      ],
      "op": "JUMP",
      "path": "7"
    },
    "967": {
      "fn": "MockStakingRewards.exit",
      "offset": [
        5432,
        5535
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "968": {
      "fn": "MockStakingRewards.exit",
      "offset": [
        5432,
        5535
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x22C"
    },
    "971": {
      "fn": "MockStakingRewards.exit",
      "offset": [
        5432,
        5535
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xE64"
    },
    "974": {
      "fn": "MockStakingRewards.exit",
      "jump": "i",
      "offset": [
        5432,
        5535
      ],
      "op": "JUMP",
      "path": "7"
    },
    "975": {
      "offset": [
        2445,
        2476
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "976": {
      "fn": "MockStakingRewards.exit",
      "offset": [
        2445,
        2476
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1E6"
    },
    "979": {
      "fn": "MockStakingRewards.exit",
      "offset": [
        2445,
        2476
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x6"
    },
    "981": {
      "fn": "MockStakingRewards.exit",
      "offset": [
        2445,
        2476
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "982": {
      "fn": "MockStakingRewards.exit",
      "offset": [
        2445,
        2476
      ],
      "op": "DUP2",
      "path": "7"
    },
    "983": {
      "fn": "MockStakingRewards.exit",
      "offset": [
        2445,
        2476
      ],
      "op": "JUMP",
      "path": "7"
    },
    "984": {
      "fn": "MockStakingRewards.earned",
      "offset": [
        3946,
        4151
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "985": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "987": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "989": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "991": {
      "op": "SHL"
    },
    "992": {
      "op": "SUB"
    },
    "993": {
      "fn": "MockStakingRewards.earned",
      "offset": [
        4127,
        4143
      ],
      "op": "DUP2",
      "path": "7",
      "statement": 2
    },
    "994": {
      "fn": "MockStakingRewards.earned",
      "offset": [
        4127,
        4143
      ],
      "op": "AND",
      "path": "7"
    },
    "995": {
      "fn": "MockStakingRewards.earned",
      "offset": [
        4009,
        4016
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "997": {
      "fn": "MockStakingRewards.earned",
      "offset": [
        4127,
        4143
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "998": {
      "fn": "MockStakingRewards.earned",
      "offset": [
        4127,
        4143
      ],
      "op": "DUP2",
      "path": "7"
    },
    "999": {
      "fn": "MockStakingRewards.earned",
      "offset": [
        4127,
        4143
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1000": {
      "fn": "MockStakingRewards.earned",
      "offset": [
        4127,
        4134
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xC"
    },
    "1002": {
      "fn": "MockStakingRewards.earned",
      "offset": [
        4127,
        4143
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "1004": {
      "fn": "MockStakingRewards.earned",
      "offset": [
        4127,
        4143
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1005": {
      "fn": "MockStakingRewards.earned",
      "offset": [
        4127,
        4143
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1006": {
      "fn": "MockStakingRewards.earned",
      "offset": [
        4127,
        4143
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1007": {
      "fn": "MockStakingRewards.earned",
      "offset": [
        4127,
        4143
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1009": {
      "fn": "MockStakingRewards.earned",
      "offset": [
        4127,
        4143
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1010": {
      "fn": "MockStakingRewards.earned",
      "offset": [
        4127,
        4143
      ],
      "op": "DUP4",
      "path": "7"
    },
    "1011": {
      "fn": "MockStakingRewards.earned",
      "offset": [
        4127,
        4143
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "1012": {
      "fn": "MockStakingRewards.earned",
      "offset": [
        4127,
        4143
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "1013": {
      "fn": "MockStakingRewards.earned",
      "offset": [
        4079,
        4101
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xB"
    },
    "1015": {
      "fn": "MockStakingRewards.earned",
      "offset": [
        4079,
        4110
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1016": {
      "fn": "MockStakingRewards.earned",
      "offset": [
        4079,
        4110
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "1017": {
      "fn": "MockStakingRewards.earned",
      "offset": [
        4079,
        4110
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1018": {
      "fn": "MockStakingRewards.earned",
      "offset": [
        4079,
        4110
      ],
      "op": "DUP3",
      "path": "7"
    },
    "1019": {
      "fn": "MockStakingRewards.earned",
      "offset": [
        4079,
        4110
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "1020": {
      "fn": "MockStakingRewards.earned",
      "offset": [
        4079,
        4110
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "1021": {
      "fn": "MockStakingRewards.earned",
      "offset": [
        4035,
        4144
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x450"
    },
    "1024": {
      "fn": "MockStakingRewards.earned",
      "offset": [
        4035,
        4144
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "1025": {
      "fn": "MockStakingRewards.earned",
      "offset": [
        4127,
        4143
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1026": {
      "fn": "MockStakingRewards.earned",
      "offset": [
        4035,
        4122
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x44A"
    },
    "1029": {
      "fn": "MockStakingRewards.earned",
      "offset": [
        4035,
        4122
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1030": {
      "fn": "MockStakingRewards.earned",
      "offset": [
        4117,
        4121
      ],
      "op": "PUSH8",
      "path": "7",
      "value": "0xDE0B6B3A7640000"
    },
    "1039": {
      "fn": "MockStakingRewards.earned",
      "offset": [
        4117,
        4121
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1040": {
      "fn": "MockStakingRewards.earned",
      "offset": [
        4035,
        4112
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x444"
    },
    "1043": {
      "fn": "MockStakingRewards.earned",
      "offset": [
        4035,
        4112
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1044": {
      "fn": "MockStakingRewards.earned",
      "offset": [
        4058,
        4111
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x425"
    },
    "1047": {
      "fn": "MockStakingRewards.earned",
      "offset": [
        4058,
        4111
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1048": {
      "fn": "MockStakingRewards.earned",
      "offset": [
        4058,
        4074
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x41F"
    },
    "1051": {
      "fn": "MockStakingRewards.earned",
      "offset": [
        4058,
        4072
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xE18"
    },
    "1054": {
      "fn": "MockStakingRewards.earned",
      "jump": "i",
      "offset": [
        4058,
        4074
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1055": {
      "fn": "MockStakingRewards.earned",
      "offset": [
        4058,
        4074
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1056": {
      "fn": "MockStakingRewards.earned",
      "offset": [
        4058,
        4078
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1057": {
      "fn": "MockStakingRewards.earned",
      "offset": [
        4058,
        4078
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xE87"
    },
    "1060": {
      "fn": "MockStakingRewards.earned",
      "jump": "i",
      "offset": [
        4058,
        4111
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1061": {
      "fn": "MockStakingRewards.earned",
      "offset": [
        4058,
        4111
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1062": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1064": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1066": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1068": {
      "op": "SHL"
    },
    "1069": {
      "op": "SUB"
    },
    "1070": {
      "fn": "MockStakingRewards.earned",
      "offset": [
        4035,
        4053
      ],
      "op": "DUP9",
      "path": "7"
    },
    "1071": {
      "fn": "MockStakingRewards.earned",
      "offset": [
        4035,
        4053
      ],
      "op": "AND",
      "path": "7"
    },
    "1072": {
      "fn": "MockStakingRewards.earned",
      "offset": [
        4035,
        4053
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1074": {
      "fn": "MockStakingRewards.earned",
      "offset": [
        4035,
        4053
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1075": {
      "fn": "MockStakingRewards.earned",
      "offset": [
        4035,
        4053
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1076": {
      "fn": "MockStakingRewards.earned",
      "offset": [
        4035,
        4053
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1077": {
      "fn": "MockStakingRewards.earned",
      "offset": [
        4035,
        4044
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xE"
    },
    "1079": {
      "fn": "MockStakingRewards.earned",
      "offset": [
        4035,
        4053
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "1081": {
      "fn": "MockStakingRewards.earned",
      "offset": [
        4035,
        4053
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1082": {
      "fn": "MockStakingRewards.earned",
      "offset": [
        4035,
        4053
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1084": {
      "fn": "MockStakingRewards.earned",
      "offset": [
        4035,
        4053
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1085": {
      "fn": "MockStakingRewards.earned",
      "offset": [
        4035,
        4053
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "1086": {
      "fn": "MockStakingRewards.earned",
      "offset": [
        4035,
        4053
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "1087": {
      "fn": "MockStakingRewards.earned",
      "offset": [
        4035,
        4053
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1088": {
      "fn": "MockStakingRewards.earned",
      "offset": [
        4035,
        4057
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xE9A"
    },
    "1091": {
      "fn": "MockStakingRewards.earned",
      "jump": "i",
      "offset": [
        4035,
        4112
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1092": {
      "fn": "MockStakingRewards.earned",
      "offset": [
        4035,
        4112
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1093": {
      "fn": "MockStakingRewards.earned",
      "offset": [
        4035,
        4116
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1094": {
      "fn": "MockStakingRewards.earned",
      "offset": [
        4035,
        4116
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xEA6"
    },
    "1097": {
      "fn": "MockStakingRewards.earned",
      "jump": "i",
      "offset": [
        4035,
        4122
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1098": {
      "fn": "MockStakingRewards.earned",
      "offset": [
        4035,
        4122
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1099": {
      "fn": "MockStakingRewards.earned",
      "offset": [
        4035,
        4126
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1100": {
      "fn": "MockStakingRewards.earned",
      "offset": [
        4035,
        4126
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xEB2"
    },
    "1103": {
      "fn": "MockStakingRewards.earned",
      "jump": "i",
      "offset": [
        4035,
        4144
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1104": {
      "fn": "MockStakingRewards.earned",
      "offset": [
        4035,
        4144
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1105": {
      "fn": "MockStakingRewards.earned",
      "offset": [
        4028,
        4144
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "1106": {
      "fn": "MockStakingRewards.earned",
      "offset": [
        3946,
        4151
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "1107": {
      "op": "POP"
    },
    "1108": {
      "op": "POP"
    },
    "1109": {
      "fn": "MockStakingRewards.earned",
      "jump": "o",
      "offset": [
        3946,
        4151
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1110": {
      "fn": "Owned.nominateNewOwner",
      "offset": [
        793,
        931
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1111": {
      "offset": [
        1238,
        1250
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x45E"
    },
    "1114": {
      "offset": [
        1238,
        1248
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xEBE"
    },
    "1117": {
      "jump": "i",
      "offset": [
        1238,
        1250
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1118": {
      "fn": "Owned.nominateNewOwner",
      "offset": [
        1238,
        1250
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1119": {
      "fn": "Owned.nominateNewOwner",
      "offset": [
        864,
        878
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 3,
      "value": "0x1"
    },
    "1121": {
      "fn": "Owned.nominateNewOwner",
      "offset": [
        864,
        887
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1122": {
      "fn": "Owned.nominateNewOwner",
      "offset": [
        864,
        887
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "1123": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1125": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1127": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1129": {
      "op": "SHL"
    },
    "1130": {
      "op": "SUB"
    },
    "1131": {
      "op": "NOT"
    },
    "1132": {
      "fn": "Owned.nominateNewOwner",
      "offset": [
        864,
        887
      ],
      "op": "AND",
      "path": "7"
    },
    "1133": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1135": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1137": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1139": {
      "op": "SHL"
    },
    "1140": {
      "op": "SUB"
    },
    "1141": {
      "fn": "Owned.nominateNewOwner",
      "offset": [
        864,
        887
      ],
      "op": "DUP4",
      "path": "7"
    },
    "1142": {
      "fn": "Owned.nominateNewOwner",
      "offset": [
        864,
        887
      ],
      "op": "AND",
      "path": "7"
    },
    "1143": {
      "fn": "Owned.nominateNewOwner",
      "offset": [
        864,
        887
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1144": {
      "fn": "Owned.nominateNewOwner",
      "offset": [
        864,
        887
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1145": {
      "fn": "Owned.nominateNewOwner",
      "offset": [
        864,
        887
      ],
      "op": "OR",
      "path": "7"
    },
    "1146": {
      "fn": "Owned.nominateNewOwner",
      "offset": [
        864,
        887
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1147": {
      "fn": "Owned.nominateNewOwner",
      "offset": [
        864,
        887
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "1148": {
      "fn": "Owned.nominateNewOwner",
      "offset": [
        864,
        887
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "1149": {
      "fn": "Owned.nominateNewOwner",
      "offset": [
        902,
        924
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 4,
      "value": "0x40"
    },
    "1151": {
      "fn": "Owned.nominateNewOwner",
      "offset": [
        902,
        924
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "1152": {
      "op": "SWAP1"
    },
    "1153": {
      "op": "DUP2"
    },
    "1154": {
      "op": "MSTORE"
    },
    "1155": {
      "fn": "Owned.nominateNewOwner",
      "offset": [
        902,
        924
      ],
      "op": "PUSH32",
      "path": "7",
      "value": "0x906A1C6BD7E3091EA86693DD029A831C19049CE77F1DCE2CE0BAB1CACBABCE22"
    },
    "1188": {
      "fn": "Owned.nominateNewOwner",
      "offset": [
        902,
        924
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1189": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1191": {
      "op": "ADD"
    },
    "1192": {
      "fn": "Owned.nominateNewOwner",
      "offset": [
        902,
        924
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1193": {
      "fn": "Owned.nominateNewOwner",
      "offset": [
        902,
        924
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1195": {
      "fn": "Owned.nominateNewOwner",
      "offset": [
        902,
        924
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "1196": {
      "fn": "Owned.nominateNewOwner",
      "offset": [
        902,
        924
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1197": {
      "fn": "Owned.nominateNewOwner",
      "offset": [
        902,
        924
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "1198": {
      "fn": "Owned.nominateNewOwner",
      "offset": [
        902,
        924
      ],
      "op": "SUB",
      "path": "7"
    },
    "1199": {
      "fn": "Owned.nominateNewOwner",
      "offset": [
        902,
        924
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1200": {
      "fn": "Owned.nominateNewOwner",
      "offset": [
        902,
        924
      ],
      "op": "LOG1",
      "path": "7"
    },
    "1201": {
      "fn": "Owned.nominateNewOwner",
      "offset": [
        793,
        931
      ],
      "op": "POP",
      "path": "7"
    },
    "1202": {
      "fn": "Owned.nominateNewOwner",
      "jump": "o",
      "offset": [
        793,
        931
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1203": {
      "fn": "RewardsDistributionRecipient.setRewardsDistribution",
      "offset": [
        1927,
        2067
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1204": {
      "offset": [
        1238,
        1250
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x4BB"
    },
    "1207": {
      "offset": [
        1238,
        1248
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xEBE"
    },
    "1210": {
      "jump": "i",
      "offset": [
        1238,
        1250
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1211": {
      "fn": "RewardsDistributionRecipient.setRewardsDistribution",
      "offset": [
        1238,
        1250
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1212": {
      "fn": "RewardsDistributionRecipient.setRewardsDistribution",
      "offset": [
        2018,
        2037
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 5,
      "value": "0x2"
    },
    "1214": {
      "fn": "RewardsDistributionRecipient.setRewardsDistribution",
      "offset": [
        2018,
        2060
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1215": {
      "fn": "RewardsDistributionRecipient.setRewardsDistribution",
      "offset": [
        2018,
        2060
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "1216": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1218": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1220": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1222": {
      "op": "SHL"
    },
    "1223": {
      "op": "SUB"
    },
    "1224": {
      "op": "NOT"
    },
    "1225": {
      "fn": "RewardsDistributionRecipient.setRewardsDistribution",
      "offset": [
        2018,
        2060
      ],
      "op": "AND",
      "path": "7"
    },
    "1226": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1228": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1230": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1232": {
      "op": "SHL"
    },
    "1233": {
      "op": "SUB"
    },
    "1234": {
      "fn": "RewardsDistributionRecipient.setRewardsDistribution",
      "offset": [
        2018,
        2060
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "1235": {
      "fn": "RewardsDistributionRecipient.setRewardsDistribution",
      "offset": [
        2018,
        2060
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1236": {
      "fn": "RewardsDistributionRecipient.setRewardsDistribution",
      "offset": [
        2018,
        2060
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "1237": {
      "fn": "RewardsDistributionRecipient.setRewardsDistribution",
      "offset": [
        2018,
        2060
      ],
      "op": "AND",
      "path": "7"
    },
    "1238": {
      "fn": "RewardsDistributionRecipient.setRewardsDistribution",
      "offset": [
        2018,
        2060
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "1239": {
      "fn": "RewardsDistributionRecipient.setRewardsDistribution",
      "offset": [
        2018,
        2060
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1240": {
      "fn": "RewardsDistributionRecipient.setRewardsDistribution",
      "offset": [
        2018,
        2060
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "1241": {
      "fn": "RewardsDistributionRecipient.setRewardsDistribution",
      "offset": [
        2018,
        2060
      ],
      "op": "OR",
      "path": "7"
    },
    "1242": {
      "fn": "RewardsDistributionRecipient.setRewardsDistribution",
      "offset": [
        2018,
        2060
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1243": {
      "fn": "RewardsDistributionRecipient.setRewardsDistribution",
      "offset": [
        2018,
        2060
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "1244": {
      "fn": "RewardsDistributionRecipient.setRewardsDistribution",
      "jump": "o",
      "offset": [
        1927,
        2067
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1245": {
      "fn": "MockStakingRewards.getRewardForDuration",
      "offset": [
        4157,
        4285
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1246": {
      "fn": "MockStakingRewards.getRewardForDuration",
      "offset": [
        4221,
        4228
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1248": {
      "fn": "MockStakingRewards.getRewardForDuration",
      "offset": [
        4247,
        4278
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 6,
      "value": "0x4F6"
    },
    "1251": {
      "fn": "MockStakingRewards.getRewardForDuration",
      "offset": [
        4262,
        4277
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x8"
    },
    "1253": {
      "fn": "MockStakingRewards.getRewardForDuration",
      "offset": [
        4262,
        4277
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "1254": {
      "fn": "MockStakingRewards.getRewardForDuration",
      "offset": [
        4247,
        4257
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x7"
    },
    "1256": {
      "fn": "MockStakingRewards.getRewardForDuration",
      "offset": [
        4247,
        4257
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "1257": {
      "fn": "MockStakingRewards.getRewardForDuration",
      "offset": [
        4247,
        4261
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xE9A"
    },
    "1260": {
      "fn": "MockStakingRewards.getRewardForDuration",
      "offset": [
        4247,
        4261
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1261": {
      "fn": "MockStakingRewards.getRewardForDuration",
      "offset": [
        4247,
        4278
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "1262": {
      "fn": "MockStakingRewards.getRewardForDuration",
      "offset": [
        4247,
        4278
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1263": {
      "fn": "MockStakingRewards.getRewardForDuration",
      "offset": [
        4247,
        4278
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0xFFFFFFFF"
    },
    "1268": {
      "fn": "MockStakingRewards.getRewardForDuration",
      "offset": [
        4247,
        4278
      ],
      "op": "AND",
      "path": "7"
    },
    "1269": {
      "fn": "MockStakingRewards.getRewardForDuration",
      "jump": "i",
      "offset": [
        4247,
        4278
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1270": {
      "fn": "MockStakingRewards.getRewardForDuration",
      "offset": [
        4247,
        4278
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1271": {
      "fn": "MockStakingRewards.getRewardForDuration",
      "offset": [
        4240,
        4278
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1272": {
      "fn": "MockStakingRewards.getRewardForDuration",
      "offset": [
        4240,
        4278
      ],
      "op": "POP",
      "path": "7"
    },
    "1273": {
      "fn": "MockStakingRewards.getRewardForDuration",
      "offset": [
        4157,
        4285
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1274": {
      "fn": "MockStakingRewards.getRewardForDuration",
      "jump": "o",
      "offset": [
        4157,
        4285
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1275": {
      "fn": "MockStakingRewards.withdraw",
      "offset": [
        4751,
        5111
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1276": {
      "offset": [
        1680,
        1681
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "1278": {
      "offset": [
        2260,
        2267
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "1280": {
      "fn": "MockStakingRewards.withdraw",
      "offset": [
        2260,
        2267
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1281": {
      "offset": [
        2260,
        2279
      ],
      "op": "EQ",
      "path": "0"
    },
    "1282": {
      "fn": "MockStakingRewards.withdraw",
      "offset": [
        2260,
        2279
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1283": {
      "offset": [
        2252,
        2315
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x527"
    },
    "1286": {
      "offset": [
        2252,
        2315
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1287": {
      "fn": "MockStakingRewards.withdraw",
      "offset": [
        2252,
        2315
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1289": {
      "fn": "MockStakingRewards.withdraw",
      "offset": [
        2252,
        2315
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1290": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1294": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1296": {
      "op": "SHL"
    },
    "1297": {
      "offset": [
        2252,
        2315
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1298": {
      "fn": "MockStakingRewards.withdraw",
      "offset": [
        2252,
        2315
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1299": {
      "fn": "MockStakingRewards.withdraw",
      "offset": [
        2252,
        2315
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1301": {
      "fn": "MockStakingRewards.withdraw",
      "offset": [
        2252,
        2315
      ],
      "op": "ADD",
      "path": "0"
    },
    "1302": {
      "fn": "MockStakingRewards.withdraw",
      "offset": [
        2252,
        2315
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x51E"
    },
    "1305": {
      "fn": "MockStakingRewards.withdraw",
      "offset": [
        2252,
        2315
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1306": {
      "fn": "MockStakingRewards.withdraw",
      "offset": [
        2252,
        2315
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x133A"
    },
    "1309": {
      "fn": "MockStakingRewards.withdraw",
      "jump": "i",
      "offset": [
        2252,
        2315
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1310": {
      "fn": "MockStakingRewards.withdraw",
      "offset": [
        2252,
        2315
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1311": {
      "fn": "MockStakingRewards.withdraw",
      "offset": [
        2252,
        2315
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1313": {
      "fn": "MockStakingRewards.withdraw",
      "offset": [
        2252,
        2315
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1314": {
      "fn": "MockStakingRewards.withdraw",
      "offset": [
        2252,
        2315
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1315": {
      "fn": "MockStakingRewards.withdraw",
      "offset": [
        2252,
        2315
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1316": {
      "fn": "MockStakingRewards.withdraw",
      "offset": [
        2252,
        2315
      ],
      "op": "SUB",
      "path": "0"
    },
    "1317": {
      "fn": "MockStakingRewards.withdraw",
      "offset": [
        2252,
        2315
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1318": {
      "fn": "MockStakingRewards.withdraw",
      "offset": [
        2252,
        2315
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "0"
    },
    "1319": {
      "fn": "MockStakingRewards.withdraw",
      "offset": [
        2252,
        2315
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1320": {
      "offset": [
        1680,
        1681
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "1322": {
      "offset": [
        2390,
        2397
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "1324": {
      "offset": [
        2390,
        2408
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1325": {
      "fn": "MockStakingRewards.withdraw",
      "offset": [
        4827,
        4837
      ],
      "op": "CALLER",
      "path": "7"
    },
    "1326": {
      "offset": [
        7729,
        7745
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x535"
    },
    "1329": {
      "offset": [
        7729,
        7743
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xE18"
    },
    "1332": {
      "jump": "i",
      "offset": [
        7729,
        7745
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1333": {
      "fn": "MockStakingRewards.withdraw",
      "offset": [
        7729,
        7745
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1334": {
      "offset": [
        7706,
        7726
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xA"
    },
    "1336": {
      "offset": [
        7706,
        7745
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "1337": {
      "offset": [
        7772,
        7798
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x540"
    },
    "1340": {
      "offset": [
        7772,
        7796
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xB13"
    },
    "1343": {
      "jump": "i",
      "offset": [
        7772,
        7798
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1344": {
      "fn": "MockStakingRewards.withdraw",
      "offset": [
        7772,
        7798
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1345": {
      "offset": [
        7755,
        7769
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x9"
    },
    "1347": {
      "offset": [
        7755,
        7798
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "1348": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1350": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1352": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1354": {
      "op": "SHL"
    },
    "1355": {
      "op": "SUB"
    },
    "1356": {
      "offset": [
        7812,
        7833
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1357": {
      "fn": "MockStakingRewards.withdraw",
      "offset": [
        7812,
        7833
      ],
      "op": "AND",
      "path": "7"
    },
    "1358": {
      "fn": "MockStakingRewards.withdraw",
      "offset": [
        7812,
        7833
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "1359": {
      "offset": [
        7808,
        7962
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x587"
    },
    "1362": {
      "offset": [
        7808,
        7962
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "1363": {
      "offset": [
        7868,
        7883
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x55B"
    },
    "1366": {
      "offset": [
        7875,
        7882
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1367": {
      "offset": [
        7868,
        7874
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x3D8"
    },
    "1370": {
      "jump": "i",
      "offset": [
        7868,
        7883
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1371": {
      "fn": "MockStakingRewards.withdraw",
      "offset": [
        7868,
        7883
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1372": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1374": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1376": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1378": {
      "op": "SHL"
    },
    "1379": {
      "op": "SUB"
    },
    "1380": {
      "offset": [
        7849,
        7865
      ],
      "op": "DUP3",
      "path": "7"
    },
    "1381": {
      "fn": "MockStakingRewards.withdraw",
      "offset": [
        7849,
        7865
      ],
      "op": "AND",
      "path": "7"
    },
    "1382": {
      "fn": "MockStakingRewards.withdraw",
      "offset": [
        7849,
        7865
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1384": {
      "fn": "MockStakingRewards.withdraw",
      "offset": [
        7849,
        7865
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1385": {
      "fn": "MockStakingRewards.withdraw",
      "offset": [
        7849,
        7865
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1386": {
      "fn": "MockStakingRewards.withdraw",
      "offset": [
        7849,
        7865
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1387": {
      "offset": [
        7849,
        7856
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xC"
    },
    "1389": {
      "offset": [
        7849,
        7865
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "1391": {
      "fn": "MockStakingRewards.withdraw",
      "offset": [
        7849,
        7865
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1392": {
      "fn": "MockStakingRewards.withdraw",
      "offset": [
        7849,
        7865
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1393": {
      "fn": "MockStakingRewards.withdraw",
      "offset": [
        7849,
        7865
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1394": {
      "fn": "MockStakingRewards.withdraw",
      "offset": [
        7849,
        7865
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1396": {
      "fn": "MockStakingRewards.withdraw",
      "offset": [
        7849,
        7865
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1397": {
      "fn": "MockStakingRewards.withdraw",
      "offset": [
        7849,
        7865
      ],
      "op": "DUP4",
      "path": "7"
    },
    "1398": {
      "fn": "MockStakingRewards.withdraw",
      "offset": [
        7849,
        7865
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "1399": {
      "offset": [
        7849,
        7883
      ],
      "op": "SWAP4",
      "path": "7"
    },
    "1400": {
      "fn": "MockStakingRewards.withdraw",
      "offset": [
        7849,
        7883
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1401": {
      "fn": "MockStakingRewards.withdraw",
      "offset": [
        7849,
        7883
      ],
      "op": "SWAP4",
      "path": "7"
    },
    "1402": {
      "fn": "MockStakingRewards.withdraw",
      "offset": [
        7849,
        7883
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "1403": {
      "offset": [
        7931,
        7951
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xA"
    },
    "1405": {
      "fn": "MockStakingRewards.withdraw",
      "offset": [
        7931,
        7951
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "1406": {
      "offset": [
        7897,
        7919
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xB"
    },
    "1408": {
      "offset": [
        7897,
        7928
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1409": {
      "fn": "MockStakingRewards.withdraw",
      "offset": [
        7897,
        7928
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "1410": {
      "fn": "MockStakingRewards.withdraw",
      "offset": [
        7897,
        7928
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1411": {
      "fn": "MockStakingRewards.withdraw",
      "offset": [
        7897,
        7928
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "1412": {
      "fn": "MockStakingRewards.withdraw",
      "offset": [
        7897,
        7928
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1413": {
      "fn": "MockStakingRewards.withdraw",
      "offset": [
        7897,
        7928
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "1414": {
      "offset": [
        7897,
        7951
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "1415": {
      "offset": [
        7808,
        7962
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1416": {
      "fn": "MockStakingRewards.withdraw",
      "offset": [
        4866,
        4867
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 7,
      "value": "0x0"
    },
    "1418": {
      "fn": "MockStakingRewards.withdraw",
      "offset": [
        4857,
        4863
      ],
      "op": "DUP3",
      "path": "7"
    },
    "1419": {
      "branch": 57,
      "fn": "MockStakingRewards.withdraw",
      "offset": [
        4857,
        4867
      ],
      "op": "GT",
      "path": "7"
    },
    "1420": {
      "fn": "MockStakingRewards.withdraw",
      "offset": [
        4849,
        4889
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x5CB"
    },
    "1423": {
      "branch": 57,
      "fn": "MockStakingRewards.withdraw",
      "offset": [
        4849,
        4889
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "1424": {
      "fn": "MockStakingRewards.withdraw",
      "offset": [
        4849,
        4889
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1426": {
      "fn": "MockStakingRewards.withdraw",
      "offset": [
        4849,
        4889
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "1427": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1431": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1433": {
      "op": "SHL"
    },
    "1434": {
      "fn": "MockStakingRewards.withdraw",
      "offset": [
        4849,
        4889
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1435": {
      "fn": "MockStakingRewards.withdraw",
      "offset": [
        4849,
        4889
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1436": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1438": {
      "fn": "MockStakingRewards.withdraw",
      "offset": [
        4849,
        4889
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "1440": {
      "fn": "MockStakingRewards.withdraw",
      "offset": [
        4849,
        4889
      ],
      "op": "DUP3",
      "path": "7"
    },
    "1441": {
      "fn": "MockStakingRewards.withdraw",
      "offset": [
        4849,
        4889
      ],
      "op": "ADD",
      "path": "7"
    },
    "1442": {
      "op": "MSTORE"
    },
    "1443": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "1445": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1447": {
      "op": "DUP3"
    },
    "1448": {
      "op": "ADD"
    },
    "1449": {
      "op": "MSTORE"
    },
    "1450": {
      "op": "PUSH17",
      "value": "0x43616E6E6F74207769746864726177203"
    },
    "1468": {
      "op": "PUSH1",
      "value": "0x7C"
    },
    "1470": {
      "op": "SHL"
    },
    "1471": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1473": {
      "op": "DUP3"
    },
    "1474": {
      "op": "ADD"
    },
    "1475": {
      "op": "MSTORE"
    },
    "1476": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1478": {
      "op": "ADD"
    },
    "1479": {
      "fn": "MockStakingRewards.withdraw",
      "offset": [
        4849,
        4889
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x51E"
    },
    "1482": {
      "op": "JUMP"
    },
    "1483": {
      "fn": "MockStakingRewards.withdraw",
      "offset": [
        4849,
        4889
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1484": {
      "fn": "MockStakingRewards.withdraw",
      "offset": [
        4914,
        4926
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 8,
      "value": "0xD"
    },
    "1486": {
      "fn": "MockStakingRewards.withdraw",
      "offset": [
        4914,
        4926
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "1487": {
      "fn": "MockStakingRewards.withdraw",
      "offset": [
        4914,
        4938
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x5D8"
    },
    "1490": {
      "fn": "MockStakingRewards.withdraw",
      "offset": [
        4914,
        4938
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1491": {
      "fn": "MockStakingRewards.withdraw",
      "offset": [
        4931,
        4937
      ],
      "op": "DUP4",
      "path": "7"
    },
    "1492": {
      "fn": "MockStakingRewards.withdraw",
      "offset": [
        4914,
        4930
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xE87"
    },
    "1495": {
      "fn": "MockStakingRewards.withdraw",
      "jump": "i",
      "offset": [
        4914,
        4938
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1496": {
      "fn": "MockStakingRewards.withdraw",
      "offset": [
        4914,
        4938
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1497": {
      "fn": "MockStakingRewards.withdraw",
      "offset": [
        4899,
        4911
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xD"
    },
    "1499": {
      "fn": "MockStakingRewards.withdraw",
      "offset": [
        4899,
        4938
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "1500": {
      "fn": "MockStakingRewards.withdraw",
      "offset": [
        4982,
        4992
      ],
      "op": "CALLER",
      "path": "7",
      "statement": 9
    },
    "1501": {
      "fn": "MockStakingRewards.withdraw",
      "offset": [
        4972,
        4993
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1503": {
      "fn": "MockStakingRewards.withdraw",
      "offset": [
        4972,
        4993
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1504": {
      "fn": "MockStakingRewards.withdraw",
      "offset": [
        4972,
        4993
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1505": {
      "fn": "MockStakingRewards.withdraw",
      "offset": [
        4972,
        4993
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1506": {
      "fn": "MockStakingRewards.withdraw",
      "offset": [
        4972,
        4981
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xE"
    },
    "1508": {
      "fn": "MockStakingRewards.withdraw",
      "offset": [
        4972,
        4993
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "1510": {
      "fn": "MockStakingRewards.withdraw",
      "offset": [
        4972,
        4993
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1511": {
      "fn": "MockStakingRewards.withdraw",
      "offset": [
        4972,
        4993
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1513": {
      "fn": "MockStakingRewards.withdraw",
      "offset": [
        4972,
        4993
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1514": {
      "fn": "MockStakingRewards.withdraw",
      "offset": [
        4972,
        4993
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "1515": {
      "fn": "MockStakingRewards.withdraw",
      "offset": [
        4972,
        4993
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "1516": {
      "fn": "MockStakingRewards.withdraw",
      "offset": [
        4972,
        5005
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x5F5"
    },
    "1519": {
      "fn": "MockStakingRewards.withdraw",
      "offset": [
        4972,
        5005
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1520": {
      "fn": "MockStakingRewards.withdraw",
      "offset": [
        4998,
        5004
      ],
      "op": "DUP4",
      "path": "7"
    },
    "1521": {
      "fn": "MockStakingRewards.withdraw",
      "offset": [
        4972,
        4997
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xE87"
    },
    "1524": {
      "fn": "MockStakingRewards.withdraw",
      "jump": "i",
      "offset": [
        4972,
        5005
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1525": {
      "fn": "MockStakingRewards.withdraw",
      "offset": [
        4972,
        5005
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1526": {
      "fn": "MockStakingRewards.withdraw",
      "offset": [
        4958,
        4968
      ],
      "op": "CALLER",
      "path": "7"
    },
    "1527": {
      "fn": "MockStakingRewards.withdraw",
      "offset": [
        4948,
        4969
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1529": {
      "fn": "MockStakingRewards.withdraw",
      "offset": [
        4948,
        4969
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1530": {
      "fn": "MockStakingRewards.withdraw",
      "offset": [
        4948,
        4969
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1531": {
      "fn": "MockStakingRewards.withdraw",
      "offset": [
        4948,
        4969
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1532": {
      "fn": "MockStakingRewards.withdraw",
      "offset": [
        4948,
        4957
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xE"
    },
    "1534": {
      "fn": "MockStakingRewards.withdraw",
      "offset": [
        4948,
        4969
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "1536": {
      "fn": "MockStakingRewards.withdraw",
      "offset": [
        4948,
        4969
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1537": {
      "fn": "MockStakingRewards.withdraw",
      "offset": [
        4948,
        4969
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1539": {
      "fn": "MockStakingRewards.withdraw",
      "offset": [
        4948,
        4969
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1540": {
      "fn": "MockStakingRewards.withdraw",
      "offset": [
        4948,
        4969
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "1541": {
      "fn": "MockStakingRewards.withdraw",
      "offset": [
        4948,
        5005
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "1542": {
      "fn": "MockStakingRewards.withdraw",
      "offset": [
        4948,
        5005
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1543": {
      "fn": "MockStakingRewards.withdraw",
      "offset": [
        4948,
        5005
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "1544": {
      "fn": "MockStakingRewards.withdraw",
      "offset": [
        4948,
        5005
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "1545": {
      "fn": "MockStakingRewards.withdraw",
      "offset": [
        5015,
        5027
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 10,
      "value": "0x5"
    },
    "1547": {
      "fn": "MockStakingRewards.withdraw",
      "offset": [
        5015,
        5027
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "1548": {
      "fn": "MockStakingRewards.withdraw",
      "offset": [
        5015,
        5060
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x621"
    },
    "1551": {
      "fn": "MockStakingRewards.withdraw",
      "offset": [
        5015,
        5060
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "1552": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1554": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1556": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1558": {
      "op": "SHL"
    },
    "1559": {
      "op": "SUB"
    },
    "1560": {
      "fn": "MockStakingRewards.withdraw",
      "offset": [
        5015,
        5027
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1561": {
      "fn": "MockStakingRewards.withdraw",
      "offset": [
        5015,
        5027
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "1562": {
      "fn": "MockStakingRewards.withdraw",
      "offset": [
        5015,
        5027
      ],
      "op": "AND",
      "path": "7"
    },
    "1563": {
      "fn": "MockStakingRewards.withdraw",
      "offset": [
        5015,
        5027
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1564": {
      "fn": "MockStakingRewards.withdraw",
      "offset": [
        5053,
        5059
      ],
      "op": "DUP5",
      "path": "7"
    },
    "1565": {
      "fn": "MockStakingRewards.withdraw",
      "offset": [
        5015,
        5040
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xF30"
    },
    "1568": {
      "fn": "MockStakingRewards.withdraw",
      "jump": "i",
      "offset": [
        5015,
        5060
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1569": {
      "fn": "MockStakingRewards.withdraw",
      "offset": [
        5015,
        5060
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1570": {
      "fn": "MockStakingRewards.withdraw",
      "offset": [
        5075,
        5104
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 11,
      "value": "0x40"
    },
    "1572": {
      "fn": "MockStakingRewards.withdraw",
      "offset": [
        5075,
        5104
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "1573": {
      "op": "DUP3"
    },
    "1574": {
      "op": "DUP2"
    },
    "1575": {
      "op": "MSTORE"
    },
    "1576": {
      "fn": "MockStakingRewards.withdraw",
      "offset": [
        5085,
        5095
      ],
      "op": "CALLER",
      "path": "7"
    },
    "1577": {
      "fn": "MockStakingRewards.withdraw",
      "offset": [
        5085,
        5095
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1578": {
      "fn": "MockStakingRewards.withdraw",
      "offset": [
        5075,
        5104
      ],
      "op": "PUSH32",
      "path": "7",
      "value": "0x7084F5476618D8E60B11EF0D7D3F06914655ADB8793E28FF7F018D4C76D505D5"
    },
    "1611": {
      "fn": "MockStakingRewards.withdraw",
      "offset": [
        5075,
        5104
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1612": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1614": {
      "op": "ADD"
    },
    "1615": {
      "fn": "MockStakingRewards.withdraw",
      "offset": [
        5075,
        5104
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1616": {
      "fn": "MockStakingRewards.withdraw",
      "offset": [
        5075,
        5104
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1618": {
      "fn": "MockStakingRewards.withdraw",
      "offset": [
        5075,
        5104
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "1619": {
      "fn": "MockStakingRewards.withdraw",
      "offset": [
        5075,
        5104
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1620": {
      "fn": "MockStakingRewards.withdraw",
      "offset": [
        5075,
        5104
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "1621": {
      "fn": "MockStakingRewards.withdraw",
      "offset": [
        5075,
        5104
      ],
      "op": "SUB",
      "path": "7"
    },
    "1622": {
      "fn": "MockStakingRewards.withdraw",
      "offset": [
        5075,
        5104
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1623": {
      "fn": "MockStakingRewards.withdraw",
      "offset": [
        5075,
        5104
      ],
      "op": "LOG2",
      "path": "7"
    },
    "1624": {
      "op": "POP"
    },
    "1625": {
      "op": "POP"
    },
    "1626": {
      "offset": [
        1637,
        1638
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1628": {
      "offset": [
        2563,
        2570
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "1630": {
      "offset": [
        2563,
        2585
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1631": {
      "fn": "MockStakingRewards.withdraw",
      "jump": "o",
      "offset": [
        4751,
        5111
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1632": {
      "fn": "MockStakingRewards.notifyRewardAmount",
      "offset": [
        5595,
        6668
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1633": {
      "offset": [
        1837,
        1856
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x2"
    },
    "1635": {
      "fn": "MockStakingRewards.notifyRewardAmount",
      "offset": [
        1837,
        1856
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "1636": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1638": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1640": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1642": {
      "op": "SHL"
    },
    "1643": {
      "op": "SUB"
    },
    "1644": {
      "offset": [
        1837,
        1856
      ],
      "op": "AND",
      "path": "7"
    },
    "1645": {
      "offset": [
        1823,
        1833
      ],
      "op": "CALLER",
      "path": "7"
    },
    "1646": {
      "offset": [
        1823,
        1856
      ],
      "op": "EQ",
      "path": "7"
    },
    "1647": {
      "offset": [
        1815,
        1903
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x6CD"
    },
    "1650": {
      "offset": [
        1815,
        1903
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "1651": {
      "fn": "MockStakingRewards.notifyRewardAmount",
      "offset": [
        1815,
        1903
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1653": {
      "fn": "MockStakingRewards.notifyRewardAmount",
      "offset": [
        1815,
        1903
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "1654": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1658": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1660": {
      "op": "SHL"
    },
    "1661": {
      "offset": [
        1815,
        1903
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1662": {
      "fn": "MockStakingRewards.notifyRewardAmount",
      "offset": [
        1815,
        1903
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1663": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1665": {
      "offset": [
        1815,
        1903
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "1667": {
      "fn": "MockStakingRewards.notifyRewardAmount",
      "offset": [
        1815,
        1903
      ],
      "op": "DUP3",
      "path": "7"
    },
    "1668": {
      "fn": "MockStakingRewards.notifyRewardAmount",
      "offset": [
        1815,
        1903
      ],
      "op": "ADD",
      "path": "7"
    },
    "1669": {
      "op": "MSTORE"
    },
    "1670": {
      "op": "PUSH1",
      "value": "0x2A"
    },
    "1672": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1674": {
      "op": "DUP3"
    },
    "1675": {
      "op": "ADD"
    },
    "1676": {
      "op": "MSTORE"
    },
    "1677": {
      "op": "PUSH32",
      "value": "0x43616C6C6572206973206E6F742052657761726473446973747269627574696F"
    },
    "1710": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1712": {
      "op": "DUP3"
    },
    "1713": {
      "op": "ADD"
    },
    "1714": {
      "op": "MSTORE"
    },
    "1715": {
      "op": "PUSH10",
      "value": "0x1B8818DBDB9D1C9858DD"
    },
    "1726": {
      "op": "PUSH1",
      "value": "0xB2"
    },
    "1728": {
      "op": "SHL"
    },
    "1729": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1731": {
      "op": "DUP3"
    },
    "1732": {
      "op": "ADD"
    },
    "1733": {
      "op": "MSTORE"
    },
    "1734": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1736": {
      "op": "ADD"
    },
    "1737": {
      "offset": [
        1815,
        1903
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x51E"
    },
    "1740": {
      "op": "JUMP"
    },
    "1741": {
      "offset": [
        1815,
        1903
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1742": {
      "fn": "MockStakingRewards.notifyRewardAmount",
      "offset": [
        5702,
        5703
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1744": {
      "offset": [
        7729,
        7745
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x6D7"
    },
    "1747": {
      "offset": [
        7729,
        7743
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xE18"
    },
    "1750": {
      "jump": "i",
      "offset": [
        7729,
        7745
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1751": {
      "fn": "MockStakingRewards.notifyRewardAmount",
      "offset": [
        7729,
        7745
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1752": {
      "offset": [
        7706,
        7726
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xA"
    },
    "1754": {
      "offset": [
        7706,
        7745
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "1755": {
      "offset": [
        7772,
        7798
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x6E2"
    },
    "1758": {
      "offset": [
        7772,
        7796
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xB13"
    },
    "1761": {
      "jump": "i",
      "offset": [
        7772,
        7798
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1762": {
      "fn": "MockStakingRewards.notifyRewardAmount",
      "offset": [
        7772,
        7798
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1763": {
      "offset": [
        7755,
        7769
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x9"
    },
    "1765": {
      "offset": [
        7755,
        7798
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "1766": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1768": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1770": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1772": {
      "op": "SHL"
    },
    "1773": {
      "op": "SUB"
    },
    "1774": {
      "offset": [
        7812,
        7833
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1775": {
      "fn": "MockStakingRewards.notifyRewardAmount",
      "offset": [
        7812,
        7833
      ],
      "op": "AND",
      "path": "7"
    },
    "1776": {
      "fn": "MockStakingRewards.notifyRewardAmount",
      "offset": [
        7812,
        7833
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "1777": {
      "offset": [
        7808,
        7962
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x729"
    },
    "1780": {
      "offset": [
        7808,
        7962
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "1781": {
      "offset": [
        7868,
        7883
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x6FD"
    },
    "1784": {
      "offset": [
        7875,
        7882
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1785": {
      "offset": [
        7868,
        7874
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x3D8"
    },
    "1788": {
      "jump": "i",
      "offset": [
        7868,
        7883
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1789": {
      "fn": "MockStakingRewards.notifyRewardAmount",
      "offset": [
        7868,
        7883
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1790": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1792": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1794": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1796": {
      "op": "SHL"
    },
    "1797": {
      "op": "SUB"
    },
    "1798": {
      "offset": [
        7849,
        7865
      ],
      "op": "DUP3",
      "path": "7"
    },
    "1799": {
      "fn": "MockStakingRewards.notifyRewardAmount",
      "offset": [
        7849,
        7865
      ],
      "op": "AND",
      "path": "7"
    },
    "1800": {
      "fn": "MockStakingRewards.notifyRewardAmount",
      "offset": [
        7849,
        7865
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1802": {
      "fn": "MockStakingRewards.notifyRewardAmount",
      "offset": [
        7849,
        7865
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1803": {
      "fn": "MockStakingRewards.notifyRewardAmount",
      "offset": [
        7849,
        7865
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1804": {
      "fn": "MockStakingRewards.notifyRewardAmount",
      "offset": [
        7849,
        7865
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1805": {
      "offset": [
        7849,
        7856
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xC"
    },
    "1807": {
      "offset": [
        7849,
        7865
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "1809": {
      "fn": "MockStakingRewards.notifyRewardAmount",
      "offset": [
        7849,
        7865
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1810": {
      "fn": "MockStakingRewards.notifyRewardAmount",
      "offset": [
        7849,
        7865
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1811": {
      "fn": "MockStakingRewards.notifyRewardAmount",
      "offset": [
        7849,
        7865
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1812": {
      "fn": "MockStakingRewards.notifyRewardAmount",
      "offset": [
        7849,
        7865
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1814": {
      "fn": "MockStakingRewards.notifyRewardAmount",
      "offset": [
        7849,
        7865
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1815": {
      "fn": "MockStakingRewards.notifyRewardAmount",
      "offset": [
        7849,
        7865
      ],
      "op": "DUP4",
      "path": "7"
    },
    "1816": {
      "fn": "MockStakingRewards.notifyRewardAmount",
      "offset": [
        7849,
        7865
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "1817": {
      "offset": [
        7849,
        7883
      ],
      "op": "SWAP4",
      "path": "7"
    },
    "1818": {
      "fn": "MockStakingRewards.notifyRewardAmount",
      "offset": [
        7849,
        7883
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1819": {
      "fn": "MockStakingRewards.notifyRewardAmount",
      "offset": [
        7849,
        7883
      ],
      "op": "SWAP4",
      "path": "7"
    },
    "1820": {
      "fn": "MockStakingRewards.notifyRewardAmount",
      "offset": [
        7849,
        7883
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "1821": {
      "offset": [
        7931,
        7951
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xA"
    },
    "1823": {
      "fn": "MockStakingRewards.notifyRewardAmount",
      "offset": [
        7931,
        7951
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "1824": {
      "offset": [
        7897,
        7919
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xB"
    },
    "1826": {
      "offset": [
        7897,
        7928
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1827": {
      "fn": "MockStakingRewards.notifyRewardAmount",
      "offset": [
        7897,
        7928
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "1828": {
      "fn": "MockStakingRewards.notifyRewardAmount",
      "offset": [
        7897,
        7928
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1829": {
      "fn": "MockStakingRewards.notifyRewardAmount",
      "offset": [
        7897,
        7928
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "1830": {
      "fn": "MockStakingRewards.notifyRewardAmount",
      "offset": [
        7897,
        7928
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1831": {
      "fn": "MockStakingRewards.notifyRewardAmount",
      "offset": [
        7897,
        7928
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "1832": {
      "offset": [
        7897,
        7951
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "1833": {
      "offset": [
        7808,
        7962
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1834": {
      "fn": "MockStakingRewards.notifyRewardAmount",
      "offset": [
        5739,
        5751
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x6"
    },
    "1836": {
      "fn": "MockStakingRewards.notifyRewardAmount",
      "offset": [
        5739,
        5751
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "1837": {
      "fn": "MockStakingRewards.notifyRewardAmount",
      "offset": [
        5720,
        5735
      ],
      "op": "TIMESTAMP",
      "path": "7"
    },
    "1838": {
      "branch": 58,
      "fn": "MockStakingRewards.notifyRewardAmount",
      "offset": [
        5720,
        5751
      ],
      "op": "LT",
      "path": "7"
    },
    "1839": {
      "fn": "MockStakingRewards.notifyRewardAmount",
      "offset": [
        5716,
        6028
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x748"
    },
    "1842": {
      "branch": 58,
      "fn": "MockStakingRewards.notifyRewardAmount",
      "offset": [
        5716,
        6028
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "1843": {
      "fn": "MockStakingRewards.notifyRewardAmount",
      "offset": [
        5791,
        5806
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 12,
      "value": "0x8"
    },
    "1845": {
      "fn": "MockStakingRewards.notifyRewardAmount",
      "offset": [
        5791,
        5806
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "1846": {
      "fn": "MockStakingRewards.notifyRewardAmount",
      "offset": [
        5780,
        5807
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x740"
    },
    "1849": {
      "fn": "MockStakingRewards.notifyRewardAmount",
      "offset": [
        5780,
        5807
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1850": {
      "fn": "MockStakingRewards.notifyRewardAmount",
      "offset": [
        5780,
        5786
      ],
      "op": "DUP4",
      "path": "7"
    },
    "1851": {
      "fn": "MockStakingRewards.notifyRewardAmount",
      "offset": [
        5780,
        5786
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1852": {
      "fn": "MockStakingRewards.notifyRewardAmount",
      "offset": [
        5780,
        5790
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xEA6"
    },
    "1855": {
      "fn": "MockStakingRewards.notifyRewardAmount",
      "jump": "i",
      "offset": [
        5780,
        5807
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1856": {
      "fn": "MockStakingRewards.notifyRewardAmount",
      "offset": [
        5780,
        5807
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1857": {
      "fn": "MockStakingRewards.notifyRewardAmount",
      "offset": [
        5767,
        5777
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x7"
    },
    "1859": {
      "fn": "MockStakingRewards.notifyRewardAmount",
      "offset": [
        5767,
        5807
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "1860": {
      "fn": "MockStakingRewards.notifyRewardAmount",
      "offset": [
        5716,
        6028
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x78B"
    },
    "1863": {
      "fn": "MockStakingRewards.notifyRewardAmount",
      "offset": [
        5716,
        6028
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1864": {
      "fn": "MockStakingRewards.notifyRewardAmount",
      "offset": [
        5716,
        6028
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1865": {
      "fn": "MockStakingRewards.notifyRewardAmount",
      "offset": [
        5858,
        5870
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x6"
    },
    "1867": {
      "fn": "MockStakingRewards.notifyRewardAmount",
      "offset": [
        5858,
        5870
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "1868": {
      "fn": "MockStakingRewards.notifyRewardAmount",
      "offset": [
        5838,
        5855
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1870": {
      "fn": "MockStakingRewards.notifyRewardAmount",
      "offset": [
        5838,
        5855
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1871": {
      "fn": "MockStakingRewards.notifyRewardAmount",
      "offset": [
        5858,
        5891
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x758"
    },
    "1874": {
      "fn": "MockStakingRewards.notifyRewardAmount",
      "offset": [
        5858,
        5891
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1875": {
      "fn": "MockStakingRewards.notifyRewardAmount",
      "offset": [
        5875,
        5890
      ],
      "op": "TIMESTAMP",
      "path": "7"
    },
    "1876": {
      "fn": "MockStakingRewards.notifyRewardAmount",
      "offset": [
        5858,
        5874
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xE87"
    },
    "1879": {
      "fn": "MockStakingRewards.notifyRewardAmount",
      "jump": "i",
      "offset": [
        5858,
        5891
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1880": {
      "fn": "MockStakingRewards.notifyRewardAmount",
      "offset": [
        5858,
        5891
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1881": {
      "fn": "MockStakingRewards.notifyRewardAmount",
      "offset": [
        5838,
        5891
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1882": {
      "fn": "MockStakingRewards.notifyRewardAmount",
      "offset": [
        5838,
        5891
      ],
      "op": "POP",
      "path": "7"
    },
    "1883": {
      "fn": "MockStakingRewards.notifyRewardAmount",
      "offset": [
        5905,
        5921
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1885": {
      "fn": "MockStakingRewards.notifyRewardAmount",
      "offset": [
        5924,
        5949
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x771"
    },
    "1888": {
      "fn": "MockStakingRewards.notifyRewardAmount",
      "offset": [
        5938,
        5948
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x7"
    },
    "1890": {
      "fn": "MockStakingRewards.notifyRewardAmount",
      "offset": [
        5938,
        5948
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "1891": {
      "fn": "MockStakingRewards.notifyRewardAmount",
      "offset": [
        5924,
        5933
      ],
      "op": "DUP4",
      "path": "7"
    },
    "1892": {
      "fn": "MockStakingRewards.notifyRewardAmount",
      "offset": [
        5924,
        5937
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xE9A"
    },
    "1895": {
      "fn": "MockStakingRewards.notifyRewardAmount",
      "offset": [
        5924,
        5937
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1896": {
      "fn": "MockStakingRewards.notifyRewardAmount",
      "offset": [
        5924,
        5949
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "1897": {
      "fn": "MockStakingRewards.notifyRewardAmount",
      "offset": [
        5924,
        5949
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1898": {
      "fn": "MockStakingRewards.notifyRewardAmount",
      "offset": [
        5924,
        5949
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0xFFFFFFFF"
    },
    "1903": {
      "fn": "MockStakingRewards.notifyRewardAmount",
      "offset": [
        5924,
        5949
      ],
      "op": "AND",
      "path": "7"
    },
    "1904": {
      "fn": "MockStakingRewards.notifyRewardAmount",
      "jump": "i",
      "offset": [
        5924,
        5949
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1905": {
      "fn": "MockStakingRewards.notifyRewardAmount",
      "offset": [
        5924,
        5949
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1906": {
      "fn": "MockStakingRewards.notifyRewardAmount",
      "offset": [
        6001,
        6016
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 13,
      "value": "0x8"
    },
    "1908": {
      "fn": "MockStakingRewards.notifyRewardAmount",
      "offset": [
        6001,
        6016
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "1909": {
      "fn": "MockStakingRewards.notifyRewardAmount",
      "offset": [
        5905,
        5949
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1910": {
      "fn": "MockStakingRewards.notifyRewardAmount",
      "offset": [
        5905,
        5949
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "1911": {
      "op": "POP"
    },
    "1912": {
      "fn": "MockStakingRewards.notifyRewardAmount",
      "offset": [
        5976,
        6017
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x785"
    },
    "1915": {
      "fn": "MockStakingRewards.notifyRewardAmount",
      "offset": [
        5976,
        6017
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1916": {
      "fn": "MockStakingRewards.notifyRewardAmount",
      "offset": [
        5976,
        5996
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x444"
    },
    "1919": {
      "fn": "MockStakingRewards.notifyRewardAmount",
      "offset": [
        5976,
        5982
      ],
      "op": "DUP7",
      "path": "7"
    },
    "1920": {
      "fn": "MockStakingRewards.notifyRewardAmount",
      "offset": [
        5905,
        5949
      ],
      "op": "DUP5",
      "path": "7"
    },
    "1921": {
      "fn": "MockStakingRewards.notifyRewardAmount",
      "offset": [
        5976,
        5986
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xEB2"
    },
    "1924": {
      "fn": "MockStakingRewards.notifyRewardAmount",
      "jump": "i",
      "offset": [
        5976,
        5996
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1925": {
      "fn": "MockStakingRewards.notifyRewardAmount",
      "offset": [
        5976,
        6017
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1926": {
      "fn": "MockStakingRewards.notifyRewardAmount",
      "offset": [
        5963,
        5973
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x7"
    },
    "1928": {
      "fn": "MockStakingRewards.notifyRewardAmount",
      "offset": [
        5963,
        6017
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "1929": {
      "op": "POP"
    },
    "1930": {
      "op": "POP"
    },
    "1931": {
      "fn": "MockStakingRewards.notifyRewardAmount",
      "offset": [
        5716,
        6028
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1932": {
      "fn": "MockStakingRewards.notifyRewardAmount",
      "offset": [
        6397,
        6409
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "1934": {
      "fn": "MockStakingRewards.notifyRewardAmount",
      "offset": [
        6397,
        6409
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1935": {
      "fn": "MockStakingRewards.notifyRewardAmount",
      "offset": [
        6397,
        6409
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "1936": {
      "fn": "MockStakingRewards.notifyRewardAmount",
      "offset": [
        6397,
        6434
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1938": {
      "fn": "MockStakingRewards.notifyRewardAmount",
      "offset": [
        6397,
        6434
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "1939": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "1944": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1946": {
      "op": "SHL"
    },
    "1947": {
      "fn": "MockStakingRewards.notifyRewardAmount",
      "offset": [
        6397,
        6434
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1948": {
      "fn": "MockStakingRewards.notifyRewardAmount",
      "offset": [
        6397,
        6434
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1949": {
      "fn": "MockStakingRewards.notifyRewardAmount",
      "offset": [
        6428,
        6432
      ],
      "op": "ADDRESS",
      "path": "7"
    },
    "1950": {
      "fn": "MockStakingRewards.notifyRewardAmount",
      "offset": [
        6397,
        6434
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "1951": {
      "fn": "MockStakingRewards.notifyRewardAmount",
      "offset": [
        6397,
        6434
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1952": {
      "fn": "MockStakingRewards.notifyRewardAmount",
      "offset": [
        6397,
        6434
      ],
      "op": "ADD",
      "path": "7"
    },
    "1953": {
      "op": "SWAP3"
    },
    "1954": {
      "op": "SWAP1"
    },
    "1955": {
      "op": "SWAP3"
    },
    "1956": {
      "op": "MSTORE"
    },
    "1957": {
      "fn": "MockStakingRewards.notifyRewardAmount",
      "offset": [
        6382,
        6394
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1959": {
      "fn": "MockStakingRewards.notifyRewardAmount",
      "offset": [
        6382,
        6394
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "1960": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1962": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1964": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1966": {
      "op": "SHL"
    },
    "1967": {
      "op": "SUB"
    },
    "1968": {
      "fn": "MockStakingRewards.notifyRewardAmount",
      "offset": [
        6397,
        6409
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1969": {
      "fn": "MockStakingRewards.notifyRewardAmount",
      "offset": [
        6397,
        6409
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "1970": {
      "fn": "MockStakingRewards.notifyRewardAmount",
      "offset": [
        6397,
        6409
      ],
      "op": "AND",
      "path": "7"
    },
    "1971": {
      "fn": "MockStakingRewards.notifyRewardAmount",
      "offset": [
        6397,
        6409
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1972": {
      "fn": "MockStakingRewards.notifyRewardAmount",
      "offset": [
        6397,
        6419
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x70A08231"
    },
    "1977": {
      "fn": "MockStakingRewards.notifyRewardAmount",
      "offset": [
        6397,
        6419
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1978": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1980": {
      "op": "ADD"
    },
    "1981": {
      "fn": "MockStakingRewards.notifyRewardAmount",
      "offset": [
        6397,
        6434
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "1983": {
      "fn": "MockStakingRewards.notifyRewardAmount",
      "offset": [
        6397,
        6434
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1985": {
      "fn": "MockStakingRewards.notifyRewardAmount",
      "offset": [
        6397,
        6434
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "1986": {
      "fn": "MockStakingRewards.notifyRewardAmount",
      "offset": [
        6397,
        6434
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1987": {
      "fn": "MockStakingRewards.notifyRewardAmount",
      "offset": [
        6397,
        6434
      ],
      "op": "DUP4",
      "path": "7"
    },
    "1988": {
      "fn": "MockStakingRewards.notifyRewardAmount",
      "offset": [
        6397,
        6434
      ],
      "op": "SUB",
      "path": "7"
    },
    "1989": {
      "fn": "MockStakingRewards.notifyRewardAmount",
      "offset": [
        6397,
        6434
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1990": {
      "fn": "MockStakingRewards.notifyRewardAmount",
      "offset": [
        6397,
        6434
      ],
      "op": "DUP7",
      "path": "7"
    },
    "1991": {
      "fn": "MockStakingRewards.notifyRewardAmount",
      "offset": [
        6397,
        6434
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1992": {
      "fn": "MockStakingRewards.notifyRewardAmount",
      "offset": [
        6397,
        6434
      ],
      "op": "EXTCODESIZE",
      "path": "7"
    },
    "1993": {
      "fn": "MockStakingRewards.notifyRewardAmount",
      "offset": [
        6397,
        6434
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "1994": {
      "fn": "MockStakingRewards.notifyRewardAmount",
      "offset": [
        6397,
        6434
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1995": {
      "fn": "MockStakingRewards.notifyRewardAmount",
      "offset": [
        6397,
        6434
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "1996": {
      "fn": "MockStakingRewards.notifyRewardAmount",
      "offset": [
        6397,
        6434
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x7D4"
    },
    "1999": {
      "fn": "MockStakingRewards.notifyRewardAmount",
      "offset": [
        6397,
        6434
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "2000": {
      "fn": "MockStakingRewards.notifyRewardAmount",
      "offset": [
        6397,
        6434
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "2002": {
      "fn": "MockStakingRewards.notifyRewardAmount",
      "offset": [
        6397,
        6434
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2003": {
      "fn": "MockStakingRewards.notifyRewardAmount",
      "offset": [
        6397,
        6434
      ],
      "op": "REVERT",
      "path": "7"
    },
    "2004": {
      "fn": "MockStakingRewards.notifyRewardAmount",
      "offset": [
        6397,
        6434
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2005": {
      "fn": "MockStakingRewards.notifyRewardAmount",
      "offset": [
        6397,
        6434
      ],
      "op": "POP",
      "path": "7"
    },
    "2006": {
      "fn": "MockStakingRewards.notifyRewardAmount",
      "offset": [
        6397,
        6434
      ],
      "op": "GAS",
      "path": "7"
    },
    "2007": {
      "fn": "MockStakingRewards.notifyRewardAmount",
      "offset": [
        6397,
        6434
      ],
      "op": "STATICCALL",
      "path": "7"
    },
    "2008": {
      "fn": "MockStakingRewards.notifyRewardAmount",
      "offset": [
        6397,
        6434
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "2009": {
      "fn": "MockStakingRewards.notifyRewardAmount",
      "offset": [
        6397,
        6434
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2010": {
      "fn": "MockStakingRewards.notifyRewardAmount",
      "offset": [
        6397,
        6434
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "2011": {
      "fn": "MockStakingRewards.notifyRewardAmount",
      "offset": [
        6397,
        6434
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x7E8"
    },
    "2014": {
      "fn": "MockStakingRewards.notifyRewardAmount",
      "offset": [
        6397,
        6434
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "2015": {
      "fn": "MockStakingRewards.notifyRewardAmount",
      "offset": [
        6397,
        6434
      ],
      "op": "RETURNDATASIZE",
      "path": "7"
    },
    "2016": {
      "fn": "MockStakingRewards.notifyRewardAmount",
      "offset": [
        6397,
        6434
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "2018": {
      "fn": "MockStakingRewards.notifyRewardAmount",
      "offset": [
        6397,
        6434
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2019": {
      "fn": "MockStakingRewards.notifyRewardAmount",
      "offset": [
        6397,
        6434
      ],
      "op": "RETURNDATACOPY",
      "path": "7"
    },
    "2020": {
      "fn": "MockStakingRewards.notifyRewardAmount",
      "offset": [
        6397,
        6434
      ],
      "op": "RETURNDATASIZE",
      "path": "7"
    },
    "2021": {
      "fn": "MockStakingRewards.notifyRewardAmount",
      "offset": [
        6397,
        6434
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "2023": {
      "fn": "MockStakingRewards.notifyRewardAmount",
      "offset": [
        6397,
        6434
      ],
      "op": "REVERT",
      "path": "7"
    },
    "2024": {
      "fn": "MockStakingRewards.notifyRewardAmount",
      "offset": [
        6397,
        6434
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2025": {
      "fn": "MockStakingRewards.notifyRewardAmount",
      "offset": [
        6397,
        6434
      ],
      "op": "POP",
      "path": "7"
    },
    "2026": {
      "fn": "MockStakingRewards.notifyRewardAmount",
      "offset": [
        6397,
        6434
      ],
      "op": "POP",
      "path": "7"
    },
    "2027": {
      "fn": "MockStakingRewards.notifyRewardAmount",
      "offset": [
        6397,
        6434
      ],
      "op": "POP",
      "path": "7"
    },
    "2028": {
      "fn": "MockStakingRewards.notifyRewardAmount",
      "offset": [
        6397,
        6434
      ],
      "op": "POP",
      "path": "7"
    },
    "2029": {
      "fn": "MockStakingRewards.notifyRewardAmount",
      "offset": [
        6397,
        6434
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "2031": {
      "fn": "MockStakingRewards.notifyRewardAmount",
      "offset": [
        6397,
        6434
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "2032": {
      "fn": "MockStakingRewards.notifyRewardAmount",
      "offset": [
        6397,
        6434
      ],
      "op": "RETURNDATASIZE",
      "path": "7"
    },
    "2033": {
      "fn": "MockStakingRewards.notifyRewardAmount",
      "offset": [
        6397,
        6434
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1F"
    },
    "2035": {
      "fn": "MockStakingRewards.notifyRewardAmount",
      "offset": [
        6397,
        6434
      ],
      "op": "NOT",
      "path": "7"
    },
    "2036": {
      "fn": "MockStakingRewards.notifyRewardAmount",
      "offset": [
        6397,
        6434
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1F"
    },
    "2038": {
      "fn": "MockStakingRewards.notifyRewardAmount",
      "offset": [
        6397,
        6434
      ],
      "op": "DUP3",
      "path": "7"
    },
    "2039": {
      "fn": "MockStakingRewards.notifyRewardAmount",
      "offset": [
        6397,
        6434
      ],
      "op": "ADD",
      "path": "7"
    },
    "2040": {
      "fn": "MockStakingRewards.notifyRewardAmount",
      "offset": [
        6397,
        6434
      ],
      "op": "AND",
      "path": "7"
    },
    "2041": {
      "fn": "MockStakingRewards.notifyRewardAmount",
      "offset": [
        6397,
        6434
      ],
      "op": "DUP3",
      "path": "7"
    },
    "2042": {
      "fn": "MockStakingRewards.notifyRewardAmount",
      "offset": [
        6397,
        6434
      ],
      "op": "ADD",
      "path": "7"
    },
    "2043": {
      "fn": "MockStakingRewards.notifyRewardAmount",
      "offset": [
        6397,
        6434
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2044": {
      "fn": "MockStakingRewards.notifyRewardAmount",
      "offset": [
        6397,
        6434
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "2046": {
      "fn": "MockStakingRewards.notifyRewardAmount",
      "offset": [
        6397,
        6434
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2047": {
      "fn": "MockStakingRewards.notifyRewardAmount",
      "offset": [
        6397,
        6434
      ],
      "op": "POP",
      "path": "7"
    },
    "2048": {
      "fn": "MockStakingRewards.notifyRewardAmount",
      "offset": [
        6397,
        6434
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2049": {
      "fn": "MockStakingRewards.notifyRewardAmount",
      "offset": [
        6397,
        6434
      ],
      "op": "ADD",
      "path": "7"
    },
    "2050": {
      "fn": "MockStakingRewards.notifyRewardAmount",
      "offset": [
        6397,
        6434
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2051": {
      "fn": "MockStakingRewards.notifyRewardAmount",
      "offset": [
        6397,
        6434
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x80C"
    },
    "2054": {
      "fn": "MockStakingRewards.notifyRewardAmount",
      "offset": [
        6397,
        6434
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "2055": {
      "fn": "MockStakingRewards.notifyRewardAmount",
      "offset": [
        6397,
        6434
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2056": {
      "fn": "MockStakingRewards.notifyRewardAmount",
      "offset": [
        6397,
        6434
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x12D2"
    },
    "2059": {
      "fn": "MockStakingRewards.notifyRewardAmount",
      "jump": "i",
      "offset": [
        6397,
        6434
      ],
      "op": "JUMP",
      "path": "7"
    },
    "2060": {
      "fn": "MockStakingRewards.notifyRewardAmount",
      "offset": [
        6397,
        6434
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2061": {
      "fn": "MockStakingRewards.notifyRewardAmount",
      "offset": [
        6382,
        6434
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2062": {
      "fn": "MockStakingRewards.notifyRewardAmount",
      "offset": [
        6382,
        6434
      ],
      "op": "POP",
      "path": "7"
    },
    "2063": {
      "fn": "MockStakingRewards.notifyRewardAmount",
      "offset": [
        6466,
        6494
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 14,
      "value": "0x823"
    },
    "2066": {
      "fn": "MockStakingRewards.notifyRewardAmount",
      "offset": [
        6478,
        6493
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x8"
    },
    "2068": {
      "fn": "MockStakingRewards.notifyRewardAmount",
      "offset": [
        6478,
        6493
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "2069": {
      "fn": "MockStakingRewards.notifyRewardAmount",
      "offset": [
        6466,
        6473
      ],
      "op": "DUP3",
      "path": "7"
    },
    "2070": {
      "fn": "MockStakingRewards.notifyRewardAmount",
      "offset": [
        6466,
        6477
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xEA6"
    },
    "2073": {
      "fn": "MockStakingRewards.notifyRewardAmount",
      "offset": [
        6466,
        6477
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2074": {
      "fn": "MockStakingRewards.notifyRewardAmount",
      "offset": [
        6466,
        6494
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "2075": {
      "fn": "MockStakingRewards.notifyRewardAmount",
      "offset": [
        6466,
        6494
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2076": {
      "fn": "MockStakingRewards.notifyRewardAmount",
      "offset": [
        6466,
        6494
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0xFFFFFFFF"
    },
    "2081": {
      "fn": "MockStakingRewards.notifyRewardAmount",
      "offset": [
        6466,
        6494
      ],
      "op": "AND",
      "path": "7"
    },
    "2082": {
      "fn": "MockStakingRewards.notifyRewardAmount",
      "jump": "i",
      "offset": [
        6466,
        6494
      ],
      "op": "JUMP",
      "path": "7"
    },
    "2083": {
      "fn": "MockStakingRewards.notifyRewardAmount",
      "offset": [
        6466,
        6494
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2084": {
      "fn": "MockStakingRewards.notifyRewardAmount",
      "offset": [
        6452,
        6462
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x7"
    },
    "2086": {
      "fn": "MockStakingRewards.notifyRewardAmount",
      "offset": [
        6452,
        6462
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "2087": {
      "fn": "MockStakingRewards.notifyRewardAmount",
      "offset": [
        6452,
        6494
      ],
      "op": "GT",
      "path": "7"
    },
    "2088": {
      "branch": 59,
      "fn": "MockStakingRewards.notifyRewardAmount",
      "offset": [
        6452,
        6494
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "2089": {
      "fn": "MockStakingRewards.notifyRewardAmount",
      "offset": [
        6444,
        6523
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x874"
    },
    "2092": {
      "branch": 59,
      "fn": "MockStakingRewards.notifyRewardAmount",
      "offset": [
        6444,
        6523
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "2093": {
      "fn": "MockStakingRewards.notifyRewardAmount",
      "offset": [
        6444,
        6523
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "2095": {
      "fn": "MockStakingRewards.notifyRewardAmount",
      "offset": [
        6444,
        6523
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "2096": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2100": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2102": {
      "op": "SHL"
    },
    "2103": {
      "fn": "MockStakingRewards.notifyRewardAmount",
      "offset": [
        6444,
        6523
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2104": {
      "fn": "MockStakingRewards.notifyRewardAmount",
      "offset": [
        6444,
        6523
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2105": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2107": {
      "fn": "MockStakingRewards.notifyRewardAmount",
      "offset": [
        6444,
        6523
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "2109": {
      "fn": "MockStakingRewards.notifyRewardAmount",
      "offset": [
        6444,
        6523
      ],
      "op": "DUP3",
      "path": "7"
    },
    "2110": {
      "fn": "MockStakingRewards.notifyRewardAmount",
      "offset": [
        6444,
        6523
      ],
      "op": "ADD",
      "path": "7"
    },
    "2111": {
      "op": "MSTORE"
    },
    "2112": {
      "op": "PUSH1",
      "value": "0x18"
    },
    "2114": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2116": {
      "op": "DUP3"
    },
    "2117": {
      "op": "ADD"
    },
    "2118": {
      "op": "MSTORE"
    },
    "2119": {
      "op": "PUSH32",
      "value": "0x50726F76696465642072657761726420746F6F20686967680000000000000000"
    },
    "2152": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2154": {
      "op": "DUP3"
    },
    "2155": {
      "op": "ADD"
    },
    "2156": {
      "op": "MSTORE"
    },
    "2157": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2159": {
      "op": "ADD"
    },
    "2160": {
      "fn": "MockStakingRewards.notifyRewardAmount",
      "offset": [
        6444,
        6523
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x51E"
    },
    "2163": {
      "op": "JUMP"
    },
    "2164": {
      "fn": "MockStakingRewards.notifyRewardAmount",
      "offset": [
        6444,
        6523
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2165": {
      "fn": "MockStakingRewards.notifyRewardAmount",
      "offset": [
        6551,
        6566
      ],
      "op": "TIMESTAMP",
      "path": "7",
      "statement": 15
    },
    "2166": {
      "fn": "MockStakingRewards.notifyRewardAmount",
      "offset": [
        6534,
        6548
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x9"
    },
    "2168": {
      "fn": "MockStakingRewards.notifyRewardAmount",
      "offset": [
        6534,
        6566
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2169": {
      "fn": "MockStakingRewards.notifyRewardAmount",
      "offset": [
        6534,
        6566
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2170": {
      "fn": "MockStakingRewards.notifyRewardAmount",
      "offset": [
        6534,
        6566
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "2171": {
      "fn": "MockStakingRewards.notifyRewardAmount",
      "offset": [
        6611,
        6626
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 16,
      "value": "0x8"
    },
    "2173": {
      "fn": "MockStakingRewards.notifyRewardAmount",
      "offset": [
        6611,
        6626
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "2174": {
      "fn": "MockStakingRewards.notifyRewardAmount",
      "offset": [
        6591,
        6627
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x887"
    },
    "2177": {
      "fn": "MockStakingRewards.notifyRewardAmount",
      "offset": [
        6591,
        6627
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "2178": {
      "fn": "MockStakingRewards.notifyRewardAmount",
      "offset": [
        6551,
        6566
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2179": {
      "fn": "MockStakingRewards.notifyRewardAmount",
      "offset": [
        6591,
        6610
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xEB2"
    },
    "2182": {
      "fn": "MockStakingRewards.notifyRewardAmount",
      "jump": "i",
      "offset": [
        6591,
        6627
      ],
      "op": "JUMP",
      "path": "7"
    },
    "2183": {
      "fn": "MockStakingRewards.notifyRewardAmount",
      "offset": [
        6591,
        6627
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2184": {
      "fn": "MockStakingRewards.notifyRewardAmount",
      "offset": [
        6576,
        6588
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x6"
    },
    "2186": {
      "fn": "MockStakingRewards.notifyRewardAmount",
      "offset": [
        6576,
        6627
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "2187": {
      "fn": "MockStakingRewards.notifyRewardAmount",
      "offset": [
        6642,
        6661
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 17,
      "value": "0x40"
    },
    "2189": {
      "fn": "MockStakingRewards.notifyRewardAmount",
      "offset": [
        6642,
        6661
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "2190": {
      "op": "DUP4"
    },
    "2191": {
      "op": "DUP2"
    },
    "2192": {
      "op": "MSTORE"
    },
    "2193": {
      "fn": "MockStakingRewards.notifyRewardAmount",
      "offset": [
        6642,
        6661
      ],
      "op": "PUSH32",
      "path": "7",
      "value": "0xDE88A922E0D3B88B24E9623EFEB464919C6BF9F66857A65E2BFCF2CE87A9433D"
    },
    "2226": {
      "fn": "MockStakingRewards.notifyRewardAmount",
      "offset": [
        6642,
        6661
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2227": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2229": {
      "op": "ADD"
    },
    "2230": {
      "fn": "MockStakingRewards.notifyRewardAmount",
      "offset": [
        6642,
        6661
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "2232": {
      "fn": "MockStakingRewards.notifyRewardAmount",
      "offset": [
        6642,
        6661
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "2233": {
      "fn": "MockStakingRewards.notifyRewardAmount",
      "offset": [
        6642,
        6661
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2234": {
      "fn": "MockStakingRewards.notifyRewardAmount",
      "offset": [
        6642,
        6661
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "2235": {
      "fn": "MockStakingRewards.notifyRewardAmount",
      "offset": [
        6642,
        6661
      ],
      "op": "SUB",
      "path": "7"
    },
    "2236": {
      "fn": "MockStakingRewards.notifyRewardAmount",
      "offset": [
        6642,
        6661
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2237": {
      "fn": "MockStakingRewards.notifyRewardAmount",
      "offset": [
        6642,
        6661
      ],
      "op": "LOG1",
      "path": "7"
    },
    "2238": {
      "fn": "MockStakingRewards.notifyRewardAmount",
      "offset": [
        5706,
        6668
      ],
      "op": "POP",
      "path": "7"
    },
    "2239": {
      "offset": [
        1913,
        1914
      ],
      "op": "POP",
      "path": "7"
    },
    "2240": {
      "fn": "MockStakingRewards.notifyRewardAmount",
      "offset": [
        5595,
        6668
      ],
      "op": "POP",
      "path": "7"
    },
    "2241": {
      "fn": "MockStakingRewards.notifyRewardAmount",
      "jump": "o",
      "offset": [
        5595,
        6668
      ],
      "op": "JUMP",
      "path": "7"
    },
    "2242": {
      "fn": "MockStakingRewards.getReward",
      "offset": [
        5117,
        5426
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2243": {
      "offset": [
        1680,
        1681
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "2245": {
      "offset": [
        2260,
        2267
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "2247": {
      "fn": "MockStakingRewards.getReward",
      "offset": [
        2260,
        2267
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2248": {
      "offset": [
        2260,
        2279
      ],
      "op": "EQ",
      "path": "0"
    },
    "2249": {
      "fn": "MockStakingRewards.getReward",
      "offset": [
        2260,
        2279
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2250": {
      "offset": [
        2252,
        2315
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8E5"
    },
    "2253": {
      "offset": [
        2252,
        2315
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2254": {
      "fn": "MockStakingRewards.getReward",
      "offset": [
        2252,
        2315
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2256": {
      "fn": "MockStakingRewards.getReward",
      "offset": [
        2252,
        2315
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2257": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2261": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2263": {
      "op": "SHL"
    },
    "2264": {
      "offset": [
        2252,
        2315
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2265": {
      "fn": "MockStakingRewards.getReward",
      "offset": [
        2252,
        2315
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2266": {
      "fn": "MockStakingRewards.getReward",
      "offset": [
        2252,
        2315
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2268": {
      "fn": "MockStakingRewards.getReward",
      "offset": [
        2252,
        2315
      ],
      "op": "ADD",
      "path": "0"
    },
    "2269": {
      "fn": "MockStakingRewards.getReward",
      "offset": [
        2252,
        2315
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x51E"
    },
    "2272": {
      "fn": "MockStakingRewards.getReward",
      "offset": [
        2252,
        2315
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2273": {
      "fn": "MockStakingRewards.getReward",
      "offset": [
        2252,
        2315
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x133A"
    },
    "2276": {
      "fn": "MockStakingRewards.getReward",
      "jump": "i",
      "offset": [
        2252,
        2315
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2277": {
      "fn": "MockStakingRewards.getReward",
      "offset": [
        2252,
        2315
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2278": {
      "offset": [
        1680,
        1681
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "2280": {
      "offset": [
        2390,
        2397
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "2282": {
      "offset": [
        2390,
        2408
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "2283": {
      "fn": "MockStakingRewards.getReward",
      "offset": [
        5180,
        5190
      ],
      "op": "CALLER",
      "path": "7"
    },
    "2284": {
      "offset": [
        7729,
        7745
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x8F3"
    },
    "2287": {
      "offset": [
        7729,
        7743
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xE18"
    },
    "2290": {
      "jump": "i",
      "offset": [
        7729,
        7745
      ],
      "op": "JUMP",
      "path": "7"
    },
    "2291": {
      "fn": "MockStakingRewards.getReward",
      "offset": [
        7729,
        7745
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2292": {
      "offset": [
        7706,
        7726
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xA"
    },
    "2294": {
      "offset": [
        7706,
        7745
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "2295": {
      "offset": [
        7772,
        7798
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x8FE"
    },
    "2298": {
      "offset": [
        7772,
        7796
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xB13"
    },
    "2301": {
      "jump": "i",
      "offset": [
        7772,
        7798
      ],
      "op": "JUMP",
      "path": "7"
    },
    "2302": {
      "fn": "MockStakingRewards.getReward",
      "offset": [
        7772,
        7798
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2303": {
      "offset": [
        7755,
        7769
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x9"
    },
    "2305": {
      "offset": [
        7755,
        7798
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "2306": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2308": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2310": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2312": {
      "op": "SHL"
    },
    "2313": {
      "op": "SUB"
    },
    "2314": {
      "offset": [
        7812,
        7833
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2315": {
      "fn": "MockStakingRewards.getReward",
      "offset": [
        7812,
        7833
      ],
      "op": "AND",
      "path": "7"
    },
    "2316": {
      "fn": "MockStakingRewards.getReward",
      "offset": [
        7812,
        7833
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "2317": {
      "offset": [
        7808,
        7962
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x945"
    },
    "2320": {
      "offset": [
        7808,
        7962
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "2321": {
      "offset": [
        7868,
        7883
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x919"
    },
    "2324": {
      "offset": [
        7875,
        7882
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2325": {
      "offset": [
        7868,
        7874
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x3D8"
    },
    "2328": {
      "jump": "i",
      "offset": [
        7868,
        7883
      ],
      "op": "JUMP",
      "path": "7"
    },
    "2329": {
      "fn": "MockStakingRewards.getReward",
      "offset": [
        7868,
        7883
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2330": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2332": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2334": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2336": {
      "op": "SHL"
    },
    "2337": {
      "op": "SUB"
    },
    "2338": {
      "offset": [
        7849,
        7865
      ],
      "op": "DUP3",
      "path": "7"
    },
    "2339": {
      "fn": "MockStakingRewards.getReward",
      "offset": [
        7849,
        7865
      ],
      "op": "AND",
      "path": "7"
    },
    "2340": {
      "fn": "MockStakingRewards.getReward",
      "offset": [
        7849,
        7865
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "2342": {
      "fn": "MockStakingRewards.getReward",
      "offset": [
        7849,
        7865
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2343": {
      "fn": "MockStakingRewards.getReward",
      "offset": [
        7849,
        7865
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2344": {
      "fn": "MockStakingRewards.getReward",
      "offset": [
        7849,
        7865
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2345": {
      "offset": [
        7849,
        7856
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xC"
    },
    "2347": {
      "offset": [
        7849,
        7865
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "2349": {
      "fn": "MockStakingRewards.getReward",
      "offset": [
        7849,
        7865
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2350": {
      "fn": "MockStakingRewards.getReward",
      "offset": [
        7849,
        7865
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2351": {
      "fn": "MockStakingRewards.getReward",
      "offset": [
        7849,
        7865
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2352": {
      "fn": "MockStakingRewards.getReward",
      "offset": [
        7849,
        7865
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "2354": {
      "fn": "MockStakingRewards.getReward",
      "offset": [
        7849,
        7865
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2355": {
      "fn": "MockStakingRewards.getReward",
      "offset": [
        7849,
        7865
      ],
      "op": "DUP4",
      "path": "7"
    },
    "2356": {
      "fn": "MockStakingRewards.getReward",
      "offset": [
        7849,
        7865
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "2357": {
      "offset": [
        7849,
        7883
      ],
      "op": "SWAP4",
      "path": "7"
    },
    "2358": {
      "fn": "MockStakingRewards.getReward",
      "offset": [
        7849,
        7883
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2359": {
      "fn": "MockStakingRewards.getReward",
      "offset": [
        7849,
        7883
      ],
      "op": "SWAP4",
      "path": "7"
    },
    "2360": {
      "fn": "MockStakingRewards.getReward",
      "offset": [
        7849,
        7883
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "2361": {
      "offset": [
        7931,
        7951
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xA"
    },
    "2363": {
      "fn": "MockStakingRewards.getReward",
      "offset": [
        7931,
        7951
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "2364": {
      "offset": [
        7897,
        7919
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xB"
    },
    "2366": {
      "offset": [
        7897,
        7928
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2367": {
      "fn": "MockStakingRewards.getReward",
      "offset": [
        7897,
        7928
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "2368": {
      "fn": "MockStakingRewards.getReward",
      "offset": [
        7897,
        7928
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2369": {
      "fn": "MockStakingRewards.getReward",
      "offset": [
        7897,
        7928
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "2370": {
      "fn": "MockStakingRewards.getReward",
      "offset": [
        7897,
        7928
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2371": {
      "fn": "MockStakingRewards.getReward",
      "offset": [
        7897,
        7928
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "2372": {
      "offset": [
        7897,
        7951
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "2373": {
      "offset": [
        7808,
        7962
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2374": {
      "fn": "MockStakingRewards.getReward",
      "offset": [
        5227,
        5237
      ],
      "op": "CALLER",
      "path": "7"
    },
    "2375": {
      "fn": "MockStakingRewards.getReward",
      "offset": [
        5202,
        5216
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "2377": {
      "fn": "MockStakingRewards.getReward",
      "offset": [
        5219,
        5238
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2378": {
      "fn": "MockStakingRewards.getReward",
      "offset": [
        5219,
        5238
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2379": {
      "fn": "MockStakingRewards.getReward",
      "offset": [
        5219,
        5238
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2380": {
      "fn": "MockStakingRewards.getReward",
      "offset": [
        5219,
        5226
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xC"
    },
    "2382": {
      "fn": "MockStakingRewards.getReward",
      "offset": [
        5219,
        5238
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "2384": {
      "fn": "MockStakingRewards.getReward",
      "offset": [
        5219,
        5238
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2385": {
      "fn": "MockStakingRewards.getReward",
      "offset": [
        5219,
        5238
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "2387": {
      "fn": "MockStakingRewards.getReward",
      "offset": [
        5219,
        5238
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2388": {
      "fn": "MockStakingRewards.getReward",
      "offset": [
        5219,
        5238
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "2389": {
      "fn": "MockStakingRewards.getReward",
      "offset": [
        5219,
        5238
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "2390": {
      "fn": "MockStakingRewards.getReward",
      "offset": [
        5252,
        5262
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2391": {
      "branch": 60,
      "fn": "MockStakingRewards.getReward",
      "offset": [
        5252,
        5262
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "2392": {
      "fn": "MockStakingRewards.getReward",
      "offset": [
        5248,
        5420
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x9B6"
    },
    "2395": {
      "branch": 60,
      "fn": "MockStakingRewards.getReward",
      "offset": [
        5248,
        5420
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "2396": {
      "fn": "MockStakingRewards.getReward",
      "offset": [
        5286,
        5296
      ],
      "op": "CALLER",
      "path": "7",
      "statement": 18
    },
    "2397": {
      "fn": "MockStakingRewards.getReward",
      "offset": [
        5300,
        5301
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "2399": {
      "fn": "MockStakingRewards.getReward",
      "offset": [
        5278,
        5297
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2400": {
      "fn": "MockStakingRewards.getReward",
      "offset": [
        5278,
        5297
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2401": {
      "fn": "MockStakingRewards.getReward",
      "offset": [
        5278,
        5297
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2402": {
      "fn": "MockStakingRewards.getReward",
      "offset": [
        5278,
        5285
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xC"
    },
    "2404": {
      "fn": "MockStakingRewards.getReward",
      "offset": [
        5278,
        5297
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "2406": {
      "fn": "MockStakingRewards.getReward",
      "offset": [
        5278,
        5297
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2407": {
      "fn": "MockStakingRewards.getReward",
      "offset": [
        5278,
        5297
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "2409": {
      "fn": "MockStakingRewards.getReward",
      "offset": [
        5278,
        5297
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2410": {
      "fn": "MockStakingRewards.getReward",
      "offset": [
        5278,
        5297
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "2411": {
      "fn": "MockStakingRewards.getReward",
      "offset": [
        5278,
        5301
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "2412": {
      "fn": "MockStakingRewards.getReward",
      "offset": [
        5315,
        5327
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 19,
      "value": "0x4"
    },
    "2414": {
      "fn": "MockStakingRewards.getReward",
      "offset": [
        5315,
        5327
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "2415": {
      "fn": "MockStakingRewards.getReward",
      "offset": [
        5315,
        5360
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x984"
    },
    "2418": {
      "fn": "MockStakingRewards.getReward",
      "offset": [
        5315,
        5360
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "2419": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2421": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2423": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2425": {
      "op": "SHL"
    },
    "2426": {
      "op": "SUB"
    },
    "2427": {
      "fn": "MockStakingRewards.getReward",
      "offset": [
        5315,
        5327
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2428": {
      "fn": "MockStakingRewards.getReward",
      "offset": [
        5315,
        5327
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "2429": {
      "fn": "MockStakingRewards.getReward",
      "offset": [
        5315,
        5327
      ],
      "op": "AND",
      "path": "7"
    },
    "2430": {
      "fn": "MockStakingRewards.getReward",
      "offset": [
        5315,
        5327
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2431": {
      "fn": "MockStakingRewards.getReward",
      "offset": [
        5353,
        5359
      ],
      "op": "DUP4",
      "path": "7"
    },
    "2432": {
      "fn": "MockStakingRewards.getReward",
      "offset": [
        5315,
        5340
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xF30"
    },
    "2435": {
      "fn": "MockStakingRewards.getReward",
      "jump": "i",
      "offset": [
        5315,
        5360
      ],
      "op": "JUMP",
      "path": "7"
    },
    "2436": {
      "fn": "MockStakingRewards.getReward",
      "offset": [
        5315,
        5360
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2437": {
      "fn": "MockStakingRewards.getReward",
      "offset": [
        5379,
        5409
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 20,
      "value": "0x40"
    },
    "2439": {
      "fn": "MockStakingRewards.getReward",
      "offset": [
        5379,
        5409
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "2440": {
      "op": "DUP2"
    },
    "2441": {
      "op": "DUP2"
    },
    "2442": {
      "op": "MSTORE"
    },
    "2443": {
      "fn": "MockStakingRewards.getReward",
      "offset": [
        5390,
        5400
      ],
      "op": "CALLER",
      "path": "7"
    },
    "2444": {
      "fn": "MockStakingRewards.getReward",
      "offset": [
        5390,
        5400
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2445": {
      "fn": "MockStakingRewards.getReward",
      "offset": [
        5379,
        5409
      ],
      "op": "PUSH32",
      "path": "7",
      "value": "0xE2403640BA68FED3A2F88B7557551D1993F84B99BB10FF833F0CF8DB0C5E0486"
    },
    "2478": {
      "fn": "MockStakingRewards.getReward",
      "offset": [
        5379,
        5409
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2479": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2481": {
      "op": "ADD"
    },
    "2482": {
      "fn": "MockStakingRewards.getReward",
      "offset": [
        5379,
        5409
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x64F"
    },
    "2485": {
      "op": "JUMP"
    },
    "2486": {
      "fn": "MockStakingRewards.getReward",
      "offset": [
        5248,
        5420
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2487": {
      "op": "POP"
    },
    "2488": {
      "op": "POP"
    },
    "2489": {
      "offset": [
        1637,
        1638
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "2491": {
      "offset": [
        2563,
        2570
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "2493": {
      "offset": [
        2563,
        2585
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "2494": {
      "fn": "MockStakingRewards.getReward",
      "jump": "o",
      "offset": [
        5117,
        5426
      ],
      "op": "JUMP",
      "path": "7"
    },
    "2495": {
      "fn": "MockStakingRewards.updatePeriodFinish",
      "offset": [
        6710,
        6839
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2496": {
      "offset": [
        1238,
        1250
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x9C7"
    },
    "2499": {
      "offset": [
        1238,
        1248
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xEBE"
    },
    "2502": {
      "jump": "i",
      "offset": [
        1238,
        1250
      ],
      "op": "JUMP",
      "path": "7"
    },
    "2503": {
      "fn": "MockStakingRewards.updatePeriodFinish",
      "offset": [
        1238,
        1250
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2504": {
      "fn": "MockStakingRewards.updatePeriodFinish",
      "offset": [
        6794,
        6795
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "2506": {
      "offset": [
        7729,
        7745
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x9D1"
    },
    "2509": {
      "offset": [
        7729,
        7743
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xE18"
    },
    "2512": {
      "jump": "i",
      "offset": [
        7729,
        7745
      ],
      "op": "JUMP",
      "path": "7"
    },
    "2513": {
      "fn": "MockStakingRewards.updatePeriodFinish",
      "offset": [
        7729,
        7745
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2514": {
      "offset": [
        7706,
        7726
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xA"
    },
    "2516": {
      "offset": [
        7706,
        7745
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "2517": {
      "offset": [
        7772,
        7798
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x9DC"
    },
    "2520": {
      "offset": [
        7772,
        7796
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xB13"
    },
    "2523": {
      "jump": "i",
      "offset": [
        7772,
        7798
      ],
      "op": "JUMP",
      "path": "7"
    },
    "2524": {
      "fn": "MockStakingRewards.updatePeriodFinish",
      "offset": [
        7772,
        7798
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2525": {
      "offset": [
        7755,
        7769
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x9"
    },
    "2527": {
      "offset": [
        7755,
        7798
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "2528": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2530": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2532": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2534": {
      "op": "SHL"
    },
    "2535": {
      "op": "SUB"
    },
    "2536": {
      "offset": [
        7812,
        7833
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2537": {
      "fn": "MockStakingRewards.updatePeriodFinish",
      "offset": [
        7812,
        7833
      ],
      "op": "AND",
      "path": "7"
    },
    "2538": {
      "fn": "MockStakingRewards.updatePeriodFinish",
      "offset": [
        7812,
        7833
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "2539": {
      "offset": [
        7808,
        7962
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xA23"
    },
    "2542": {
      "offset": [
        7808,
        7962
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "2543": {
      "offset": [
        7868,
        7883
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x9F7"
    },
    "2546": {
      "offset": [
        7875,
        7882
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2547": {
      "offset": [
        7868,
        7874
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x3D8"
    },
    "2550": {
      "jump": "i",
      "offset": [
        7868,
        7883
      ],
      "op": "JUMP",
      "path": "7"
    },
    "2551": {
      "fn": "MockStakingRewards.updatePeriodFinish",
      "offset": [
        7868,
        7883
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2552": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2554": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2556": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2558": {
      "op": "SHL"
    },
    "2559": {
      "op": "SUB"
    },
    "2560": {
      "offset": [
        7849,
        7865
      ],
      "op": "DUP3",
      "path": "7"
    },
    "2561": {
      "fn": "MockStakingRewards.updatePeriodFinish",
      "offset": [
        7849,
        7865
      ],
      "op": "AND",
      "path": "7"
    },
    "2562": {
      "fn": "MockStakingRewards.updatePeriodFinish",
      "offset": [
        7849,
        7865
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "2564": {
      "fn": "MockStakingRewards.updatePeriodFinish",
      "offset": [
        7849,
        7865
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2565": {
      "fn": "MockStakingRewards.updatePeriodFinish",
      "offset": [
        7849,
        7865
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2566": {
      "fn": "MockStakingRewards.updatePeriodFinish",
      "offset": [
        7849,
        7865
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2567": {
      "offset": [
        7849,
        7856
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xC"
    },
    "2569": {
      "offset": [
        7849,
        7865
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "2571": {
      "fn": "MockStakingRewards.updatePeriodFinish",
      "offset": [
        7849,
        7865
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2572": {
      "fn": "MockStakingRewards.updatePeriodFinish",
      "offset": [
        7849,
        7865
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2573": {
      "fn": "MockStakingRewards.updatePeriodFinish",
      "offset": [
        7849,
        7865
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2574": {
      "fn": "MockStakingRewards.updatePeriodFinish",
      "offset": [
        7849,
        7865
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "2576": {
      "fn": "MockStakingRewards.updatePeriodFinish",
      "offset": [
        7849,
        7865
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2577": {
      "fn": "MockStakingRewards.updatePeriodFinish",
      "offset": [
        7849,
        7865
      ],
      "op": "DUP4",
      "path": "7"
    },
    "2578": {
      "fn": "MockStakingRewards.updatePeriodFinish",
      "offset": [
        7849,
        7865
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "2579": {
      "offset": [
        7849,
        7883
      ],
      "op": "SWAP4",
      "path": "7"
    },
    "2580": {
      "fn": "MockStakingRewards.updatePeriodFinish",
      "offset": [
        7849,
        7883
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2581": {
      "fn": "MockStakingRewards.updatePeriodFinish",
      "offset": [
        7849,
        7883
      ],
      "op": "SWAP4",
      "path": "7"
    },
    "2582": {
      "fn": "MockStakingRewards.updatePeriodFinish",
      "offset": [
        7849,
        7883
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "2583": {
      "offset": [
        7931,
        7951
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xA"
    },
    "2585": {
      "fn": "MockStakingRewards.updatePeriodFinish",
      "offset": [
        7931,
        7951
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "2586": {
      "offset": [
        7897,
        7919
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xB"
    },
    "2588": {
      "offset": [
        7897,
        7928
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2589": {
      "fn": "MockStakingRewards.updatePeriodFinish",
      "offset": [
        7897,
        7928
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "2590": {
      "fn": "MockStakingRewards.updatePeriodFinish",
      "offset": [
        7897,
        7928
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2591": {
      "fn": "MockStakingRewards.updatePeriodFinish",
      "offset": [
        7897,
        7928
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "2592": {
      "fn": "MockStakingRewards.updatePeriodFinish",
      "offset": [
        7897,
        7928
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2593": {
      "fn": "MockStakingRewards.updatePeriodFinish",
      "offset": [
        7897,
        7928
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "2594": {
      "offset": [
        7897,
        7951
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "2595": {
      "offset": [
        7808,
        7962
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2596": {
      "op": "POP"
    },
    "2597": {
      "fn": "MockStakingRewards.updatePeriodFinish",
      "offset": [
        6808,
        6820
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 21,
      "value": "0x6"
    },
    "2599": {
      "fn": "MockStakingRewards.updatePeriodFinish",
      "offset": [
        6808,
        6832
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "2600": {
      "fn": "MockStakingRewards.updatePeriodFinish",
      "jump": "o",
      "offset": [
        6710,
        6839
      ],
      "op": "JUMP",
      "path": "7"
    },
    "2601": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        937,
        1203
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2602": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        1005,
        1019
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 22,
      "value": "0x1"
    },
    "2604": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        1005,
        1019
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "2605": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2607": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2609": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2611": {
      "op": "SHL"
    },
    "2612": {
      "op": "SUB"
    },
    "2613": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        1005,
        1019
      ],
      "op": "AND",
      "path": "7"
    },
    "2614": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        991,
        1001
      ],
      "op": "CALLER",
      "path": "7"
    },
    "2615": {
      "branch": 61,
      "fn": "Owned.acceptOwnership",
      "offset": [
        991,
        1019
      ],
      "op": "EQ",
      "path": "7"
    },
    "2616": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        983,
        1077
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xAA1"
    },
    "2619": {
      "branch": 61,
      "fn": "Owned.acceptOwnership",
      "offset": [
        983,
        1077
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "2620": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        983,
        1077
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "2622": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        983,
        1077
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "2623": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2627": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2629": {
      "op": "SHL"
    },
    "2630": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        983,
        1077
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2631": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        983,
        1077
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2632": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2634": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        983,
        1077
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "2636": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        983,
        1077
      ],
      "op": "DUP3",
      "path": "7"
    },
    "2637": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        983,
        1077
      ],
      "op": "ADD",
      "path": "7"
    },
    "2638": {
      "op": "MSTORE"
    },
    "2639": {
      "op": "PUSH1",
      "value": "0x35"
    },
    "2641": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2643": {
      "op": "DUP3"
    },
    "2644": {
      "op": "ADD"
    },
    "2645": {
      "op": "MSTORE"
    },
    "2646": {
      "op": "PUSH32",
      "value": "0x596F75206D757374206265206E6F6D696E61746564206265666F726520796F75"
    },
    "2679": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2681": {
      "op": "DUP3"
    },
    "2682": {
      "op": "ADD"
    },
    "2683": {
      "op": "MSTORE"
    },
    "2684": {
      "op": "PUSH21",
      "value": "0x2063616E20616363657074206F776E65727368697"
    },
    "2706": {
      "op": "PUSH1",
      "value": "0x5C"
    },
    "2708": {
      "op": "SHL"
    },
    "2709": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2711": {
      "op": "DUP3"
    },
    "2712": {
      "op": "ADD"
    },
    "2713": {
      "op": "MSTORE"
    },
    "2714": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2716": {
      "op": "ADD"
    },
    "2717": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        983,
        1077
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x51E"
    },
    "2720": {
      "op": "JUMP"
    },
    "2721": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        983,
        1077
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2722": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        1105,
        1110
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 23,
      "value": "0x0"
    },
    "2724": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        1105,
        1110
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "2725": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        1105,
        1110
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1"
    },
    "2727": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        1112,
        1126
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "2728": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        1092,
        1127
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "2730": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        1092,
        1127
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2731": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        1092,
        1127
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "2732": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2734": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2736": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2738": {
      "op": "SHL"
    },
    "2739": {
      "op": "SUB"
    },
    "2740": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        1105,
        1110
      ],
      "op": "SWAP4",
      "path": "7"
    },
    "2741": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        1105,
        1110
      ],
      "op": "DUP5",
      "path": "7"
    },
    "2742": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        1105,
        1110
      ],
      "op": "AND",
      "path": "7"
    },
    "2743": {
      "op": "DUP2"
    },
    "2744": {
      "op": "MSTORE"
    },
    "2745": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        1112,
        1126
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "2746": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        1112,
        1126
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2747": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        1112,
        1126
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "2748": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        1112,
        1126
      ],
      "op": "AND",
      "path": "7"
    },
    "2749": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2751": {
      "op": "DUP4"
    },
    "2752": {
      "op": "ADD"
    },
    "2753": {
      "op": "MSTORE"
    },
    "2754": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        1092,
        1127
      ],
      "op": "PUSH32",
      "path": "7",
      "value": "0xB532073B38C83145E3E5135377A08BF9AAB55BC0FD7C1179CD4FB995D2A5159C"
    },
    "2787": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        1092,
        1127
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "2788": {
      "op": "ADD"
    },
    "2789": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        1092,
        1127
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "2791": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        1092,
        1127
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "2792": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        1092,
        1127
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2793": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        1092,
        1127
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "2794": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        1092,
        1127
      ],
      "op": "SUB",
      "path": "7"
    },
    "2795": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        1092,
        1127
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2796": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        1092,
        1127
      ],
      "op": "LOG1",
      "path": "7"
    },
    "2797": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        1145,
        1159
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 24,
      "value": "0x1"
    },
    "2799": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        1145,
        1159
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2800": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        1145,
        1159
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "2801": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        1145,
        1159
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "2803": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        1137,
        1159
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2804": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        1137,
        1159
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "2805": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2807": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2809": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2811": {
      "op": "SHL"
    },
    "2812": {
      "op": "SUB"
    },
    "2813": {
      "op": "NOT"
    },
    "2814": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        1137,
        1159
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2815": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        1137,
        1159
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2816": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        1137,
        1159
      ],
      "op": "AND",
      "path": "7"
    },
    "2817": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2819": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2821": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2823": {
      "op": "SHL"
    },
    "2824": {
      "op": "SUB"
    },
    "2825": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        1145,
        1159
      ],
      "op": "DUP5",
      "path": "7"
    },
    "2826": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        1145,
        1159
      ],
      "op": "AND",
      "path": "7"
    },
    "2827": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        1137,
        1159
      ],
      "op": "OR",
      "path": "7"
    },
    "2828": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        1137,
        1159
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2829": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        1137,
        1159
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "2830": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        1137,
        1159
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "2831": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        1169,
        1196
      ],
      "op": "AND",
      "path": "7",
      "statement": 25
    },
    "2832": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        1169,
        1196
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2833": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        1169,
        1196
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "2834": {
      "fn": "Owned.acceptOwnership",
      "jump": "o",
      "offset": [
        937,
        1203
      ],
      "op": "JUMP",
      "path": "7"
    },
    "2835": {
      "fn": "MockStakingRewards.lastTimeRewardApplicable",
      "offset": [
        3465,
        3603
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2836": {
      "fn": "MockStakingRewards.lastTimeRewardApplicable",
      "offset": [
        3531,
        3538
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "2838": {
      "fn": "MockStakingRewards.lastTimeRewardApplicable",
      "offset": [
        3557,
        3596
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 26,
      "value": "0x4F6"
    },
    "2841": {
      "fn": "MockStakingRewards.lastTimeRewardApplicable",
      "offset": [
        3566,
        3581
      ],
      "op": "TIMESTAMP",
      "path": "7"
    },
    "2842": {
      "fn": "MockStakingRewards.lastTimeRewardApplicable",
      "offset": [
        3583,
        3595
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x6"
    },
    "2844": {
      "fn": "MockStakingRewards.lastTimeRewardApplicable",
      "offset": [
        3583,
        3595
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "2845": {
      "fn": "MockStakingRewards.lastTimeRewardApplicable",
      "offset": [
        3557,
        3565
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xF98"
    },
    "2848": {
      "fn": "MockStakingRewards.lastTimeRewardApplicable",
      "jump": "i",
      "offset": [
        3557,
        3596
      ],
      "op": "JUMP",
      "path": "7"
    },
    "2849": {
      "fn": "MockStakingRewards.recoverERC20",
      "offset": [
        6951,
        7249
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2850": {
      "offset": [
        1238,
        1250
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xB29"
    },
    "2853": {
      "offset": [
        1238,
        1248
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xEBE"
    },
    "2856": {
      "jump": "i",
      "offset": [
        1238,
        1250
      ],
      "op": "JUMP",
      "path": "7"
    },
    "2857": {
      "fn": "MockStakingRewards.recoverERC20",
      "offset": [
        1238,
        1250
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2858": {
      "fn": "MockStakingRewards.recoverERC20",
      "offset": [
        7077,
        7089
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 27,
      "value": "0x5"
    },
    "2860": {
      "fn": "MockStakingRewards.recoverERC20",
      "offset": [
        7077,
        7089
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "2861": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2863": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2865": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2867": {
      "op": "SHL"
    },
    "2868": {
      "op": "SUB"
    },
    "2869": {
      "fn": "MockStakingRewards.recoverERC20",
      "offset": [
        7053,
        7090
      ],
      "op": "DUP4",
      "path": "7"
    },
    "2870": {
      "fn": "MockStakingRewards.recoverERC20",
      "offset": [
        7053,
        7090
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2871": {
      "fn": "MockStakingRewards.recoverERC20",
      "offset": [
        7053,
        7090
      ],
      "op": "AND",
      "path": "7"
    },
    "2872": {
      "fn": "MockStakingRewards.recoverERC20",
      "offset": [
        7077,
        7089
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "2873": {
      "fn": "MockStakingRewards.recoverERC20",
      "offset": [
        7077,
        7089
      ],
      "op": "AND",
      "path": "7"
    },
    "2874": {
      "fn": "MockStakingRewards.recoverERC20",
      "offset": [
        7053,
        7090
      ],
      "op": "EQ",
      "path": "7"
    },
    "2875": {
      "branch": 62,
      "fn": "MockStakingRewards.recoverERC20",
      "offset": [
        7053,
        7090
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "2876": {
      "fn": "MockStakingRewards.recoverERC20",
      "offset": [
        7045,
        7128
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xB91"
    },
    "2879": {
      "branch": 62,
      "fn": "MockStakingRewards.recoverERC20",
      "offset": [
        7045,
        7128
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "2880": {
      "fn": "MockStakingRewards.recoverERC20",
      "offset": [
        7045,
        7128
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "2882": {
      "fn": "MockStakingRewards.recoverERC20",
      "offset": [
        7045,
        7128
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "2883": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2887": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2889": {
      "op": "SHL"
    },
    "2890": {
      "fn": "MockStakingRewards.recoverERC20",
      "offset": [
        7045,
        7128
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2891": {
      "fn": "MockStakingRewards.recoverERC20",
      "offset": [
        7045,
        7128
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2892": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2894": {
      "fn": "MockStakingRewards.recoverERC20",
      "offset": [
        7045,
        7128
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "2896": {
      "fn": "MockStakingRewards.recoverERC20",
      "offset": [
        7045,
        7128
      ],
      "op": "DUP3",
      "path": "7"
    },
    "2897": {
      "fn": "MockStakingRewards.recoverERC20",
      "offset": [
        7045,
        7128
      ],
      "op": "ADD",
      "path": "7"
    },
    "2898": {
      "op": "MSTORE"
    },
    "2899": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "2901": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2903": {
      "op": "DUP3"
    },
    "2904": {
      "op": "ADD"
    },
    "2905": {
      "op": "MSTORE"
    },
    "2906": {
      "op": "PUSH32",
      "value": "0x43616E6E6F7420776974686472617720746865207374616B696E6720746F6B65"
    },
    "2939": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2941": {
      "op": "DUP3"
    },
    "2942": {
      "op": "ADD"
    },
    "2943": {
      "op": "MSTORE"
    },
    "2944": {
      "op": "PUSH1",
      "value": "0x37"
    },
    "2946": {
      "op": "PUSH1",
      "value": "0xF9"
    },
    "2948": {
      "op": "SHL"
    },
    "2949": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2951": {
      "op": "DUP3"
    },
    "2952": {
      "op": "ADD"
    },
    "2953": {
      "op": "MSTORE"
    },
    "2954": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2956": {
      "op": "ADD"
    },
    "2957": {
      "fn": "MockStakingRewards.recoverERC20",
      "offset": [
        7045,
        7128
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x51E"
    },
    "2960": {
      "op": "JUMP"
    },
    "2961": {
      "fn": "MockStakingRewards.recoverERC20",
      "offset": [
        7045,
        7128
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2962": {
      "fn": "MockStakingRewards.recoverERC20",
      "offset": [
        7172,
        7177
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 28,
      "value": "0x0"
    },
    "2964": {
      "fn": "MockStakingRewards.recoverERC20",
      "offset": [
        7172,
        7177
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "2965": {
      "fn": "MockStakingRewards.recoverERC20",
      "offset": [
        7138,
        7191
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xBAB"
    },
    "2968": {
      "fn": "MockStakingRewards.recoverERC20",
      "offset": [
        7138,
        7191
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2969": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2971": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2973": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2975": {
      "op": "SHL"
    },
    "2976": {
      "op": "SUB"
    },
    "2977": {
      "fn": "MockStakingRewards.recoverERC20",
      "offset": [
        7138,
        7171
      ],
      "op": "DUP5",
      "path": "7"
    },
    "2978": {
      "fn": "MockStakingRewards.recoverERC20",
      "offset": [
        7138,
        7171
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2979": {
      "fn": "MockStakingRewards.recoverERC20",
      "offset": [
        7138,
        7171
      ],
      "op": "AND",
      "path": "7"
    },
    "2980": {
      "fn": "MockStakingRewards.recoverERC20",
      "offset": [
        7138,
        7171
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "2981": {
      "fn": "MockStakingRewards.recoverERC20",
      "offset": [
        7172,
        7177
      ],
      "op": "AND",
      "path": "7"
    },
    "2982": {
      "fn": "MockStakingRewards.recoverERC20",
      "offset": [
        7179,
        7190
      ],
      "op": "DUP4",
      "path": "7"
    },
    "2983": {
      "fn": "MockStakingRewards.recoverERC20",
      "offset": [
        7138,
        7171
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xF30"
    },
    "2986": {
      "fn": "MockStakingRewards.recoverERC20",
      "jump": "i",
      "offset": [
        7138,
        7191
      ],
      "op": "JUMP",
      "path": "7"
    },
    "2987": {
      "fn": "MockStakingRewards.recoverERC20",
      "offset": [
        7138,
        7191
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2988": {
      "fn": "MockStakingRewards.recoverERC20",
      "offset": [
        7206,
        7242
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 29,
      "value": "0x40"
    },
    "2990": {
      "fn": "MockStakingRewards.recoverERC20",
      "offset": [
        7206,
        7242
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2991": {
      "fn": "MockStakingRewards.recoverERC20",
      "offset": [
        7206,
        7242
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "2992": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2994": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2996": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2998": {
      "op": "SHL"
    },
    "2999": {
      "op": "SUB"
    },
    "3000": {
      "op": "DUP5"
    },
    "3001": {
      "op": "AND"
    },
    "3002": {
      "op": "DUP2"
    },
    "3003": {
      "op": "MSTORE"
    },
    "3004": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3006": {
      "op": "DUP2"
    },
    "3007": {
      "op": "ADD"
    },
    "3008": {
      "op": "DUP4"
    },
    "3009": {
      "op": "SWAP1"
    },
    "3010": {
      "op": "MSTORE"
    },
    "3011": {
      "fn": "MockStakingRewards.recoverERC20",
      "offset": [
        7206,
        7242
      ],
      "op": "PUSH32",
      "path": "7",
      "value": "0x8C1256B8896378CD5044F80C202F9772B9D77DC85C8A6EB51967210B09BFAA28"
    },
    "3044": {
      "fn": "MockStakingRewards.recoverERC20",
      "offset": [
        7206,
        7242
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "3045": {
      "op": "ADD"
    },
    "3046": {
      "fn": "MockStakingRewards.recoverERC20",
      "offset": [
        7206,
        7242
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "3048": {
      "fn": "MockStakingRewards.recoverERC20",
      "offset": [
        7206,
        7242
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "3049": {
      "fn": "MockStakingRewards.recoverERC20",
      "offset": [
        7206,
        7242
      ],
      "op": "DUP1",
      "path": "7"
    },
    "3050": {
      "fn": "MockStakingRewards.recoverERC20",
      "offset": [
        7206,
        7242
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "3051": {
      "fn": "MockStakingRewards.recoverERC20",
      "offset": [
        7206,
        7242
      ],
      "op": "SUB",
      "path": "7"
    },
    "3052": {
      "fn": "MockStakingRewards.recoverERC20",
      "offset": [
        7206,
        7242
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3053": {
      "fn": "MockStakingRewards.recoverERC20",
      "offset": [
        7206,
        7242
      ],
      "op": "LOG1",
      "path": "7"
    },
    "3054": {
      "fn": "MockStakingRewards.recoverERC20",
      "offset": [
        6951,
        7249
      ],
      "op": "POP",
      "path": "7"
    },
    "3055": {
      "fn": "MockStakingRewards.recoverERC20",
      "offset": [
        6951,
        7249
      ],
      "op": "POP",
      "path": "7"
    },
    "3056": {
      "fn": "MockStakingRewards.recoverERC20",
      "jump": "o",
      "offset": [
        6951,
        7249
      ],
      "op": "JUMP",
      "path": "7"
    },
    "3057": {
      "fn": "MockStakingRewards.stake",
      "offset": [
        4373,
        4745
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3058": {
      "offset": [
        1680,
        1681
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "3060": {
      "offset": [
        2260,
        2267
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "3062": {
      "fn": "MockStakingRewards.stake",
      "offset": [
        2260,
        2267
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3063": {
      "offset": [
        2260,
        2279
      ],
      "op": "EQ",
      "path": "0"
    },
    "3064": {
      "branch": 72,
      "fn": "MockStakingRewards.stake",
      "offset": [
        2260,
        2279
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3065": {
      "offset": [
        2252,
        2315
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC14"
    },
    "3068": {
      "branch": 72,
      "offset": [
        2252,
        2315
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3069": {
      "fn": "MockStakingRewards.stake",
      "offset": [
        2252,
        2315
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3071": {
      "fn": "MockStakingRewards.stake",
      "offset": [
        2252,
        2315
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3072": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3076": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3078": {
      "op": "SHL"
    },
    "3079": {
      "offset": [
        2252,
        2315
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3080": {
      "fn": "MockStakingRewards.stake",
      "offset": [
        2252,
        2315
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3081": {
      "fn": "MockStakingRewards.stake",
      "offset": [
        2252,
        2315
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3083": {
      "fn": "MockStakingRewards.stake",
      "offset": [
        2252,
        2315
      ],
      "op": "ADD",
      "path": "0"
    },
    "3084": {
      "fn": "MockStakingRewards.stake",
      "offset": [
        2252,
        2315
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x51E"
    },
    "3087": {
      "fn": "MockStakingRewards.stake",
      "offset": [
        2252,
        2315
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3088": {
      "fn": "MockStakingRewards.stake",
      "offset": [
        2252,
        2315
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x133A"
    },
    "3091": {
      "fn": "MockStakingRewards.stake",
      "jump": "i",
      "offset": [
        2252,
        2315
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3092": {
      "fn": "MockStakingRewards.stake",
      "offset": [
        2252,
        2315
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3093": {
      "offset": [
        1680,
        1681
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "3095": {
      "offset": [
        2390,
        2397
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "3097": {
      "offset": [
        2390,
        2408
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "3098": {
      "fn": "MockStakingRewards.stake",
      "offset": [
        4448,
        4458
      ],
      "op": "CALLER",
      "path": "7"
    },
    "3099": {
      "offset": [
        7729,
        7745
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xC22"
    },
    "3102": {
      "offset": [
        7729,
        7743
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xE18"
    },
    "3105": {
      "jump": "i",
      "offset": [
        7729,
        7745
      ],
      "op": "JUMP",
      "path": "7"
    },
    "3106": {
      "fn": "MockStakingRewards.stake",
      "offset": [
        7729,
        7745
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3107": {
      "offset": [
        7706,
        7726
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xA"
    },
    "3109": {
      "offset": [
        7706,
        7745
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "3110": {
      "offset": [
        7772,
        7798
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xC2D"
    },
    "3113": {
      "offset": [
        7772,
        7796
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xB13"
    },
    "3116": {
      "jump": "i",
      "offset": [
        7772,
        7798
      ],
      "op": "JUMP",
      "path": "7"
    },
    "3117": {
      "fn": "MockStakingRewards.stake",
      "offset": [
        7772,
        7798
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3118": {
      "offset": [
        7755,
        7769
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x9"
    },
    "3120": {
      "offset": [
        7755,
        7798
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "3121": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3123": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3125": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3127": {
      "op": "SHL"
    },
    "3128": {
      "op": "SUB"
    },
    "3129": {
      "offset": [
        7812,
        7833
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3130": {
      "fn": "MockStakingRewards.stake",
      "offset": [
        7812,
        7833
      ],
      "op": "AND",
      "path": "7"
    },
    "3131": {
      "branch": 63,
      "fn": "MockStakingRewards.stake",
      "offset": [
        7812,
        7833
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "3132": {
      "offset": [
        7808,
        7962
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xC74"
    },
    "3135": {
      "branch": 63,
      "offset": [
        7808,
        7962
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "3136": {
      "offset": [
        7868,
        7883
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xC48"
    },
    "3139": {
      "offset": [
        7875,
        7882
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3140": {
      "offset": [
        7868,
        7874
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x3D8"
    },
    "3143": {
      "jump": "i",
      "offset": [
        7868,
        7883
      ],
      "op": "JUMP",
      "path": "7"
    },
    "3144": {
      "fn": "MockStakingRewards.stake",
      "offset": [
        7868,
        7883
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3145": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3147": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3149": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3151": {
      "op": "SHL"
    },
    "3152": {
      "op": "SUB"
    },
    "3153": {
      "offset": [
        7849,
        7865
      ],
      "op": "DUP3",
      "path": "7"
    },
    "3154": {
      "fn": "MockStakingRewards.stake",
      "offset": [
        7849,
        7865
      ],
      "op": "AND",
      "path": "7"
    },
    "3155": {
      "fn": "MockStakingRewards.stake",
      "offset": [
        7849,
        7865
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "3157": {
      "fn": "MockStakingRewards.stake",
      "offset": [
        7849,
        7865
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3158": {
      "fn": "MockStakingRewards.stake",
      "offset": [
        7849,
        7865
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3159": {
      "fn": "MockStakingRewards.stake",
      "offset": [
        7849,
        7865
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3160": {
      "offset": [
        7849,
        7856
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xC"
    },
    "3162": {
      "offset": [
        7849,
        7865
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "3164": {
      "fn": "MockStakingRewards.stake",
      "offset": [
        7849,
        7865
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3165": {
      "fn": "MockStakingRewards.stake",
      "offset": [
        7849,
        7865
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3166": {
      "fn": "MockStakingRewards.stake",
      "offset": [
        7849,
        7865
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3167": {
      "fn": "MockStakingRewards.stake",
      "offset": [
        7849,
        7865
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "3169": {
      "fn": "MockStakingRewards.stake",
      "offset": [
        7849,
        7865
      ],
      "op": "DUP1",
      "path": "7"
    },
    "3170": {
      "fn": "MockStakingRewards.stake",
      "offset": [
        7849,
        7865
      ],
      "op": "DUP4",
      "path": "7"
    },
    "3171": {
      "fn": "MockStakingRewards.stake",
      "offset": [
        7849,
        7865
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "3172": {
      "offset": [
        7849,
        7883
      ],
      "op": "SWAP4",
      "path": "7"
    },
    "3173": {
      "fn": "MockStakingRewards.stake",
      "offset": [
        7849,
        7883
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3174": {
      "fn": "MockStakingRewards.stake",
      "offset": [
        7849,
        7883
      ],
      "op": "SWAP4",
      "path": "7"
    },
    "3175": {
      "fn": "MockStakingRewards.stake",
      "offset": [
        7849,
        7883
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "3176": {
      "offset": [
        7931,
        7951
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xA"
    },
    "3178": {
      "fn": "MockStakingRewards.stake",
      "offset": [
        7931,
        7951
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "3179": {
      "offset": [
        7897,
        7919
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xB"
    },
    "3181": {
      "offset": [
        7897,
        7928
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3182": {
      "fn": "MockStakingRewards.stake",
      "offset": [
        7897,
        7928
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "3183": {
      "fn": "MockStakingRewards.stake",
      "offset": [
        7897,
        7928
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3184": {
      "fn": "MockStakingRewards.stake",
      "offset": [
        7897,
        7928
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "3185": {
      "fn": "MockStakingRewards.stake",
      "offset": [
        7897,
        7928
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3186": {
      "fn": "MockStakingRewards.stake",
      "offset": [
        7897,
        7928
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "3187": {
      "offset": [
        7897,
        7951
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "3188": {
      "offset": [
        7808,
        7962
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3189": {
      "fn": "MockStakingRewards.stake",
      "offset": [
        4487,
        4488
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 30,
      "value": "0x0"
    },
    "3191": {
      "fn": "MockStakingRewards.stake",
      "offset": [
        4478,
        4484
      ],
      "op": "DUP3",
      "path": "7"
    },
    "3192": {
      "branch": 64,
      "fn": "MockStakingRewards.stake",
      "offset": [
        4478,
        4488
      ],
      "op": "GT",
      "path": "7"
    },
    "3193": {
      "fn": "MockStakingRewards.stake",
      "offset": [
        4470,
        4507
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xCB5"
    },
    "3196": {
      "branch": 64,
      "fn": "MockStakingRewards.stake",
      "offset": [
        4470,
        4507
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "3197": {
      "fn": "MockStakingRewards.stake",
      "offset": [
        4470,
        4507
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "3199": {
      "fn": "MockStakingRewards.stake",
      "offset": [
        4470,
        4507
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "3200": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3204": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3206": {
      "op": "SHL"
    },
    "3207": {
      "fn": "MockStakingRewards.stake",
      "offset": [
        4470,
        4507
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3208": {
      "fn": "MockStakingRewards.stake",
      "offset": [
        4470,
        4507
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3209": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3211": {
      "fn": "MockStakingRewards.stake",
      "offset": [
        4470,
        4507
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "3213": {
      "fn": "MockStakingRewards.stake",
      "offset": [
        4470,
        4507
      ],
      "op": "DUP3",
      "path": "7"
    },
    "3214": {
      "fn": "MockStakingRewards.stake",
      "offset": [
        4470,
        4507
      ],
      "op": "ADD",
      "path": "7"
    },
    "3215": {
      "op": "MSTORE"
    },
    "3216": {
      "op": "PUSH1",
      "value": "0xE"
    },
    "3218": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3220": {
      "op": "DUP3"
    },
    "3221": {
      "op": "ADD"
    },
    "3222": {
      "op": "MSTORE"
    },
    "3223": {
      "op": "PUSH14",
      "value": "0x43616E6E6F74207374616B65203"
    },
    "3238": {
      "op": "PUSH1",
      "value": "0x94"
    },
    "3240": {
      "op": "SHL"
    },
    "3241": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3243": {
      "op": "DUP3"
    },
    "3244": {
      "op": "ADD"
    },
    "3245": {
      "op": "MSTORE"
    },
    "3246": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3248": {
      "op": "ADD"
    },
    "3249": {
      "fn": "MockStakingRewards.stake",
      "offset": [
        4470,
        4507
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x51E"
    },
    "3252": {
      "op": "JUMP"
    },
    "3253": {
      "fn": "MockStakingRewards.stake",
      "offset": [
        4470,
        4507
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3254": {
      "fn": "MockStakingRewards.stake",
      "offset": [
        4532,
        4544
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 31,
      "value": "0xD"
    },
    "3256": {
      "fn": "MockStakingRewards.stake",
      "offset": [
        4532,
        4544
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "3257": {
      "fn": "MockStakingRewards.stake",
      "offset": [
        4532,
        4556
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xCC2"
    },
    "3260": {
      "fn": "MockStakingRewards.stake",
      "offset": [
        4532,
        4556
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3261": {
      "fn": "MockStakingRewards.stake",
      "offset": [
        4549,
        4555
      ],
      "op": "DUP4",
      "path": "7"
    },
    "3262": {
      "fn": "MockStakingRewards.stake",
      "offset": [
        4532,
        4548
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xEB2"
    },
    "3265": {
      "fn": "MockStakingRewards.stake",
      "jump": "i",
      "offset": [
        4532,
        4556
      ],
      "op": "JUMP",
      "path": "7"
    },
    "3266": {
      "fn": "MockStakingRewards.stake",
      "offset": [
        4532,
        4556
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3267": {
      "fn": "MockStakingRewards.stake",
      "offset": [
        4517,
        4529
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xD"
    },
    "3269": {
      "fn": "MockStakingRewards.stake",
      "offset": [
        4517,
        4556
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "3270": {
      "fn": "MockStakingRewards.stake",
      "offset": [
        4600,
        4610
      ],
      "op": "CALLER",
      "path": "7",
      "statement": 32
    },
    "3271": {
      "fn": "MockStakingRewards.stake",
      "offset": [
        4590,
        4611
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "3273": {
      "fn": "MockStakingRewards.stake",
      "offset": [
        4590,
        4611
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3274": {
      "fn": "MockStakingRewards.stake",
      "offset": [
        4590,
        4611
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3275": {
      "fn": "MockStakingRewards.stake",
      "offset": [
        4590,
        4611
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3276": {
      "fn": "MockStakingRewards.stake",
      "offset": [
        4590,
        4599
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xE"
    },
    "3278": {
      "fn": "MockStakingRewards.stake",
      "offset": [
        4590,
        4611
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "3280": {
      "fn": "MockStakingRewards.stake",
      "offset": [
        4590,
        4611
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3281": {
      "fn": "MockStakingRewards.stake",
      "offset": [
        4590,
        4611
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "3283": {
      "fn": "MockStakingRewards.stake",
      "offset": [
        4590,
        4611
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3284": {
      "fn": "MockStakingRewards.stake",
      "offset": [
        4590,
        4611
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "3285": {
      "fn": "MockStakingRewards.stake",
      "offset": [
        4590,
        4611
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "3286": {
      "fn": "MockStakingRewards.stake",
      "offset": [
        4590,
        4623
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xCDF"
    },
    "3289": {
      "fn": "MockStakingRewards.stake",
      "offset": [
        4590,
        4623
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3290": {
      "fn": "MockStakingRewards.stake",
      "offset": [
        4616,
        4622
      ],
      "op": "DUP4",
      "path": "7"
    },
    "3291": {
      "fn": "MockStakingRewards.stake",
      "offset": [
        4590,
        4615
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xEB2"
    },
    "3294": {
      "fn": "MockStakingRewards.stake",
      "jump": "i",
      "offset": [
        4590,
        4623
      ],
      "op": "JUMP",
      "path": "7"
    },
    "3295": {
      "fn": "MockStakingRewards.stake",
      "offset": [
        4590,
        4623
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3296": {
      "fn": "MockStakingRewards.stake",
      "offset": [
        4576,
        4586
      ],
      "op": "CALLER",
      "path": "7"
    },
    "3297": {
      "fn": "MockStakingRewards.stake",
      "offset": [
        4566,
        4587
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "3299": {
      "fn": "MockStakingRewards.stake",
      "offset": [
        4566,
        4587
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3300": {
      "fn": "MockStakingRewards.stake",
      "offset": [
        4566,
        4587
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3301": {
      "fn": "MockStakingRewards.stake",
      "offset": [
        4566,
        4587
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3302": {
      "fn": "MockStakingRewards.stake",
      "offset": [
        4566,
        4575
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xE"
    },
    "3304": {
      "fn": "MockStakingRewards.stake",
      "offset": [
        4566,
        4587
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "3306": {
      "fn": "MockStakingRewards.stake",
      "offset": [
        4566,
        4587
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3307": {
      "fn": "MockStakingRewards.stake",
      "offset": [
        4566,
        4587
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "3309": {
      "fn": "MockStakingRewards.stake",
      "offset": [
        4566,
        4587
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3310": {
      "fn": "MockStakingRewards.stake",
      "offset": [
        4566,
        4587
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "3311": {
      "fn": "MockStakingRewards.stake",
      "offset": [
        4566,
        4623
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "3312": {
      "fn": "MockStakingRewards.stake",
      "offset": [
        4566,
        4623
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3313": {
      "fn": "MockStakingRewards.stake",
      "offset": [
        4566,
        4623
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "3314": {
      "fn": "MockStakingRewards.stake",
      "offset": [
        4566,
        4623
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "3315": {
      "fn": "MockStakingRewards.stake",
      "offset": [
        4633,
        4645
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 33,
      "value": "0x5"
    },
    "3317": {
      "fn": "MockStakingRewards.stake",
      "offset": [
        4633,
        4645
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "3318": {
      "fn": "MockStakingRewards.stake",
      "offset": [
        4633,
        4697
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xD0C"
    },
    "3321": {
      "fn": "MockStakingRewards.stake",
      "offset": [
        4633,
        4697
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "3322": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3324": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3326": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3328": {
      "op": "SHL"
    },
    "3329": {
      "op": "SUB"
    },
    "3330": {
      "fn": "MockStakingRewards.stake",
      "offset": [
        4633,
        4645
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3331": {
      "fn": "MockStakingRewards.stake",
      "offset": [
        4633,
        4645
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "3332": {
      "fn": "MockStakingRewards.stake",
      "offset": [
        4633,
        4645
      ],
      "op": "AND",
      "path": "7"
    },
    "3333": {
      "fn": "MockStakingRewards.stake",
      "offset": [
        4633,
        4645
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3334": {
      "fn": "MockStakingRewards.stake",
      "offset": [
        4683,
        4687
      ],
      "op": "ADDRESS",
      "path": "7"
    },
    "3335": {
      "fn": "MockStakingRewards.stake",
      "offset": [
        4690,
        4696
      ],
      "op": "DUP6",
      "path": "7"
    },
    "3336": {
      "fn": "MockStakingRewards.stake",
      "offset": [
        4633,
        4662
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xFAE"
    },
    "3339": {
      "fn": "MockStakingRewards.stake",
      "jump": "i",
      "offset": [
        4633,
        4697
      ],
      "op": "JUMP",
      "path": "7"
    },
    "3340": {
      "fn": "MockStakingRewards.stake",
      "offset": [
        4633,
        4697
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3341": {
      "fn": "MockStakingRewards.stake",
      "offset": [
        4712,
        4738
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 34,
      "value": "0x40"
    },
    "3343": {
      "fn": "MockStakingRewards.stake",
      "offset": [
        4712,
        4738
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "3344": {
      "op": "DUP3"
    },
    "3345": {
      "op": "DUP2"
    },
    "3346": {
      "op": "MSTORE"
    },
    "3347": {
      "fn": "MockStakingRewards.stake",
      "offset": [
        4719,
        4729
      ],
      "op": "CALLER",
      "path": "7"
    },
    "3348": {
      "fn": "MockStakingRewards.stake",
      "offset": [
        4719,
        4729
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3349": {
      "fn": "MockStakingRewards.stake",
      "offset": [
        4712,
        4738
      ],
      "op": "PUSH32",
      "path": "7",
      "value": "0x9E71BC8EEA02A63969F509818F2DAFB9254532904319F9DBDA79B67BD34A5F3D"
    },
    "3382": {
      "fn": "MockStakingRewards.stake",
      "offset": [
        4712,
        4738
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3383": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3385": {
      "op": "ADD"
    },
    "3386": {
      "fn": "MockStakingRewards.stake",
      "offset": [
        4712,
        4738
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x64F"
    },
    "3389": {
      "op": "JUMP"
    },
    "3390": {
      "fn": "MockStakingRewards.setRewardsDuration",
      "offset": [
        7255,
        7608
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3391": {
      "offset": [
        1238,
        1250
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xD46"
    },
    "3394": {
      "offset": [
        1238,
        1248
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xEBE"
    },
    "3397": {
      "jump": "i",
      "offset": [
        1238,
        1250
      ],
      "op": "JUMP",
      "path": "7"
    },
    "3398": {
      "fn": "MockStakingRewards.setRewardsDuration",
      "offset": [
        1238,
        1250
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3399": {
      "fn": "MockStakingRewards.setRewardsDuration",
      "offset": [
        7377,
        7389
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 35,
      "value": "0x6"
    },
    "3401": {
      "fn": "MockStakingRewards.setRewardsDuration",
      "offset": [
        7377,
        7389
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "3402": {
      "fn": "MockStakingRewards.setRewardsDuration",
      "offset": [
        7359,
        7374
      ],
      "op": "TIMESTAMP",
      "path": "7"
    },
    "3403": {
      "branch": 65,
      "fn": "MockStakingRewards.setRewardsDuration",
      "offset": [
        7359,
        7389
      ],
      "op": "GT",
      "path": "7"
    },
    "3404": {
      "fn": "MockStakingRewards.setRewardsDuration",
      "offset": [
        7338,
        7503
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xDE3"
    },
    "3407": {
      "branch": 65,
      "fn": "MockStakingRewards.setRewardsDuration",
      "offset": [
        7338,
        7503
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "3408": {
      "fn": "MockStakingRewards.setRewardsDuration",
      "offset": [
        7338,
        7503
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "3410": {
      "fn": "MockStakingRewards.setRewardsDuration",
      "offset": [
        7338,
        7503
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "3411": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3415": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3417": {
      "op": "SHL"
    },
    "3418": {
      "fn": "MockStakingRewards.setRewardsDuration",
      "offset": [
        7338,
        7503
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3419": {
      "fn": "MockStakingRewards.setRewardsDuration",
      "offset": [
        7338,
        7503
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3420": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3422": {
      "fn": "MockStakingRewards.setRewardsDuration",
      "offset": [
        7338,
        7503
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "3424": {
      "fn": "MockStakingRewards.setRewardsDuration",
      "offset": [
        7338,
        7503
      ],
      "op": "DUP3",
      "path": "7"
    },
    "3425": {
      "fn": "MockStakingRewards.setRewardsDuration",
      "offset": [
        7338,
        7503
      ],
      "op": "ADD",
      "path": "7"
    },
    "3426": {
      "op": "MSTORE"
    },
    "3427": {
      "op": "PUSH1",
      "value": "0x58"
    },
    "3429": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3431": {
      "op": "DUP3"
    },
    "3432": {
      "op": "ADD"
    },
    "3433": {
      "op": "MSTORE"
    },
    "3434": {
      "op": "PUSH32",
      "value": "0x50726576696F7573207265776172647320706572696F64206D75737420626520"
    },
    "3467": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3469": {
      "op": "DUP3"
    },
    "3470": {
      "op": "ADD"
    },
    "3471": {
      "op": "MSTORE"
    },
    "3472": {
      "op": "PUSH32",
      "value": "0x636F6D706C657465206265666F7265206368616E67696E672074686520647572"
    },
    "3505": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3507": {
      "op": "DUP3"
    },
    "3508": {
      "op": "ADD"
    },
    "3509": {
      "op": "MSTORE"
    },
    "3510": {
      "op": "PUSH32",
      "value": "0x6174696F6E20666F7220746865206E657720706572696F640000000000000000"
    },
    "3543": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3545": {
      "op": "DUP3"
    },
    "3546": {
      "op": "ADD"
    },
    "3547": {
      "op": "MSTORE"
    },
    "3548": {
      "op": "PUSH1",
      "value": "0xA4"
    },
    "3550": {
      "op": "ADD"
    },
    "3551": {
      "fn": "MockStakingRewards.setRewardsDuration",
      "offset": [
        7338,
        7503
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x51E"
    },
    "3554": {
      "op": "JUMP"
    },
    "3555": {
      "fn": "MockStakingRewards.setRewardsDuration",
      "offset": [
        7338,
        7503
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3556": {
      "fn": "MockStakingRewards.setRewardsDuration",
      "offset": [
        7513,
        7528
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 36,
      "value": "0x8"
    },
    "3558": {
      "fn": "MockStakingRewards.setRewardsDuration",
      "offset": [
        7513,
        7547
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3559": {
      "fn": "MockStakingRewards.setRewardsDuration",
      "offset": [
        7513,
        7547
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3560": {
      "fn": "MockStakingRewards.setRewardsDuration",
      "offset": [
        7513,
        7547
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "3561": {
      "fn": "MockStakingRewards.setRewardsDuration",
      "offset": [
        7562,
        7601
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 37,
      "value": "0x40"
    },
    "3563": {
      "fn": "MockStakingRewards.setRewardsDuration",
      "offset": [
        7562,
        7601
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "3564": {
      "op": "DUP2"
    },
    "3565": {
      "op": "DUP2"
    },
    "3566": {
      "op": "MSTORE"
    },
    "3567": {
      "fn": "MockStakingRewards.setRewardsDuration",
      "offset": [
        7562,
        7601
      ],
      "op": "PUSH32",
      "path": "7",
      "value": "0xFB46CA5A5E06D4540D6387B930A7C978BCE0DB5F449EC6B3F5D07C6E1D44F2D3"
    },
    "3600": {
      "fn": "MockStakingRewards.setRewardsDuration",
      "offset": [
        7562,
        7601
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3601": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3603": {
      "op": "ADD"
    },
    "3604": {
      "fn": "MockStakingRewards.setRewardsDuration",
      "offset": [
        7562,
        7601
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x4A8"
    },
    "3607": {
      "op": "JUMP"
    },
    "3608": {
      "fn": "MockStakingRewards.rewardPerToken",
      "offset": [
        3609,
        3940
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3609": {
      "fn": "MockStakingRewards.rewardPerToken",
      "offset": [
        3665,
        3672
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "3611": {
      "fn": "MockStakingRewards.rewardPerToken",
      "offset": [
        3688,
        3700
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xD"
    },
    "3613": {
      "fn": "MockStakingRewards.rewardPerToken",
      "offset": [
        3688,
        3700
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "3614": {
      "fn": "MockStakingRewards.rewardPerToken",
      "offset": [
        3704,
        3705
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "3616": {
      "branch": 66,
      "fn": "MockStakingRewards.rewardPerToken",
      "offset": [
        3688,
        3705
      ],
      "op": "EQ",
      "path": "7"
    },
    "3617": {
      "fn": "MockStakingRewards.rewardPerToken",
      "offset": [
        3684,
        3759
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "3618": {
      "fn": "MockStakingRewards.rewardPerToken",
      "offset": [
        3684,
        3759
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xE2C"
    },
    "3621": {
      "branch": 66,
      "fn": "MockStakingRewards.rewardPerToken",
      "offset": [
        3684,
        3759
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "3622": {
      "op": "POP"
    },
    "3623": {
      "fn": "MockStakingRewards.rewardPerToken",
      "offset": [
        3728,
        3748
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 38,
      "value": "0xA"
    },
    "3625": {
      "fn": "MockStakingRewards.rewardPerToken",
      "offset": [
        3728,
        3748
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "3626": {
      "fn": "MockStakingRewards.rewardPerToken",
      "offset": [
        3728,
        3748
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3627": {
      "fn": "MockStakingRewards.rewardPerToken",
      "jump": "o",
      "offset": [
        3609,
        3940
      ],
      "op": "JUMP",
      "path": "7"
    },
    "3628": {
      "fn": "MockStakingRewards.rewardPerToken",
      "offset": [
        3684,
        3759
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3629": {
      "fn": "MockStakingRewards.rewardPerToken",
      "offset": [
        3787,
        3933
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 39,
      "value": "0x4F6"
    },
    "3632": {
      "fn": "MockStakingRewards.rewardPerToken",
      "offset": [
        3829,
        3919
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xE5B"
    },
    "3635": {
      "fn": "MockStakingRewards.rewardPerToken",
      "offset": [
        3906,
        3918
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xD"
    },
    "3637": {
      "fn": "MockStakingRewards.rewardPerToken",
      "offset": [
        3906,
        3918
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "3638": {
      "fn": "MockStakingRewards.rewardPerToken",
      "offset": [
        3829,
        3901
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x444"
    },
    "3641": {
      "fn": "MockStakingRewards.rewardPerToken",
      "offset": [
        3896,
        3900
      ],
      "op": "PUSH8",
      "path": "7",
      "value": "0xDE0B6B3A7640000"
    },
    "3650": {
      "fn": "MockStakingRewards.rewardPerToken",
      "offset": [
        3829,
        3891
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xE55"
    },
    "3653": {
      "fn": "MockStakingRewards.rewardPerToken",
      "offset": [
        3880,
        3890
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x7"
    },
    "3655": {
      "fn": "MockStakingRewards.rewardPerToken",
      "offset": [
        3880,
        3890
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "3656": {
      "fn": "MockStakingRewards.rewardPerToken",
      "offset": [
        3829,
        3875
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xE55"
    },
    "3659": {
      "fn": "MockStakingRewards.rewardPerToken",
      "offset": [
        3860,
        3874
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x9"
    },
    "3661": {
      "fn": "MockStakingRewards.rewardPerToken",
      "offset": [
        3860,
        3874
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "3662": {
      "fn": "MockStakingRewards.rewardPerToken",
      "offset": [
        3829,
        3855
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x41F"
    },
    "3665": {
      "fn": "MockStakingRewards.rewardPerToken",
      "offset": [
        3829,
        3853
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xB13"
    },
    "3668": {
      "fn": "MockStakingRewards.rewardPerToken",
      "jump": "i",
      "offset": [
        3829,
        3855
      ],
      "op": "JUMP",
      "path": "7"
    },
    "3669": {
      "fn": "MockStakingRewards.rewardPerToken",
      "offset": [
        3829,
        3875
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3670": {
      "fn": "MockStakingRewards.rewardPerToken",
      "offset": [
        3829,
        3879
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3671": {
      "fn": "MockStakingRewards.rewardPerToken",
      "offset": [
        3829,
        3879
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xE9A"
    },
    "3674": {
      "fn": "MockStakingRewards.rewardPerToken",
      "jump": "i",
      "offset": [
        3829,
        3891
      ],
      "op": "JUMP",
      "path": "7"
    },
    "3675": {
      "fn": "MockStakingRewards.rewardPerToken",
      "offset": [
        3829,
        3919
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3676": {
      "fn": "MockStakingRewards.rewardPerToken",
      "offset": [
        3787,
        3807
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xA"
    },
    "3678": {
      "fn": "MockStakingRewards.rewardPerToken",
      "offset": [
        3787,
        3807
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "3679": {
      "fn": "MockStakingRewards.rewardPerToken",
      "offset": [
        3787,
        3807
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3680": {
      "fn": "MockStakingRewards.rewardPerToken",
      "offset": [
        3787,
        3811
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xEB2"
    },
    "3683": {
      "fn": "MockStakingRewards.rewardPerToken",
      "jump": "i",
      "offset": [
        3787,
        3933
      ],
      "op": "JUMP",
      "path": "7"
    },
    "3684": {
      "fn": "MockStakingRewards.exit",
      "offset": [
        5432,
        5535
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3685": {
      "fn": "MockStakingRewards.exit",
      "offset": [
        5495,
        5505
      ],
      "op": "CALLER",
      "path": "7",
      "statement": 40
    },
    "3686": {
      "fn": "MockStakingRewards.exit",
      "offset": [
        5485,
        5506
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "3688": {
      "fn": "MockStakingRewards.exit",
      "offset": [
        5485,
        5506
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3689": {
      "fn": "MockStakingRewards.exit",
      "offset": [
        5485,
        5506
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3690": {
      "fn": "MockStakingRewards.exit",
      "offset": [
        5485,
        5506
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3691": {
      "fn": "MockStakingRewards.exit",
      "offset": [
        5485,
        5494
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xE"
    },
    "3693": {
      "fn": "MockStakingRewards.exit",
      "offset": [
        5485,
        5506
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "3695": {
      "fn": "MockStakingRewards.exit",
      "offset": [
        5485,
        5506
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3696": {
      "fn": "MockStakingRewards.exit",
      "offset": [
        5485,
        5506
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "3698": {
      "fn": "MockStakingRewards.exit",
      "offset": [
        5485,
        5506
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3699": {
      "fn": "MockStakingRewards.exit",
      "offset": [
        5485,
        5506
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "3700": {
      "fn": "MockStakingRewards.exit",
      "offset": [
        5485,
        5506
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "3701": {
      "fn": "MockStakingRewards.exit",
      "offset": [
        5476,
        5507
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xE7D"
    },
    "3704": {
      "fn": "MockStakingRewards.exit",
      "offset": [
        5476,
        5507
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3705": {
      "fn": "MockStakingRewards.exit",
      "offset": [
        5476,
        5484
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x4FB"
    },
    "3708": {
      "fn": "MockStakingRewards.exit",
      "jump": "i",
      "offset": [
        5476,
        5507
      ],
      "op": "JUMP",
      "path": "7"
    },
    "3709": {
      "fn": "MockStakingRewards.exit",
      "offset": [
        5476,
        5507
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3710": {
      "fn": "MockStakingRewards.exit",
      "offset": [
        5517,
        5528
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 41,
      "value": "0xE85"
    },
    "3713": {
      "fn": "MockStakingRewards.exit",
      "offset": [
        5517,
        5526
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x8C2"
    },
    "3716": {
      "fn": "MockStakingRewards.exit",
      "jump": "i",
      "offset": [
        5517,
        5528
      ],
      "op": "JUMP",
      "path": "7"
    },
    "3717": {
      "fn": "MockStakingRewards.exit",
      "offset": [
        5517,
        5528
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3718": {
      "fn": "MockStakingRewards.exit",
      "jump": "o",
      "offset": [
        5432,
        5535
      ],
      "op": "JUMP",
      "path": "7"
    },
    "3719": {
      "fn": "SafeMath.sub",
      "offset": [
        3039,
        3135
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3720": {
      "fn": "SafeMath.sub",
      "offset": [
        3097,
        3104
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "3722": {
      "fn": "SafeMath.sub",
      "offset": [
        3123,
        3128
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 42,
      "value": "0xE93"
    },
    "3725": {
      "fn": "SafeMath.sub",
      "offset": [
        3127,
        3128
      ],
      "op": "DUP3",
      "path": "5"
    },
    "3726": {
      "fn": "SafeMath.sub",
      "offset": [
        3123,
        3124
      ],
      "op": "DUP5",
      "path": "5"
    },
    "3727": {
      "fn": "SafeMath.sub",
      "offset": [
        3123,
        3128
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x13CA"
    },
    "3730": {
      "fn": "SafeMath.sub",
      "jump": "i",
      "offset": [
        3123,
        3128
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3731": {
      "fn": "SafeMath.sub",
      "offset": [
        3123,
        3128
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3732": {
      "fn": "SafeMath.sub",
      "offset": [
        3116,
        3128
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "3733": {
      "fn": "SafeMath.sub",
      "offset": [
        3039,
        3135
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "3734": {
      "op": "POP"
    },
    "3735": {
      "op": "POP"
    },
    "3736": {
      "op": "POP"
    },
    "3737": {
      "fn": "SafeMath.sub",
      "jump": "o",
      "offset": [
        3039,
        3135
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3738": {
      "fn": "SafeMath.mul",
      "offset": [
        3382,
        3478
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3739": {
      "fn": "SafeMath.mul",
      "offset": [
        3440,
        3447
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "3741": {
      "fn": "SafeMath.mul",
      "offset": [
        3466,
        3471
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 43,
      "value": "0xE93"
    },
    "3744": {
      "fn": "SafeMath.mul",
      "offset": [
        3470,
        3471
      ],
      "op": "DUP3",
      "path": "5"
    },
    "3745": {
      "fn": "SafeMath.mul",
      "offset": [
        3466,
        3467
      ],
      "op": "DUP5",
      "path": "5"
    },
    "3746": {
      "fn": "SafeMath.mul",
      "offset": [
        3466,
        3471
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x13AB"
    },
    "3749": {
      "fn": "SafeMath.mul",
      "jump": "i",
      "offset": [
        3466,
        3471
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3750": {
      "fn": "SafeMath.div",
      "offset": [
        3767,
        3863
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3751": {
      "fn": "SafeMath.div",
      "offset": [
        3825,
        3832
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "3753": {
      "fn": "SafeMath.div",
      "offset": [
        3851,
        3856
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 44,
      "value": "0xE93"
    },
    "3756": {
      "fn": "SafeMath.div",
      "offset": [
        3855,
        3856
      ],
      "op": "DUP3",
      "path": "5"
    },
    "3757": {
      "fn": "SafeMath.div",
      "offset": [
        3851,
        3852
      ],
      "op": "DUP5",
      "path": "5"
    },
    "3758": {
      "fn": "SafeMath.div",
      "offset": [
        3851,
        3856
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1389"
    },
    "3761": {
      "fn": "SafeMath.div",
      "jump": "i",
      "offset": [
        3851,
        3856
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3762": {
      "fn": "SafeMath.add",
      "offset": [
        2672,
        2768
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3763": {
      "fn": "SafeMath.add",
      "offset": [
        2730,
        2737
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "3765": {
      "fn": "SafeMath.add",
      "offset": [
        2756,
        2761
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 45,
      "value": "0xE93"
    },
    "3768": {
      "fn": "SafeMath.add",
      "offset": [
        2760,
        2761
      ],
      "op": "DUP3",
      "path": "5"
    },
    "3769": {
      "fn": "SafeMath.add",
      "offset": [
        2756,
        2757
      ],
      "op": "DUP5",
      "path": "5"
    },
    "3770": {
      "fn": "SafeMath.add",
      "offset": [
        2756,
        2761
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1371"
    },
    "3773": {
      "fn": "SafeMath.add",
      "jump": "i",
      "offset": [
        2756,
        2761
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3774": {
      "fn": "Owned._onlyOwner",
      "offset": [
        1274,
        1405
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3775": {
      "fn": "Owned._onlyOwner",
      "offset": [
        1341,
        1346
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 46,
      "value": "0x0"
    },
    "3777": {
      "fn": "Owned._onlyOwner",
      "offset": [
        1341,
        1346
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "3778": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3780": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3782": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3784": {
      "op": "SHL"
    },
    "3785": {
      "op": "SUB"
    },
    "3786": {
      "fn": "Owned._onlyOwner",
      "offset": [
        1341,
        1346
      ],
      "op": "AND",
      "path": "7"
    },
    "3787": {
      "fn": "Owned._onlyOwner",
      "offset": [
        1327,
        1337
      ],
      "op": "CALLER",
      "path": "7"
    },
    "3788": {
      "branch": 67,
      "fn": "Owned._onlyOwner",
      "offset": [
        1327,
        1346
      ],
      "op": "EQ",
      "path": "7"
    },
    "3789": {
      "fn": "Owned._onlyOwner",
      "offset": [
        1319,
        1398
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xE85"
    },
    "3792": {
      "branch": 67,
      "fn": "Owned._onlyOwner",
      "offset": [
        1319,
        1398
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "3793": {
      "fn": "Owned._onlyOwner",
      "offset": [
        1319,
        1398
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "3795": {
      "fn": "Owned._onlyOwner",
      "offset": [
        1319,
        1398
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "3796": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3800": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3802": {
      "op": "SHL"
    },
    "3803": {
      "fn": "Owned._onlyOwner",
      "offset": [
        1319,
        1398
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3804": {
      "fn": "Owned._onlyOwner",
      "offset": [
        1319,
        1398
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3805": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3807": {
      "fn": "Owned._onlyOwner",
      "offset": [
        1319,
        1398
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "3809": {
      "fn": "Owned._onlyOwner",
      "offset": [
        1319,
        1398
      ],
      "op": "DUP3",
      "path": "7"
    },
    "3810": {
      "fn": "Owned._onlyOwner",
      "offset": [
        1319,
        1398
      ],
      "op": "ADD",
      "path": "7"
    },
    "3811": {
      "op": "MSTORE"
    },
    "3812": {
      "op": "PUSH1",
      "value": "0x2F"
    },
    "3814": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3816": {
      "op": "DUP3"
    },
    "3817": {
      "op": "ADD"
    },
    "3818": {
      "op": "MSTORE"
    },
    "3819": {
      "op": "PUSH32",
      "value": "0x4F6E6C792074686520636F6E7472616374206F776E6572206D61792070657266"
    },
    "3852": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3854": {
      "op": "DUP3"
    },
    "3855": {
      "op": "ADD"
    },
    "3856": {
      "op": "MSTORE"
    },
    "3857": {
      "op": "PUSH15",
      "value": "0x37B936903A3434B99030B1BA34B7B7"
    },
    "3873": {
      "op": "PUSH1",
      "value": "0x89"
    },
    "3875": {
      "op": "SHL"
    },
    "3876": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3878": {
      "op": "DUP3"
    },
    "3879": {
      "op": "ADD"
    },
    "3880": {
      "op": "MSTORE"
    },
    "3881": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3883": {
      "op": "ADD"
    },
    "3884": {
      "fn": "Owned._onlyOwner",
      "offset": [
        1319,
        1398
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x51E"
    },
    "3887": {
      "op": "JUMP"
    },
    "3888": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        634,
        809
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3889": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        743,
        801
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 47,
      "value": "0x40"
    },
    "3891": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        743,
        801
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3892": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3894": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3896": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3898": {
      "op": "SHL"
    },
    "3899": {
      "op": "SUB"
    },
    "3900": {
      "op": "DUP4"
    },
    "3901": {
      "op": "AND"
    },
    "3902": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        743,
        801
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x24"
    },
    "3904": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        743,
        801
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3905": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        743,
        801
      ],
      "op": "ADD",
      "path": "2"
    },
    "3906": {
      "op": "MSTORE"
    },
    "3907": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3909": {
      "op": "DUP2"
    },
    "3910": {
      "op": "ADD"
    },
    "3911": {
      "op": "DUP3"
    },
    "3912": {
      "op": "SWAP1"
    },
    "3913": {
      "op": "MSTORE"
    },
    "3914": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        716,
        802
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xF93"
    },
    "3917": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        716,
        802
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3918": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        736,
        741
      ],
      "op": "DUP5",
      "path": "2"
    },
    "3919": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        736,
        741
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3920": {
      "op": "PUSH4",
      "value": "0xA9059CBB"
    },
    "3925": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3927": {
      "op": "SHL"
    },
    "3928": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        766,
        789
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3929": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3931": {
      "op": "ADD"
    },
    "3932": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        743,
        801
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3933": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        743,
        801
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3935": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        743,
        801
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3936": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        743,
        801
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3937": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3939": {
      "op": "NOT"
    },
    "3940": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        743,
        801
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3941": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        743,
        801
      ],
      "op": "DUP5",
      "path": "2"
    },
    "3942": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        743,
        801
      ],
      "op": "SUB",
      "path": "2"
    },
    "3943": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        743,
        801
      ],
      "op": "ADD",
      "path": "2"
    },
    "3944": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        743,
        801
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3945": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        743,
        801
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3946": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        743,
        801
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3947": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        743,
        801
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3948": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        743,
        801
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3949": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        743,
        801
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3951": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        743,
        801
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3952": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        743,
        801
      ],
      "op": "ADD",
      "path": "2"
    },
    "3953": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        743,
        801
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3954": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        743,
        801
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3955": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3957": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3959": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3961": {
      "op": "SHL"
    },
    "3962": {
      "op": "SUB"
    },
    "3963": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        743,
        801
      ],
      "op": "AND",
      "path": "2"
    },
    "3964": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3966": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3968": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3970": {
      "op": "SHL"
    },
    "3971": {
      "op": "SUB"
    },
    "3972": {
      "op": "NOT"
    },
    "3973": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        743,
        801
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3974": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        743,
        801
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "3975": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        743,
        801
      ],
      "op": "AND",
      "path": "2"
    },
    "3976": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        743,
        801
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "3977": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        743,
        801
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3978": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        743,
        801
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "3979": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        743,
        801
      ],
      "op": "OR",
      "path": "2"
    },
    "3980": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        743,
        801
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3981": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        743,
        801
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3982": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        743,
        801
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3983": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        716,
        735
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFEC"
    },
    "3986": {
      "fn": "SafeERC20.safeTransfer",
      "jump": "i",
      "offset": [
        716,
        802
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3987": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        716,
        802
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3988": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        634,
        809
      ],
      "op": "POP",
      "path": "2"
    },
    "3989": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        634,
        809
      ],
      "op": "POP",
      "path": "2"
    },
    "3990": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        634,
        809
      ],
      "op": "POP",
      "path": "2"
    },
    "3991": {
      "fn": "SafeERC20.safeTransfer",
      "jump": "o",
      "offset": [
        634,
        809
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3992": {
      "fn": "Math.min",
      "offset": [
        391,
        495
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "3993": {
      "fn": "Math.min",
      "offset": [
        449,
        456
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "3995": {
      "fn": "Math.min",
      "offset": [
        479,
        480
      ],
      "op": "DUP2",
      "path": "4",
      "statement": 48
    },
    "3996": {
      "fn": "Math.min",
      "offset": [
        475,
        476
      ],
      "op": "DUP4",
      "path": "4"
    },
    "3997": {
      "branch": 71,
      "fn": "Math.min",
      "offset": [
        475,
        480
      ],
      "op": "LT",
      "path": "4"
    },
    "3998": {
      "fn": "Math.min",
      "offset": [
        475,
        488
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xFA7"
    },
    "4001": {
      "branch": 71,
      "fn": "Math.min",
      "offset": [
        475,
        488
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "4002": {
      "fn": "Math.min",
      "offset": [
        487,
        488
      ],
      "op": "DUP2",
      "path": "4"
    },
    "4003": {
      "fn": "Math.min",
      "offset": [
        475,
        488
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xE93"
    },
    "4006": {
      "fn": "Math.min",
      "offset": [
        475,
        488
      ],
      "op": "JUMP",
      "path": "4"
    },
    "4007": {
      "fn": "Math.min",
      "offset": [
        475,
        488
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "4008": {
      "op": "POP"
    },
    "4009": {
      "fn": "Math.min",
      "offset": [
        483,
        484
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4010": {
      "fn": "Math.min",
      "offset": [
        483,
        484
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "4011": {
      "fn": "Math.min",
      "offset": [
        391,
        495
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4012": {
      "op": "POP"
    },
    "4013": {
      "fn": "Math.min",
      "jump": "o",
      "offset": [
        391,
        495
      ],
      "op": "JUMP",
      "path": "4"
    },
    "4014": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        815,
        1018
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4015": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        942,
        1010
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 49,
      "value": "0x40"
    },
    "4017": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        942,
        1010
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4018": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4020": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4022": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4024": {
      "op": "SHL"
    },
    "4025": {
      "op": "SUB"
    },
    "4026": {
      "op": "DUP1"
    },
    "4027": {
      "op": "DUP6"
    },
    "4028": {
      "op": "AND"
    },
    "4029": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        942,
        1010
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x24"
    },
    "4031": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        942,
        1010
      ],
      "op": "DUP4",
      "path": "2"
    },
    "4032": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        942,
        1010
      ],
      "op": "ADD",
      "path": "2"
    },
    "4033": {
      "op": "MSTORE"
    },
    "4034": {
      "op": "DUP4"
    },
    "4035": {
      "op": "AND"
    },
    "4036": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4038": {
      "op": "DUP3"
    },
    "4039": {
      "op": "ADD"
    },
    "4040": {
      "op": "MSTORE"
    },
    "4041": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4043": {
      "op": "DUP2"
    },
    "4044": {
      "op": "ADD"
    },
    "4045": {
      "op": "DUP3"
    },
    "4046": {
      "op": "SWAP1"
    },
    "4047": {
      "op": "MSTORE"
    },
    "4048": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        915,
        1011
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFE6"
    },
    "4051": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        915,
        1011
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4052": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        935,
        940
      ],
      "op": "DUP6",
      "path": "2"
    },
    "4053": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        935,
        940
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4054": {
      "op": "PUSH4",
      "value": "0x23B872DD"
    },
    "4059": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4061": {
      "op": "SHL"
    },
    "4062": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        965,
        992
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4063": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "4065": {
      "op": "ADD"
    },
    "4066": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        942,
        1010
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xF5C"
    },
    "4069": {
      "op": "JUMP"
    },
    "4070": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        915,
        1011
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4071": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        815,
        1018
      ],
      "op": "POP",
      "path": "2"
    },
    "4072": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        815,
        1018
      ],
      "op": "POP",
      "path": "2"
    },
    "4073": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        815,
        1018
      ],
      "op": "POP",
      "path": "2"
    },
    "4074": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        815,
        1018
      ],
      "op": "POP",
      "path": "2"
    },
    "4075": {
      "fn": "SafeERC20.safeTransferFrom",
      "jump": "o",
      "offset": [
        815,
        1018
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4076": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3022,
        3773
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4077": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3441,
        3464
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4079": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3467,
        3536
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1041"
    },
    "4082": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3495,
        3499
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4083": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3467,
        3536
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4085": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3467,
        3536
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4086": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3467,
        3536
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4087": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3467,
        3536
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4089": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3467,
        3536
      ],
      "op": "ADD",
      "path": "2"
    },
    "4090": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3467,
        3536
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4092": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3467,
        3536
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4093": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3467,
        3536
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4094": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3467,
        3536
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4096": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3467,
        3536
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4097": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3467,
        3536
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4098": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3467,
        3536
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4100": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3467,
        3536
      ],
      "op": "ADD",
      "path": "2"
    },
    "4101": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3467,
        3536
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564"
    },
    "4134": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3467,
        3536
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4135": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3467,
        3536
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4136": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3467,
        3536
      ],
      "op": "POP",
      "path": "2"
    },
    "4137": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3475,
        3480
      ],
      "op": "DUP6",
      "path": "2"
    },
    "4138": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4140": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4142": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4144": {
      "op": "SHL"
    },
    "4145": {
      "op": "SUB"
    },
    "4146": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3467,
        3494
      ],
      "op": "AND",
      "path": "2"
    },
    "4147": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3467,
        3494
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x10BE"
    },
    "4150": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3467,
        3494
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4151": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3467,
        3536
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "4152": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3467,
        3536
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4153": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3467,
        3536
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4154": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3467,
        3536
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xFFFFFFFF"
    },
    "4159": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3467,
        3536
      ],
      "op": "AND",
      "path": "2"
    },
    "4160": {
      "fn": "SafeERC20._callOptionalReturn",
      "jump": "i",
      "offset": [
        3467,
        3536
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4161": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3467,
        3536
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4162": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3550,
        3567
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4163": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3550,
        3567
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4164": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3441,
        3536
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4165": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3441,
        3536
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4166": {
      "op": "POP"
    },
    "4167": {
      "branch": 73,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3550,
        3571
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "4168": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3546,
        3767
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xF93"
    },
    "4171": {
      "branch": 73,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3546,
        3767
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4172": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3690,
        3700
      ],
      "op": "DUP1",
      "path": "2",
      "statement": 50
    },
    "4173": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3679,
        3709
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4174": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3679,
        3709
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4176": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3679,
        3709
      ],
      "op": "ADD",
      "path": "2"
    },
    "4177": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3679,
        3709
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4178": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3679,
        3709
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4179": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3679,
        3709
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4180": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3679,
        3709
      ],
      "op": "ADD",
      "path": "2"
    },
    "4181": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3679,
        3709
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4182": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3679,
        3709
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x105F"
    },
    "4185": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3679,
        3709
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4186": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3679,
        3709
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4187": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3679,
        3709
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1297"
    },
    "4190": {
      "fn": "SafeERC20._callOptionalReturn",
      "jump": "i",
      "offset": [
        3679,
        3709
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4191": {
      "branch": 74,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3679,
        3709
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4192": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3671,
        3756
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xF93"
    },
    "4195": {
      "branch": 74,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3671,
        3756
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4196": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3671,
        3756
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4198": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3671,
        3756
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4199": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4203": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4205": {
      "op": "SHL"
    },
    "4206": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3671,
        3756
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4207": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3671,
        3756
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4208": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4210": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3671,
        3756
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "4212": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3671,
        3756
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4213": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3671,
        3756
      ],
      "op": "ADD",
      "path": "2"
    },
    "4214": {
      "op": "MSTORE"
    },
    "4215": {
      "op": "PUSH1",
      "value": "0x2A"
    },
    "4217": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4219": {
      "op": "DUP3"
    },
    "4220": {
      "op": "ADD"
    },
    "4221": {
      "op": "MSTORE"
    },
    "4222": {
      "op": "PUSH32",
      "value": "0x5361666545524332303A204552433230206F7065726174696F6E20646964206E"
    },
    "4255": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4257": {
      "op": "DUP3"
    },
    "4258": {
      "op": "ADD"
    },
    "4259": {
      "op": "MSTORE"
    },
    "4260": {
      "op": "PUSH10",
      "value": "0x1BDD081CDD58D8D95959"
    },
    "4271": {
      "op": "PUSH1",
      "value": "0xB2"
    },
    "4273": {
      "op": "SHL"
    },
    "4274": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4276": {
      "op": "DUP3"
    },
    "4277": {
      "op": "ADD"
    },
    "4278": {
      "op": "MSTORE"
    },
    "4279": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "4281": {
      "op": "ADD"
    },
    "4282": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3671,
        3756
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x51E"
    },
    "4285": {
      "op": "JUMP"
    },
    "4286": {
      "fn": "Address.functionCall",
      "offset": [
        3573,
        3766
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4287": {
      "fn": "Address.functionCall",
      "offset": [
        3676,
        3688
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x60"
    },
    "4289": {
      "fn": "Address.functionCall",
      "offset": [
        3707,
        3759
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 51,
      "value": "0x10CD"
    },
    "4292": {
      "fn": "Address.functionCall",
      "offset": [
        3729,
        3735
      ],
      "op": "DUP5",
      "path": "3"
    },
    "4293": {
      "fn": "Address.functionCall",
      "offset": [
        3737,
        3741
      ],
      "op": "DUP5",
      "path": "3"
    },
    "4294": {
      "fn": "Address.functionCall",
      "offset": [
        3743,
        3744
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "4296": {
      "fn": "Address.functionCall",
      "offset": [
        3746,
        3758
      ],
      "op": "DUP6",
      "path": "3"
    },
    "4297": {
      "fn": "Address.functionCall",
      "offset": [
        3707,
        3728
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x10D5"
    },
    "4300": {
      "fn": "Address.functionCall",
      "jump": "i",
      "offset": [
        3707,
        3759
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4301": {
      "fn": "Address.functionCall",
      "offset": [
        3707,
        3759
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4302": {
      "fn": "Address.functionCall",
      "offset": [
        3700,
        3759
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "4303": {
      "fn": "Address.functionCall",
      "offset": [
        3573,
        3766
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "4304": {
      "op": "POP"
    },
    "4305": {
      "op": "POP"
    },
    "4306": {
      "op": "POP"
    },
    "4307": {
      "op": "POP"
    },
    "4308": {
      "fn": "Address.functionCall",
      "jump": "o",
      "offset": [
        3573,
        3766
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4309": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4600,
        5123
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4310": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4727,
        4739
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x60"
    },
    "4312": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4784,
        4789
      ],
      "op": "DUP3",
      "path": "3",
      "statement": 52
    },
    "4313": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4780
      ],
      "op": "SELFBALANCE",
      "path": "3"
    },
    "4314": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4789
      ],
      "op": "LT",
      "path": "3"
    },
    "4315": {
      "branch": 68,
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4789
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "4316": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4751,
        4832
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1136"
    },
    "4319": {
      "branch": 68,
      "fn": "Address.functionCallWithValue",
      "offset": [
        4751,
        4832
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "4320": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4751,
        4832
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4322": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4751,
        4832
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4323": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4327": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4329": {
      "op": "SHL"
    },
    "4330": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4751,
        4832
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4331": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4751,
        4832
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4332": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4334": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4751,
        4832
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "4336": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4751,
        4832
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4337": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4751,
        4832
      ],
      "op": "ADD",
      "path": "3"
    },
    "4338": {
      "op": "MSTORE"
    },
    "4339": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "4341": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4343": {
      "op": "DUP3"
    },
    "4344": {
      "op": "ADD"
    },
    "4345": {
      "op": "MSTORE"
    },
    "4346": {
      "op": "PUSH32",
      "value": "0x416464726573733A20696E73756666696369656E742062616C616E636520666F"
    },
    "4379": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4381": {
      "op": "DUP3"
    },
    "4382": {
      "op": "ADD"
    },
    "4383": {
      "op": "MSTORE"
    },
    "4384": {
      "op": "PUSH6",
      "value": "0x1C8818D85B1B"
    },
    "4391": {
      "op": "PUSH1",
      "value": "0xD2"
    },
    "4393": {
      "op": "SHL"
    },
    "4394": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4396": {
      "op": "DUP3"
    },
    "4397": {
      "op": "ADD"
    },
    "4398": {
      "op": "MSTORE"
    },
    "4399": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "4401": {
      "op": "ADD"
    },
    "4402": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4751,
        4832
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x51E"
    },
    "4405": {
      "op": "JUMP"
    },
    "4406": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4751,
        4832
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4407": {
      "fn": "Address.isContract",
      "offset": [
        1078,
        1098
      ],
      "op": "DUP5",
      "path": "3"
    },
    "4408": {
      "fn": "Address.isContract",
      "offset": [
        1078,
        1098
      ],
      "op": "EXTCODESIZE",
      "path": "3"
    },
    "4409": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4842,
        4902
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 53,
      "value": "0x1184"
    },
    "4412": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4842,
        4902
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "4413": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4842,
        4902
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4415": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4842,
        4902
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4416": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4420": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4422": {
      "op": "SHL"
    },
    "4423": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4842,
        4902
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4424": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4842,
        4902
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4425": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4427": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4842,
        4902
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "4429": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4842,
        4902
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4430": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4842,
        4902
      ],
      "op": "ADD",
      "path": "3"
    },
    "4431": {
      "op": "MSTORE"
    },
    "4432": {
      "op": "PUSH1",
      "value": "0x1D"
    },
    "4434": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4436": {
      "op": "DUP3"
    },
    "4437": {
      "op": "ADD"
    },
    "4438": {
      "op": "MSTORE"
    },
    "4439": {
      "op": "PUSH32",
      "value": "0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000"
    },
    "4472": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4474": {
      "op": "DUP3"
    },
    "4475": {
      "op": "ADD"
    },
    "4476": {
      "op": "MSTORE"
    },
    "4477": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4479": {
      "op": "ADD"
    },
    "4480": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4842,
        4902
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x51E"
    },
    "4483": {
      "op": "JUMP"
    },
    "4484": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4842,
        4902
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4485": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4973,
        4985
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "4487": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4987,
        5010
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4488": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5020
      ],
      "op": "DUP7",
      "path": "3"
    },
    "4489": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4491": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4493": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4495": {
      "op": "SHL"
    },
    "4496": {
      "op": "SUB"
    },
    "4497": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5025
      ],
      "op": "AND",
      "path": "3"
    },
    "4498": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5034,
        5039
      ],
      "op": "DUP6",
      "path": "3"
    },
    "4499": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5042,
        5046
      ],
      "op": "DUP8",
      "path": "3"
    },
    "4500": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4502": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4503": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x11A0"
    },
    "4506": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4507": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4508": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x12EB"
    },
    "4511": {
      "fn": "Address.functionCallWithValue",
      "jump": "i",
      "offset": [
        5014,
        5047
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4512": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4513": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "4515": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4517": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4518": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4519": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "DUP4",
      "path": "3"
    },
    "4520": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "SUB",
      "path": "3"
    },
    "4521": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4522": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "DUP6",
      "path": "3"
    },
    "4523": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "DUP8",
      "path": "3"
    },
    "4524": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "GAS",
      "path": "3"
    },
    "4525": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "CALL",
      "path": "3"
    },
    "4526": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "4527": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "POP",
      "path": "3"
    },
    "4528": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "POP",
      "path": "3"
    },
    "4529": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "POP",
      "path": "3"
    },
    "4530": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "4531": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4532": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "4534": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4535": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "EQ",
      "path": "3"
    },
    "4536": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x11DD"
    },
    "4539": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "4540": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4542": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4543": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4544": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "POP",
      "path": "3"
    },
    "4545": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "4547": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "NOT",
      "path": "3"
    },
    "4548": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x3F"
    },
    "4550": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "4551": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "ADD",
      "path": "3"
    },
    "4552": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "AND",
      "path": "3"
    },
    "4553": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4554": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "ADD",
      "path": "3"
    },
    "4555": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4557": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4558": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "4559": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4560": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4561": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "4562": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "4564": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "4566": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "DUP5",
      "path": "3"
    },
    "4567": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "ADD",
      "path": "3"
    },
    "4568": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "RETURNDATACOPY",
      "path": "3"
    },
    "4569": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x11E2"
    },
    "4572": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4573": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4574": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x60"
    },
    "4576": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4577": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "POP",
      "path": "3"
    },
    "4578": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4579": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "POP",
      "path": "3"
    },
    "4580": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4972,
        5047
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4581": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4972,
        5047
      ],
      "op": "POP",
      "path": "3"
    },
    "4582": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4972,
        5047
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4583": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4972,
        5047
      ],
      "op": "POP",
      "path": "3"
    },
    "4584": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5064,
        5116
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 54,
      "value": "0x11F2"
    },
    "4587": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5082,
        5089
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4588": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5091,
        5101
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4589": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5103,
        5115
      ],
      "op": "DUP7",
      "path": "3"
    },
    "4590": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5064,
        5081
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x11FD"
    },
    "4593": {
      "fn": "Address.functionCallWithValue",
      "jump": "i",
      "offset": [
        5064,
        5116
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4594": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5064,
        5116
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4595": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5057,
        5116
      ],
      "op": "SWAP8",
      "path": "3"
    },
    "4596": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4600,
        5123
      ],
      "op": "SWAP7",
      "path": "3"
    },
    "4597": {
      "op": "POP"
    },
    "4598": {
      "op": "POP"
    },
    "4599": {
      "op": "POP"
    },
    "4600": {
      "op": "POP"
    },
    "4601": {
      "op": "POP"
    },
    "4602": {
      "op": "POP"
    },
    "4603": {
      "op": "POP"
    },
    "4604": {
      "fn": "Address.functionCallWithValue",
      "jump": "o",
      "offset": [
        4600,
        5123
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4605": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7083,
        7808
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4606": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7198,
        7210
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x60"
    },
    "4608": {
      "branch": 69,
      "fn": "Address._verifyCallResult",
      "offset": [
        7226,
        7233
      ],
      "op": "DUP4",
      "path": "3"
    },
    "4609": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7222,
        7802
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "4610": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7222,
        7802
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x120C"
    },
    "4613": {
      "branch": 69,
      "fn": "Address._verifyCallResult",
      "offset": [
        7222,
        7802
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "4614": {
      "op": "POP"
    },
    "4615": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7256,
        7266
      ],
      "op": "DUP2",
      "path": "3",
      "statement": 55
    },
    "4616": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7249,
        7266
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xE93"
    },
    "4619": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7249,
        7266
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4620": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7222,
        7802
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4621": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7367,
        7384
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4622": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7367,
        7384
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4623": {
      "branch": 70,
      "fn": "Address._verifyCallResult",
      "offset": [
        7367,
        7388
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "4624": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7363,
        7792
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x121C"
    },
    "4627": {
      "branch": 70,
      "fn": "Address._verifyCallResult",
      "offset": [
        7363,
        7792
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "4628": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7625,
        7635
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4629": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7619,
        7636
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4630": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7685,
        7700
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4631": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7672,
        7682
      ],
      "op": "DUP5",
      "path": "3"
    },
    "4632": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7668,
        7670
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "4634": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7664,
        7683
      ],
      "op": "ADD",
      "path": "3"
    },
    "4635": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7657,
        7701
      ],
      "op": "REVERT",
      "path": "3"
    },
    "4636": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7363,
        7792
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4637": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7764,
        7776
      ],
      "op": "DUP2",
      "path": "3",
      "statement": 56
    },
    "4638": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7757,
        7777
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4640": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7757,
        7777
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4641": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4645": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4647": {
      "op": "SHL"
    },
    "4648": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7757,
        7777
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4649": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7757,
        7777
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4650": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7757,
        7777
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "4652": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7757,
        7777
      ],
      "op": "ADD",
      "path": "3"
    },
    "4653": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7757,
        7777
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x51E"
    },
    "4656": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7757,
        7777
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4657": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7757,
        7777
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4658": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7757,
        7777
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1307"
    },
    "4661": {
      "fn": "Address._verifyCallResult",
      "jump": "i",
      "offset": [
        7757,
        7777
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4662": {
      "op": "JUMPDEST"
    },
    "4663": {
      "op": "DUP1"
    },
    "4664": {
      "op": "CALLDATALOAD"
    },
    "4665": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4667": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4669": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4671": {
      "op": "SHL"
    },
    "4672": {
      "op": "SUB"
    },
    "4673": {
      "op": "DUP2"
    },
    "4674": {
      "op": "AND"
    },
    "4675": {
      "op": "DUP2"
    },
    "4676": {
      "op": "EQ"
    },
    "4677": {
      "op": "PUSH2",
      "value": "0x124D"
    },
    "4680": {
      "op": "JUMPI"
    },
    "4681": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4683": {
      "op": "DUP1"
    },
    "4684": {
      "op": "REVERT"
    },
    "4685": {
      "op": "JUMPDEST"
    },
    "4686": {
      "op": "SWAP2"
    },
    "4687": {
      "op": "SWAP1"
    },
    "4688": {
      "op": "POP"
    },
    "4689": {
      "jump": "o",
      "op": "JUMP"
    },
    "4690": {
      "op": "JUMPDEST"
    },
    "4691": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4693": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4695": {
      "op": "DUP3"
    },
    "4696": {
      "op": "DUP5"
    },
    "4697": {
      "op": "SUB"
    },
    "4698": {
      "op": "SLT"
    },
    "4699": {
      "op": "ISZERO"
    },
    "4700": {
      "op": "PUSH2",
      "value": "0x1264"
    },
    "4703": {
      "op": "JUMPI"
    },
    "4704": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4706": {
      "op": "DUP1"
    },
    "4707": {
      "op": "REVERT"
    },
    "4708": {
      "op": "JUMPDEST"
    },
    "4709": {
      "op": "PUSH2",
      "value": "0xE93"
    },
    "4712": {
      "op": "DUP3"
    },
    "4713": {
      "op": "PUSH2",
      "value": "0x1236"
    },
    "4716": {
      "jump": "i",
      "op": "JUMP"
    },
    "4717": {
      "op": "JUMPDEST"
    },
    "4718": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4720": {
      "op": "DUP1"
    },
    "4721": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4723": {
      "op": "DUP4"
    },
    "4724": {
      "op": "DUP6"
    },
    "4725": {
      "op": "SUB"
    },
    "4726": {
      "op": "SLT"
    },
    "4727": {
      "op": "ISZERO"
    },
    "4728": {
      "op": "PUSH2",
      "value": "0x1280"
    },
    "4731": {
      "op": "JUMPI"
    },
    "4732": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4734": {
      "op": "DUP1"
    },
    "4735": {
      "op": "REVERT"
    },
    "4736": {
      "op": "JUMPDEST"
    },
    "4737": {
      "op": "PUSH2",
      "value": "0x1289"
    },
    "4740": {
      "op": "DUP4"
    },
    "4741": {
      "op": "PUSH2",
      "value": "0x1236"
    },
    "4744": {
      "jump": "i",
      "op": "JUMP"
    },
    "4745": {
      "op": "JUMPDEST"
    },
    "4746": {
      "op": "SWAP5"
    },
    "4747": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4749": {
      "op": "SWAP4"
    },
    "4750": {
      "op": "SWAP1"
    },
    "4751": {
      "op": "SWAP4"
    },
    "4752": {
      "op": "ADD"
    },
    "4753": {
      "op": "CALLDATALOAD"
    },
    "4754": {
      "op": "SWAP4"
    },
    "4755": {
      "op": "POP"
    },
    "4756": {
      "op": "POP"
    },
    "4757": {
      "op": "POP"
    },
    "4758": {
      "jump": "o",
      "op": "JUMP"
    },
    "4759": {
      "op": "JUMPDEST"
    },
    "4760": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4762": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4764": {
      "op": "DUP3"
    },
    "4765": {
      "op": "DUP5"
    },
    "4766": {
      "op": "SUB"
    },
    "4767": {
      "op": "SLT"
    },
    "4768": {
      "op": "ISZERO"
    },
    "4769": {
      "op": "PUSH2",
      "value": "0x12A9"
    },
    "4772": {
      "op": "JUMPI"
    },
    "4773": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4775": {
      "op": "DUP1"
    },
    "4776": {
      "op": "REVERT"
    },
    "4777": {
      "op": "JUMPDEST"
    },
    "4778": {
      "op": "DUP2"
    },
    "4779": {
      "op": "MLOAD"
    },
    "4780": {
      "op": "DUP1"
    },
    "4781": {
      "op": "ISZERO"
    },
    "4782": {
      "op": "ISZERO"
    },
    "4783": {
      "op": "DUP2"
    },
    "4784": {
      "op": "EQ"
    },
    "4785": {
      "op": "PUSH2",
      "value": "0xE93"
    },
    "4788": {
      "op": "JUMPI"
    },
    "4789": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4791": {
      "op": "DUP1"
    },
    "4792": {
      "op": "REVERT"
    },
    "4793": {
      "op": "JUMPDEST"
    },
    "4794": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4796": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4798": {
      "op": "DUP3"
    },
    "4799": {
      "op": "DUP5"
    },
    "4800": {
      "op": "SUB"
    },
    "4801": {
      "op": "SLT"
    },
    "4802": {
      "op": "ISZERO"
    },
    "4803": {
      "op": "PUSH2",
      "value": "0x12CB"
    },
    "4806": {
      "op": "JUMPI"
    },
    "4807": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4809": {
      "op": "DUP1"
    },
    "4810": {
      "op": "REVERT"
    },
    "4811": {
      "op": "JUMPDEST"
    },
    "4812": {
      "op": "POP"
    },
    "4813": {
      "op": "CALLDATALOAD"
    },
    "4814": {
      "op": "SWAP2"
    },
    "4815": {
      "op": "SWAP1"
    },
    "4816": {
      "op": "POP"
    },
    "4817": {
      "jump": "o",
      "op": "JUMP"
    },
    "4818": {
      "op": "JUMPDEST"
    },
    "4819": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4821": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4823": {
      "op": "DUP3"
    },
    "4824": {
      "op": "DUP5"
    },
    "4825": {
      "op": "SUB"
    },
    "4826": {
      "op": "SLT"
    },
    "4827": {
      "op": "ISZERO"
    },
    "4828": {
      "op": "PUSH2",
      "value": "0x12E4"
    },
    "4831": {
      "op": "JUMPI"
    },
    "4832": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4834": {
      "op": "DUP1"
    },
    "4835": {
      "op": "REVERT"
    },
    "4836": {
      "op": "JUMPDEST"
    },
    "4837": {
      "op": "POP"
    },
    "4838": {
      "op": "MLOAD"
    },
    "4839": {
      "op": "SWAP2"
    },
    "4840": {
      "op": "SWAP1"
    },
    "4841": {
      "op": "POP"
    },
    "4842": {
      "jump": "o",
      "op": "JUMP"
    },
    "4843": {
      "op": "JUMPDEST"
    },
    "4844": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4846": {
      "op": "DUP3"
    },
    "4847": {
      "op": "MLOAD"
    },
    "4848": {
      "op": "PUSH2",
      "value": "0x12FD"
    },
    "4851": {
      "op": "DUP2"
    },
    "4852": {
      "op": "DUP5"
    },
    "4853": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4855": {
      "op": "DUP8"
    },
    "4856": {
      "op": "ADD"
    },
    "4857": {
      "op": "PUSH2",
      "value": "0x13E1"
    },
    "4860": {
      "jump": "i",
      "op": "JUMP"
    },
    "4861": {
      "op": "JUMPDEST"
    },
    "4862": {
      "op": "SWAP2"
    },
    "4863": {
      "op": "SWAP1"
    },
    "4864": {
      "op": "SWAP2"
    },
    "4865": {
      "op": "ADD"
    },
    "4866": {
      "op": "SWAP3"
    },
    "4867": {
      "op": "SWAP2"
    },
    "4868": {
      "op": "POP"
    },
    "4869": {
      "op": "POP"
    },
    "4870": {
      "jump": "o",
      "op": "JUMP"
    },
    "4871": {
      "op": "JUMPDEST"
    },
    "4872": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4874": {
      "op": "DUP2"
    },
    "4875": {
      "op": "MSTORE"
    },
    "4876": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4878": {
      "op": "DUP3"
    },
    "4879": {
      "op": "MLOAD"
    },
    "4880": {
      "op": "DUP1"
    },
    "4881": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4883": {
      "op": "DUP5"
    },
    "4884": {
      "op": "ADD"
    },
    "4885": {
      "op": "MSTORE"
    },
    "4886": {
      "op": "PUSH2",
      "value": "0x1326"
    },
    "4889": {
      "op": "DUP2"
    },
    "4890": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4892": {
      "op": "DUP6"
    },
    "4893": {
      "op": "ADD"
    },
    "4894": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4896": {
      "op": "DUP8"
    },
    "4897": {
      "op": "ADD"
    },
    "4898": {
      "op": "PUSH2",
      "value": "0x13E1"
    },
    "4901": {
      "jump": "i",
      "op": "JUMP"
    },
    "4902": {
      "op": "JUMPDEST"
    },
    "4903": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4905": {
      "op": "ADD"
    },
    "4906": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4908": {
      "op": "NOT"
    },
    "4909": {
      "op": "AND"
    },
    "4910": {
      "op": "SWAP2"
    },
    "4911": {
      "op": "SWAP1"
    },
    "4912": {
      "op": "SWAP2"
    },
    "4913": {
      "op": "ADD"
    },
    "4914": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4916": {
      "op": "ADD"
    },
    "4917": {
      "op": "SWAP3"
    },
    "4918": {
      "op": "SWAP2"
    },
    "4919": {
      "op": "POP"
    },
    "4920": {
      "op": "POP"
    },
    "4921": {
      "jump": "o",
      "op": "JUMP"
    },
    "4922": {
      "op": "JUMPDEST"
    },
    "4923": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4925": {
      "op": "DUP1"
    },
    "4926": {
      "op": "DUP3"
    },
    "4927": {
      "op": "MSTORE"
    },
    "4928": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4930": {
      "op": "SWAP1"
    },
    "4931": {
      "op": "DUP3"
    },
    "4932": {
      "op": "ADD"
    },
    "4933": {
      "op": "MSTORE"
    },
    "4934": {
      "op": "PUSH32",
      "value": "0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
    },
    "4967": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4969": {
      "op": "DUP3"
    },
    "4970": {
      "op": "ADD"
    },
    "4971": {
      "op": "MSTORE"
    },
    "4972": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4974": {
      "op": "ADD"
    },
    "4975": {
      "op": "SWAP1"
    },
    "4976": {
      "jump": "o",
      "op": "JUMP"
    },
    "4977": {
      "op": "JUMPDEST"
    },
    "4978": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4980": {
      "op": "DUP3"
    },
    "4981": {
      "op": "NOT"
    },
    "4982": {
      "op": "DUP3"
    },
    "4983": {
      "op": "GT"
    },
    "4984": {
      "op": "ISZERO"
    },
    "4985": {
      "op": "PUSH2",
      "value": "0x1384"
    },
    "4988": {
      "op": "JUMPI"
    },
    "4989": {
      "op": "PUSH2",
      "value": "0x1384"
    },
    "4992": {
      "op": "PUSH2",
      "value": "0x140D"
    },
    "4995": {
      "jump": "i",
      "op": "JUMP"
    },
    "4996": {
      "op": "JUMPDEST"
    },
    "4997": {
      "op": "POP"
    },
    "4998": {
      "op": "ADD"
    },
    "4999": {
      "op": "SWAP1"
    },
    "5000": {
      "jump": "o",
      "op": "JUMP"
    },
    "5001": {
      "op": "JUMPDEST"
    },
    "5002": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5004": {
      "op": "DUP3"
    },
    "5005": {
      "op": "PUSH2",
      "value": "0x13A6"
    },
    "5008": {
      "op": "JUMPI"
    },
    "5009": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "5014": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5016": {
      "op": "SHL"
    },
    "5017": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5019": {
      "op": "MSTORE"
    },
    "5020": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "5022": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "5024": {
      "op": "MSTORE"
    },
    "5025": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5027": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5029": {
      "op": "REVERT"
    },
    "5030": {
      "op": "JUMPDEST"
    },
    "5031": {
      "op": "POP"
    },
    "5032": {
      "op": "DIV"
    },
    "5033": {
      "op": "SWAP1"
    },
    "5034": {
      "jump": "o",
      "op": "JUMP"
    },
    "5035": {
      "op": "JUMPDEST"
    },
    "5036": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5038": {
      "op": "DUP2"
    },
    "5039": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5041": {
      "op": "NOT"
    },
    "5042": {
      "op": "DIV"
    },
    "5043": {
      "op": "DUP4"
    },
    "5044": {
      "op": "GT"
    },
    "5045": {
      "op": "DUP3"
    },
    "5046": {
      "op": "ISZERO"
    },
    "5047": {
      "op": "ISZERO"
    },
    "5048": {
      "op": "AND"
    },
    "5049": {
      "op": "ISZERO"
    },
    "5050": {
      "op": "PUSH2",
      "value": "0x13C5"
    },
    "5053": {
      "op": "JUMPI"
    },
    "5054": {
      "op": "PUSH2",
      "value": "0x13C5"
    },
    "5057": {
      "op": "PUSH2",
      "value": "0x140D"
    },
    "5060": {
      "jump": "i",
      "op": "JUMP"
    },
    "5061": {
      "op": "JUMPDEST"
    },
    "5062": {
      "op": "POP"
    },
    "5063": {
      "op": "MUL"
    },
    "5064": {
      "op": "SWAP1"
    },
    "5065": {
      "jump": "o",
      "op": "JUMP"
    },
    "5066": {
      "op": "JUMPDEST"
    },
    "5067": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5069": {
      "op": "DUP3"
    },
    "5070": {
      "op": "DUP3"
    },
    "5071": {
      "op": "LT"
    },
    "5072": {
      "op": "ISZERO"
    },
    "5073": {
      "op": "PUSH2",
      "value": "0x13DC"
    },
    "5076": {
      "op": "JUMPI"
    },
    "5077": {
      "op": "PUSH2",
      "value": "0x13DC"
    },
    "5080": {
      "op": "PUSH2",
      "value": "0x140D"
    },
    "5083": {
      "jump": "i",
      "op": "JUMP"
    },
    "5084": {
      "op": "JUMPDEST"
    },
    "5085": {
      "op": "POP"
    },
    "5086": {
      "op": "SUB"
    },
    "5087": {
      "op": "SWAP1"
    },
    "5088": {
      "jump": "o",
      "op": "JUMP"
    },
    "5089": {
      "op": "JUMPDEST"
    },
    "5090": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5092": {
      "op": "JUMPDEST"
    },
    "5093": {
      "op": "DUP4"
    },
    "5094": {
      "op": "DUP2"
    },
    "5095": {
      "op": "LT"
    },
    "5096": {
      "op": "ISZERO"
    },
    "5097": {
      "op": "PUSH2",
      "value": "0x13FC"
    },
    "5100": {
      "op": "JUMPI"
    },
    "5101": {
      "op": "DUP2"
    },
    "5102": {
      "op": "DUP2"
    },
    "5103": {
      "op": "ADD"
    },
    "5104": {
      "op": "MLOAD"
    },
    "5105": {
      "op": "DUP4"
    },
    "5106": {
      "op": "DUP3"
    },
    "5107": {
      "op": "ADD"
    },
    "5108": {
      "op": "MSTORE"
    },
    "5109": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5111": {
      "op": "ADD"
    },
    "5112": {
      "op": "PUSH2",
      "value": "0x13E4"
    },
    "5115": {
      "op": "JUMP"
    },
    "5116": {
      "op": "JUMPDEST"
    },
    "5117": {
      "op": "DUP4"
    },
    "5118": {
      "op": "DUP2"
    },
    "5119": {
      "op": "GT"
    },
    "5120": {
      "op": "ISZERO"
    },
    "5121": {
      "op": "PUSH2",
      "value": "0xFE6"
    },
    "5124": {
      "op": "JUMPI"
    },
    "5125": {
      "op": "POP"
    },
    "5126": {
      "op": "POP"
    },
    "5127": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5129": {
      "op": "SWAP2"
    },
    "5130": {
      "op": "ADD"
    },
    "5131": {
      "op": "MSTORE"
    },
    "5132": {
      "jump": "o",
      "op": "JUMP"
    },
    "5133": {
      "op": "JUMPDEST"
    },
    "5134": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "5139": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5141": {
      "op": "SHL"
    },
    "5142": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5144": {
      "op": "MSTORE"
    },
    "5145": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "5147": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "5149": {
      "op": "MSTORE"
    },
    "5150": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5152": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5154": {
      "op": "REVERT"
    }
  },
  "sha1": "93fdd006618ee7b9b11373624df435e7b0aed914",
  "source": "pragma solidity ^0.8.3;\n\nimport 'OpenZeppelin/openzeppelin-contracts@4.0.0/contracts/utils/math/SafeMath.sol';\nimport 'OpenZeppelin/openzeppelin-contracts@4.0.0/contracts/utils/math/Math.sol';\nimport 'OpenZeppelin/openzeppelin-contracts@4.0.0/contracts/token/ERC20/utils/SafeERC20.sol';\nimport 'OpenZeppelin/openzeppelin-contracts@4.0.0/contracts/security/ReentrancyGuard.sol';\n\n// Inheritance\nimport \"../../interfaces/IStakingRewards.sol\";\n\npragma solidity ^0.8.3;\n\n\n// https://docs.synthetix.io/contracts/source/contracts/owned\ncontract Owned {\n    address public owner;\n    address public nominatedOwner;\n\n    constructor(address _owner) {\n        require(_owner != address(0), \"Owner address cannot be 0\");\n        owner = _owner;\n        emit OwnerChanged(address(0), _owner);\n    }\n\n    function nominateNewOwner(address _owner) external onlyOwner {\n        nominatedOwner = _owner;\n        emit OwnerNominated(_owner);\n    }\n\n    function acceptOwnership() external {\n        require(msg.sender == nominatedOwner, \"You must be nominated before you can accept ownership\");\n        emit OwnerChanged(owner, nominatedOwner);\n        owner = nominatedOwner;\n        nominatedOwner = address(0);\n    }\n\n    modifier onlyOwner {\n        _onlyOwner();\n        _;\n    }\n\n    function _onlyOwner() private view {\n        require(msg.sender == owner, \"Only the contract owner may perform this action\");\n    }\n\n    event OwnerNominated(address newOwner);\n    event OwnerChanged(address oldOwner, address newOwner);\n}\n\n\n// https://docs.synthetix.io/contracts/source/contracts/rewardsdistributionrecipient\nabstract contract RewardsDistributionRecipient is Owned {\n    address public rewardsDistribution;\n\n    function notifyRewardAmount(uint256 reward) external virtual;\n\n    modifier onlyRewardsDistribution() {\n        require(msg.sender == rewardsDistribution, \"Caller is not RewardsDistribution contract\");\n        _;\n    }\n\n    function setRewardsDistribution(address _rewardsDistribution) external onlyOwner {\n        rewardsDistribution = _rewardsDistribution;\n    }\n}\n\n// https://docs.synthetix.io/contracts/source/contracts/stakingrewards\n// XXX: removed Pausable\ncontract MockStakingRewards is IStakingRewards, RewardsDistributionRecipient, ReentrancyGuard {\n    using SafeMath for uint256;\n    using SafeERC20 for IERC20;\n\n    /* ========== STATE VARIABLES ========== */\n\n    IERC20 public rewardsToken;\n    IERC20 public stakingToken;\n    uint256 public periodFinish = 0;\n    uint256 public rewardRate = 0;\n    uint256 public rewardsDuration = 7 days;\n    uint256 public lastUpdateTime;\n    uint256 public rewardPerTokenStored;\n\n    mapping(address => uint256) public userRewardPerTokenPaid;\n    mapping(address => uint256) public rewards;\n\n    uint256 private _totalSupply;\n    mapping(address => uint256) private _balances;\n\n    /* ========== CONSTRUCTOR ========== */\n\n    constructor(\n        address _owner,\n        address _rewardsDistribution,\n        address _rewardsToken,\n        address _stakingToken\n    ) Owned(_owner) {\n        rewardsToken = IERC20(_rewardsToken);\n        stakingToken = IERC20(_stakingToken);\n        rewardsDistribution = _rewardsDistribution;\n    }\n\n    /* ========== VIEWS ========== */\n\n    function totalSupply() external view override returns (uint256) {\n        return _totalSupply;\n    }\n\n    function balanceOf(address account) external view override returns (uint256) {\n        return _balances[account];\n    }\n\n    function lastTimeRewardApplicable() public view override returns (uint256) {\n        return Math.min(block.timestamp, periodFinish);\n    }\n\n    function rewardPerToken() public view override returns (uint256) {\n        if (_totalSupply == 0) {\n            return rewardPerTokenStored;\n        }\n        return\n            rewardPerTokenStored.add(\n                lastTimeRewardApplicable().sub(lastUpdateTime).mul(rewardRate).mul(1e18).div(_totalSupply)\n            );\n    }\n\n    function earned(address account) public view override returns (uint256) {\n        return _balances[account].mul(rewardPerToken().sub(userRewardPerTokenPaid[account])).div(1e18).add(rewards[account]);\n    }\n\n    function getRewardForDuration() external view override returns (uint256) {\n        return rewardRate.mul(rewardsDuration);\n    }\n\n    /* ========== MUTATIVE FUNCTIONS ========== */\n\n    // XXX: removed notPaused\n    function stake(uint256 amount) external override nonReentrant updateReward(msg.sender) {\n        require(amount > 0, \"Cannot stake 0\");\n        _totalSupply = _totalSupply.add(amount);\n        _balances[msg.sender] = _balances[msg.sender].add(amount);\n        stakingToken.safeTransferFrom(msg.sender, address(this), amount);\n        emit Staked(msg.sender, amount);\n    }\n\n    function withdraw(uint256 amount) public override nonReentrant updateReward(msg.sender) {\n        require(amount > 0, \"Cannot withdraw 0\");\n        _totalSupply = _totalSupply.sub(amount);\n        _balances[msg.sender] = _balances[msg.sender].sub(amount);\n        stakingToken.safeTransfer(msg.sender, amount);\n        emit Withdrawn(msg.sender, amount);\n    }\n\n    function getReward() public override nonReentrant updateReward(msg.sender) {\n        uint256 reward = rewards[msg.sender];\n        if (reward > 0) {\n            rewards[msg.sender] = 0;\n            rewardsToken.safeTransfer(msg.sender, reward);\n            emit RewardPaid(msg.sender, reward);\n        }\n    }\n\n    function exit() external override {\n        withdraw(_balances[msg.sender]);\n        getReward();\n    }\n\n    /* ========== RESTRICTED FUNCTIONS ========== */\n\n    function notifyRewardAmount(uint256 reward) external override onlyRewardsDistribution updateReward(address(0)) {\n        if (block.timestamp >= periodFinish) {\n            rewardRate = reward.div(rewardsDuration);\n        } else {\n            uint256 remaining = periodFinish.sub(block.timestamp);\n            uint256 leftover = remaining.mul(rewardRate);\n            rewardRate = reward.add(leftover).div(rewardsDuration);\n        }\n\n        // Ensure the provided reward amount is not more than the balance in the contract.\n        // This keeps the reward rate in the right range, preventing overflows due to\n        // very high values of rewardRate in the earned and rewardsPerToken functions;\n        // Reward + leftover must be less than 2^256 / 10^18 to avoid overflow.\n        uint balance = rewardsToken.balanceOf(address(this));\n        require(rewardRate <= balance.div(rewardsDuration), \"Provided reward too high\");\n\n        lastUpdateTime = block.timestamp;\n        periodFinish = block.timestamp.add(rewardsDuration);\n        emit RewardAdded(reward);\n    }\n\n    // End rewards emission earlier\n    function updatePeriodFinish(uint timestamp) external onlyOwner updateReward(address(0)) {\n        periodFinish = timestamp;\n    }\n\n    // Added to support recovering LP Rewards from other systems such as BAL to be distributed to holders\n    function recoverERC20(address tokenAddress, uint256 tokenAmount) external onlyOwner {\n        require(tokenAddress != address(stakingToken), \"Cannot withdraw the staking token\");\n        IERC20(tokenAddress).safeTransfer(owner, tokenAmount);\n        emit Recovered(tokenAddress, tokenAmount);\n    }\n\n    function setRewardsDuration(uint256 _rewardsDuration) external onlyOwner {\n        require(\n            block.timestamp > periodFinish,\n            \"Previous rewards period must be complete before changing the duration for the new period\"\n        );\n        rewardsDuration = _rewardsDuration;\n        emit RewardsDurationUpdated(rewardsDuration);\n    }\n\n    /* ========== MODIFIERS ========== */\n\n    modifier updateReward(address account) {\n        rewardPerTokenStored = rewardPerToken();\n        lastUpdateTime = lastTimeRewardApplicable();\n        if (account != address(0)) {\n            rewards[account] = earned(account);\n            userRewardPerTokenPaid[account] = rewardPerTokenStored;\n        }\n        _;\n    }\n\n    /* ========== EVENTS ========== */\n\n    event RewardAdded(uint256 reward);\n    event Staked(address indexed user, uint256 amount);\n    event Withdrawn(address indexed user, uint256 amount);\n    event RewardPaid(address indexed user, uint256 reward);\n    event RewardsDurationUpdated(uint256 newDuration);\n    event Recovered(address token, uint256 amount);\n}",
  "sourceMap": "2167:6176:7:-:0;;;2475:1;2445:31;;2510:1;2482:29;;2550:6;2517:39;;2882:307;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3030:6;-1:-1:-1;;;;;659:20:7;;651:58;;;;-1:-1:-1;;;651:58:7;;1176:2:11;651:58:7;;;1158:21:11;1215:2;1195:18;;;1188:30;1254:27;1234:18;;;1227:55;1299:18;;651:58:7;;;;;;;;719:5;:14;;-1:-1:-1;;;;;;719:14:7;-1:-1:-1;;;;;719:14:7;;;;;;;748:32;;;877:34:11;;;942:2;927:18;;920:43;;;;748:32:7;;812:18:11;748:32:7;;;;;;;-1:-1:-1;1637:1:0;1743:7;:22;3048:12:7::1;:36:::0;;-1:-1:-1;;;;;3048:36:7;;::::1;-1:-1:-1::0;;;;;;3048:36:7;;::::1;;::::0;;;3094:12:::1;:36:::0;;;;::::1;::::0;;::::1;::::0;;;::::1;::::0;;;3140:19:::1;:42:::0;;;;;::::1;::::0;::::1;::::0;;;::::1;::::0;;-1:-1:-1;2167:6176:7;;14:177:11;93:13;;-1:-1:-1;;;;;135:31:11;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:464::-;293:6;301;309;317;370:3;358:9;349:7;345:23;341:33;338:53;;;387:1;384;377:12;338:53;410:40;440:9;410:40;:::i;:::-;400:50;;469:49;514:2;503:9;499:18;469:49;:::i;:::-;459:59;;537:49;582:2;571:9;567:18;537:49;:::i;:::-;527:59;;605:49;650:2;639:9;635:18;605:49;:::i;:::-;595:59;;196:464;;;;;;;:::o;974:349::-;2167:6176:7;;;;;;",
  "sourcePath": "contracts/mock/MockStaking.sol",
  "type": "contract"
}