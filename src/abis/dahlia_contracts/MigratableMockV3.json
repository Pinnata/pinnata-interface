{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "anotherValue",
          "type": "uint256"
        }
      ],
      "name": "migrate",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "migrate",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "x",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "y",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "112": "contracts/openzeppelin/mocks/SingleInheritanceInitializableMocks.sol",
    "127": "contracts/openzeppelin/proxy/Initializable.sol",
    "161": "contracts/openzeppelin/utils/Address.sol"
  },
  "ast": {
    "absolutePath": "contracts/openzeppelin/mocks/SingleInheritanceInitializableMocks.sol",
    "exportedSymbols": {
      "MigratableMockV1": [
        17443
      ],
      "MigratableMockV2": [
        17476
      ],
      "MigratableMockV3": [
        17507
      ]
    },
    "id": 17508,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 17424,
        "literals": [
          "solidity",
          ">=",
          "0.6",
          ".0",
          "<",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:31:112"
      },
      {
        "absolutePath": "contracts/openzeppelin/proxy/Initializable.sol",
        "file": "../proxy/Initializable.sol",
        "id": 17425,
        "nodeType": "ImportDirective",
        "scope": 17508,
        "sourceUnit": 19013,
        "src": "66:36:112",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 17427,
              "name": "Initializable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 19012,
              "src": "255:13:112",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Initializable_$19012",
                "typeString": "contract Initializable"
              }
            },
            "id": 17428,
            "nodeType": "InheritanceSpecifier",
            "src": "255:13:112"
          }
        ],
        "contractDependencies": [
          19012
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 17426,
          "nodeType": "StructuredDocumentation",
          "src": "104:121:112",
          "text": " @title MigratableMockV1\n @dev This contract is a mock to test initializable functionality through migrations"
        },
        "fullyImplemented": true,
        "id": 17443,
        "linearizedBaseContracts": [
          17443,
          19012
        ],
        "name": "MigratableMockV1",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "0c55699c",
            "id": 17430,
            "mutability": "mutable",
            "name": "x",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 17443,
            "src": "273:16:112",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 17429,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "273:7:112",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 17441,
              "nodeType": "Block",
              "src": "356:20:112",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 17439,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 17437,
                      "name": "x",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17430,
                      "src": "362:1:112",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 17438,
                      "name": "value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17432,
                      "src": "366:5:112",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "362:9:112",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 17440,
                  "nodeType": "ExpressionStatement",
                  "src": "362:9:112"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "fe4b84df",
            "id": 17442,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 17435,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 17434,
                  "name": "initializer",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 18995,
                  "src": "344:11:112",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "344:11:112"
              }
            ],
            "name": "initialize",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 17433,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 17432,
                  "mutability": "mutable",
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 17442,
                  "src": "314:13:112",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 17431,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "314:7:112",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "313:15:112"
            },
            "returnParameters": {
              "id": 17436,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "356:0:112"
            },
            "scope": 17443,
            "src": "294:82:112",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 17508,
        "src": "226:152:112"
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 17445,
              "name": "MigratableMockV1",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 17443,
              "src": "521:16:112",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MigratableMockV1_$17443",
                "typeString": "contract MigratableMockV1"
              }
            },
            "id": 17446,
            "nodeType": "InheritanceSpecifier",
            "src": "521:16:112"
          }
        ],
        "contractDependencies": [
          17443,
          19012
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 17444,
          "nodeType": "StructuredDocumentation",
          "src": "380:111:112",
          "text": " @title MigratableMockV2\n @dev This contract is a mock to test migratable functionality with params"
        },
        "fullyImplemented": true,
        "id": 17476,
        "linearizedBaseContracts": [
          17476,
          17443,
          19012
        ],
        "name": "MigratableMockV2",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 17448,
            "mutability": "mutable",
            "name": "_migratedV2",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 17476,
            "src": "542:25:112",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 17447,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "542:4:112",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "a56dfe4a",
            "id": 17450,
            "mutability": "mutable",
            "name": "y",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 17476,
            "src": "571:16:112",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 17449,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "571:7:112",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 17474,
              "nodeType": "Block",
              "src": "661:93:112",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 17459,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "675:12:112",
                        "subExpression": {
                          "argumentTypes": null,
                          "id": 17458,
                          "name": "_migratedV2",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 17448,
                          "src": "676:11:112",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 17457,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "667:7:112",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 17460,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "667:21:112",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 17461,
                  "nodeType": "ExpressionStatement",
                  "src": "667:21:112"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 17464,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 17462,
                      "name": "x",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17430,
                      "src": "694:1:112",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 17463,
                      "name": "value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17452,
                      "src": "698:5:112",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "694:9:112",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 17465,
                  "nodeType": "ExpressionStatement",
                  "src": "694:9:112"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 17468,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 17466,
                      "name": "y",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17450,
                      "src": "709:1:112",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 17467,
                      "name": "anotherValue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17454,
                      "src": "713:12:112",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "709:16:112",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 17469,
                  "nodeType": "ExpressionStatement",
                  "src": "709:16:112"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 17472,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 17470,
                      "name": "_migratedV2",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17448,
                      "src": "731:11:112",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 17471,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "745:4:112",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "731:18:112",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 17473,
                  "nodeType": "ExpressionStatement",
                  "src": "731:18:112"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "3e54bacb",
            "id": 17475,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "migrate",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 17455,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 17452,
                  "mutability": "mutable",
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 17475,
                  "src": "609:13:112",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 17451,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "609:7:112",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 17454,
                  "mutability": "mutable",
                  "name": "anotherValue",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 17475,
                  "src": "624:20:112",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 17453,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "624:7:112",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "608:37:112"
            },
            "returnParameters": {
              "id": 17456,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "661:0:112"
            },
            "scope": 17476,
            "src": "592:162:112",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 17508,
        "src": "492:264:112"
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 17478,
              "name": "MigratableMockV2",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 17476,
              "src": "902:16:112",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MigratableMockV2_$17476",
                "typeString": "contract MigratableMockV2"
              }
            },
            "id": 17479,
            "nodeType": "InheritanceSpecifier",
            "src": "902:16:112"
          }
        ],
        "contractDependencies": [
          17443,
          17476,
          19012
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 17477,
          "nodeType": "StructuredDocumentation",
          "src": "758:114:112",
          "text": " @title MigratableMockV3\n @dev This contract is a mock to test migratable functionality without params"
        },
        "fullyImplemented": true,
        "id": 17507,
        "linearizedBaseContracts": [
          17507,
          17476,
          17443,
          19012
        ],
        "name": "MigratableMockV3",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 17481,
            "mutability": "mutable",
            "name": "_migratedV3",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 17507,
            "src": "923:25:112",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 17480,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "923:4:112",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 17505,
              "nodeType": "Block",
              "src": "987:103:112",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 17486,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "1001:12:112",
                        "subExpression": {
                          "argumentTypes": null,
                          "id": 17485,
                          "name": "_migratedV3",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 17481,
                          "src": "1002:11:112",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 17484,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "993:7:112",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 17487,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "993:21:112",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 17488,
                  "nodeType": "ExpressionStatement",
                  "src": "993:21:112"
                },
                {
                  "assignments": [
                    17490
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 17490,
                      "mutability": "mutable",
                      "name": "oldX",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 17505,
                      "src": "1020:12:112",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 17489,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1020:7:112",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 17492,
                  "initialValue": {
                    "argumentTypes": null,
                    "id": 17491,
                    "name": "x",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 17430,
                    "src": "1035:1:112",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1020:16:112"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 17495,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 17493,
                      "name": "x",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17430,
                      "src": "1042:1:112",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 17494,
                      "name": "y",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17450,
                      "src": "1046:1:112",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1042:5:112",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 17496,
                  "nodeType": "ExpressionStatement",
                  "src": "1042:5:112"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 17499,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 17497,
                      "name": "y",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17450,
                      "src": "1053:1:112",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 17498,
                      "name": "oldX",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17490,
                      "src": "1057:4:112",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1053:8:112",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 17500,
                  "nodeType": "ExpressionStatement",
                  "src": "1053:8:112"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 17503,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 17501,
                      "name": "_migratedV3",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17481,
                      "src": "1067:11:112",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 17502,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1081:4:112",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1067:18:112",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 17504,
                  "nodeType": "ExpressionStatement",
                  "src": "1067:18:112"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "8fd3ab80",
            "id": 17506,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "migrate",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 17482,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "969:2:112"
            },
            "returnParameters": {
              "id": 17483,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "987:0:112"
            },
            "scope": 17507,
            "src": "953:137:112",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 17508,
        "src": "873:219:112"
      }
    ],
    "src": "33:1060:112"
  },
  "bytecode": "608060405234801561001057600080fd5b50610255806100206000396000f3fe60806040526004361061004a5760003560e01c80630c55699c1461004f5780633e54bacb146100765780638fd3ab801461009b578063a56dfe4a146100a3578063fe4b84df146100b8575b600080fd5b34801561005b57600080fd5b506100646100d5565b60408051918252519081900360200190f35b6100996004803603604081101561008c57600080fd5b50803590602001356100db565b005b610099610102565b3480156100af57600080fd5b5061006461012c565b610099600480360360208110156100ce57600080fd5b5035610132565b60015481565b60025460ff16156100eb57600080fd5b60019182556003556002805460ff19169091179055565b60045460ff161561011257600080fd5b60018054600380548355556004805460ff19169091179055565b60035481565b600054610100900460ff168061014b575061014b6101da565b80610159575060005460ff16155b6101945760405162461bcd60e51b815260040180806020018281038252602e8152602001806101f2602e913960400191505060405180910390fd5b600054610100900460ff161580156101bf576000805460ff1961ff0019909116610100171660011790555b600182905580156101d6576000805461ff00191690555b5050565b60006101e5306101eb565b15905090565b3b15159056fe496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564a264697066735822122091fb795034025715b5bde54476cd03362f4578c12adaa83b5e3248a8b24875ca64736f6c634300060c0033",
  "bytecodeSha1": "a039114713777fed0454ca5bdb1448db02f2523c",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.6.12+commit.27d51765"
  },
  "contractName": "MigratableMockV3",
  "coverageMap": {
    "branches": {
      "112": {
        "MigratableMockV2.migrate": {
          "11": [
            675,
            687,
            true
          ]
        },
        "MigratableMockV3.migrate": {
          "12": [
            1001,
            1013,
            true
          ]
        }
      },
      "127": {
        "MigratableMockV1.initialize": {
          "13": [
            1501,
            1514,
            true
          ],
          "14": [
            1518,
            1534,
            true
          ],
          "15": [
            1539,
            1551,
            true
          ]
        }
      },
      "161": {}
    },
    "statements": {
      "112": {
        "MigratableMockV1.initialize": {
          "8": [
            362,
            371
          ]
        },
        "MigratableMockV2.migrate": {
          "0": [
            667,
            688
          ],
          "1": [
            694,
            703
          ],
          "2": [
            709,
            725
          ],
          "3": [
            731,
            749
          ]
        },
        "MigratableMockV3.migrate": {
          "4": [
            993,
            1014
          ],
          "5": [
            1042,
            1047
          ],
          "6": [
            1053,
            1061
          ],
          "7": [
            1067,
            1085
          ]
        }
      },
      "127": {
        "Initializable._isConstructor": {
          "9": [
            2005,
            2046
          ]
        }
      },
      "161": {
        "Address.isContract": {
          "10": [
            1117,
            1132
          ]
        }
      }
    }
  },
  "dependencies": [
    "Address",
    "Initializable",
    "MigratableMockV1",
    "MigratableMockV2"
  ],
  "deployedBytecode": "60806040526004361061004a5760003560e01c80630c55699c1461004f5780633e54bacb146100765780638fd3ab801461009b578063a56dfe4a146100a3578063fe4b84df146100b8575b600080fd5b34801561005b57600080fd5b506100646100d5565b60408051918252519081900360200190f35b6100996004803603604081101561008c57600080fd5b50803590602001356100db565b005b610099610102565b3480156100af57600080fd5b5061006461012c565b610099600480360360208110156100ce57600080fd5b5035610132565b60015481565b60025460ff16156100eb57600080fd5b60019182556003556002805460ff19169091179055565b60045460ff161561011257600080fd5b60018054600380548355556004805460ff19169091179055565b60035481565b600054610100900460ff168061014b575061014b6101da565b80610159575060005460ff16155b6101945760405162461bcd60e51b815260040180806020018281038252602e8152602001806101f2602e913960400191505060405180910390fd5b600054610100900460ff161580156101bf576000805460ff1961ff0019909116610100171660011790555b600182905580156101d6576000805461ff00191690555b5050565b60006101e5306101eb565b15905090565b3b15159056fe496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564a264697066735822122091fb795034025715b5bde54476cd03362f4578c12adaa83b5e3248a8b24875ca64736f6c634300060c0033",
  "deployedSourceMap": "873:219:112:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;273:16;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;592:162;;;;;;;;;;;;;;;;-1:-1:-1;592:162:112;;;;;;;:::i;:::-;;953:137;;;:::i;571:16::-;;;;;;;;;;;;;:::i;294:82::-;;;;;;;;;;;;;;;;-1:-1:-1;294:82:112;;:::i;273:16::-;;;;:::o;592:162::-;676:11;;;;675:12;667:21;;;;;;694:1;:9;;;709:1;:16;731:11;:18;;-1:-1:-1;;731:18:112;;;;;;592:162::o;953:137::-;1002:11;;;;1001:12;993:21;;;;;;1035:1;;;1046;;;1042:5;;1053:8;1067:11;:18;;-1:-1:-1;;1067:18:112;;;;;;953:137::o;571:16::-;;;;:::o;294:82::-;1501:13:127;;;;;;;;:33;;;1518:16;:14;:16::i;:::-;1501:50;;;-1:-1:-1;1539:12:127;;;;1538:13;1501:50;1493:109;;;;-1:-1:-1;;;1493:109:127;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1613:19;1636:13;;;;;;1635:14;1659:98;;;;1693:13;:20;;-1:-1:-1;;;;1693:20:127;;;;;1727:19;1709:4;1727:19;;;1659:98;362:1:112::1;:9:::0;;;1779:66:127;;;;1829:5;1813:21;;-1:-1:-1;;1813:21:127;;;1779:66;294:82:112;;:::o;1941:112:127:-;1989:4;2013:33;2040:4;2013:18;:33::i;:::-;2012:34;2005:41;;1941:112;:::o;726:413:161:-;1086:20;1124:8;;;726:413::o",
  "language": "Solidity",
  "natspec": {
    "details": "This contract is a mock to test migratable functionality without params",
    "kind": "dev",
    "methods": {},
    "title": "MigratableMockV3",
    "version": 1
  },
  "offset": [
    873,
    1092
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4A JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xC55699C EQ PUSH2 0x4F JUMPI DUP1 PUSH4 0x3E54BACB EQ PUSH2 0x76 JUMPI DUP1 PUSH4 0x8FD3AB80 EQ PUSH2 0x9B JUMPI DUP1 PUSH4 0xA56DFE4A EQ PUSH2 0xA3 JUMPI DUP1 PUSH4 0xFE4B84DF EQ PUSH2 0xB8 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x64 PUSH2 0xD5 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x99 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x8C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0xDB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x99 PUSH2 0x102 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xAF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x64 PUSH2 0x12C JUMP JUMPDEST PUSH2 0x99 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xCE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x132 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xEB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 SWAP2 DUP3 SSTORE PUSH1 0x3 SSTORE PUSH1 0x2 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x112 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x3 DUP1 SLOAD DUP4 SSTORE SSTORE PUSH1 0x4 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x14B JUMPI POP PUSH2 0x14B PUSH2 0x1DA JUMP JUMPDEST DUP1 PUSH2 0x159 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0x194 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1F2 PUSH1 0x2E SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x1BF JUMPI PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT PUSH2 0xFF00 NOT SWAP1 SWAP2 AND PUSH2 0x100 OR AND PUSH1 0x1 OR SWAP1 SSTORE JUMPDEST PUSH1 0x1 DUP3 SWAP1 SSTORE DUP1 ISZERO PUSH2 0x1D6 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E5 ADDRESS PUSH2 0x1EB JUMP JUMPDEST ISZERO SWAP1 POP SWAP1 JUMP JUMPDEST EXTCODESIZE ISZERO ISZERO SWAP1 JUMP INVALID 0x49 PUSH15 0x697469616C697A61626C653A20636F PUSH15 0x747261637420697320616C72656164 PUSH26 0x20696E697469616C697A6564A264697066735822122091FB7950 CALLVALUE MUL JUMPI ISZERO 0xB5 0xBD 0xE5 DIFFICULTY PUSH23 0xCD03362F4578C12ADAA83B5E3248A8B24875CA64736F6C PUSH4 0x4300060C STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        873,
        1092
      ],
      "op": "PUSH1",
      "path": "112",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        873,
        1092
      ],
      "op": "PUSH1",
      "path": "112",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        873,
        1092
      ],
      "op": "MSTORE",
      "path": "112"
    },
    "5": {
      "fn": null,
      "offset": [
        873,
        1092
      ],
      "op": "PUSH1",
      "path": "112",
      "value": "0x4"
    },
    "7": {
      "fn": null,
      "offset": [
        873,
        1092
      ],
      "op": "CALLDATASIZE",
      "path": "112"
    },
    "8": {
      "fn": null,
      "offset": [
        873,
        1092
      ],
      "op": "LT",
      "path": "112"
    },
    "9": {
      "fn": null,
      "offset": [
        873,
        1092
      ],
      "op": "PUSH2",
      "path": "112",
      "value": "0x4A"
    },
    "12": {
      "fn": null,
      "offset": [
        873,
        1092
      ],
      "op": "JUMPI",
      "path": "112"
    },
    "13": {
      "fn": null,
      "offset": [
        873,
        1092
      ],
      "op": "PUSH1",
      "path": "112",
      "value": "0x0"
    },
    "15": {
      "fn": null,
      "offset": [
        873,
        1092
      ],
      "op": "CALLDATALOAD",
      "path": "112"
    },
    "16": {
      "fn": null,
      "offset": [
        873,
        1092
      ],
      "op": "PUSH1",
      "path": "112",
      "value": "0xE0"
    },
    "18": {
      "fn": null,
      "offset": [
        873,
        1092
      ],
      "op": "SHR",
      "path": "112"
    },
    "19": {
      "fn": null,
      "offset": [
        873,
        1092
      ],
      "op": "DUP1",
      "path": "112"
    },
    "20": {
      "fn": null,
      "offset": [
        873,
        1092
      ],
      "op": "PUSH4",
      "path": "112",
      "value": "0xC55699C"
    },
    "25": {
      "fn": null,
      "offset": [
        873,
        1092
      ],
      "op": "EQ",
      "path": "112"
    },
    "26": {
      "fn": null,
      "offset": [
        873,
        1092
      ],
      "op": "PUSH2",
      "path": "112",
      "value": "0x4F"
    },
    "29": {
      "fn": null,
      "offset": [
        873,
        1092
      ],
      "op": "JUMPI",
      "path": "112"
    },
    "30": {
      "fn": null,
      "offset": [
        873,
        1092
      ],
      "op": "DUP1",
      "path": "112"
    },
    "31": {
      "fn": null,
      "offset": [
        873,
        1092
      ],
      "op": "PUSH4",
      "path": "112",
      "value": "0x3E54BACB"
    },
    "36": {
      "fn": null,
      "offset": [
        873,
        1092
      ],
      "op": "EQ",
      "path": "112"
    },
    "37": {
      "fn": null,
      "offset": [
        873,
        1092
      ],
      "op": "PUSH2",
      "path": "112",
      "value": "0x76"
    },
    "40": {
      "fn": null,
      "offset": [
        873,
        1092
      ],
      "op": "JUMPI",
      "path": "112"
    },
    "41": {
      "fn": null,
      "offset": [
        873,
        1092
      ],
      "op": "DUP1",
      "path": "112"
    },
    "42": {
      "fn": null,
      "offset": [
        873,
        1092
      ],
      "op": "PUSH4",
      "path": "112",
      "value": "0x8FD3AB80"
    },
    "47": {
      "fn": null,
      "offset": [
        873,
        1092
      ],
      "op": "EQ",
      "path": "112"
    },
    "48": {
      "fn": null,
      "offset": [
        873,
        1092
      ],
      "op": "PUSH2",
      "path": "112",
      "value": "0x9B"
    },
    "51": {
      "fn": null,
      "offset": [
        873,
        1092
      ],
      "op": "JUMPI",
      "path": "112"
    },
    "52": {
      "fn": null,
      "offset": [
        873,
        1092
      ],
      "op": "DUP1",
      "path": "112"
    },
    "53": {
      "fn": null,
      "offset": [
        873,
        1092
      ],
      "op": "PUSH4",
      "path": "112",
      "value": "0xA56DFE4A"
    },
    "58": {
      "fn": null,
      "offset": [
        873,
        1092
      ],
      "op": "EQ",
      "path": "112"
    },
    "59": {
      "fn": null,
      "offset": [
        873,
        1092
      ],
      "op": "PUSH2",
      "path": "112",
      "value": "0xA3"
    },
    "62": {
      "fn": null,
      "offset": [
        873,
        1092
      ],
      "op": "JUMPI",
      "path": "112"
    },
    "63": {
      "fn": null,
      "offset": [
        873,
        1092
      ],
      "op": "DUP1",
      "path": "112"
    },
    "64": {
      "fn": null,
      "offset": [
        873,
        1092
      ],
      "op": "PUSH4",
      "path": "112",
      "value": "0xFE4B84DF"
    },
    "69": {
      "fn": null,
      "offset": [
        873,
        1092
      ],
      "op": "EQ",
      "path": "112"
    },
    "70": {
      "fn": null,
      "offset": [
        873,
        1092
      ],
      "op": "PUSH2",
      "path": "112",
      "value": "0xB8"
    },
    "73": {
      "fn": null,
      "offset": [
        873,
        1092
      ],
      "op": "JUMPI",
      "path": "112"
    },
    "74": {
      "fn": null,
      "offset": [
        873,
        1092
      ],
      "op": "JUMPDEST",
      "path": "112"
    },
    "75": {
      "fn": null,
      "offset": [
        873,
        1092
      ],
      "op": "PUSH1",
      "path": "112",
      "value": "0x0"
    },
    "77": {
      "fn": null,
      "offset": [
        873,
        1092
      ],
      "op": "DUP1",
      "path": "112"
    },
    "78": {
      "first_revert": true,
      "fn": null,
      "offset": [
        873,
        1092
      ],
      "op": "REVERT",
      "path": "112"
    },
    "79": {
      "offset": [
        273,
        289
      ],
      "op": "JUMPDEST",
      "path": "112"
    },
    "80": {
      "fn": null,
      "offset": [
        273,
        289
      ],
      "op": "CALLVALUE",
      "path": "112"
    },
    "81": {
      "fn": null,
      "offset": [
        273,
        289
      ],
      "op": "DUP1",
      "path": "112"
    },
    "82": {
      "fn": null,
      "offset": [
        273,
        289
      ],
      "op": "ISZERO",
      "path": "112"
    },
    "83": {
      "fn": null,
      "offset": [
        273,
        289
      ],
      "op": "PUSH2",
      "path": "112",
      "value": "0x5B"
    },
    "86": {
      "fn": null,
      "offset": [
        273,
        289
      ],
      "op": "JUMPI",
      "path": "112"
    },
    "87": {
      "fn": null,
      "offset": [
        273,
        289
      ],
      "op": "PUSH1",
      "path": "112",
      "value": "0x0"
    },
    "89": {
      "fn": null,
      "offset": [
        273,
        289
      ],
      "op": "DUP1",
      "path": "112"
    },
    "90": {
      "fn": null,
      "offset": [
        273,
        289
      ],
      "op": "REVERT",
      "path": "112"
    },
    "91": {
      "fn": null,
      "offset": [
        273,
        289
      ],
      "op": "JUMPDEST",
      "path": "112"
    },
    "92": {
      "fn": null,
      "offset": [
        273,
        289
      ],
      "op": "POP",
      "path": "112"
    },
    "93": {
      "fn": null,
      "offset": [
        273,
        289
      ],
      "op": "PUSH2",
      "path": "112",
      "value": "0x64"
    },
    "96": {
      "fn": null,
      "offset": [
        273,
        289
      ],
      "op": "PUSH2",
      "path": "112",
      "value": "0xD5"
    },
    "99": {
      "fn": null,
      "jump": "i",
      "offset": [
        273,
        289
      ],
      "op": "JUMP",
      "path": "112"
    },
    "100": {
      "fn": null,
      "offset": [
        273,
        289
      ],
      "op": "JUMPDEST",
      "path": "112"
    },
    "101": {
      "fn": null,
      "offset": [
        273,
        289
      ],
      "op": "PUSH1",
      "path": "112",
      "value": "0x40"
    },
    "103": {
      "fn": null,
      "offset": [
        273,
        289
      ],
      "op": "DUP1",
      "path": "112"
    },
    "104": {
      "fn": null,
      "offset": [
        273,
        289
      ],
      "op": "MLOAD",
      "path": "112"
    },
    "105": {
      "fn": null,
      "offset": [
        273,
        289
      ],
      "op": "SWAP2",
      "path": "112"
    },
    "106": {
      "fn": null,
      "offset": [
        273,
        289
      ],
      "op": "DUP3",
      "path": "112"
    },
    "107": {
      "fn": null,
      "offset": [
        273,
        289
      ],
      "op": "MSTORE",
      "path": "112"
    },
    "108": {
      "fn": null,
      "offset": [
        273,
        289
      ],
      "op": "MLOAD",
      "path": "112"
    },
    "109": {
      "fn": null,
      "offset": [
        273,
        289
      ],
      "op": "SWAP1",
      "path": "112"
    },
    "110": {
      "fn": null,
      "offset": [
        273,
        289
      ],
      "op": "DUP2",
      "path": "112"
    },
    "111": {
      "fn": null,
      "offset": [
        273,
        289
      ],
      "op": "SWAP1",
      "path": "112"
    },
    "112": {
      "fn": null,
      "offset": [
        273,
        289
      ],
      "op": "SUB",
      "path": "112"
    },
    "113": {
      "fn": null,
      "offset": [
        273,
        289
      ],
      "op": "PUSH1",
      "path": "112",
      "value": "0x20"
    },
    "115": {
      "fn": null,
      "offset": [
        273,
        289
      ],
      "op": "ADD",
      "path": "112"
    },
    "116": {
      "fn": null,
      "offset": [
        273,
        289
      ],
      "op": "SWAP1",
      "path": "112"
    },
    "117": {
      "fn": null,
      "offset": [
        273,
        289
      ],
      "op": "RETURN",
      "path": "112"
    },
    "118": {
      "fn": "MigratableMockV2.migrate",
      "offset": [
        592,
        754
      ],
      "op": "JUMPDEST",
      "path": "112"
    },
    "119": {
      "fn": "MigratableMockV2.migrate",
      "offset": [
        592,
        754
      ],
      "op": "PUSH2",
      "path": "112",
      "value": "0x99"
    },
    "122": {
      "fn": "MigratableMockV2.migrate",
      "offset": [
        592,
        754
      ],
      "op": "PUSH1",
      "path": "112",
      "value": "0x4"
    },
    "124": {
      "fn": "MigratableMockV2.migrate",
      "offset": [
        592,
        754
      ],
      "op": "DUP1",
      "path": "112"
    },
    "125": {
      "fn": "MigratableMockV2.migrate",
      "offset": [
        592,
        754
      ],
      "op": "CALLDATASIZE",
      "path": "112"
    },
    "126": {
      "fn": "MigratableMockV2.migrate",
      "offset": [
        592,
        754
      ],
      "op": "SUB",
      "path": "112"
    },
    "127": {
      "fn": "MigratableMockV2.migrate",
      "offset": [
        592,
        754
      ],
      "op": "PUSH1",
      "path": "112",
      "value": "0x40"
    },
    "129": {
      "fn": "MigratableMockV2.migrate",
      "offset": [
        592,
        754
      ],
      "op": "DUP2",
      "path": "112"
    },
    "130": {
      "fn": "MigratableMockV2.migrate",
      "offset": [
        592,
        754
      ],
      "op": "LT",
      "path": "112"
    },
    "131": {
      "fn": "MigratableMockV2.migrate",
      "offset": [
        592,
        754
      ],
      "op": "ISZERO",
      "path": "112"
    },
    "132": {
      "fn": "MigratableMockV2.migrate",
      "offset": [
        592,
        754
      ],
      "op": "PUSH2",
      "path": "112",
      "value": "0x8C"
    },
    "135": {
      "fn": "MigratableMockV2.migrate",
      "offset": [
        592,
        754
      ],
      "op": "JUMPI",
      "path": "112"
    },
    "136": {
      "fn": "MigratableMockV2.migrate",
      "offset": [
        592,
        754
      ],
      "op": "PUSH1",
      "path": "112",
      "value": "0x0"
    },
    "138": {
      "fn": "MigratableMockV2.migrate",
      "offset": [
        592,
        754
      ],
      "op": "DUP1",
      "path": "112"
    },
    "139": {
      "fn": "MigratableMockV2.migrate",
      "offset": [
        592,
        754
      ],
      "op": "REVERT",
      "path": "112"
    },
    "140": {
      "fn": "MigratableMockV2.migrate",
      "offset": [
        592,
        754
      ],
      "op": "JUMPDEST",
      "path": "112"
    },
    "141": {
      "op": "POP"
    },
    "142": {
      "fn": "MigratableMockV2.migrate",
      "offset": [
        592,
        754
      ],
      "op": "DUP1",
      "path": "112"
    },
    "143": {
      "fn": "MigratableMockV2.migrate",
      "offset": [
        592,
        754
      ],
      "op": "CALLDATALOAD",
      "path": "112"
    },
    "144": {
      "fn": "MigratableMockV2.migrate",
      "offset": [
        592,
        754
      ],
      "op": "SWAP1",
      "path": "112"
    },
    "145": {
      "fn": "MigratableMockV2.migrate",
      "offset": [
        592,
        754
      ],
      "op": "PUSH1",
      "path": "112",
      "value": "0x20"
    },
    "147": {
      "fn": "MigratableMockV2.migrate",
      "offset": [
        592,
        754
      ],
      "op": "ADD",
      "path": "112"
    },
    "148": {
      "fn": "MigratableMockV2.migrate",
      "offset": [
        592,
        754
      ],
      "op": "CALLDATALOAD",
      "path": "112"
    },
    "149": {
      "fn": "MigratableMockV2.migrate",
      "offset": [
        592,
        754
      ],
      "op": "PUSH2",
      "path": "112",
      "value": "0xDB"
    },
    "152": {
      "fn": "MigratableMockV2.migrate",
      "jump": "i",
      "offset": [
        592,
        754
      ],
      "op": "JUMP",
      "path": "112"
    },
    "153": {
      "fn": "MigratableMockV2.migrate",
      "offset": [
        592,
        754
      ],
      "op": "JUMPDEST",
      "path": "112"
    },
    "154": {
      "fn": "MigratableMockV2.migrate",
      "offset": [
        592,
        754
      ],
      "op": "STOP",
      "path": "112"
    },
    "155": {
      "fn": "MigratableMockV3.migrate",
      "offset": [
        953,
        1090
      ],
      "op": "JUMPDEST",
      "path": "112"
    },
    "156": {
      "fn": "MigratableMockV3.migrate",
      "offset": [
        953,
        1090
      ],
      "op": "PUSH2",
      "path": "112",
      "value": "0x99"
    },
    "159": {
      "fn": "MigratableMockV3.migrate",
      "offset": [
        953,
        1090
      ],
      "op": "PUSH2",
      "path": "112",
      "value": "0x102"
    },
    "162": {
      "fn": "MigratableMockV3.migrate",
      "jump": "i",
      "offset": [
        953,
        1090
      ],
      "op": "JUMP",
      "path": "112"
    },
    "163": {
      "offset": [
        571,
        587
      ],
      "op": "JUMPDEST",
      "path": "112"
    },
    "164": {
      "fn": "MigratableMockV3.migrate",
      "offset": [
        571,
        587
      ],
      "op": "CALLVALUE",
      "path": "112"
    },
    "165": {
      "fn": "MigratableMockV3.migrate",
      "offset": [
        571,
        587
      ],
      "op": "DUP1",
      "path": "112"
    },
    "166": {
      "fn": "MigratableMockV3.migrate",
      "offset": [
        571,
        587
      ],
      "op": "ISZERO",
      "path": "112"
    },
    "167": {
      "fn": "MigratableMockV3.migrate",
      "offset": [
        571,
        587
      ],
      "op": "PUSH2",
      "path": "112",
      "value": "0xAF"
    },
    "170": {
      "fn": "MigratableMockV3.migrate",
      "offset": [
        571,
        587
      ],
      "op": "JUMPI",
      "path": "112"
    },
    "171": {
      "fn": "MigratableMockV3.migrate",
      "offset": [
        571,
        587
      ],
      "op": "PUSH1",
      "path": "112",
      "value": "0x0"
    },
    "173": {
      "fn": "MigratableMockV3.migrate",
      "offset": [
        571,
        587
      ],
      "op": "DUP1",
      "path": "112"
    },
    "174": {
      "fn": "MigratableMockV3.migrate",
      "offset": [
        571,
        587
      ],
      "op": "REVERT",
      "path": "112"
    },
    "175": {
      "fn": "MigratableMockV3.migrate",
      "offset": [
        571,
        587
      ],
      "op": "JUMPDEST",
      "path": "112"
    },
    "176": {
      "fn": "MigratableMockV3.migrate",
      "offset": [
        571,
        587
      ],
      "op": "POP",
      "path": "112"
    },
    "177": {
      "fn": "MigratableMockV3.migrate",
      "offset": [
        571,
        587
      ],
      "op": "PUSH2",
      "path": "112",
      "value": "0x64"
    },
    "180": {
      "fn": "MigratableMockV3.migrate",
      "offset": [
        571,
        587
      ],
      "op": "PUSH2",
      "path": "112",
      "value": "0x12C"
    },
    "183": {
      "fn": "MigratableMockV3.migrate",
      "jump": "i",
      "offset": [
        571,
        587
      ],
      "op": "JUMP",
      "path": "112"
    },
    "184": {
      "fn": "MigratableMockV1.initialize",
      "offset": [
        294,
        376
      ],
      "op": "JUMPDEST",
      "path": "112"
    },
    "185": {
      "fn": "MigratableMockV1.initialize",
      "offset": [
        294,
        376
      ],
      "op": "PUSH2",
      "path": "112",
      "value": "0x99"
    },
    "188": {
      "fn": "MigratableMockV1.initialize",
      "offset": [
        294,
        376
      ],
      "op": "PUSH1",
      "path": "112",
      "value": "0x4"
    },
    "190": {
      "fn": "MigratableMockV1.initialize",
      "offset": [
        294,
        376
      ],
      "op": "DUP1",
      "path": "112"
    },
    "191": {
      "fn": "MigratableMockV1.initialize",
      "offset": [
        294,
        376
      ],
      "op": "CALLDATASIZE",
      "path": "112"
    },
    "192": {
      "fn": "MigratableMockV1.initialize",
      "offset": [
        294,
        376
      ],
      "op": "SUB",
      "path": "112"
    },
    "193": {
      "fn": "MigratableMockV1.initialize",
      "offset": [
        294,
        376
      ],
      "op": "PUSH1",
      "path": "112",
      "value": "0x20"
    },
    "195": {
      "fn": "MigratableMockV1.initialize",
      "offset": [
        294,
        376
      ],
      "op": "DUP2",
      "path": "112"
    },
    "196": {
      "fn": "MigratableMockV1.initialize",
      "offset": [
        294,
        376
      ],
      "op": "LT",
      "path": "112"
    },
    "197": {
      "fn": "MigratableMockV1.initialize",
      "offset": [
        294,
        376
      ],
      "op": "ISZERO",
      "path": "112"
    },
    "198": {
      "fn": "MigratableMockV1.initialize",
      "offset": [
        294,
        376
      ],
      "op": "PUSH2",
      "path": "112",
      "value": "0xCE"
    },
    "201": {
      "fn": "MigratableMockV1.initialize",
      "offset": [
        294,
        376
      ],
      "op": "JUMPI",
      "path": "112"
    },
    "202": {
      "fn": "MigratableMockV1.initialize",
      "offset": [
        294,
        376
      ],
      "op": "PUSH1",
      "path": "112",
      "value": "0x0"
    },
    "204": {
      "fn": "MigratableMockV1.initialize",
      "offset": [
        294,
        376
      ],
      "op": "DUP1",
      "path": "112"
    },
    "205": {
      "fn": "MigratableMockV1.initialize",
      "offset": [
        294,
        376
      ],
      "op": "REVERT",
      "path": "112"
    },
    "206": {
      "fn": "MigratableMockV1.initialize",
      "offset": [
        294,
        376
      ],
      "op": "JUMPDEST",
      "path": "112"
    },
    "207": {
      "op": "POP"
    },
    "208": {
      "fn": "MigratableMockV1.initialize",
      "offset": [
        294,
        376
      ],
      "op": "CALLDATALOAD",
      "path": "112"
    },
    "209": {
      "fn": "MigratableMockV1.initialize",
      "offset": [
        294,
        376
      ],
      "op": "PUSH2",
      "path": "112",
      "value": "0x132"
    },
    "212": {
      "fn": "MigratableMockV1.initialize",
      "jump": "i",
      "offset": [
        294,
        376
      ],
      "op": "JUMP",
      "path": "112"
    },
    "213": {
      "offset": [
        273,
        289
      ],
      "op": "JUMPDEST",
      "path": "112"
    },
    "214": {
      "fn": "MigratableMockV1.initialize",
      "offset": [
        273,
        289
      ],
      "op": "PUSH1",
      "path": "112",
      "value": "0x1"
    },
    "216": {
      "fn": "MigratableMockV1.initialize",
      "offset": [
        273,
        289
      ],
      "op": "SLOAD",
      "path": "112"
    },
    "217": {
      "fn": "MigratableMockV1.initialize",
      "offset": [
        273,
        289
      ],
      "op": "DUP2",
      "path": "112"
    },
    "218": {
      "fn": "MigratableMockV1.initialize",
      "jump": "o",
      "offset": [
        273,
        289
      ],
      "op": "JUMP",
      "path": "112"
    },
    "219": {
      "fn": "MigratableMockV2.migrate",
      "offset": [
        592,
        754
      ],
      "op": "JUMPDEST",
      "path": "112"
    },
    "220": {
      "fn": "MigratableMockV2.migrate",
      "offset": [
        676,
        687
      ],
      "op": "PUSH1",
      "path": "112",
      "statement": 0,
      "value": "0x2"
    },
    "222": {
      "fn": "MigratableMockV2.migrate",
      "offset": [
        676,
        687
      ],
      "op": "SLOAD",
      "path": "112"
    },
    "223": {
      "fn": "MigratableMockV2.migrate",
      "offset": [
        676,
        687
      ],
      "op": "PUSH1",
      "path": "112",
      "value": "0xFF"
    },
    "225": {
      "fn": "MigratableMockV2.migrate",
      "offset": [
        676,
        687
      ],
      "op": "AND",
      "path": "112"
    },
    "226": {
      "branch": 11,
      "fn": "MigratableMockV2.migrate",
      "offset": [
        675,
        687
      ],
      "op": "ISZERO",
      "path": "112"
    },
    "227": {
      "fn": "MigratableMockV2.migrate",
      "offset": [
        667,
        688
      ],
      "op": "PUSH2",
      "path": "112",
      "value": "0xEB"
    },
    "230": {
      "branch": 11,
      "fn": "MigratableMockV2.migrate",
      "offset": [
        667,
        688
      ],
      "op": "JUMPI",
      "path": "112"
    },
    "231": {
      "fn": "MigratableMockV2.migrate",
      "offset": [
        667,
        688
      ],
      "op": "PUSH1",
      "path": "112",
      "value": "0x0"
    },
    "233": {
      "fn": "MigratableMockV2.migrate",
      "offset": [
        667,
        688
      ],
      "op": "DUP1",
      "path": "112"
    },
    "234": {
      "fn": "MigratableMockV2.migrate",
      "offset": [
        667,
        688
      ],
      "op": "REVERT",
      "path": "112"
    },
    "235": {
      "fn": "MigratableMockV2.migrate",
      "offset": [
        667,
        688
      ],
      "op": "JUMPDEST",
      "path": "112"
    },
    "236": {
      "fn": "MigratableMockV2.migrate",
      "offset": [
        694,
        695
      ],
      "op": "PUSH1",
      "path": "112",
      "statement": 1,
      "value": "0x1"
    },
    "238": {
      "fn": "MigratableMockV2.migrate",
      "offset": [
        694,
        703
      ],
      "op": "SWAP2",
      "path": "112"
    },
    "239": {
      "fn": "MigratableMockV2.migrate",
      "offset": [
        694,
        703
      ],
      "op": "DUP3",
      "path": "112"
    },
    "240": {
      "fn": "MigratableMockV2.migrate",
      "offset": [
        694,
        703
      ],
      "op": "SSTORE",
      "path": "112"
    },
    "241": {
      "fn": "MigratableMockV2.migrate",
      "offset": [
        709,
        710
      ],
      "op": "PUSH1",
      "path": "112",
      "statement": 2,
      "value": "0x3"
    },
    "243": {
      "fn": "MigratableMockV2.migrate",
      "offset": [
        709,
        725
      ],
      "op": "SSTORE",
      "path": "112"
    },
    "244": {
      "fn": "MigratableMockV2.migrate",
      "offset": [
        731,
        742
      ],
      "op": "PUSH1",
      "path": "112",
      "statement": 3,
      "value": "0x2"
    },
    "246": {
      "fn": "MigratableMockV2.migrate",
      "offset": [
        731,
        749
      ],
      "op": "DUP1",
      "path": "112"
    },
    "247": {
      "fn": "MigratableMockV2.migrate",
      "offset": [
        731,
        749
      ],
      "op": "SLOAD",
      "path": "112"
    },
    "248": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "250": {
      "op": "NOT"
    },
    "251": {
      "fn": "MigratableMockV2.migrate",
      "offset": [
        731,
        749
      ],
      "op": "AND",
      "path": "112"
    },
    "252": {
      "fn": "MigratableMockV2.migrate",
      "offset": [
        731,
        749
      ],
      "op": "SWAP1",
      "path": "112"
    },
    "253": {
      "fn": "MigratableMockV2.migrate",
      "offset": [
        731,
        749
      ],
      "op": "SWAP2",
      "path": "112"
    },
    "254": {
      "fn": "MigratableMockV2.migrate",
      "offset": [
        731,
        749
      ],
      "op": "OR",
      "path": "112"
    },
    "255": {
      "fn": "MigratableMockV2.migrate",
      "offset": [
        731,
        749
      ],
      "op": "SWAP1",
      "path": "112"
    },
    "256": {
      "fn": "MigratableMockV2.migrate",
      "offset": [
        731,
        749
      ],
      "op": "SSTORE",
      "path": "112"
    },
    "257": {
      "fn": "MigratableMockV2.migrate",
      "jump": "o",
      "offset": [
        592,
        754
      ],
      "op": "JUMP",
      "path": "112"
    },
    "258": {
      "fn": "MigratableMockV3.migrate",
      "offset": [
        953,
        1090
      ],
      "op": "JUMPDEST",
      "path": "112"
    },
    "259": {
      "fn": "MigratableMockV3.migrate",
      "offset": [
        1002,
        1013
      ],
      "op": "PUSH1",
      "path": "112",
      "statement": 4,
      "value": "0x4"
    },
    "261": {
      "fn": "MigratableMockV3.migrate",
      "offset": [
        1002,
        1013
      ],
      "op": "SLOAD",
      "path": "112"
    },
    "262": {
      "fn": "MigratableMockV3.migrate",
      "offset": [
        1002,
        1013
      ],
      "op": "PUSH1",
      "path": "112",
      "value": "0xFF"
    },
    "264": {
      "fn": "MigratableMockV3.migrate",
      "offset": [
        1002,
        1013
      ],
      "op": "AND",
      "path": "112"
    },
    "265": {
      "branch": 12,
      "fn": "MigratableMockV3.migrate",
      "offset": [
        1001,
        1013
      ],
      "op": "ISZERO",
      "path": "112"
    },
    "266": {
      "fn": "MigratableMockV3.migrate",
      "offset": [
        993,
        1014
      ],
      "op": "PUSH2",
      "path": "112",
      "value": "0x112"
    },
    "269": {
      "branch": 12,
      "fn": "MigratableMockV3.migrate",
      "offset": [
        993,
        1014
      ],
      "op": "JUMPI",
      "path": "112"
    },
    "270": {
      "fn": "MigratableMockV3.migrate",
      "offset": [
        993,
        1014
      ],
      "op": "PUSH1",
      "path": "112",
      "value": "0x0"
    },
    "272": {
      "fn": "MigratableMockV3.migrate",
      "offset": [
        993,
        1014
      ],
      "op": "DUP1",
      "path": "112"
    },
    "273": {
      "fn": "MigratableMockV3.migrate",
      "offset": [
        993,
        1014
      ],
      "op": "REVERT",
      "path": "112"
    },
    "274": {
      "fn": "MigratableMockV3.migrate",
      "offset": [
        993,
        1014
      ],
      "op": "JUMPDEST",
      "path": "112"
    },
    "275": {
      "fn": "MigratableMockV3.migrate",
      "offset": [
        1035,
        1036
      ],
      "op": "PUSH1",
      "path": "112",
      "value": "0x1"
    },
    "277": {
      "fn": "MigratableMockV3.migrate",
      "offset": [
        1035,
        1036
      ],
      "op": "DUP1",
      "path": "112"
    },
    "278": {
      "fn": "MigratableMockV3.migrate",
      "offset": [
        1035,
        1036
      ],
      "op": "SLOAD",
      "path": "112"
    },
    "279": {
      "fn": "MigratableMockV3.migrate",
      "offset": [
        1046,
        1047
      ],
      "op": "PUSH1",
      "path": "112",
      "statement": 5,
      "value": "0x3"
    },
    "281": {
      "fn": "MigratableMockV3.migrate",
      "offset": [
        1046,
        1047
      ],
      "op": "DUP1",
      "path": "112"
    },
    "282": {
      "fn": "MigratableMockV3.migrate",
      "offset": [
        1046,
        1047
      ],
      "op": "SLOAD",
      "path": "112"
    },
    "283": {
      "fn": "MigratableMockV3.migrate",
      "offset": [
        1042,
        1047
      ],
      "op": "DUP4",
      "path": "112"
    },
    "284": {
      "fn": "MigratableMockV3.migrate",
      "offset": [
        1042,
        1047
      ],
      "op": "SSTORE",
      "path": "112"
    },
    "285": {
      "fn": "MigratableMockV3.migrate",
      "offset": [
        1053,
        1061
      ],
      "op": "SSTORE",
      "path": "112",
      "statement": 6
    },
    "286": {
      "fn": "MigratableMockV3.migrate",
      "offset": [
        1067,
        1078
      ],
      "op": "PUSH1",
      "path": "112",
      "statement": 7,
      "value": "0x4"
    },
    "288": {
      "fn": "MigratableMockV3.migrate",
      "offset": [
        1067,
        1085
      ],
      "op": "DUP1",
      "path": "112"
    },
    "289": {
      "fn": "MigratableMockV3.migrate",
      "offset": [
        1067,
        1085
      ],
      "op": "SLOAD",
      "path": "112"
    },
    "290": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "292": {
      "op": "NOT"
    },
    "293": {
      "fn": "MigratableMockV3.migrate",
      "offset": [
        1067,
        1085
      ],
      "op": "AND",
      "path": "112"
    },
    "294": {
      "fn": "MigratableMockV3.migrate",
      "offset": [
        1067,
        1085
      ],
      "op": "SWAP1",
      "path": "112"
    },
    "295": {
      "fn": "MigratableMockV3.migrate",
      "offset": [
        1067,
        1085
      ],
      "op": "SWAP2",
      "path": "112"
    },
    "296": {
      "fn": "MigratableMockV3.migrate",
      "offset": [
        1067,
        1085
      ],
      "op": "OR",
      "path": "112"
    },
    "297": {
      "fn": "MigratableMockV3.migrate",
      "offset": [
        1067,
        1085
      ],
      "op": "SWAP1",
      "path": "112"
    },
    "298": {
      "fn": "MigratableMockV3.migrate",
      "offset": [
        1067,
        1085
      ],
      "op": "SSTORE",
      "path": "112"
    },
    "299": {
      "fn": "MigratableMockV3.migrate",
      "jump": "o",
      "offset": [
        953,
        1090
      ],
      "op": "JUMP",
      "path": "112"
    },
    "300": {
      "offset": [
        571,
        587
      ],
      "op": "JUMPDEST",
      "path": "112"
    },
    "301": {
      "fn": "MigratableMockV3.migrate",
      "offset": [
        571,
        587
      ],
      "op": "PUSH1",
      "path": "112",
      "value": "0x3"
    },
    "303": {
      "fn": "MigratableMockV3.migrate",
      "offset": [
        571,
        587
      ],
      "op": "SLOAD",
      "path": "112"
    },
    "304": {
      "fn": "MigratableMockV3.migrate",
      "offset": [
        571,
        587
      ],
      "op": "DUP2",
      "path": "112"
    },
    "305": {
      "fn": "MigratableMockV3.migrate",
      "jump": "o",
      "offset": [
        571,
        587
      ],
      "op": "JUMP",
      "path": "112"
    },
    "306": {
      "fn": "MigratableMockV1.initialize",
      "offset": [
        294,
        376
      ],
      "op": "JUMPDEST",
      "path": "112"
    },
    "307": {
      "offset": [
        1501,
        1514
      ],
      "op": "PUSH1",
      "path": "127",
      "value": "0x0"
    },
    "309": {
      "fn": "MigratableMockV1.initialize",
      "offset": [
        1501,
        1514
      ],
      "op": "SLOAD",
      "path": "127"
    },
    "310": {
      "fn": "MigratableMockV1.initialize",
      "offset": [
        1501,
        1514
      ],
      "op": "PUSH2",
      "path": "127",
      "value": "0x100"
    },
    "313": {
      "fn": "MigratableMockV1.initialize",
      "offset": [
        1501,
        1514
      ],
      "op": "SWAP1",
      "path": "127"
    },
    "314": {
      "fn": "MigratableMockV1.initialize",
      "offset": [
        1501,
        1514
      ],
      "op": "DIV",
      "path": "127"
    },
    "315": {
      "fn": "MigratableMockV1.initialize",
      "offset": [
        1501,
        1514
      ],
      "op": "PUSH1",
      "path": "127",
      "value": "0xFF"
    },
    "317": {
      "fn": "MigratableMockV1.initialize",
      "offset": [
        1501,
        1514
      ],
      "op": "AND",
      "path": "127"
    },
    "318": {
      "branch": 13,
      "fn": "MigratableMockV1.initialize",
      "offset": [
        1501,
        1514
      ],
      "op": "DUP1",
      "path": "127"
    },
    "319": {
      "offset": [
        1501,
        1534
      ],
      "op": "PUSH2",
      "path": "127",
      "value": "0x14B"
    },
    "322": {
      "branch": 13,
      "offset": [
        1501,
        1534
      ],
      "op": "JUMPI",
      "path": "127"
    },
    "323": {
      "fn": "MigratableMockV1.initialize",
      "offset": [
        1501,
        1534
      ],
      "op": "POP",
      "path": "127"
    },
    "324": {
      "offset": [
        1518,
        1534
      ],
      "op": "PUSH2",
      "path": "127",
      "value": "0x14B"
    },
    "327": {
      "offset": [
        1518,
        1532
      ],
      "op": "PUSH2",
      "path": "127",
      "value": "0x1DA"
    },
    "330": {
      "jump": "i",
      "offset": [
        1518,
        1534
      ],
      "op": "JUMP",
      "path": "127"
    },
    "331": {
      "branch": 14,
      "fn": "MigratableMockV1.initialize",
      "offset": [
        1518,
        1534
      ],
      "op": "JUMPDEST",
      "path": "127"
    },
    "332": {
      "offset": [
        1501,
        1551
      ],
      "op": "DUP1",
      "path": "127"
    },
    "333": {
      "fn": "MigratableMockV1.initialize",
      "offset": [
        1501,
        1551
      ],
      "op": "PUSH2",
      "path": "127",
      "value": "0x159"
    },
    "336": {
      "branch": 14,
      "offset": [
        1501,
        1551
      ],
      "op": "JUMPI",
      "path": "127"
    },
    "337": {
      "op": "POP"
    },
    "338": {
      "offset": [
        1539,
        1551
      ],
      "op": "PUSH1",
      "path": "127",
      "value": "0x0"
    },
    "340": {
      "fn": "MigratableMockV1.initialize",
      "offset": [
        1539,
        1551
      ],
      "op": "SLOAD",
      "path": "127"
    },
    "341": {
      "fn": "MigratableMockV1.initialize",
      "offset": [
        1539,
        1551
      ],
      "op": "PUSH1",
      "path": "127",
      "value": "0xFF"
    },
    "343": {
      "branch": 15,
      "fn": "MigratableMockV1.initialize",
      "offset": [
        1539,
        1551
      ],
      "op": "AND",
      "path": "127"
    },
    "344": {
      "offset": [
        1538,
        1551
      ],
      "op": "ISZERO",
      "path": "127"
    },
    "345": {
      "offset": [
        1501,
        1551
      ],
      "op": "JUMPDEST",
      "path": "127"
    },
    "346": {
      "offset": [
        1493,
        1602
      ],
      "op": "PUSH2",
      "path": "127",
      "value": "0x194"
    },
    "349": {
      "branch": 15,
      "offset": [
        1493,
        1602
      ],
      "op": "JUMPI",
      "path": "127"
    },
    "350": {
      "fn": "MigratableMockV1.initialize",
      "offset": [
        1493,
        1602
      ],
      "op": "PUSH1",
      "path": "127",
      "value": "0x40"
    },
    "352": {
      "fn": "MigratableMockV1.initialize",
      "offset": [
        1493,
        1602
      ],
      "op": "MLOAD",
      "path": "127"
    },
    "353": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "357": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "359": {
      "op": "SHL"
    },
    "360": {
      "offset": [
        1493,
        1602
      ],
      "op": "DUP2",
      "path": "127"
    },
    "361": {
      "fn": "MigratableMockV1.initialize",
      "offset": [
        1493,
        1602
      ],
      "op": "MSTORE",
      "path": "127"
    },
    "362": {
      "fn": "MigratableMockV1.initialize",
      "offset": [
        1493,
        1602
      ],
      "op": "PUSH1",
      "path": "127",
      "value": "0x4"
    },
    "364": {
      "fn": "MigratableMockV1.initialize",
      "offset": [
        1493,
        1602
      ],
      "op": "ADD",
      "path": "127"
    },
    "365": {
      "fn": "MigratableMockV1.initialize",
      "offset": [
        1493,
        1602
      ],
      "op": "DUP1",
      "path": "127"
    },
    "366": {
      "fn": "MigratableMockV1.initialize",
      "offset": [
        1493,
        1602
      ],
      "op": "DUP1",
      "path": "127"
    },
    "367": {
      "fn": "MigratableMockV1.initialize",
      "offset": [
        1493,
        1602
      ],
      "op": "PUSH1",
      "path": "127",
      "value": "0x20"
    },
    "369": {
      "fn": "MigratableMockV1.initialize",
      "offset": [
        1493,
        1602
      ],
      "op": "ADD",
      "path": "127"
    },
    "370": {
      "fn": "MigratableMockV1.initialize",
      "offset": [
        1493,
        1602
      ],
      "op": "DUP3",
      "path": "127"
    },
    "371": {
      "fn": "MigratableMockV1.initialize",
      "offset": [
        1493,
        1602
      ],
      "op": "DUP2",
      "path": "127"
    },
    "372": {
      "fn": "MigratableMockV1.initialize",
      "offset": [
        1493,
        1602
      ],
      "op": "SUB",
      "path": "127"
    },
    "373": {
      "fn": "MigratableMockV1.initialize",
      "offset": [
        1493,
        1602
      ],
      "op": "DUP3",
      "path": "127"
    },
    "374": {
      "fn": "MigratableMockV1.initialize",
      "offset": [
        1493,
        1602
      ],
      "op": "MSTORE",
      "path": "127"
    },
    "375": {
      "fn": "MigratableMockV1.initialize",
      "offset": [
        1493,
        1602
      ],
      "op": "PUSH1",
      "path": "127",
      "value": "0x2E"
    },
    "377": {
      "fn": "MigratableMockV1.initialize",
      "offset": [
        1493,
        1602
      ],
      "op": "DUP2",
      "path": "127"
    },
    "378": {
      "fn": "MigratableMockV1.initialize",
      "offset": [
        1493,
        1602
      ],
      "op": "MSTORE",
      "path": "127"
    },
    "379": {
      "fn": "MigratableMockV1.initialize",
      "offset": [
        1493,
        1602
      ],
      "op": "PUSH1",
      "path": "127",
      "value": "0x20"
    },
    "381": {
      "fn": "MigratableMockV1.initialize",
      "offset": [
        1493,
        1602
      ],
      "op": "ADD",
      "path": "127"
    },
    "382": {
      "fn": "MigratableMockV1.initialize",
      "offset": [
        1493,
        1602
      ],
      "op": "DUP1",
      "path": "127"
    },
    "383": {
      "fn": "MigratableMockV1.initialize",
      "offset": [
        1493,
        1602
      ],
      "op": "PUSH2",
      "path": "127",
      "value": "0x1F2"
    },
    "386": {
      "fn": "MigratableMockV1.initialize",
      "offset": [
        1493,
        1602
      ],
      "op": "PUSH1",
      "path": "127",
      "value": "0x2E"
    },
    "388": {
      "fn": "MigratableMockV1.initialize",
      "offset": [
        1493,
        1602
      ],
      "op": "SWAP2",
      "path": "127"
    },
    "389": {
      "fn": "MigratableMockV1.initialize",
      "offset": [
        1493,
        1602
      ],
      "op": "CODECOPY",
      "path": "127"
    },
    "390": {
      "fn": "MigratableMockV1.initialize",
      "offset": [
        1493,
        1602
      ],
      "op": "PUSH1",
      "path": "127",
      "value": "0x40"
    },
    "392": {
      "fn": "MigratableMockV1.initialize",
      "offset": [
        1493,
        1602
      ],
      "op": "ADD",
      "path": "127"
    },
    "393": {
      "fn": "MigratableMockV1.initialize",
      "offset": [
        1493,
        1602
      ],
      "op": "SWAP2",
      "path": "127"
    },
    "394": {
      "fn": "MigratableMockV1.initialize",
      "offset": [
        1493,
        1602
      ],
      "op": "POP",
      "path": "127"
    },
    "395": {
      "fn": "MigratableMockV1.initialize",
      "offset": [
        1493,
        1602
      ],
      "op": "POP",
      "path": "127"
    },
    "396": {
      "fn": "MigratableMockV1.initialize",
      "offset": [
        1493,
        1602
      ],
      "op": "PUSH1",
      "path": "127",
      "value": "0x40"
    },
    "398": {
      "fn": "MigratableMockV1.initialize",
      "offset": [
        1493,
        1602
      ],
      "op": "MLOAD",
      "path": "127"
    },
    "399": {
      "fn": "MigratableMockV1.initialize",
      "offset": [
        1493,
        1602
      ],
      "op": "DUP1",
      "path": "127"
    },
    "400": {
      "fn": "MigratableMockV1.initialize",
      "offset": [
        1493,
        1602
      ],
      "op": "SWAP2",
      "path": "127"
    },
    "401": {
      "fn": "MigratableMockV1.initialize",
      "offset": [
        1493,
        1602
      ],
      "op": "SUB",
      "path": "127"
    },
    "402": {
      "fn": "MigratableMockV1.initialize",
      "offset": [
        1493,
        1602
      ],
      "op": "SWAP1",
      "path": "127"
    },
    "403": {
      "fn": "MigratableMockV1.initialize",
      "offset": [
        1493,
        1602
      ],
      "op": "REVERT",
      "path": "127"
    },
    "404": {
      "fn": "MigratableMockV1.initialize",
      "offset": [
        1493,
        1602
      ],
      "op": "JUMPDEST",
      "path": "127"
    },
    "405": {
      "offset": [
        1613,
        1632
      ],
      "op": "PUSH1",
      "path": "127",
      "value": "0x0"
    },
    "407": {
      "offset": [
        1636,
        1649
      ],
      "op": "SLOAD",
      "path": "127"
    },
    "408": {
      "fn": "MigratableMockV1.initialize",
      "offset": [
        1636,
        1649
      ],
      "op": "PUSH2",
      "path": "127",
      "value": "0x100"
    },
    "411": {
      "fn": "MigratableMockV1.initialize",
      "offset": [
        1636,
        1649
      ],
      "op": "SWAP1",
      "path": "127"
    },
    "412": {
      "fn": "MigratableMockV1.initialize",
      "offset": [
        1636,
        1649
      ],
      "op": "DIV",
      "path": "127"
    },
    "413": {
      "fn": "MigratableMockV1.initialize",
      "offset": [
        1636,
        1649
      ],
      "op": "PUSH1",
      "path": "127",
      "value": "0xFF"
    },
    "415": {
      "fn": "MigratableMockV1.initialize",
      "offset": [
        1636,
        1649
      ],
      "op": "AND",
      "path": "127"
    },
    "416": {
      "offset": [
        1635,
        1649
      ],
      "op": "ISZERO",
      "path": "127"
    },
    "417": {
      "offset": [
        1659,
        1757
      ],
      "op": "DUP1",
      "path": "127"
    },
    "418": {
      "fn": "MigratableMockV1.initialize",
      "offset": [
        1659,
        1757
      ],
      "op": "ISZERO",
      "path": "127"
    },
    "419": {
      "fn": "MigratableMockV1.initialize",
      "offset": [
        1659,
        1757
      ],
      "op": "PUSH2",
      "path": "127",
      "value": "0x1BF"
    },
    "422": {
      "fn": "MigratableMockV1.initialize",
      "offset": [
        1659,
        1757
      ],
      "op": "JUMPI",
      "path": "127"
    },
    "423": {
      "offset": [
        1693,
        1706
      ],
      "op": "PUSH1",
      "path": "127",
      "value": "0x0"
    },
    "425": {
      "offset": [
        1693,
        1713
      ],
      "op": "DUP1",
      "path": "127"
    },
    "426": {
      "fn": "MigratableMockV1.initialize",
      "offset": [
        1693,
        1713
      ],
      "op": "SLOAD",
      "path": "127"
    },
    "427": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "429": {
      "op": "NOT"
    },
    "430": {
      "op": "PUSH2",
      "value": "0xFF00"
    },
    "433": {
      "op": "NOT"
    },
    "434": {
      "offset": [
        1693,
        1713
      ],
      "op": "SWAP1",
      "path": "127"
    },
    "435": {
      "fn": "MigratableMockV1.initialize",
      "offset": [
        1693,
        1713
      ],
      "op": "SWAP2",
      "path": "127"
    },
    "436": {
      "fn": "MigratableMockV1.initialize",
      "offset": [
        1693,
        1713
      ],
      "op": "AND",
      "path": "127"
    },
    "437": {
      "fn": "MigratableMockV1.initialize",
      "offset": [
        1693,
        1713
      ],
      "op": "PUSH2",
      "path": "127",
      "value": "0x100"
    },
    "440": {
      "fn": "MigratableMockV1.initialize",
      "offset": [
        1693,
        1713
      ],
      "op": "OR",
      "path": "127"
    },
    "441": {
      "offset": [
        1727,
        1746
      ],
      "op": "AND",
      "path": "127"
    },
    "442": {
      "offset": [
        1709,
        1713
      ],
      "op": "PUSH1",
      "path": "127",
      "value": "0x1"
    },
    "444": {
      "offset": [
        1727,
        1746
      ],
      "op": "OR",
      "path": "127"
    },
    "445": {
      "fn": "MigratableMockV1.initialize",
      "offset": [
        1727,
        1746
      ],
      "op": "SWAP1",
      "path": "127"
    },
    "446": {
      "fn": "MigratableMockV1.initialize",
      "offset": [
        1727,
        1746
      ],
      "op": "SSTORE",
      "path": "127"
    },
    "447": {
      "offset": [
        1659,
        1757
      ],
      "op": "JUMPDEST",
      "path": "127"
    },
    "448": {
      "fn": "MigratableMockV1.initialize",
      "offset": [
        362,
        363
      ],
      "op": "PUSH1",
      "path": "112",
      "statement": 8,
      "value": "0x1"
    },
    "450": {
      "fn": "MigratableMockV1.initialize",
      "offset": [
        362,
        371
      ],
      "op": "DUP3",
      "path": "112"
    },
    "451": {
      "fn": "MigratableMockV1.initialize",
      "offset": [
        362,
        371
      ],
      "op": "SWAP1",
      "path": "112"
    },
    "452": {
      "fn": "MigratableMockV1.initialize",
      "offset": [
        362,
        371
      ],
      "op": "SSTORE",
      "path": "112"
    },
    "453": {
      "offset": [
        1779,
        1845
      ],
      "op": "DUP1",
      "path": "127"
    },
    "454": {
      "fn": "MigratableMockV1.initialize",
      "offset": [
        1779,
        1845
      ],
      "op": "ISZERO",
      "path": "127"
    },
    "455": {
      "fn": "MigratableMockV1.initialize",
      "offset": [
        1779,
        1845
      ],
      "op": "PUSH2",
      "path": "127",
      "value": "0x1D6"
    },
    "458": {
      "fn": "MigratableMockV1.initialize",
      "offset": [
        1779,
        1845
      ],
      "op": "JUMPI",
      "path": "127"
    },
    "459": {
      "offset": [
        1829,
        1834
      ],
      "op": "PUSH1",
      "path": "127",
      "value": "0x0"
    },
    "461": {
      "offset": [
        1813,
        1834
      ],
      "op": "DUP1",
      "path": "127"
    },
    "462": {
      "fn": "MigratableMockV1.initialize",
      "offset": [
        1813,
        1834
      ],
      "op": "SLOAD",
      "path": "127"
    },
    "463": {
      "op": "PUSH2",
      "value": "0xFF00"
    },
    "466": {
      "op": "NOT"
    },
    "467": {
      "offset": [
        1813,
        1834
      ],
      "op": "AND",
      "path": "127"
    },
    "468": {
      "fn": "MigratableMockV1.initialize",
      "offset": [
        1813,
        1834
      ],
      "op": "SWAP1",
      "path": "127"
    },
    "469": {
      "fn": "MigratableMockV1.initialize",
      "offset": [
        1813,
        1834
      ],
      "op": "SSTORE",
      "path": "127"
    },
    "470": {
      "offset": [
        1779,
        1845
      ],
      "op": "JUMPDEST",
      "path": "127"
    },
    "471": {
      "fn": "MigratableMockV1.initialize",
      "offset": [
        294,
        376
      ],
      "op": "POP",
      "path": "112"
    },
    "472": {
      "fn": "MigratableMockV1.initialize",
      "offset": [
        294,
        376
      ],
      "op": "POP",
      "path": "112"
    },
    "473": {
      "fn": "MigratableMockV1.initialize",
      "jump": "o",
      "offset": [
        294,
        376
      ],
      "op": "JUMP",
      "path": "112"
    },
    "474": {
      "fn": "Initializable._isConstructor",
      "offset": [
        1941,
        2053
      ],
      "op": "JUMPDEST",
      "path": "127"
    },
    "475": {
      "fn": "Initializable._isConstructor",
      "offset": [
        1989,
        1993
      ],
      "op": "PUSH1",
      "path": "127",
      "value": "0x0"
    },
    "477": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2013,
        2046
      ],
      "op": "PUSH2",
      "path": "127",
      "statement": 9,
      "value": "0x1E5"
    },
    "480": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2040,
        2044
      ],
      "op": "ADDRESS",
      "path": "127"
    },
    "481": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2013,
        2031
      ],
      "op": "PUSH2",
      "path": "127",
      "value": "0x1EB"
    },
    "484": {
      "fn": "Initializable._isConstructor",
      "jump": "i",
      "offset": [
        2013,
        2046
      ],
      "op": "JUMP",
      "path": "127"
    },
    "485": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2013,
        2046
      ],
      "op": "JUMPDEST",
      "path": "127"
    },
    "486": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2012,
        2046
      ],
      "op": "ISZERO",
      "path": "127"
    },
    "487": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2005,
        2046
      ],
      "op": "SWAP1",
      "path": "127"
    },
    "488": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2005,
        2046
      ],
      "op": "POP",
      "path": "127"
    },
    "489": {
      "fn": "Initializable._isConstructor",
      "offset": [
        1941,
        2053
      ],
      "op": "SWAP1",
      "path": "127"
    },
    "490": {
      "fn": "Initializable._isConstructor",
      "jump": "o",
      "offset": [
        1941,
        2053
      ],
      "op": "JUMP",
      "path": "127"
    },
    "491": {
      "fn": "Address.isContract",
      "offset": [
        726,
        1139
      ],
      "op": "JUMPDEST",
      "path": "161"
    },
    "492": {
      "fn": "Address.isContract",
      "offset": [
        1086,
        1106
      ],
      "op": "EXTCODESIZE",
      "path": "161"
    },
    "493": {
      "fn": "Address.isContract",
      "offset": [
        1124,
        1132
      ],
      "op": "ISZERO",
      "path": "161",
      "statement": 10
    },
    "494": {
      "fn": "Address.isContract",
      "offset": [
        1124,
        1132
      ],
      "op": "ISZERO",
      "path": "161"
    },
    "495": {
      "fn": "Address.isContract",
      "offset": [
        1124,
        1132
      ],
      "op": "SWAP1",
      "path": "161"
    },
    "496": {
      "fn": "Address.isContract",
      "jump": "o",
      "offset": [
        726,
        1139
      ],
      "op": "JUMP",
      "path": "161"
    }
  },
  "sha1": "4b0e8af406589c771586de13641f3868aa1cbd7b",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.0 <0.8.0;\n\nimport \"../proxy/Initializable.sol\";\n\n/**\n * @title MigratableMockV1\n * @dev This contract is a mock to test initializable functionality through migrations\n */\ncontract MigratableMockV1 is Initializable {\n  uint256 public x;\n\n  function initialize(uint256 value) public payable initializer {\n    x = value;\n  }\n}\n\n/**\n * @title MigratableMockV2\n * @dev This contract is a mock to test migratable functionality with params\n */\ncontract MigratableMockV2 is MigratableMockV1 {\n  bool internal _migratedV2;\n  uint256 public y;\n\n  function migrate(uint256 value, uint256 anotherValue) public payable {\n    require(!_migratedV2);\n    x = value;\n    y = anotherValue;\n    _migratedV2 = true;\n  }\n}\n\n/**\n * @title MigratableMockV3\n * @dev This contract is a mock to test migratable functionality without params\n */\ncontract MigratableMockV3 is MigratableMockV2 {\n  bool internal _migratedV3;\n\n  function migrate() public payable {\n    require(!_migratedV3);\n    uint256 oldX = x;\n    x = y;\n    y = oldX;\n    _migratedV3 = true;\n  }\n}\n",
  "sourceMap": "873:219:112:-:0;;;;;;;;;;;;;;;;;;;",
  "sourcePath": "contracts/openzeppelin/mocks/SingleInheritanceInitializableMocks.sol",
  "type": "contract"
}