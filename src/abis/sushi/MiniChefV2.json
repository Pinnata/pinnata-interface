{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "_sushi",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "pid",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "Deposit",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "pid",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "EmergencyWithdraw",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "pid",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Harvest",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "pid",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "allocPoint",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "contract IERC20",
          "name": "lpToken",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "contract IRewarder",
          "name": "rewarder",
          "type": "address"
        }
      ],
      "name": "LogPoolAddition",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "pid",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "allocPoint",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "contract IRewarder",
          "name": "rewarder",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "overwrite",
          "type": "bool"
        }
      ],
      "name": "LogSetPool",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "sushiPerSecond",
          "type": "uint256"
        }
      ],
      "name": "LogSushiPerSecond",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "pid",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint64",
          "name": "lastRewardTime",
          "type": "uint64"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "lpSupply",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "accSushiPerShare",
          "type": "uint256"
        }
      ],
      "name": "LogUpdatePool",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "pid",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "Withdraw",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "SUSHI",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "allocPoint",
          "type": "uint256"
        },
        {
          "internalType": "contract IERC20",
          "name": "_lpToken",
          "type": "address"
        },
        {
          "internalType": "contract IRewarder",
          "name": "_rewarder",
          "type": "address"
        }
      ],
      "name": "add",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "addedTokens",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes[]",
          "name": "calls",
          "type": "bytes[]"
        },
        {
          "internalType": "bool",
          "name": "revertOnFail",
          "type": "bool"
        }
      ],
      "name": "batch",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "claimOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "pid",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "deposit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "pid",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "emergencyWithdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "pid",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "harvest",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "lpToken",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256[]",
          "name": "pids",
          "type": "uint256[]"
        }
      ],
      "name": "massUpdatePools",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_pid",
          "type": "uint256"
        }
      ],
      "name": "migrate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "migrator",
      "outputs": [
        {
          "internalType": "contract IMigratorChef",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pendingOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_pid",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        }
      ],
      "name": "pendingSushi",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "pending",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "v",
          "type": "uint8"
        },
        {
          "internalType": "bytes32",
          "name": "r",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "s",
          "type": "bytes32"
        }
      ],
      "name": "permitToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "poolInfo",
      "outputs": [
        {
          "internalType": "uint128",
          "name": "accSushiPerShare",
          "type": "uint128"
        },
        {
          "internalType": "uint64",
          "name": "lastRewardTime",
          "type": "uint64"
        },
        {
          "internalType": "uint64",
          "name": "allocPoint",
          "type": "uint64"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "poolLength",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "pools",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "rewarder",
      "outputs": [
        {
          "internalType": "contract IRewarder",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_pid",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_allocPoint",
          "type": "uint256"
        },
        {
          "internalType": "contract IRewarder",
          "name": "_rewarder",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "overwrite",
          "type": "bool"
        }
      ],
      "name": "set",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IMigratorChef",
          "name": "_migrator",
          "type": "address"
        }
      ],
      "name": "setMigrator",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_sushiPerSecond",
          "type": "uint256"
        }
      ],
      "name": "setSushiPerSecond",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "sushiPerSecond",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalAllocPoint",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "direct",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "renounce",
          "type": "bool"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "pid",
          "type": "uint256"
        }
      ],
      "name": "updatePool",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint128",
              "name": "accSushiPerShare",
              "type": "uint128"
            },
            {
              "internalType": "uint64",
              "name": "lastRewardTime",
              "type": "uint64"
            },
            {
              "internalType": "uint64",
              "name": "allocPoint",
              "type": "uint64"
            }
          ],
          "internalType": "struct MiniChefV2.PoolInfo",
          "name": "pool",
          "type": "tuple"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "userInfo",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "int256",
          "name": "rewardDebt",
          "type": "int256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "pid",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "pid",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "withdrawAndHarvest",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "11": "contracts/BoringSolidity/contracts/BoringOwnable.sol",
    "14": "contracts/BoringSolidity/contracts/interfaces/IERC20.sol",
    "16": "contracts/BoringSolidity/contracts/libraries/BoringERC20.sol",
    "17": "contracts/BoringSolidity/contracts/libraries/BoringMath.sol",
    "28": "contracts/MiniChefV2.sol",
    "40": "contracts/interfaces/IRewarder.sol",
    "43": "contracts/libraries/SignedSafeMath.sol",
    "8": "contracts/BoringSolidity/contracts/BoringBatchable.sol"
  },
  "ast": {
    "absolutePath": "contracts/MiniChefV2.sol",
    "exportedSymbols": {
      "IMigratorChef": [
        5228
      ],
      "MiniChefV2": [
        6420
      ]
    },
    "id": 6421,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 5213,
        "literals": [
          "solidity",
          "0.6",
          ".12"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:28"
      },
      {
        "id": 5214,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "57:33:28"
      },
      {
        "absolutePath": "contracts/BoringSolidity/contracts/BoringBatchable.sol",
        "file": "./BoringSolidity/contracts/BoringBatchable.sol",
        "id": 5215,
        "nodeType": "ImportDirective",
        "scope": 6421,
        "sourceUnit": 115,
        "src": "92:56:28",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/BoringSolidity/contracts/BoringOwnable.sol",
        "file": "./BoringSolidity/contracts/BoringOwnable.sol",
        "id": 5216,
        "nodeType": "ImportDirective",
        "scope": 6421,
        "sourceUnit": 687,
        "src": "149:54:28",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/BoringSolidity/contracts/libraries/BoringMath.sol",
        "file": "./BoringSolidity/contracts/libraries/BoringMath.sol",
        "id": 5217,
        "nodeType": "ImportDirective",
        "scope": 6421,
        "sourceUnit": 1948,
        "src": "204:61:28",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/libraries/SignedSafeMath.sol",
        "file": "./libraries/SignedSafeMath.sol",
        "id": 5218,
        "nodeType": "ImportDirective",
        "scope": 6421,
        "sourceUnit": 10520,
        "src": "266:40:28",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/interfaces/IRewarder.sol",
        "file": "./interfaces/IRewarder.sol",
        "id": 5219,
        "nodeType": "ImportDirective",
        "scope": 6421,
        "sourceUnit": 9959,
        "src": "307:36:28",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/interfaces/IMasterChef.sol",
        "file": "./interfaces/IMasterChef.sol",
        "id": 5220,
        "nodeType": "ImportDirective",
        "scope": 6421,
        "sourceUnit": 9844,
        "src": "344:38:28",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": null,
        "fullyImplemented": false,
        "id": 5228,
        "linearizedBaseContracts": [
          5228
        ],
        "name": "IMigratorChef",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": null,
            "documentation": null,
            "functionSelector": "ce5494bb",
            "id": 5227,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "migrate",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 5223,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5222,
                  "mutability": "mutable",
                  "name": "token",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 5227,
                  "src": "575:12:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$1291",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 5221,
                    "name": "IERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1291,
                    "src": "575:6:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$1291",
                      "typeString": "contract IERC20"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "574:14:28"
            },
            "returnParameters": {
              "id": 5226,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5225,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 5227,
                  "src": "607:6:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$1291",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 5224,
                    "name": "IERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1291,
                    "src": "607:6:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$1291",
                      "typeString": "contract IERC20"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "606:8:28"
            },
            "scope": 5228,
            "src": "558:57:28",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 6421,
        "src": "384:233:28"
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 5230,
              "name": "BoringOwnable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 686,
              "src": "1082:13:28",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_BoringOwnable_$686",
                "typeString": "contract BoringOwnable"
              }
            },
            "id": 5231,
            "nodeType": "InheritanceSpecifier",
            "src": "1082:13:28"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 5232,
              "name": "BoringBatchable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 114,
              "src": "1097:15:28",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_BoringBatchable_$114",
                "typeString": "contract BoringBatchable"
              }
            },
            "id": 5233,
            "nodeType": "InheritanceSpecifier",
            "src": "1097:15:28"
          }
        ],
        "contractDependencies": [
          78,
          114,
          563,
          686
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 5229,
          "nodeType": "StructuredDocumentation",
          "src": "619:440:28",
          "text": "@notice The (older) MasterChef contract gives out a constant number of SUSHI tokens per block.\n It is the only address with minting rights for SUSHI.\n The idea for this MasterChef V2 (MCV2) contract is therefore to be the owner of a dummy token\n that is deposited into the MasterChef V1 (MCV1) contract.\n The allocation point for this pool on MCV1 is the total allocation point for all pools that receive double incentives."
        },
        "fullyImplemented": true,
        "id": 6420,
        "linearizedBaseContracts": [
          6420,
          114,
          78,
          686,
          563
        ],
        "name": "MiniChefV2",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 5236,
            "libraryName": {
              "contractScope": null,
              "id": 5234,
              "name": "BoringMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1809,
              "src": "1125:10:28",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_BoringMath_$1809",
                "typeString": "library BoringMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "1119:29:28",
            "typeName": {
              "id": 5235,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1140:7:28",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 5239,
            "libraryName": {
              "contractScope": null,
              "id": 5237,
              "name": "BoringMath128",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1855,
              "src": "1159:13:28",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_BoringMath128_$1855",
                "typeString": "library BoringMath128"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "1153:32:28",
            "typeName": {
              "id": 5238,
              "name": "uint128",
              "nodeType": "ElementaryTypeName",
              "src": "1177:7:28",
              "typeDescriptions": {
                "typeIdentifier": "t_uint128",
                "typeString": "uint128"
              }
            }
          },
          {
            "id": 5242,
            "libraryName": {
              "contractScope": null,
              "id": 5240,
              "name": "BoringERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1655,
              "src": "1196:11:28",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_BoringERC20_$1655",
                "typeString": "library BoringERC20"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "1190:29:28",
            "typeName": {
              "contractScope": null,
              "id": 5241,
              "name": "IERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1291,
              "src": "1212:6:28",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$1291",
                "typeString": "contract IERC20"
              }
            }
          },
          {
            "id": 5245,
            "libraryName": {
              "contractScope": null,
              "id": 5243,
              "name": "SignedSafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 10519,
              "src": "1230:14:28",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SignedSafeMath_$10519",
                "typeString": "library SignedSafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "1224:32:28",
            "typeName": {
              "id": 5244,
              "name": "int256",
              "nodeType": "ElementaryTypeName",
              "src": "1249:6:28",
              "typeDescriptions": {
                "typeIdentifier": "t_int256",
                "typeString": "int256"
              }
            }
          },
          {
            "canonicalName": "MiniChefV2.UserInfo",
            "id": 5250,
            "members": [
              {
                "constant": false,
                "id": 5247,
                "mutability": "mutable",
                "name": "amount",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 5250,
                "src": "1447:14:28",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 5246,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1447:7:28",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 5249,
                "mutability": "mutable",
                "name": "rewardDebt",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 5250,
                "src": "1471:17:28",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_int256",
                  "typeString": "int256"
                },
                "typeName": {
                  "id": 5248,
                  "name": "int256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1471:6:28",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "UserInfo",
            "nodeType": "StructDefinition",
            "scope": 6420,
            "src": "1421:74:28",
            "visibility": "public"
          },
          {
            "canonicalName": "MiniChefV2.PoolInfo",
            "id": 5257,
            "members": [
              {
                "constant": false,
                "id": 5252,
                "mutability": "mutable",
                "name": "accSushiPerShare",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 5257,
                "src": "1709:24:28",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint128",
                  "typeString": "uint128"
                },
                "typeName": {
                  "id": 5251,
                  "name": "uint128",
                  "nodeType": "ElementaryTypeName",
                  "src": "1709:7:28",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 5254,
                "mutability": "mutable",
                "name": "lastRewardTime",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 5257,
                "src": "1743:21:28",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint64",
                  "typeString": "uint64"
                },
                "typeName": {
                  "id": 5253,
                  "name": "uint64",
                  "nodeType": "ElementaryTypeName",
                  "src": "1743:6:28",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 5256,
                "mutability": "mutable",
                "name": "allocPoint",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 5257,
                "src": "1774:17:28",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint64",
                  "typeString": "uint64"
                },
                "typeName": {
                  "id": 5255,
                  "name": "uint64",
                  "nodeType": "ElementaryTypeName",
                  "src": "1774:6:28",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "PoolInfo",
            "nodeType": "StructDefinition",
            "scope": 6420,
            "src": "1683:115:28",
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 5258,
              "nodeType": "StructuredDocumentation",
              "src": "1804:38:28",
              "text": "@notice Address of SUSHI contract."
            },
            "functionSelector": "ab560e10",
            "id": 5260,
            "mutability": "immutable",
            "name": "SUSHI",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 6420,
            "src": "1847:29:28",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$1291",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "contractScope": null,
              "id": 5259,
              "name": "IERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1291,
              "src": "1847:6:28",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$1291",
                "typeString": "contract IERC20"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "7cd07e47",
            "id": 5262,
            "mutability": "mutable",
            "name": "migrator",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 6420,
            "src": "1987:29:28",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IMigratorChef_$5228",
              "typeString": "contract IMigratorChef"
            },
            "typeName": {
              "contractScope": null,
              "id": 5261,
              "name": "IMigratorChef",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5228,
              "src": "1987:13:28",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IMigratorChef_$5228",
                "typeString": "contract IMigratorChef"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 5263,
              "nodeType": "StructuredDocumentation",
              "src": "2023:35:28",
              "text": "@notice Info of each MCV2 pool."
            },
            "functionSelector": "1526fe27",
            "id": 5266,
            "mutability": "mutable",
            "name": "poolInfo",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 6420,
            "src": "2063:26:28",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_PoolInfo_$5257_storage_$dyn_storage",
              "typeString": "struct MiniChefV2.PoolInfo[]"
            },
            "typeName": {
              "baseType": {
                "contractScope": null,
                "id": 5264,
                "name": "PoolInfo",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 5257,
                "src": "2063:8:28",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_PoolInfo_$5257_storage_ptr",
                  "typeString": "struct MiniChefV2.PoolInfo"
                }
              },
              "id": 5265,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "2063:10:28",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_PoolInfo_$5257_storage_$dyn_storage_ptr",
                "typeString": "struct MiniChefV2.PoolInfo[]"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 5267,
              "nodeType": "StructuredDocumentation",
              "src": "2095:55:28",
              "text": "@notice Address of the LP token for each MCV2 pool."
            },
            "functionSelector": "78ed5d1f",
            "id": 5270,
            "mutability": "mutable",
            "name": "lpToken",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 6420,
            "src": "2155:23:28",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_contract$_IERC20_$1291_$dyn_storage",
              "typeString": "contract IERC20[]"
            },
            "typeName": {
              "baseType": {
                "contractScope": null,
                "id": 5268,
                "name": "IERC20",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 1291,
                "src": "2155:6:28",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_IERC20_$1291",
                  "typeString": "contract IERC20"
                }
              },
              "id": 5269,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "2155:8:28",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_contract$_IERC20_$1291_$dyn_storage_ptr",
                "typeString": "contract IERC20[]"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 5271,
              "nodeType": "StructuredDocumentation",
              "src": "2184:57:28",
              "text": "@notice Address of each `IRewarder` contract in MCV2."
            },
            "functionSelector": "c346253d",
            "id": 5274,
            "mutability": "mutable",
            "name": "rewarder",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 6420,
            "src": "2246:27:28",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_contract$_IRewarder_$9958_$dyn_storage",
              "typeString": "contract IRewarder[]"
            },
            "typeName": {
              "baseType": {
                "contractScope": null,
                "id": 5272,
                "name": "IRewarder",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 9958,
                "src": "2246:9:28",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_IRewarder_$9958",
                  "typeString": "contract IRewarder"
                }
              },
              "id": 5273,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "2246:11:28",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_contract$_IRewarder_$9958_$dyn_storage_ptr",
                "typeString": "contract IRewarder[]"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 5275,
              "nodeType": "StructuredDocumentation",
              "src": "2280:52:28",
              "text": "@notice Info of each user that stakes LP tokens."
            },
            "functionSelector": "93f1a40b",
            "id": 5281,
            "mutability": "mutable",
            "name": "userInfo",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 6420,
            "src": "2337:66:28",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$5250_storage_$_$",
              "typeString": "mapping(uint256 => mapping(address => struct MiniChefV2.UserInfo))"
            },
            "typeName": {
              "id": 5280,
              "keyType": {
                "id": 5276,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "2346:7:28",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "2337:50:28",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$5250_storage_$_$",
                "typeString": "mapping(uint256 => mapping(address => struct MiniChefV2.UserInfo))"
              },
              "valueType": {
                "id": 5279,
                "keyType": {
                  "id": 5277,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "2366:7:28",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "2357:29:28",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$5250_storage_$",
                  "typeString": "mapping(address => struct MiniChefV2.UserInfo)"
                },
                "valueType": {
                  "contractScope": null,
                  "id": 5278,
                  "name": "UserInfo",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 5250,
                  "src": "2377:8:28",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_UserInfo_$5250_storage_ptr",
                    "typeString": "struct MiniChefV2.UserInfo"
                  }
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 5282,
              "nodeType": "StructuredDocumentation",
              "src": "2410:21:28",
              "text": "@dev Tokens added"
            },
            "functionSelector": "79d12ffb",
            "id": 5286,
            "mutability": "mutable",
            "name": "addedTokens",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 6420,
            "src": "2436:44:28",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 5285,
              "keyType": {
                "id": 5283,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "2445:7:28",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "2436:25:28",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 5284,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "2456:4:28",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 5287,
              "nodeType": "StructuredDocumentation",
              "src": "2487:88:28",
              "text": "@dev Total allocation points. Must be the sum of all allocation points in all pools."
            },
            "functionSelector": "17caf6f1",
            "id": 5289,
            "mutability": "mutable",
            "name": "totalAllocPoint",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 6420,
            "src": "2580:30:28",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 5288,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2580:7:28",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "a06e408b",
            "id": 5291,
            "mutability": "mutable",
            "name": "sushiPerSecond",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 6420,
            "src": "2617:29:28",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 5290,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2617:7:28",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 5294,
            "mutability": "constant",
            "name": "ACC_SUSHI_PRECISION",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 6420,
            "src": "2652:51:28",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 5292,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2652:7:28",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "31653132",
              "id": 5293,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2699:4:28",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1000000000000_by_1",
                "typeString": "int_const 1000000000000"
              },
              "value": "1e12"
            },
            "visibility": "private"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 5304,
            "name": "Deposit",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 5303,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5296,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "user",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 5304,
                  "src": "2724:20:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5295,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2724:7:28",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5298,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "pid",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 5304,
                  "src": "2746:19:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5297,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2746:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5300,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 5304,
                  "src": "2767:14:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5299,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2767:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5302,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 5304,
                  "src": "2783:18:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5301,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2783:7:28",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2723:79:28"
            },
            "src": "2710:93:28"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 5314,
            "name": "Withdraw",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 5313,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5306,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "user",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 5314,
                  "src": "2823:20:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5305,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2823:7:28",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5308,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "pid",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 5314,
                  "src": "2845:19:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5307,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2845:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5310,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 5314,
                  "src": "2866:14:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5309,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2866:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5312,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 5314,
                  "src": "2882:18:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5311,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2882:7:28",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2822:79:28"
            },
            "src": "2808:94:28"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 5324,
            "name": "EmergencyWithdraw",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 5323,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5316,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "user",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 5324,
                  "src": "2931:20:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5315,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2931:7:28",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5318,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "pid",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 5324,
                  "src": "2953:19:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5317,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2953:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5320,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 5324,
                  "src": "2974:14:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5319,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2974:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5322,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 5324,
                  "src": "2990:18:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5321,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2990:7:28",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2930:79:28"
            },
            "src": "2907:103:28"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 5332,
            "name": "Harvest",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 5331,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5326,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "user",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 5332,
                  "src": "3029:20:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5325,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3029:7:28",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5328,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "pid",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 5332,
                  "src": "3051:19:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5327,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3051:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5330,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 5332,
                  "src": "3072:14:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5329,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3072:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3028:59:28"
            },
            "src": "3015:73:28"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 5342,
            "name": "LogPoolAddition",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 5341,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5334,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "pid",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 5342,
                  "src": "3115:19:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5333,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3115:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5336,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "allocPoint",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 5342,
                  "src": "3136:18:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5335,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3136:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5338,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "lpToken",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 5342,
                  "src": "3156:22:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$1291",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 5337,
                    "name": "IERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1291,
                    "src": "3156:6:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$1291",
                      "typeString": "contract IERC20"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5340,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "rewarder",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 5342,
                  "src": "3180:26:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IRewarder_$9958",
                    "typeString": "contract IRewarder"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 5339,
                    "name": "IRewarder",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 9958,
                    "src": "3180:9:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IRewarder_$9958",
                      "typeString": "contract IRewarder"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3114:93:28"
            },
            "src": "3093:115:28"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 5352,
            "name": "LogSetPool",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 5351,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5344,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "pid",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 5352,
                  "src": "3230:19:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5343,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3230:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5346,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "allocPoint",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 5352,
                  "src": "3251:18:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5345,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3251:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5348,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "rewarder",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 5352,
                  "src": "3271:26:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IRewarder_$9958",
                    "typeString": "contract IRewarder"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 5347,
                    "name": "IRewarder",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 9958,
                    "src": "3271:9:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IRewarder_$9958",
                      "typeString": "contract IRewarder"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5350,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "overwrite",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 5352,
                  "src": "3299:14:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 5349,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3299:4:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3229:85:28"
            },
            "src": "3213:102:28"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 5362,
            "name": "LogUpdatePool",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 5361,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5354,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "pid",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 5362,
                  "src": "3340:19:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5353,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3340:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5356,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "lastRewardTime",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 5362,
                  "src": "3361:21:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 5355,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "3361:6:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5358,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "lpSupply",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 5362,
                  "src": "3384:16:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5357,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3384:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5360,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "accSushiPerShare",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 5362,
                  "src": "3402:24:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5359,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3402:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3339:88:28"
            },
            "src": "3320:108:28"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 5366,
            "name": "LogSushiPerSecond",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 5365,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5364,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "sushiPerSecond",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 5366,
                  "src": "3457:22:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5363,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3457:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3456:24:28"
            },
            "src": "3433:48:28"
          },
          {
            "body": {
              "id": 5376,
              "nodeType": "Block",
              "src": "3577:31:28",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 5374,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 5372,
                      "name": "SUSHI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5260,
                      "src": "3587:5:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$1291",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 5373,
                      "name": "_sushi",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5369,
                      "src": "3595:6:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$1291",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "3587:14:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$1291",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 5375,
                  "nodeType": "ExpressionStatement",
                  "src": "3587:14:28"
                }
              ]
            },
            "documentation": {
              "id": 5367,
              "nodeType": "StructuredDocumentation",
              "src": "3487:51:28",
              "text": "@param _sushi The SUSHI token contract address."
            },
            "id": 5377,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 5370,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5369,
                  "mutability": "mutable",
                  "name": "_sushi",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 5377,
                  "src": "3555:13:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$1291",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 5368,
                    "name": "IERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1291,
                    "src": "3555:6:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$1291",
                      "typeString": "contract IERC20"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3554:15:28"
            },
            "returnParameters": {
              "id": 5371,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3577:0:28"
            },
            "scope": 6420,
            "src": "3543:65:28",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 5388,
              "nodeType": "Block",
              "src": "3722:40:28",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 5386,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 5383,
                      "name": "pools",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5381,
                      "src": "3732:5:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 5384,
                        "name": "poolInfo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5266,
                        "src": "3740:8:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_PoolInfo_$5257_storage_$dyn_storage",
                          "typeString": "struct MiniChefV2.PoolInfo storage ref[] storage ref"
                        }
                      },
                      "id": 5385,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "3740:15:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3732:23:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 5387,
                  "nodeType": "ExpressionStatement",
                  "src": "3732:23:28"
                }
              ]
            },
            "documentation": {
              "id": 5378,
              "nodeType": "StructuredDocumentation",
              "src": "3614:45:28",
              "text": "@notice Returns the number of MCV2 pools."
            },
            "functionSelector": "081e3eda",
            "id": 5389,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "poolLength",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 5379,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3683:2:28"
            },
            "returnParameters": {
              "id": 5382,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5381,
                  "mutability": "mutable",
                  "name": "pools",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 5389,
                  "src": "3707:13:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5380,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3707:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3706:15:28"
            },
            "scope": 6420,
            "src": "3664:98:28",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 5467,
              "nodeType": "Block",
              "src": "4182:520:28",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 5409,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 5402,
                            "name": "addedTokens",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5286,
                            "src": "4200:11:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 5407,
                          "indexExpression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 5405,
                                "name": "_lpToken",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5394,
                                "src": "4220:8:28",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC20_$1291",
                                  "typeString": "contract IERC20"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_IERC20_$1291",
                                  "typeString": "contract IERC20"
                                }
                              ],
                              "id": 5404,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "4212:7:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 5403,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "4212:7:28",
                                "typeDescriptions": {
                                  "typeIdentifier": null,
                                  "typeString": null
                                }
                              }
                            },
                            "id": 5406,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4212:17:28",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4200:30:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "66616c7365",
                          "id": 5408,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4234:5:28",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "4200:39:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "546f6b656e20616c7265616479206164646564",
                        "id": 5410,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4241:21:28",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b07030750bf13b02a70fb14791777581902c169c67141a3966ae190a921be309",
                          "typeString": "literal_string \"Token already added\""
                        },
                        "value": "Token already added"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b07030750bf13b02a70fb14791777581902c169c67141a3966ae190a921be309",
                          "typeString": "literal_string \"Token already added\""
                        }
                      ],
                      "id": 5401,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4192:7:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5411,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4192:71:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5412,
                  "nodeType": "ExpressionStatement",
                  "src": "4192:71:28"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 5418,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 5413,
                      "name": "totalAllocPoint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5289,
                      "src": "4273:15:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 5416,
                          "name": "allocPoint",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5392,
                          "src": "4311:10:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 5414,
                          "name": "totalAllocPoint",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5289,
                          "src": "4291:15:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 5415,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1680,
                        "src": "4291:19:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 5417,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4291:31:28",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4273:49:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 5419,
                  "nodeType": "ExpressionStatement",
                  "src": "4273:49:28"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 5423,
                        "name": "_lpToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5394,
                        "src": "4345:8:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1291",
                          "typeString": "contract IERC20"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IERC20_$1291",
                          "typeString": "contract IERC20"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 5420,
                        "name": "lpToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5270,
                        "src": "4332:7:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_IERC20_$1291_$dyn_storage",
                          "typeString": "contract IERC20[] storage ref"
                        }
                      },
                      "id": 5422,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "4332:12:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_contract$_IERC20_$1291_$returns$__$",
                        "typeString": "function (contract IERC20)"
                      }
                    },
                    "id": 5424,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4332:22:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5425,
                  "nodeType": "ExpressionStatement",
                  "src": "4332:22:28"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 5429,
                        "name": "_rewarder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5396,
                        "src": "4378:9:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IRewarder_$9958",
                          "typeString": "contract IRewarder"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IRewarder_$9958",
                          "typeString": "contract IRewarder"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 5426,
                        "name": "rewarder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5274,
                        "src": "4364:8:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_IRewarder_$9958_$dyn_storage",
                          "typeString": "contract IRewarder[] storage ref"
                        }
                      },
                      "id": 5428,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "4364:13:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_contract$_IRewarder_$9958_$returns$__$",
                        "typeString": "function (contract IRewarder)"
                      }
                    },
                    "id": 5430,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4364:24:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5431,
                  "nodeType": "ExpressionStatement",
                  "src": "4364:24:28"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "argumentTypes": null,
                                "id": 5436,
                                "name": "allocPoint",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5392,
                                "src": "4448:10:28",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 5437,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "to64",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1782,
                              "src": "4448:15:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint64_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256) pure returns (uint64)"
                              }
                            },
                            "id": 5438,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4448:17:28",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 5439,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -4,
                                  "src": "4495:5:28",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 5440,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "4495:15:28",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 5441,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "to64",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1782,
                              "src": "4495:20:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint64_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256) pure returns (uint64)"
                              }
                            },
                            "id": 5442,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4495:22:28",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 5443,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4549:1:28",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            },
                            {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            },
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 5435,
                          "name": "PoolInfo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5257,
                          "src": "4413:8:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_PoolInfo_$5257_storage_ptr_$",
                            "typeString": "type(struct MiniChefV2.PoolInfo storage pointer)"
                          }
                        },
                        "id": 5444,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "names": [
                          "allocPoint",
                          "lastRewardTime",
                          "accSushiPerShare"
                        ],
                        "nodeType": "FunctionCall",
                        "src": "4413:148:28",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PoolInfo_$5257_memory_ptr",
                          "typeString": "struct MiniChefV2.PoolInfo memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_PoolInfo_$5257_memory_ptr",
                          "typeString": "struct MiniChefV2.PoolInfo memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 5432,
                        "name": "poolInfo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5266,
                        "src": "4399:8:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_PoolInfo_$5257_storage_$dyn_storage",
                          "typeString": "struct MiniChefV2.PoolInfo storage ref[] storage ref"
                        }
                      },
                      "id": 5434,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "4399:13:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_PoolInfo_$5257_storage_$returns$__$",
                        "typeString": "function (struct MiniChefV2.PoolInfo storage ref)"
                      }
                    },
                    "id": 5445,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4399:163:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5446,
                  "nodeType": "ExpressionStatement",
                  "src": "4399:163:28"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 5454,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 5447,
                        "name": "addedTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5286,
                        "src": "4572:11:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 5452,
                      "indexExpression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 5450,
                            "name": "_lpToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5394,
                            "src": "4592:8:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$1291",
                              "typeString": "contract IERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IERC20_$1291",
                              "typeString": "contract IERC20"
                            }
                          ],
                          "id": 5449,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4584:7:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 5448,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4584:7:28",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 5451,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4584:17:28",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4572:30:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 5453,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4605:4:28",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "4572:37:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 5455,
                  "nodeType": "ExpressionStatement",
                  "src": "4572:37:28"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "31",
                            "id": 5460,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4659:1:28",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 5457,
                              "name": "lpToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5270,
                              "src": "4640:7:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_contract$_IERC20_$1291_$dyn_storage",
                                "typeString": "contract IERC20[] storage ref"
                              }
                            },
                            "id": 5458,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "4640:14:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 5459,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sub",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1702,
                          "src": "4640:18:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 5461,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4640:21:28",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 5462,
                        "name": "allocPoint",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5392,
                        "src": "4663:10:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 5463,
                        "name": "_lpToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5394,
                        "src": "4675:8:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1291",
                          "typeString": "contract IERC20"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 5464,
                        "name": "_rewarder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5396,
                        "src": "4685:9:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IRewarder_$9958",
                          "typeString": "contract IRewarder"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_contract$_IERC20_$1291",
                          "typeString": "contract IERC20"
                        },
                        {
                          "typeIdentifier": "t_contract$_IRewarder_$9958",
                          "typeString": "contract IRewarder"
                        }
                      ],
                      "id": 5456,
                      "name": "LogPoolAddition",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5342,
                      "src": "4624:15:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_contract$_IERC20_$1291_$_t_contract$_IRewarder_$9958_$returns$__$",
                        "typeString": "function (uint256,uint256,contract IERC20,contract IRewarder)"
                      }
                    },
                    "id": 5465,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4624:71:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5466,
                  "nodeType": "EmitStatement",
                  "src": "4619:76:28"
                }
              ]
            },
            "documentation": {
              "id": 5390,
              "nodeType": "StructuredDocumentation",
              "src": "3768:321:28",
              "text": "@notice Add a new LP to the pool. Can only be called by the owner.\n DO NOT add the same LP token more than once. Rewards will be messed up if you do.\n @param allocPoint AP of the new pool.\n @param _lpToken Address of the LP ERC-20 token.\n @param _rewarder Address of the rewarder delegate."
            },
            "functionSelector": "ab7de098",
            "id": 5468,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 5399,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 5398,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 685,
                  "src": "4172:9:28",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "4172:9:28"
              }
            ],
            "name": "add",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 5397,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5392,
                  "mutability": "mutable",
                  "name": "allocPoint",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 5468,
                  "src": "4107:18:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5391,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4107:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5394,
                  "mutability": "mutable",
                  "name": "_lpToken",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 5468,
                  "src": "4127:15:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$1291",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 5393,
                    "name": "IERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1291,
                    "src": "4127:6:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$1291",
                      "typeString": "contract IERC20"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5396,
                  "mutability": "mutable",
                  "name": "_rewarder",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 5468,
                  "src": "4144:19:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IRewarder_$9958",
                    "typeString": "contract IRewarder"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 5395,
                    "name": "IRewarder",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 9958,
                    "src": "4144:9:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IRewarder_$9958",
                      "typeString": "contract IRewarder"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4106:58:28"
            },
            "returnParameters": {
              "id": 5400,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4182:0:28"
            },
            "scope": 6420,
            "src": "4094:608:28",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 5525,
              "nodeType": "Block",
              "src": "5191:304:28",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 5493,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 5482,
                      "name": "totalAllocPoint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5289,
                      "src": "5201:15:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 5491,
                          "name": "_allocPoint",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5473,
                          "src": "5270:11:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 5485,
                                  "name": "poolInfo",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 5266,
                                  "src": "5239:8:28",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_PoolInfo_$5257_storage_$dyn_storage",
                                    "typeString": "struct MiniChefV2.PoolInfo storage ref[] storage ref"
                                  }
                                },
                                "id": 5487,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "id": 5486,
                                  "name": "_pid",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 5471,
                                  "src": "5248:4:28",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "5239:14:28",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_PoolInfo_$5257_storage",
                                  "typeString": "struct MiniChefV2.PoolInfo storage ref"
                                }
                              },
                              "id": 5488,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "allocPoint",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 5256,
                              "src": "5239:25:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 5483,
                              "name": "totalAllocPoint",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5289,
                              "src": "5219:15:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 5484,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sub",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1702,
                            "src": "5219:19:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 5489,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5219:46:28",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 5490,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1680,
                        "src": "5219:50:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 5492,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5219:63:28",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5201:81:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 5494,
                  "nodeType": "ExpressionStatement",
                  "src": "5201:81:28"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 5502,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 5495,
                          "name": "poolInfo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5266,
                          "src": "5292:8:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_PoolInfo_$5257_storage_$dyn_storage",
                            "typeString": "struct MiniChefV2.PoolInfo storage ref[] storage ref"
                          }
                        },
                        "id": 5497,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 5496,
                          "name": "_pid",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5471,
                          "src": "5301:4:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5292:14:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PoolInfo_$5257_storage",
                          "typeString": "struct MiniChefV2.PoolInfo storage ref"
                        }
                      },
                      "id": 5498,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "allocPoint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5256,
                      "src": "5292:25:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "argumentTypes": null,
                          "id": 5499,
                          "name": "_allocPoint",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5473,
                          "src": "5320:11:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 5500,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "to64",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1782,
                        "src": "5320:16:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint64_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256) pure returns (uint64)"
                        }
                      },
                      "id": 5501,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5320:18:28",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "src": "5292:46:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "id": 5503,
                  "nodeType": "ExpressionStatement",
                  "src": "5292:46:28"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "id": 5504,
                    "name": "overwrite",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 5477,
                    "src": "5352:9:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 5512,
                  "nodeType": "IfStatement",
                  "src": "5348:46:28",
                  "trueBody": {
                    "id": 5511,
                    "nodeType": "Block",
                    "src": "5363:31:28",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 5509,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 5505,
                              "name": "rewarder",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5274,
                              "src": "5365:8:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_contract$_IRewarder_$9958_$dyn_storage",
                                "typeString": "contract IRewarder[] storage ref"
                              }
                            },
                            "id": 5507,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 5506,
                              "name": "_pid",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5471,
                              "src": "5374:4:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "5365:14:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IRewarder_$9958",
                              "typeString": "contract IRewarder"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 5508,
                            "name": "_rewarder",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5475,
                            "src": "5382:9:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IRewarder_$9958",
                              "typeString": "contract IRewarder"
                            }
                          },
                          "src": "5365:26:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IRewarder_$9958",
                            "typeString": "contract IRewarder"
                          }
                        },
                        "id": 5510,
                        "nodeType": "ExpressionStatement",
                        "src": "5365:26:28"
                      }
                    ]
                  }
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 5514,
                        "name": "_pid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5471,
                        "src": "5419:4:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 5515,
                        "name": "_allocPoint",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5473,
                        "src": "5425:11:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "condition": {
                          "argumentTypes": null,
                          "id": 5516,
                          "name": "overwrite",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5477,
                          "src": "5438:9:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 5518,
                            "name": "rewarder",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5274,
                            "src": "5462:8:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_contract$_IRewarder_$9958_$dyn_storage",
                              "typeString": "contract IRewarder[] storage ref"
                            }
                          },
                          "id": 5520,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 5519,
                            "name": "_pid",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5471,
                            "src": "5471:4:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5462:14:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IRewarder_$9958",
                            "typeString": "contract IRewarder"
                          }
                        },
                        "id": 5521,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "Conditional",
                        "src": "5438:38:28",
                        "trueExpression": {
                          "argumentTypes": null,
                          "id": 5517,
                          "name": "_rewarder",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5475,
                          "src": "5450:9:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IRewarder_$9958",
                            "typeString": "contract IRewarder"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IRewarder_$9958",
                          "typeString": "contract IRewarder"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 5522,
                        "name": "overwrite",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5477,
                        "src": "5478:9:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_contract$_IRewarder_$9958",
                          "typeString": "contract IRewarder"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 5513,
                      "name": "LogSetPool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5352,
                      "src": "5408:10:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_contract$_IRewarder_$9958_$_t_bool_$returns$__$",
                        "typeString": "function (uint256,uint256,contract IRewarder,bool)"
                      }
                    },
                    "id": 5523,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5408:80:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5524,
                  "nodeType": "EmitStatement",
                  "src": "5403:85:28"
                }
              ]
            },
            "documentation": {
              "id": 5469,
              "nodeType": "StructuredDocumentation",
              "src": "4708:376:28",
              "text": "@notice Update the given pool's SUSHI allocation point and `IRewarder` contract. Can only be called by the owner.\n @param _pid The index of the pool. See `poolInfo`.\n @param _allocPoint New AP of the pool.\n @param _rewarder Address of the rewarder delegate.\n @param overwrite True if _rewarder should be `set`. Otherwise `_rewarder` is ignored."
            },
            "functionSelector": "88bba42f",
            "id": 5526,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 5480,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 5479,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 685,
                  "src": "5181:9:28",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "5181:9:28"
              }
            ],
            "name": "set",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 5478,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5471,
                  "mutability": "mutable",
                  "name": "_pid",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 5526,
                  "src": "5102:12:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5470,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5102:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5473,
                  "mutability": "mutable",
                  "name": "_allocPoint",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 5526,
                  "src": "5116:19:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5472,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5116:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5475,
                  "mutability": "mutable",
                  "name": "_rewarder",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 5526,
                  "src": "5137:19:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IRewarder_$9958",
                    "typeString": "contract IRewarder"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 5474,
                    "name": "IRewarder",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 9958,
                    "src": "5137:9:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IRewarder_$9958",
                      "typeString": "contract IRewarder"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5477,
                  "mutability": "mutable",
                  "name": "overwrite",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 5526,
                  "src": "5158:14:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 5476,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5158:4:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5101:72:28"
            },
            "returnParameters": {
              "id": 5481,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5191:0:28"
            },
            "scope": 6420,
            "src": "5089:406:28",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 5542,
              "nodeType": "Block",
              "src": "5745:98:28",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 5536,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 5534,
                      "name": "sushiPerSecond",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5291,
                      "src": "5755:14:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 5535,
                      "name": "_sushiPerSecond",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5529,
                      "src": "5772:15:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5755:32:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 5537,
                  "nodeType": "ExpressionStatement",
                  "src": "5755:32:28"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 5539,
                        "name": "_sushiPerSecond",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5529,
                        "src": "5820:15:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 5538,
                      "name": "LogSushiPerSecond",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5366,
                      "src": "5802:17:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 5540,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5802:34:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5541,
                  "nodeType": "EmitStatement",
                  "src": "5797:39:28"
                }
              ]
            },
            "documentation": {
              "id": 5527,
              "nodeType": "StructuredDocumentation",
              "src": "5501:170:28",
              "text": "@notice Sets the sushi per second to be distributed. Can only be called by the owner.\n @param _sushiPerSecond The amount of Sushi to be distributed per second."
            },
            "functionSelector": "9baf58c3",
            "id": 5543,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 5532,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 5531,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 685,
                  "src": "5735:9:28",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "5735:9:28"
              }
            ],
            "name": "setSushiPerSecond",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 5530,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5529,
                  "mutability": "mutable",
                  "name": "_sushiPerSecond",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 5543,
                  "src": "5703:23:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5528,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5703:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5702:25:28"
            },
            "returnParameters": {
              "id": 5533,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5745:0:28"
            },
            "scope": 6420,
            "src": "5676:167:28",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 5555,
              "nodeType": "Block",
              "src": "6044:37:28",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 5553,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 5551,
                      "name": "migrator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5262,
                      "src": "6054:8:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IMigratorChef_$5228",
                        "typeString": "contract IMigratorChef"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 5552,
                      "name": "_migrator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5546,
                      "src": "6065:9:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IMigratorChef_$5228",
                        "typeString": "contract IMigratorChef"
                      }
                    },
                    "src": "6054:20:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IMigratorChef_$5228",
                      "typeString": "contract IMigratorChef"
                    }
                  },
                  "id": 5554,
                  "nodeType": "ExpressionStatement",
                  "src": "6054:20:28"
                }
              ]
            },
            "documentation": {
              "id": 5544,
              "nodeType": "StructuredDocumentation",
              "src": "5849:127:28",
              "text": "@notice Set the `migrator` contract. Can only be called by the owner.\n @param _migrator The contract address to set."
            },
            "functionSelector": "23cf3118",
            "id": 5556,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 5549,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 5548,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 685,
                  "src": "6034:9:28",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "6034:9:28"
              }
            ],
            "name": "setMigrator",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 5547,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5546,
                  "mutability": "mutable",
                  "name": "_migrator",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 5556,
                  "src": "6002:23:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IMigratorChef_$5228",
                    "typeString": "contract IMigratorChef"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 5545,
                    "name": "IMigratorChef",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 5228,
                    "src": "6002:13:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IMigratorChef_$5228",
                      "typeString": "contract IMigratorChef"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6001:25:28"
            },
            "returnParameters": {
              "id": 5550,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6044:0:28"
            },
            "scope": 6420,
            "src": "5981:100:28",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 5657,
              "nodeType": "Block",
              "src": "6273:616:28",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 5571,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 5565,
                              "name": "migrator",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5262,
                              "src": "6299:8:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IMigratorChef_$5228",
                                "typeString": "contract IMigratorChef"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IMigratorChef_$5228",
                                "typeString": "contract IMigratorChef"
                              }
                            ],
                            "id": 5564,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6291:7:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 5563,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "6291:7:28",
                              "typeDescriptions": {
                                "typeIdentifier": null,
                                "typeString": null
                              }
                            }
                          },
                          "id": 5566,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6291:17:28",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 5569,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6320:1:28",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 5568,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6312:7:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 5567,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "6312:7:28",
                              "typeDescriptions": {
                                "typeIdentifier": null,
                                "typeString": null
                              }
                            }
                          },
                          "id": 5570,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6312:10:28",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "6291:31:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4d61737465724368656656323a206e6f206d69677261746f7220736574",
                        "id": 5572,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6324:31:28",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_db733e5612b6ea507bf1315a9949f7b2f36477c7d6bedf5cbd0acae80e12dfdf",
                          "typeString": "literal_string \"MasterChefV2: no migrator set\""
                        },
                        "value": "MasterChefV2: no migrator set"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_db733e5612b6ea507bf1315a9949f7b2f36477c7d6bedf5cbd0acae80e12dfdf",
                          "typeString": "literal_string \"MasterChefV2: no migrator set\""
                        }
                      ],
                      "id": 5562,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6283:7:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5573,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6283:73:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5574,
                  "nodeType": "ExpressionStatement",
                  "src": "6283:73:28"
                },
                {
                  "assignments": [
                    5576
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5576,
                      "mutability": "mutable",
                      "name": "_lpToken",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 5657,
                      "src": "6366:15:28",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$1291",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 5575,
                        "name": "IERC20",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 1291,
                        "src": "6366:6:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1291",
                          "typeString": "contract IERC20"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 5580,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 5577,
                      "name": "lpToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5270,
                      "src": "6384:7:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_contract$_IERC20_$1291_$dyn_storage",
                        "typeString": "contract IERC20[] storage ref"
                      }
                    },
                    "id": 5579,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 5578,
                      "name": "_pid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5559,
                      "src": "6392:4:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "6384:13:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$1291",
                      "typeString": "contract IERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6366:31:28"
                },
                {
                  "assignments": [
                    5582
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5582,
                      "mutability": "mutable",
                      "name": "bal",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 5657,
                      "src": "6407:11:28",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 5581,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6407:7:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 5590,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 5587,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "6448:4:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MiniChefV2_$6420",
                              "typeString": "contract MiniChefV2"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MiniChefV2_$6420",
                              "typeString": "contract MiniChefV2"
                            }
                          ],
                          "id": 5586,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6440:7:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 5585,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6440:7:28",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 5588,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6440:13:28",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 5583,
                        "name": "_lpToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5576,
                        "src": "6421:8:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1291",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 5584,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1238,
                      "src": "6421:18:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 5589,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6421:33:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6407:47:28"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 5596,
                            "name": "migrator",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5262,
                            "src": "6489:8:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IMigratorChef_$5228",
                              "typeString": "contract IMigratorChef"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IMigratorChef_$5228",
                              "typeString": "contract IMigratorChef"
                            }
                          ],
                          "id": 5595,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6481:7:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 5594,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6481:7:28",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 5597,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6481:17:28",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 5598,
                        "name": "bal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5582,
                        "src": "6500:3:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 5591,
                        "name": "_lpToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5576,
                        "src": "6464:8:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1291",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 5593,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1256,
                      "src": "6464:16:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 5599,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6464:40:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 5600,
                  "nodeType": "ExpressionStatement",
                  "src": "6464:40:28"
                },
                {
                  "assignments": [
                    5602
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5602,
                      "mutability": "mutable",
                      "name": "newLpToken",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 5657,
                      "src": "6514:17:28",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$1291",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 5601,
                        "name": "IERC20",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 1291,
                        "src": "6514:6:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1291",
                          "typeString": "contract IERC20"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 5607,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 5605,
                        "name": "_lpToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5576,
                        "src": "6551:8:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1291",
                          "typeString": "contract IERC20"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IERC20_$1291",
                          "typeString": "contract IERC20"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 5603,
                        "name": "migrator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5262,
                        "src": "6534:8:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IMigratorChef_$5228",
                          "typeString": "contract IMigratorChef"
                        }
                      },
                      "id": 5604,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "migrate",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5227,
                      "src": "6534:16:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_IERC20_$1291_$returns$_t_contract$_IERC20_$1291_$",
                        "typeString": "function (contract IERC20) external returns (contract IERC20)"
                      }
                    },
                    "id": 5606,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6534:26:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$1291",
                      "typeString": "contract IERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6514:46:28"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 5617,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 5609,
                          "name": "bal",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5582,
                          "src": "6578:3:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 5614,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "6614:4:28",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_MiniChefV2_$6420",
                                    "typeString": "contract MiniChefV2"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_MiniChefV2_$6420",
                                    "typeString": "contract MiniChefV2"
                                  }
                                ],
                                "id": 5613,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "6606:7:28",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 5612,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "6606:7:28",
                                  "typeDescriptions": {
                                    "typeIdentifier": null,
                                    "typeString": null
                                  }
                                }
                              },
                              "id": 5615,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6606:13:28",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 5610,
                              "name": "newLpToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5602,
                              "src": "6585:10:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$1291",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 5611,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1238,
                            "src": "6585:20:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 5616,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6585:35:28",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6578:42:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4d61737465724368656656323a206d696772617465642062616c616e6365206d757374206d61746368",
                        "id": 5618,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6622:43:28",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_52b373b8abd140702e448133a0dd7129935d941acfcf9ee8942c32166eb56caf",
                          "typeString": "literal_string \"MasterChefV2: migrated balance must match\""
                        },
                        "value": "MasterChefV2: migrated balance must match"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_52b373b8abd140702e448133a0dd7129935d941acfcf9ee8942c32166eb56caf",
                          "typeString": "literal_string \"MasterChefV2: migrated balance must match\""
                        }
                      ],
                      "id": 5608,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6570:7:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5619,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6570:96:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5620,
                  "nodeType": "ExpressionStatement",
                  "src": "6570:96:28"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 5629,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 5622,
                            "name": "addedTokens",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5286,
                            "src": "6684:11:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 5627,
                          "indexExpression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 5625,
                                "name": "newLpToken",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5602,
                                "src": "6704:10:28",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC20_$1291",
                                  "typeString": "contract IERC20"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_IERC20_$1291",
                                  "typeString": "contract IERC20"
                                }
                              ],
                              "id": 5624,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "6696:7:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 5623,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "6696:7:28",
                                "typeDescriptions": {
                                  "typeIdentifier": null,
                                  "typeString": null
                                }
                              }
                            },
                            "id": 5626,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6696:19:28",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "6684:32:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "66616c7365",
                          "id": 5628,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6720:5:28",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "6684:41:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "546f6b656e20616c7265616479206164646564",
                        "id": 5630,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6727:21:28",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b07030750bf13b02a70fb14791777581902c169c67141a3966ae190a921be309",
                          "typeString": "literal_string \"Token already added\""
                        },
                        "value": "Token already added"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b07030750bf13b02a70fb14791777581902c169c67141a3966ae190a921be309",
                          "typeString": "literal_string \"Token already added\""
                        }
                      ],
                      "id": 5621,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6676:7:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5631,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6676:73:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5632,
                  "nodeType": "ExpressionStatement",
                  "src": "6676:73:28"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 5640,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 5633,
                        "name": "addedTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5286,
                        "src": "6759:11:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 5638,
                      "indexExpression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 5636,
                            "name": "newLpToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5602,
                            "src": "6779:10:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$1291",
                              "typeString": "contract IERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IERC20_$1291",
                              "typeString": "contract IERC20"
                            }
                          ],
                          "id": 5635,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6771:7:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 5634,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6771:7:28",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 5637,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6771:19:28",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "6759:32:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 5639,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6794:4:28",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "6759:39:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 5641,
                  "nodeType": "ExpressionStatement",
                  "src": "6759:39:28"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 5649,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 5642,
                        "name": "addedTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5286,
                        "src": "6808:11:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 5647,
                      "indexExpression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 5645,
                            "name": "_lpToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5576,
                            "src": "6828:8:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$1291",
                              "typeString": "contract IERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IERC20_$1291",
                              "typeString": "contract IERC20"
                            }
                          ],
                          "id": 5644,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6820:7:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 5643,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6820:7:28",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 5646,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6820:17:28",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "6808:30:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "66616c7365",
                      "id": 5648,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6841:5:28",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "6808:38:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 5650,
                  "nodeType": "ExpressionStatement",
                  "src": "6808:38:28"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 5655,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 5651,
                        "name": "lpToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5270,
                        "src": "6856:7:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_IERC20_$1291_$dyn_storage",
                          "typeString": "contract IERC20[] storage ref"
                        }
                      },
                      "id": 5653,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 5652,
                        "name": "_pid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5559,
                        "src": "6864:4:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "6856:13:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$1291",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 5654,
                      "name": "newLpToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5602,
                      "src": "6872:10:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$1291",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "6856:26:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$1291",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 5656,
                  "nodeType": "ExpressionStatement",
                  "src": "6856:26:28"
                }
              ]
            },
            "documentation": {
              "id": 5557,
              "nodeType": "StructuredDocumentation",
              "src": "6087:143:28",
              "text": "@notice Migrate LP token to another LP contract through the `migrator` contract.\n @param _pid The index of the pool. See `poolInfo`."
            },
            "functionSelector": "454b0608",
            "id": 5658,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "migrate",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 5560,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5559,
                  "mutability": "mutable",
                  "name": "_pid",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 5658,
                  "src": "6252:12:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5558,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6252:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6251:14:28"
            },
            "returnParameters": {
              "id": 5561,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6273:0:28"
            },
            "scope": 6420,
            "src": "6235:654:28",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 5763,
              "nodeType": "Block",
              "src": "7202:700:28",
              "statements": [
                {
                  "assignments": [
                    5669
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5669,
                      "mutability": "mutable",
                      "name": "pool",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 5763,
                      "src": "7212:20:28",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_PoolInfo_$5257_memory_ptr",
                        "typeString": "struct MiniChefV2.PoolInfo"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 5668,
                        "name": "PoolInfo",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 5257,
                        "src": "7212:8:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PoolInfo_$5257_storage_ptr",
                          "typeString": "struct MiniChefV2.PoolInfo"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 5673,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 5670,
                      "name": "poolInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5266,
                      "src": "7235:8:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_PoolInfo_$5257_storage_$dyn_storage",
                        "typeString": "struct MiniChefV2.PoolInfo storage ref[] storage ref"
                      }
                    },
                    "id": 5672,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 5671,
                      "name": "_pid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5661,
                      "src": "7244:4:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "7235:14:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_PoolInfo_$5257_storage",
                      "typeString": "struct MiniChefV2.PoolInfo storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7212:37:28"
                },
                {
                  "assignments": [
                    5675
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5675,
                      "mutability": "mutable",
                      "name": "user",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 5763,
                      "src": "7259:21:28",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_UserInfo_$5250_storage_ptr",
                        "typeString": "struct MiniChefV2.UserInfo"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 5674,
                        "name": "UserInfo",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 5250,
                        "src": "7259:8:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserInfo_$5250_storage_ptr",
                          "typeString": "struct MiniChefV2.UserInfo"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 5681,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 5676,
                        "name": "userInfo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5281,
                        "src": "7283:8:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$5250_storage_$_$",
                          "typeString": "mapping(uint256 => mapping(address => struct MiniChefV2.UserInfo storage ref))"
                        }
                      },
                      "id": 5678,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 5677,
                        "name": "_pid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5661,
                        "src": "7292:4:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "7283:14:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$5250_storage_$",
                        "typeString": "mapping(address => struct MiniChefV2.UserInfo storage ref)"
                      }
                    },
                    "id": 5680,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 5679,
                      "name": "_user",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5663,
                      "src": "7298:5:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "7283:21:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_UserInfo_$5250_storage",
                      "typeString": "struct MiniChefV2.UserInfo storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7259:45:28"
                },
                {
                  "assignments": [
                    5683
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5683,
                      "mutability": "mutable",
                      "name": "accSushiPerShare",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 5763,
                      "src": "7314:24:28",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 5682,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7314:7:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 5686,
                  "initialValue": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 5684,
                      "name": "pool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5669,
                      "src": "7341:4:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_PoolInfo_$5257_memory_ptr",
                        "typeString": "struct MiniChefV2.PoolInfo memory"
                      }
                    },
                    "id": 5685,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "accSushiPerShare",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 5252,
                    "src": "7341:21:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7314:48:28"
                },
                {
                  "assignments": [
                    5688
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5688,
                      "mutability": "mutable",
                      "name": "lpSupply",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 5763,
                      "src": "7372:16:28",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 5687,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7372:7:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 5698,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 5695,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "7423:4:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MiniChefV2_$6420",
                              "typeString": "contract MiniChefV2"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MiniChefV2_$6420",
                              "typeString": "contract MiniChefV2"
                            }
                          ],
                          "id": 5694,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7415:7:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 5693,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "7415:7:28",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 5696,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7415:13:28",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 5689,
                          "name": "lpToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5270,
                          "src": "7391:7:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_contract$_IERC20_$1291_$dyn_storage",
                            "typeString": "contract IERC20[] storage ref"
                          }
                        },
                        "id": 5691,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 5690,
                          "name": "_pid",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5661,
                          "src": "7399:4:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7391:13:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1291",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 5692,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1238,
                      "src": "7391:23:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 5697,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7391:38:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7372:57:28"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 5707,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 5703,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 5699,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "7443:5:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 5700,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "7443:15:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 5701,
                          "name": "pool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5669,
                          "src": "7461:4:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PoolInfo_$5257_memory_ptr",
                            "typeString": "struct MiniChefV2.PoolInfo memory"
                          }
                        },
                        "id": 5702,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "lastRewardTime",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 5254,
                        "src": "7461:19:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      "src": "7443:37:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 5706,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 5704,
                        "name": "lpSupply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5688,
                        "src": "7484:8:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 5705,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7496:1:28",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "7484:13:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "7443:54:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 5743,
                  "nodeType": "IfStatement",
                  "src": "7439:341:28",
                  "trueBody": {
                    "id": 5742,
                    "nodeType": "Block",
                    "src": "7499:281:28",
                    "statements": [
                      {
                        "assignments": [
                          5709
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 5709,
                            "mutability": "mutable",
                            "name": "time",
                            "nodeType": "VariableDeclaration",
                            "overrides": null,
                            "scope": 5742,
                            "src": "7513:12:28",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 5708,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "7513:7:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 5716,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 5713,
                                "name": "pool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5669,
                                "src": "7548:4:28",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_PoolInfo_$5257_memory_ptr",
                                  "typeString": "struct MiniChefV2.PoolInfo memory"
                                }
                              },
                              "id": 5714,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "lastRewardTime",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 5254,
                              "src": "7548:19:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 5710,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "7528:5:28",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 5711,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "7528:15:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 5712,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sub",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1702,
                            "src": "7528:19:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 5715,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7528:40:28",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "7513:55:28"
                      },
                      {
                        "assignments": [
                          5718
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 5718,
                            "mutability": "mutable",
                            "name": "sushiReward",
                            "nodeType": "VariableDeclaration",
                            "overrides": null,
                            "scope": 5742,
                            "src": "7582:19:28",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 5717,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "7582:7:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 5729,
                        "initialValue": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 5728,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 5724,
                                  "name": "pool",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 5669,
                                  "src": "7633:4:28",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_PoolInfo_$5257_memory_ptr",
                                    "typeString": "struct MiniChefV2.PoolInfo memory"
                                  }
                                },
                                "id": 5725,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "allocPoint",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 5256,
                                "src": "7633:15:28",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint64",
                                  "typeString": "uint64"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint64",
                                  "typeString": "uint64"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 5721,
                                    "name": "sushiPerSecond",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 5291,
                                    "src": "7613:14:28",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 5719,
                                    "name": "time",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 5709,
                                    "src": "7604:4:28",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 5720,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "mul",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1730,
                                  "src": "7604:8:28",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                    "typeString": "function (uint256,uint256) pure returns (uint256)"
                                  }
                                },
                                "id": 5722,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7604:24:28",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 5723,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "mul",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1730,
                              "src": "7604:28:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 5726,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7604:45:28",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 5727,
                            "name": "totalAllocPoint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5289,
                            "src": "7652:15:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7604:63:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "7582:85:28"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 5740,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 5730,
                            "name": "accSushiPerShare",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5683,
                            "src": "7681:16:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 5738,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "id": 5735,
                                      "name": "ACC_SUSHI_PRECISION",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 5294,
                                      "src": "7737:19:28",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 5733,
                                      "name": "sushiReward",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 5718,
                                      "src": "7721:11:28",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 5734,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "mul",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1730,
                                    "src": "7721:15:28",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 5736,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "7721:36:28",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "/",
                                "rightExpression": {
                                  "argumentTypes": null,
                                  "id": 5737,
                                  "name": "lpSupply",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 5688,
                                  "src": "7760:8:28",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "7721:47:28",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "id": 5731,
                                "name": "accSushiPerShare",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5683,
                                "src": "7700:16:28",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 5732,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "add",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1680,
                              "src": "7700:20:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 5739,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7700:69:28",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7681:88:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 5741,
                        "nodeType": "ExpressionStatement",
                        "src": "7681:88:28"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 5761,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 5744,
                      "name": "pending",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5666,
                      "src": "7789:7:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 5756,
                                "name": "user",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5675,
                                "src": "7867:4:28",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_UserInfo_$5250_storage_ptr",
                                  "typeString": "struct MiniChefV2.UserInfo storage pointer"
                                }
                              },
                              "id": 5757,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "rewardDebt",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 5249,
                              "src": "7867:15:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 5753,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "argumentTypes": null,
                                    "arguments": [
                                      {
                                        "argumentTypes": null,
                                        "id": 5750,
                                        "name": "accSushiPerShare",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 5683,
                                        "src": "7822:16:28",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": null,
                                        "expression": {
                                          "argumentTypes": null,
                                          "id": 5747,
                                          "name": "user",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 5675,
                                          "src": "7806:4:28",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_UserInfo_$5250_storage_ptr",
                                            "typeString": "struct MiniChefV2.UserInfo storage pointer"
                                          }
                                        },
                                        "id": 5748,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "amount",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 5247,
                                        "src": "7806:11:28",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "id": 5749,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "mul",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 1730,
                                      "src": "7806:15:28",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                                      }
                                    },
                                    "id": 5751,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "7806:33:28",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "/",
                                  "rightExpression": {
                                    "argumentTypes": null,
                                    "id": 5752,
                                    "name": "ACC_SUSHI_PRECISION",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 5294,
                                    "src": "7842:19:28",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "7806:55:28",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 5746,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "7799:6:28",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_int256_$",
                                  "typeString": "type(int256)"
                                },
                                "typeName": {
                                  "id": 5745,
                                  "name": "int256",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "7799:6:28",
                                  "typeDescriptions": {
                                    "typeIdentifier": null,
                                    "typeString": null
                                  }
                                }
                              },
                              "id": 5754,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7799:63:28",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              }
                            },
                            "id": 5755,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sub",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 10458,
                            "src": "7799:67:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_int256_$_t_int256_$returns$_t_int256_$bound_to$_t_int256_$",
                              "typeString": "function (int256,int256) pure returns (int256)"
                            }
                          },
                          "id": 5758,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7799:84:28",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "id": 5759,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "toUInt256",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 10518,
                        "src": "7799:94:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_int256_$returns$_t_uint256_$bound_to$_t_int256_$",
                          "typeString": "function (int256) pure returns (uint256)"
                        }
                      },
                      "id": 5760,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7799:96:28",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7789:106:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 5762,
                  "nodeType": "ExpressionStatement",
                  "src": "7789:106:28"
                }
              ]
            },
            "documentation": {
              "id": 5659,
              "nodeType": "StructuredDocumentation",
              "src": "6895:211:28",
              "text": "@notice View function to see pending SUSHI on frontend.\n @param _pid The index of the pool. See `poolInfo`.\n @param _user Address of user.\n @return pending SUSHI reward for a given user."
            },
            "functionSelector": "195426ec",
            "id": 5764,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "pendingSushi",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 5664,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5661,
                  "mutability": "mutable",
                  "name": "_pid",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 5764,
                  "src": "7133:12:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5660,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7133:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5663,
                  "mutability": "mutable",
                  "name": "_user",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 5764,
                  "src": "7147:13:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5662,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7147:7:28",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7132:29:28"
            },
            "returnParameters": {
              "id": 5667,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5666,
                  "mutability": "mutable",
                  "name": "pending",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 5764,
                  "src": "7185:15:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5665,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7185:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7184:17:28"
            },
            "scope": 6420,
            "src": "7111:791:28",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 5794,
              "nodeType": "Block",
              "src": "8139:129:28",
              "statements": [
                {
                  "assignments": [
                    5772
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5772,
                      "mutability": "mutable",
                      "name": "len",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 5794,
                      "src": "8149:11:28",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 5771,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8149:7:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 5775,
                  "initialValue": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 5773,
                      "name": "pids",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5768,
                      "src": "8163:4:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                        "typeString": "uint256[] calldata"
                      }
                    },
                    "id": 5774,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "8163:11:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8149:25:28"
                },
                {
                  "body": {
                    "id": 5792,
                    "nodeType": "Block",
                    "src": "8218:44:28",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 5787,
                                "name": "pids",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5768,
                                "src": "8243:4:28",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                                  "typeString": "uint256[] calldata"
                                }
                              },
                              "id": 5789,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 5788,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5777,
                                "src": "8248:1:28",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "8243:7:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 5786,
                            "name": "updatePool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5898,
                            "src": "8232:10:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$_t_struct$_PoolInfo_$5257_memory_ptr_$",
                              "typeString": "function (uint256) returns (struct MiniChefV2.PoolInfo memory)"
                            }
                          },
                          "id": 5790,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8232:19:28",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PoolInfo_$5257_memory_ptr",
                            "typeString": "struct MiniChefV2.PoolInfo memory"
                          }
                        },
                        "id": 5791,
                        "nodeType": "ExpressionStatement",
                        "src": "8232:19:28"
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 5782,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 5780,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5777,
                      "src": "8204:1:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 5781,
                      "name": "len",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5772,
                      "src": "8208:3:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8204:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 5793,
                  "initializationExpression": {
                    "assignments": [
                      5777
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 5777,
                        "mutability": "mutable",
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 5793,
                        "src": "8189:9:28",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 5776,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "8189:7:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 5779,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 5778,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8201:1:28",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "8189:13:28"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 5784,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": true,
                      "src": "8213:3:28",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 5783,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5777,
                        "src": "8215:1:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 5785,
                    "nodeType": "ExpressionStatement",
                    "src": "8213:3:28"
                  },
                  "nodeType": "ForStatement",
                  "src": "8184:78:28"
                }
              ]
            },
            "documentation": {
              "id": 5765,
              "nodeType": "StructuredDocumentation",
              "src": "7908:167:28",
              "text": "@notice Update reward variables for all pools. Be careful of gas spending!\n @param pids Pool IDs of all to be updated. Make sure to update all active pools."
            },
            "functionSelector": "57a5b58c",
            "id": 5795,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "massUpdatePools",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 5769,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5768,
                  "mutability": "mutable",
                  "name": "pids",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 5795,
                  "src": "8105:23:28",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 5766,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "8105:7:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 5767,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "8105:9:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "8104:25:28"
            },
            "returnParameters": {
              "id": 5770,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8139:0:28"
            },
            "scope": 6420,
            "src": "8080:188:28",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 5897,
              "nodeType": "Block",
              "src": "8518:701:28",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 5807,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 5803,
                      "name": "pool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5801,
                      "src": "8528:4:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_PoolInfo_$5257_memory_ptr",
                        "typeString": "struct MiniChefV2.PoolInfo memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 5804,
                        "name": "poolInfo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5266,
                        "src": "8535:8:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_PoolInfo_$5257_storage_$dyn_storage",
                          "typeString": "struct MiniChefV2.PoolInfo storage ref[] storage ref"
                        }
                      },
                      "id": 5806,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 5805,
                        "name": "pid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5798,
                        "src": "8544:3:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "8535:13:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_PoolInfo_$5257_storage",
                        "typeString": "struct MiniChefV2.PoolInfo storage ref"
                      }
                    },
                    "src": "8528:20:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_PoolInfo_$5257_memory_ptr",
                      "typeString": "struct MiniChefV2.PoolInfo memory"
                    }
                  },
                  "id": 5808,
                  "nodeType": "ExpressionStatement",
                  "src": "8528:20:28"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 5813,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 5809,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "8562:5:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 5810,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "8562:15:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 5811,
                        "name": "pool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5801,
                        "src": "8580:4:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PoolInfo_$5257_memory_ptr",
                          "typeString": "struct MiniChefV2.PoolInfo memory"
                        }
                      },
                      "id": 5812,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "lastRewardTime",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5254,
                      "src": "8580:19:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "src": "8562:37:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 5896,
                  "nodeType": "IfStatement",
                  "src": "8558:655:28",
                  "trueBody": {
                    "id": 5895,
                    "nodeType": "Block",
                    "src": "8601:612:28",
                    "statements": [
                      {
                        "assignments": [
                          5815
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 5815,
                            "mutability": "mutable",
                            "name": "lpSupply",
                            "nodeType": "VariableDeclaration",
                            "overrides": null,
                            "scope": 5895,
                            "src": "8615:16:28",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 5814,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "8615:7:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 5825,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 5822,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "8665:4:28",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_MiniChefV2_$6420",
                                    "typeString": "contract MiniChefV2"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_MiniChefV2_$6420",
                                    "typeString": "contract MiniChefV2"
                                  }
                                ],
                                "id": 5821,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "8657:7:28",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 5820,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "8657:7:28",
                                  "typeDescriptions": {
                                    "typeIdentifier": null,
                                    "typeString": null
                                  }
                                }
                              },
                              "id": 5823,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8657:13:28",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 5816,
                                "name": "lpToken",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5270,
                                "src": "8634:7:28",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_contract$_IERC20_$1291_$dyn_storage",
                                  "typeString": "contract IERC20[] storage ref"
                                }
                              },
                              "id": 5818,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 5817,
                                "name": "pid",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5798,
                                "src": "8642:3:28",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "8634:12:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$1291",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 5819,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1238,
                            "src": "8634:22:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 5824,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8634:37:28",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "8615:56:28"
                      },
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 5828,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 5826,
                            "name": "lpSupply",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5815,
                            "src": "8689:8:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 5827,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8700:1:28",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "8689:12:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 5870,
                        "nodeType": "IfStatement",
                        "src": "8685:335:28",
                        "trueBody": {
                          "id": 5869,
                          "nodeType": "Block",
                          "src": "8703:317:28",
                          "statements": [
                            {
                              "assignments": [
                                5830
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 5830,
                                  "mutability": "mutable",
                                  "name": "time",
                                  "nodeType": "VariableDeclaration",
                                  "overrides": null,
                                  "scope": 5869,
                                  "src": "8721:12:28",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 5829,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "8721:7:28",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "value": null,
                                  "visibility": "internal"
                                }
                              ],
                              "id": 5837,
                              "initialValue": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 5834,
                                      "name": "pool",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 5801,
                                      "src": "8756:4:28",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_PoolInfo_$5257_memory_ptr",
                                        "typeString": "struct MiniChefV2.PoolInfo memory"
                                      }
                                    },
                                    "id": 5835,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "lastRewardTime",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 5254,
                                    "src": "8756:19:28",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint64",
                                      "typeString": "uint64"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint64",
                                      "typeString": "uint64"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 5831,
                                      "name": "block",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -4,
                                      "src": "8736:5:28",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_block",
                                        "typeString": "block"
                                      }
                                    },
                                    "id": 5832,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "timestamp",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": null,
                                    "src": "8736:15:28",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 5833,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sub",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1702,
                                  "src": "8736:19:28",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                    "typeString": "function (uint256,uint256) pure returns (uint256)"
                                  }
                                },
                                "id": 5836,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8736:40:28",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "8721:55:28"
                            },
                            {
                              "assignments": [
                                5839
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 5839,
                                  "mutability": "mutable",
                                  "name": "sushiReward",
                                  "nodeType": "VariableDeclaration",
                                  "overrides": null,
                                  "scope": 5869,
                                  "src": "8794:19:28",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 5838,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "8794:7:28",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "value": null,
                                  "visibility": "internal"
                                }
                              ],
                              "id": 5850,
                              "initialValue": {
                                "argumentTypes": null,
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 5849,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "expression": {
                                        "argumentTypes": null,
                                        "id": 5845,
                                        "name": "pool",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 5801,
                                        "src": "8845:4:28",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_PoolInfo_$5257_memory_ptr",
                                          "typeString": "struct MiniChefV2.PoolInfo memory"
                                        }
                                      },
                                      "id": 5846,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "allocPoint",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 5256,
                                      "src": "8845:15:28",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint64",
                                        "typeString": "uint64"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint64",
                                        "typeString": "uint64"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": null,
                                      "arguments": [
                                        {
                                          "argumentTypes": null,
                                          "id": 5842,
                                          "name": "sushiPerSecond",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 5291,
                                          "src": "8825:14:28",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": null,
                                          "id": 5840,
                                          "name": "time",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 5830,
                                          "src": "8816:4:28",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "id": 5841,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "mul",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 1730,
                                        "src": "8816:8:28",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                                        }
                                      },
                                      "id": 5843,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "8816:24:28",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 5844,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "mul",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1730,
                                    "src": "8816:28:28",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 5847,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "8816:45:28",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "/",
                                "rightExpression": {
                                  "argumentTypes": null,
                                  "id": 5848,
                                  "name": "totalAllocPoint",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 5289,
                                  "src": "8864:15:28",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "8816:63:28",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "8794:85:28"
                            },
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 5867,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 5851,
                                    "name": "pool",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 5801,
                                    "src": "8897:4:28",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_PoolInfo_$5257_memory_ptr",
                                      "typeString": "struct MiniChefV2.PoolInfo memory"
                                    }
                                  },
                                  "id": 5853,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "accSushiPerShare",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 5252,
                                  "src": "8897:21:28",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint128",
                                    "typeString": "uint128"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "arguments": [],
                                      "expression": {
                                        "argumentTypes": [],
                                        "expression": {
                                          "argumentTypes": null,
                                          "components": [
                                            {
                                              "argumentTypes": null,
                                              "commonType": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              },
                                              "id": 5862,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "leftExpression": {
                                                "argumentTypes": null,
                                                "arguments": [
                                                  {
                                                    "argumentTypes": null,
                                                    "id": 5859,
                                                    "name": "ACC_SUSHI_PRECISION",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 5294,
                                                    "src": "8964:19:28",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_uint256",
                                                      "typeString": "uint256"
                                                    }
                                                  }
                                                ],
                                                "expression": {
                                                  "argumentTypes": [
                                                    {
                                                      "typeIdentifier": "t_uint256",
                                                      "typeString": "uint256"
                                                    }
                                                  ],
                                                  "expression": {
                                                    "argumentTypes": null,
                                                    "id": 5857,
                                                    "name": "sushiReward",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 5839,
                                                    "src": "8948:11:28",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_uint256",
                                                      "typeString": "uint256"
                                                    }
                                                  },
                                                  "id": 5858,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "memberName": "mul",
                                                  "nodeType": "MemberAccess",
                                                  "referencedDeclaration": 1730,
                                                  "src": "8948:15:28",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                                    "typeString": "function (uint256,uint256) pure returns (uint256)"
                                                  }
                                                },
                                                "id": 5860,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "8948:36:28",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "nodeType": "BinaryOperation",
                                              "operator": "/",
                                              "rightExpression": {
                                                "argumentTypes": null,
                                                "id": 5861,
                                                "name": "lpSupply",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 5815,
                                                "src": "8987:8:28",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "src": "8948:47:28",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            }
                                          ],
                                          "id": 5863,
                                          "isConstant": false,
                                          "isInlineArray": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "TupleExpression",
                                          "src": "8947:49:28",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "id": 5864,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "to128",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 1756,
                                        "src": "8947:55:28",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint128_$bound_to$_t_uint256_$",
                                          "typeString": "function (uint256) pure returns (uint128)"
                                        }
                                      },
                                      "id": 5865,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "8947:57:28",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint128",
                                        "typeString": "uint128"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint128",
                                        "typeString": "uint128"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": null,
                                      "expression": {
                                        "argumentTypes": null,
                                        "id": 5854,
                                        "name": "pool",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 5801,
                                        "src": "8921:4:28",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_PoolInfo_$5257_memory_ptr",
                                          "typeString": "struct MiniChefV2.PoolInfo memory"
                                        }
                                      },
                                      "id": 5855,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "accSushiPerShare",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 5252,
                                      "src": "8921:21:28",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint128",
                                        "typeString": "uint128"
                                      }
                                    },
                                    "id": 5856,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "add",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1832,
                                    "src": "8921:25:28",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint128_$_t_uint128_$returns$_t_uint128_$bound_to$_t_uint128_$",
                                      "typeString": "function (uint128,uint128) pure returns (uint128)"
                                    }
                                  },
                                  "id": 5866,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "8921:84:28",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint128",
                                    "typeString": "uint128"
                                  }
                                },
                                "src": "8897:108:28",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint128",
                                  "typeString": "uint128"
                                }
                              },
                              "id": 5868,
                              "nodeType": "ExpressionStatement",
                              "src": "8897:108:28"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 5878,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 5871,
                              "name": "pool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5801,
                              "src": "9033:4:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_PoolInfo_$5257_memory_ptr",
                                "typeString": "struct MiniChefV2.PoolInfo memory"
                              }
                            },
                            "id": 5873,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "lastRewardTime",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 5254,
                            "src": "9033:19:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 5874,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -4,
                                  "src": "9055:5:28",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 5875,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "9055:15:28",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 5876,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "to64",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1782,
                              "src": "9055:20:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint64_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256) pure returns (uint64)"
                              }
                            },
                            "id": 5877,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9055:22:28",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            }
                          },
                          "src": "9033:44:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "id": 5879,
                        "nodeType": "ExpressionStatement",
                        "src": "9033:44:28"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 5884,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 5880,
                              "name": "poolInfo",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5266,
                              "src": "9091:8:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_PoolInfo_$5257_storage_$dyn_storage",
                                "typeString": "struct MiniChefV2.PoolInfo storage ref[] storage ref"
                              }
                            },
                            "id": 5882,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 5881,
                              "name": "pid",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5798,
                              "src": "9100:3:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "9091:13:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_PoolInfo_$5257_storage",
                              "typeString": "struct MiniChefV2.PoolInfo storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 5883,
                            "name": "pool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5801,
                            "src": "9107:4:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_PoolInfo_$5257_memory_ptr",
                              "typeString": "struct MiniChefV2.PoolInfo memory"
                            }
                          },
                          "src": "9091:20:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PoolInfo_$5257_storage",
                            "typeString": "struct MiniChefV2.PoolInfo storage ref"
                          }
                        },
                        "id": 5885,
                        "nodeType": "ExpressionStatement",
                        "src": "9091:20:28"
                      },
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 5887,
                              "name": "pid",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5798,
                              "src": "9144:3:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 5888,
                                "name": "pool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5801,
                                "src": "9149:4:28",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_PoolInfo_$5257_memory_ptr",
                                  "typeString": "struct MiniChefV2.PoolInfo memory"
                                }
                              },
                              "id": 5889,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "lastRewardTime",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 5254,
                              "src": "9149:19:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 5890,
                              "name": "lpSupply",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5815,
                              "src": "9170:8:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 5891,
                                "name": "pool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5801,
                                "src": "9180:4:28",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_PoolInfo_$5257_memory_ptr",
                                  "typeString": "struct MiniChefV2.PoolInfo memory"
                                }
                              },
                              "id": 5892,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "accSushiPerShare",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 5252,
                              "src": "9180:21:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint128",
                                "typeString": "uint128"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint128",
                                "typeString": "uint128"
                              }
                            ],
                            "id": 5886,
                            "name": "LogUpdatePool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5362,
                            "src": "9130:13:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint64_$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,uint64,uint256,uint256)"
                            }
                          },
                          "id": 5893,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9130:72:28",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 5894,
                        "nodeType": "EmitStatement",
                        "src": "9125:77:28"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 5796,
              "nodeType": "StructuredDocumentation",
              "src": "8274:168:28",
              "text": "@notice Update reward variables of the given pool.\n @param pid The index of the pool. See `poolInfo`.\n @return pool Returns the pool that was updated."
            },
            "functionSelector": "51eb05a6",
            "id": 5898,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "updatePool",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 5799,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5798,
                  "mutability": "mutable",
                  "name": "pid",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 5898,
                  "src": "8467:11:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5797,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8467:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "8466:13:28"
            },
            "returnParameters": {
              "id": 5802,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5801,
                  "mutability": "mutable",
                  "name": "pool",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 5898,
                  "src": "8496:20:28",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_PoolInfo_$5257_memory_ptr",
                    "typeString": "struct MiniChefV2.PoolInfo"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 5800,
                    "name": "PoolInfo",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 5257,
                    "src": "8496:8:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_PoolInfo_$5257_storage_ptr",
                      "typeString": "struct MiniChefV2.PoolInfo"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "8495:22:28"
            },
            "scope": 6420,
            "src": "8447:772:28",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 6000,
              "nodeType": "Block",
              "src": "9522:606:28",
              "statements": [
                {
                  "assignments": [
                    5909
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5909,
                      "mutability": "mutable",
                      "name": "pool",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 6000,
                      "src": "9532:20:28",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_PoolInfo_$5257_memory_ptr",
                        "typeString": "struct MiniChefV2.PoolInfo"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 5908,
                        "name": "PoolInfo",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 5257,
                        "src": "9532:8:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PoolInfo_$5257_storage_ptr",
                          "typeString": "struct MiniChefV2.PoolInfo"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 5913,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 5911,
                        "name": "pid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5901,
                        "src": "9566:3:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 5910,
                      "name": "updatePool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5898,
                      "src": "9555:10:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$_t_struct$_PoolInfo_$5257_memory_ptr_$",
                        "typeString": "function (uint256) returns (struct MiniChefV2.PoolInfo memory)"
                      }
                    },
                    "id": 5912,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9555:15:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_PoolInfo_$5257_memory_ptr",
                      "typeString": "struct MiniChefV2.PoolInfo memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9532:38:28"
                },
                {
                  "assignments": [
                    5915
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5915,
                      "mutability": "mutable",
                      "name": "user",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 6000,
                      "src": "9580:21:28",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_UserInfo_$5250_storage_ptr",
                        "typeString": "struct MiniChefV2.UserInfo"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 5914,
                        "name": "UserInfo",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 5250,
                        "src": "9580:8:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserInfo_$5250_storage_ptr",
                          "typeString": "struct MiniChefV2.UserInfo"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 5921,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 5916,
                        "name": "userInfo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5281,
                        "src": "9604:8:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$5250_storage_$_$",
                          "typeString": "mapping(uint256 => mapping(address => struct MiniChefV2.UserInfo storage ref))"
                        }
                      },
                      "id": 5918,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 5917,
                        "name": "pid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5901,
                        "src": "9613:3:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "9604:13:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$5250_storage_$",
                        "typeString": "mapping(address => struct MiniChefV2.UserInfo storage ref)"
                      }
                    },
                    "id": 5920,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 5919,
                      "name": "to",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5905,
                      "src": "9618:2:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "9604:17:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_UserInfo_$5250_storage",
                      "typeString": "struct MiniChefV2.UserInfo storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9580:41:28"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 5930,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 5922,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5915,
                        "src": "9651:4:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserInfo_$5250_storage_ptr",
                          "typeString": "struct MiniChefV2.UserInfo storage pointer"
                        }
                      },
                      "id": 5924,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "amount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5247,
                      "src": "9651:11:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 5928,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5903,
                          "src": "9681:6:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 5925,
                            "name": "user",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5915,
                            "src": "9665:4:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_UserInfo_$5250_storage_ptr",
                              "typeString": "struct MiniChefV2.UserInfo storage pointer"
                            }
                          },
                          "id": 5926,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "amount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 5247,
                          "src": "9665:11:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 5927,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1680,
                        "src": "9665:15:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 5929,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9665:23:28",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9651:37:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 5931,
                  "nodeType": "ExpressionStatement",
                  "src": "9651:37:28"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 5949,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 5932,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5915,
                        "src": "9698:4:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserInfo_$5250_storage_ptr",
                          "typeString": "struct MiniChefV2.UserInfo storage pointer"
                        }
                      },
                      "id": 5934,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "rewardDebt",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5249,
                      "src": "9698:15:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 5946,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 5942,
                                      "name": "pool",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 5909,
                                      "src": "9754:4:28",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_PoolInfo_$5257_memory_ptr",
                                        "typeString": "struct MiniChefV2.PoolInfo memory"
                                      }
                                    },
                                    "id": 5943,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "accSushiPerShare",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 5252,
                                    "src": "9754:21:28",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint128",
                                      "typeString": "uint128"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint128",
                                      "typeString": "uint128"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 5940,
                                    "name": "amount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 5903,
                                    "src": "9743:6:28",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 5941,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "mul",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1730,
                                  "src": "9743:10:28",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                    "typeString": "function (uint256,uint256) pure returns (uint256)"
                                  }
                                },
                                "id": 5944,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "9743:33:28",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "/",
                              "rightExpression": {
                                "argumentTypes": null,
                                "id": 5945,
                                "name": "ACC_SUSHI_PRECISION",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5294,
                                "src": "9779:19:28",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "9743:55:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 5939,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "9736:6:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_int256_$",
                              "typeString": "type(int256)"
                            },
                            "typeName": {
                              "id": 5938,
                              "name": "int256",
                              "nodeType": "ElementaryTypeName",
                              "src": "9736:6:28",
                              "typeDescriptions": {
                                "typeIdentifier": null,
                                "typeString": null
                              }
                            }
                          },
                          "id": 5947,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9736:63:28",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 5935,
                            "name": "user",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5915,
                            "src": "9716:4:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_UserInfo_$5250_storage_ptr",
                              "typeString": "struct MiniChefV2.UserInfo storage pointer"
                            }
                          },
                          "id": 5936,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "rewardDebt",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 5249,
                          "src": "9716:15:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "id": 5937,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 10498,
                        "src": "9716:19:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_int256_$_t_int256_$returns$_t_int256_$bound_to$_t_int256_$",
                          "typeString": "function (int256,int256) pure returns (int256)"
                        }
                      },
                      "id": 5948,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9716:84:28",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "src": "9698:102:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "id": 5950,
                  "nodeType": "ExpressionStatement",
                  "src": "9698:102:28"
                },
                {
                  "assignments": [
                    5952
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5952,
                      "mutability": "mutable",
                      "name": "_rewarder",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 6000,
                      "src": "9835:19:28",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IRewarder_$9958",
                        "typeString": "contract IRewarder"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 5951,
                        "name": "IRewarder",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 9958,
                        "src": "9835:9:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IRewarder_$9958",
                          "typeString": "contract IRewarder"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 5956,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 5953,
                      "name": "rewarder",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5274,
                      "src": "9857:8:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_contract$_IRewarder_$9958_$dyn_storage",
                        "typeString": "contract IRewarder[] storage ref"
                      }
                    },
                    "id": 5955,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 5954,
                      "name": "pid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5901,
                      "src": "9866:3:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "9857:13:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IRewarder_$9958",
                      "typeString": "contract IRewarder"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9835:35:28"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 5965,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 5959,
                          "name": "_rewarder",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5952,
                          "src": "9892:9:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IRewarder_$9958",
                            "typeString": "contract IRewarder"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_IRewarder_$9958",
                            "typeString": "contract IRewarder"
                          }
                        ],
                        "id": 5958,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "9884:7:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 5957,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "9884:7:28",
                          "typeDescriptions": {
                            "typeIdentifier": null,
                            "typeString": null
                          }
                        }
                      },
                      "id": 5960,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9884:18:28",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 5963,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9914:1:28",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 5962,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "9906:7:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 5961,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "9906:7:28",
                          "typeDescriptions": {
                            "typeIdentifier": null,
                            "typeString": null
                          }
                        }
                      },
                      "id": 5964,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9906:10:28",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "9884:32:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 5978,
                  "nodeType": "IfStatement",
                  "src": "9880:115:28",
                  "trueBody": {
                    "id": 5977,
                    "nodeType": "Block",
                    "src": "9918:77:28",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 5969,
                              "name": "pid",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5901,
                              "src": "9956:3:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 5970,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5905,
                              "src": "9961:2:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 5971,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5905,
                              "src": "9965:2:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 5972,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9969:1:28",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 5973,
                                "name": "user",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5915,
                                "src": "9972:4:28",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_UserInfo_$5250_storage_ptr",
                                  "typeString": "struct MiniChefV2.UserInfo storage pointer"
                                }
                              },
                              "id": 5974,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "amount",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 5247,
                              "src": "9972:11:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 5966,
                              "name": "_rewarder",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5952,
                              "src": "9932:9:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IRewarder_$9958",
                                "typeString": "contract IRewarder"
                              }
                            },
                            "id": 5968,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "onSushiReward",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 9942,
                            "src": "9932:23:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,address,address,uint256,uint256) external"
                            }
                          },
                          "id": 5975,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9932:52:28",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 5976,
                        "nodeType": "ExpressionStatement",
                        "src": "9932:52:28"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 5983,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "10035:3:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 5984,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "10035:10:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 5987,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "10055:4:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MiniChefV2_$6420",
                              "typeString": "contract MiniChefV2"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MiniChefV2_$6420",
                              "typeString": "contract MiniChefV2"
                            }
                          ],
                          "id": 5986,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10047:7:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 5985,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "10047:7:28",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 5988,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10047:13:28",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 5989,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5903,
                        "src": "10062:6:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 5979,
                          "name": "lpToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5270,
                          "src": "10005:7:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_contract$_IERC20_$1291_$dyn_storage",
                            "typeString": "contract IERC20[] storage ref"
                          }
                        },
                        "id": 5981,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 5980,
                          "name": "pid",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5901,
                          "src": "10013:3:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "10005:12:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1291",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 5982,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1654,
                      "src": "10005:29:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1291_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$1291_$",
                        "typeString": "function (contract IERC20,address,address,uint256)"
                      }
                    },
                    "id": 5990,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10005:64:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5991,
                  "nodeType": "ExpressionStatement",
                  "src": "10005:64:28"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 5993,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "10093:3:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 5994,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "10093:10:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 5995,
                        "name": "pid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5901,
                        "src": "10105:3:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 5996,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5903,
                        "src": "10110:6:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 5997,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5905,
                        "src": "10118:2:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 5992,
                      "name": "Deposit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5304,
                      "src": "10085:7:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (address,uint256,uint256,address)"
                      }
                    },
                    "id": 5998,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10085:36:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5999,
                  "nodeType": "EmitStatement",
                  "src": "10080:41:28"
                }
              ]
            },
            "documentation": {
              "id": 5899,
              "nodeType": "StructuredDocumentation",
              "src": "9225:227:28",
              "text": "@notice Deposit LP tokens to MCV2 for SUSHI allocation.\n @param pid The index of the pool. See `poolInfo`.\n @param amount LP token amount to deposit.\n @param to The receiver of `amount` deposit benefit."
            },
            "functionSelector": "8dbdbe6d",
            "id": 6001,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deposit",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 5906,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5901,
                  "mutability": "mutable",
                  "name": "pid",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 6001,
                  "src": "9474:11:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5900,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9474:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5903,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 6001,
                  "src": "9487:14:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5902,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9487:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5905,
                  "mutability": "mutable",
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 6001,
                  "src": "9503:10:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5904,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9503:7:28",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "9473:41:28"
            },
            "returnParameters": {
              "id": 5907,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9522:0:28"
            },
            "scope": 6420,
            "src": "9457:671:28",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 6100,
              "nodeType": "Block",
              "src": "10400:596:28",
              "statements": [
                {
                  "assignments": [
                    6012
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 6012,
                      "mutability": "mutable",
                      "name": "pool",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 6100,
                      "src": "10410:20:28",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_PoolInfo_$5257_memory_ptr",
                        "typeString": "struct MiniChefV2.PoolInfo"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 6011,
                        "name": "PoolInfo",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 5257,
                        "src": "10410:8:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PoolInfo_$5257_storage_ptr",
                          "typeString": "struct MiniChefV2.PoolInfo"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 6016,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 6014,
                        "name": "pid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6004,
                        "src": "10444:3:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 6013,
                      "name": "updatePool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5898,
                      "src": "10433:10:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$_t_struct$_PoolInfo_$5257_memory_ptr_$",
                        "typeString": "function (uint256) returns (struct MiniChefV2.PoolInfo memory)"
                      }
                    },
                    "id": 6015,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10433:15:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_PoolInfo_$5257_memory_ptr",
                      "typeString": "struct MiniChefV2.PoolInfo memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10410:38:28"
                },
                {
                  "assignments": [
                    6018
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 6018,
                      "mutability": "mutable",
                      "name": "user",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 6100,
                      "src": "10458:21:28",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_UserInfo_$5250_storage_ptr",
                        "typeString": "struct MiniChefV2.UserInfo"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 6017,
                        "name": "UserInfo",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 5250,
                        "src": "10458:8:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserInfo_$5250_storage_ptr",
                          "typeString": "struct MiniChefV2.UserInfo"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 6025,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 6019,
                        "name": "userInfo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5281,
                        "src": "10482:8:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$5250_storage_$_$",
                          "typeString": "mapping(uint256 => mapping(address => struct MiniChefV2.UserInfo storage ref))"
                        }
                      },
                      "id": 6021,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 6020,
                        "name": "pid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6004,
                        "src": "10491:3:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "10482:13:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$5250_storage_$",
                        "typeString": "mapping(address => struct MiniChefV2.UserInfo storage ref)"
                      }
                    },
                    "id": 6024,
                    "indexExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 6022,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "10496:3:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 6023,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "10496:10:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "10482:25:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_UserInfo_$5250_storage",
                      "typeString": "struct MiniChefV2.UserInfo storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10458:49:28"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 6043,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 6026,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6018,
                        "src": "10537:4:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserInfo_$5250_storage_ptr",
                          "typeString": "struct MiniChefV2.UserInfo storage pointer"
                        }
                      },
                      "id": 6028,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "rewardDebt",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5249,
                      "src": "10537:15:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 6040,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 6036,
                                      "name": "pool",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 6012,
                                      "src": "10593:4:28",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_PoolInfo_$5257_memory_ptr",
                                        "typeString": "struct MiniChefV2.PoolInfo memory"
                                      }
                                    },
                                    "id": 6037,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "accSushiPerShare",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 5252,
                                    "src": "10593:21:28",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint128",
                                      "typeString": "uint128"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint128",
                                      "typeString": "uint128"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 6034,
                                    "name": "amount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 6006,
                                    "src": "10582:6:28",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 6035,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "mul",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1730,
                                  "src": "10582:10:28",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                    "typeString": "function (uint256,uint256) pure returns (uint256)"
                                  }
                                },
                                "id": 6038,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "10582:33:28",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "/",
                              "rightExpression": {
                                "argumentTypes": null,
                                "id": 6039,
                                "name": "ACC_SUSHI_PRECISION",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5294,
                                "src": "10618:19:28",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "10582:55:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 6033,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "10575:6:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_int256_$",
                              "typeString": "type(int256)"
                            },
                            "typeName": {
                              "id": 6032,
                              "name": "int256",
                              "nodeType": "ElementaryTypeName",
                              "src": "10575:6:28",
                              "typeDescriptions": {
                                "typeIdentifier": null,
                                "typeString": null
                              }
                            }
                          },
                          "id": 6041,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10575:63:28",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 6029,
                            "name": "user",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6018,
                            "src": "10555:4:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_UserInfo_$5250_storage_ptr",
                              "typeString": "struct MiniChefV2.UserInfo storage pointer"
                            }
                          },
                          "id": 6030,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "rewardDebt",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 5249,
                          "src": "10555:15:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "id": 6031,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 10458,
                        "src": "10555:19:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_int256_$_t_int256_$returns$_t_int256_$bound_to$_t_int256_$",
                          "typeString": "function (int256,int256) pure returns (int256)"
                        }
                      },
                      "id": 6042,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "10555:84:28",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "src": "10537:102:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "id": 6044,
                  "nodeType": "ExpressionStatement",
                  "src": "10537:102:28"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 6053,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 6045,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6018,
                        "src": "10649:4:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserInfo_$5250_storage_ptr",
                          "typeString": "struct MiniChefV2.UserInfo storage pointer"
                        }
                      },
                      "id": 6047,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "amount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5247,
                      "src": "10649:11:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 6051,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6006,
                          "src": "10679:6:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 6048,
                            "name": "user",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6018,
                            "src": "10663:4:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_UserInfo_$5250_storage_ptr",
                              "typeString": "struct MiniChefV2.UserInfo storage pointer"
                            }
                          },
                          "id": 6049,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "amount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 5247,
                          "src": "10663:11:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 6050,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1702,
                        "src": "10663:15:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 6052,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "10663:23:28",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10649:37:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 6054,
                  "nodeType": "ExpressionStatement",
                  "src": "10649:37:28"
                },
                {
                  "assignments": [
                    6056
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 6056,
                      "mutability": "mutable",
                      "name": "_rewarder",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 6100,
                      "src": "10721:19:28",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IRewarder_$9958",
                        "typeString": "contract IRewarder"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 6055,
                        "name": "IRewarder",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 9958,
                        "src": "10721:9:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IRewarder_$9958",
                          "typeString": "contract IRewarder"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 6060,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 6057,
                      "name": "rewarder",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5274,
                      "src": "10743:8:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_contract$_IRewarder_$9958_$dyn_storage",
                        "typeString": "contract IRewarder[] storage ref"
                      }
                    },
                    "id": 6059,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 6058,
                      "name": "pid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6004,
                      "src": "10752:3:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "10743:13:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IRewarder_$9958",
                      "typeString": "contract IRewarder"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10721:35:28"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 6069,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 6063,
                          "name": "_rewarder",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6056,
                          "src": "10778:9:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IRewarder_$9958",
                            "typeString": "contract IRewarder"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_IRewarder_$9958",
                            "typeString": "contract IRewarder"
                          }
                        ],
                        "id": 6062,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "10770:7:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 6061,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "10770:7:28",
                          "typeDescriptions": {
                            "typeIdentifier": null,
                            "typeString": null
                          }
                        }
                      },
                      "id": 6064,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "10770:18:28",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 6067,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "10800:1:28",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 6066,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "10792:7:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 6065,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "10792:7:28",
                          "typeDescriptions": {
                            "typeIdentifier": null,
                            "typeString": null
                          }
                        }
                      },
                      "id": 6068,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "10792:10:28",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "10770:32:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 6083,
                  "nodeType": "IfStatement",
                  "src": "10766:123:28",
                  "trueBody": {
                    "id": 6082,
                    "nodeType": "Block",
                    "src": "10804:85:28",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 6073,
                              "name": "pid",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6004,
                              "src": "10842:3:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 6074,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "10847:3:28",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 6075,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "10847:10:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 6076,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6008,
                              "src": "10859:2:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 6077,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10863:1:28",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 6078,
                                "name": "user",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6018,
                                "src": "10866:4:28",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_UserInfo_$5250_storage_ptr",
                                  "typeString": "struct MiniChefV2.UserInfo storage pointer"
                                }
                              },
                              "id": 6079,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "amount",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 5247,
                              "src": "10866:11:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 6070,
                              "name": "_rewarder",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6056,
                              "src": "10818:9:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IRewarder_$9958",
                                "typeString": "contract IRewarder"
                              }
                            },
                            "id": 6072,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "onSushiReward",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 9942,
                            "src": "10818:23:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,address,address,uint256,uint256) external"
                            }
                          },
                          "id": 6080,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10818:60:28",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 6081,
                        "nodeType": "ExpressionStatement",
                        "src": "10818:60:28"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 6088,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6008,
                        "src": "10925:2:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 6089,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6006,
                        "src": "10929:6:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 6084,
                          "name": "lpToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5270,
                          "src": "10899:7:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_contract$_IERC20_$1291_$dyn_storage",
                            "typeString": "contract IERC20[] storage ref"
                          }
                        },
                        "id": 6086,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 6085,
                          "name": "pid",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6004,
                          "src": "10907:3:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "10899:12:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1291",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 6087,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1604,
                      "src": "10899:25:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1291_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$1291_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 6090,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10899:37:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6091,
                  "nodeType": "ExpressionStatement",
                  "src": "10899:37:28"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 6093,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "10961:3:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 6094,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "10961:10:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 6095,
                        "name": "pid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6004,
                        "src": "10973:3:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 6096,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6006,
                        "src": "10978:6:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 6097,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6008,
                        "src": "10986:2:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 6092,
                      "name": "Withdraw",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5314,
                      "src": "10952:8:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (address,uint256,uint256,address)"
                      }
                    },
                    "id": 6098,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10952:37:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6099,
                  "nodeType": "EmitStatement",
                  "src": "10947:42:28"
                }
              ]
            },
            "documentation": {
              "id": 6002,
              "nodeType": "StructuredDocumentation",
              "src": "10134:195:28",
              "text": "@notice Withdraw LP tokens from MCV2.\n @param pid The index of the pool. See `poolInfo`.\n @param amount LP token amount to withdraw.\n @param to Receiver of the LP tokens."
            },
            "functionSelector": "0ad58d2f",
            "id": 6101,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdraw",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 6009,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6004,
                  "mutability": "mutable",
                  "name": "pid",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 6101,
                  "src": "10352:11:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6003,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10352:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6006,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 6101,
                  "src": "10365:14:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6005,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10365:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6008,
                  "mutability": "mutable",
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 6101,
                  "src": "10381:10:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6007,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10381:7:28",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "10351:41:28"
            },
            "returnParameters": {
              "id": 6010,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10400:0:28"
            },
            "scope": 6420,
            "src": "10334:662:28",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 6202,
              "nodeType": "Block",
              "src": "11219:731:28",
              "statements": [
                {
                  "assignments": [
                    6110
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 6110,
                      "mutability": "mutable",
                      "name": "pool",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 6202,
                      "src": "11229:20:28",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_PoolInfo_$5257_memory_ptr",
                        "typeString": "struct MiniChefV2.PoolInfo"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 6109,
                        "name": "PoolInfo",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 5257,
                        "src": "11229:8:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PoolInfo_$5257_storage_ptr",
                          "typeString": "struct MiniChefV2.PoolInfo"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 6114,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 6112,
                        "name": "pid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6104,
                        "src": "11263:3:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 6111,
                      "name": "updatePool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5898,
                      "src": "11252:10:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$_t_struct$_PoolInfo_$5257_memory_ptr_$",
                        "typeString": "function (uint256) returns (struct MiniChefV2.PoolInfo memory)"
                      }
                    },
                    "id": 6113,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11252:15:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_PoolInfo_$5257_memory_ptr",
                      "typeString": "struct MiniChefV2.PoolInfo memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11229:38:28"
                },
                {
                  "assignments": [
                    6116
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 6116,
                      "mutability": "mutable",
                      "name": "user",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 6202,
                      "src": "11277:21:28",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_UserInfo_$5250_storage_ptr",
                        "typeString": "struct MiniChefV2.UserInfo"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 6115,
                        "name": "UserInfo",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 5250,
                        "src": "11277:8:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserInfo_$5250_storage_ptr",
                          "typeString": "struct MiniChefV2.UserInfo"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 6123,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 6117,
                        "name": "userInfo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5281,
                        "src": "11301:8:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$5250_storage_$_$",
                          "typeString": "mapping(uint256 => mapping(address => struct MiniChefV2.UserInfo storage ref))"
                        }
                      },
                      "id": 6119,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 6118,
                        "name": "pid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6104,
                        "src": "11310:3:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "11301:13:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$5250_storage_$",
                        "typeString": "mapping(address => struct MiniChefV2.UserInfo storage ref)"
                      }
                    },
                    "id": 6122,
                    "indexExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 6120,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "11315:3:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 6121,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "11315:10:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "11301:25:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_UserInfo_$5250_storage",
                      "typeString": "struct MiniChefV2.UserInfo storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11277:49:28"
                },
                {
                  "assignments": [
                    6125
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 6125,
                      "mutability": "mutable",
                      "name": "accumulatedSushi",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 6202,
                      "src": "11336:23:28",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      },
                      "typeName": {
                        "id": 6124,
                        "name": "int256",
                        "nodeType": "ElementaryTypeName",
                        "src": "11336:6:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 6137,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 6135,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 6131,
                                "name": "pool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6110,
                                "src": "11385:4:28",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_PoolInfo_$5257_memory_ptr",
                                  "typeString": "struct MiniChefV2.PoolInfo memory"
                                }
                              },
                              "id": 6132,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "accSushiPerShare",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 5252,
                              "src": "11385:21:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint128",
                                "typeString": "uint128"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint128",
                                "typeString": "uint128"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 6128,
                                "name": "user",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6116,
                                "src": "11369:4:28",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_UserInfo_$5250_storage_ptr",
                                  "typeString": "struct MiniChefV2.UserInfo storage pointer"
                                }
                              },
                              "id": 6129,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "amount",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 5247,
                              "src": "11369:11:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 6130,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "mul",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1730,
                            "src": "11369:15:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 6133,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11369:38:28",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "/",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 6134,
                          "name": "ACC_SUSHI_PRECISION",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5294,
                          "src": "11410:19:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "11369:60:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 6127,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "11362:6:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_int256_$",
                        "typeString": "type(int256)"
                      },
                      "typeName": {
                        "id": 6126,
                        "name": "int256",
                        "nodeType": "ElementaryTypeName",
                        "src": "11362:6:28",
                        "typeDescriptions": {
                          "typeIdentifier": null,
                          "typeString": null
                        }
                      }
                    },
                    "id": 6136,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11362:68:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11336:94:28"
                },
                {
                  "assignments": [
                    6139
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 6139,
                      "mutability": "mutable",
                      "name": "_pendingSushi",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 6202,
                      "src": "11440:21:28",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 6138,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "11440:7:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 6147,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 6142,
                              "name": "user",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6116,
                              "src": "11485:4:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_UserInfo_$5250_storage_ptr",
                                "typeString": "struct MiniChefV2.UserInfo storage pointer"
                              }
                            },
                            "id": 6143,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "rewardDebt",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 5249,
                            "src": "11485:15:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 6140,
                            "name": "accumulatedSushi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6125,
                            "src": "11464:16:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          },
                          "id": 6141,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sub",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 10458,
                          "src": "11464:20:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_int256_$_t_int256_$returns$_t_int256_$bound_to$_t_int256_$",
                            "typeString": "function (int256,int256) pure returns (int256)"
                          }
                        },
                        "id": 6144,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11464:37:28",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "id": 6145,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "toUInt256",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10518,
                      "src": "11464:47:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_int256_$returns$_t_uint256_$bound_to$_t_int256_$",
                        "typeString": "function (int256) pure returns (uint256)"
                      }
                    },
                    "id": 6146,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11464:49:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11440:73:28"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 6152,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 6148,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6116,
                        "src": "11543:4:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserInfo_$5250_storage_ptr",
                          "typeString": "struct MiniChefV2.UserInfo storage pointer"
                        }
                      },
                      "id": 6150,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "rewardDebt",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5249,
                      "src": "11543:15:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 6151,
                      "name": "accumulatedSushi",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6125,
                      "src": "11561:16:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "src": "11543:34:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "id": 6153,
                  "nodeType": "ExpressionStatement",
                  "src": "11543:34:28"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 6156,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 6154,
                      "name": "_pendingSushi",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6139,
                      "src": "11616:13:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 6155,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "11633:1:28",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "11616:18:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 6165,
                  "nodeType": "IfStatement",
                  "src": "11612:86:28",
                  "trueBody": {
                    "id": 6164,
                    "nodeType": "Block",
                    "src": "11636:62:28",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 6160,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6106,
                              "src": "11669:2:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 6161,
                              "name": "_pendingSushi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6139,
                              "src": "11673:13:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 6157,
                              "name": "SUSHI",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5260,
                              "src": "11650:5:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$1291",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 6159,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeTransfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1604,
                            "src": "11650:18:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1291_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$1291_$",
                              "typeString": "function (contract IERC20,address,uint256)"
                            }
                          },
                          "id": 6162,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11650:37:28",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 6163,
                        "nodeType": "ExpressionStatement",
                        "src": "11650:37:28"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    6167
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 6167,
                      "mutability": "mutable",
                      "name": "_rewarder",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 6202,
                      "src": "11708:19:28",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IRewarder_$9958",
                        "typeString": "contract IRewarder"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 6166,
                        "name": "IRewarder",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 9958,
                        "src": "11708:9:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IRewarder_$9958",
                          "typeString": "contract IRewarder"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 6171,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 6168,
                      "name": "rewarder",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5274,
                      "src": "11730:8:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_contract$_IRewarder_$9958_$dyn_storage",
                        "typeString": "contract IRewarder[] storage ref"
                      }
                    },
                    "id": 6170,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 6169,
                      "name": "pid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6104,
                      "src": "11739:3:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "11730:13:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IRewarder_$9958",
                      "typeString": "contract IRewarder"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11708:35:28"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 6180,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 6174,
                          "name": "_rewarder",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6167,
                          "src": "11765:9:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IRewarder_$9958",
                            "typeString": "contract IRewarder"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_IRewarder_$9958",
                            "typeString": "contract IRewarder"
                          }
                        ],
                        "id": 6173,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "11757:7:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 6172,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "11757:7:28",
                          "typeDescriptions": {
                            "typeIdentifier": null,
                            "typeString": null
                          }
                        }
                      },
                      "id": 6175,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "11757:18:28",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 6178,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "11787:1:28",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 6177,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "11779:7:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 6176,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "11779:7:28",
                          "typeDescriptions": {
                            "typeIdentifier": null,
                            "typeString": null
                          }
                        }
                      },
                      "id": 6179,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "11779:10:28",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "11757:32:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 6194,
                  "nodeType": "IfStatement",
                  "src": "11753:136:28",
                  "trueBody": {
                    "id": 6193,
                    "nodeType": "Block",
                    "src": "11791:98:28",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 6184,
                              "name": "pid",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6104,
                              "src": "11830:3:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 6185,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "11835:3:28",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 6186,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "11835:10:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 6187,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6106,
                              "src": "11847:2:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 6188,
                              "name": "_pendingSushi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6139,
                              "src": "11851:13:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 6189,
                                "name": "user",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6116,
                                "src": "11866:4:28",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_UserInfo_$5250_storage_ptr",
                                  "typeString": "struct MiniChefV2.UserInfo storage pointer"
                                }
                              },
                              "id": 6190,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "amount",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 5247,
                              "src": "11866:11:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 6181,
                              "name": "_rewarder",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6167,
                              "src": "11805:9:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IRewarder_$9958",
                                "typeString": "contract IRewarder"
                              }
                            },
                            "id": 6183,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "onSushiReward",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 9942,
                            "src": "11805:23:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,address,address,uint256,uint256) external"
                            }
                          },
                          "id": 6191,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11805:73:28",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 6192,
                        "nodeType": "ExpressionStatement",
                        "src": "11805:73:28"
                      }
                    ]
                  }
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 6196,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "11912:3:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 6197,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "11912:10:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 6198,
                        "name": "pid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6104,
                        "src": "11924:3:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 6199,
                        "name": "_pendingSushi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6139,
                        "src": "11929:13:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 6195,
                      "name": "Harvest",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5332,
                      "src": "11904:7:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256)"
                      }
                    },
                    "id": 6200,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11904:39:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6201,
                  "nodeType": "EmitStatement",
                  "src": "11899:44:28"
                }
              ]
            },
            "documentation": {
              "id": 6102,
              "nodeType": "StructuredDocumentation",
              "src": "11002:163:28",
              "text": "@notice Harvest proceeds for transaction sender to `to`.\n @param pid The index of the pool. See `poolInfo`.\n @param to Receiver of SUSHI rewards."
            },
            "functionSelector": "18fccc76",
            "id": 6203,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "harvest",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 6107,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6104,
                  "mutability": "mutable",
                  "name": "pid",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 6203,
                  "src": "11187:11:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6103,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11187:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6106,
                  "mutability": "mutable",
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 6203,
                  "src": "11200:10:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6105,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11200:7:28",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "11186:25:28"
            },
            "returnParameters": {
              "id": 6108,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11219:0:28"
            },
            "scope": 6420,
            "src": "11170:780:28",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 6339,
              "nodeType": "Block",
              "src": "12302:898:28",
              "statements": [
                {
                  "assignments": [
                    6214
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 6214,
                      "mutability": "mutable",
                      "name": "pool",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 6339,
                      "src": "12312:20:28",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_PoolInfo_$5257_memory_ptr",
                        "typeString": "struct MiniChefV2.PoolInfo"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 6213,
                        "name": "PoolInfo",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 5257,
                        "src": "12312:8:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PoolInfo_$5257_storage_ptr",
                          "typeString": "struct MiniChefV2.PoolInfo"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 6218,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 6216,
                        "name": "pid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6206,
                        "src": "12346:3:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 6215,
                      "name": "updatePool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5898,
                      "src": "12335:10:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$_t_struct$_PoolInfo_$5257_memory_ptr_$",
                        "typeString": "function (uint256) returns (struct MiniChefV2.PoolInfo memory)"
                      }
                    },
                    "id": 6217,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12335:15:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_PoolInfo_$5257_memory_ptr",
                      "typeString": "struct MiniChefV2.PoolInfo memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12312:38:28"
                },
                {
                  "assignments": [
                    6220
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 6220,
                      "mutability": "mutable",
                      "name": "user",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 6339,
                      "src": "12360:21:28",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_UserInfo_$5250_storage_ptr",
                        "typeString": "struct MiniChefV2.UserInfo"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 6219,
                        "name": "UserInfo",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 5250,
                        "src": "12360:8:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserInfo_$5250_storage_ptr",
                          "typeString": "struct MiniChefV2.UserInfo"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 6227,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 6221,
                        "name": "userInfo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5281,
                        "src": "12384:8:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$5250_storage_$_$",
                          "typeString": "mapping(uint256 => mapping(address => struct MiniChefV2.UserInfo storage ref))"
                        }
                      },
                      "id": 6223,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 6222,
                        "name": "pid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6206,
                        "src": "12393:3:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "12384:13:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$5250_storage_$",
                        "typeString": "mapping(address => struct MiniChefV2.UserInfo storage ref)"
                      }
                    },
                    "id": 6226,
                    "indexExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 6224,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "12398:3:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 6225,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "12398:10:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "12384:25:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_UserInfo_$5250_storage",
                      "typeString": "struct MiniChefV2.UserInfo storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12360:49:28"
                },
                {
                  "assignments": [
                    6229
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 6229,
                      "mutability": "mutable",
                      "name": "accumulatedSushi",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 6339,
                      "src": "12419:23:28",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      },
                      "typeName": {
                        "id": 6228,
                        "name": "int256",
                        "nodeType": "ElementaryTypeName",
                        "src": "12419:6:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 6241,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 6239,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 6235,
                                "name": "pool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6214,
                                "src": "12468:4:28",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_PoolInfo_$5257_memory_ptr",
                                  "typeString": "struct MiniChefV2.PoolInfo memory"
                                }
                              },
                              "id": 6236,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "accSushiPerShare",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 5252,
                              "src": "12468:21:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint128",
                                "typeString": "uint128"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint128",
                                "typeString": "uint128"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 6232,
                                "name": "user",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6220,
                                "src": "12452:4:28",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_UserInfo_$5250_storage_ptr",
                                  "typeString": "struct MiniChefV2.UserInfo storage pointer"
                                }
                              },
                              "id": 6233,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "amount",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 5247,
                              "src": "12452:11:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 6234,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "mul",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1730,
                            "src": "12452:15:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 6237,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12452:38:28",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "/",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 6238,
                          "name": "ACC_SUSHI_PRECISION",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5294,
                          "src": "12493:19:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "12452:60:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 6231,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "12445:6:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_int256_$",
                        "typeString": "type(int256)"
                      },
                      "typeName": {
                        "id": 6230,
                        "name": "int256",
                        "nodeType": "ElementaryTypeName",
                        "src": "12445:6:28",
                        "typeDescriptions": {
                          "typeIdentifier": null,
                          "typeString": null
                        }
                      }
                    },
                    "id": 6240,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12445:68:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12419:94:28"
                },
                {
                  "assignments": [
                    6243
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 6243,
                      "mutability": "mutable",
                      "name": "_pendingSushi",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 6339,
                      "src": "12523:21:28",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 6242,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "12523:7:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 6251,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 6246,
                              "name": "user",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6220,
                              "src": "12568:4:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_UserInfo_$5250_storage_ptr",
                                "typeString": "struct MiniChefV2.UserInfo storage pointer"
                              }
                            },
                            "id": 6247,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "rewardDebt",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 5249,
                            "src": "12568:15:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 6244,
                            "name": "accumulatedSushi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6229,
                            "src": "12547:16:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          },
                          "id": 6245,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sub",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 10458,
                          "src": "12547:20:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_int256_$_t_int256_$returns$_t_int256_$bound_to$_t_int256_$",
                            "typeString": "function (int256,int256) pure returns (int256)"
                          }
                        },
                        "id": 6248,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12547:37:28",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "id": 6249,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "toUInt256",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10518,
                      "src": "12547:47:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_int256_$returns$_t_uint256_$bound_to$_t_int256_$",
                        "typeString": "function (int256) pure returns (uint256)"
                      }
                    },
                    "id": 6250,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12547:49:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12523:73:28"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 6268,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 6252,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6220,
                        "src": "12626:4:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserInfo_$5250_storage_ptr",
                          "typeString": "struct MiniChefV2.UserInfo storage pointer"
                        }
                      },
                      "id": 6254,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "rewardDebt",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5249,
                      "src": "12626:15:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 6265,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 6261,
                                      "name": "pool",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 6214,
                                      "src": "12683:4:28",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_PoolInfo_$5257_memory_ptr",
                                        "typeString": "struct MiniChefV2.PoolInfo memory"
                                      }
                                    },
                                    "id": 6262,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "accSushiPerShare",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 5252,
                                    "src": "12683:21:28",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint128",
                                      "typeString": "uint128"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint128",
                                      "typeString": "uint128"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 6259,
                                    "name": "amount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 6208,
                                    "src": "12672:6:28",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 6260,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "mul",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1730,
                                  "src": "12672:10:28",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                    "typeString": "function (uint256,uint256) pure returns (uint256)"
                                  }
                                },
                                "id": 6263,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "12672:33:28",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "/",
                              "rightExpression": {
                                "argumentTypes": null,
                                "id": 6264,
                                "name": "ACC_SUSHI_PRECISION",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5294,
                                "src": "12708:19:28",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "12672:55:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 6258,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "12665:6:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_int256_$",
                              "typeString": "type(int256)"
                            },
                            "typeName": {
                              "id": 6257,
                              "name": "int256",
                              "nodeType": "ElementaryTypeName",
                              "src": "12665:6:28",
                              "typeDescriptions": {
                                "typeIdentifier": null,
                                "typeString": null
                              }
                            }
                          },
                          "id": 6266,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12665:63:28",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 6255,
                          "name": "accumulatedSushi",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6229,
                          "src": "12644:16:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "id": 6256,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 10458,
                        "src": "12644:20:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_int256_$_t_int256_$returns$_t_int256_$bound_to$_t_int256_$",
                          "typeString": "function (int256,int256) pure returns (int256)"
                        }
                      },
                      "id": 6267,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "12644:85:28",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "src": "12626:103:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "id": 6269,
                  "nodeType": "ExpressionStatement",
                  "src": "12626:103:28"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 6278,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 6270,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6220,
                        "src": "12739:4:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserInfo_$5250_storage_ptr",
                          "typeString": "struct MiniChefV2.UserInfo storage pointer"
                        }
                      },
                      "id": 6272,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "amount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5247,
                      "src": "12739:11:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 6276,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6208,
                          "src": "12769:6:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 6273,
                            "name": "user",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6220,
                            "src": "12753:4:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_UserInfo_$5250_storage_ptr",
                              "typeString": "struct MiniChefV2.UserInfo storage pointer"
                            }
                          },
                          "id": 6274,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "amount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 5247,
                          "src": "12753:11:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 6275,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1702,
                        "src": "12753:15:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 6277,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "12753:23:28",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "12739:37:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 6279,
                  "nodeType": "ExpressionStatement",
                  "src": "12739:37:28"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 6283,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6210,
                        "src": "12830:2:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 6284,
                        "name": "_pendingSushi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6243,
                        "src": "12834:13:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 6280,
                        "name": "SUSHI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5260,
                        "src": "12811:5:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1291",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 6282,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1604,
                      "src": "12811:18:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1291_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$1291_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 6285,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12811:37:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6286,
                  "nodeType": "ExpressionStatement",
                  "src": "12811:37:28"
                },
                {
                  "assignments": [
                    6288
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 6288,
                      "mutability": "mutable",
                      "name": "_rewarder",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 6339,
                      "src": "12859:19:28",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IRewarder_$9958",
                        "typeString": "contract IRewarder"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 6287,
                        "name": "IRewarder",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 9958,
                        "src": "12859:9:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IRewarder_$9958",
                          "typeString": "contract IRewarder"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 6292,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 6289,
                      "name": "rewarder",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5274,
                      "src": "12881:8:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_contract$_IRewarder_$9958_$dyn_storage",
                        "typeString": "contract IRewarder[] storage ref"
                      }
                    },
                    "id": 6291,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 6290,
                      "name": "pid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6206,
                      "src": "12890:3:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "12881:13:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IRewarder_$9958",
                      "typeString": "contract IRewarder"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12859:35:28"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 6301,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 6295,
                          "name": "_rewarder",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6288,
                          "src": "12916:9:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IRewarder_$9958",
                            "typeString": "contract IRewarder"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_IRewarder_$9958",
                            "typeString": "contract IRewarder"
                          }
                        ],
                        "id": 6294,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "12908:7:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 6293,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "12908:7:28",
                          "typeDescriptions": {
                            "typeIdentifier": null,
                            "typeString": null
                          }
                        }
                      },
                      "id": 6296,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "12908:18:28",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 6299,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "12938:1:28",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 6298,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "12930:7:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 6297,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "12930:7:28",
                          "typeDescriptions": {
                            "typeIdentifier": null,
                            "typeString": null
                          }
                        }
                      },
                      "id": 6300,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "12930:10:28",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "12908:32:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 6315,
                  "nodeType": "IfStatement",
                  "src": "12904:135:28",
                  "trueBody": {
                    "id": 6314,
                    "nodeType": "Block",
                    "src": "12942:97:28",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 6305,
                              "name": "pid",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6206,
                              "src": "12980:3:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 6306,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "12985:3:28",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 6307,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "12985:10:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 6308,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6210,
                              "src": "12997:2:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 6309,
                              "name": "_pendingSushi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6243,
                              "src": "13001:13:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 6310,
                                "name": "user",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6220,
                                "src": "13016:4:28",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_UserInfo_$5250_storage_ptr",
                                  "typeString": "struct MiniChefV2.UserInfo storage pointer"
                                }
                              },
                              "id": 6311,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "amount",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 5247,
                              "src": "13016:11:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 6302,
                              "name": "_rewarder",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6288,
                              "src": "12956:9:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IRewarder_$9958",
                                "typeString": "contract IRewarder"
                              }
                            },
                            "id": 6304,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "onSushiReward",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 9942,
                            "src": "12956:23:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,address,address,uint256,uint256) external"
                            }
                          },
                          "id": 6312,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12956:72:28",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 6313,
                        "nodeType": "ExpressionStatement",
                        "src": "12956:72:28"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 6320,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6210,
                        "src": "13075:2:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 6321,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6208,
                        "src": "13079:6:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 6316,
                          "name": "lpToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5270,
                          "src": "13049:7:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_contract$_IERC20_$1291_$dyn_storage",
                            "typeString": "contract IERC20[] storage ref"
                          }
                        },
                        "id": 6318,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 6317,
                          "name": "pid",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6206,
                          "src": "13057:3:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "13049:12:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1291",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 6319,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1604,
                      "src": "13049:25:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1291_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$1291_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 6322,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13049:37:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6323,
                  "nodeType": "ExpressionStatement",
                  "src": "13049:37:28"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 6325,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "13111:3:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 6326,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "13111:10:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 6327,
                        "name": "pid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6206,
                        "src": "13123:3:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 6328,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6208,
                        "src": "13128:6:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 6329,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6210,
                        "src": "13136:2:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 6324,
                      "name": "Withdraw",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5314,
                      "src": "13102:8:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (address,uint256,uint256,address)"
                      }
                    },
                    "id": 6330,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13102:37:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6331,
                  "nodeType": "EmitStatement",
                  "src": "13097:42:28"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 6333,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "13162:3:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 6334,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "13162:10:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 6335,
                        "name": "pid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6206,
                        "src": "13174:3:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 6336,
                        "name": "_pendingSushi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6243,
                        "src": "13179:13:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 6332,
                      "name": "Harvest",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5332,
                      "src": "13154:7:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256)"
                      }
                    },
                    "id": 6337,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13154:39:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6338,
                  "nodeType": "EmitStatement",
                  "src": "13149:44:28"
                }
              ]
            },
            "documentation": {
              "id": 6204,
              "nodeType": "StructuredDocumentation",
              "src": "11956:265:28",
              "text": "@notice Withdraw LP tokens from MCV2 and harvest proceeds for transaction sender to `to`.\n @param pid The index of the pool. See `poolInfo`.\n @param amount LP token amount to withdraw.\n @param to Receiver of the LP tokens and SUSHI rewards."
            },
            "functionSelector": "d1abb907",
            "id": 6340,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdrawAndHarvest",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 6211,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6206,
                  "mutability": "mutable",
                  "name": "pid",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 6340,
                  "src": "12254:11:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6205,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12254:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6208,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 6340,
                  "src": "12267:14:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6207,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12267:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6210,
                  "mutability": "mutable",
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 6340,
                  "src": "12283:10:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6209,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12283:7:28",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "12253:41:28"
            },
            "returnParameters": {
              "id": 6212,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12302:0:28"
            },
            "scope": 6420,
            "src": "12226:974:28",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 6418,
              "nodeType": "Block",
              "src": "13439:502:28",
              "statements": [
                {
                  "assignments": [
                    6349
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 6349,
                      "mutability": "mutable",
                      "name": "user",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 6418,
                      "src": "13449:21:28",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_UserInfo_$5250_storage_ptr",
                        "typeString": "struct MiniChefV2.UserInfo"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 6348,
                        "name": "UserInfo",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 5250,
                        "src": "13449:8:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserInfo_$5250_storage_ptr",
                          "typeString": "struct MiniChefV2.UserInfo"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 6356,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 6350,
                        "name": "userInfo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5281,
                        "src": "13473:8:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$5250_storage_$_$",
                          "typeString": "mapping(uint256 => mapping(address => struct MiniChefV2.UserInfo storage ref))"
                        }
                      },
                      "id": 6352,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 6351,
                        "name": "pid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6343,
                        "src": "13482:3:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "13473:13:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$5250_storage_$",
                        "typeString": "mapping(address => struct MiniChefV2.UserInfo storage ref)"
                      }
                    },
                    "id": 6355,
                    "indexExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 6353,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "13487:3:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 6354,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "13487:10:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "13473:25:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_UserInfo_$5250_storage",
                      "typeString": "struct MiniChefV2.UserInfo storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13449:49:28"
                },
                {
                  "assignments": [
                    6358
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 6358,
                      "mutability": "mutable",
                      "name": "amount",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 6418,
                      "src": "13508:14:28",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 6357,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "13508:7:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 6361,
                  "initialValue": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 6359,
                      "name": "user",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6349,
                      "src": "13525:4:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_UserInfo_$5250_storage_ptr",
                        "typeString": "struct MiniChefV2.UserInfo storage pointer"
                      }
                    },
                    "id": 6360,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "amount",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 5247,
                    "src": "13525:11:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13508:28:28"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 6366,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 6362,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6349,
                        "src": "13546:4:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserInfo_$5250_storage_ptr",
                          "typeString": "struct MiniChefV2.UserInfo storage pointer"
                        }
                      },
                      "id": 6364,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "amount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5247,
                      "src": "13546:11:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 6365,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "13560:1:28",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "13546:15:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 6367,
                  "nodeType": "ExpressionStatement",
                  "src": "13546:15:28"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 6372,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 6368,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6349,
                        "src": "13571:4:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserInfo_$5250_storage_ptr",
                          "typeString": "struct MiniChefV2.UserInfo storage pointer"
                        }
                      },
                      "id": 6370,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "rewardDebt",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5249,
                      "src": "13571:15:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 6371,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "13589:1:28",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "13571:19:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "id": 6373,
                  "nodeType": "ExpressionStatement",
                  "src": "13571:19:28"
                },
                {
                  "assignments": [
                    6375
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 6375,
                      "mutability": "mutable",
                      "name": "_rewarder",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 6418,
                      "src": "13601:19:28",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IRewarder_$9958",
                        "typeString": "contract IRewarder"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 6374,
                        "name": "IRewarder",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 9958,
                        "src": "13601:9:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IRewarder_$9958",
                          "typeString": "contract IRewarder"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 6379,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 6376,
                      "name": "rewarder",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5274,
                      "src": "13623:8:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_contract$_IRewarder_$9958_$dyn_storage",
                        "typeString": "contract IRewarder[] storage ref"
                      }
                    },
                    "id": 6378,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 6377,
                      "name": "pid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6343,
                      "src": "13632:3:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "13623:13:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IRewarder_$9958",
                      "typeString": "contract IRewarder"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13601:35:28"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 6388,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 6382,
                          "name": "_rewarder",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6375,
                          "src": "13658:9:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IRewarder_$9958",
                            "typeString": "contract IRewarder"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_IRewarder_$9958",
                            "typeString": "contract IRewarder"
                          }
                        ],
                        "id": 6381,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "13650:7:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 6380,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "13650:7:28",
                          "typeDescriptions": {
                            "typeIdentifier": null,
                            "typeString": null
                          }
                        }
                      },
                      "id": 6383,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "13650:18:28",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 6386,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "13680:1:28",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 6385,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "13672:7:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 6384,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "13672:7:28",
                          "typeDescriptions": {
                            "typeIdentifier": null,
                            "typeString": null
                          }
                        }
                      },
                      "id": 6387,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "13672:10:28",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "13650:32:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 6401,
                  "nodeType": "IfStatement",
                  "src": "13646:113:28",
                  "trueBody": {
                    "id": 6400,
                    "nodeType": "Block",
                    "src": "13684:75:28",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 6392,
                              "name": "pid",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6343,
                              "src": "13722:3:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 6393,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "13727:3:28",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 6394,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "13727:10:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 6395,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6345,
                              "src": "13739:2:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 6396,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "13743:1:28",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 6397,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "13746:1:28",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 6389,
                              "name": "_rewarder",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6375,
                              "src": "13698:9:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IRewarder_$9958",
                                "typeString": "contract IRewarder"
                              }
                            },
                            "id": 6391,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "onSushiReward",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 9942,
                            "src": "13698:23:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,address,address,uint256,uint256) external"
                            }
                          },
                          "id": 6398,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13698:50:28",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 6399,
                        "nodeType": "ExpressionStatement",
                        "src": "13698:50:28"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 6406,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6345,
                        "src": "13862:2:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 6407,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6358,
                        "src": "13866:6:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 6402,
                          "name": "lpToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5270,
                          "src": "13836:7:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_contract$_IERC20_$1291_$dyn_storage",
                            "typeString": "contract IERC20[] storage ref"
                          }
                        },
                        "id": 6404,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 6403,
                          "name": "pid",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6343,
                          "src": "13844:3:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "13836:12:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1291",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 6405,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1604,
                      "src": "13836:25:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1291_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$1291_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 6408,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13836:37:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6409,
                  "nodeType": "ExpressionStatement",
                  "src": "13836:37:28"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 6411,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "13906:3:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 6412,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "13906:10:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 6413,
                        "name": "pid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6343,
                        "src": "13918:3:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 6414,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6358,
                        "src": "13923:6:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 6415,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6345,
                        "src": "13931:2:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 6410,
                      "name": "EmergencyWithdraw",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5324,
                      "src": "13888:17:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (address,uint256,uint256,address)"
                      }
                    },
                    "id": 6416,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13888:46:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6417,
                  "nodeType": "EmitStatement",
                  "src": "13883:51:28"
                }
              ]
            },
            "documentation": {
              "id": 6341,
              "nodeType": "StructuredDocumentation",
              "src": "13206:169:28",
              "text": "@notice Withdraw without caring about rewards. EMERGENCY ONLY.\n @param pid The index of the pool. See `poolInfo`.\n @param to Receiver of the LP tokens."
            },
            "functionSelector": "2f940c70",
            "id": 6419,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "emergencyWithdraw",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 6346,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6343,
                  "mutability": "mutable",
                  "name": "pid",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 6419,
                  "src": "13407:11:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6342,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13407:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6345,
                  "mutability": "mutable",
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 6419,
                  "src": "13420:10:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6344,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13420:7:28",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "13406:25:28"
            },
            "returnParameters": {
              "id": 6347,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13439:0:28"
            },
            "scope": 6420,
            "src": "13380:561:28",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 6421,
        "src": "1059:12884:28"
      }
    ],
    "src": "33:13911:28"
  },
  "bytecode": "60a06040523480156200001157600080fd5b5060405162002c0038038062002c00833981016040819052620000349162000089565b600080546001600160a01b0319163390811782556040519091907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a360601b6001600160601b031916608052620000b9565b6000602082840312156200009b578081fd5b81516001600160a01b0381168114620000b2578182fd5b9392505050565b60805160601c612b1f620000e1600039806108bf52806117f35280611b165250612b1f6000f3fe6080604052600436106101c25760003560e01c806379d12ffb116100f75780639baf58c311610095578063c346253d11610064578063c346253d146104f6578063d1abb90714610516578063d2423b5114610536578063e30c397814610549576101c2565b80639baf58c31461048c578063a06e408b146104ac578063ab560e10146104c1578063ab7de098146104d6576101c2565b806388bba42f116100d157806388bba42f146104095780638da5cb5b146104295780638dbdbe6d1461043e57806393f1a40b1461045e576101c2565b806379d12ffb146103a75780637c516e94146103d45780637cd07e47146103f4576101c2565b806323cf3118116101645780634e71e0c81161013e5780634e71e0c81461031857806351eb05a61461032d57806357a5b58c1461035a57806378ed5d1f1461037a576101c2565b806323cf3118146102b85780632f940c70146102d8578063454b0608146102f8576101c2565b80631526fe27116101a05780631526fe271461023457806317caf6f11461026357806318fccc7614610278578063195426ec14610298576101c2565b8063078dfbe7146101c7578063081e3eda146101e95780630ad58d2f14610214575b600080fd5b3480156101d357600080fd5b506101e76101e23660046121d7565b61055e565b005b3480156101f557600080fd5b506101fe61064d565b60405161020b91906129d3565b60405180910390f35b34801561022057600080fd5b506101e761022f366004612497565b610653565b34801561024057600080fd5b5061025461024f366004612402565b6107e3565b60405161020b939291906129a9565b34801561026f57600080fd5b506101fe610825565b34801561028457600080fd5b506101e7610293366004612432565b61082b565b3480156102a457600080fd5b506101fe6102b3366004612432565b6109c5565b3480156102c457600080fd5b506101e76102d33660046121bb565b610bc5565b3480156102e457600080fd5b506101e76102f3366004612432565b610c11565b34801561030457600080fd5b506101e7610313366004612402565b610d32565b34801561032457600080fd5b506101e7611050565b34801561033957600080fd5b5061034d610348366004612402565b6110dd565b60405161020b9190612970565b34801561036657600080fd5b506101e761037536600461226a565b611361565b34801561038657600080fd5b5061039a610395366004612402565b611397565b60405161020b9190612539565b3480156103b357600080fd5b506103c76103c23660046121bb565b6113be565b60405161020b91906125cb565b3480156103e057600080fd5b506101e76103ef3660046122e1565b6113d3565b34801561040057600080fd5b5061039a611447565b34801561041557600080fd5b506101e76104243660046124c4565b611456565b34801561043557600080fd5b5061039a6115c3565b34801561044a57600080fd5b506101e7610459366004612497565b6115d2565b34801561046a57600080fd5b5061047e610479366004612432565b61175d565b60405161020b929190612a1b565b34801561049857600080fd5b506101e76104a7366004612402565b611781565b3480156104b857600080fd5b506101fe6117eb565b3480156104cd57600080fd5b5061039a6117f1565b3480156104e257600080fd5b506101e76104f1366004612461565b611815565b34801561050257600080fd5b5061039a610511366004612402565b611a3b565b34801561052257600080fd5b506101e7610531366004612497565b611a48565b6101e7610544366004612221565b611c7b565b34801561055557600080fd5b5061039a611d38565b6000546001600160a01b031633146105915760405162461bcd60e51b8152600401610588906127bb565b60405180910390fd5b811561062c576001600160a01b0383161515806105ab5750805b6105c75760405162461bcd60e51b8152600401610588906126d5565b600080546040516001600160a01b03808716939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0385166001600160a01b031991821617909155600180549091169055610648565b600180546001600160a01b0319166001600160a01b0385161790555b505050565b60035490565b61065b612153565b610664846110dd565b600085815260066020908152604080832033845290915290208151919250906106b69064e8d4a51000906106a29087906001600160801b0316611d47565b816106a957fe5b6001840154919004611d84565b600182015580546106c79085611dd1565b81556005805460009190879081106106db57fe5b6000918252602090912001546001600160a01b0316905080156107615781546040516345fb1ba160e11b81526001600160a01b03831691638bf637429161072e918a9133918a91600091906004016129dc565b600060405180830381600087803b15801561074857600080fd5b505af115801561075c573d6000803e3d6000fd5b505050505b61078f84866004898154811061077357fe5b6000918252602090912001546001600160a01b03169190611df4565b836001600160a01b031686336001600160a01b03167f8166bf25f8a2b7ed3c85049207da4358d16edbed977d23fa2ee6f0dde3ec2132886040516107d391906129d3565b60405180910390a4505050505050565b600381815481106107f057fe5b6000918252602090912001546001600160801b03811691506001600160401b03600160801b8204811691600160c01b90041683565b60085481565b610833612153565b61083c836110dd565b6000848152600660209081526040808320338452909152812082518154939450909264e8d4a510009161087891906001600160801b0316611d47565b8161087f57fe5b04905060006108a361089e846001015484611d8490919063ffffffff16565b611eea565b60018401839055905080156108e6576108e66001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168683611df4565b6000600587815481106108f557fe5b6000918252602090912001546001600160a01b03169050801561097a5783546040516345fb1ba160e11b81526001600160a01b03831691638bf6374291610947918b9133918c918991906004016129dc565b600060405180830381600087803b15801561096157600080fd5b505af1158015610975573d6000803e3d6000fd5b505050505b86336001600160a01b03167f71bab65ced2e5750775a0613be067df48ef06cf92a496ebf7663ae0660924954846040516109b491906129d3565b60405180910390a350505050505050565b60006109cf612153565b600384815481106109dc57fe5b600091825260208083206040805160608101825291909301546001600160801b0380821683526001600160401b03600160801b8304811684860152600160c01b90920490911682850152888552600683528385206001600160a01b0389168652909252918320825160048054949650919492169288908110610a5a57fe5b6000918252602090912001546040516370a0823160e01b81526001600160a01b03909116906370a0823190610a93903090600401612539565b60206040518083038186803b158015610aab57600080fd5b505afa158015610abf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ae3919061241a565b905083602001516001600160401b031642118015610b0057508015155b15610b8c576000610b2785602001516001600160401b031642611dd190919063ffffffff16565b90506000600854610b5a87604001516001600160401b0316610b5460095486611d4790919063ffffffff16565b90611d47565b81610b6157fe5b049050610b8783610b778364e8d4a51000611d47565b81610b7e57fe5b86919004611f10565b935050505b60018301548354610bba9161089e9164e8d4a5100090610bac9087611d47565b81610bb357fe5b0490611d84565b979650505050505050565b6000546001600160a01b03163314610bef5760405162461bcd60e51b8152600401610588906127bb565b600280546001600160a01b0319166001600160a01b0392909216919091179055565b60008281526006602090815260408083203384529091528120805482825560018201839055600580549293919286908110610c4857fe5b6000918252602090912001546001600160a01b031690508015610ccd576040516345fb1ba160e11b81526001600160a01b03821690638bf6374290610c9a9088903390899060009081906004016129dc565b600060405180830381600087803b158015610cb457600080fd5b505af1158015610cc8573d6000803e3d6000fd5b505050505b610cdf84836004888154811061077357fe5b836001600160a01b031685336001600160a01b03167f2cac5e20e1541d836381527a43f651851e302817b71dc8e810284e69210c1c6b85604051610d2391906129d3565b60405180910390a45050505050565b6002546001600160a01b0316610d5a5760405162461bcd60e51b815260040161058890612889565b600060048281548110610d6957fe5b60009182526020822001546040516370a0823160e01b81526001600160a01b03909116925082906370a0823190610da4903090600401612539565b60206040518083038186803b158015610dbc57600080fd5b505afa158015610dd0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610df4919061241a565b60025460405163095ea7b360e01b81529192506001600160a01b038085169263095ea7b392610e2992169085906004016125b2565b602060405180830381600087803b158015610e4357600080fd5b505af1158015610e57573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e7b91906122a9565b5060025460405163ce5494bb60e01b81526000916001600160a01b03169063ce5494bb90610ead908690600401612539565b602060405180830381600087803b158015610ec757600080fd5b505af1158015610edb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610eff91906122c5565b6040516370a0823160e01b81529091506001600160a01b038216906370a0823190610f2e903090600401612539565b60206040518083038186803b158015610f4657600080fd5b505afa158015610f5a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f7e919061241a565b8214610f9c5760405162461bcd60e51b815260040161058890612704565b6001600160a01b03811660009081526007602052604090205460ff1615610fd55760405162461bcd60e51b815260040161058890612825565b6001600160a01b03808216600090815260076020526040808220805460ff199081166001179091559286168252902080549091169055600480548291908690811061101c57fe5b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555050505050565b6001546001600160a01b031633811461107b5760405162461bcd60e51b8152600401610588906127f0565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b039092166001600160a01b0319928316179055600180549091169055565b6110e5612153565b600382815481106110f257fe5b60009182526020918290206040805160608101825292909101546001600160801b03811683526001600160401b03600160801b82048116948401859052600160c01b9091041690820152915042111561135c5760006004838154811061115457fe5b6000918252602090912001546040516370a0823160e01b81526001600160a01b03909116906370a082319061118d903090600401612539565b60206040518083038186803b1580156111a557600080fd5b505afa1580156111b9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111dd919061241a565b9050801561128057600061120783602001516001600160401b031642611dd190919063ffffffff16565b9050600060085461123485604001516001600160401b0316610b5460095486611d4790919063ffffffff16565b8161123b57fe5b049050611272611261846112548464e8d4a51000611d47565b8161125b57fe5b04611f33565b85516001600160801b031690611f5c565b6001600160801b0316845250505b61128942611f8b565b6001600160401b0316602083015260038054839190859081106112a857fe5b6000918252602091829020835191018054848401516040958601516001600160801b03199092166001600160801b039094169390931767ffffffffffffffff60801b1916600160801b6001600160401b0394851602176001600160c01b0316600160c01b93909116929092029190911790558301518351915185927f0fc9545022a542541ad085d091fb09a2ab36fee366a4576ab63714ea907ad353926113529290918691612a29565b60405180910390a2505b919050565b8060005b818110156113915761138884848381811061137c57fe5b905060200201356110dd565b50600101611365565b50505050565b600481815481106113a457fe5b6000918252602090912001546001600160a01b0316905081565b60076020526000908152604090205460ff1681565b60405163d505accf60e01b81526001600160a01b0389169063d505accf9061140b908a908a908a908a908a908a908a90600401612571565b600060405180830381600087803b15801561142557600080fd5b505af1158015611439573d6000803e3d6000fd5b505050505050505050505050565b6002546001600160a01b031681565b6000546001600160a01b031633146114805760405162461bcd60e51b8152600401610588906127bb565b6114bf836114b96003878154811061149457fe5b60009182526020909120015460085490600160c01b90046001600160401b0316611dd1565b90611f10565b6008556114cb83611f8b565b600385815481106114d857fe5b9060005260206000200160000160186101000a8154816001600160401b0302191690836001600160401b03160217905550801561154c57816005858154811061151d57fe5b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b031602179055505b80611578576005848154811061155e57fe5b6000918252602090912001546001600160a01b031661157a565b815b6001600160a01b0316847f95895a6ab1df54420d241b55243258a33e61b2194db66c1179ec521aae8e186585846040516115b5929190612a0b565b60405180910390a350505050565b6000546001600160a01b031681565b6115da612153565b6115e3846110dd565b60008581526006602090815260408083206001600160a01b038716845290915290208054919250906116159085611f10565b8155815161164c9064e8d4a51000906116389087906001600160801b0316611d47565b8161163f57fe5b6001840154919004611fb4565b816001018190555060006005868154811061166357fe5b6000918252602090912001546001600160a01b0316905080156116e95781546040516345fb1ba160e11b81526001600160a01b03831691638bf63742916116b6918a9189918291600091906004016129dc565b600060405180830381600087803b1580156116d057600080fd5b505af11580156116e4573d6000803e3d6000fd5b505050505b61171933308760048a815481106116fc57fe5b6000918252602090912001546001600160a01b0316929190611ffa565b836001600160a01b031686336001600160a01b03167f02d7e648dd130fc184d383e55bb126ac4c9c60e8f94bf05acdf557ba2d540b47886040516107d391906129d3565b60066020908152600092835260408084209091529082529020805460019091015482565b6000546001600160a01b031633146117ab5760405162461bcd60e51b8152600401610588906127bb565b60098190556040517fc6ce5eff3291fb2c1517b943daa5067ea76c83816bbf674307fbc7fea3b311d0906117e09083906129d3565b60405180910390a150565b60095481565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000546001600160a01b0316331461183f5760405162461bcd60e51b8152600401610588906127bb565b6001600160a01b03821660009081526007602052604090205460ff16156118785760405162461bcd60e51b815260040161058890612825565b6008546118859084611f10565b6008556004805460018181019092557f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b0180546001600160a01b038086166001600160a01b03199283161790925560058054938401815560009081527f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db090930180549285169290911691909117905560408051606081019091529081526003906020810161193242611f8b565b6001600160401b0316815260200161194986611f8b565b6001600160401b0390811690915282546001818101855560009485526020808620855193018054828701516040978801518716600160c01b026001600160c01b0391909716600160801b0267ffffffffffffffff60801b196001600160801b039097166001600160801b031990931692909217959095161793909316939093179091556001600160a01b03808716808652600790935292909320805460ff1916841790556004549184169290916119ff91611dd1565b7f81ee0f8c5c46e2cb41984886f77a84181724abb86c32a5f6de539b07509d45e586604051611a2e91906129d3565b60405180910390a4505050565b600581815481106113a457fe5b611a50612153565b611a59846110dd565b6000858152600660209081526040808320338452909152812082518154939450909264e8d4a5100091611a9591906001600160801b0316611d47565b81611a9c57fe5b0490506000611abb61089e846001015484611d8490919063ffffffff16565b9050611af664e8d4a51000611ae686600001516001600160801b031689611d4790919063ffffffff16565b81611aed57fe5b84919004611d84565b60018401558254611b079087611dd1565b8355611b3d6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168683611df4565b600060058881548110611b4c57fe5b6000918252602090912001546001600160a01b031690508015611bd15783546040516345fb1ba160e11b81526001600160a01b03831691638bf6374291611b9e918c9133918c918991906004016129dc565b600060405180830381600087803b158015611bb857600080fd5b505af1158015611bcc573d6000803e3d6000fd5b505050505b611be3868860048b8154811061077357fe5b856001600160a01b031688336001600160a01b03167f8166bf25f8a2b7ed3c85049207da4358d16edbed977d23fa2ee6f0dde3ec21328a604051611c2791906129d3565b60405180910390a487336001600160a01b03167f71bab65ced2e5750775a0613be067df48ef06cf92a496ebf7663ae066092495484604051611c6991906129d3565b60405180910390a35050505050505050565b60005b82811015611391576000606030868685818110611c9757fe5b9050602002810190611ca99190612a53565b604051611cb792919061250d565b600060405180830381855af49150503d8060008114611cf2576040519150601f19603f3d011682016040523d82523d6000602084013e611cf7565b606091505b509150915081158015611d075750835b15611d2e57611d15816120f3565b60405162461bcd60e51b815260040161058891906125d6565b5050600101611c7e565b6001546001600160a01b031681565b6000811580611d6257505080820282828281611d5f57fe5b04145b611d7e5760405162461bcd60e51b815260040161058890612939565b92915050565b6000818303818312801590611d995750838113155b80611dae5750600083128015611dae57508381135b611dca5760405162461bcd60e51b8152600401610588906128c0565b9392505050565b80820382811115611d7e5760405162461bcd60e51b815260040161058890612609565b60006060846001600160a01b031663a9059cbb60e01b8585604051602401611e1d9291906125b2565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b0319909416939093179092529051611e5b919061251d565b6000604051808303816000865af19150503d8060008114611e98576040519150601f19603f3d011682016040523d82523d6000602084013e611e9d565b606091505b5091509150818015611ec7575080511580611ec7575080806020019051810190611ec791906122a9565b611ee35760405162461bcd60e51b81526004016105889061265d565b5050505050565b600080821215611f0c5760405162461bcd60e51b815260040161058890612638565b5090565b81810181811015611d7e5760405162461bcd60e51b815260040161058890612784565b60006001600160801b03821115611f0c5760405162461bcd60e51b81526004016105889061274d565b8181016001600160801b038083169082161015611d7e5760405162461bcd60e51b815260040161058890612784565b60006001600160401b03821115611f0c5760405162461bcd60e51b815260040161058890612852565b6000828201818312801590611fc95750838112155b80611fde5750600083128015611fde57508381125b611dca5760405162461bcd60e51b815260040161058890612694565b60006060856001600160a01b03166323b872dd60e01b8686866040516024016120259392919061254d565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b0319909416939093179092529051612063919061251d565b6000604051808303816000865af19150503d80600081146120a0576040519150601f19603f3d011682016040523d82523d6000602084013e6120a5565b606091505b50915091508180156120cf5750805115806120cf5750808060200190518101906120cf91906122a9565b6120eb5760405162461bcd60e51b815260040161058890612904565b505050505050565b6060604482511015612139575060408051808201909152601d81527f5472616e73616374696f6e2072657665727465642073696c656e746c79000000602082015261135c565b60048201915081806020019051810190611d7e9190612368565b604080516060810182526000808252602082018190529181019190915290565b60008083601f840112612184578182fd5b5081356001600160401b0381111561219a578182fd5b60208301915083602080830285010111156121b457600080fd5b9250929050565b6000602082840312156121cc578081fd5b8135611dca81612ac3565b6000806000606084860312156121eb578182fd5b83356121f681612ac3565b9250602084013561220681612adb565b9150604084013561221681612adb565b809150509250925092565b600080600060408486031215612235578283fd5b83356001600160401b0381111561224a578384fd5b61225686828701612173565b909450925050602084013561221681612adb565b6000806020838503121561227c578182fd5b82356001600160401b03811115612291578283fd5b61229d85828601612173565b90969095509350505050565b6000602082840312156122ba578081fd5b8151611dca81612adb565b6000602082840312156122d6578081fd5b8151611dca81612ac3565b600080600080600080600080610100898b0312156122fd578384fd5b883561230881612ac3565b9750602089013561231881612ac3565b9650604089013561232881612ac3565b9550606089013594506080890135935060a089013560ff8116811461234b578384fd5b979a969950949793969295929450505060c08201359160e0013590565b600060208284031215612379578081fd5b81516001600160401b038082111561238f578283fd5b818401915084601f8301126123a2578283fd5b8151818111156123b0578384fd5b604051601f8201601f1916810160200183811182821017156123d0578586fd5b6040528181528382016020018710156123e7578485fd5b6123f8826020830160208701612a97565b9695505050505050565b600060208284031215612413578081fd5b5035919050565b60006020828403121561242b578081fd5b5051919050565b60008060408385031215612444578182fd5b82359150602083013561245681612ac3565b809150509250929050565b600080600060608486031215612475578081fd5b83359250602084013561248781612ac3565b9150604084013561221681612ac3565b6000806000606084860312156124ab578081fd5b8335925060208401359150604084013561221681612ac3565b600080600080608085870312156124d9578182fd5b843593506020850135925060408501356124f281612ac3565b9150606085013561250281612adb565b939692955090935050565b6000828483379101908152919050565b6000825161252f818460208701612a97565b9190910192915050565b6001600160a01b0391909116815260200190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b0397881681529590961660208601526040850193909352606084019190915260ff16608083015260a082015260c081019190915260e00190565b6001600160a01b03929092168252602082015260400190565b901515815260200190565b60006020825282518060208401526125f5816040850160208701612a97565b601f01601f19169190910160400192915050565b602080825260159082015274426f72696e674d6174683a20556e646572666c6f7760581b604082015260600190565b6020808252600b908201526a0496e7465676572203c20360ac1b604082015260600190565b6020808252601c908201527f426f72696e6745524332303a205472616e73666572206661696c656400000000604082015260600190565b60208082526021908201527f5369676e6564536166654d6174683a206164646974696f6e206f766572666c6f6040820152607760f81b606082015260800190565b6020808252601590820152744f776e61626c653a207a65726f206164647265737360581b604082015260600190565b60208082526029908201527f4d61737465724368656656323a206d696772617465642062616c616e6365206d6040820152680eae6e840dac2e8c6d60bb1b606082015260800190565b6020808252601c908201527f426f72696e674d6174683a2075696e74313238204f766572666c6f7700000000604082015260600190565b60208082526018908201527f426f72696e674d6174683a20416464204f766572666c6f770000000000000000604082015260600190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252818101527f4f776e61626c653a2063616c6c657220213d2070656e64696e67206f776e6572604082015260600190565b602080825260139082015272151bdad95b88185b1c9958591e481859191959606a1b604082015260600190565b6020808252601b908201527f426f72696e674d6174683a2075696e743634204f766572666c6f770000000000604082015260600190565b6020808252601d908201527f4d61737465724368656656323a206e6f206d69677261746f7220736574000000604082015260600190565b60208082526024908201527f5369676e6564536166654d6174683a207375627472616374696f6e206f766572604082015263666c6f7760e01b606082015260800190565b6020808252818101527f426f72696e6745524332303a205472616e7366657246726f6d206661696c6564604082015260600190565b60208082526018908201527f426f72696e674d6174683a204d756c204f766572666c6f770000000000000000604082015260600190565b81516001600160801b031681526020808301516001600160401b0390811691830191909152604092830151169181019190915260600190565b6001600160801b039390931683526001600160401b03918216602084015216604082015260600190565b90815260200190565b9485526001600160a01b0393841660208601529190921660408401526060830191909152608082015260a00190565b9182521515602082015260400190565b918252602082015260400190565b6001600160401b0393909316835260208301919091526001600160801b0316604082015260600190565b6000808335601e19843603018112612a69578283fd5b8301803591506001600160401b03821115612a82578283fd5b6020019150368190038213156121b457600080fd5b60005b83811015612ab2578181015183820152602001612a9a565b838111156113915750506000910152565b6001600160a01b0381168114612ad857600080fd5b50565b8015158114612ad857600080fdfea26469706673582212208700b70c10c00cf15f8b69f0b2d6817d741a32a5484a30de34ca5eb8dc2547a964736f6c634300060c0033",
  "bytecodeSha1": "15256613cff68d605f609c55347172867efd2553",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.6.12+commit.27d51765"
  },
  "contractName": "MiniChefV2",
  "coverageMap": {
    "branches": {
      "11": {
        "BoringOwnable.claimOwnership": {
          "118": [
            1808,
            1835,
            true
          ]
        },
        "BoringOwnable.transferOwnership": {
          "115": [
            1258,
            1264,
            false
          ],
          "116": [
            1310,
            1332,
            true
          ],
          "117": [
            1336,
            1344,
            true
          ]
        }
      },
      "14": {},
      "16": {
        "BoringERC20.safeTransfer": {
          "102": [
            3670,
            3677,
            false
          ],
          "103": [
            3682,
            3698,
            true
          ],
          "104": [
            3702,
            3726,
            true
          ]
        },
        "BoringERC20.safeTransferFrom": {
          "105": [
            4355,
            4362,
            false
          ],
          "106": [
            4367,
            4383,
            true
          ],
          "107": [
            4387,
            4411,
            true
          ]
        }
      },
      "17": {
        "BoringMath.add": {
          "111": [
            320,
            336,
            true
          ]
        },
        "BoringMath.mul": {
          "108": [
            607,
            613,
            true
          ],
          "109": [
            617,
            637,
            true
          ]
        },
        "BoringMath.sub": {
          "110": [
            465,
            481,
            true
          ]
        },
        "BoringMath.to128": {
          "112": [
            757,
            773,
            true
          ]
        },
        "BoringMath.to64": {
          "114": [
            919,
            934,
            true
          ]
        },
        "BoringMath128.add": {
          "113": [
            1373,
            1389,
            true
          ]
        }
      },
      "28": {
        "MiniChefV2.add": {
          "97": [
            4200,
            4239,
            true
          ]
        },
        "MiniChefV2.deposit": {
          "96": [
            9884,
            9916,
            false
          ]
        },
        "MiniChefV2.emergencyWithdraw": {
          "89": [
            13650,
            13682,
            false
          ]
        },
        "MiniChefV2.harvest": {
          "85": [
            11616,
            11634,
            false
          ],
          "86": [
            11757,
            11789,
            false
          ]
        },
        "MiniChefV2.migrate": {
          "90": [
            6578,
            6620,
            true
          ],
          "91": [
            6684,
            6725,
            true
          ]
        },
        "MiniChefV2.pendingSushi": {
          "87": [
            7443,
            7480,
            false
          ],
          "88": [
            7484,
            7497,
            false
          ]
        },
        "MiniChefV2.set": {
          "94": [
            5352,
            5361,
            false
          ],
          "95": [
            5438,
            5447,
            true
          ]
        },
        "MiniChefV2.updatePool": {
          "92": [
            8562,
            8599,
            false
          ],
          "93": [
            8689,
            8701,
            false
          ]
        },
        "MiniChefV2.withdraw": {
          "84": [
            10770,
            10802,
            false
          ]
        },
        "MiniChefV2.withdrawAndHarvest": {
          "98": [
            12908,
            12940,
            false
          ]
        }
      },
      "40": {},
      "43": {
        "SignedSafeMath.add": {
          "124": [
            2450,
            2456,
            false
          ],
          "125": [
            2460,
            2466,
            true
          ],
          "126": [
            2472,
            2477,
            false
          ],
          "127": [
            2481,
            2486,
            true
          ]
        },
        "SignedSafeMath.sub": {
          "119": [
            2004,
            2010,
            false
          ],
          "120": [
            2014,
            2020,
            true
          ],
          "121": [
            2026,
            2031,
            false
          ],
          "122": [
            2035,
            2040,
            true
          ]
        },
        "SignedSafeMath.toUInt256": {
          "123": [
            2636,
            2642,
            true
          ]
        }
      },
      "8": {
        "BaseBoringBatchable._getRevertMsg": {
          "101": [
            847,
            870,
            false
          ]
        },
        "BaseBoringBatchable.batch": {
          "99": [
            1978,
            1985,
            false
          ],
          "100": [
            1989,
            2001,
            false
          ]
        }
      }
    },
    "statements": {
      "11": {
        "BoringOwnable.claimOwnership": {
          "30": [
            1800,
            1872
          ],
          "31": [
            1902,
            1949
          ],
          "32": [
            1959,
            1980
          ],
          "33": [
            1990,
            2015
          ]
        },
        "BoringOwnable.transferOwnership": {
          "0": [
            1302,
            1370
          ],
          "1": [
            1408,
            1450
          ],
          "2": [
            1464,
            1480
          ],
          "3": [
            1494,
            1519
          ],
          "4": [
            1573,
            1596
          ]
        }
      },
      "14": {},
      "16": {
        "BoringERC20.safeTransfer": {
          "73": [
            3662,
            3760
          ]
        },
        "BoringERC20.safeTransferFrom": {
          "81": [
            4347,
            4449
          ]
        }
      },
      "17": {
        "BoringMath.add": {
          "76": [
            312,
            365
          ]
        },
        "BoringMath.mul": {
          "69": [
            599,
            666
          ]
        },
        "BoringMath.sub": {
          "72": [
            457,
            507
          ]
        },
        "BoringMath.to128": {
          "77": [
            749,
            806
          ]
        },
        "BoringMath.to64": {
          "79": [
            911,
            966
          ]
        },
        "BoringMath128.add": {
          "78": [
            1365,
            1418
          ]
        }
      },
      "28": {
        "MiniChefV2.add": {
          "53": [
            4192,
            4263
          ],
          "54": [
            4273,
            4322
          ],
          "55": [
            4332,
            4354
          ],
          "56": [
            4364,
            4388
          ],
          "57": [
            4399,
            4562
          ],
          "58": [
            4572,
            4609
          ],
          "59": [
            4619,
            4695
          ]
        },
        "MiniChefV2.deposit": {
          "46": [
            9651,
            9688
          ],
          "47": [
            9698,
            9800
          ],
          "48": [
            9932,
            9984
          ],
          "49": [
            10005,
            10069
          ],
          "50": [
            10080,
            10121
          ]
        },
        "MiniChefV2.emergencyWithdraw": {
          "18": [
            13546,
            13561
          ],
          "19": [
            13571,
            13590
          ],
          "20": [
            13698,
            13748
          ],
          "21": [
            13836,
            13873
          ],
          "22": [
            13883,
            13934
          ]
        },
        "MiniChefV2.harvest": {
          "11": [
            11543,
            11577
          ],
          "12": [
            11650,
            11687
          ],
          "13": [
            11805,
            11878
          ],
          "14": [
            11899,
            11943
          ]
        },
        "MiniChefV2.massUpdatePools": {
          "39": [
            8232,
            8251
          ],
          "40": [
            8213,
            8216
          ]
        },
        "MiniChefV2.migrate": {
          "23": [
            6283,
            6356
          ],
          "24": [
            6464,
            6504
          ],
          "25": [
            6570,
            6666
          ],
          "26": [
            6676,
            6749
          ],
          "27": [
            6759,
            6798
          ],
          "28": [
            6808,
            6846
          ],
          "29": [
            6856,
            6882
          ]
        },
        "MiniChefV2.pendingSushi": {
          "15": [
            7681,
            7769
          ],
          "16": [
            7789,
            7895
          ]
        },
        "MiniChefV2.poolLength": {
          "5": [
            3732,
            3755
          ]
        },
        "MiniChefV2.set": {
          "42": [
            5201,
            5282
          ],
          "43": [
            5292,
            5338
          ],
          "44": [
            5365,
            5391
          ],
          "45": [
            5403,
            5488
          ]
        },
        "MiniChefV2.setMigrator": {
          "17": [
            6054,
            6074
          ]
        },
        "MiniChefV2.setSushiPerSecond": {
          "51": [
            5755,
            5787
          ],
          "52": [
            5797,
            5836
          ]
        },
        "MiniChefV2.updatePool": {
          "34": [
            8528,
            8548
          ],
          "35": [
            8897,
            9005
          ],
          "36": [
            9033,
            9077
          ],
          "37": [
            9091,
            9111
          ],
          "38": [
            9125,
            9202
          ]
        },
        "MiniChefV2.withdraw": {
          "6": [
            10537,
            10639
          ],
          "7": [
            10649,
            10686
          ],
          "8": [
            10818,
            10878
          ],
          "9": [
            10899,
            10936
          ],
          "10": [
            10947,
            10989
          ]
        },
        "MiniChefV2.withdrawAndHarvest": {
          "60": [
            12626,
            12729
          ],
          "61": [
            12739,
            12776
          ],
          "62": [
            12811,
            12848
          ],
          "63": [
            12956,
            13028
          ],
          "64": [
            13049,
            13086
          ],
          "65": [
            13097,
            13139
          ],
          "66": [
            13149,
            13193
          ]
        }
      },
      "40": {},
      "43": {
        "SignedSafeMath.add": {
          "80": [
            2441,
            2525
          ]
        },
        "SignedSafeMath.sub": {
          "70": [
            1995,
            2082
          ],
          "71": [
            2093,
            2101
          ]
        },
        "SignedSafeMath.toUInt256": {
          "74": [
            2628,
            2658
          ],
          "75": [
            2668,
            2685
          ]
        }
      },
      "8": {
        "BaseBoringBatchable._getRevertMsg": {
          "82": [
            872,
            910
          ],
          "83": [
            1034,
            1074
          ]
        },
        "BaseBoringBatchable.batch": {
          "67": [
            2021,
            2050
          ],
          "68": [
            1866,
            1869
          ]
        },
        "BoringBatchable.permitToken": {
          "41": [
            2680,
            2729
          ]
        }
      }
    }
  },
  "dependencies": [
    "BaseBoringBatchable",
    "BoringBatchable",
    "BoringERC20",
    "BoringMath",
    "BoringMath128",
    "BoringOwnable",
    "BoringOwnableData",
    "IERC20",
    "IMigratorChef",
    "IRewarder",
    "SignedSafeMath"
  ],
  "deployedBytecode": "6080604052600436106101c25760003560e01c806379d12ffb116100f75780639baf58c311610095578063c346253d11610064578063c346253d146104f6578063d1abb90714610516578063d2423b5114610536578063e30c397814610549576101c2565b80639baf58c31461048c578063a06e408b146104ac578063ab560e10146104c1578063ab7de098146104d6576101c2565b806388bba42f116100d157806388bba42f146104095780638da5cb5b146104295780638dbdbe6d1461043e57806393f1a40b1461045e576101c2565b806379d12ffb146103a75780637c516e94146103d45780637cd07e47146103f4576101c2565b806323cf3118116101645780634e71e0c81161013e5780634e71e0c81461031857806351eb05a61461032d57806357a5b58c1461035a57806378ed5d1f1461037a576101c2565b806323cf3118146102b85780632f940c70146102d8578063454b0608146102f8576101c2565b80631526fe27116101a05780631526fe271461023457806317caf6f11461026357806318fccc7614610278578063195426ec14610298576101c2565b8063078dfbe7146101c7578063081e3eda146101e95780630ad58d2f14610214575b600080fd5b3480156101d357600080fd5b506101e76101e23660046121d7565b61055e565b005b3480156101f557600080fd5b506101fe61064d565b60405161020b91906129d3565b60405180910390f35b34801561022057600080fd5b506101e761022f366004612497565b610653565b34801561024057600080fd5b5061025461024f366004612402565b6107e3565b60405161020b939291906129a9565b34801561026f57600080fd5b506101fe610825565b34801561028457600080fd5b506101e7610293366004612432565b61082b565b3480156102a457600080fd5b506101fe6102b3366004612432565b6109c5565b3480156102c457600080fd5b506101e76102d33660046121bb565b610bc5565b3480156102e457600080fd5b506101e76102f3366004612432565b610c11565b34801561030457600080fd5b506101e7610313366004612402565b610d32565b34801561032457600080fd5b506101e7611050565b34801561033957600080fd5b5061034d610348366004612402565b6110dd565b60405161020b9190612970565b34801561036657600080fd5b506101e761037536600461226a565b611361565b34801561038657600080fd5b5061039a610395366004612402565b611397565b60405161020b9190612539565b3480156103b357600080fd5b506103c76103c23660046121bb565b6113be565b60405161020b91906125cb565b3480156103e057600080fd5b506101e76103ef3660046122e1565b6113d3565b34801561040057600080fd5b5061039a611447565b34801561041557600080fd5b506101e76104243660046124c4565b611456565b34801561043557600080fd5b5061039a6115c3565b34801561044a57600080fd5b506101e7610459366004612497565b6115d2565b34801561046a57600080fd5b5061047e610479366004612432565b61175d565b60405161020b929190612a1b565b34801561049857600080fd5b506101e76104a7366004612402565b611781565b3480156104b857600080fd5b506101fe6117eb565b3480156104cd57600080fd5b5061039a6117f1565b3480156104e257600080fd5b506101e76104f1366004612461565b611815565b34801561050257600080fd5b5061039a610511366004612402565b611a3b565b34801561052257600080fd5b506101e7610531366004612497565b611a48565b6101e7610544366004612221565b611c7b565b34801561055557600080fd5b5061039a611d38565b6000546001600160a01b031633146105915760405162461bcd60e51b8152600401610588906127bb565b60405180910390fd5b811561062c576001600160a01b0383161515806105ab5750805b6105c75760405162461bcd60e51b8152600401610588906126d5565b600080546040516001600160a01b03808716939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0385166001600160a01b031991821617909155600180549091169055610648565b600180546001600160a01b0319166001600160a01b0385161790555b505050565b60035490565b61065b612153565b610664846110dd565b600085815260066020908152604080832033845290915290208151919250906106b69064e8d4a51000906106a29087906001600160801b0316611d47565b816106a957fe5b6001840154919004611d84565b600182015580546106c79085611dd1565b81556005805460009190879081106106db57fe5b6000918252602090912001546001600160a01b0316905080156107615781546040516345fb1ba160e11b81526001600160a01b03831691638bf637429161072e918a9133918a91600091906004016129dc565b600060405180830381600087803b15801561074857600080fd5b505af115801561075c573d6000803e3d6000fd5b505050505b61078f84866004898154811061077357fe5b6000918252602090912001546001600160a01b03169190611df4565b836001600160a01b031686336001600160a01b03167f8166bf25f8a2b7ed3c85049207da4358d16edbed977d23fa2ee6f0dde3ec2132886040516107d391906129d3565b60405180910390a4505050505050565b600381815481106107f057fe5b6000918252602090912001546001600160801b03811691506001600160401b03600160801b8204811691600160c01b90041683565b60085481565b610833612153565b61083c836110dd565b6000848152600660209081526040808320338452909152812082518154939450909264e8d4a510009161087891906001600160801b0316611d47565b8161087f57fe5b04905060006108a361089e846001015484611d8490919063ffffffff16565b611eea565b60018401839055905080156108e6576108e66001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168683611df4565b6000600587815481106108f557fe5b6000918252602090912001546001600160a01b03169050801561097a5783546040516345fb1ba160e11b81526001600160a01b03831691638bf6374291610947918b9133918c918991906004016129dc565b600060405180830381600087803b15801561096157600080fd5b505af1158015610975573d6000803e3d6000fd5b505050505b86336001600160a01b03167f71bab65ced2e5750775a0613be067df48ef06cf92a496ebf7663ae0660924954846040516109b491906129d3565b60405180910390a350505050505050565b60006109cf612153565b600384815481106109dc57fe5b600091825260208083206040805160608101825291909301546001600160801b0380821683526001600160401b03600160801b8304811684860152600160c01b90920490911682850152888552600683528385206001600160a01b0389168652909252918320825160048054949650919492169288908110610a5a57fe5b6000918252602090912001546040516370a0823160e01b81526001600160a01b03909116906370a0823190610a93903090600401612539565b60206040518083038186803b158015610aab57600080fd5b505afa158015610abf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ae3919061241a565b905083602001516001600160401b031642118015610b0057508015155b15610b8c576000610b2785602001516001600160401b031642611dd190919063ffffffff16565b90506000600854610b5a87604001516001600160401b0316610b5460095486611d4790919063ffffffff16565b90611d47565b81610b6157fe5b049050610b8783610b778364e8d4a51000611d47565b81610b7e57fe5b86919004611f10565b935050505b60018301548354610bba9161089e9164e8d4a5100090610bac9087611d47565b81610bb357fe5b0490611d84565b979650505050505050565b6000546001600160a01b03163314610bef5760405162461bcd60e51b8152600401610588906127bb565b600280546001600160a01b0319166001600160a01b0392909216919091179055565b60008281526006602090815260408083203384529091528120805482825560018201839055600580549293919286908110610c4857fe5b6000918252602090912001546001600160a01b031690508015610ccd576040516345fb1ba160e11b81526001600160a01b03821690638bf6374290610c9a9088903390899060009081906004016129dc565b600060405180830381600087803b158015610cb457600080fd5b505af1158015610cc8573d6000803e3d6000fd5b505050505b610cdf84836004888154811061077357fe5b836001600160a01b031685336001600160a01b03167f2cac5e20e1541d836381527a43f651851e302817b71dc8e810284e69210c1c6b85604051610d2391906129d3565b60405180910390a45050505050565b6002546001600160a01b0316610d5a5760405162461bcd60e51b815260040161058890612889565b600060048281548110610d6957fe5b60009182526020822001546040516370a0823160e01b81526001600160a01b03909116925082906370a0823190610da4903090600401612539565b60206040518083038186803b158015610dbc57600080fd5b505afa158015610dd0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610df4919061241a565b60025460405163095ea7b360e01b81529192506001600160a01b038085169263095ea7b392610e2992169085906004016125b2565b602060405180830381600087803b158015610e4357600080fd5b505af1158015610e57573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e7b91906122a9565b5060025460405163ce5494bb60e01b81526000916001600160a01b03169063ce5494bb90610ead908690600401612539565b602060405180830381600087803b158015610ec757600080fd5b505af1158015610edb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610eff91906122c5565b6040516370a0823160e01b81529091506001600160a01b038216906370a0823190610f2e903090600401612539565b60206040518083038186803b158015610f4657600080fd5b505afa158015610f5a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f7e919061241a565b8214610f9c5760405162461bcd60e51b815260040161058890612704565b6001600160a01b03811660009081526007602052604090205460ff1615610fd55760405162461bcd60e51b815260040161058890612825565b6001600160a01b03808216600090815260076020526040808220805460ff199081166001179091559286168252902080549091169055600480548291908690811061101c57fe5b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555050505050565b6001546001600160a01b031633811461107b5760405162461bcd60e51b8152600401610588906127f0565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b039092166001600160a01b0319928316179055600180549091169055565b6110e5612153565b600382815481106110f257fe5b60009182526020918290206040805160608101825292909101546001600160801b03811683526001600160401b03600160801b82048116948401859052600160c01b9091041690820152915042111561135c5760006004838154811061115457fe5b6000918252602090912001546040516370a0823160e01b81526001600160a01b03909116906370a082319061118d903090600401612539565b60206040518083038186803b1580156111a557600080fd5b505afa1580156111b9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111dd919061241a565b9050801561128057600061120783602001516001600160401b031642611dd190919063ffffffff16565b9050600060085461123485604001516001600160401b0316610b5460095486611d4790919063ffffffff16565b8161123b57fe5b049050611272611261846112548464e8d4a51000611d47565b8161125b57fe5b04611f33565b85516001600160801b031690611f5c565b6001600160801b0316845250505b61128942611f8b565b6001600160401b0316602083015260038054839190859081106112a857fe5b6000918252602091829020835191018054848401516040958601516001600160801b03199092166001600160801b039094169390931767ffffffffffffffff60801b1916600160801b6001600160401b0394851602176001600160c01b0316600160c01b93909116929092029190911790558301518351915185927f0fc9545022a542541ad085d091fb09a2ab36fee366a4576ab63714ea907ad353926113529290918691612a29565b60405180910390a2505b919050565b8060005b818110156113915761138884848381811061137c57fe5b905060200201356110dd565b50600101611365565b50505050565b600481815481106113a457fe5b6000918252602090912001546001600160a01b0316905081565b60076020526000908152604090205460ff1681565b60405163d505accf60e01b81526001600160a01b0389169063d505accf9061140b908a908a908a908a908a908a908a90600401612571565b600060405180830381600087803b15801561142557600080fd5b505af1158015611439573d6000803e3d6000fd5b505050505050505050505050565b6002546001600160a01b031681565b6000546001600160a01b031633146114805760405162461bcd60e51b8152600401610588906127bb565b6114bf836114b96003878154811061149457fe5b60009182526020909120015460085490600160c01b90046001600160401b0316611dd1565b90611f10565b6008556114cb83611f8b565b600385815481106114d857fe5b9060005260206000200160000160186101000a8154816001600160401b0302191690836001600160401b03160217905550801561154c57816005858154811061151d57fe5b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b031602179055505b80611578576005848154811061155e57fe5b6000918252602090912001546001600160a01b031661157a565b815b6001600160a01b0316847f95895a6ab1df54420d241b55243258a33e61b2194db66c1179ec521aae8e186585846040516115b5929190612a0b565b60405180910390a350505050565b6000546001600160a01b031681565b6115da612153565b6115e3846110dd565b60008581526006602090815260408083206001600160a01b038716845290915290208054919250906116159085611f10565b8155815161164c9064e8d4a51000906116389087906001600160801b0316611d47565b8161163f57fe5b6001840154919004611fb4565b816001018190555060006005868154811061166357fe5b6000918252602090912001546001600160a01b0316905080156116e95781546040516345fb1ba160e11b81526001600160a01b03831691638bf63742916116b6918a9189918291600091906004016129dc565b600060405180830381600087803b1580156116d057600080fd5b505af11580156116e4573d6000803e3d6000fd5b505050505b61171933308760048a815481106116fc57fe5b6000918252602090912001546001600160a01b0316929190611ffa565b836001600160a01b031686336001600160a01b03167f02d7e648dd130fc184d383e55bb126ac4c9c60e8f94bf05acdf557ba2d540b47886040516107d391906129d3565b60066020908152600092835260408084209091529082529020805460019091015482565b6000546001600160a01b031633146117ab5760405162461bcd60e51b8152600401610588906127bb565b60098190556040517fc6ce5eff3291fb2c1517b943daa5067ea76c83816bbf674307fbc7fea3b311d0906117e09083906129d3565b60405180910390a150565b60095481565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000546001600160a01b0316331461183f5760405162461bcd60e51b8152600401610588906127bb565b6001600160a01b03821660009081526007602052604090205460ff16156118785760405162461bcd60e51b815260040161058890612825565b6008546118859084611f10565b6008556004805460018181019092557f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b0180546001600160a01b038086166001600160a01b03199283161790925560058054938401815560009081527f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db090930180549285169290911691909117905560408051606081019091529081526003906020810161193242611f8b565b6001600160401b0316815260200161194986611f8b565b6001600160401b0390811690915282546001818101855560009485526020808620855193018054828701516040978801518716600160c01b026001600160c01b0391909716600160801b0267ffffffffffffffff60801b196001600160801b039097166001600160801b031990931692909217959095161793909316939093179091556001600160a01b03808716808652600790935292909320805460ff1916841790556004549184169290916119ff91611dd1565b7f81ee0f8c5c46e2cb41984886f77a84181724abb86c32a5f6de539b07509d45e586604051611a2e91906129d3565b60405180910390a4505050565b600581815481106113a457fe5b611a50612153565b611a59846110dd565b6000858152600660209081526040808320338452909152812082518154939450909264e8d4a5100091611a9591906001600160801b0316611d47565b81611a9c57fe5b0490506000611abb61089e846001015484611d8490919063ffffffff16565b9050611af664e8d4a51000611ae686600001516001600160801b031689611d4790919063ffffffff16565b81611aed57fe5b84919004611d84565b60018401558254611b079087611dd1565b8355611b3d6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168683611df4565b600060058881548110611b4c57fe5b6000918252602090912001546001600160a01b031690508015611bd15783546040516345fb1ba160e11b81526001600160a01b03831691638bf6374291611b9e918c9133918c918991906004016129dc565b600060405180830381600087803b158015611bb857600080fd5b505af1158015611bcc573d6000803e3d6000fd5b505050505b611be3868860048b8154811061077357fe5b856001600160a01b031688336001600160a01b03167f8166bf25f8a2b7ed3c85049207da4358d16edbed977d23fa2ee6f0dde3ec21328a604051611c2791906129d3565b60405180910390a487336001600160a01b03167f71bab65ced2e5750775a0613be067df48ef06cf92a496ebf7663ae066092495484604051611c6991906129d3565b60405180910390a35050505050505050565b60005b82811015611391576000606030868685818110611c9757fe5b9050602002810190611ca99190612a53565b604051611cb792919061250d565b600060405180830381855af49150503d8060008114611cf2576040519150601f19603f3d011682016040523d82523d6000602084013e611cf7565b606091505b509150915081158015611d075750835b15611d2e57611d15816120f3565b60405162461bcd60e51b815260040161058891906125d6565b5050600101611c7e565b6001546001600160a01b031681565b6000811580611d6257505080820282828281611d5f57fe5b04145b611d7e5760405162461bcd60e51b815260040161058890612939565b92915050565b6000818303818312801590611d995750838113155b80611dae5750600083128015611dae57508381135b611dca5760405162461bcd60e51b8152600401610588906128c0565b9392505050565b80820382811115611d7e5760405162461bcd60e51b815260040161058890612609565b60006060846001600160a01b031663a9059cbb60e01b8585604051602401611e1d9291906125b2565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b0319909416939093179092529051611e5b919061251d565b6000604051808303816000865af19150503d8060008114611e98576040519150601f19603f3d011682016040523d82523d6000602084013e611e9d565b606091505b5091509150818015611ec7575080511580611ec7575080806020019051810190611ec791906122a9565b611ee35760405162461bcd60e51b81526004016105889061265d565b5050505050565b600080821215611f0c5760405162461bcd60e51b815260040161058890612638565b5090565b81810181811015611d7e5760405162461bcd60e51b815260040161058890612784565b60006001600160801b03821115611f0c5760405162461bcd60e51b81526004016105889061274d565b8181016001600160801b038083169082161015611d7e5760405162461bcd60e51b815260040161058890612784565b60006001600160401b03821115611f0c5760405162461bcd60e51b815260040161058890612852565b6000828201818312801590611fc95750838112155b80611fde5750600083128015611fde57508381125b611dca5760405162461bcd60e51b815260040161058890612694565b60006060856001600160a01b03166323b872dd60e01b8686866040516024016120259392919061254d565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b0319909416939093179092529051612063919061251d565b6000604051808303816000865af19150503d80600081146120a0576040519150601f19603f3d011682016040523d82523d6000602084013e6120a5565b606091505b50915091508180156120cf5750805115806120cf5750808060200190518101906120cf91906122a9565b6120eb5760405162461bcd60e51b815260040161058890612904565b505050505050565b6060604482511015612139575060408051808201909152601d81527f5472616e73616374696f6e2072657665727465642073696c656e746c79000000602082015261135c565b60048201915081806020019051810190611d7e9190612368565b604080516060810182526000808252602082018190529181019190915290565b60008083601f840112612184578182fd5b5081356001600160401b0381111561219a578182fd5b60208301915083602080830285010111156121b457600080fd5b9250929050565b6000602082840312156121cc578081fd5b8135611dca81612ac3565b6000806000606084860312156121eb578182fd5b83356121f681612ac3565b9250602084013561220681612adb565b9150604084013561221681612adb565b809150509250925092565b600080600060408486031215612235578283fd5b83356001600160401b0381111561224a578384fd5b61225686828701612173565b909450925050602084013561221681612adb565b6000806020838503121561227c578182fd5b82356001600160401b03811115612291578283fd5b61229d85828601612173565b90969095509350505050565b6000602082840312156122ba578081fd5b8151611dca81612adb565b6000602082840312156122d6578081fd5b8151611dca81612ac3565b600080600080600080600080610100898b0312156122fd578384fd5b883561230881612ac3565b9750602089013561231881612ac3565b9650604089013561232881612ac3565b9550606089013594506080890135935060a089013560ff8116811461234b578384fd5b979a969950949793969295929450505060c08201359160e0013590565b600060208284031215612379578081fd5b81516001600160401b038082111561238f578283fd5b818401915084601f8301126123a2578283fd5b8151818111156123b0578384fd5b604051601f8201601f1916810160200183811182821017156123d0578586fd5b6040528181528382016020018710156123e7578485fd5b6123f8826020830160208701612a97565b9695505050505050565b600060208284031215612413578081fd5b5035919050565b60006020828403121561242b578081fd5b5051919050565b60008060408385031215612444578182fd5b82359150602083013561245681612ac3565b809150509250929050565b600080600060608486031215612475578081fd5b83359250602084013561248781612ac3565b9150604084013561221681612ac3565b6000806000606084860312156124ab578081fd5b8335925060208401359150604084013561221681612ac3565b600080600080608085870312156124d9578182fd5b843593506020850135925060408501356124f281612ac3565b9150606085013561250281612adb565b939692955090935050565b6000828483379101908152919050565b6000825161252f818460208701612a97565b9190910192915050565b6001600160a01b0391909116815260200190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b0397881681529590961660208601526040850193909352606084019190915260ff16608083015260a082015260c081019190915260e00190565b6001600160a01b03929092168252602082015260400190565b901515815260200190565b60006020825282518060208401526125f5816040850160208701612a97565b601f01601f19169190910160400192915050565b602080825260159082015274426f72696e674d6174683a20556e646572666c6f7760581b604082015260600190565b6020808252600b908201526a0496e7465676572203c20360ac1b604082015260600190565b6020808252601c908201527f426f72696e6745524332303a205472616e73666572206661696c656400000000604082015260600190565b60208082526021908201527f5369676e6564536166654d6174683a206164646974696f6e206f766572666c6f6040820152607760f81b606082015260800190565b6020808252601590820152744f776e61626c653a207a65726f206164647265737360581b604082015260600190565b60208082526029908201527f4d61737465724368656656323a206d696772617465642062616c616e6365206d6040820152680eae6e840dac2e8c6d60bb1b606082015260800190565b6020808252601c908201527f426f72696e674d6174683a2075696e74313238204f766572666c6f7700000000604082015260600190565b60208082526018908201527f426f72696e674d6174683a20416464204f766572666c6f770000000000000000604082015260600190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252818101527f4f776e61626c653a2063616c6c657220213d2070656e64696e67206f776e6572604082015260600190565b602080825260139082015272151bdad95b88185b1c9958591e481859191959606a1b604082015260600190565b6020808252601b908201527f426f72696e674d6174683a2075696e743634204f766572666c6f770000000000604082015260600190565b6020808252601d908201527f4d61737465724368656656323a206e6f206d69677261746f7220736574000000604082015260600190565b60208082526024908201527f5369676e6564536166654d6174683a207375627472616374696f6e206f766572604082015263666c6f7760e01b606082015260800190565b6020808252818101527f426f72696e6745524332303a205472616e7366657246726f6d206661696c6564604082015260600190565b60208082526018908201527f426f72696e674d6174683a204d756c204f766572666c6f770000000000000000604082015260600190565b81516001600160801b031681526020808301516001600160401b0390811691830191909152604092830151169181019190915260600190565b6001600160801b039390931683526001600160401b03918216602084015216604082015260600190565b90815260200190565b9485526001600160a01b0393841660208601529190921660408401526060830191909152608082015260a00190565b9182521515602082015260400190565b918252602082015260400190565b6001600160401b0393909316835260208301919091526001600160801b0316604082015260600190565b6000808335601e19843603018112612a69578283fd5b8301803591506001600160401b03821115612a82578283fd5b6020019150368190038213156121b457600080fd5b60005b83811015612ab2578181015183820152602001612a9a565b838111156113915750506000910152565b6001600160a01b0381168114612ad857600080fd5b50565b8015158114612ad857600080fdfea26469706673582212208700b70c10c00cf15f8b69f0b2d6817d741a32a5484a30de34ca5eb8dc2547a964736f6c634300060c0033",
  "deployedSourceMap": "1059:12884:28:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1124:489:11;;;;;;;;;;-1:-1:-1;1124:489:11;;;;;:::i;:::-;;:::i;:::-;;3664:98:28;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;10334:662;;;;;;;;;;-1:-1:-1;10334:662:28;;;;;:::i;:::-;;:::i;2063:26::-;;;;;;;;;;-1:-1:-1;2063:26:28;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;2580:30::-;;;;;;;;;;;;;:::i;11170:780::-;;;;;;;;;;-1:-1:-1;11170:780:28;;;;;:::i;:::-;;:::i;7111:791::-;;;;;;;;;;-1:-1:-1;7111:791:28;;;;;:::i;:::-;;:::i;5981:100::-;;;;;;;;;;-1:-1:-1;5981:100:28;;;;;:::i;:::-;;:::i;13380:561::-;;;;;;;;;;-1:-1:-1;13380:561:28;;;;;:::i;:::-;;:::i;6235:654::-;;;;;;;;;;-1:-1:-1;6235:654:28;;;;;:::i;:::-;;:::i;1692:330:11:-;;;;;;;;;;;;;:::i;8447:772:28:-;;;;;;;;;;-1:-1:-1;8447:772:28;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;8080:188::-;;;;;;;;;;-1:-1:-1;8080:188:28;;;;;:::i;:::-;;:::i;2155:23::-;;;;;;;;;;-1:-1:-1;2155:23:28;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;2436:44::-;;;;;;;;;;-1:-1:-1;2436:44:28;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;2467:269:8:-;;;;;;;;;;-1:-1:-1;2467:269:8;;;;;:::i;:::-;;:::i;1987:29:28:-;;;;;;;;;;;;;:::i;5089:406::-;;;;;;;;;;-1:-1:-1;5089:406:28;;;;;:::i;:::-;;:::i;288:20:11:-;;;;;;;;;;;;;:::i;9457:671:28:-;;;;;;;;;;-1:-1:-1;9457:671:28;;;;;:::i;:::-;;:::i;2337:66::-;;;;;;;;;;-1:-1:-1;2337:66:28;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;5676:167::-;;;;;;;;;;-1:-1:-1;5676:167:28;;;;;:::i;:::-;;:::i;2617:29::-;;;;;;;;;;;;;:::i;1847:::-;;;;;;;;;;;;;:::i;4094:608::-;;;;;;;;;;-1:-1:-1;4094:608:28;;;;;:::i;:::-;;:::i;2246:27::-;;;;;;;;;;-1:-1:-1;2246:27:28;;;;;:::i;:::-;;:::i;12226:974::-;;;;;;;;;;-1:-1:-1;12226:974:28;;;;;:::i;:::-;;:::i;1743:338:8:-;;;;;;:::i;:::-;;:::i;314:27:11:-;;;;;;;;;;;;;:::i;1124:489::-;2146:5;;-1:-1:-1;;;;;2146:5:11;2132:10;:19;2124:64;;;;-1:-1:-1;;;2124:64:11;;;;;;;:::i;:::-;;;;;;;;;1258:6:::1;1254:353;;;-1:-1:-1::0;;;;;1310:22:11;::::1;::::0;::::1;::::0;:34:::1;;;1336:8;1310:34;1302:68;;;;-1:-1:-1::0;;;1302:68:11::1;;;;;;;:::i;:::-;1434:5;::::0;;1413:37:::1;::::0;-1:-1:-1;;;;;1413:37:11;;::::1;::::0;1434:5;::::1;::::0;1413:37:::1;::::0;::::1;1464:5;:16:::0;;-1:-1:-1;;;;;1464:16:11;::::1;-1:-1:-1::0;;;;;;1464:16:11;;::::1;;::::0;;;;1494:25;;;;::::1;::::0;;1254:353:::1;;;1573:12;:23:::0;;-1:-1:-1;;;;;;1573:23:11::1;-1:-1:-1::0;;;;;1573:23:11;::::1;;::::0;;1254:353:::1;1124:489:::0;;;:::o;3664:98:28:-;3740:8;:15;;3664:98::o;10334:662::-;10410:20;;:::i;:::-;10433:15;10444:3;10433:10;:15::i;:::-;10458:21;10482:13;;;:8;:13;;;;;;;;10496:10;10482:25;;;;;;;10593:21;;10410:38;;-1:-1:-1;10482:25:28;10555:84;;2699:4;;10582:33;;:6;;-1:-1:-1;;;;;10582:33:28;:10;:33::i;:::-;:55;;;;;10555:15;;;;;10582:55;;10555:19;:84::i;:::-;10537:15;;;:102;10663:11;;:23;;10679:6;10663:15;:23::i;:::-;10649:37;;10743:8;:13;;10649:11;;10743:8;10752:3;;10743:13;;;;;;;;;;;;;;;;-1:-1:-1;;;;;10743:13:28;;-1:-1:-1;10770:32:28;;10766:123;;10866:11;;10818:60;;-1:-1:-1;;;10818:60:28;;-1:-1:-1;;;;;10818:23:28;;;;;:60;;10842:3;;10847:10;;10859:2;;10863:1;;10866:11;10818:60;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10766:123;10899:37;10925:2;10929:6;10899:7;10907:3;10899:12;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;10899:12:28;;:37;:25;:37::i;:::-;10986:2;-1:-1:-1;;;;;10952:37:28;10973:3;10961:10;-1:-1:-1;;;;;10952:37:28;;10978:6;10952:37;;;;;;:::i;:::-;;;;;;;;10334:662;;;;;;:::o;2063:26::-;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2063:26:28;;;-1:-1:-1;;;;;;;;;2063:26:28;;;;;-1:-1:-1;;;2063:26:28;;;;:::o;2580:30::-;;;;:::o;11170:780::-;11229:20;;:::i;:::-;11252:15;11263:3;11252:10;:15::i;:::-;11277:21;11301:13;;;:8;:13;;;;;;;;11315:10;11301:25;;;;;;;11385:21;;11369:11;;11229:38;;-1:-1:-1;11301:25:28;;2699:4;;11369:38;;:11;-1:-1:-1;;;;;11369:38:28;:15;:38::i;:::-;:60;;;;;;11336:94;;11440:21;11464:49;:37;11485:4;:15;;;11464:16;:20;;:37;;;;:::i;:::-;:47;:49::i;:::-;11543:15;;;:34;;;11440:73;-1:-1:-1;11616:18:28;;11612:86;;11650:37;-1:-1:-1;;;;;11650:5:28;:18;11669:2;11673:13;11650:18;:37::i;:::-;11708:19;11730:8;11739:3;11730:13;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;11730:13:28;;-1:-1:-1;11757:32:28;;11753:136;;11866:11;;11805:73;;-1:-1:-1;;;11805:73:28;;-1:-1:-1;;;;;11805:23:28;;;;;:73;;11830:3;;11835:10;;11847:2;;11851:13;;11866:11;11805:73;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11753:136;11924:3;11912:10;-1:-1:-1;;;;;11904:39:28;;11929:13;11904:39;;;;;;:::i;:::-;;;;;;;;11170:780;;;;;;;:::o;7111:791::-;7185:15;7212:20;;:::i;:::-;7235:8;7244:4;7235:14;;;;;;;;;;;;;;;;7212:37;;;;;;;;7235:14;;;;7212:37;-1:-1:-1;;;;;7212:37:28;;;;;-1:-1:-1;;;;;;;;7212:37:28;;;;;;;;-1:-1:-1;;;7212:37:28;;;;;;;;;;7283:14;;;:8;:14;;;;;-1:-1:-1;;;;;7283:21:28;;;;;;;;;;7341;;7391:7;:13;;7212:37;;-1:-1:-1;7283:21:28;;7314:48;;;7292:4;;7391:13;;;;;;;;;;;;;;;;:38;;-1:-1:-1;;;7391:38:28;;-1:-1:-1;;;;;7391:13:28;;;;:23;;:38;;7423:4;;7391:38;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7372:57;;7461:4;:19;;;-1:-1:-1;;;;;7443:37:28;:15;:37;:54;;;;-1:-1:-1;7484:13:28;;;7443:54;7439:341;;;7513:12;7528:40;7548:4;:19;;;-1:-1:-1;;;;;7528:40:28;:15;:19;;:40;;;;:::i;:::-;7513:55;;7582:19;7652:15;;7604:45;7633:4;:15;;;-1:-1:-1;;;;;7604:45:28;:24;7613:14;;7604:4;:8;;:24;;;;:::i;:::-;:28;;:45::i;:::-;:63;;;;;;;-1:-1:-1;7700:69:28;7760:8;7721:36;7604:63;2699:4;7721:15;:36::i;:::-;:47;;;;;7700:16;;7721:47;;7700:20;:69::i;:::-;7681:88;;7439:341;;;7867:15;;;;7806:11;;7799:96;;:84;;2699:4;;7806:33;;7822:16;7806:15;:33::i;:::-;:55;;;;;;;7799:67;:84::i;:96::-;7789:106;7111:791;-1:-1:-1;;;;;;;7111:791:28:o;5981:100::-;2146:5:11;;-1:-1:-1;;;;;2146:5:11;2132:10;:19;2124:64;;;;-1:-1:-1;;;2124:64:11;;;;;;;:::i;:::-;6054:8:28::1;:20:::0;;-1:-1:-1;;;;;;6054:20:28::1;-1:-1:-1::0;;;;;6054:20:28;;;::::1;::::0;;;::::1;::::0;;5981:100::o;13380:561::-;13449:21;13473:13;;;:8;:13;;;;;;;;13487:10;13473:25;;;;;;;13525:11;;13546:15;;;-1:-1:-1;13571:15:28;;:19;;;13623:8;:13;;13473:25;;13525:11;;13482:3;;13623:13;;;;;;;;;;;;;;;;-1:-1:-1;;;;;13623:13:28;;-1:-1:-1;13650:32:28;;13646:113;;13698:50;;-1:-1:-1;;;13698:50:28;;-1:-1:-1;;;;;13698:23:28;;;;;:50;;13722:3;;13727:10;;13739:2;;13743:1;;;;13698:50;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13646:113;13836:37;13862:2;13866:6;13836:7;13844:3;13836:12;;;;;;;:37;13931:2;-1:-1:-1;;;;;13888:46:28;13918:3;13906:10;-1:-1:-1;;;;;13888:46:28;;13923:6;13888:46;;;;;;:::i;:::-;;;;;;;;13380:561;;;;;:::o;6235:654::-;6299:8;;-1:-1:-1;;;;;6299:8:28;6283:73;;;;-1:-1:-1;;;6283:73:28;;;;;;;:::i;:::-;6366:15;6384:7;6392:4;6384:13;;;;;;;;;;;;;;;;;6421:33;;-1:-1:-1;;;6421:33:28;;-1:-1:-1;;;;;6384:13:28;;;;-1:-1:-1;6384:13:28;;6421:18;;:33;;6448:4;;6421:33;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6489:8;;6464:40;;-1:-1:-1;;;6464:40:28;;6407:47;;-1:-1:-1;;;;;;6464:16:28;;;;;;:40;;6489:8;;6407:47;;6464:40;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;6534:8:28;;:26;;-1:-1:-1;;;6534:26:28;;6514:17;;-1:-1:-1;;;;;6534:8:28;;:16;;:26;;6551:8;;6534:26;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6585:35;;-1:-1:-1;;;6585:35:28;;6514:46;;-1:-1:-1;;;;;;6585:20:28;;;;;:35;;6614:4;;6585:35;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6578:3;:42;6570:96;;;;-1:-1:-1;;;6570:96:28;;;;;;;:::i;:::-;-1:-1:-1;;;;;6684:32:28;;;;;;:11;:32;;;;;;;;:41;6676:73;;;;-1:-1:-1;;;6676:73:28;;;;;;;:::i;:::-;-1:-1:-1;;;;;6759:32:28;;;;;;;:11;:32;;;;;;:39;;-1:-1:-1;;6759:39:28;;;6794:4;6759:39;;;;6808:30;;;;;;;:38;;;;;;;6856:7;:13;;6779:10;;6856:7;6864:4;;6856:13;;;;;;;;;;;;;;:26;;;;;-1:-1:-1;;;;;6856:26:28;;;;;-1:-1:-1;;;;;6856:26:28;;;;;;6235:654;;;;:::o;1692:330:11:-;1759:12;;-1:-1:-1;;;;;1759:12:11;1808:10;:27;;1800:72;;;;-1:-1:-1;;;1800:72:11;;;;;;;:::i;:::-;1928:5;;;1907:42;;-1:-1:-1;;;;;1907:42:11;;;;1928:5;;;1907:42;;;1959:5;:21;;-1:-1:-1;;;;;1959:21:11;;;-1:-1:-1;;;;;;1959:21:11;;;;;;;1990:25;;;;;;;1692:330::o;8447:772:28:-;8496:20;;:::i;:::-;8535:8;8544:3;8535:13;;;;;;;;;;;;;;;;;8528:20;;;;;;;;8535:13;;;;8528:20;-1:-1:-1;;;;;8528:20:28;;;;-1:-1:-1;;;;;;;;8528:20:28;;;;;;;;;;-1:-1:-1;;;8528:20:28;;;;;;;;;-1:-1:-1;8562:15:28;:37;8558:655;;;8615:16;8634:7;8642:3;8634:12;;;;;;;;;;;;;;;;;;:37;;-1:-1:-1;;;8634:37:28;;-1:-1:-1;;;;;8634:12:28;;;;:22;;:37;;8665:4;;8634:37;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8615:56;-1:-1:-1;8689:12:28;;8685:335;;8721:12;8736:40;8756:4;:19;;;-1:-1:-1;;;;;8736:40:28;:15;:19;;:40;;;;:::i;:::-;8721:55;;8794:19;8864:15;;8816:45;8845:4;:15;;;-1:-1:-1;;;;;8816:45:28;:24;8825:14;;8816:4;:8;;:24;;;;:::i;:45::-;:63;;;;;;;-1:-1:-1;8921:84:28;8947:57;8987:8;8948:36;8816:63;2699:4;8948:15;:36::i;:::-;:47;;;;;;8947:55;:57::i;:::-;8921:21;;-1:-1:-1;;;;;8921:25:28;;;:84::i;:::-;-1:-1:-1;;;;;8897:108:28;;;-1:-1:-1;;8685:335:28;9055:22;:15;:20;:22::i;:::-;-1:-1:-1;;;;;9033:44:28;:19;;;:44;9091:8;:13;;9033:4;;9091:8;9100:3;;9091:13;;;;;;;;;;;;;;;:20;;:13;;:20;;;;;;;;;;;-1:-1:-1;;;;;;9091:20:28;;;-1:-1:-1;;;;;9091:20:28;;;;;;;-1:-1:-1;;;;9091:20:28;-1:-1:-1;;;;;;;;9091:20:28;;;;;-1:-1:-1;;;;;9091:20:28;-1:-1:-1;;;9091:20:28;;;;;;;;;;;;;;9149:19;;;9180:21;;9130:72;;9144:3;;9130:72;;;;9149:19;;9170:8;;9130:72;:::i;:::-;;;;;;;;8558:655;;8447:772;;;:::o;8080:188::-;8163:4;8149:11;8184:78;8208:3;8204:1;:7;8184:78;;;8232:19;8243:4;;8248:1;8243:7;;;;;;;;;;;;;8232:10;:19::i;:::-;-1:-1:-1;8213:3:28;;8184:78;;;;8080:188;;;:::o;2155:23::-;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2155:23:28;;-1:-1:-1;2155:23:28;:::o;2436:44::-;;;;;;;;;;;;;;;:::o;2467:269:8:-;2680:49;;-1:-1:-1;;;2680:49:8;;-1:-1:-1;;;;;2680:12:8;;;;;:49;;2693:4;;2699:2;;2703:6;;2711:8;;2721:1;;2724;;2727;;2680:49;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2467:269;;;;;;;;:::o;1987:29:28:-;;;-1:-1:-1;;;;;1987:29:28;;:::o;5089:406::-;2146:5:11;;-1:-1:-1;;;;;2146:5:11;2132:10;:19;2124:64;;;;-1:-1:-1;;;2124:64:11;;;;;;;:::i;:::-;5219:63:28::1;5270:11;5219:46;5239:8;5248:4;5239:14;;;;;;;;;::::0;;;::::1;::::0;;;::::1;:25:::0;5219:15:::1;::::0;;-1:-1:-1;;;5239:25:28;::::1;-1:-1:-1::0;;;;;5239:25:28::1;5219:19;:46::i;:::-;:50:::0;::::1;:63::i;:::-;5201:15;:81:::0;5320:18:::1;:11:::0;:16:::1;:18::i;:::-;5292:8;5301:4;5292:14;;;;;;;;;;;;;;;:25;;;:46;;;;;-1:-1:-1::0;;;;;5292:46:28::1;;;;;-1:-1:-1::0;;;;;5292:46:28::1;;;;;;5352:9;5348:46;;;5382:9;5365:8;5374:4;5365:14;;;;;;;;;;;;;;;;:26;;;;;-1:-1:-1::0;;;;;5365:26:28::1;;;;;-1:-1:-1::0;;;;;5365:26:28::1;;;;;;5348:46;5438:9;:38;;5462:8;5471:4;5462:14;;;;;;;;;::::0;;;::::1;::::0;;;::::1;::::0;-1:-1:-1;;;;;5462:14:28::1;5438:38;;;5450:9;5438:38;-1:-1:-1::0;;;;;5408:80:28::1;5419:4;5408:80;5425:11;5478:9;5408:80;;;;;;;:::i;:::-;;;;;;;;5089:406:::0;;;;:::o;288:20:11:-;;;-1:-1:-1;;;;;288:20:11;;:::o;9457:671:28:-;9532:20;;:::i;:::-;9555:15;9566:3;9555:10;:15::i;:::-;9580:21;9604:13;;;:8;:13;;;;;;;;-1:-1:-1;;;;;9604:17:28;;;;;;;;;9665:11;;9532:38;;-1:-1:-1;9604:17:28;9665:23;;9681:6;9665:15;:23::i;:::-;9651:37;;9754:21;;9716:84;;2699:4;;9743:33;;:6;;-1:-1:-1;;;;;9743:33:28;:10;:33::i;:::-;:55;;;;;9716:15;;;;;9743:55;;9716:19;:84::i;:::-;9698:4;:15;;:102;;;;9835:19;9857:8;9866:3;9857:13;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;9857:13:28;;-1:-1:-1;9884:32:28;;9880:115;;9972:11;;9932:52;;-1:-1:-1;;;9932:52:28;;-1:-1:-1;;;;;9932:23:28;;;;;:52;;9956:3;;9961:2;;;;9969:1;;9972:11;9932:52;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9880:115;10005:64;10035:10;10055:4;10062:6;10005:7;10013:3;10005:12;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;10005:12:28;;:64;;:29;:64::i;:::-;10118:2;-1:-1:-1;;;;;10085:36:28;10105:3;10093:10;-1:-1:-1;;;;;10085:36:28;;10110:6;10085:36;;;;;;:::i;2337:66::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5676:167::-;2146:5:11;;-1:-1:-1;;;;;2146:5:11;2132:10;:19;2124:64;;;;-1:-1:-1;;;2124:64:11;;;;;;;:::i;:::-;5755:14:28::1;:32:::0;;;5802:34:::1;::::0;::::1;::::0;::::1;::::0;5772:15;;5802:34:::1;:::i;:::-;;;;;;;;5676:167:::0;:::o;2617:29::-;;;;:::o;1847:::-;;;:::o;4094:608::-;2146:5:11;;-1:-1:-1;;;;;2146:5:11;2132:10;:19;2124:64;;;;-1:-1:-1;;;2124:64:11;;;;;;;:::i;:::-;-1:-1:-1;;;;;4200:30:28;::::1;;::::0;;;:11:::1;:30;::::0;;;;;::::1;;:39;4192:71;;;;-1:-1:-1::0;;;4192:71:28::1;;;;;;;:::i;:::-;4291:15;::::0;:31:::1;::::0;4311:10;4291:19:::1;:31::i;:::-;4273:15;:49:::0;4332:7:::1;:22:::0;;::::1;::::0;;::::1;::::0;;;;::::1;::::0;;-1:-1:-1;;;;;4332:22:28;;::::1;-1:-1:-1::0;;;;;;4332:22:28;;::::1;;::::0;;;4364:8:::1;:24:::0;;;;::::1;::::0;;-1:-1:-1;4364:24:28;;;;;;::::1;::::0;;;;::::1;::::0;;;::::1;::::0;;;::::1;::::0;;4413:148:::1;::::0;;::::1;::::0;::::1;::::0;;;;;;4399:8:::1;::::0;4332:22:::1;4413:148:::0;::::1;4495:22;:15;:20;:22::i;:::-;-1:-1:-1::0;;;;;4413:148:28::1;;;;;4448:17;:10;:15;:17::i;:::-;-1:-1:-1::0;;;;;4413:148:28;;::::1;::::0;;;4399:163;;::::1;::::0;;::::1;::::0;;-1:-1:-1;4399:163:28;;;::::1;::::0;;;;;;::::1;::::0;;;;::::1;::::0;::::1;::::0;;::::1;::::0;;::::1;-1:-1:-1::0;;;4399:163:28::1;-1:-1:-1::0;;;;;4399:163:28;;;::::1;-1:-1:-1::0;;;4399:163:28::1;-1:-1:-1::0;;;;;;;;;4399:163:28;;::::1;-1:-1:-1::0;;;;;;4399:163:28;;::::1;::::0;;;::::1;::::0;;;::::1;;::::0;;;::::1;::::0;;;::::1;::::0;;;-1:-1:-1;;;;;4572:30:28;;::::1;::::0;;;:11:::1;:30:::0;;;;;;;:37;;-1:-1:-1;;4572:37:28::1;::::0;::::1;::::0;;4640:7:::1;:14:::0;4624:71;;::::1;::::0;4572:30;;4640:21:::1;::::0;:18:::1;:21::i;:::-;4624:71;4663:10;4624:71;;;;;;:::i;:::-;;;;;;;;4094:608:::0;;;:::o;2246:27::-;;;;;;;;;;12226:974;12312:20;;:::i;:::-;12335:15;12346:3;12335:10;:15::i;:::-;12360:21;12384:13;;;:8;:13;;;;;;;;12398:10;12384:25;;;;;;;12468:21;;12452:11;;12312:38;;-1:-1:-1;12384:25:28;;2699:4;;12452:38;;:11;-1:-1:-1;;;;;12452:38:28;:15;:38::i;:::-;:60;;;;;;12419:94;;12523:21;12547:49;:37;12568:4;:15;;;12547:16;:20;;:37;;;;:::i;:49::-;12523:73;;12644:85;2699:4;12672:33;12683:4;:21;;;-1:-1:-1;;;;;12672:33:28;:6;:10;;:33;;;;:::i;:::-;:55;;;;;12644:16;;12672:55;;12644:20;:85::i;:::-;12626:15;;;:103;12753:11;;:23;;12769:6;12753:15;:23::i;:::-;12739:37;;12811;-1:-1:-1;;;;;12811:5:28;:18;12830:2;12834:13;12811:18;:37::i;:::-;12859:19;12881:8;12890:3;12881:13;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;12881:13:28;;-1:-1:-1;12908:32:28;;12904:135;;13016:11;;12956:72;;-1:-1:-1;;;12956:72:28;;-1:-1:-1;;;;;12956:23:28;;;;;:72;;12980:3;;12985:10;;12997:2;;13001:13;;13016:11;12956:72;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12904:135;13049:37;13075:2;13079:6;13049:7;13057:3;13049:12;;;;;;;:37;13136:2;-1:-1:-1;;;;;13102:37:28;13123:3;13111:10;-1:-1:-1;;;;;13102:37:28;;13128:6;13102:37;;;;;;:::i;:::-;;;;;;;;13174:3;13162:10;-1:-1:-1;;;;;13154:39:28;;13179:13;13154:39;;;;;;:::i;:::-;;;;;;;;12226:974;;;;;;;;:::o;1743:338:8:-;1833:9;1828:247;1848:16;;;1828:247;;;1886:12;1900:19;1931:4;1950:5;;1956:1;1950:8;;;;;;;;;;;;;;;;;;:::i;:::-;1923:36;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1885:74;;;;1978:7;1977:8;:24;;;;;1989:12;1977:24;1973:92;;;2028:21;2042:6;2028:13;:21::i;:::-;2021:29;;-1:-1:-1;;;2021:29:8;;;;;;;;:::i;1973:92::-;-1:-1:-1;;1866:3:8;;1828:247;;314:27:11;;;-1:-1:-1;;;;;314:27:11;;:::o;520:153:17:-;578:9;607:6;;;:30;;-1:-1:-1;;622:5:17;;;636:1;631;622:5;631:1;617:15;;;;;:20;607:30;599:67;;;;-1:-1:-1;;;599:67:17;;;;;;;:::i;:::-;520:153;;;;:::o;1895:213:43:-;1951:6;1980:5;;;2004:6;;;;;;:16;;;2019:1;2014;:6;;2004:16;2003:38;;;;2030:1;2026;:5;:14;;;;;2039:1;2035;:5;2026:14;1995:87;;;;-1:-1:-1;;;1995:87:43;;;;;;;:::i;:::-;2100:1;1895:213;-1:-1:-1;;;1895:213:43:o;378:136:17:-;470:5;;;465:16;;;;457:50;;;;-1:-1:-1;;;457:50:17;;;;;;;:::i;3434:333:16:-;3548:12;3562:17;3591:5;-1:-1:-1;;;;;3583:19:16;473:10;3626:12;;3640:2;3644:6;3603:48;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;3603:48:16;;;;;;;;;;;;;;-1:-1:-1;;;;;3603:48:16;-1:-1:-1;;;;;;3603:48:16;;;;;;;;;;3583:69;;;;3603:48;3583:69;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3547:105;;;;3670:7;:57;;;;-1:-1:-1;3682:11:16;;:16;;:44;;;3713:4;3702:24;;;;;;;;;;;;:::i;:::-;3662:98;;;;-1:-1:-1;;;3662:98:16;;;;;;;:::i;:::-;3434:333;;;;;:::o;2557:135:43:-;2609:7;2641:1;2636;:6;;2628:30;;;;-1:-1:-1;;;2628:30:43;;;;;;;:::i;:::-;-1:-1:-1;2683:1:43;2557:135::o;233:139:17:-;325:5;;;320:16;;;;312:53;;;;-1:-1:-1;;;312:53:17;;;;;;;:::i;679:158::-;728:9;-1:-1:-1;;;;;757:16:17;;;749:57;;;;-1:-1:-1;;;749:57:17;;;;;;;:::i;1286:139::-;1378:5;;;-1:-1:-1;;;;;1373:16:17;;;;;;;;1365:53;;;;-1:-1:-1;;;1365:53:17;;;;;;;:::i;843:153::-;891:8;-1:-1:-1;;;;;919:15:17;;;911:55;;;;-1:-1:-1;;;911:55:17;;;;;;;:::i;2341:210:43:-;2397:6;2426:5;;;2450:6;;;;;;:16;;;2465:1;2460;:6;;2450:16;2449:38;;;;2476:1;2472;:5;:14;;;;;2485:1;2481;:5;2472:14;2441:84;;;;-1:-1:-1;;;2441:84:43;;;;;;;:::i;4082:374:16:-;4222:12;4236:17;4265:5;-1:-1:-1;;;;;4257:19:16;562:10;4300:17;;4319:4;4325:2;4329:6;4277:59;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;4277:59:16;;;;;;;;;;;;;;-1:-1:-1;;;;;4277:59:16;-1:-1:-1;;;;;;4277:59:16;;;;;;;;;;4257:80;;;;4277:59;4257:80;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4221:116;;;;4355:7;:57;;;;-1:-1:-1;4367:11:16;;:16;;:44;;;4398:4;4387:24;;;;;;;;;;;;:::i;:::-;4347:102;;;;-1:-1:-1;;;4347:102:16;;;;;;;:::i;:::-;4082:374;;;;;;:::o;635:487:8:-;707:13;868:2;847:11;:18;:23;843:67;;;-1:-1:-1;872:38:8;;;;;;;;;;;;;;;;;;;843:67;1010:4;997:11;993:22;978:37;;1052:11;1041:33;;;;;;;;;;;;:::i;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;158:363::-;;;299:3;292:4;284:6;280:17;276:27;266:2;;-1:-1;;307:12;266:2;-1:-1;337:20;;-1:-1;;;;;366:30;;363:2;;;-1:-1;;399:12;363:2;443:4;435:6;431:17;419:29;;494:3;443:4;;478:6;474:17;435:6;460:32;;457:41;454:2;;;511:1;;501:12;454:2;259:262;;;;;:::o;2866:241::-;;2970:2;2958:9;2949:7;2945:23;2941:32;2938:2;;;-1:-1;;2976:12;2938:2;85:6;72:20;97:33;124:5;97:33;:::i;3114:479::-;;;;3246:2;3234:9;3225:7;3221:23;3217:32;3214:2;;;-1:-1;;3252:12;3214:2;85:6;72:20;97:33;124:5;97:33;:::i;:::-;3304:63;-1:-1;3404:2;3440:22;;971:20;996:30;971:20;996:30;:::i;:::-;3412:60;-1:-1;3509:2;3545:22;;971:20;996:30;971:20;996:30;:::i;:::-;3517:60;;;;3208:385;;;;;:::o;3600:538::-;;;;3764:2;3752:9;3743:7;3739:23;3735:32;3732:2;;;-1:-1;;3770:12;3732:2;3828:17;3815:31;-1:-1;;;;;3858:6;3855:30;3852:2;;;-1:-1;;3888:12;3852:2;3926:91;4009:7;4000:6;3989:9;3985:22;3926:91;:::i;:::-;3908:109;;-1:-1;3908:109;-1:-1;;4054:2;4090:22;;971:20;996:30;971:20;996:30;:::i;4145:397::-;;;4284:2;4272:9;4263:7;4259:23;4255:32;4252:2;;;-1:-1;;4290:12;4252:2;4348:17;4335:31;-1:-1;;;;;4378:6;4375:30;4372:2;;;-1:-1;;4408:12;4372:2;4446:80;4518:7;4509:6;4498:9;4494:22;4446:80;:::i;:::-;4428:98;;;;-1:-1;4246:296;-1:-1;;;;4246:296::o;4549:257::-;;4661:2;4649:9;4640:7;4636:23;4632:32;4629:2;;;-1:-1;;4667:12;4629:2;1119:6;1113:13;1131:30;1155:5;1131:30;:::i;4813:293::-;;4943:2;4931:9;4922:7;4918:23;4914:32;4911:2;;;-1:-1;;4949:12;4911:2;1576:6;1570:13;1588:48;1630:5;1588:48;:::i;5113:1147::-;;;;;;;;;5349:3;5337:9;5328:7;5324:23;5320:33;5317:2;;;-1:-1;;5356:12;5317:2;1405:6;1392:20;1417:48;1459:5;1417:48;:::i;:::-;5408:78;-1:-1;5523:2;5562:22;;72:20;97:33;72:20;97:33;:::i;:::-;5531:63;-1:-1;5631:2;5670:22;;72:20;97:33;72:20;97:33;:::i;:::-;5639:63;-1:-1;5739:2;5778:22;;2522:20;;-1:-1;5847:3;5887:22;;2522:20;;-1:-1;5956:3;5994:22;;2798:20;37306:4;37295:16;;40399:33;;40389:2;;-1:-1;;40436:12;40389:2;5311:949;;;;-1:-1;5311:949;;;;;;5965:61;;-1:-1;;;6063:3;6103:22;;1240:20;;6172:3;6212:22;1240:20;;5311:949::o;6559:362::-;;6684:2;6672:9;6663:7;6659:23;6655:32;6652:2;;;-1:-1;;6690:12;6652:2;6741:17;6735:24;-1:-1;;;;;6779:18;6771:6;6768:30;6765:2;;;-1:-1;;6801:12;6765:2;6888:6;6877:9;6873:22;;;2116:3;2109:4;2101:6;2097:17;2093:27;2083:2;;-1:-1;;2124:12;2083:2;2164:6;2158:13;6779:18;35334:6;35331:30;35328:2;;;-1:-1;;35364:12;35328:2;34997;34991:9;35437;35418:17;;-1:-1;;35414:33;35023:17;;6684:2;35023:17;35083:34;;;35119:22;;;35080:62;35077:2;;;-1:-1;;35145:12;35077:2;34997;35164:22;2257:21;;;2357:16;;;6684:2;2357:16;2354:25;-1:-1;2351:2;;;-1:-1;;2382:12;2351:2;2402:39;2434:6;6684:2;2333:5;2329:16;6684:2;2299:6;2295:17;2402:39;:::i;:::-;6821:84;6646:275;-1:-1;;;;;;6646:275::o;6928:241::-;;7032:2;7020:9;7011:7;7007:23;7003:32;7000:2;;;-1:-1;;7038:12;7000:2;-1:-1;2522:20;;6994:175;-1:-1;6994:175::o;7176:263::-;;7291:2;7279:9;7270:7;7266:23;7262:32;7259:2;;;-1:-1;;7297:12;7259:2;-1:-1;2670:13;;7253:186;-1:-1;7253:186::o;7446:366::-;;;7567:2;7555:9;7546:7;7542:23;7538:32;7535:2;;;-1:-1;;7573:12;7535:2;2535:6;2522:20;7625:63;;7725:2;7768:9;7764:22;72:20;97:33;124:5;97:33;:::i;:::-;7733:63;;;;7529:283;;;;;:::o;7819:557::-;;;;7990:2;7978:9;7969:7;7965:23;7961:32;7958:2;;;-1:-1;;7996:12;7958:2;2535:6;2522:20;8048:63;;8148:2;8206:9;8202:22;1392:20;1417:48;1459:5;1417:48;:::i;:::-;8156:78;-1:-1;8271:2;8328:22;;1914:20;1939:51;1914:20;1939:51;:::i;8383:491::-;;;;8521:2;8509:9;8500:7;8496:23;8492:32;8489:2;;;-1:-1;;8527:12;8489:2;2535:6;2522:20;8579:63;;8679:2;8722:9;8718:22;2522:20;8687:63;;8787:2;8830:9;8826:22;72:20;97:33;124:5;97:33;:::i;8881:647::-;;;;;9051:3;9039:9;9030:7;9026:23;9022:33;9019:2;;;-1:-1;;9058:12;9019:2;2535:6;2522:20;9110:63;;9210:2;9253:9;9249:22;2522:20;9218:63;;9318:2;9379:9;9375:22;1914:20;1939:51;1984:5;1939:51;:::i;:::-;9326:81;-1:-1;9444:2;9480:22;;971:20;996:30;971:20;996:30;:::i;:::-;9013:515;;;;-1:-1;9013:515;;-1:-1;;9013:515::o;18908:291::-;;38916:6;38911:3;38906;38893:30;38954:16;;38947:27;;;38954:16;19052:147;-1:-1;19052:147::o;19206:271::-;;10536:5;35614:12;10647:52;10692:6;10687:3;10680:4;10673:5;10669:16;10647:52;:::i;:::-;10711:16;;;;;19340:137;-1:-1;;19340:137::o;19484:222::-;-1:-1;;;;;36987:54;;;;9755:37;;19611:2;19596:18;;19582:124::o;19713:444::-;-1:-1;;;;;36987:54;;;9755:37;;36987:54;;;;20060:2;20045:18;;9755:37;20143:2;20128:18;;9986:37;;;;19896:2;19881:18;;19867:290::o;20164:884::-;-1:-1;;;;;36987:54;;;9755:37;;36987:54;;;;20620:2;20605:18;;9755:37;20703:2;20688:18;;9986:37;;;;20786:2;20771:18;;9986:37;;;;37306:4;37295:16;20865:3;20850:19;;18861:35;36998:42;20934:19;;9986:37;21033:3;21018:19;;9986:37;;;;20455:3;20440:19;;20426:622::o;21055:333::-;-1:-1;;;;;36987:54;;;;9755:37;;21374:2;21359:18;;9986:37;21210:2;21195:18;;21181:207::o;21395:210::-;36273:13;;36266:21;9869:34;;21516:2;21501:18;;21487:118::o;22409:310::-;;22556:2;22577:17;22570:47;11659:5;35614:12;36053:6;22556:2;22545:9;22541:18;36041:19;11753:52;11798:6;36081:14;22545:9;36081:14;22556:2;11779:5;11775:16;11753:52;:::i;:::-;35437:9;39333:14;-1:-1;;39329:28;11817:39;;;;36081:14;11817:39;;22527:192;-1:-1;;22527:192::o;22726:416::-;22926:2;22940:47;;;12093:2;22911:18;;;36041:19;-1:-1;;;36081:14;;;12109:44;12172:12;;;22897:245::o;23149:416::-;23349:2;23363:47;;;12423:2;23334:18;;;36041:19;-1:-1;;;36081:14;;;12439:34;12492:12;;;23320:245::o;23572:416::-;23772:2;23786:47;;;12743:2;23757:18;;;36041:19;12779:30;36081:14;;;12759:51;12829:12;;;23743:245::o;23995:416::-;24195:2;24209:47;;;13080:2;24180:18;;;36041:19;13116:34;36081:14;;;13096:55;-1:-1;;;13171:12;;;13164:25;13208:12;;;24166:245::o;24418:416::-;24618:2;24632:47;;;13459:2;24603:18;;;36041:19;-1:-1;;;36081:14;;;13475:44;13538:12;;;24589:245::o;24841:416::-;25041:2;25055:47;;;13789:2;25026:18;;;36041:19;13825:34;36081:14;;;13805:55;-1:-1;;;13880:12;;;13873:33;13925:12;;;25012:245::o;25264:416::-;25464:2;25478:47;;;14176:2;25449:18;;;36041:19;14212:30;36081:14;;;14192:51;14262:12;;;25435:245::o;25687:416::-;25887:2;25901:47;;;14513:2;25872:18;;;36041:19;14549:26;36081:14;;;14529:47;14595:12;;;25858:245::o;26110:416::-;26310:2;26324:47;;;26295:18;;;36041:19;14882:34;36081:14;;;14862:55;14936:12;;;26281:245::o;26533:416::-;26733:2;26747:47;;;26718:18;;;36041:19;15223:34;36081:14;;;15203:55;15277:12;;;26704:245::o;26956:416::-;27156:2;27170:47;;;15528:2;27141:18;;;36041:19;-1:-1;;;36081:14;;;15544:42;15605:12;;;27127:245::o;27379:416::-;27579:2;27593:47;;;15856:2;27564:18;;;36041:19;15892:29;36081:14;;;15872:50;15941:12;;;27550:245::o;27802:416::-;28002:2;28016:47;;;16192:2;27987:18;;;36041:19;16228:31;36081:14;;;16208:52;16279:12;;;27973:245::o;28225:416::-;28425:2;28439:47;;;16530:2;28410:18;;;36041:19;16566:34;36081:14;;;16546:55;-1:-1;;;16621:12;;;16614:28;16661:12;;;28396:245::o;28648:416::-;28848:2;28862:47;;;28833:18;;;36041:19;16948:34;36081:14;;;16928:55;17002:12;;;28819:245::o;29071:416::-;29271:2;29285:47;;;17253:2;29256:18;;;36041:19;17289:26;36081:14;;;17269:47;17335:12;;;29242:245::o;29494:326::-;17647:23;;-1:-1;;;;;36867:46;18148:37;;17828:4;17817:16;;;17811:23;-1:-1;;;;;37193:30;;;17886:14;;;18629:36;;;;17986:4;17975:16;;;17969:23;37193:30;18044:14;;;18629:36;;;;29673:2;29658:18;;29644:176::o;29827:436::-;-1:-1;;;;;36867:46;;;;18148:37;;-1:-1;;;;;37193:30;;;30168:2;30153:18;;18629:36;37193:30;30249:2;30234:18;;18629:36;30006:2;29991:18;;29977:286::o;30270:222::-;9986:37;;;30397:2;30382:18;;30368:124::o;30499:716::-;9986:37;;;-1:-1;;;;;36987:54;;;30935:2;30920:18;;9614:58;36987:54;;;;31018:2;31003:18;;9755:37;31109:2;31094:18;;11444:58;;;;31200:3;31185:19;;11444:58;30762:3;30747:19;;30733:482::o;33311:321::-;9986:37;;;36273:13;36266:21;33618:2;33603:18;;9869:34;33460:2;33445:18;;33431:201::o;33639:329::-;9986:37;;;33954:2;33939:18;;9986:37;33792:2;33777:18;;33763:205::o;33975:440::-;-1:-1;;;;;37193:30;;;;18629:36;;34318:2;34303:18;;9986:37;;;;-1:-1;;;;;36867:46;34401:2;34386:18;;18388:50;34156:2;34141:18;;34127:288::o;34422:506::-;;;34557:11;34544:25;34608:48;;34632:8;34616:14;34612:29;34608:48;34588:18;34584:73;34574:2;;-1:-1;;34661:12;34574:2;34688:33;;34742:18;;;-1:-1;;;;;;34769:30;;34766:2;;;-1:-1;;34802:12;34766:2;34647:4;34830:13;;-1:-1;34616:14;34862:38;;;34852:49;;34849:2;;;34914:1;;34904:12;38989:268;39054:1;39061:101;39075:6;39072:1;39069:13;39061:101;;;39142:11;;;39136:18;39123:11;;;39116:39;39097:2;39090:10;39061:101;;;39177:6;39174:1;39171:13;39168:2;;;-1:-1;;39054:1;39224:16;;39217:27;39038:219::o;39370:117::-;-1:-1;;;;;36987:54;;39429:35;;39419:2;;39478:1;;39468:12;39419:2;39413:74;:::o;39494:111::-;39575:5;36273:13;36266:21;39553:5;39550:32;39540:2;;39596:1;;39586:12",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {
      "SUSHI()": {
        "notice": "Address of SUSHI contract."
      },
      "add(uint256,address,address)": {
        "notice": "Add a new LP to the pool. Can only be called by the owner. DO NOT add the same LP token more than once. Rewards will be messed up if you do.",
        "params": {
          "_lpToken": "Address of the LP ERC-20 token.",
          "_rewarder": "Address of the rewarder delegate.",
          "allocPoint": "AP of the new pool."
        }
      },
      "batch(bytes[],bool)": {
        "notice": "Allows batched call to self (this contract).",
        "params": {
          "calls": "An array of inputs for each call.",
          "revertOnFail": "If True then reverts after a failed call and stops doing further calls."
        }
      },
      "claimOwnership()": {
        "notice": "Needs to be called by `pendingOwner` to claim ownership."
      },
      "constructor": {
        "params": {
          "_sushi": "The SUSHI token contract address."
        }
      },
      "deposit(uint256,uint256,address)": {
        "notice": "Deposit LP tokens to MCV2 for SUSHI allocation.",
        "params": {
          "amount": "LP token amount to deposit.",
          "pid": "The index of the pool. See `poolInfo`.",
          "to": "The receiver of `amount` deposit benefit."
        }
      },
      "emergencyWithdraw(uint256,address)": {
        "notice": "Withdraw without caring about rewards. EMERGENCY ONLY.",
        "params": {
          "pid": "The index of the pool. See `poolInfo`.",
          "to": "Receiver of the LP tokens."
        }
      },
      "harvest(uint256,address)": {
        "notice": "Harvest proceeds for transaction sender to `to`.",
        "params": {
          "pid": "The index of the pool. See `poolInfo`.",
          "to": "Receiver of SUSHI rewards."
        }
      },
      "lpToken(uint256)": {
        "notice": "Address of the LP token for each MCV2 pool."
      },
      "massUpdatePools(uint256[])": {
        "notice": "Update reward variables for all pools. Be careful of gas spending!",
        "params": {
          "pids": "Pool IDs of all to be updated. Make sure to update all active pools."
        }
      },
      "migrate(uint256)": {
        "notice": "Migrate LP token to another LP contract through the `migrator` contract.",
        "params": {
          "_pid": "The index of the pool. See `poolInfo`."
        }
      },
      "pendingSushi(uint256,address)": {
        "notice": "View function to see pending SUSHI on frontend.",
        "params": {
          "_pid": "The index of the pool. See `poolInfo`.",
          "_user": "Address of user."
        },
        "returns": {
          "pending": "SUSHI reward for a given user."
        }
      },
      "permitToken(address,address,address,uint256,uint256,uint8,bytes32,bytes32)": {
        "notice": "Call wrapper that performs `ERC20.permit` on `token`. Lookup `IERC20.permit`."
      },
      "poolInfo(uint256)": {
        "notice": "Info of each MCV2 pool."
      },
      "poolLength()": {
        "notice": "Returns the number of MCV2 pools."
      },
      "rewarder(uint256)": {
        "notice": "Address of each `IRewarder` contract in MCV2."
      },
      "set(uint256,uint256,address,bool)": {
        "notice": "Update the given pool's SUSHI allocation point and `IRewarder` contract. Can only be called by the owner.",
        "params": {
          "_allocPoint": "New AP of the pool.",
          "_pid": "The index of the pool. See `poolInfo`.",
          "_rewarder": "Address of the rewarder delegate.",
          "overwrite": "True if _rewarder should be `set`. Otherwise `_rewarder` is ignored."
        }
      },
      "setMigrator(address)": {
        "notice": "Set the `migrator` contract. Can only be called by the owner.",
        "params": {
          "_migrator": "The contract address to set."
        }
      },
      "setSushiPerSecond(uint256)": {
        "notice": "Sets the sushi per second to be distributed. Can only be called by the owner.",
        "params": {
          "_sushiPerSecond": "The amount of Sushi to be distributed per second."
        }
      },
      "transferOwnership(address,bool,bool)": {
        "notice": "Transfers ownership to `newOwner`. Either directly or claimable by the new pending owner. Can only be invoked by the current `owner`.",
        "params": {
          "direct": "True if `newOwner` should be set immediately. False if `newOwner` needs to use `claimOwnership`.",
          "newOwner": "Address of the new owner.",
          "renounce": "Allows the `newOwner` to be `address(0)` if `direct` and `renounce` is True. Has no effect otherwise."
        }
      },
      "updatePool(uint256)": {
        "notice": "Update reward variables of the given pool.",
        "params": {
          "pid": "The index of the pool. See `poolInfo`."
        },
        "returns": {
          "pool": "Returns the pool that was updated."
        }
      },
      "userInfo(uint256,address)": {
        "notice": "Info of each user that stakes LP tokens."
      },
      "withdraw(uint256,uint256,address)": {
        "notice": "Withdraw LP tokens from MCV2.",
        "params": {
          "amount": "LP token amount to withdraw.",
          "pid": "The index of the pool. See `poolInfo`.",
          "to": "Receiver of the LP tokens."
        }
      },
      "withdrawAndHarvest(uint256,uint256,address)": {
        "notice": "Withdraw LP tokens from MCV2 and harvest proceeds for transaction sender to `to`.",
        "params": {
          "amount": "LP token amount to withdraw.",
          "pid": "The index of the pool. See `poolInfo`.",
          "to": "Receiver of the LP tokens and SUSHI rewards."
        }
      }
    },
    "notice": "The (older) MasterChef contract gives out a constant number of SUSHI tokens per block. It is the only address with minting rights for SUSHI. The idea for this MasterChef V2 (MCV2) contract is therefore to be the owner of a dummy token that is deposited into the MasterChef V1 (MCV1) contract. The allocation point for this pool on MCV1 is the total allocation point for all pools that receive double incentives.",
    "stateVariables": {
      "addedTokens": {
        "details": "Tokens added"
      },
      "totalAllocPoint": {
        "details": "Total allocation points. Must be the sum of all allocation points in all pools."
      }
    },
    "version": 1
  },
  "offset": [
    1059,
    13943
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1C2 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x79D12FFB GT PUSH2 0xF7 JUMPI DUP1 PUSH4 0x9BAF58C3 GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xC346253D GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xC346253D EQ PUSH2 0x4F6 JUMPI DUP1 PUSH4 0xD1ABB907 EQ PUSH2 0x516 JUMPI DUP1 PUSH4 0xD2423B51 EQ PUSH2 0x536 JUMPI DUP1 PUSH4 0xE30C3978 EQ PUSH2 0x549 JUMPI PUSH2 0x1C2 JUMP JUMPDEST DUP1 PUSH4 0x9BAF58C3 EQ PUSH2 0x48C JUMPI DUP1 PUSH4 0xA06E408B EQ PUSH2 0x4AC JUMPI DUP1 PUSH4 0xAB560E10 EQ PUSH2 0x4C1 JUMPI DUP1 PUSH4 0xAB7DE098 EQ PUSH2 0x4D6 JUMPI PUSH2 0x1C2 JUMP JUMPDEST DUP1 PUSH4 0x88BBA42F GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0x88BBA42F EQ PUSH2 0x409 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x429 JUMPI DUP1 PUSH4 0x8DBDBE6D EQ PUSH2 0x43E JUMPI DUP1 PUSH4 0x93F1A40B EQ PUSH2 0x45E JUMPI PUSH2 0x1C2 JUMP JUMPDEST DUP1 PUSH4 0x79D12FFB EQ PUSH2 0x3A7 JUMPI DUP1 PUSH4 0x7C516E94 EQ PUSH2 0x3D4 JUMPI DUP1 PUSH4 0x7CD07E47 EQ PUSH2 0x3F4 JUMPI PUSH2 0x1C2 JUMP JUMPDEST DUP1 PUSH4 0x23CF3118 GT PUSH2 0x164 JUMPI DUP1 PUSH4 0x4E71E0C8 GT PUSH2 0x13E JUMPI DUP1 PUSH4 0x4E71E0C8 EQ PUSH2 0x318 JUMPI DUP1 PUSH4 0x51EB05A6 EQ PUSH2 0x32D JUMPI DUP1 PUSH4 0x57A5B58C EQ PUSH2 0x35A JUMPI DUP1 PUSH4 0x78ED5D1F EQ PUSH2 0x37A JUMPI PUSH2 0x1C2 JUMP JUMPDEST DUP1 PUSH4 0x23CF3118 EQ PUSH2 0x2B8 JUMPI DUP1 PUSH4 0x2F940C70 EQ PUSH2 0x2D8 JUMPI DUP1 PUSH4 0x454B0608 EQ PUSH2 0x2F8 JUMPI PUSH2 0x1C2 JUMP JUMPDEST DUP1 PUSH4 0x1526FE27 GT PUSH2 0x1A0 JUMPI DUP1 PUSH4 0x1526FE27 EQ PUSH2 0x234 JUMPI DUP1 PUSH4 0x17CAF6F1 EQ PUSH2 0x263 JUMPI DUP1 PUSH4 0x18FCCC76 EQ PUSH2 0x278 JUMPI DUP1 PUSH4 0x195426EC EQ PUSH2 0x298 JUMPI PUSH2 0x1C2 JUMP JUMPDEST DUP1 PUSH4 0x78DFBE7 EQ PUSH2 0x1C7 JUMPI DUP1 PUSH4 0x81E3EDA EQ PUSH2 0x1E9 JUMPI DUP1 PUSH4 0xAD58D2F EQ PUSH2 0x214 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E7 PUSH2 0x1E2 CALLDATASIZE PUSH1 0x4 PUSH2 0x21D7 JUMP JUMPDEST PUSH2 0x55E JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FE PUSH2 0x64D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20B SWAP2 SWAP1 PUSH2 0x29D3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x220 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E7 PUSH2 0x22F CALLDATASIZE PUSH1 0x4 PUSH2 0x2497 JUMP JUMPDEST PUSH2 0x653 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x240 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x254 PUSH2 0x24F CALLDATASIZE PUSH1 0x4 PUSH2 0x2402 JUMP JUMPDEST PUSH2 0x7E3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20B SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x29A9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x26F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FE PUSH2 0x825 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x284 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E7 PUSH2 0x293 CALLDATASIZE PUSH1 0x4 PUSH2 0x2432 JUMP JUMPDEST PUSH2 0x82B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FE PUSH2 0x2B3 CALLDATASIZE PUSH1 0x4 PUSH2 0x2432 JUMP JUMPDEST PUSH2 0x9C5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E7 PUSH2 0x2D3 CALLDATASIZE PUSH1 0x4 PUSH2 0x21BB JUMP JUMPDEST PUSH2 0xBC5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E7 PUSH2 0x2F3 CALLDATASIZE PUSH1 0x4 PUSH2 0x2432 JUMP JUMPDEST PUSH2 0xC11 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x304 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E7 PUSH2 0x313 CALLDATASIZE PUSH1 0x4 PUSH2 0x2402 JUMP JUMPDEST PUSH2 0xD32 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x324 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E7 PUSH2 0x1050 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x339 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x34D PUSH2 0x348 CALLDATASIZE PUSH1 0x4 PUSH2 0x2402 JUMP JUMPDEST PUSH2 0x10DD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20B SWAP2 SWAP1 PUSH2 0x2970 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x366 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E7 PUSH2 0x375 CALLDATASIZE PUSH1 0x4 PUSH2 0x226A JUMP JUMPDEST PUSH2 0x1361 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x386 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x39A PUSH2 0x395 CALLDATASIZE PUSH1 0x4 PUSH2 0x2402 JUMP JUMPDEST PUSH2 0x1397 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20B SWAP2 SWAP1 PUSH2 0x2539 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3C7 PUSH2 0x3C2 CALLDATASIZE PUSH1 0x4 PUSH2 0x21BB JUMP JUMPDEST PUSH2 0x13BE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20B SWAP2 SWAP1 PUSH2 0x25CB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E7 PUSH2 0x3EF CALLDATASIZE PUSH1 0x4 PUSH2 0x22E1 JUMP JUMPDEST PUSH2 0x13D3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x400 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x39A PUSH2 0x1447 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x415 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E7 PUSH2 0x424 CALLDATASIZE PUSH1 0x4 PUSH2 0x24C4 JUMP JUMPDEST PUSH2 0x1456 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x435 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x39A PUSH2 0x15C3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x44A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E7 PUSH2 0x459 CALLDATASIZE PUSH1 0x4 PUSH2 0x2497 JUMP JUMPDEST PUSH2 0x15D2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x46A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x47E PUSH2 0x479 CALLDATASIZE PUSH1 0x4 PUSH2 0x2432 JUMP JUMPDEST PUSH2 0x175D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20B SWAP3 SWAP2 SWAP1 PUSH2 0x2A1B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x498 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E7 PUSH2 0x4A7 CALLDATASIZE PUSH1 0x4 PUSH2 0x2402 JUMP JUMPDEST PUSH2 0x1781 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FE PUSH2 0x17EB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x39A PUSH2 0x17F1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E7 PUSH2 0x4F1 CALLDATASIZE PUSH1 0x4 PUSH2 0x2461 JUMP JUMPDEST PUSH2 0x1815 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x502 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x39A PUSH2 0x511 CALLDATASIZE PUSH1 0x4 PUSH2 0x2402 JUMP JUMPDEST PUSH2 0x1A3B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x522 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E7 PUSH2 0x531 CALLDATASIZE PUSH1 0x4 PUSH2 0x2497 JUMP JUMPDEST PUSH2 0x1A48 JUMP JUMPDEST PUSH2 0x1E7 PUSH2 0x544 CALLDATASIZE PUSH1 0x4 PUSH2 0x2221 JUMP JUMPDEST PUSH2 0x1C7B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x555 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x39A PUSH2 0x1D38 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x591 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x588 SWAP1 PUSH2 0x27BB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 ISZERO PUSH2 0x62C JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO ISZERO DUP1 PUSH2 0x5AB JUMPI POP DUP1 JUMPDEST PUSH2 0x5C7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x588 SWAP1 PUSH2 0x26D5 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP8 AND SWAP4 SWAP3 AND SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP2 DUP3 AND OR SWAP1 SWAP2 SSTORE PUSH1 0x1 DUP1 SLOAD SWAP1 SWAP2 AND SWAP1 SSTORE PUSH2 0x648 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND OR SWAP1 SSTORE JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x65B PUSH2 0x2153 JUMP JUMPDEST PUSH2 0x664 DUP5 PUSH2 0x10DD JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP2 MLOAD SWAP2 SWAP3 POP SWAP1 PUSH2 0x6B6 SWAP1 PUSH5 0xE8D4A51000 SWAP1 PUSH2 0x6A2 SWAP1 DUP8 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND PUSH2 0x1D47 JUMP JUMPDEST DUP2 PUSH2 0x6A9 JUMPI INVALID JUMPDEST PUSH1 0x1 DUP5 ADD SLOAD SWAP2 SWAP1 DIV PUSH2 0x1D84 JUMP JUMPDEST PUSH1 0x1 DUP3 ADD SSTORE DUP1 SLOAD PUSH2 0x6C7 SWAP1 DUP6 PUSH2 0x1DD1 JUMP JUMPDEST DUP2 SSTORE PUSH1 0x5 DUP1 SLOAD PUSH1 0x0 SWAP2 SWAP1 DUP8 SWAP1 DUP2 LT PUSH2 0x6DB JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP1 ISZERO PUSH2 0x761 JUMPI DUP2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x45FB1BA1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP2 PUSH4 0x8BF63742 SWAP2 PUSH2 0x72E SWAP2 DUP11 SWAP2 CALLER SWAP2 DUP11 SWAP2 PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x4 ADD PUSH2 0x29DC JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x748 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x75C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST PUSH2 0x78F DUP5 DUP7 PUSH1 0x4 DUP10 DUP2 SLOAD DUP2 LT PUSH2 0x773 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 SWAP1 PUSH2 0x1DF4 JUMP JUMPDEST DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8166BF25F8A2B7ED3C85049207DA4358D16EDBED977D23FA2EE6F0DDE3EC2132 DUP9 PUSH1 0x40 MLOAD PUSH2 0x7D3 SWAP2 SWAP1 PUSH2 0x29D3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x3 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x7F0 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP2 AND SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0x1 PUSH1 0x80 SHL DUP3 DIV DUP2 AND SWAP2 PUSH1 0x1 PUSH1 0xC0 SHL SWAP1 DIV AND DUP4 JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x833 PUSH2 0x2153 JUMP JUMPDEST PUSH2 0x83C DUP4 PUSH2 0x10DD JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP3 MLOAD DUP2 SLOAD SWAP4 SWAP5 POP SWAP1 SWAP3 PUSH5 0xE8D4A51000 SWAP2 PUSH2 0x878 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND PUSH2 0x1D47 JUMP JUMPDEST DUP2 PUSH2 0x87F JUMPI INVALID JUMPDEST DIV SWAP1 POP PUSH1 0x0 PUSH2 0x8A3 PUSH2 0x89E DUP5 PUSH1 0x1 ADD SLOAD DUP5 PUSH2 0x1D84 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1EEA JUMP JUMPDEST PUSH1 0x1 DUP5 ADD DUP4 SWAP1 SSTORE SWAP1 POP DUP1 ISZERO PUSH2 0x8E6 JUMPI PUSH2 0x8E6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND DUP7 DUP4 PUSH2 0x1DF4 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 DUP8 DUP2 SLOAD DUP2 LT PUSH2 0x8F5 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP1 ISZERO PUSH2 0x97A JUMPI DUP4 SLOAD PUSH1 0x40 MLOAD PUSH4 0x45FB1BA1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP2 PUSH4 0x8BF63742 SWAP2 PUSH2 0x947 SWAP2 DUP12 SWAP2 CALLER SWAP2 DUP13 SWAP2 DUP10 SWAP2 SWAP1 PUSH1 0x4 ADD PUSH2 0x29DC JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x961 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x975 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST DUP7 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x71BAB65CED2E5750775A0613BE067DF48EF06CF92A496EBF7663AE0660924954 DUP5 PUSH1 0x40 MLOAD PUSH2 0x9B4 SWAP2 SWAP1 PUSH2 0x29D3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9CF PUSH2 0x2153 JUMP JUMPDEST PUSH1 0x3 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x9DC JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE SWAP2 SWAP1 SWAP4 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP1 DUP3 AND DUP4 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0x1 PUSH1 0x80 SHL DUP4 DIV DUP2 AND DUP5 DUP7 ADD MSTORE PUSH1 0x1 PUSH1 0xC0 SHL SWAP1 SWAP3 DIV SWAP1 SWAP2 AND DUP3 DUP6 ADD MSTORE DUP9 DUP6 MSTORE PUSH1 0x6 DUP4 MSTORE DUP4 DUP6 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND DUP7 MSTORE SWAP1 SWAP3 MSTORE SWAP2 DUP4 KECCAK256 DUP3 MLOAD PUSH1 0x4 DUP1 SLOAD SWAP5 SWAP7 POP SWAP2 SWAP5 SWAP3 AND SWAP3 DUP9 SWAP1 DUP2 LT PUSH2 0xA5A JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH2 0xA93 SWAP1 ADDRESS SWAP1 PUSH1 0x4 ADD PUSH2 0x2539 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xAAB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xABF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xAE3 SWAP2 SWAP1 PUSH2 0x241A JUMP JUMPDEST SWAP1 POP DUP4 PUSH1 0x20 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND TIMESTAMP GT DUP1 ISZERO PUSH2 0xB00 JUMPI POP DUP1 ISZERO ISZERO JUMPDEST ISZERO PUSH2 0xB8C JUMPI PUSH1 0x0 PUSH2 0xB27 DUP6 PUSH1 0x20 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND TIMESTAMP PUSH2 0x1DD1 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x8 SLOAD PUSH2 0xB5A DUP8 PUSH1 0x40 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH2 0xB54 PUSH1 0x9 SLOAD DUP7 PUSH2 0x1D47 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 PUSH2 0x1D47 JUMP JUMPDEST DUP2 PUSH2 0xB61 JUMPI INVALID JUMPDEST DIV SWAP1 POP PUSH2 0xB87 DUP4 PUSH2 0xB77 DUP4 PUSH5 0xE8D4A51000 PUSH2 0x1D47 JUMP JUMPDEST DUP2 PUSH2 0xB7E JUMPI INVALID JUMPDEST DUP7 SWAP2 SWAP1 DIV PUSH2 0x1F10 JUMP JUMPDEST SWAP4 POP POP POP JUMPDEST PUSH1 0x1 DUP4 ADD SLOAD DUP4 SLOAD PUSH2 0xBBA SWAP2 PUSH2 0x89E SWAP2 PUSH5 0xE8D4A51000 SWAP1 PUSH2 0xBAC SWAP1 DUP8 PUSH2 0x1D47 JUMP JUMPDEST DUP2 PUSH2 0xBB3 JUMPI INVALID JUMPDEST DIV SWAP1 PUSH2 0x1D84 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xBEF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x588 SWAP1 PUSH2 0x27BB JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP3 DUP3 SSTORE PUSH1 0x1 DUP3 ADD DUP4 SWAP1 SSTORE PUSH1 0x5 DUP1 SLOAD SWAP3 SWAP4 SWAP2 SWAP3 DUP7 SWAP1 DUP2 LT PUSH2 0xC48 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP1 ISZERO PUSH2 0xCCD JUMPI PUSH1 0x40 MLOAD PUSH4 0x45FB1BA1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH4 0x8BF63742 SWAP1 PUSH2 0xC9A SWAP1 DUP9 SWAP1 CALLER SWAP1 DUP10 SWAP1 PUSH1 0x0 SWAP1 DUP2 SWAP1 PUSH1 0x4 ADD PUSH2 0x29DC JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xCB4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xCC8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST PUSH2 0xCDF DUP5 DUP4 PUSH1 0x4 DUP9 DUP2 SLOAD DUP2 LT PUSH2 0x773 JUMPI INVALID JUMPDEST DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x2CAC5E20E1541D836381527A43F651851E302817B71DC8E810284E69210C1C6B DUP6 PUSH1 0x40 MLOAD PUSH2 0xD23 SWAP2 SWAP1 PUSH2 0x29D3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xD5A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x588 SWAP1 PUSH2 0x2889 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xD69 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 ADD SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP3 POP DUP3 SWAP1 PUSH4 0x70A08231 SWAP1 PUSH2 0xDA4 SWAP1 ADDRESS SWAP1 PUSH1 0x4 ADD PUSH2 0x2539 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xDBC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xDD0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xDF4 SWAP2 SWAP1 PUSH2 0x241A JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE SWAP2 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND SWAP3 PUSH4 0x95EA7B3 SWAP3 PUSH2 0xE29 SWAP3 AND SWAP1 DUP6 SWAP1 PUSH1 0x4 ADD PUSH2 0x25B2 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE43 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xE57 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xE7B SWAP2 SWAP1 PUSH2 0x22A9 JUMP JUMPDEST POP PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0xCE5494BB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xCE5494BB SWAP1 PUSH2 0xEAD SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0x2539 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xEC7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xEDB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xEFF SWAP2 SWAP1 PUSH2 0x22C5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH2 0xF2E SWAP1 ADDRESS SWAP1 PUSH1 0x4 ADD PUSH2 0x2539 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xF46 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xF5A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xF7E SWAP2 SWAP1 PUSH2 0x241A JUMP JUMPDEST DUP3 EQ PUSH2 0xF9C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x588 SWAP1 PUSH2 0x2704 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xFD5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x588 SWAP1 PUSH2 0x2825 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT SWAP1 DUP2 AND PUSH1 0x1 OR SWAP1 SWAP2 SSTORE SWAP3 DUP7 AND DUP3 MSTORE SWAP1 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 AND SWAP1 SSTORE PUSH1 0x4 DUP1 SLOAD DUP3 SWAP2 SWAP1 DUP7 SWAP1 DUP2 LT PUSH2 0x101C JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER DUP2 EQ PUSH2 0x107B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x588 SWAP1 PUSH2 0x27F0 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND SWAP4 SWAP3 AND SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP3 DUP4 AND OR SWAP1 SSTORE PUSH1 0x1 DUP1 SLOAD SWAP1 SWAP2 AND SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x10E5 PUSH2 0x2153 JUMP JUMPDEST PUSH1 0x3 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x10F2 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP2 DUP3 SWAP1 KECCAK256 PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE SWAP3 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP2 AND DUP4 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0x1 PUSH1 0x80 SHL DUP3 DIV DUP2 AND SWAP5 DUP5 ADD DUP6 SWAP1 MSTORE PUSH1 0x1 PUSH1 0xC0 SHL SWAP1 SWAP2 DIV AND SWAP1 DUP3 ADD MSTORE SWAP2 POP TIMESTAMP GT ISZERO PUSH2 0x135C JUMPI PUSH1 0x0 PUSH1 0x4 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x1154 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH2 0x118D SWAP1 ADDRESS SWAP1 PUSH1 0x4 ADD PUSH2 0x2539 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x11A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x11B9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x11DD SWAP2 SWAP1 PUSH2 0x241A JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x1280 JUMPI PUSH1 0x0 PUSH2 0x1207 DUP4 PUSH1 0x20 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND TIMESTAMP PUSH2 0x1DD1 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x8 SLOAD PUSH2 0x1234 DUP6 PUSH1 0x40 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH2 0xB54 PUSH1 0x9 SLOAD DUP7 PUSH2 0x1D47 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH2 0x123B JUMPI INVALID JUMPDEST DIV SWAP1 POP PUSH2 0x1272 PUSH2 0x1261 DUP5 PUSH2 0x1254 DUP5 PUSH5 0xE8D4A51000 PUSH2 0x1D47 JUMP JUMPDEST DUP2 PUSH2 0x125B JUMPI INVALID JUMPDEST DIV PUSH2 0x1F33 JUMP JUMPDEST DUP6 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND SWAP1 PUSH2 0x1F5C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND DUP5 MSTORE POP POP JUMPDEST PUSH2 0x1289 TIMESTAMP PUSH2 0x1F8B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x3 DUP1 SLOAD DUP4 SWAP2 SWAP1 DUP6 SWAP1 DUP2 LT PUSH2 0x12A8 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP2 DUP3 SWAP1 KECCAK256 DUP4 MLOAD SWAP2 ADD DUP1 SLOAD DUP5 DUP5 ADD MLOAD PUSH1 0x40 SWAP6 DUP7 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB NOT SWAP1 SWAP3 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 OR PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0x80 SHL NOT AND PUSH1 0x1 PUSH1 0x80 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP5 DUP6 AND MUL OR PUSH1 0x1 PUSH1 0x1 PUSH1 0xC0 SHL SUB AND PUSH1 0x1 PUSH1 0xC0 SHL SWAP4 SWAP1 SWAP2 AND SWAP3 SWAP1 SWAP3 MUL SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE DUP4 ADD MLOAD DUP4 MLOAD SWAP2 MLOAD DUP6 SWAP3 PUSH32 0xFC9545022A542541AD085D091FB09A2AB36FEE366A4576AB63714EA907AD353 SWAP3 PUSH2 0x1352 SWAP3 SWAP1 SWAP2 DUP7 SWAP2 PUSH2 0x2A29 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1391 JUMPI PUSH2 0x1388 DUP5 DUP5 DUP4 DUP2 DUP2 LT PUSH2 0x137C JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD PUSH2 0x10DD JUMP JUMPDEST POP PUSH1 0x1 ADD PUSH2 0x1365 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x4 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x13A4 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xD505ACCF PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND SWAP1 PUSH4 0xD505ACCF SWAP1 PUSH2 0x140B SWAP1 DUP11 SWAP1 DUP11 SWAP1 DUP11 SWAP1 DUP11 SWAP1 DUP11 SWAP1 DUP11 SWAP1 DUP11 SWAP1 PUSH1 0x4 ADD PUSH2 0x2571 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1425 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1439 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1480 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x588 SWAP1 PUSH2 0x27BB JUMP JUMPDEST PUSH2 0x14BF DUP4 PUSH2 0x14B9 PUSH1 0x3 DUP8 DUP2 SLOAD DUP2 LT PUSH2 0x1494 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x8 SLOAD SWAP1 PUSH1 0x1 PUSH1 0xC0 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH2 0x1DD1 JUMP JUMPDEST SWAP1 PUSH2 0x1F10 JUMP JUMPDEST PUSH1 0x8 SSTORE PUSH2 0x14CB DUP4 PUSH2 0x1F8B JUMP JUMPDEST PUSH1 0x3 DUP6 DUP2 SLOAD DUP2 LT PUSH2 0x14D8 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 ADD PUSH1 0x18 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND MUL OR SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x154C JUMPI DUP2 PUSH1 0x5 DUP6 DUP2 SLOAD DUP2 LT PUSH2 0x151D JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP JUMPDEST DUP1 PUSH2 0x1578 JUMPI PUSH1 0x5 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x155E JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x157A JUMP JUMPDEST DUP2 JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH32 0x95895A6AB1DF54420D241B55243258A33E61B2194DB66C1179EC521AAE8E1865 DUP6 DUP5 PUSH1 0x40 MLOAD PUSH2 0x15B5 SWAP3 SWAP2 SWAP1 PUSH2 0x2A0B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x15DA PUSH2 0x2153 JUMP JUMPDEST PUSH2 0x15E3 DUP5 PUSH2 0x10DD JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD SWAP2 SWAP3 POP SWAP1 PUSH2 0x1615 SWAP1 DUP6 PUSH2 0x1F10 JUMP JUMPDEST DUP2 SSTORE DUP2 MLOAD PUSH2 0x164C SWAP1 PUSH5 0xE8D4A51000 SWAP1 PUSH2 0x1638 SWAP1 DUP8 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND PUSH2 0x1D47 JUMP JUMPDEST DUP2 PUSH2 0x163F JUMPI INVALID JUMPDEST PUSH1 0x1 DUP5 ADD SLOAD SWAP2 SWAP1 DIV PUSH2 0x1FB4 JUMP JUMPDEST DUP2 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x5 DUP7 DUP2 SLOAD DUP2 LT PUSH2 0x1663 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP1 ISZERO PUSH2 0x16E9 JUMPI DUP2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x45FB1BA1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP2 PUSH4 0x8BF63742 SWAP2 PUSH2 0x16B6 SWAP2 DUP11 SWAP2 DUP10 SWAP2 DUP3 SWAP2 PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x4 ADD PUSH2 0x29DC JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x16D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x16E4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST PUSH2 0x1719 CALLER ADDRESS DUP8 PUSH1 0x4 DUP11 DUP2 SLOAD DUP2 LT PUSH2 0x16FC JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP3 SWAP2 SWAP1 PUSH2 0x1FFA JUMP JUMPDEST DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x2D7E648DD130FC184D383E55BB126AC4C9C60E8F94BF05ACDF557BA2D540B47 DUP9 PUSH1 0x40 MLOAD PUSH2 0x7D3 SWAP2 SWAP1 PUSH2 0x29D3 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD DUP3 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x17AB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x588 SWAP1 PUSH2 0x27BB JUMP JUMPDEST PUSH1 0x9 DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH32 0xC6CE5EFF3291FB2C1517B943DAA5067EA76C83816BBF674307FBC7FEA3B311D0 SWAP1 PUSH2 0x17E0 SWAP1 DUP4 SWAP1 PUSH2 0x29D3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x183F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x588 SWAP1 PUSH2 0x27BB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1878 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x588 SWAP1 PUSH2 0x2825 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH2 0x1885 SWAP1 DUP5 PUSH2 0x1F10 JUMP JUMPDEST PUSH1 0x8 SSTORE PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 DUP2 DUP2 ADD SWAP1 SWAP3 SSTORE PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP3 DUP4 AND OR SWAP1 SWAP3 SSTORE PUSH1 0x5 DUP1 SLOAD SWAP4 DUP5 ADD DUP2 SSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB0 SWAP1 SWAP4 ADD DUP1 SLOAD SWAP3 DUP6 AND SWAP3 SWAP1 SWAP2 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD SWAP1 SWAP2 MSTORE SWAP1 DUP2 MSTORE PUSH1 0x3 SWAP1 PUSH1 0x20 DUP2 ADD PUSH2 0x1932 TIMESTAMP PUSH2 0x1F8B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1949 DUP7 PUSH2 0x1F8B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 DUP2 AND SWAP1 SWAP2 MSTORE DUP3 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP6 SSTORE PUSH1 0x0 SWAP5 DUP6 MSTORE PUSH1 0x20 DUP1 DUP7 KECCAK256 DUP6 MLOAD SWAP4 ADD DUP1 SLOAD DUP3 DUP8 ADD MLOAD PUSH1 0x40 SWAP8 DUP9 ADD MLOAD DUP8 AND PUSH1 0x1 PUSH1 0xC0 SHL MUL PUSH1 0x1 PUSH1 0x1 PUSH1 0xC0 SHL SUB SWAP2 SWAP1 SWAP8 AND PUSH1 0x1 PUSH1 0x80 SHL MUL PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0x80 SHL NOT PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP1 SWAP8 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP6 SWAP1 SWAP6 AND OR SWAP4 SWAP1 SWAP4 AND SWAP4 SWAP1 SWAP4 OR SWAP1 SWAP2 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP8 AND DUP1 DUP7 MSTORE PUSH1 0x7 SWAP1 SWAP4 MSTORE SWAP3 SWAP1 SWAP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP5 OR SWAP1 SSTORE PUSH1 0x4 SLOAD SWAP2 DUP5 AND SWAP3 SWAP1 SWAP2 PUSH2 0x19FF SWAP2 PUSH2 0x1DD1 JUMP JUMPDEST PUSH32 0x81EE0F8C5C46E2CB41984886F77A84181724ABB86C32A5F6DE539B07509D45E5 DUP7 PUSH1 0x40 MLOAD PUSH2 0x1A2E SWAP2 SWAP1 PUSH2 0x29D3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP JUMP JUMPDEST PUSH1 0x5 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x13A4 JUMPI INVALID JUMPDEST PUSH2 0x1A50 PUSH2 0x2153 JUMP JUMPDEST PUSH2 0x1A59 DUP5 PUSH2 0x10DD JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP3 MLOAD DUP2 SLOAD SWAP4 SWAP5 POP SWAP1 SWAP3 PUSH5 0xE8D4A51000 SWAP2 PUSH2 0x1A95 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND PUSH2 0x1D47 JUMP JUMPDEST DUP2 PUSH2 0x1A9C JUMPI INVALID JUMPDEST DIV SWAP1 POP PUSH1 0x0 PUSH2 0x1ABB PUSH2 0x89E DUP5 PUSH1 0x1 ADD SLOAD DUP5 PUSH2 0x1D84 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x1AF6 PUSH5 0xE8D4A51000 PUSH2 0x1AE6 DUP7 PUSH1 0x0 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND DUP10 PUSH2 0x1D47 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH2 0x1AED JUMPI INVALID JUMPDEST DUP5 SWAP2 SWAP1 DIV PUSH2 0x1D84 JUMP JUMPDEST PUSH1 0x1 DUP5 ADD SSTORE DUP3 SLOAD PUSH2 0x1B07 SWAP1 DUP8 PUSH2 0x1DD1 JUMP JUMPDEST DUP4 SSTORE PUSH2 0x1B3D PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND DUP7 DUP4 PUSH2 0x1DF4 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 DUP9 DUP2 SLOAD DUP2 LT PUSH2 0x1B4C JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP1 ISZERO PUSH2 0x1BD1 JUMPI DUP4 SLOAD PUSH1 0x40 MLOAD PUSH4 0x45FB1BA1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP2 PUSH4 0x8BF63742 SWAP2 PUSH2 0x1B9E SWAP2 DUP13 SWAP2 CALLER SWAP2 DUP13 SWAP2 DUP10 SWAP2 SWAP1 PUSH1 0x4 ADD PUSH2 0x29DC JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1BB8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1BCC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST PUSH2 0x1BE3 DUP7 DUP9 PUSH1 0x4 DUP12 DUP2 SLOAD DUP2 LT PUSH2 0x773 JUMPI INVALID JUMPDEST DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP9 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8166BF25F8A2B7ED3C85049207DA4358D16EDBED977D23FA2EE6F0DDE3EC2132 DUP11 PUSH1 0x40 MLOAD PUSH2 0x1C27 SWAP2 SWAP1 PUSH2 0x29D3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 DUP8 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x71BAB65CED2E5750775A0613BE067DF48EF06CF92A496EBF7663AE0660924954 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1C69 SWAP2 SWAP1 PUSH2 0x29D3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1391 JUMPI PUSH1 0x0 PUSH1 0x60 ADDRESS DUP7 DUP7 DUP6 DUP2 DUP2 LT PUSH2 0x1C97 JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL DUP2 ADD SWAP1 PUSH2 0x1CA9 SWAP2 SWAP1 PUSH2 0x2A53 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CB7 SWAP3 SWAP2 SWAP1 PUSH2 0x250D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1CF2 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1CF7 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0x1D07 JUMPI POP DUP4 JUMPDEST ISZERO PUSH2 0x1D2E JUMPI PUSH2 0x1D15 DUP2 PUSH2 0x20F3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x588 SWAP2 SWAP1 PUSH2 0x25D6 JUMP JUMPDEST POP POP PUSH1 0x1 ADD PUSH2 0x1C7E JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO DUP1 PUSH2 0x1D62 JUMPI POP POP DUP1 DUP3 MUL DUP3 DUP3 DUP3 DUP2 PUSH2 0x1D5F JUMPI INVALID JUMPDEST DIV EQ JUMPDEST PUSH2 0x1D7E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x588 SWAP1 PUSH2 0x2939 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 SUB DUP2 DUP4 SLT DUP1 ISZERO SWAP1 PUSH2 0x1D99 JUMPI POP DUP4 DUP2 SGT ISZERO JUMPDEST DUP1 PUSH2 0x1DAE JUMPI POP PUSH1 0x0 DUP4 SLT DUP1 ISZERO PUSH2 0x1DAE JUMPI POP DUP4 DUP2 SGT JUMPDEST PUSH2 0x1DCA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x588 SWAP1 PUSH2 0x28C0 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 DUP3 SUB DUP3 DUP2 GT ISZERO PUSH2 0x1D7E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x588 SWAP1 PUSH2 0x2609 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x1E1D SWAP3 SWAP2 SWAP1 PUSH2 0x25B2 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 OR SWAP1 SWAP3 MSTORE SWAP1 MLOAD PUSH2 0x1E5B SWAP2 SWAP1 PUSH2 0x251D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1E98 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1E9D JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0x1EC7 JUMPI POP DUP1 MLOAD ISZERO DUP1 PUSH2 0x1EC7 JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x1EC7 SWAP2 SWAP1 PUSH2 0x22A9 JUMP JUMPDEST PUSH2 0x1EE3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x588 SWAP1 PUSH2 0x265D JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SLT ISZERO PUSH2 0x1F0C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x588 SWAP1 PUSH2 0x2638 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST DUP2 DUP2 ADD DUP2 DUP2 LT ISZERO PUSH2 0x1D7E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x588 SWAP1 PUSH2 0x2784 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP3 GT ISZERO PUSH2 0x1F0C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x588 SWAP1 PUSH2 0x274D JUMP JUMPDEST DUP2 DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP1 DUP4 AND SWAP1 DUP3 AND LT ISZERO PUSH2 0x1D7E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x588 SWAP1 PUSH2 0x2784 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT ISZERO PUSH2 0x1F0C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x588 SWAP1 PUSH2 0x2852 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP2 DUP4 SLT DUP1 ISZERO SWAP1 PUSH2 0x1FC9 JUMPI POP DUP4 DUP2 SLT ISZERO JUMPDEST DUP1 PUSH2 0x1FDE JUMPI POP PUSH1 0x0 DUP4 SLT DUP1 ISZERO PUSH2 0x1FDE JUMPI POP DUP4 DUP2 SLT JUMPDEST PUSH2 0x1DCA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x588 SWAP1 PUSH2 0x2694 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x2025 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x254D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 OR SWAP1 SWAP3 MSTORE SWAP1 MLOAD PUSH2 0x2063 SWAP2 SWAP1 PUSH2 0x251D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x20A0 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x20A5 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0x20CF JUMPI POP DUP1 MLOAD ISZERO DUP1 PUSH2 0x20CF JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x20CF SWAP2 SWAP1 PUSH2 0x22A9 JUMP JUMPDEST PUSH2 0x20EB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x588 SWAP1 PUSH2 0x2904 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x44 DUP3 MLOAD LT ISZERO PUSH2 0x2139 JUMPI POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1D DUP2 MSTORE PUSH32 0x5472616E73616374696F6E2072657665727465642073696C656E746C79000000 PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x135C JUMP JUMPDEST PUSH1 0x4 DUP3 ADD SWAP2 POP DUP2 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x1D7E SWAP2 SWAP1 PUSH2 0x2368 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x2184 JUMPI DUP2 DUP3 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x219A JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP1 DUP4 MUL DUP6 ADD ADD GT ISZERO PUSH2 0x21B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x21CC JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1DCA DUP2 PUSH2 0x2AC3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x21EB JUMPI DUP2 DUP3 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x21F6 DUP2 PUSH2 0x2AC3 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x2206 DUP2 PUSH2 0x2ADB JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH2 0x2216 DUP2 PUSH2 0x2ADB JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2235 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x224A JUMPI DUP4 DUP5 REVERT JUMPDEST PUSH2 0x2256 DUP7 DUP3 DUP8 ADD PUSH2 0x2173 JUMP JUMPDEST SWAP1 SWAP5 POP SWAP3 POP POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x2216 DUP2 PUSH2 0x2ADB JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x227C JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x2291 JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH2 0x229D DUP6 DUP3 DUP7 ADD PUSH2 0x2173 JUMP JUMPDEST SWAP1 SWAP7 SWAP1 SWAP6 POP SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x22BA JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x1DCA DUP2 PUSH2 0x2ADB JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x22D6 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x1DCA DUP2 PUSH2 0x2AC3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 DUP10 DUP12 SUB SLT ISZERO PUSH2 0x22FD JUMPI DUP4 DUP5 REVERT JUMPDEST DUP9 CALLDATALOAD PUSH2 0x2308 DUP2 PUSH2 0x2AC3 JUMP JUMPDEST SWAP8 POP PUSH1 0x20 DUP10 ADD CALLDATALOAD PUSH2 0x2318 DUP2 PUSH2 0x2AC3 JUMP JUMPDEST SWAP7 POP PUSH1 0x40 DUP10 ADD CALLDATALOAD PUSH2 0x2328 DUP2 PUSH2 0x2AC3 JUMP JUMPDEST SWAP6 POP PUSH1 0x60 DUP10 ADD CALLDATALOAD SWAP5 POP PUSH1 0x80 DUP10 ADD CALLDATALOAD SWAP4 POP PUSH1 0xA0 DUP10 ADD CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x234B JUMPI DUP4 DUP5 REVERT JUMPDEST SWAP8 SWAP11 SWAP7 SWAP10 POP SWAP5 SWAP8 SWAP4 SWAP7 SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0xC0 DUP3 ADD CALLDATALOAD SWAP2 PUSH1 0xE0 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2379 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x238F JUMPI DUP3 DUP4 REVERT JUMPDEST DUP2 DUP5 ADD SWAP2 POP DUP5 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x23A2 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH2 0x23B0 JUMPI DUP4 DUP5 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH1 0x20 ADD DUP4 DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x23D0 JUMPI DUP6 DUP7 REVERT JUMPDEST PUSH1 0x40 MSTORE DUP2 DUP2 MSTORE DUP4 DUP3 ADD PUSH1 0x20 ADD DUP8 LT ISZERO PUSH2 0x23E7 JUMPI DUP5 DUP6 REVERT JUMPDEST PUSH2 0x23F8 DUP3 PUSH1 0x20 DUP4 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x2A97 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2413 JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x242B JUMPI DUP1 DUP2 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2444 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x2456 DUP2 PUSH2 0x2AC3 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2475 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x2487 DUP2 PUSH2 0x2AC3 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH2 0x2216 DUP2 PUSH2 0x2AC3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x24AB JUMPI DUP1 DUP2 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH2 0x2216 DUP2 PUSH2 0x2AC3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x24D9 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP5 CALLDATALOAD SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH2 0x24F2 DUP2 PUSH2 0x2AC3 JUMP JUMPDEST SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH2 0x2502 DUP2 PUSH2 0x2ADB JUMP JUMPDEST SWAP4 SWAP7 SWAP3 SWAP6 POP SWAP1 SWAP4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP5 DUP4 CALLDATACOPY SWAP2 ADD SWAP1 DUP2 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x252F DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x2A97 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND DUP2 MSTORE SWAP2 SWAP1 SWAP3 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP8 DUP9 AND DUP2 MSTORE SWAP6 SWAP1 SWAP7 AND PUSH1 0x20 DUP7 ADD MSTORE PUSH1 0x40 DUP6 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x60 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xFF AND PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xE0 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 MSTORE DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x25F5 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x2A97 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x15 SWAP1 DUP3 ADD MSTORE PUSH21 0x426F72696E674D6174683A20556E646572666C6F77 PUSH1 0x58 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xB SWAP1 DUP3 ADD MSTORE PUSH11 0x496E7465676572203C203 PUSH1 0xAC SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1C SWAP1 DUP3 ADD MSTORE PUSH32 0x426F72696E6745524332303A205472616E73666572206661696C656400000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x21 SWAP1 DUP3 ADD MSTORE PUSH32 0x5369676E6564536166654D6174683A206164646974696F6E206F766572666C6F PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x77 PUSH1 0xF8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x15 SWAP1 DUP3 ADD MSTORE PUSH21 0x4F776E61626C653A207A65726F2061646472657373 PUSH1 0x58 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x29 SWAP1 DUP3 ADD MSTORE PUSH32 0x4D61737465724368656656323A206D696772617465642062616C616E6365206D PUSH1 0x40 DUP3 ADD MSTORE PUSH9 0xEAE6E840DAC2E8C6D PUSH1 0xBB SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1C SWAP1 DUP3 ADD MSTORE PUSH32 0x426F72696E674D6174683A2075696E74313238204F766572666C6F7700000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x18 SWAP1 DUP3 ADD MSTORE PUSH32 0x426F72696E674D6174683A20416464204F766572666C6F770000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C657220213D2070656E64696E67206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x13 SWAP1 DUP3 ADD MSTORE PUSH19 0x151BDAD95B88185B1C9958591E481859191959 PUSH1 0x6A SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1B SWAP1 DUP3 ADD MSTORE PUSH32 0x426F72696E674D6174683A2075696E743634204F766572666C6F770000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1D SWAP1 DUP3 ADD MSTORE PUSH32 0x4D61737465724368656656323A206E6F206D69677261746F7220736574000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x24 SWAP1 DUP3 ADD MSTORE PUSH32 0x5369676E6564536166654D6174683A207375627472616374696F6E206F766572 PUSH1 0x40 DUP3 ADD MSTORE PUSH4 0x666C6F77 PUSH1 0xE0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x426F72696E6745524332303A205472616E7366657246726F6D206661696C6564 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x18 SWAP1 DUP3 ADD MSTORE PUSH32 0x426F72696E674D6174683A204D756C204F766572666C6F770000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP1 DUP4 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 DUP2 AND SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP3 DUP4 ADD MLOAD AND SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP4 SWAP1 SWAP4 AND DUP4 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP2 DUP3 AND PUSH1 0x20 DUP5 ADD MSTORE AND PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP5 DUP6 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND PUSH1 0x20 DUP7 ADD MSTORE SWAP2 SWAP1 SWAP3 AND PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x60 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 ADD SWAP1 JUMP JUMPDEST SWAP2 DUP3 MSTORE ISZERO ISZERO PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP4 SWAP1 SWAP4 AND DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 CALLDATALOAD PUSH1 0x1E NOT DUP5 CALLDATASIZE SUB ADD DUP2 SLT PUSH2 0x2A69 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP4 ADD DUP1 CALLDATALOAD SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT ISZERO PUSH2 0x2A82 JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH1 0x20 ADD SWAP2 POP CALLDATASIZE DUP2 SWAP1 SUB DUP3 SGT ISZERO PUSH2 0x21B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2AB2 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x2A9A JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x1391 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x2AD8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x2AD8 JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP8 STOP 0xB7 0xC LT 0xC0 0xC CALL 0x5F DUP12 PUSH10 0xF0B2D6817D741A32A548 0x4A ADDRESS 0xDE CALLVALUE 0xCA 0x5E 0xB8 0xDC 0x25 SELFBALANCE 0xA9 PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        1059,
        13943
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        1059,
        13943
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        1059,
        13943
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "5": {
      "fn": null,
      "offset": [
        1059,
        13943
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x4"
    },
    "7": {
      "fn": null,
      "offset": [
        1059,
        13943
      ],
      "op": "CALLDATASIZE",
      "path": "28"
    },
    "8": {
      "fn": null,
      "offset": [
        1059,
        13943
      ],
      "op": "LT",
      "path": "28"
    },
    "9": {
      "fn": null,
      "offset": [
        1059,
        13943
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1C2"
    },
    "12": {
      "fn": null,
      "offset": [
        1059,
        13943
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "13": {
      "fn": null,
      "offset": [
        1059,
        13943
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "15": {
      "fn": null,
      "offset": [
        1059,
        13943
      ],
      "op": "CALLDATALOAD",
      "path": "28"
    },
    "16": {
      "fn": null,
      "offset": [
        1059,
        13943
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0xE0"
    },
    "18": {
      "fn": null,
      "offset": [
        1059,
        13943
      ],
      "op": "SHR",
      "path": "28"
    },
    "19": {
      "fn": null,
      "offset": [
        1059,
        13943
      ],
      "op": "DUP1",
      "path": "28"
    },
    "20": {
      "fn": null,
      "offset": [
        1059,
        13943
      ],
      "op": "PUSH4",
      "path": "28",
      "value": "0x79D12FFB"
    },
    "25": {
      "fn": null,
      "offset": [
        1059,
        13943
      ],
      "op": "GT",
      "path": "28"
    },
    "26": {
      "fn": null,
      "offset": [
        1059,
        13943
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0xF7"
    },
    "29": {
      "fn": null,
      "offset": [
        1059,
        13943
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "30": {
      "fn": null,
      "offset": [
        1059,
        13943
      ],
      "op": "DUP1",
      "path": "28"
    },
    "31": {
      "fn": null,
      "offset": [
        1059,
        13943
      ],
      "op": "PUSH4",
      "path": "28",
      "value": "0x9BAF58C3"
    },
    "36": {
      "fn": null,
      "offset": [
        1059,
        13943
      ],
      "op": "GT",
      "path": "28"
    },
    "37": {
      "fn": null,
      "offset": [
        1059,
        13943
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x95"
    },
    "40": {
      "fn": null,
      "offset": [
        1059,
        13943
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "41": {
      "fn": null,
      "offset": [
        1059,
        13943
      ],
      "op": "DUP1",
      "path": "28"
    },
    "42": {
      "fn": null,
      "offset": [
        1059,
        13943
      ],
      "op": "PUSH4",
      "path": "28",
      "value": "0xC346253D"
    },
    "47": {
      "fn": null,
      "offset": [
        1059,
        13943
      ],
      "op": "GT",
      "path": "28"
    },
    "48": {
      "fn": null,
      "offset": [
        1059,
        13943
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x64"
    },
    "51": {
      "fn": null,
      "offset": [
        1059,
        13943
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "52": {
      "fn": null,
      "offset": [
        1059,
        13943
      ],
      "op": "DUP1",
      "path": "28"
    },
    "53": {
      "fn": null,
      "offset": [
        1059,
        13943
      ],
      "op": "PUSH4",
      "path": "28",
      "value": "0xC346253D"
    },
    "58": {
      "fn": null,
      "offset": [
        1059,
        13943
      ],
      "op": "EQ",
      "path": "28"
    },
    "59": {
      "fn": null,
      "offset": [
        1059,
        13943
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x4F6"
    },
    "62": {
      "fn": null,
      "offset": [
        1059,
        13943
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "63": {
      "fn": null,
      "offset": [
        1059,
        13943
      ],
      "op": "DUP1",
      "path": "28"
    },
    "64": {
      "fn": null,
      "offset": [
        1059,
        13943
      ],
      "op": "PUSH4",
      "path": "28",
      "value": "0xD1ABB907"
    },
    "69": {
      "fn": null,
      "offset": [
        1059,
        13943
      ],
      "op": "EQ",
      "path": "28"
    },
    "70": {
      "fn": null,
      "offset": [
        1059,
        13943
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x516"
    },
    "73": {
      "fn": null,
      "offset": [
        1059,
        13943
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "74": {
      "fn": null,
      "offset": [
        1059,
        13943
      ],
      "op": "DUP1",
      "path": "28"
    },
    "75": {
      "fn": null,
      "offset": [
        1059,
        13943
      ],
      "op": "PUSH4",
      "path": "28",
      "value": "0xD2423B51"
    },
    "80": {
      "fn": null,
      "offset": [
        1059,
        13943
      ],
      "op": "EQ",
      "path": "28"
    },
    "81": {
      "fn": null,
      "offset": [
        1059,
        13943
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x536"
    },
    "84": {
      "fn": null,
      "offset": [
        1059,
        13943
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "85": {
      "fn": null,
      "offset": [
        1059,
        13943
      ],
      "op": "DUP1",
      "path": "28"
    },
    "86": {
      "fn": null,
      "offset": [
        1059,
        13943
      ],
      "op": "PUSH4",
      "path": "28",
      "value": "0xE30C3978"
    },
    "91": {
      "fn": null,
      "offset": [
        1059,
        13943
      ],
      "op": "EQ",
      "path": "28"
    },
    "92": {
      "fn": null,
      "offset": [
        1059,
        13943
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x549"
    },
    "95": {
      "fn": null,
      "offset": [
        1059,
        13943
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "96": {
      "fn": null,
      "offset": [
        1059,
        13943
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1C2"
    },
    "99": {
      "fn": null,
      "offset": [
        1059,
        13943
      ],
      "op": "JUMP",
      "path": "28"
    },
    "100": {
      "fn": null,
      "offset": [
        1059,
        13943
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "101": {
      "fn": null,
      "offset": [
        1059,
        13943
      ],
      "op": "DUP1",
      "path": "28"
    },
    "102": {
      "fn": null,
      "offset": [
        1059,
        13943
      ],
      "op": "PUSH4",
      "path": "28",
      "value": "0x9BAF58C3"
    },
    "107": {
      "fn": null,
      "offset": [
        1059,
        13943
      ],
      "op": "EQ",
      "path": "28"
    },
    "108": {
      "fn": null,
      "offset": [
        1059,
        13943
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x48C"
    },
    "111": {
      "fn": null,
      "offset": [
        1059,
        13943
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "112": {
      "fn": null,
      "offset": [
        1059,
        13943
      ],
      "op": "DUP1",
      "path": "28"
    },
    "113": {
      "fn": null,
      "offset": [
        1059,
        13943
      ],
      "op": "PUSH4",
      "path": "28",
      "value": "0xA06E408B"
    },
    "118": {
      "fn": null,
      "offset": [
        1059,
        13943
      ],
      "op": "EQ",
      "path": "28"
    },
    "119": {
      "fn": null,
      "offset": [
        1059,
        13943
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x4AC"
    },
    "122": {
      "fn": null,
      "offset": [
        1059,
        13943
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "123": {
      "fn": null,
      "offset": [
        1059,
        13943
      ],
      "op": "DUP1",
      "path": "28"
    },
    "124": {
      "fn": null,
      "offset": [
        1059,
        13943
      ],
      "op": "PUSH4",
      "path": "28",
      "value": "0xAB560E10"
    },
    "129": {
      "fn": null,
      "offset": [
        1059,
        13943
      ],
      "op": "EQ",
      "path": "28"
    },
    "130": {
      "fn": null,
      "offset": [
        1059,
        13943
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x4C1"
    },
    "133": {
      "fn": null,
      "offset": [
        1059,
        13943
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "134": {
      "fn": null,
      "offset": [
        1059,
        13943
      ],
      "op": "DUP1",
      "path": "28"
    },
    "135": {
      "fn": null,
      "offset": [
        1059,
        13943
      ],
      "op": "PUSH4",
      "path": "28",
      "value": "0xAB7DE098"
    },
    "140": {
      "fn": null,
      "offset": [
        1059,
        13943
      ],
      "op": "EQ",
      "path": "28"
    },
    "141": {
      "fn": null,
      "offset": [
        1059,
        13943
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x4D6"
    },
    "144": {
      "fn": null,
      "offset": [
        1059,
        13943
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "145": {
      "fn": null,
      "offset": [
        1059,
        13943
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1C2"
    },
    "148": {
      "fn": null,
      "offset": [
        1059,
        13943
      ],
      "op": "JUMP",
      "path": "28"
    },
    "149": {
      "fn": null,
      "offset": [
        1059,
        13943
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "150": {
      "fn": null,
      "offset": [
        1059,
        13943
      ],
      "op": "DUP1",
      "path": "28"
    },
    "151": {
      "fn": null,
      "offset": [
        1059,
        13943
      ],
      "op": "PUSH4",
      "path": "28",
      "value": "0x88BBA42F"
    },
    "156": {
      "fn": null,
      "offset": [
        1059,
        13943
      ],
      "op": "GT",
      "path": "28"
    },
    "157": {
      "fn": null,
      "offset": [
        1059,
        13943
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0xD1"
    },
    "160": {
      "fn": null,
      "offset": [
        1059,
        13943
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "161": {
      "fn": null,
      "offset": [
        1059,
        13943
      ],
      "op": "DUP1",
      "path": "28"
    },
    "162": {
      "fn": null,
      "offset": [
        1059,
        13943
      ],
      "op": "PUSH4",
      "path": "28",
      "value": "0x88BBA42F"
    },
    "167": {
      "fn": null,
      "offset": [
        1059,
        13943
      ],
      "op": "EQ",
      "path": "28"
    },
    "168": {
      "fn": null,
      "offset": [
        1059,
        13943
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x409"
    },
    "171": {
      "fn": null,
      "offset": [
        1059,
        13943
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "172": {
      "fn": null,
      "offset": [
        1059,
        13943
      ],
      "op": "DUP1",
      "path": "28"
    },
    "173": {
      "fn": null,
      "offset": [
        1059,
        13943
      ],
      "op": "PUSH4",
      "path": "28",
      "value": "0x8DA5CB5B"
    },
    "178": {
      "fn": null,
      "offset": [
        1059,
        13943
      ],
      "op": "EQ",
      "path": "28"
    },
    "179": {
      "fn": null,
      "offset": [
        1059,
        13943
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x429"
    },
    "182": {
      "fn": null,
      "offset": [
        1059,
        13943
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "183": {
      "fn": null,
      "offset": [
        1059,
        13943
      ],
      "op": "DUP1",
      "path": "28"
    },
    "184": {
      "fn": null,
      "offset": [
        1059,
        13943
      ],
      "op": "PUSH4",
      "path": "28",
      "value": "0x8DBDBE6D"
    },
    "189": {
      "fn": null,
      "offset": [
        1059,
        13943
      ],
      "op": "EQ",
      "path": "28"
    },
    "190": {
      "fn": null,
      "offset": [
        1059,
        13943
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x43E"
    },
    "193": {
      "fn": null,
      "offset": [
        1059,
        13943
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "194": {
      "fn": null,
      "offset": [
        1059,
        13943
      ],
      "op": "DUP1",
      "path": "28"
    },
    "195": {
      "fn": null,
      "offset": [
        1059,
        13943
      ],
      "op": "PUSH4",
      "path": "28",
      "value": "0x93F1A40B"
    },
    "200": {
      "fn": null,
      "offset": [
        1059,
        13943
      ],
      "op": "EQ",
      "path": "28"
    },
    "201": {
      "fn": null,
      "offset": [
        1059,
        13943
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x45E"
    },
    "204": {
      "fn": null,
      "offset": [
        1059,
        13943
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "205": {
      "fn": null,
      "offset": [
        1059,
        13943
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1C2"
    },
    "208": {
      "fn": null,
      "offset": [
        1059,
        13943
      ],
      "op": "JUMP",
      "path": "28"
    },
    "209": {
      "fn": null,
      "offset": [
        1059,
        13943
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "210": {
      "fn": null,
      "offset": [
        1059,
        13943
      ],
      "op": "DUP1",
      "path": "28"
    },
    "211": {
      "fn": null,
      "offset": [
        1059,
        13943
      ],
      "op": "PUSH4",
      "path": "28",
      "value": "0x79D12FFB"
    },
    "216": {
      "fn": null,
      "offset": [
        1059,
        13943
      ],
      "op": "EQ",
      "path": "28"
    },
    "217": {
      "fn": null,
      "offset": [
        1059,
        13943
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x3A7"
    },
    "220": {
      "fn": null,
      "offset": [
        1059,
        13943
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "221": {
      "fn": null,
      "offset": [
        1059,
        13943
      ],
      "op": "DUP1",
      "path": "28"
    },
    "222": {
      "fn": null,
      "offset": [
        1059,
        13943
      ],
      "op": "PUSH4",
      "path": "28",
      "value": "0x7C516E94"
    },
    "227": {
      "fn": null,
      "offset": [
        1059,
        13943
      ],
      "op": "EQ",
      "path": "28"
    },
    "228": {
      "fn": null,
      "offset": [
        1059,
        13943
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x3D4"
    },
    "231": {
      "fn": null,
      "offset": [
        1059,
        13943
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "232": {
      "fn": null,
      "offset": [
        1059,
        13943
      ],
      "op": "DUP1",
      "path": "28"
    },
    "233": {
      "fn": null,
      "offset": [
        1059,
        13943
      ],
      "op": "PUSH4",
      "path": "28",
      "value": "0x7CD07E47"
    },
    "238": {
      "fn": null,
      "offset": [
        1059,
        13943
      ],
      "op": "EQ",
      "path": "28"
    },
    "239": {
      "fn": null,
      "offset": [
        1059,
        13943
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x3F4"
    },
    "242": {
      "fn": null,
      "offset": [
        1059,
        13943
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "243": {
      "fn": null,
      "offset": [
        1059,
        13943
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1C2"
    },
    "246": {
      "fn": null,
      "offset": [
        1059,
        13943
      ],
      "op": "JUMP",
      "path": "28"
    },
    "247": {
      "fn": null,
      "offset": [
        1059,
        13943
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "248": {
      "fn": null,
      "offset": [
        1059,
        13943
      ],
      "op": "DUP1",
      "path": "28"
    },
    "249": {
      "fn": null,
      "offset": [
        1059,
        13943
      ],
      "op": "PUSH4",
      "path": "28",
      "value": "0x23CF3118"
    },
    "254": {
      "fn": null,
      "offset": [
        1059,
        13943
      ],
      "op": "GT",
      "path": "28"
    },
    "255": {
      "fn": null,
      "offset": [
        1059,
        13943
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x164"
    },
    "258": {
      "fn": null,
      "offset": [
        1059,
        13943
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "259": {
      "fn": null,
      "offset": [
        1059,
        13943
      ],
      "op": "DUP1",
      "path": "28"
    },
    "260": {
      "fn": null,
      "offset": [
        1059,
        13943
      ],
      "op": "PUSH4",
      "path": "28",
      "value": "0x4E71E0C8"
    },
    "265": {
      "fn": null,
      "offset": [
        1059,
        13943
      ],
      "op": "GT",
      "path": "28"
    },
    "266": {
      "fn": null,
      "offset": [
        1059,
        13943
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x13E"
    },
    "269": {
      "fn": null,
      "offset": [
        1059,
        13943
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "270": {
      "fn": null,
      "offset": [
        1059,
        13943
      ],
      "op": "DUP1",
      "path": "28"
    },
    "271": {
      "fn": null,
      "offset": [
        1059,
        13943
      ],
      "op": "PUSH4",
      "path": "28",
      "value": "0x4E71E0C8"
    },
    "276": {
      "fn": null,
      "offset": [
        1059,
        13943
      ],
      "op": "EQ",
      "path": "28"
    },
    "277": {
      "fn": null,
      "offset": [
        1059,
        13943
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x318"
    },
    "280": {
      "fn": null,
      "offset": [
        1059,
        13943
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "281": {
      "fn": null,
      "offset": [
        1059,
        13943
      ],
      "op": "DUP1",
      "path": "28"
    },
    "282": {
      "fn": null,
      "offset": [
        1059,
        13943
      ],
      "op": "PUSH4",
      "path": "28",
      "value": "0x51EB05A6"
    },
    "287": {
      "fn": null,
      "offset": [
        1059,
        13943
      ],
      "op": "EQ",
      "path": "28"
    },
    "288": {
      "fn": null,
      "offset": [
        1059,
        13943
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x32D"
    },
    "291": {
      "fn": null,
      "offset": [
        1059,
        13943
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "292": {
      "fn": null,
      "offset": [
        1059,
        13943
      ],
      "op": "DUP1",
      "path": "28"
    },
    "293": {
      "fn": null,
      "offset": [
        1059,
        13943
      ],
      "op": "PUSH4",
      "path": "28",
      "value": "0x57A5B58C"
    },
    "298": {
      "fn": null,
      "offset": [
        1059,
        13943
      ],
      "op": "EQ",
      "path": "28"
    },
    "299": {
      "fn": null,
      "offset": [
        1059,
        13943
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x35A"
    },
    "302": {
      "fn": null,
      "offset": [
        1059,
        13943
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "303": {
      "fn": null,
      "offset": [
        1059,
        13943
      ],
      "op": "DUP1",
      "path": "28"
    },
    "304": {
      "fn": null,
      "offset": [
        1059,
        13943
      ],
      "op": "PUSH4",
      "path": "28",
      "value": "0x78ED5D1F"
    },
    "309": {
      "fn": null,
      "offset": [
        1059,
        13943
      ],
      "op": "EQ",
      "path": "28"
    },
    "310": {
      "fn": null,
      "offset": [
        1059,
        13943
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x37A"
    },
    "313": {
      "fn": null,
      "offset": [
        1059,
        13943
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "314": {
      "fn": null,
      "offset": [
        1059,
        13943
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1C2"
    },
    "317": {
      "fn": null,
      "offset": [
        1059,
        13943
      ],
      "op": "JUMP",
      "path": "28"
    },
    "318": {
      "fn": null,
      "offset": [
        1059,
        13943
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "319": {
      "fn": null,
      "offset": [
        1059,
        13943
      ],
      "op": "DUP1",
      "path": "28"
    },
    "320": {
      "fn": null,
      "offset": [
        1059,
        13943
      ],
      "op": "PUSH4",
      "path": "28",
      "value": "0x23CF3118"
    },
    "325": {
      "fn": null,
      "offset": [
        1059,
        13943
      ],
      "op": "EQ",
      "path": "28"
    },
    "326": {
      "fn": null,
      "offset": [
        1059,
        13943
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x2B8"
    },
    "329": {
      "fn": null,
      "offset": [
        1059,
        13943
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "330": {
      "fn": null,
      "offset": [
        1059,
        13943
      ],
      "op": "DUP1",
      "path": "28"
    },
    "331": {
      "fn": null,
      "offset": [
        1059,
        13943
      ],
      "op": "PUSH4",
      "path": "28",
      "value": "0x2F940C70"
    },
    "336": {
      "fn": null,
      "offset": [
        1059,
        13943
      ],
      "op": "EQ",
      "path": "28"
    },
    "337": {
      "fn": null,
      "offset": [
        1059,
        13943
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x2D8"
    },
    "340": {
      "fn": null,
      "offset": [
        1059,
        13943
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "341": {
      "fn": null,
      "offset": [
        1059,
        13943
      ],
      "op": "DUP1",
      "path": "28"
    },
    "342": {
      "fn": null,
      "offset": [
        1059,
        13943
      ],
      "op": "PUSH4",
      "path": "28",
      "value": "0x454B0608"
    },
    "347": {
      "fn": null,
      "offset": [
        1059,
        13943
      ],
      "op": "EQ",
      "path": "28"
    },
    "348": {
      "fn": null,
      "offset": [
        1059,
        13943
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x2F8"
    },
    "351": {
      "fn": null,
      "offset": [
        1059,
        13943
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "352": {
      "fn": null,
      "offset": [
        1059,
        13943
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1C2"
    },
    "355": {
      "fn": null,
      "offset": [
        1059,
        13943
      ],
      "op": "JUMP",
      "path": "28"
    },
    "356": {
      "fn": null,
      "offset": [
        1059,
        13943
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "357": {
      "fn": null,
      "offset": [
        1059,
        13943
      ],
      "op": "DUP1",
      "path": "28"
    },
    "358": {
      "fn": null,
      "offset": [
        1059,
        13943
      ],
      "op": "PUSH4",
      "path": "28",
      "value": "0x1526FE27"
    },
    "363": {
      "fn": null,
      "offset": [
        1059,
        13943
      ],
      "op": "GT",
      "path": "28"
    },
    "364": {
      "fn": null,
      "offset": [
        1059,
        13943
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1A0"
    },
    "367": {
      "fn": null,
      "offset": [
        1059,
        13943
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "368": {
      "fn": null,
      "offset": [
        1059,
        13943
      ],
      "op": "DUP1",
      "path": "28"
    },
    "369": {
      "fn": null,
      "offset": [
        1059,
        13943
      ],
      "op": "PUSH4",
      "path": "28",
      "value": "0x1526FE27"
    },
    "374": {
      "fn": null,
      "offset": [
        1059,
        13943
      ],
      "op": "EQ",
      "path": "28"
    },
    "375": {
      "fn": null,
      "offset": [
        1059,
        13943
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x234"
    },
    "378": {
      "fn": null,
      "offset": [
        1059,
        13943
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "379": {
      "fn": null,
      "offset": [
        1059,
        13943
      ],
      "op": "DUP1",
      "path": "28"
    },
    "380": {
      "fn": null,
      "offset": [
        1059,
        13943
      ],
      "op": "PUSH4",
      "path": "28",
      "value": "0x17CAF6F1"
    },
    "385": {
      "fn": null,
      "offset": [
        1059,
        13943
      ],
      "op": "EQ",
      "path": "28"
    },
    "386": {
      "fn": null,
      "offset": [
        1059,
        13943
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x263"
    },
    "389": {
      "fn": null,
      "offset": [
        1059,
        13943
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "390": {
      "fn": null,
      "offset": [
        1059,
        13943
      ],
      "op": "DUP1",
      "path": "28"
    },
    "391": {
      "fn": null,
      "offset": [
        1059,
        13943
      ],
      "op": "PUSH4",
      "path": "28",
      "value": "0x18FCCC76"
    },
    "396": {
      "fn": null,
      "offset": [
        1059,
        13943
      ],
      "op": "EQ",
      "path": "28"
    },
    "397": {
      "fn": null,
      "offset": [
        1059,
        13943
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x278"
    },
    "400": {
      "fn": null,
      "offset": [
        1059,
        13943
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "401": {
      "fn": null,
      "offset": [
        1059,
        13943
      ],
      "op": "DUP1",
      "path": "28"
    },
    "402": {
      "fn": null,
      "offset": [
        1059,
        13943
      ],
      "op": "PUSH4",
      "path": "28",
      "value": "0x195426EC"
    },
    "407": {
      "fn": null,
      "offset": [
        1059,
        13943
      ],
      "op": "EQ",
      "path": "28"
    },
    "408": {
      "fn": null,
      "offset": [
        1059,
        13943
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x298"
    },
    "411": {
      "fn": null,
      "offset": [
        1059,
        13943
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "412": {
      "fn": null,
      "offset": [
        1059,
        13943
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1C2"
    },
    "415": {
      "fn": null,
      "offset": [
        1059,
        13943
      ],
      "op": "JUMP",
      "path": "28"
    },
    "416": {
      "fn": null,
      "offset": [
        1059,
        13943
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "417": {
      "fn": null,
      "offset": [
        1059,
        13943
      ],
      "op": "DUP1",
      "path": "28"
    },
    "418": {
      "fn": null,
      "offset": [
        1059,
        13943
      ],
      "op": "PUSH4",
      "path": "28",
      "value": "0x78DFBE7"
    },
    "423": {
      "fn": null,
      "offset": [
        1059,
        13943
      ],
      "op": "EQ",
      "path": "28"
    },
    "424": {
      "fn": null,
      "offset": [
        1059,
        13943
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1C7"
    },
    "427": {
      "fn": null,
      "offset": [
        1059,
        13943
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "428": {
      "fn": null,
      "offset": [
        1059,
        13943
      ],
      "op": "DUP1",
      "path": "28"
    },
    "429": {
      "fn": null,
      "offset": [
        1059,
        13943
      ],
      "op": "PUSH4",
      "path": "28",
      "value": "0x81E3EDA"
    },
    "434": {
      "fn": null,
      "offset": [
        1059,
        13943
      ],
      "op": "EQ",
      "path": "28"
    },
    "435": {
      "fn": null,
      "offset": [
        1059,
        13943
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1E9"
    },
    "438": {
      "fn": null,
      "offset": [
        1059,
        13943
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "439": {
      "fn": null,
      "offset": [
        1059,
        13943
      ],
      "op": "DUP1",
      "path": "28"
    },
    "440": {
      "fn": null,
      "offset": [
        1059,
        13943
      ],
      "op": "PUSH4",
      "path": "28",
      "value": "0xAD58D2F"
    },
    "445": {
      "fn": null,
      "offset": [
        1059,
        13943
      ],
      "op": "EQ",
      "path": "28"
    },
    "446": {
      "fn": null,
      "offset": [
        1059,
        13943
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x214"
    },
    "449": {
      "fn": null,
      "offset": [
        1059,
        13943
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "450": {
      "fn": null,
      "offset": [
        1059,
        13943
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "451": {
      "fn": null,
      "offset": [
        1059,
        13943
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "453": {
      "fn": null,
      "offset": [
        1059,
        13943
      ],
      "op": "DUP1",
      "path": "28"
    },
    "454": {
      "first_revert": true,
      "fn": null,
      "offset": [
        1059,
        13943
      ],
      "op": "REVERT",
      "path": "28"
    },
    "455": {
      "fn": "BoringOwnable.transferOwnership",
      "offset": [
        1124,
        1613
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "456": {
      "fn": "BoringOwnable.transferOwnership",
      "offset": [
        1124,
        1613
      ],
      "op": "CALLVALUE",
      "path": "11"
    },
    "457": {
      "fn": "BoringOwnable.transferOwnership",
      "offset": [
        1124,
        1613
      ],
      "op": "DUP1",
      "path": "11"
    },
    "458": {
      "fn": "BoringOwnable.transferOwnership",
      "offset": [
        1124,
        1613
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "459": {
      "fn": "BoringOwnable.transferOwnership",
      "offset": [
        1124,
        1613
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1D3"
    },
    "462": {
      "fn": "BoringOwnable.transferOwnership",
      "offset": [
        1124,
        1613
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "463": {
      "fn": "BoringOwnable.transferOwnership",
      "offset": [
        1124,
        1613
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "465": {
      "fn": "BoringOwnable.transferOwnership",
      "offset": [
        1124,
        1613
      ],
      "op": "DUP1",
      "path": "11"
    },
    "466": {
      "fn": "BoringOwnable.transferOwnership",
      "offset": [
        1124,
        1613
      ],
      "op": "REVERT",
      "path": "11"
    },
    "467": {
      "fn": "BoringOwnable.transferOwnership",
      "offset": [
        1124,
        1613
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "468": {
      "op": "POP"
    },
    "469": {
      "fn": "BoringOwnable.transferOwnership",
      "offset": [
        1124,
        1613
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1E7"
    },
    "472": {
      "fn": "BoringOwnable.transferOwnership",
      "offset": [
        1124,
        1613
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1E2"
    },
    "475": {
      "fn": "BoringOwnable.transferOwnership",
      "offset": [
        1124,
        1613
      ],
      "op": "CALLDATASIZE",
      "path": "11"
    },
    "476": {
      "fn": "BoringOwnable.transferOwnership",
      "offset": [
        1124,
        1613
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "478": {
      "fn": "BoringOwnable.transferOwnership",
      "offset": [
        1124,
        1613
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x21D7"
    },
    "481": {
      "fn": "BoringOwnable.transferOwnership",
      "jump": "i",
      "offset": [
        1124,
        1613
      ],
      "op": "JUMP",
      "path": "11"
    },
    "482": {
      "fn": "BoringOwnable.transferOwnership",
      "offset": [
        1124,
        1613
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "483": {
      "fn": "BoringOwnable.transferOwnership",
      "offset": [
        1124,
        1613
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x55E"
    },
    "486": {
      "fn": "BoringOwnable.transferOwnership",
      "jump": "i",
      "offset": [
        1124,
        1613
      ],
      "op": "JUMP",
      "path": "11"
    },
    "487": {
      "fn": "BoringOwnable.transferOwnership",
      "offset": [
        1124,
        1613
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "488": {
      "fn": "BoringOwnable.transferOwnership",
      "offset": [
        1124,
        1613
      ],
      "op": "STOP",
      "path": "11"
    },
    "489": {
      "fn": "MiniChefV2.poolLength",
      "offset": [
        3664,
        3762
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "490": {
      "fn": "MiniChefV2.poolLength",
      "offset": [
        3664,
        3762
      ],
      "op": "CALLVALUE",
      "path": "28"
    },
    "491": {
      "fn": "MiniChefV2.poolLength",
      "offset": [
        3664,
        3762
      ],
      "op": "DUP1",
      "path": "28"
    },
    "492": {
      "fn": "MiniChefV2.poolLength",
      "offset": [
        3664,
        3762
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "493": {
      "fn": "MiniChefV2.poolLength",
      "offset": [
        3664,
        3762
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1F5"
    },
    "496": {
      "fn": "MiniChefV2.poolLength",
      "offset": [
        3664,
        3762
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "497": {
      "fn": "MiniChefV2.poolLength",
      "offset": [
        3664,
        3762
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "499": {
      "fn": "MiniChefV2.poolLength",
      "offset": [
        3664,
        3762
      ],
      "op": "DUP1",
      "path": "28"
    },
    "500": {
      "fn": "MiniChefV2.poolLength",
      "offset": [
        3664,
        3762
      ],
      "op": "REVERT",
      "path": "28"
    },
    "501": {
      "fn": "MiniChefV2.poolLength",
      "offset": [
        3664,
        3762
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "502": {
      "fn": "MiniChefV2.poolLength",
      "offset": [
        3664,
        3762
      ],
      "op": "POP",
      "path": "28"
    },
    "503": {
      "fn": "MiniChefV2.poolLength",
      "offset": [
        3664,
        3762
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1FE"
    },
    "506": {
      "fn": "MiniChefV2.poolLength",
      "offset": [
        3664,
        3762
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x64D"
    },
    "509": {
      "fn": "MiniChefV2.poolLength",
      "jump": "i",
      "offset": [
        3664,
        3762
      ],
      "op": "JUMP",
      "path": "28"
    },
    "510": {
      "fn": "MiniChefV2.poolLength",
      "offset": [
        3664,
        3762
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "511": {
      "fn": "MiniChefV2.poolLength",
      "offset": [
        3664,
        3762
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "513": {
      "fn": "MiniChefV2.poolLength",
      "offset": [
        3664,
        3762
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "514": {
      "fn": "MiniChefV2.poolLength",
      "offset": [
        3664,
        3762
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x20B"
    },
    "517": {
      "fn": "MiniChefV2.poolLength",
      "offset": [
        3664,
        3762
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "518": {
      "fn": "MiniChefV2.poolLength",
      "offset": [
        3664,
        3762
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "519": {
      "fn": "MiniChefV2.poolLength",
      "offset": [
        3664,
        3762
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x29D3"
    },
    "522": {
      "fn": "MiniChefV2.poolLength",
      "jump": "i",
      "offset": [
        3664,
        3762
      ],
      "op": "JUMP",
      "path": "28"
    },
    "523": {
      "fn": "MiniChefV2.poolLength",
      "offset": [
        3664,
        3762
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "524": {
      "fn": "MiniChefV2.poolLength",
      "offset": [
        3664,
        3762
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "526": {
      "fn": "MiniChefV2.poolLength",
      "offset": [
        3664,
        3762
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "527": {
      "fn": "MiniChefV2.poolLength",
      "offset": [
        3664,
        3762
      ],
      "op": "DUP1",
      "path": "28"
    },
    "528": {
      "fn": "MiniChefV2.poolLength",
      "offset": [
        3664,
        3762
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "529": {
      "fn": "MiniChefV2.poolLength",
      "offset": [
        3664,
        3762
      ],
      "op": "SUB",
      "path": "28"
    },
    "530": {
      "fn": "MiniChefV2.poolLength",
      "offset": [
        3664,
        3762
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "531": {
      "fn": "MiniChefV2.poolLength",
      "offset": [
        3664,
        3762
      ],
      "op": "RETURN",
      "path": "28"
    },
    "532": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        10334,
        10996
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "533": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        10334,
        10996
      ],
      "op": "CALLVALUE",
      "path": "28"
    },
    "534": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        10334,
        10996
      ],
      "op": "DUP1",
      "path": "28"
    },
    "535": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        10334,
        10996
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "536": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        10334,
        10996
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x220"
    },
    "539": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        10334,
        10996
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "540": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        10334,
        10996
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "542": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        10334,
        10996
      ],
      "op": "DUP1",
      "path": "28"
    },
    "543": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        10334,
        10996
      ],
      "op": "REVERT",
      "path": "28"
    },
    "544": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        10334,
        10996
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "545": {
      "op": "POP"
    },
    "546": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        10334,
        10996
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1E7"
    },
    "549": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        10334,
        10996
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x22F"
    },
    "552": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        10334,
        10996
      ],
      "op": "CALLDATASIZE",
      "path": "28"
    },
    "553": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        10334,
        10996
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x4"
    },
    "555": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        10334,
        10996
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x2497"
    },
    "558": {
      "fn": "MiniChefV2.withdraw",
      "jump": "i",
      "offset": [
        10334,
        10996
      ],
      "op": "JUMP",
      "path": "28"
    },
    "559": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        10334,
        10996
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "560": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        10334,
        10996
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x653"
    },
    "563": {
      "fn": "MiniChefV2.withdraw",
      "jump": "i",
      "offset": [
        10334,
        10996
      ],
      "op": "JUMP",
      "path": "28"
    },
    "564": {
      "offset": [
        2063,
        2089
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "565": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        2063,
        2089
      ],
      "op": "CALLVALUE",
      "path": "28"
    },
    "566": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        2063,
        2089
      ],
      "op": "DUP1",
      "path": "28"
    },
    "567": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        2063,
        2089
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "568": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        2063,
        2089
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x240"
    },
    "571": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        2063,
        2089
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "572": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        2063,
        2089
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "574": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        2063,
        2089
      ],
      "op": "DUP1",
      "path": "28"
    },
    "575": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        2063,
        2089
      ],
      "op": "REVERT",
      "path": "28"
    },
    "576": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        2063,
        2089
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "577": {
      "op": "POP"
    },
    "578": {
      "offset": [
        2063,
        2089
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x254"
    },
    "581": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        2063,
        2089
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x24F"
    },
    "584": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        2063,
        2089
      ],
      "op": "CALLDATASIZE",
      "path": "28"
    },
    "585": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        2063,
        2089
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x4"
    },
    "587": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        2063,
        2089
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x2402"
    },
    "590": {
      "fn": "MiniChefV2.withdraw",
      "jump": "i",
      "offset": [
        2063,
        2089
      ],
      "op": "JUMP",
      "path": "28"
    },
    "591": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        2063,
        2089
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "592": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        2063,
        2089
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x7E3"
    },
    "595": {
      "fn": "MiniChefV2.withdraw",
      "jump": "i",
      "offset": [
        2063,
        2089
      ],
      "op": "JUMP",
      "path": "28"
    },
    "596": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        2063,
        2089
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "597": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        2063,
        2089
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "599": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        2063,
        2089
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "600": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        2063,
        2089
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x20B"
    },
    "603": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        2063,
        2089
      ],
      "op": "SWAP4",
      "path": "28"
    },
    "604": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        2063,
        2089
      ],
      "op": "SWAP3",
      "path": "28"
    },
    "605": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        2063,
        2089
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "606": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        2063,
        2089
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "607": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        2063,
        2089
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x29A9"
    },
    "610": {
      "fn": "MiniChefV2.withdraw",
      "jump": "i",
      "offset": [
        2063,
        2089
      ],
      "op": "JUMP",
      "path": "28"
    },
    "611": {
      "offset": [
        2580,
        2610
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "612": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        2580,
        2610
      ],
      "op": "CALLVALUE",
      "path": "28"
    },
    "613": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        2580,
        2610
      ],
      "op": "DUP1",
      "path": "28"
    },
    "614": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        2580,
        2610
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "615": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        2580,
        2610
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x26F"
    },
    "618": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        2580,
        2610
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "619": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        2580,
        2610
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "621": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        2580,
        2610
      ],
      "op": "DUP1",
      "path": "28"
    },
    "622": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        2580,
        2610
      ],
      "op": "REVERT",
      "path": "28"
    },
    "623": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        2580,
        2610
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "624": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        2580,
        2610
      ],
      "op": "POP",
      "path": "28"
    },
    "625": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        2580,
        2610
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1FE"
    },
    "628": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        2580,
        2610
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x825"
    },
    "631": {
      "fn": "MiniChefV2.withdraw",
      "jump": "i",
      "offset": [
        2580,
        2610
      ],
      "op": "JUMP",
      "path": "28"
    },
    "632": {
      "fn": "MiniChefV2.harvest",
      "offset": [
        11170,
        11950
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "633": {
      "fn": "MiniChefV2.harvest",
      "offset": [
        11170,
        11950
      ],
      "op": "CALLVALUE",
      "path": "28"
    },
    "634": {
      "fn": "MiniChefV2.harvest",
      "offset": [
        11170,
        11950
      ],
      "op": "DUP1",
      "path": "28"
    },
    "635": {
      "fn": "MiniChefV2.harvest",
      "offset": [
        11170,
        11950
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "636": {
      "fn": "MiniChefV2.harvest",
      "offset": [
        11170,
        11950
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x284"
    },
    "639": {
      "fn": "MiniChefV2.harvest",
      "offset": [
        11170,
        11950
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "640": {
      "fn": "MiniChefV2.harvest",
      "offset": [
        11170,
        11950
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "642": {
      "fn": "MiniChefV2.harvest",
      "offset": [
        11170,
        11950
      ],
      "op": "DUP1",
      "path": "28"
    },
    "643": {
      "fn": "MiniChefV2.harvest",
      "offset": [
        11170,
        11950
      ],
      "op": "REVERT",
      "path": "28"
    },
    "644": {
      "fn": "MiniChefV2.harvest",
      "offset": [
        11170,
        11950
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "645": {
      "op": "POP"
    },
    "646": {
      "fn": "MiniChefV2.harvest",
      "offset": [
        11170,
        11950
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1E7"
    },
    "649": {
      "fn": "MiniChefV2.harvest",
      "offset": [
        11170,
        11950
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x293"
    },
    "652": {
      "fn": "MiniChefV2.harvest",
      "offset": [
        11170,
        11950
      ],
      "op": "CALLDATASIZE",
      "path": "28"
    },
    "653": {
      "fn": "MiniChefV2.harvest",
      "offset": [
        11170,
        11950
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x4"
    },
    "655": {
      "fn": "MiniChefV2.harvest",
      "offset": [
        11170,
        11950
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x2432"
    },
    "658": {
      "fn": "MiniChefV2.harvest",
      "jump": "i",
      "offset": [
        11170,
        11950
      ],
      "op": "JUMP",
      "path": "28"
    },
    "659": {
      "fn": "MiniChefV2.harvest",
      "offset": [
        11170,
        11950
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "660": {
      "fn": "MiniChefV2.harvest",
      "offset": [
        11170,
        11950
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x82B"
    },
    "663": {
      "fn": "MiniChefV2.harvest",
      "jump": "i",
      "offset": [
        11170,
        11950
      ],
      "op": "JUMP",
      "path": "28"
    },
    "664": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7111,
        7902
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "665": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7111,
        7902
      ],
      "op": "CALLVALUE",
      "path": "28"
    },
    "666": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7111,
        7902
      ],
      "op": "DUP1",
      "path": "28"
    },
    "667": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7111,
        7902
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "668": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7111,
        7902
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x2A4"
    },
    "671": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7111,
        7902
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "672": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7111,
        7902
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "674": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7111,
        7902
      ],
      "op": "DUP1",
      "path": "28"
    },
    "675": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7111,
        7902
      ],
      "op": "REVERT",
      "path": "28"
    },
    "676": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7111,
        7902
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "677": {
      "op": "POP"
    },
    "678": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7111,
        7902
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1FE"
    },
    "681": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7111,
        7902
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x2B3"
    },
    "684": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7111,
        7902
      ],
      "op": "CALLDATASIZE",
      "path": "28"
    },
    "685": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7111,
        7902
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x4"
    },
    "687": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7111,
        7902
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x2432"
    },
    "690": {
      "fn": "MiniChefV2.pendingSushi",
      "jump": "i",
      "offset": [
        7111,
        7902
      ],
      "op": "JUMP",
      "path": "28"
    },
    "691": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7111,
        7902
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "692": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7111,
        7902
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x9C5"
    },
    "695": {
      "fn": "MiniChefV2.pendingSushi",
      "jump": "i",
      "offset": [
        7111,
        7902
      ],
      "op": "JUMP",
      "path": "28"
    },
    "696": {
      "fn": "MiniChefV2.setMigrator",
      "offset": [
        5981,
        6081
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "697": {
      "fn": "MiniChefV2.setMigrator",
      "offset": [
        5981,
        6081
      ],
      "op": "CALLVALUE",
      "path": "28"
    },
    "698": {
      "fn": "MiniChefV2.setMigrator",
      "offset": [
        5981,
        6081
      ],
      "op": "DUP1",
      "path": "28"
    },
    "699": {
      "fn": "MiniChefV2.setMigrator",
      "offset": [
        5981,
        6081
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "700": {
      "fn": "MiniChefV2.setMigrator",
      "offset": [
        5981,
        6081
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x2C4"
    },
    "703": {
      "fn": "MiniChefV2.setMigrator",
      "offset": [
        5981,
        6081
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "704": {
      "fn": "MiniChefV2.setMigrator",
      "offset": [
        5981,
        6081
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "706": {
      "fn": "MiniChefV2.setMigrator",
      "offset": [
        5981,
        6081
      ],
      "op": "DUP1",
      "path": "28"
    },
    "707": {
      "fn": "MiniChefV2.setMigrator",
      "offset": [
        5981,
        6081
      ],
      "op": "REVERT",
      "path": "28"
    },
    "708": {
      "fn": "MiniChefV2.setMigrator",
      "offset": [
        5981,
        6081
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "709": {
      "op": "POP"
    },
    "710": {
      "fn": "MiniChefV2.setMigrator",
      "offset": [
        5981,
        6081
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1E7"
    },
    "713": {
      "fn": "MiniChefV2.setMigrator",
      "offset": [
        5981,
        6081
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x2D3"
    },
    "716": {
      "fn": "MiniChefV2.setMigrator",
      "offset": [
        5981,
        6081
      ],
      "op": "CALLDATASIZE",
      "path": "28"
    },
    "717": {
      "fn": "MiniChefV2.setMigrator",
      "offset": [
        5981,
        6081
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x4"
    },
    "719": {
      "fn": "MiniChefV2.setMigrator",
      "offset": [
        5981,
        6081
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x21BB"
    },
    "722": {
      "fn": "MiniChefV2.setMigrator",
      "jump": "i",
      "offset": [
        5981,
        6081
      ],
      "op": "JUMP",
      "path": "28"
    },
    "723": {
      "fn": "MiniChefV2.setMigrator",
      "offset": [
        5981,
        6081
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "724": {
      "fn": "MiniChefV2.setMigrator",
      "offset": [
        5981,
        6081
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0xBC5"
    },
    "727": {
      "fn": "MiniChefV2.setMigrator",
      "jump": "i",
      "offset": [
        5981,
        6081
      ],
      "op": "JUMP",
      "path": "28"
    },
    "728": {
      "fn": "MiniChefV2.emergencyWithdraw",
      "offset": [
        13380,
        13941
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "729": {
      "fn": "MiniChefV2.emergencyWithdraw",
      "offset": [
        13380,
        13941
      ],
      "op": "CALLVALUE",
      "path": "28"
    },
    "730": {
      "fn": "MiniChefV2.emergencyWithdraw",
      "offset": [
        13380,
        13941
      ],
      "op": "DUP1",
      "path": "28"
    },
    "731": {
      "fn": "MiniChefV2.emergencyWithdraw",
      "offset": [
        13380,
        13941
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "732": {
      "fn": "MiniChefV2.emergencyWithdraw",
      "offset": [
        13380,
        13941
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x2E4"
    },
    "735": {
      "fn": "MiniChefV2.emergencyWithdraw",
      "offset": [
        13380,
        13941
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "736": {
      "fn": "MiniChefV2.emergencyWithdraw",
      "offset": [
        13380,
        13941
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "738": {
      "fn": "MiniChefV2.emergencyWithdraw",
      "offset": [
        13380,
        13941
      ],
      "op": "DUP1",
      "path": "28"
    },
    "739": {
      "fn": "MiniChefV2.emergencyWithdraw",
      "offset": [
        13380,
        13941
      ],
      "op": "REVERT",
      "path": "28"
    },
    "740": {
      "fn": "MiniChefV2.emergencyWithdraw",
      "offset": [
        13380,
        13941
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "741": {
      "op": "POP"
    },
    "742": {
      "fn": "MiniChefV2.emergencyWithdraw",
      "offset": [
        13380,
        13941
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1E7"
    },
    "745": {
      "fn": "MiniChefV2.emergencyWithdraw",
      "offset": [
        13380,
        13941
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x2F3"
    },
    "748": {
      "fn": "MiniChefV2.emergencyWithdraw",
      "offset": [
        13380,
        13941
      ],
      "op": "CALLDATASIZE",
      "path": "28"
    },
    "749": {
      "fn": "MiniChefV2.emergencyWithdraw",
      "offset": [
        13380,
        13941
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x4"
    },
    "751": {
      "fn": "MiniChefV2.emergencyWithdraw",
      "offset": [
        13380,
        13941
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x2432"
    },
    "754": {
      "fn": "MiniChefV2.emergencyWithdraw",
      "jump": "i",
      "offset": [
        13380,
        13941
      ],
      "op": "JUMP",
      "path": "28"
    },
    "755": {
      "fn": "MiniChefV2.emergencyWithdraw",
      "offset": [
        13380,
        13941
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "756": {
      "fn": "MiniChefV2.emergencyWithdraw",
      "offset": [
        13380,
        13941
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0xC11"
    },
    "759": {
      "fn": "MiniChefV2.emergencyWithdraw",
      "jump": "i",
      "offset": [
        13380,
        13941
      ],
      "op": "JUMP",
      "path": "28"
    },
    "760": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6235,
        6889
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "761": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6235,
        6889
      ],
      "op": "CALLVALUE",
      "path": "28"
    },
    "762": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6235,
        6889
      ],
      "op": "DUP1",
      "path": "28"
    },
    "763": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6235,
        6889
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "764": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6235,
        6889
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x304"
    },
    "767": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6235,
        6889
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "768": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6235,
        6889
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "770": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6235,
        6889
      ],
      "op": "DUP1",
      "path": "28"
    },
    "771": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6235,
        6889
      ],
      "op": "REVERT",
      "path": "28"
    },
    "772": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6235,
        6889
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "773": {
      "op": "POP"
    },
    "774": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6235,
        6889
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1E7"
    },
    "777": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6235,
        6889
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x313"
    },
    "780": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6235,
        6889
      ],
      "op": "CALLDATASIZE",
      "path": "28"
    },
    "781": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6235,
        6889
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x4"
    },
    "783": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6235,
        6889
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x2402"
    },
    "786": {
      "fn": "MiniChefV2.migrate",
      "jump": "i",
      "offset": [
        6235,
        6889
      ],
      "op": "JUMP",
      "path": "28"
    },
    "787": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6235,
        6889
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "788": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6235,
        6889
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0xD32"
    },
    "791": {
      "fn": "MiniChefV2.migrate",
      "jump": "i",
      "offset": [
        6235,
        6889
      ],
      "op": "JUMP",
      "path": "28"
    },
    "792": {
      "fn": "BoringOwnable.claimOwnership",
      "offset": [
        1692,
        2022
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "793": {
      "fn": "BoringOwnable.claimOwnership",
      "offset": [
        1692,
        2022
      ],
      "op": "CALLVALUE",
      "path": "11"
    },
    "794": {
      "fn": "BoringOwnable.claimOwnership",
      "offset": [
        1692,
        2022
      ],
      "op": "DUP1",
      "path": "11"
    },
    "795": {
      "fn": "BoringOwnable.claimOwnership",
      "offset": [
        1692,
        2022
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "796": {
      "fn": "BoringOwnable.claimOwnership",
      "offset": [
        1692,
        2022
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x324"
    },
    "799": {
      "fn": "BoringOwnable.claimOwnership",
      "offset": [
        1692,
        2022
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "800": {
      "fn": "BoringOwnable.claimOwnership",
      "offset": [
        1692,
        2022
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "802": {
      "fn": "BoringOwnable.claimOwnership",
      "offset": [
        1692,
        2022
      ],
      "op": "DUP1",
      "path": "11"
    },
    "803": {
      "fn": "BoringOwnable.claimOwnership",
      "offset": [
        1692,
        2022
      ],
      "op": "REVERT",
      "path": "11"
    },
    "804": {
      "fn": "BoringOwnable.claimOwnership",
      "offset": [
        1692,
        2022
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "805": {
      "fn": "BoringOwnable.claimOwnership",
      "offset": [
        1692,
        2022
      ],
      "op": "POP",
      "path": "11"
    },
    "806": {
      "fn": "BoringOwnable.claimOwnership",
      "offset": [
        1692,
        2022
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1E7"
    },
    "809": {
      "fn": "BoringOwnable.claimOwnership",
      "offset": [
        1692,
        2022
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1050"
    },
    "812": {
      "fn": "BoringOwnable.claimOwnership",
      "jump": "i",
      "offset": [
        1692,
        2022
      ],
      "op": "JUMP",
      "path": "11"
    },
    "813": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8447,
        9219
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "814": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8447,
        9219
      ],
      "op": "CALLVALUE",
      "path": "28"
    },
    "815": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8447,
        9219
      ],
      "op": "DUP1",
      "path": "28"
    },
    "816": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8447,
        9219
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "817": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8447,
        9219
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x339"
    },
    "820": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8447,
        9219
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "821": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8447,
        9219
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "823": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8447,
        9219
      ],
      "op": "DUP1",
      "path": "28"
    },
    "824": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8447,
        9219
      ],
      "op": "REVERT",
      "path": "28"
    },
    "825": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8447,
        9219
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "826": {
      "op": "POP"
    },
    "827": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8447,
        9219
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x34D"
    },
    "830": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8447,
        9219
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x348"
    },
    "833": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8447,
        9219
      ],
      "op": "CALLDATASIZE",
      "path": "28"
    },
    "834": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8447,
        9219
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x4"
    },
    "836": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8447,
        9219
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x2402"
    },
    "839": {
      "fn": "MiniChefV2.updatePool",
      "jump": "i",
      "offset": [
        8447,
        9219
      ],
      "op": "JUMP",
      "path": "28"
    },
    "840": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8447,
        9219
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "841": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8447,
        9219
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x10DD"
    },
    "844": {
      "fn": "MiniChefV2.updatePool",
      "jump": "i",
      "offset": [
        8447,
        9219
      ],
      "op": "JUMP",
      "path": "28"
    },
    "845": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8447,
        9219
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "846": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8447,
        9219
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "848": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8447,
        9219
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "849": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8447,
        9219
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x20B"
    },
    "852": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8447,
        9219
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "853": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8447,
        9219
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "854": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8447,
        9219
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x2970"
    },
    "857": {
      "fn": "MiniChefV2.updatePool",
      "jump": "i",
      "offset": [
        8447,
        9219
      ],
      "op": "JUMP",
      "path": "28"
    },
    "858": {
      "fn": "MiniChefV2.massUpdatePools",
      "offset": [
        8080,
        8268
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "859": {
      "fn": "MiniChefV2.massUpdatePools",
      "offset": [
        8080,
        8268
      ],
      "op": "CALLVALUE",
      "path": "28"
    },
    "860": {
      "fn": "MiniChefV2.massUpdatePools",
      "offset": [
        8080,
        8268
      ],
      "op": "DUP1",
      "path": "28"
    },
    "861": {
      "fn": "MiniChefV2.massUpdatePools",
      "offset": [
        8080,
        8268
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "862": {
      "fn": "MiniChefV2.massUpdatePools",
      "offset": [
        8080,
        8268
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x366"
    },
    "865": {
      "fn": "MiniChefV2.massUpdatePools",
      "offset": [
        8080,
        8268
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "866": {
      "fn": "MiniChefV2.massUpdatePools",
      "offset": [
        8080,
        8268
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "868": {
      "fn": "MiniChefV2.massUpdatePools",
      "offset": [
        8080,
        8268
      ],
      "op": "DUP1",
      "path": "28"
    },
    "869": {
      "fn": "MiniChefV2.massUpdatePools",
      "offset": [
        8080,
        8268
      ],
      "op": "REVERT",
      "path": "28"
    },
    "870": {
      "fn": "MiniChefV2.massUpdatePools",
      "offset": [
        8080,
        8268
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "871": {
      "op": "POP"
    },
    "872": {
      "fn": "MiniChefV2.massUpdatePools",
      "offset": [
        8080,
        8268
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1E7"
    },
    "875": {
      "fn": "MiniChefV2.massUpdatePools",
      "offset": [
        8080,
        8268
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x375"
    },
    "878": {
      "fn": "MiniChefV2.massUpdatePools",
      "offset": [
        8080,
        8268
      ],
      "op": "CALLDATASIZE",
      "path": "28"
    },
    "879": {
      "fn": "MiniChefV2.massUpdatePools",
      "offset": [
        8080,
        8268
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x4"
    },
    "881": {
      "fn": "MiniChefV2.massUpdatePools",
      "offset": [
        8080,
        8268
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x226A"
    },
    "884": {
      "fn": "MiniChefV2.massUpdatePools",
      "jump": "i",
      "offset": [
        8080,
        8268
      ],
      "op": "JUMP",
      "path": "28"
    },
    "885": {
      "fn": "MiniChefV2.massUpdatePools",
      "offset": [
        8080,
        8268
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "886": {
      "fn": "MiniChefV2.massUpdatePools",
      "offset": [
        8080,
        8268
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1361"
    },
    "889": {
      "fn": "MiniChefV2.massUpdatePools",
      "jump": "i",
      "offset": [
        8080,
        8268
      ],
      "op": "JUMP",
      "path": "28"
    },
    "890": {
      "offset": [
        2155,
        2178
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "891": {
      "fn": "MiniChefV2.massUpdatePools",
      "offset": [
        2155,
        2178
      ],
      "op": "CALLVALUE",
      "path": "28"
    },
    "892": {
      "fn": "MiniChefV2.massUpdatePools",
      "offset": [
        2155,
        2178
      ],
      "op": "DUP1",
      "path": "28"
    },
    "893": {
      "fn": "MiniChefV2.massUpdatePools",
      "offset": [
        2155,
        2178
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "894": {
      "fn": "MiniChefV2.massUpdatePools",
      "offset": [
        2155,
        2178
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x386"
    },
    "897": {
      "fn": "MiniChefV2.massUpdatePools",
      "offset": [
        2155,
        2178
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "898": {
      "fn": "MiniChefV2.massUpdatePools",
      "offset": [
        2155,
        2178
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "900": {
      "fn": "MiniChefV2.massUpdatePools",
      "offset": [
        2155,
        2178
      ],
      "op": "DUP1",
      "path": "28"
    },
    "901": {
      "fn": "MiniChefV2.massUpdatePools",
      "offset": [
        2155,
        2178
      ],
      "op": "REVERT",
      "path": "28"
    },
    "902": {
      "fn": "MiniChefV2.massUpdatePools",
      "offset": [
        2155,
        2178
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "903": {
      "op": "POP"
    },
    "904": {
      "offset": [
        2155,
        2178
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x39A"
    },
    "907": {
      "fn": "MiniChefV2.massUpdatePools",
      "offset": [
        2155,
        2178
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x395"
    },
    "910": {
      "fn": "MiniChefV2.massUpdatePools",
      "offset": [
        2155,
        2178
      ],
      "op": "CALLDATASIZE",
      "path": "28"
    },
    "911": {
      "fn": "MiniChefV2.massUpdatePools",
      "offset": [
        2155,
        2178
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x4"
    },
    "913": {
      "fn": "MiniChefV2.massUpdatePools",
      "offset": [
        2155,
        2178
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x2402"
    },
    "916": {
      "fn": "MiniChefV2.massUpdatePools",
      "jump": "i",
      "offset": [
        2155,
        2178
      ],
      "op": "JUMP",
      "path": "28"
    },
    "917": {
      "fn": "MiniChefV2.massUpdatePools",
      "offset": [
        2155,
        2178
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "918": {
      "fn": "MiniChefV2.massUpdatePools",
      "offset": [
        2155,
        2178
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1397"
    },
    "921": {
      "fn": "MiniChefV2.massUpdatePools",
      "jump": "i",
      "offset": [
        2155,
        2178
      ],
      "op": "JUMP",
      "path": "28"
    },
    "922": {
      "fn": "MiniChefV2.massUpdatePools",
      "offset": [
        2155,
        2178
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "923": {
      "fn": "MiniChefV2.massUpdatePools",
      "offset": [
        2155,
        2178
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "925": {
      "fn": "MiniChefV2.massUpdatePools",
      "offset": [
        2155,
        2178
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "926": {
      "fn": "MiniChefV2.massUpdatePools",
      "offset": [
        2155,
        2178
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x20B"
    },
    "929": {
      "fn": "MiniChefV2.massUpdatePools",
      "offset": [
        2155,
        2178
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "930": {
      "fn": "MiniChefV2.massUpdatePools",
      "offset": [
        2155,
        2178
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "931": {
      "fn": "MiniChefV2.massUpdatePools",
      "offset": [
        2155,
        2178
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x2539"
    },
    "934": {
      "fn": "MiniChefV2.massUpdatePools",
      "jump": "i",
      "offset": [
        2155,
        2178
      ],
      "op": "JUMP",
      "path": "28"
    },
    "935": {
      "offset": [
        2436,
        2480
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "936": {
      "fn": "MiniChefV2.massUpdatePools",
      "offset": [
        2436,
        2480
      ],
      "op": "CALLVALUE",
      "path": "28"
    },
    "937": {
      "fn": "MiniChefV2.massUpdatePools",
      "offset": [
        2436,
        2480
      ],
      "op": "DUP1",
      "path": "28"
    },
    "938": {
      "fn": "MiniChefV2.massUpdatePools",
      "offset": [
        2436,
        2480
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "939": {
      "fn": "MiniChefV2.massUpdatePools",
      "offset": [
        2436,
        2480
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x3B3"
    },
    "942": {
      "fn": "MiniChefV2.massUpdatePools",
      "offset": [
        2436,
        2480
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "943": {
      "fn": "MiniChefV2.massUpdatePools",
      "offset": [
        2436,
        2480
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "945": {
      "fn": "MiniChefV2.massUpdatePools",
      "offset": [
        2436,
        2480
      ],
      "op": "DUP1",
      "path": "28"
    },
    "946": {
      "fn": "MiniChefV2.massUpdatePools",
      "offset": [
        2436,
        2480
      ],
      "op": "REVERT",
      "path": "28"
    },
    "947": {
      "fn": "MiniChefV2.massUpdatePools",
      "offset": [
        2436,
        2480
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "948": {
      "op": "POP"
    },
    "949": {
      "offset": [
        2436,
        2480
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x3C7"
    },
    "952": {
      "fn": "MiniChefV2.massUpdatePools",
      "offset": [
        2436,
        2480
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x3C2"
    },
    "955": {
      "fn": "MiniChefV2.massUpdatePools",
      "offset": [
        2436,
        2480
      ],
      "op": "CALLDATASIZE",
      "path": "28"
    },
    "956": {
      "fn": "MiniChefV2.massUpdatePools",
      "offset": [
        2436,
        2480
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x4"
    },
    "958": {
      "fn": "MiniChefV2.massUpdatePools",
      "offset": [
        2436,
        2480
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x21BB"
    },
    "961": {
      "fn": "MiniChefV2.massUpdatePools",
      "jump": "i",
      "offset": [
        2436,
        2480
      ],
      "op": "JUMP",
      "path": "28"
    },
    "962": {
      "fn": "MiniChefV2.massUpdatePools",
      "offset": [
        2436,
        2480
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "963": {
      "fn": "MiniChefV2.massUpdatePools",
      "offset": [
        2436,
        2480
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x13BE"
    },
    "966": {
      "fn": "MiniChefV2.massUpdatePools",
      "jump": "i",
      "offset": [
        2436,
        2480
      ],
      "op": "JUMP",
      "path": "28"
    },
    "967": {
      "fn": "MiniChefV2.massUpdatePools",
      "offset": [
        2436,
        2480
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "968": {
      "fn": "MiniChefV2.massUpdatePools",
      "offset": [
        2436,
        2480
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "970": {
      "fn": "MiniChefV2.massUpdatePools",
      "offset": [
        2436,
        2480
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "971": {
      "fn": "MiniChefV2.massUpdatePools",
      "offset": [
        2436,
        2480
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x20B"
    },
    "974": {
      "fn": "MiniChefV2.massUpdatePools",
      "offset": [
        2436,
        2480
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "975": {
      "fn": "MiniChefV2.massUpdatePools",
      "offset": [
        2436,
        2480
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "976": {
      "fn": "MiniChefV2.massUpdatePools",
      "offset": [
        2436,
        2480
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x25CB"
    },
    "979": {
      "fn": "MiniChefV2.massUpdatePools",
      "jump": "i",
      "offset": [
        2436,
        2480
      ],
      "op": "JUMP",
      "path": "28"
    },
    "980": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2467,
        2736
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "981": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2467,
        2736
      ],
      "op": "CALLVALUE",
      "path": "8"
    },
    "982": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2467,
        2736
      ],
      "op": "DUP1",
      "path": "8"
    },
    "983": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2467,
        2736
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "984": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2467,
        2736
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x3E0"
    },
    "987": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2467,
        2736
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "988": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2467,
        2736
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "990": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2467,
        2736
      ],
      "op": "DUP1",
      "path": "8"
    },
    "991": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2467,
        2736
      ],
      "op": "REVERT",
      "path": "8"
    },
    "992": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2467,
        2736
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "993": {
      "op": "POP"
    },
    "994": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2467,
        2736
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1E7"
    },
    "997": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2467,
        2736
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x3EF"
    },
    "1000": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2467,
        2736
      ],
      "op": "CALLDATASIZE",
      "path": "8"
    },
    "1001": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2467,
        2736
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "1003": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2467,
        2736
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x22E1"
    },
    "1006": {
      "fn": "BoringBatchable.permitToken",
      "jump": "i",
      "offset": [
        2467,
        2736
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1007": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2467,
        2736
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1008": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2467,
        2736
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x13D3"
    },
    "1011": {
      "fn": "BoringBatchable.permitToken",
      "jump": "i",
      "offset": [
        2467,
        2736
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1012": {
      "offset": [
        1987,
        2016
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "1013": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        1987,
        2016
      ],
      "op": "CALLVALUE",
      "path": "28"
    },
    "1014": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        1987,
        2016
      ],
      "op": "DUP1",
      "path": "28"
    },
    "1015": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        1987,
        2016
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "1016": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        1987,
        2016
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x400"
    },
    "1019": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        1987,
        2016
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "1020": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        1987,
        2016
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "1022": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        1987,
        2016
      ],
      "op": "DUP1",
      "path": "28"
    },
    "1023": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        1987,
        2016
      ],
      "op": "REVERT",
      "path": "28"
    },
    "1024": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        1987,
        2016
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "1025": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        1987,
        2016
      ],
      "op": "POP",
      "path": "28"
    },
    "1026": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        1987,
        2016
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x39A"
    },
    "1029": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        1987,
        2016
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1447"
    },
    "1032": {
      "fn": "BoringBatchable.permitToken",
      "jump": "i",
      "offset": [
        1987,
        2016
      ],
      "op": "JUMP",
      "path": "28"
    },
    "1033": {
      "fn": "MiniChefV2.set",
      "offset": [
        5089,
        5495
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "1034": {
      "fn": "MiniChefV2.set",
      "offset": [
        5089,
        5495
      ],
      "op": "CALLVALUE",
      "path": "28"
    },
    "1035": {
      "fn": "MiniChefV2.set",
      "offset": [
        5089,
        5495
      ],
      "op": "DUP1",
      "path": "28"
    },
    "1036": {
      "fn": "MiniChefV2.set",
      "offset": [
        5089,
        5495
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "1037": {
      "fn": "MiniChefV2.set",
      "offset": [
        5089,
        5495
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x415"
    },
    "1040": {
      "fn": "MiniChefV2.set",
      "offset": [
        5089,
        5495
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "1041": {
      "fn": "MiniChefV2.set",
      "offset": [
        5089,
        5495
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "1043": {
      "fn": "MiniChefV2.set",
      "offset": [
        5089,
        5495
      ],
      "op": "DUP1",
      "path": "28"
    },
    "1044": {
      "fn": "MiniChefV2.set",
      "offset": [
        5089,
        5495
      ],
      "op": "REVERT",
      "path": "28"
    },
    "1045": {
      "fn": "MiniChefV2.set",
      "offset": [
        5089,
        5495
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "1046": {
      "op": "POP"
    },
    "1047": {
      "fn": "MiniChefV2.set",
      "offset": [
        5089,
        5495
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1E7"
    },
    "1050": {
      "fn": "MiniChefV2.set",
      "offset": [
        5089,
        5495
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x424"
    },
    "1053": {
      "fn": "MiniChefV2.set",
      "offset": [
        5089,
        5495
      ],
      "op": "CALLDATASIZE",
      "path": "28"
    },
    "1054": {
      "fn": "MiniChefV2.set",
      "offset": [
        5089,
        5495
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x4"
    },
    "1056": {
      "fn": "MiniChefV2.set",
      "offset": [
        5089,
        5495
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x24C4"
    },
    "1059": {
      "fn": "MiniChefV2.set",
      "jump": "i",
      "offset": [
        5089,
        5495
      ],
      "op": "JUMP",
      "path": "28"
    },
    "1060": {
      "fn": "MiniChefV2.set",
      "offset": [
        5089,
        5495
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "1061": {
      "fn": "MiniChefV2.set",
      "offset": [
        5089,
        5495
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1456"
    },
    "1064": {
      "fn": "MiniChefV2.set",
      "jump": "i",
      "offset": [
        5089,
        5495
      ],
      "op": "JUMP",
      "path": "28"
    },
    "1065": {
      "offset": [
        288,
        308
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1066": {
      "fn": "MiniChefV2.set",
      "offset": [
        288,
        308
      ],
      "op": "CALLVALUE",
      "path": "11"
    },
    "1067": {
      "fn": "MiniChefV2.set",
      "offset": [
        288,
        308
      ],
      "op": "DUP1",
      "path": "11"
    },
    "1068": {
      "fn": "MiniChefV2.set",
      "offset": [
        288,
        308
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "1069": {
      "fn": "MiniChefV2.set",
      "offset": [
        288,
        308
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x435"
    },
    "1072": {
      "fn": "MiniChefV2.set",
      "offset": [
        288,
        308
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "1073": {
      "fn": "MiniChefV2.set",
      "offset": [
        288,
        308
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "1075": {
      "fn": "MiniChefV2.set",
      "offset": [
        288,
        308
      ],
      "op": "DUP1",
      "path": "11"
    },
    "1076": {
      "fn": "MiniChefV2.set",
      "offset": [
        288,
        308
      ],
      "op": "REVERT",
      "path": "11"
    },
    "1077": {
      "fn": "MiniChefV2.set",
      "offset": [
        288,
        308
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1078": {
      "fn": "MiniChefV2.set",
      "offset": [
        288,
        308
      ],
      "op": "POP",
      "path": "11"
    },
    "1079": {
      "fn": "MiniChefV2.set",
      "offset": [
        288,
        308
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x39A"
    },
    "1082": {
      "fn": "MiniChefV2.set",
      "offset": [
        288,
        308
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x15C3"
    },
    "1085": {
      "fn": "MiniChefV2.set",
      "jump": "i",
      "offset": [
        288,
        308
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1086": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        9457,
        10128
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "1087": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        9457,
        10128
      ],
      "op": "CALLVALUE",
      "path": "28"
    },
    "1088": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        9457,
        10128
      ],
      "op": "DUP1",
      "path": "28"
    },
    "1089": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        9457,
        10128
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "1090": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        9457,
        10128
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x44A"
    },
    "1093": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        9457,
        10128
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "1094": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        9457,
        10128
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "1096": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        9457,
        10128
      ],
      "op": "DUP1",
      "path": "28"
    },
    "1097": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        9457,
        10128
      ],
      "op": "REVERT",
      "path": "28"
    },
    "1098": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        9457,
        10128
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "1099": {
      "op": "POP"
    },
    "1100": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        9457,
        10128
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1E7"
    },
    "1103": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        9457,
        10128
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x459"
    },
    "1106": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        9457,
        10128
      ],
      "op": "CALLDATASIZE",
      "path": "28"
    },
    "1107": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        9457,
        10128
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x4"
    },
    "1109": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        9457,
        10128
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x2497"
    },
    "1112": {
      "fn": "MiniChefV2.deposit",
      "jump": "i",
      "offset": [
        9457,
        10128
      ],
      "op": "JUMP",
      "path": "28"
    },
    "1113": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        9457,
        10128
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "1114": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        9457,
        10128
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x15D2"
    },
    "1117": {
      "fn": "MiniChefV2.deposit",
      "jump": "i",
      "offset": [
        9457,
        10128
      ],
      "op": "JUMP",
      "path": "28"
    },
    "1118": {
      "offset": [
        2337,
        2403
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "1119": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        2337,
        2403
      ],
      "op": "CALLVALUE",
      "path": "28"
    },
    "1120": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        2337,
        2403
      ],
      "op": "DUP1",
      "path": "28"
    },
    "1121": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        2337,
        2403
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "1122": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        2337,
        2403
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x46A"
    },
    "1125": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        2337,
        2403
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "1126": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        2337,
        2403
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "1128": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        2337,
        2403
      ],
      "op": "DUP1",
      "path": "28"
    },
    "1129": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        2337,
        2403
      ],
      "op": "REVERT",
      "path": "28"
    },
    "1130": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        2337,
        2403
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "1131": {
      "op": "POP"
    },
    "1132": {
      "offset": [
        2337,
        2403
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x47E"
    },
    "1135": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        2337,
        2403
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x479"
    },
    "1138": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        2337,
        2403
      ],
      "op": "CALLDATASIZE",
      "path": "28"
    },
    "1139": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        2337,
        2403
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x4"
    },
    "1141": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        2337,
        2403
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x2432"
    },
    "1144": {
      "fn": "MiniChefV2.deposit",
      "jump": "i",
      "offset": [
        2337,
        2403
      ],
      "op": "JUMP",
      "path": "28"
    },
    "1145": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        2337,
        2403
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "1146": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        2337,
        2403
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x175D"
    },
    "1149": {
      "fn": "MiniChefV2.deposit",
      "jump": "i",
      "offset": [
        2337,
        2403
      ],
      "op": "JUMP",
      "path": "28"
    },
    "1150": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        2337,
        2403
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "1151": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        2337,
        2403
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "1153": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        2337,
        2403
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "1154": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        2337,
        2403
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x20B"
    },
    "1157": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        2337,
        2403
      ],
      "op": "SWAP3",
      "path": "28"
    },
    "1158": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        2337,
        2403
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "1159": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        2337,
        2403
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "1160": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        2337,
        2403
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x2A1B"
    },
    "1163": {
      "fn": "MiniChefV2.deposit",
      "jump": "i",
      "offset": [
        2337,
        2403
      ],
      "op": "JUMP",
      "path": "28"
    },
    "1164": {
      "fn": "MiniChefV2.setSushiPerSecond",
      "offset": [
        5676,
        5843
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "1165": {
      "fn": "MiniChefV2.setSushiPerSecond",
      "offset": [
        5676,
        5843
      ],
      "op": "CALLVALUE",
      "path": "28"
    },
    "1166": {
      "fn": "MiniChefV2.setSushiPerSecond",
      "offset": [
        5676,
        5843
      ],
      "op": "DUP1",
      "path": "28"
    },
    "1167": {
      "fn": "MiniChefV2.setSushiPerSecond",
      "offset": [
        5676,
        5843
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "1168": {
      "fn": "MiniChefV2.setSushiPerSecond",
      "offset": [
        5676,
        5843
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x498"
    },
    "1171": {
      "fn": "MiniChefV2.setSushiPerSecond",
      "offset": [
        5676,
        5843
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "1172": {
      "fn": "MiniChefV2.setSushiPerSecond",
      "offset": [
        5676,
        5843
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "1174": {
      "fn": "MiniChefV2.setSushiPerSecond",
      "offset": [
        5676,
        5843
      ],
      "op": "DUP1",
      "path": "28"
    },
    "1175": {
      "fn": "MiniChefV2.setSushiPerSecond",
      "offset": [
        5676,
        5843
      ],
      "op": "REVERT",
      "path": "28"
    },
    "1176": {
      "fn": "MiniChefV2.setSushiPerSecond",
      "offset": [
        5676,
        5843
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "1177": {
      "op": "POP"
    },
    "1178": {
      "fn": "MiniChefV2.setSushiPerSecond",
      "offset": [
        5676,
        5843
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1E7"
    },
    "1181": {
      "fn": "MiniChefV2.setSushiPerSecond",
      "offset": [
        5676,
        5843
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x4A7"
    },
    "1184": {
      "fn": "MiniChefV2.setSushiPerSecond",
      "offset": [
        5676,
        5843
      ],
      "op": "CALLDATASIZE",
      "path": "28"
    },
    "1185": {
      "fn": "MiniChefV2.setSushiPerSecond",
      "offset": [
        5676,
        5843
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x4"
    },
    "1187": {
      "fn": "MiniChefV2.setSushiPerSecond",
      "offset": [
        5676,
        5843
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x2402"
    },
    "1190": {
      "fn": "MiniChefV2.setSushiPerSecond",
      "jump": "i",
      "offset": [
        5676,
        5843
      ],
      "op": "JUMP",
      "path": "28"
    },
    "1191": {
      "fn": "MiniChefV2.setSushiPerSecond",
      "offset": [
        5676,
        5843
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "1192": {
      "fn": "MiniChefV2.setSushiPerSecond",
      "offset": [
        5676,
        5843
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1781"
    },
    "1195": {
      "fn": "MiniChefV2.setSushiPerSecond",
      "jump": "i",
      "offset": [
        5676,
        5843
      ],
      "op": "JUMP",
      "path": "28"
    },
    "1196": {
      "offset": [
        2617,
        2646
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "1197": {
      "fn": "MiniChefV2.setSushiPerSecond",
      "offset": [
        2617,
        2646
      ],
      "op": "CALLVALUE",
      "path": "28"
    },
    "1198": {
      "fn": "MiniChefV2.setSushiPerSecond",
      "offset": [
        2617,
        2646
      ],
      "op": "DUP1",
      "path": "28"
    },
    "1199": {
      "fn": "MiniChefV2.setSushiPerSecond",
      "offset": [
        2617,
        2646
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "1200": {
      "fn": "MiniChefV2.setSushiPerSecond",
      "offset": [
        2617,
        2646
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x4B8"
    },
    "1203": {
      "fn": "MiniChefV2.setSushiPerSecond",
      "offset": [
        2617,
        2646
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "1204": {
      "fn": "MiniChefV2.setSushiPerSecond",
      "offset": [
        2617,
        2646
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "1206": {
      "fn": "MiniChefV2.setSushiPerSecond",
      "offset": [
        2617,
        2646
      ],
      "op": "DUP1",
      "path": "28"
    },
    "1207": {
      "fn": "MiniChefV2.setSushiPerSecond",
      "offset": [
        2617,
        2646
      ],
      "op": "REVERT",
      "path": "28"
    },
    "1208": {
      "fn": "MiniChefV2.setSushiPerSecond",
      "offset": [
        2617,
        2646
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "1209": {
      "fn": "MiniChefV2.setSushiPerSecond",
      "offset": [
        2617,
        2646
      ],
      "op": "POP",
      "path": "28"
    },
    "1210": {
      "fn": "MiniChefV2.setSushiPerSecond",
      "offset": [
        2617,
        2646
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1FE"
    },
    "1213": {
      "fn": "MiniChefV2.setSushiPerSecond",
      "offset": [
        2617,
        2646
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x17EB"
    },
    "1216": {
      "fn": "MiniChefV2.setSushiPerSecond",
      "jump": "i",
      "offset": [
        2617,
        2646
      ],
      "op": "JUMP",
      "path": "28"
    },
    "1217": {
      "offset": [
        1847,
        1876
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "1218": {
      "fn": "MiniChefV2.setSushiPerSecond",
      "offset": [
        1847,
        1876
      ],
      "op": "CALLVALUE",
      "path": "28"
    },
    "1219": {
      "fn": "MiniChefV2.setSushiPerSecond",
      "offset": [
        1847,
        1876
      ],
      "op": "DUP1",
      "path": "28"
    },
    "1220": {
      "fn": "MiniChefV2.setSushiPerSecond",
      "offset": [
        1847,
        1876
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "1221": {
      "fn": "MiniChefV2.setSushiPerSecond",
      "offset": [
        1847,
        1876
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x4CD"
    },
    "1224": {
      "fn": "MiniChefV2.setSushiPerSecond",
      "offset": [
        1847,
        1876
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "1225": {
      "fn": "MiniChefV2.setSushiPerSecond",
      "offset": [
        1847,
        1876
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "1227": {
      "fn": "MiniChefV2.setSushiPerSecond",
      "offset": [
        1847,
        1876
      ],
      "op": "DUP1",
      "path": "28"
    },
    "1228": {
      "fn": "MiniChefV2.setSushiPerSecond",
      "offset": [
        1847,
        1876
      ],
      "op": "REVERT",
      "path": "28"
    },
    "1229": {
      "fn": "MiniChefV2.setSushiPerSecond",
      "offset": [
        1847,
        1876
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "1230": {
      "fn": "MiniChefV2.setSushiPerSecond",
      "offset": [
        1847,
        1876
      ],
      "op": "POP",
      "path": "28"
    },
    "1231": {
      "fn": "MiniChefV2.setSushiPerSecond",
      "offset": [
        1847,
        1876
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x39A"
    },
    "1234": {
      "fn": "MiniChefV2.setSushiPerSecond",
      "offset": [
        1847,
        1876
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x17F1"
    },
    "1237": {
      "fn": "MiniChefV2.setSushiPerSecond",
      "jump": "i",
      "offset": [
        1847,
        1876
      ],
      "op": "JUMP",
      "path": "28"
    },
    "1238": {
      "fn": "MiniChefV2.add",
      "offset": [
        4094,
        4702
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "1239": {
      "fn": "MiniChefV2.add",
      "offset": [
        4094,
        4702
      ],
      "op": "CALLVALUE",
      "path": "28"
    },
    "1240": {
      "fn": "MiniChefV2.add",
      "offset": [
        4094,
        4702
      ],
      "op": "DUP1",
      "path": "28"
    },
    "1241": {
      "fn": "MiniChefV2.add",
      "offset": [
        4094,
        4702
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "1242": {
      "fn": "MiniChefV2.add",
      "offset": [
        4094,
        4702
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x4E2"
    },
    "1245": {
      "fn": "MiniChefV2.add",
      "offset": [
        4094,
        4702
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "1246": {
      "fn": "MiniChefV2.add",
      "offset": [
        4094,
        4702
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "1248": {
      "fn": "MiniChefV2.add",
      "offset": [
        4094,
        4702
      ],
      "op": "DUP1",
      "path": "28"
    },
    "1249": {
      "fn": "MiniChefV2.add",
      "offset": [
        4094,
        4702
      ],
      "op": "REVERT",
      "path": "28"
    },
    "1250": {
      "fn": "MiniChefV2.add",
      "offset": [
        4094,
        4702
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "1251": {
      "op": "POP"
    },
    "1252": {
      "fn": "MiniChefV2.add",
      "offset": [
        4094,
        4702
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1E7"
    },
    "1255": {
      "fn": "MiniChefV2.add",
      "offset": [
        4094,
        4702
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x4F1"
    },
    "1258": {
      "fn": "MiniChefV2.add",
      "offset": [
        4094,
        4702
      ],
      "op": "CALLDATASIZE",
      "path": "28"
    },
    "1259": {
      "fn": "MiniChefV2.add",
      "offset": [
        4094,
        4702
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x4"
    },
    "1261": {
      "fn": "MiniChefV2.add",
      "offset": [
        4094,
        4702
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x2461"
    },
    "1264": {
      "fn": "MiniChefV2.add",
      "jump": "i",
      "offset": [
        4094,
        4702
      ],
      "op": "JUMP",
      "path": "28"
    },
    "1265": {
      "fn": "MiniChefV2.add",
      "offset": [
        4094,
        4702
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "1266": {
      "fn": "MiniChefV2.add",
      "offset": [
        4094,
        4702
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1815"
    },
    "1269": {
      "fn": "MiniChefV2.add",
      "jump": "i",
      "offset": [
        4094,
        4702
      ],
      "op": "JUMP",
      "path": "28"
    },
    "1270": {
      "offset": [
        2246,
        2273
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "1271": {
      "fn": "MiniChefV2.add",
      "offset": [
        2246,
        2273
      ],
      "op": "CALLVALUE",
      "path": "28"
    },
    "1272": {
      "fn": "MiniChefV2.add",
      "offset": [
        2246,
        2273
      ],
      "op": "DUP1",
      "path": "28"
    },
    "1273": {
      "fn": "MiniChefV2.add",
      "offset": [
        2246,
        2273
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "1274": {
      "fn": "MiniChefV2.add",
      "offset": [
        2246,
        2273
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x502"
    },
    "1277": {
      "fn": "MiniChefV2.add",
      "offset": [
        2246,
        2273
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "1278": {
      "fn": "MiniChefV2.add",
      "offset": [
        2246,
        2273
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "1280": {
      "fn": "MiniChefV2.add",
      "offset": [
        2246,
        2273
      ],
      "op": "DUP1",
      "path": "28"
    },
    "1281": {
      "fn": "MiniChefV2.add",
      "offset": [
        2246,
        2273
      ],
      "op": "REVERT",
      "path": "28"
    },
    "1282": {
      "fn": "MiniChefV2.add",
      "offset": [
        2246,
        2273
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "1283": {
      "op": "POP"
    },
    "1284": {
      "offset": [
        2246,
        2273
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x39A"
    },
    "1287": {
      "fn": "MiniChefV2.add",
      "offset": [
        2246,
        2273
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x511"
    },
    "1290": {
      "fn": "MiniChefV2.add",
      "offset": [
        2246,
        2273
      ],
      "op": "CALLDATASIZE",
      "path": "28"
    },
    "1291": {
      "fn": "MiniChefV2.add",
      "offset": [
        2246,
        2273
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x4"
    },
    "1293": {
      "fn": "MiniChefV2.add",
      "offset": [
        2246,
        2273
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x2402"
    },
    "1296": {
      "fn": "MiniChefV2.add",
      "jump": "i",
      "offset": [
        2246,
        2273
      ],
      "op": "JUMP",
      "path": "28"
    },
    "1297": {
      "fn": "MiniChefV2.add",
      "offset": [
        2246,
        2273
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "1298": {
      "fn": "MiniChefV2.add",
      "offset": [
        2246,
        2273
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1A3B"
    },
    "1301": {
      "fn": "MiniChefV2.add",
      "jump": "i",
      "offset": [
        2246,
        2273
      ],
      "op": "JUMP",
      "path": "28"
    },
    "1302": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        12226,
        13200
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "1303": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        12226,
        13200
      ],
      "op": "CALLVALUE",
      "path": "28"
    },
    "1304": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        12226,
        13200
      ],
      "op": "DUP1",
      "path": "28"
    },
    "1305": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        12226,
        13200
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "1306": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        12226,
        13200
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x522"
    },
    "1309": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        12226,
        13200
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "1310": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        12226,
        13200
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "1312": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        12226,
        13200
      ],
      "op": "DUP1",
      "path": "28"
    },
    "1313": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        12226,
        13200
      ],
      "op": "REVERT",
      "path": "28"
    },
    "1314": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        12226,
        13200
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "1315": {
      "op": "POP"
    },
    "1316": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        12226,
        13200
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1E7"
    },
    "1319": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        12226,
        13200
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x531"
    },
    "1322": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        12226,
        13200
      ],
      "op": "CALLDATASIZE",
      "path": "28"
    },
    "1323": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        12226,
        13200
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x4"
    },
    "1325": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        12226,
        13200
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x2497"
    },
    "1328": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "jump": "i",
      "offset": [
        12226,
        13200
      ],
      "op": "JUMP",
      "path": "28"
    },
    "1329": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        12226,
        13200
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "1330": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        12226,
        13200
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1A48"
    },
    "1333": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "jump": "i",
      "offset": [
        12226,
        13200
      ],
      "op": "JUMP",
      "path": "28"
    },
    "1334": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1743,
        2081
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1335": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1743,
        2081
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1E7"
    },
    "1338": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1743,
        2081
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x544"
    },
    "1341": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1743,
        2081
      ],
      "op": "CALLDATASIZE",
      "path": "8"
    },
    "1342": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1743,
        2081
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "1344": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1743,
        2081
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x2221"
    },
    "1347": {
      "fn": "BaseBoringBatchable.batch",
      "jump": "i",
      "offset": [
        1743,
        2081
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1348": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1743,
        2081
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1349": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1743,
        2081
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1C7B"
    },
    "1352": {
      "fn": "BaseBoringBatchable.batch",
      "jump": "i",
      "offset": [
        1743,
        2081
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1353": {
      "offset": [
        314,
        341
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1354": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        314,
        341
      ],
      "op": "CALLVALUE",
      "path": "11"
    },
    "1355": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        314,
        341
      ],
      "op": "DUP1",
      "path": "11"
    },
    "1356": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        314,
        341
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "1357": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        314,
        341
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x555"
    },
    "1360": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        314,
        341
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "1361": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        314,
        341
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "1363": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        314,
        341
      ],
      "op": "DUP1",
      "path": "11"
    },
    "1364": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        314,
        341
      ],
      "op": "REVERT",
      "path": "11"
    },
    "1365": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        314,
        341
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1366": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        314,
        341
      ],
      "op": "POP",
      "path": "11"
    },
    "1367": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        314,
        341
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x39A"
    },
    "1370": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        314,
        341
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1D38"
    },
    "1373": {
      "fn": "BaseBoringBatchable.batch",
      "jump": "i",
      "offset": [
        314,
        341
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1374": {
      "fn": "BoringOwnable.transferOwnership",
      "offset": [
        1124,
        1613
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1375": {
      "offset": [
        2146,
        2151
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "1377": {
      "fn": "BoringOwnable.transferOwnership",
      "offset": [
        2146,
        2151
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "1378": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1380": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1382": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1384": {
      "op": "SHL"
    },
    "1385": {
      "op": "SUB"
    },
    "1386": {
      "offset": [
        2146,
        2151
      ],
      "op": "AND",
      "path": "11"
    },
    "1387": {
      "offset": [
        2132,
        2142
      ],
      "op": "CALLER",
      "path": "11"
    },
    "1388": {
      "offset": [
        2132,
        2151
      ],
      "op": "EQ",
      "path": "11"
    },
    "1389": {
      "offset": [
        2124,
        2188
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x591"
    },
    "1392": {
      "offset": [
        2124,
        2188
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "1393": {
      "fn": "BoringOwnable.transferOwnership",
      "offset": [
        2124,
        2188
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "1395": {
      "fn": "BoringOwnable.transferOwnership",
      "offset": [
        2124,
        2188
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "1396": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1400": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1402": {
      "op": "SHL"
    },
    "1403": {
      "offset": [
        2124,
        2188
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1404": {
      "fn": "BoringOwnable.transferOwnership",
      "offset": [
        2124,
        2188
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "1405": {
      "fn": "BoringOwnable.transferOwnership",
      "offset": [
        2124,
        2188
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "1407": {
      "fn": "BoringOwnable.transferOwnership",
      "offset": [
        2124,
        2188
      ],
      "op": "ADD",
      "path": "11"
    },
    "1408": {
      "fn": "BoringOwnable.transferOwnership",
      "offset": [
        2124,
        2188
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x588"
    },
    "1411": {
      "fn": "BoringOwnable.transferOwnership",
      "offset": [
        2124,
        2188
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1412": {
      "fn": "BoringOwnable.transferOwnership",
      "offset": [
        2124,
        2188
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x27BB"
    },
    "1415": {
      "fn": "BoringOwnable.transferOwnership",
      "jump": "i",
      "offset": [
        2124,
        2188
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1416": {
      "fn": "BoringOwnable.transferOwnership",
      "offset": [
        2124,
        2188
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1417": {
      "fn": "BoringOwnable.transferOwnership",
      "offset": [
        2124,
        2188
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "1419": {
      "fn": "BoringOwnable.transferOwnership",
      "offset": [
        2124,
        2188
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "1420": {
      "fn": "BoringOwnable.transferOwnership",
      "offset": [
        2124,
        2188
      ],
      "op": "DUP1",
      "path": "11"
    },
    "1421": {
      "fn": "BoringOwnable.transferOwnership",
      "offset": [
        2124,
        2188
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "1422": {
      "fn": "BoringOwnable.transferOwnership",
      "offset": [
        2124,
        2188
      ],
      "op": "SUB",
      "path": "11"
    },
    "1423": {
      "fn": "BoringOwnable.transferOwnership",
      "offset": [
        2124,
        2188
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1424": {
      "fn": "BoringOwnable.transferOwnership",
      "offset": [
        2124,
        2188
      ],
      "op": "REVERT",
      "path": "11"
    },
    "1425": {
      "fn": "BoringOwnable.transferOwnership",
      "offset": [
        2124,
        2188
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1426": {
      "branch": 115,
      "fn": "BoringOwnable.transferOwnership",
      "offset": [
        1258,
        1264
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1427": {
      "fn": "BoringOwnable.transferOwnership",
      "offset": [
        1254,
        1607
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "1428": {
      "fn": "BoringOwnable.transferOwnership",
      "offset": [
        1254,
        1607
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x62C"
    },
    "1431": {
      "branch": 115,
      "fn": "BoringOwnable.transferOwnership",
      "offset": [
        1254,
        1607
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "1432": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1434": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1436": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1438": {
      "op": "SHL"
    },
    "1439": {
      "op": "SUB"
    },
    "1440": {
      "fn": "BoringOwnable.transferOwnership",
      "offset": [
        1310,
        1332
      ],
      "op": "DUP4",
      "path": "11",
      "statement": 0
    },
    "1441": {
      "fn": "BoringOwnable.transferOwnership",
      "offset": [
        1310,
        1332
      ],
      "op": "AND",
      "path": "11"
    },
    "1442": {
      "fn": "BoringOwnable.transferOwnership",
      "offset": [
        1310,
        1332
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "1443": {
      "fn": "BoringOwnable.transferOwnership",
      "offset": [
        1310,
        1332
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "1444": {
      "branch": 116,
      "fn": "BoringOwnable.transferOwnership",
      "offset": [
        1310,
        1332
      ],
      "op": "DUP1",
      "path": "11"
    },
    "1445": {
      "fn": "BoringOwnable.transferOwnership",
      "offset": [
        1310,
        1344
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x5AB"
    },
    "1448": {
      "branch": 116,
      "fn": "BoringOwnable.transferOwnership",
      "offset": [
        1310,
        1344
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "1449": {
      "fn": "BoringOwnable.transferOwnership",
      "offset": [
        1310,
        1344
      ],
      "op": "POP",
      "path": "11"
    },
    "1450": {
      "branch": 117,
      "fn": "BoringOwnable.transferOwnership",
      "offset": [
        1336,
        1344
      ],
      "op": "DUP1",
      "path": "11"
    },
    "1451": {
      "fn": "BoringOwnable.transferOwnership",
      "offset": [
        1310,
        1344
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1452": {
      "fn": "BoringOwnable.transferOwnership",
      "offset": [
        1302,
        1370
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x5C7"
    },
    "1455": {
      "branch": 117,
      "fn": "BoringOwnable.transferOwnership",
      "offset": [
        1302,
        1370
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "1456": {
      "fn": "BoringOwnable.transferOwnership",
      "offset": [
        1302,
        1370
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "1458": {
      "fn": "BoringOwnable.transferOwnership",
      "offset": [
        1302,
        1370
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "1459": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1463": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1465": {
      "op": "SHL"
    },
    "1466": {
      "fn": "BoringOwnable.transferOwnership",
      "offset": [
        1302,
        1370
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1467": {
      "fn": "BoringOwnable.transferOwnership",
      "offset": [
        1302,
        1370
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "1468": {
      "fn": "BoringOwnable.transferOwnership",
      "offset": [
        1302,
        1370
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "1470": {
      "fn": "BoringOwnable.transferOwnership",
      "offset": [
        1302,
        1370
      ],
      "op": "ADD",
      "path": "11"
    },
    "1471": {
      "fn": "BoringOwnable.transferOwnership",
      "offset": [
        1302,
        1370
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x588"
    },
    "1474": {
      "fn": "BoringOwnable.transferOwnership",
      "offset": [
        1302,
        1370
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1475": {
      "fn": "BoringOwnable.transferOwnership",
      "offset": [
        1302,
        1370
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x26D5"
    },
    "1478": {
      "fn": "BoringOwnable.transferOwnership",
      "jump": "i",
      "offset": [
        1302,
        1370
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1479": {
      "fn": "BoringOwnable.transferOwnership",
      "offset": [
        1302,
        1370
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1480": {
      "fn": "BoringOwnable.transferOwnership",
      "offset": [
        1434,
        1439
      ],
      "op": "PUSH1",
      "path": "11",
      "statement": 1,
      "value": "0x0"
    },
    "1482": {
      "fn": "BoringOwnable.transferOwnership",
      "offset": [
        1434,
        1439
      ],
      "op": "DUP1",
      "path": "11"
    },
    "1483": {
      "fn": "BoringOwnable.transferOwnership",
      "offset": [
        1434,
        1439
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "1484": {
      "fn": "BoringOwnable.transferOwnership",
      "offset": [
        1413,
        1450
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "1486": {
      "fn": "BoringOwnable.transferOwnership",
      "offset": [
        1413,
        1450
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "1487": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1489": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1491": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1493": {
      "op": "SHL"
    },
    "1494": {
      "op": "SUB"
    },
    "1495": {
      "fn": "BoringOwnable.transferOwnership",
      "offset": [
        1413,
        1450
      ],
      "op": "DUP1",
      "path": "11"
    },
    "1496": {
      "fn": "BoringOwnable.transferOwnership",
      "offset": [
        1413,
        1450
      ],
      "op": "DUP8",
      "path": "11"
    },
    "1497": {
      "fn": "BoringOwnable.transferOwnership",
      "offset": [
        1413,
        1450
      ],
      "op": "AND",
      "path": "11"
    },
    "1498": {
      "fn": "BoringOwnable.transferOwnership",
      "offset": [
        1413,
        1450
      ],
      "op": "SWAP4",
      "path": "11"
    },
    "1499": {
      "fn": "BoringOwnable.transferOwnership",
      "offset": [
        1434,
        1439
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "1500": {
      "fn": "BoringOwnable.transferOwnership",
      "offset": [
        1434,
        1439
      ],
      "op": "AND",
      "path": "11"
    },
    "1501": {
      "fn": "BoringOwnable.transferOwnership",
      "offset": [
        1434,
        1439
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "1502": {
      "fn": "BoringOwnable.transferOwnership",
      "offset": [
        1413,
        1450
      ],
      "op": "PUSH32",
      "path": "11",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "1535": {
      "fn": "BoringOwnable.transferOwnership",
      "offset": [
        1413,
        1450
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "1536": {
      "fn": "BoringOwnable.transferOwnership",
      "offset": [
        1413,
        1450
      ],
      "op": "LOG3",
      "path": "11"
    },
    "1537": {
      "fn": "BoringOwnable.transferOwnership",
      "offset": [
        1464,
        1469
      ],
      "op": "PUSH1",
      "path": "11",
      "statement": 2,
      "value": "0x0"
    },
    "1539": {
      "fn": "BoringOwnable.transferOwnership",
      "offset": [
        1464,
        1480
      ],
      "op": "DUP1",
      "path": "11"
    },
    "1540": {
      "fn": "BoringOwnable.transferOwnership",
      "offset": [
        1464,
        1480
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "1541": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1543": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1545": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1547": {
      "op": "SHL"
    },
    "1548": {
      "op": "SUB"
    },
    "1549": {
      "fn": "BoringOwnable.transferOwnership",
      "offset": [
        1464,
        1480
      ],
      "op": "DUP6",
      "path": "11"
    },
    "1550": {
      "fn": "BoringOwnable.transferOwnership",
      "offset": [
        1464,
        1480
      ],
      "op": "AND",
      "path": "11"
    },
    "1551": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1553": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1555": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1557": {
      "op": "SHL"
    },
    "1558": {
      "op": "SUB"
    },
    "1559": {
      "op": "NOT"
    },
    "1560": {
      "fn": "BoringOwnable.transferOwnership",
      "offset": [
        1464,
        1480
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "1561": {
      "fn": "BoringOwnable.transferOwnership",
      "offset": [
        1464,
        1480
      ],
      "op": "DUP3",
      "path": "11"
    },
    "1562": {
      "fn": "BoringOwnable.transferOwnership",
      "offset": [
        1464,
        1480
      ],
      "op": "AND",
      "path": "11"
    },
    "1563": {
      "fn": "BoringOwnable.transferOwnership",
      "offset": [
        1464,
        1480
      ],
      "op": "OR",
      "path": "11"
    },
    "1564": {
      "fn": "BoringOwnable.transferOwnership",
      "offset": [
        1464,
        1480
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1565": {
      "fn": "BoringOwnable.transferOwnership",
      "offset": [
        1464,
        1480
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "1566": {
      "fn": "BoringOwnable.transferOwnership",
      "offset": [
        1464,
        1480
      ],
      "op": "SSTORE",
      "path": "11"
    },
    "1567": {
      "fn": "BoringOwnable.transferOwnership",
      "offset": [
        1464,
        1480
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1"
    },
    "1569": {
      "fn": "BoringOwnable.transferOwnership",
      "offset": [
        1494,
        1519
      ],
      "op": "DUP1",
      "path": "11",
      "statement": 3
    },
    "1570": {
      "fn": "BoringOwnable.transferOwnership",
      "offset": [
        1494,
        1519
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "1571": {
      "fn": "BoringOwnable.transferOwnership",
      "offset": [
        1494,
        1519
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1572": {
      "fn": "BoringOwnable.transferOwnership",
      "offset": [
        1494,
        1519
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "1573": {
      "fn": "BoringOwnable.transferOwnership",
      "offset": [
        1494,
        1519
      ],
      "op": "AND",
      "path": "11"
    },
    "1574": {
      "fn": "BoringOwnable.transferOwnership",
      "offset": [
        1494,
        1519
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1575": {
      "fn": "BoringOwnable.transferOwnership",
      "offset": [
        1494,
        1519
      ],
      "op": "SSTORE",
      "path": "11"
    },
    "1576": {
      "fn": "BoringOwnable.transferOwnership",
      "offset": [
        1254,
        1607
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x648"
    },
    "1579": {
      "fn": "BoringOwnable.transferOwnership",
      "offset": [
        1254,
        1607
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1580": {
      "fn": "BoringOwnable.transferOwnership",
      "offset": [
        1254,
        1607
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1581": {
      "fn": "BoringOwnable.transferOwnership",
      "offset": [
        1573,
        1585
      ],
      "op": "PUSH1",
      "path": "11",
      "statement": 4,
      "value": "0x1"
    },
    "1583": {
      "fn": "BoringOwnable.transferOwnership",
      "offset": [
        1573,
        1596
      ],
      "op": "DUP1",
      "path": "11"
    },
    "1584": {
      "fn": "BoringOwnable.transferOwnership",
      "offset": [
        1573,
        1596
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "1585": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1587": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1589": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1591": {
      "op": "SHL"
    },
    "1592": {
      "op": "SUB"
    },
    "1593": {
      "op": "NOT"
    },
    "1594": {
      "fn": "BoringOwnable.transferOwnership",
      "offset": [
        1573,
        1596
      ],
      "op": "AND",
      "path": "11"
    },
    "1595": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1597": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1599": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1601": {
      "op": "SHL"
    },
    "1602": {
      "op": "SUB"
    },
    "1603": {
      "fn": "BoringOwnable.transferOwnership",
      "offset": [
        1573,
        1596
      ],
      "op": "DUP6",
      "path": "11"
    },
    "1604": {
      "fn": "BoringOwnable.transferOwnership",
      "offset": [
        1573,
        1596
      ],
      "op": "AND",
      "path": "11"
    },
    "1605": {
      "fn": "BoringOwnable.transferOwnership",
      "offset": [
        1573,
        1596
      ],
      "op": "OR",
      "path": "11"
    },
    "1606": {
      "fn": "BoringOwnable.transferOwnership",
      "offset": [
        1573,
        1596
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1607": {
      "fn": "BoringOwnable.transferOwnership",
      "offset": [
        1573,
        1596
      ],
      "op": "SSTORE",
      "path": "11"
    },
    "1608": {
      "fn": "BoringOwnable.transferOwnership",
      "offset": [
        1254,
        1607
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1609": {
      "fn": "BoringOwnable.transferOwnership",
      "offset": [
        1124,
        1613
      ],
      "op": "POP",
      "path": "11"
    },
    "1610": {
      "fn": "BoringOwnable.transferOwnership",
      "offset": [
        1124,
        1613
      ],
      "op": "POP",
      "path": "11"
    },
    "1611": {
      "fn": "BoringOwnable.transferOwnership",
      "offset": [
        1124,
        1613
      ],
      "op": "POP",
      "path": "11"
    },
    "1612": {
      "fn": "BoringOwnable.transferOwnership",
      "jump": "o",
      "offset": [
        1124,
        1613
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1613": {
      "fn": "MiniChefV2.poolLength",
      "offset": [
        3664,
        3762
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "1614": {
      "fn": "MiniChefV2.poolLength",
      "offset": [
        3740,
        3748
      ],
      "op": "PUSH1",
      "path": "28",
      "statement": 5,
      "value": "0x3"
    },
    "1616": {
      "fn": "MiniChefV2.poolLength",
      "offset": [
        3740,
        3755
      ],
      "op": "SLOAD",
      "path": "28"
    },
    "1617": {
      "fn": "MiniChefV2.poolLength",
      "offset": [
        3740,
        3755
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "1618": {
      "fn": "MiniChefV2.poolLength",
      "jump": "o",
      "offset": [
        3664,
        3762
      ],
      "op": "JUMP",
      "path": "28"
    },
    "1619": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        10334,
        10996
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "1620": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        10410,
        10430
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x65B"
    },
    "1623": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        10410,
        10430
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x2153"
    },
    "1626": {
      "fn": "MiniChefV2.withdraw",
      "jump": "i",
      "offset": [
        10410,
        10430
      ],
      "op": "JUMP",
      "path": "28"
    },
    "1627": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        10410,
        10430
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "1628": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        10433,
        10448
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x664"
    },
    "1631": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        10444,
        10447
      ],
      "op": "DUP5",
      "path": "28"
    },
    "1632": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        10433,
        10443
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x10DD"
    },
    "1635": {
      "fn": "MiniChefV2.withdraw",
      "jump": "i",
      "offset": [
        10433,
        10448
      ],
      "op": "JUMP",
      "path": "28"
    },
    "1636": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        10433,
        10448
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "1637": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        10458,
        10479
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "1639": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        10482,
        10495
      ],
      "op": "DUP6",
      "path": "28"
    },
    "1640": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        10482,
        10495
      ],
      "op": "DUP2",
      "path": "28"
    },
    "1641": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        10482,
        10495
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "1642": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        10482,
        10490
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x6"
    },
    "1644": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        10482,
        10495
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x20"
    },
    "1646": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        10482,
        10495
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "1647": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        10482,
        10495
      ],
      "op": "DUP2",
      "path": "28"
    },
    "1648": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        10482,
        10495
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "1649": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        10482,
        10495
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "1651": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        10482,
        10495
      ],
      "op": "DUP1",
      "path": "28"
    },
    "1652": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        10482,
        10495
      ],
      "op": "DUP4",
      "path": "28"
    },
    "1653": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        10482,
        10495
      ],
      "op": "KECCAK256",
      "path": "28"
    },
    "1654": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        10496,
        10506
      ],
      "op": "CALLER",
      "path": "28"
    },
    "1655": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        10482,
        10507
      ],
      "op": "DUP5",
      "path": "28"
    },
    "1656": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        10482,
        10507
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "1657": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        10482,
        10507
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "1658": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        10482,
        10507
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "1659": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        10482,
        10507
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "1660": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        10482,
        10507
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "1661": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        10482,
        10507
      ],
      "op": "KECCAK256",
      "path": "28"
    },
    "1662": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        10593,
        10614
      ],
      "op": "DUP2",
      "path": "28",
      "statement": 6
    },
    "1663": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        10593,
        10614
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "1664": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        10410,
        10448
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "1665": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        10410,
        10448
      ],
      "op": "SWAP3",
      "path": "28"
    },
    "1666": {
      "op": "POP"
    },
    "1667": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        10482,
        10507
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "1668": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        10555,
        10639
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x6B6"
    },
    "1671": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        10555,
        10639
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "1672": {
      "offset": [
        2699,
        2703
      ],
      "op": "PUSH5",
      "path": "28",
      "value": "0xE8D4A51000"
    },
    "1678": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        2699,
        2703
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "1679": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        10582,
        10615
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x6A2"
    },
    "1682": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        10582,
        10615
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "1683": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        10582,
        10588
      ],
      "op": "DUP8",
      "path": "28"
    },
    "1684": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        10582,
        10588
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "1685": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1687": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1689": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1691": {
      "op": "SHL"
    },
    "1692": {
      "op": "SUB"
    },
    "1693": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        10582,
        10615
      ],
      "op": "AND",
      "path": "28"
    },
    "1694": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        10582,
        10592
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1D47"
    },
    "1697": {
      "fn": "MiniChefV2.withdraw",
      "jump": "i",
      "offset": [
        10582,
        10615
      ],
      "op": "JUMP",
      "path": "28"
    },
    "1698": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        10582,
        10615
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "1699": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        10582,
        10637
      ],
      "op": "DUP2",
      "path": "28"
    },
    "1700": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        10582,
        10637
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x6A9"
    },
    "1703": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        10582,
        10637
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "1704": {
      "dev": "Division by zero",
      "fn": "MiniChefV2.withdraw",
      "offset": [
        10582,
        10637
      ],
      "op": "INVALID",
      "path": "28"
    },
    "1705": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        10582,
        10637
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "1706": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        10555,
        10570
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x1"
    },
    "1708": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        10555,
        10570
      ],
      "op": "DUP5",
      "path": "28"
    },
    "1709": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        10555,
        10570
      ],
      "op": "ADD",
      "path": "28"
    },
    "1710": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        10555,
        10570
      ],
      "op": "SLOAD",
      "path": "28"
    },
    "1711": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        10555,
        10570
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "1712": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        10582,
        10637
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "1713": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        10582,
        10637
      ],
      "op": "DIV",
      "path": "28"
    },
    "1714": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        10555,
        10574
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1D84"
    },
    "1717": {
      "fn": "MiniChefV2.withdraw",
      "jump": "i",
      "offset": [
        10555,
        10639
      ],
      "op": "JUMP",
      "path": "28"
    },
    "1718": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        10555,
        10639
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "1719": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        10537,
        10552
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x1"
    },
    "1721": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        10537,
        10552
      ],
      "op": "DUP3",
      "path": "28"
    },
    "1722": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        10537,
        10552
      ],
      "op": "ADD",
      "path": "28"
    },
    "1723": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        10537,
        10639
      ],
      "op": "SSTORE",
      "path": "28"
    },
    "1724": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        10663,
        10674
      ],
      "op": "DUP1",
      "path": "28",
      "statement": 7
    },
    "1725": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        10663,
        10674
      ],
      "op": "SLOAD",
      "path": "28"
    },
    "1726": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        10663,
        10686
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x6C7"
    },
    "1729": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        10663,
        10686
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "1730": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        10679,
        10685
      ],
      "op": "DUP6",
      "path": "28"
    },
    "1731": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        10663,
        10678
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1DD1"
    },
    "1734": {
      "fn": "MiniChefV2.withdraw",
      "jump": "i",
      "offset": [
        10663,
        10686
      ],
      "op": "JUMP",
      "path": "28"
    },
    "1735": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        10663,
        10686
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "1736": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        10649,
        10686
      ],
      "op": "DUP2",
      "path": "28"
    },
    "1737": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        10649,
        10686
      ],
      "op": "SSTORE",
      "path": "28"
    },
    "1738": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        10743,
        10751
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x5"
    },
    "1740": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        10743,
        10756
      ],
      "op": "DUP1",
      "path": "28"
    },
    "1741": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        10743,
        10756
      ],
      "op": "SLOAD",
      "path": "28"
    },
    "1742": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        10649,
        10660
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "1744": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        10649,
        10660
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "1745": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        10743,
        10751
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "1746": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        10752,
        10755
      ],
      "op": "DUP8",
      "path": "28"
    },
    "1747": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        10752,
        10755
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "1748": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        10743,
        10756
      ],
      "op": "DUP2",
      "path": "28"
    },
    "1749": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        10743,
        10756
      ],
      "op": "LT",
      "path": "28"
    },
    "1750": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        10743,
        10756
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x6DB"
    },
    "1753": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        10743,
        10756
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "1754": {
      "dev": "Index out of range",
      "fn": "MiniChefV2.withdraw",
      "offset": [
        10743,
        10756
      ],
      "op": "INVALID",
      "path": "28"
    },
    "1755": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        10743,
        10756
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "1756": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        10743,
        10756
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "1758": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        10743,
        10756
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "1759": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        10743,
        10756
      ],
      "op": "DUP3",
      "path": "28"
    },
    "1760": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        10743,
        10756
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "1761": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        10743,
        10756
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x20"
    },
    "1763": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        10743,
        10756
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "1764": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        10743,
        10756
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "1765": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        10743,
        10756
      ],
      "op": "KECCAK256",
      "path": "28"
    },
    "1766": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        10743,
        10756
      ],
      "op": "ADD",
      "path": "28"
    },
    "1767": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        10743,
        10756
      ],
      "op": "SLOAD",
      "path": "28"
    },
    "1768": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1770": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1772": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1774": {
      "op": "SHL"
    },
    "1775": {
      "op": "SUB"
    },
    "1776": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        10743,
        10756
      ],
      "op": "AND",
      "path": "28"
    },
    "1777": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        10743,
        10756
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "1778": {
      "op": "POP"
    },
    "1779": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        10770,
        10802
      ],
      "op": "DUP1",
      "path": "28"
    },
    "1780": {
      "branch": 84,
      "fn": "MiniChefV2.withdraw",
      "offset": [
        10770,
        10802
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "1781": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        10766,
        10889
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x761"
    },
    "1784": {
      "branch": 84,
      "fn": "MiniChefV2.withdraw",
      "offset": [
        10766,
        10889
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "1785": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        10866,
        10877
      ],
      "op": "DUP2",
      "path": "28",
      "statement": 8
    },
    "1786": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        10866,
        10877
      ],
      "op": "SLOAD",
      "path": "28"
    },
    "1787": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        10818,
        10878
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "1789": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        10818,
        10878
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "1790": {
      "op": "PUSH4",
      "value": "0x45FB1BA1"
    },
    "1795": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "1797": {
      "op": "SHL"
    },
    "1798": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        10818,
        10878
      ],
      "op": "DUP2",
      "path": "28"
    },
    "1799": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        10818,
        10878
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "1800": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1802": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1804": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1806": {
      "op": "SHL"
    },
    "1807": {
      "op": "SUB"
    },
    "1808": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        10818,
        10841
      ],
      "op": "DUP4",
      "path": "28"
    },
    "1809": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        10818,
        10841
      ],
      "op": "AND",
      "path": "28"
    },
    "1810": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        10818,
        10841
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "1811": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        10818,
        10841
      ],
      "op": "PUSH4",
      "path": "28",
      "value": "0x8BF63742"
    },
    "1816": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        10818,
        10841
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "1817": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        10818,
        10878
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x72E"
    },
    "1820": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        10818,
        10878
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "1821": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        10842,
        10845
      ],
      "op": "DUP11",
      "path": "28"
    },
    "1822": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        10842,
        10845
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "1823": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        10847,
        10857
      ],
      "op": "CALLER",
      "path": "28"
    },
    "1824": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        10847,
        10857
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "1825": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        10859,
        10861
      ],
      "op": "DUP11",
      "path": "28"
    },
    "1826": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        10859,
        10861
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "1827": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        10863,
        10864
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "1829": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        10863,
        10864
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "1830": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        10866,
        10877
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "1831": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        10818,
        10878
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x4"
    },
    "1833": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        10818,
        10878
      ],
      "op": "ADD",
      "path": "28"
    },
    "1834": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        10818,
        10878
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x29DC"
    },
    "1837": {
      "fn": "MiniChefV2.withdraw",
      "jump": "i",
      "offset": [
        10818,
        10878
      ],
      "op": "JUMP",
      "path": "28"
    },
    "1838": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        10818,
        10878
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "1839": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        10818,
        10878
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "1841": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        10818,
        10878
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "1843": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        10818,
        10878
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "1844": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        10818,
        10878
      ],
      "op": "DUP1",
      "path": "28"
    },
    "1845": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        10818,
        10878
      ],
      "op": "DUP4",
      "path": "28"
    },
    "1846": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        10818,
        10878
      ],
      "op": "SUB",
      "path": "28"
    },
    "1847": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        10818,
        10878
      ],
      "op": "DUP2",
      "path": "28"
    },
    "1848": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        10818,
        10878
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "1850": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        10818,
        10878
      ],
      "op": "DUP8",
      "path": "28"
    },
    "1851": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        10818,
        10878
      ],
      "op": "DUP1",
      "path": "28"
    },
    "1852": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        10818,
        10878
      ],
      "op": "EXTCODESIZE",
      "path": "28"
    },
    "1853": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        10818,
        10878
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "1854": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        10818,
        10878
      ],
      "op": "DUP1",
      "path": "28"
    },
    "1855": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        10818,
        10878
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "1856": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        10818,
        10878
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x748"
    },
    "1859": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        10818,
        10878
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "1860": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        10818,
        10878
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "1862": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        10818,
        10878
      ],
      "op": "DUP1",
      "path": "28"
    },
    "1863": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        10818,
        10878
      ],
      "op": "REVERT",
      "path": "28"
    },
    "1864": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        10818,
        10878
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "1865": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        10818,
        10878
      ],
      "op": "POP",
      "path": "28"
    },
    "1866": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        10818,
        10878
      ],
      "op": "GAS",
      "path": "28"
    },
    "1867": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        10818,
        10878
      ],
      "op": "CALL",
      "path": "28"
    },
    "1868": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        10818,
        10878
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "1869": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        10818,
        10878
      ],
      "op": "DUP1",
      "path": "28"
    },
    "1870": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        10818,
        10878
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "1871": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        10818,
        10878
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x75C"
    },
    "1874": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        10818,
        10878
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "1875": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        10818,
        10878
      ],
      "op": "RETURNDATASIZE",
      "path": "28"
    },
    "1876": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        10818,
        10878
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "1878": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        10818,
        10878
      ],
      "op": "DUP1",
      "path": "28"
    },
    "1879": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        10818,
        10878
      ],
      "op": "RETURNDATACOPY",
      "path": "28"
    },
    "1880": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        10818,
        10878
      ],
      "op": "RETURNDATASIZE",
      "path": "28"
    },
    "1881": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        10818,
        10878
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "1883": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        10818,
        10878
      ],
      "op": "REVERT",
      "path": "28"
    },
    "1884": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        10818,
        10878
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "1885": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        10818,
        10878
      ],
      "op": "POP",
      "path": "28"
    },
    "1886": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        10818,
        10878
      ],
      "op": "POP",
      "path": "28"
    },
    "1887": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        10818,
        10878
      ],
      "op": "POP",
      "path": "28"
    },
    "1888": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        10818,
        10878
      ],
      "op": "POP",
      "path": "28"
    },
    "1889": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        10766,
        10889
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "1890": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        10899,
        10936
      ],
      "op": "PUSH2",
      "path": "28",
      "statement": 9,
      "value": "0x78F"
    },
    "1893": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        10925,
        10927
      ],
      "op": "DUP5",
      "path": "28"
    },
    "1894": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        10929,
        10935
      ],
      "op": "DUP7",
      "path": "28"
    },
    "1895": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        10899,
        10906
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x4"
    },
    "1897": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        10907,
        10910
      ],
      "op": "DUP10",
      "path": "28"
    },
    "1898": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        10899,
        10911
      ],
      "op": "DUP2",
      "path": "28"
    },
    "1899": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        10899,
        10911
      ],
      "op": "SLOAD",
      "path": "28"
    },
    "1900": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        10899,
        10911
      ],
      "op": "DUP2",
      "path": "28"
    },
    "1901": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        10899,
        10911
      ],
      "op": "LT",
      "path": "28"
    },
    "1902": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        10899,
        10911
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x773"
    },
    "1905": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        10899,
        10911
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "1906": {
      "dev": "Index out of range",
      "fn": "MiniChefV2.withdraw",
      "offset": [
        10899,
        10911
      ],
      "op": "INVALID",
      "path": "28"
    },
    "1907": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        10899,
        10911
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "1908": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        10899,
        10911
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "1910": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        10899,
        10911
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "1911": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        10899,
        10911
      ],
      "op": "DUP3",
      "path": "28"
    },
    "1912": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        10899,
        10911
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "1913": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        10899,
        10911
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x20"
    },
    "1915": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        10899,
        10911
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "1916": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        10899,
        10911
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "1917": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        10899,
        10911
      ],
      "op": "KECCAK256",
      "path": "28"
    },
    "1918": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        10899,
        10911
      ],
      "op": "ADD",
      "path": "28"
    },
    "1919": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        10899,
        10911
      ],
      "op": "SLOAD",
      "path": "28"
    },
    "1920": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1922": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1924": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1926": {
      "op": "SHL"
    },
    "1927": {
      "op": "SUB"
    },
    "1928": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        10899,
        10911
      ],
      "op": "AND",
      "path": "28"
    },
    "1929": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        10899,
        10911
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "1930": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        10899,
        10936
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "1931": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        10899,
        10924
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1DF4"
    },
    "1934": {
      "fn": "MiniChefV2.withdraw",
      "jump": "i",
      "offset": [
        10899,
        10936
      ],
      "op": "JUMP",
      "path": "28"
    },
    "1935": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        10899,
        10936
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "1936": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        10986,
        10988
      ],
      "op": "DUP4",
      "path": "28",
      "statement": 10
    },
    "1937": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1939": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1941": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1943": {
      "op": "SHL"
    },
    "1944": {
      "op": "SUB"
    },
    "1945": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        10952,
        10989
      ],
      "op": "AND",
      "path": "28"
    },
    "1946": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        10973,
        10976
      ],
      "op": "DUP7",
      "path": "28"
    },
    "1947": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        10961,
        10971
      ],
      "op": "CALLER",
      "path": "28"
    },
    "1948": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1950": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1952": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1954": {
      "op": "SHL"
    },
    "1955": {
      "op": "SUB"
    },
    "1956": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        10952,
        10989
      ],
      "op": "AND",
      "path": "28"
    },
    "1957": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        10952,
        10989
      ],
      "op": "PUSH32",
      "path": "28",
      "value": "0x8166BF25F8A2B7ED3C85049207DA4358D16EDBED977D23FA2EE6F0DDE3EC2132"
    },
    "1990": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        10978,
        10984
      ],
      "op": "DUP9",
      "path": "28"
    },
    "1991": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        10952,
        10989
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "1993": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        10952,
        10989
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "1994": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        10952,
        10989
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x7D3"
    },
    "1997": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        10952,
        10989
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "1998": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        10952,
        10989
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "1999": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        10952,
        10989
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x29D3"
    },
    "2002": {
      "fn": "MiniChefV2.withdraw",
      "jump": "i",
      "offset": [
        10952,
        10989
      ],
      "op": "JUMP",
      "path": "28"
    },
    "2003": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        10952,
        10989
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "2004": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        10952,
        10989
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "2006": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        10952,
        10989
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "2007": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        10952,
        10989
      ],
      "op": "DUP1",
      "path": "28"
    },
    "2008": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        10952,
        10989
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "2009": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        10952,
        10989
      ],
      "op": "SUB",
      "path": "28"
    },
    "2010": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        10952,
        10989
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "2011": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        10952,
        10989
      ],
      "op": "LOG4",
      "path": "28"
    },
    "2012": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        10334,
        10996
      ],
      "op": "POP",
      "path": "28"
    },
    "2013": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        10334,
        10996
      ],
      "op": "POP",
      "path": "28"
    },
    "2014": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        10334,
        10996
      ],
      "op": "POP",
      "path": "28"
    },
    "2015": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        10334,
        10996
      ],
      "op": "POP",
      "path": "28"
    },
    "2016": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        10334,
        10996
      ],
      "op": "POP",
      "path": "28"
    },
    "2017": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        10334,
        10996
      ],
      "op": "POP",
      "path": "28"
    },
    "2018": {
      "fn": "MiniChefV2.withdraw",
      "jump": "o",
      "offset": [
        10334,
        10996
      ],
      "op": "JUMP",
      "path": "28"
    },
    "2019": {
      "offset": [
        2063,
        2089
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "2020": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        2063,
        2089
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x3"
    },
    "2022": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        2063,
        2089
      ],
      "op": "DUP2",
      "path": "28"
    },
    "2023": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        2063,
        2089
      ],
      "op": "DUP2",
      "path": "28"
    },
    "2024": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        2063,
        2089
      ],
      "op": "SLOAD",
      "path": "28"
    },
    "2025": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        2063,
        2089
      ],
      "op": "DUP2",
      "path": "28"
    },
    "2026": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        2063,
        2089
      ],
      "op": "LT",
      "path": "28"
    },
    "2027": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        2063,
        2089
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x7F0"
    },
    "2030": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        2063,
        2089
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "2031": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        2063,
        2089
      ],
      "op": "INVALID",
      "path": "28"
    },
    "2032": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        2063,
        2089
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "2033": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        2063,
        2089
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "2035": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        2063,
        2089
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "2036": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        2063,
        2089
      ],
      "op": "DUP3",
      "path": "28"
    },
    "2037": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        2063,
        2089
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "2038": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        2063,
        2089
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x20"
    },
    "2040": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        2063,
        2089
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "2041": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        2063,
        2089
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "2042": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        2063,
        2089
      ],
      "op": "KECCAK256",
      "path": "28"
    },
    "2043": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        2063,
        2089
      ],
      "op": "ADD",
      "path": "28"
    },
    "2044": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        2063,
        2089
      ],
      "op": "SLOAD",
      "path": "28"
    },
    "2045": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2047": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2049": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2051": {
      "op": "SHL"
    },
    "2052": {
      "op": "SUB"
    },
    "2053": {
      "offset": [
        2063,
        2089
      ],
      "op": "DUP2",
      "path": "28"
    },
    "2054": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        2063,
        2089
      ],
      "op": "AND",
      "path": "28"
    },
    "2055": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        2063,
        2089
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "2056": {
      "op": "POP"
    },
    "2057": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2059": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2061": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2063": {
      "op": "SHL"
    },
    "2064": {
      "op": "SUB"
    },
    "2065": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2067": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2069": {
      "op": "SHL"
    },
    "2070": {
      "offset": [
        2063,
        2089
      ],
      "op": "DUP3",
      "path": "28"
    },
    "2071": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        2063,
        2089
      ],
      "op": "DIV",
      "path": "28"
    },
    "2072": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        2063,
        2089
      ],
      "op": "DUP2",
      "path": "28"
    },
    "2073": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        2063,
        2089
      ],
      "op": "AND",
      "path": "28"
    },
    "2074": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        2063,
        2089
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "2075": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2077": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "2079": {
      "op": "SHL"
    },
    "2080": {
      "offset": [
        2063,
        2089
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "2081": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        2063,
        2089
      ],
      "op": "DIV",
      "path": "28"
    },
    "2082": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        2063,
        2089
      ],
      "op": "AND",
      "path": "28"
    },
    "2083": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        2063,
        2089
      ],
      "op": "DUP4",
      "path": "28"
    },
    "2084": {
      "fn": "MiniChefV2.withdraw",
      "jump": "o",
      "offset": [
        2063,
        2089
      ],
      "op": "JUMP",
      "path": "28"
    },
    "2085": {
      "offset": [
        2580,
        2610
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "2086": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        2580,
        2610
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x8"
    },
    "2088": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        2580,
        2610
      ],
      "op": "SLOAD",
      "path": "28"
    },
    "2089": {
      "fn": "MiniChefV2.withdraw",
      "offset": [
        2580,
        2610
      ],
      "op": "DUP2",
      "path": "28"
    },
    "2090": {
      "fn": "MiniChefV2.withdraw",
      "jump": "o",
      "offset": [
        2580,
        2610
      ],
      "op": "JUMP",
      "path": "28"
    },
    "2091": {
      "fn": "MiniChefV2.harvest",
      "offset": [
        11170,
        11950
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "2092": {
      "fn": "MiniChefV2.harvest",
      "offset": [
        11229,
        11249
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x833"
    },
    "2095": {
      "fn": "MiniChefV2.harvest",
      "offset": [
        11229,
        11249
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x2153"
    },
    "2098": {
      "fn": "MiniChefV2.harvest",
      "jump": "i",
      "offset": [
        11229,
        11249
      ],
      "op": "JUMP",
      "path": "28"
    },
    "2099": {
      "fn": "MiniChefV2.harvest",
      "offset": [
        11229,
        11249
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "2100": {
      "fn": "MiniChefV2.harvest",
      "offset": [
        11252,
        11267
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x83C"
    },
    "2103": {
      "fn": "MiniChefV2.harvest",
      "offset": [
        11263,
        11266
      ],
      "op": "DUP4",
      "path": "28"
    },
    "2104": {
      "fn": "MiniChefV2.harvest",
      "offset": [
        11252,
        11262
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x10DD"
    },
    "2107": {
      "fn": "MiniChefV2.harvest",
      "jump": "i",
      "offset": [
        11252,
        11267
      ],
      "op": "JUMP",
      "path": "28"
    },
    "2108": {
      "fn": "MiniChefV2.harvest",
      "offset": [
        11252,
        11267
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "2109": {
      "fn": "MiniChefV2.harvest",
      "offset": [
        11277,
        11298
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "2111": {
      "fn": "MiniChefV2.harvest",
      "offset": [
        11301,
        11314
      ],
      "op": "DUP5",
      "path": "28"
    },
    "2112": {
      "fn": "MiniChefV2.harvest",
      "offset": [
        11301,
        11314
      ],
      "op": "DUP2",
      "path": "28"
    },
    "2113": {
      "fn": "MiniChefV2.harvest",
      "offset": [
        11301,
        11314
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "2114": {
      "fn": "MiniChefV2.harvest",
      "offset": [
        11301,
        11309
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x6"
    },
    "2116": {
      "fn": "MiniChefV2.harvest",
      "offset": [
        11301,
        11314
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x20"
    },
    "2118": {
      "fn": "MiniChefV2.harvest",
      "offset": [
        11301,
        11314
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "2119": {
      "fn": "MiniChefV2.harvest",
      "offset": [
        11301,
        11314
      ],
      "op": "DUP2",
      "path": "28"
    },
    "2120": {
      "fn": "MiniChefV2.harvest",
      "offset": [
        11301,
        11314
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "2121": {
      "fn": "MiniChefV2.harvest",
      "offset": [
        11301,
        11314
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "2123": {
      "fn": "MiniChefV2.harvest",
      "offset": [
        11301,
        11314
      ],
      "op": "DUP1",
      "path": "28"
    },
    "2124": {
      "fn": "MiniChefV2.harvest",
      "offset": [
        11301,
        11314
      ],
      "op": "DUP4",
      "path": "28"
    },
    "2125": {
      "fn": "MiniChefV2.harvest",
      "offset": [
        11301,
        11314
      ],
      "op": "KECCAK256",
      "path": "28"
    },
    "2126": {
      "fn": "MiniChefV2.harvest",
      "offset": [
        11315,
        11325
      ],
      "op": "CALLER",
      "path": "28"
    },
    "2127": {
      "fn": "MiniChefV2.harvest",
      "offset": [
        11301,
        11326
      ],
      "op": "DUP5",
      "path": "28"
    },
    "2128": {
      "fn": "MiniChefV2.harvest",
      "offset": [
        11301,
        11326
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "2129": {
      "fn": "MiniChefV2.harvest",
      "offset": [
        11301,
        11326
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "2130": {
      "fn": "MiniChefV2.harvest",
      "offset": [
        11301,
        11326
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "2131": {
      "fn": "MiniChefV2.harvest",
      "offset": [
        11301,
        11326
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "2132": {
      "fn": "MiniChefV2.harvest",
      "offset": [
        11301,
        11326
      ],
      "op": "DUP2",
      "path": "28"
    },
    "2133": {
      "fn": "MiniChefV2.harvest",
      "offset": [
        11301,
        11326
      ],
      "op": "KECCAK256",
      "path": "28"
    },
    "2134": {
      "fn": "MiniChefV2.harvest",
      "offset": [
        11385,
        11406
      ],
      "op": "DUP3",
      "path": "28"
    },
    "2135": {
      "fn": "MiniChefV2.harvest",
      "offset": [
        11385,
        11406
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "2136": {
      "fn": "MiniChefV2.harvest",
      "offset": [
        11369,
        11380
      ],
      "op": "DUP2",
      "path": "28"
    },
    "2137": {
      "fn": "MiniChefV2.harvest",
      "offset": [
        11369,
        11380
      ],
      "op": "SLOAD",
      "path": "28"
    },
    "2138": {
      "fn": "MiniChefV2.harvest",
      "offset": [
        11229,
        11267
      ],
      "op": "SWAP4",
      "path": "28"
    },
    "2139": {
      "fn": "MiniChefV2.harvest",
      "offset": [
        11229,
        11267
      ],
      "op": "SWAP5",
      "path": "28"
    },
    "2140": {
      "op": "POP"
    },
    "2141": {
      "fn": "MiniChefV2.harvest",
      "offset": [
        11301,
        11326
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "2142": {
      "fn": "MiniChefV2.harvest",
      "offset": [
        11301,
        11326
      ],
      "op": "SWAP3",
      "path": "28"
    },
    "2143": {
      "offset": [
        2699,
        2703
      ],
      "op": "PUSH5",
      "path": "28",
      "value": "0xE8D4A51000"
    },
    "2149": {
      "fn": "MiniChefV2.harvest",
      "offset": [
        2699,
        2703
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "2150": {
      "fn": "MiniChefV2.harvest",
      "offset": [
        11369,
        11407
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x878"
    },
    "2153": {
      "fn": "MiniChefV2.harvest",
      "offset": [
        11369,
        11407
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "2154": {
      "fn": "MiniChefV2.harvest",
      "offset": [
        11369,
        11380
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "2155": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2157": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2159": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2161": {
      "op": "SHL"
    },
    "2162": {
      "op": "SUB"
    },
    "2163": {
      "fn": "MiniChefV2.harvest",
      "offset": [
        11369,
        11407
      ],
      "op": "AND",
      "path": "28"
    },
    "2164": {
      "fn": "MiniChefV2.harvest",
      "offset": [
        11369,
        11384
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1D47"
    },
    "2167": {
      "fn": "MiniChefV2.harvest",
      "jump": "i",
      "offset": [
        11369,
        11407
      ],
      "op": "JUMP",
      "path": "28"
    },
    "2168": {
      "fn": "MiniChefV2.harvest",
      "offset": [
        11369,
        11407
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "2169": {
      "fn": "MiniChefV2.harvest",
      "offset": [
        11369,
        11429
      ],
      "op": "DUP2",
      "path": "28"
    },
    "2170": {
      "fn": "MiniChefV2.harvest",
      "offset": [
        11369,
        11429
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x87F"
    },
    "2173": {
      "fn": "MiniChefV2.harvest",
      "offset": [
        11369,
        11429
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "2174": {
      "dev": "Division by zero",
      "fn": "MiniChefV2.harvest",
      "offset": [
        11369,
        11429
      ],
      "op": "INVALID",
      "path": "28"
    },
    "2175": {
      "fn": "MiniChefV2.harvest",
      "offset": [
        11369,
        11429
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "2176": {
      "fn": "MiniChefV2.harvest",
      "offset": [
        11369,
        11429
      ],
      "op": "DIV",
      "path": "28"
    },
    "2177": {
      "fn": "MiniChefV2.harvest",
      "offset": [
        11336,
        11430
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "2178": {
      "fn": "MiniChefV2.harvest",
      "offset": [
        11336,
        11430
      ],
      "op": "POP",
      "path": "28"
    },
    "2179": {
      "fn": "MiniChefV2.harvest",
      "offset": [
        11440,
        11461
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "2181": {
      "fn": "MiniChefV2.harvest",
      "offset": [
        11464,
        11513
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x8A3"
    },
    "2184": {
      "fn": "MiniChefV2.harvest",
      "offset": [
        11464,
        11501
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x89E"
    },
    "2187": {
      "fn": "MiniChefV2.harvest",
      "offset": [
        11485,
        11489
      ],
      "op": "DUP5",
      "path": "28"
    },
    "2188": {
      "fn": "MiniChefV2.harvest",
      "offset": [
        11485,
        11500
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x1"
    },
    "2190": {
      "fn": "MiniChefV2.harvest",
      "offset": [
        11485,
        11500
      ],
      "op": "ADD",
      "path": "28"
    },
    "2191": {
      "fn": "MiniChefV2.harvest",
      "offset": [
        11485,
        11500
      ],
      "op": "SLOAD",
      "path": "28"
    },
    "2192": {
      "fn": "MiniChefV2.harvest",
      "offset": [
        11464,
        11480
      ],
      "op": "DUP5",
      "path": "28"
    },
    "2193": {
      "fn": "MiniChefV2.harvest",
      "offset": [
        11464,
        11484
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1D84"
    },
    "2196": {
      "fn": "MiniChefV2.harvest",
      "offset": [
        11464,
        11484
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "2197": {
      "fn": "MiniChefV2.harvest",
      "offset": [
        11464,
        11501
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "2198": {
      "fn": "MiniChefV2.harvest",
      "offset": [
        11464,
        11501
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "2199": {
      "fn": "MiniChefV2.harvest",
      "offset": [
        11464,
        11501
      ],
      "op": "PUSH4",
      "path": "28",
      "value": "0xFFFFFFFF"
    },
    "2204": {
      "fn": "MiniChefV2.harvest",
      "offset": [
        11464,
        11501
      ],
      "op": "AND",
      "path": "28"
    },
    "2205": {
      "fn": "MiniChefV2.harvest",
      "jump": "i",
      "offset": [
        11464,
        11501
      ],
      "op": "JUMP",
      "path": "28"
    },
    "2206": {
      "fn": "MiniChefV2.harvest",
      "offset": [
        11464,
        11501
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "2207": {
      "fn": "MiniChefV2.harvest",
      "offset": [
        11464,
        11511
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1EEA"
    },
    "2210": {
      "fn": "MiniChefV2.harvest",
      "jump": "i",
      "offset": [
        11464,
        11513
      ],
      "op": "JUMP",
      "path": "28"
    },
    "2211": {
      "fn": "MiniChefV2.harvest",
      "offset": [
        11464,
        11513
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "2212": {
      "fn": "MiniChefV2.harvest",
      "offset": [
        11543,
        11558
      ],
      "op": "PUSH1",
      "path": "28",
      "statement": 11,
      "value": "0x1"
    },
    "2214": {
      "fn": "MiniChefV2.harvest",
      "offset": [
        11543,
        11558
      ],
      "op": "DUP5",
      "path": "28"
    },
    "2215": {
      "fn": "MiniChefV2.harvest",
      "offset": [
        11543,
        11558
      ],
      "op": "ADD",
      "path": "28"
    },
    "2216": {
      "fn": "MiniChefV2.harvest",
      "offset": [
        11543,
        11577
      ],
      "op": "DUP4",
      "path": "28"
    },
    "2217": {
      "fn": "MiniChefV2.harvest",
      "offset": [
        11543,
        11577
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "2218": {
      "fn": "MiniChefV2.harvest",
      "offset": [
        11543,
        11577
      ],
      "op": "SSTORE",
      "path": "28"
    },
    "2219": {
      "fn": "MiniChefV2.harvest",
      "offset": [
        11440,
        11513
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "2220": {
      "op": "POP"
    },
    "2221": {
      "fn": "MiniChefV2.harvest",
      "offset": [
        11616,
        11634
      ],
      "op": "DUP1",
      "path": "28"
    },
    "2222": {
      "branch": 85,
      "fn": "MiniChefV2.harvest",
      "offset": [
        11616,
        11634
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "2223": {
      "fn": "MiniChefV2.harvest",
      "offset": [
        11612,
        11698
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x8E6"
    },
    "2226": {
      "branch": 85,
      "fn": "MiniChefV2.harvest",
      "offset": [
        11612,
        11698
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "2227": {
      "fn": "MiniChefV2.harvest",
      "offset": [
        11650,
        11687
      ],
      "op": "PUSH2",
      "path": "28",
      "statement": 12,
      "value": "0x8E6"
    },
    "2230": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2232": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2234": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2236": {
      "op": "SHL"
    },
    "2237": {
      "op": "SUB"
    },
    "2238": {
      "fn": "MiniChefV2.harvest",
      "offset": [
        11650,
        11655
      ],
      "op": "PUSH32",
      "path": "28",
      "value": "0x0"
    },
    "2271": {
      "fn": "MiniChefV2.harvest",
      "offset": [
        11650,
        11668
      ],
      "op": "AND",
      "path": "28"
    },
    "2272": {
      "fn": "MiniChefV2.harvest",
      "offset": [
        11669,
        11671
      ],
      "op": "DUP7",
      "path": "28"
    },
    "2273": {
      "fn": "MiniChefV2.harvest",
      "offset": [
        11673,
        11686
      ],
      "op": "DUP4",
      "path": "28"
    },
    "2274": {
      "fn": "MiniChefV2.harvest",
      "offset": [
        11650,
        11668
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1DF4"
    },
    "2277": {
      "fn": "MiniChefV2.harvest",
      "jump": "i",
      "offset": [
        11650,
        11687
      ],
      "op": "JUMP",
      "path": "28"
    },
    "2278": {
      "fn": "MiniChefV2.harvest",
      "offset": [
        11650,
        11687
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "2279": {
      "fn": "MiniChefV2.harvest",
      "offset": [
        11708,
        11727
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "2281": {
      "fn": "MiniChefV2.harvest",
      "offset": [
        11730,
        11738
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x5"
    },
    "2283": {
      "fn": "MiniChefV2.harvest",
      "offset": [
        11739,
        11742
      ],
      "op": "DUP8",
      "path": "28"
    },
    "2284": {
      "fn": "MiniChefV2.harvest",
      "offset": [
        11730,
        11743
      ],
      "op": "DUP2",
      "path": "28"
    },
    "2285": {
      "fn": "MiniChefV2.harvest",
      "offset": [
        11730,
        11743
      ],
      "op": "SLOAD",
      "path": "28"
    },
    "2286": {
      "fn": "MiniChefV2.harvest",
      "offset": [
        11730,
        11743
      ],
      "op": "DUP2",
      "path": "28"
    },
    "2287": {
      "fn": "MiniChefV2.harvest",
      "offset": [
        11730,
        11743
      ],
      "op": "LT",
      "path": "28"
    },
    "2288": {
      "fn": "MiniChefV2.harvest",
      "offset": [
        11730,
        11743
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x8F5"
    },
    "2291": {
      "fn": "MiniChefV2.harvest",
      "offset": [
        11730,
        11743
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "2292": {
      "dev": "Index out of range",
      "fn": "MiniChefV2.harvest",
      "offset": [
        11730,
        11743
      ],
      "op": "INVALID",
      "path": "28"
    },
    "2293": {
      "fn": "MiniChefV2.harvest",
      "offset": [
        11730,
        11743
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "2294": {
      "fn": "MiniChefV2.harvest",
      "offset": [
        11730,
        11743
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "2296": {
      "fn": "MiniChefV2.harvest",
      "offset": [
        11730,
        11743
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "2297": {
      "fn": "MiniChefV2.harvest",
      "offset": [
        11730,
        11743
      ],
      "op": "DUP3",
      "path": "28"
    },
    "2298": {
      "fn": "MiniChefV2.harvest",
      "offset": [
        11730,
        11743
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "2299": {
      "fn": "MiniChefV2.harvest",
      "offset": [
        11730,
        11743
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x20"
    },
    "2301": {
      "fn": "MiniChefV2.harvest",
      "offset": [
        11730,
        11743
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "2302": {
      "fn": "MiniChefV2.harvest",
      "offset": [
        11730,
        11743
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "2303": {
      "fn": "MiniChefV2.harvest",
      "offset": [
        11730,
        11743
      ],
      "op": "KECCAK256",
      "path": "28"
    },
    "2304": {
      "fn": "MiniChefV2.harvest",
      "offset": [
        11730,
        11743
      ],
      "op": "ADD",
      "path": "28"
    },
    "2305": {
      "fn": "MiniChefV2.harvest",
      "offset": [
        11730,
        11743
      ],
      "op": "SLOAD",
      "path": "28"
    },
    "2306": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2308": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2310": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2312": {
      "op": "SHL"
    },
    "2313": {
      "op": "SUB"
    },
    "2314": {
      "fn": "MiniChefV2.harvest",
      "offset": [
        11730,
        11743
      ],
      "op": "AND",
      "path": "28"
    },
    "2315": {
      "fn": "MiniChefV2.harvest",
      "offset": [
        11730,
        11743
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "2316": {
      "op": "POP"
    },
    "2317": {
      "fn": "MiniChefV2.harvest",
      "offset": [
        11757,
        11789
      ],
      "op": "DUP1",
      "path": "28"
    },
    "2318": {
      "branch": 86,
      "fn": "MiniChefV2.harvest",
      "offset": [
        11757,
        11789
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "2319": {
      "fn": "MiniChefV2.harvest",
      "offset": [
        11753,
        11889
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x97A"
    },
    "2322": {
      "branch": 86,
      "fn": "MiniChefV2.harvest",
      "offset": [
        11753,
        11889
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "2323": {
      "fn": "MiniChefV2.harvest",
      "offset": [
        11866,
        11877
      ],
      "op": "DUP4",
      "path": "28",
      "statement": 13
    },
    "2324": {
      "fn": "MiniChefV2.harvest",
      "offset": [
        11866,
        11877
      ],
      "op": "SLOAD",
      "path": "28"
    },
    "2325": {
      "fn": "MiniChefV2.harvest",
      "offset": [
        11805,
        11878
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "2327": {
      "fn": "MiniChefV2.harvest",
      "offset": [
        11805,
        11878
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "2328": {
      "op": "PUSH4",
      "value": "0x45FB1BA1"
    },
    "2333": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "2335": {
      "op": "SHL"
    },
    "2336": {
      "fn": "MiniChefV2.harvest",
      "offset": [
        11805,
        11878
      ],
      "op": "DUP2",
      "path": "28"
    },
    "2337": {
      "fn": "MiniChefV2.harvest",
      "offset": [
        11805,
        11878
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "2338": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2340": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2342": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2344": {
      "op": "SHL"
    },
    "2345": {
      "op": "SUB"
    },
    "2346": {
      "fn": "MiniChefV2.harvest",
      "offset": [
        11805,
        11828
      ],
      "op": "DUP4",
      "path": "28"
    },
    "2347": {
      "fn": "MiniChefV2.harvest",
      "offset": [
        11805,
        11828
      ],
      "op": "AND",
      "path": "28"
    },
    "2348": {
      "fn": "MiniChefV2.harvest",
      "offset": [
        11805,
        11828
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "2349": {
      "fn": "MiniChefV2.harvest",
      "offset": [
        11805,
        11828
      ],
      "op": "PUSH4",
      "path": "28",
      "value": "0x8BF63742"
    },
    "2354": {
      "fn": "MiniChefV2.harvest",
      "offset": [
        11805,
        11828
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "2355": {
      "fn": "MiniChefV2.harvest",
      "offset": [
        11805,
        11878
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x947"
    },
    "2358": {
      "fn": "MiniChefV2.harvest",
      "offset": [
        11805,
        11878
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "2359": {
      "fn": "MiniChefV2.harvest",
      "offset": [
        11830,
        11833
      ],
      "op": "DUP12",
      "path": "28"
    },
    "2360": {
      "fn": "MiniChefV2.harvest",
      "offset": [
        11830,
        11833
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "2361": {
      "fn": "MiniChefV2.harvest",
      "offset": [
        11835,
        11845
      ],
      "op": "CALLER",
      "path": "28"
    },
    "2362": {
      "fn": "MiniChefV2.harvest",
      "offset": [
        11835,
        11845
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "2363": {
      "fn": "MiniChefV2.harvest",
      "offset": [
        11847,
        11849
      ],
      "op": "DUP13",
      "path": "28"
    },
    "2364": {
      "fn": "MiniChefV2.harvest",
      "offset": [
        11847,
        11849
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "2365": {
      "fn": "MiniChefV2.harvest",
      "offset": [
        11851,
        11864
      ],
      "op": "DUP10",
      "path": "28"
    },
    "2366": {
      "fn": "MiniChefV2.harvest",
      "offset": [
        11851,
        11864
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "2367": {
      "fn": "MiniChefV2.harvest",
      "offset": [
        11866,
        11877
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "2368": {
      "fn": "MiniChefV2.harvest",
      "offset": [
        11805,
        11878
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x4"
    },
    "2370": {
      "fn": "MiniChefV2.harvest",
      "offset": [
        11805,
        11878
      ],
      "op": "ADD",
      "path": "28"
    },
    "2371": {
      "fn": "MiniChefV2.harvest",
      "offset": [
        11805,
        11878
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x29DC"
    },
    "2374": {
      "fn": "MiniChefV2.harvest",
      "jump": "i",
      "offset": [
        11805,
        11878
      ],
      "op": "JUMP",
      "path": "28"
    },
    "2375": {
      "fn": "MiniChefV2.harvest",
      "offset": [
        11805,
        11878
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "2376": {
      "fn": "MiniChefV2.harvest",
      "offset": [
        11805,
        11878
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "2378": {
      "fn": "MiniChefV2.harvest",
      "offset": [
        11805,
        11878
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "2380": {
      "fn": "MiniChefV2.harvest",
      "offset": [
        11805,
        11878
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "2381": {
      "fn": "MiniChefV2.harvest",
      "offset": [
        11805,
        11878
      ],
      "op": "DUP1",
      "path": "28"
    },
    "2382": {
      "fn": "MiniChefV2.harvest",
      "offset": [
        11805,
        11878
      ],
      "op": "DUP4",
      "path": "28"
    },
    "2383": {
      "fn": "MiniChefV2.harvest",
      "offset": [
        11805,
        11878
      ],
      "op": "SUB",
      "path": "28"
    },
    "2384": {
      "fn": "MiniChefV2.harvest",
      "offset": [
        11805,
        11878
      ],
      "op": "DUP2",
      "path": "28"
    },
    "2385": {
      "fn": "MiniChefV2.harvest",
      "offset": [
        11805,
        11878
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "2387": {
      "fn": "MiniChefV2.harvest",
      "offset": [
        11805,
        11878
      ],
      "op": "DUP8",
      "path": "28"
    },
    "2388": {
      "fn": "MiniChefV2.harvest",
      "offset": [
        11805,
        11878
      ],
      "op": "DUP1",
      "path": "28"
    },
    "2389": {
      "fn": "MiniChefV2.harvest",
      "offset": [
        11805,
        11878
      ],
      "op": "EXTCODESIZE",
      "path": "28"
    },
    "2390": {
      "fn": "MiniChefV2.harvest",
      "offset": [
        11805,
        11878
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "2391": {
      "fn": "MiniChefV2.harvest",
      "offset": [
        11805,
        11878
      ],
      "op": "DUP1",
      "path": "28"
    },
    "2392": {
      "fn": "MiniChefV2.harvest",
      "offset": [
        11805,
        11878
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "2393": {
      "fn": "MiniChefV2.harvest",
      "offset": [
        11805,
        11878
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x961"
    },
    "2396": {
      "fn": "MiniChefV2.harvest",
      "offset": [
        11805,
        11878
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "2397": {
      "fn": "MiniChefV2.harvest",
      "offset": [
        11805,
        11878
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "2399": {
      "fn": "MiniChefV2.harvest",
      "offset": [
        11805,
        11878
      ],
      "op": "DUP1",
      "path": "28"
    },
    "2400": {
      "fn": "MiniChefV2.harvest",
      "offset": [
        11805,
        11878
      ],
      "op": "REVERT",
      "path": "28"
    },
    "2401": {
      "fn": "MiniChefV2.harvest",
      "offset": [
        11805,
        11878
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "2402": {
      "fn": "MiniChefV2.harvest",
      "offset": [
        11805,
        11878
      ],
      "op": "POP",
      "path": "28"
    },
    "2403": {
      "fn": "MiniChefV2.harvest",
      "offset": [
        11805,
        11878
      ],
      "op": "GAS",
      "path": "28"
    },
    "2404": {
      "fn": "MiniChefV2.harvest",
      "offset": [
        11805,
        11878
      ],
      "op": "CALL",
      "path": "28"
    },
    "2405": {
      "fn": "MiniChefV2.harvest",
      "offset": [
        11805,
        11878
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "2406": {
      "fn": "MiniChefV2.harvest",
      "offset": [
        11805,
        11878
      ],
      "op": "DUP1",
      "path": "28"
    },
    "2407": {
      "fn": "MiniChefV2.harvest",
      "offset": [
        11805,
        11878
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "2408": {
      "fn": "MiniChefV2.harvest",
      "offset": [
        11805,
        11878
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x975"
    },
    "2411": {
      "fn": "MiniChefV2.harvest",
      "offset": [
        11805,
        11878
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "2412": {
      "fn": "MiniChefV2.harvest",
      "offset": [
        11805,
        11878
      ],
      "op": "RETURNDATASIZE",
      "path": "28"
    },
    "2413": {
      "fn": "MiniChefV2.harvest",
      "offset": [
        11805,
        11878
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "2415": {
      "fn": "MiniChefV2.harvest",
      "offset": [
        11805,
        11878
      ],
      "op": "DUP1",
      "path": "28"
    },
    "2416": {
      "fn": "MiniChefV2.harvest",
      "offset": [
        11805,
        11878
      ],
      "op": "RETURNDATACOPY",
      "path": "28"
    },
    "2417": {
      "fn": "MiniChefV2.harvest",
      "offset": [
        11805,
        11878
      ],
      "op": "RETURNDATASIZE",
      "path": "28"
    },
    "2418": {
      "fn": "MiniChefV2.harvest",
      "offset": [
        11805,
        11878
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "2420": {
      "fn": "MiniChefV2.harvest",
      "offset": [
        11805,
        11878
      ],
      "op": "REVERT",
      "path": "28"
    },
    "2421": {
      "fn": "MiniChefV2.harvest",
      "offset": [
        11805,
        11878
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "2422": {
      "fn": "MiniChefV2.harvest",
      "offset": [
        11805,
        11878
      ],
      "op": "POP",
      "path": "28"
    },
    "2423": {
      "fn": "MiniChefV2.harvest",
      "offset": [
        11805,
        11878
      ],
      "op": "POP",
      "path": "28"
    },
    "2424": {
      "fn": "MiniChefV2.harvest",
      "offset": [
        11805,
        11878
      ],
      "op": "POP",
      "path": "28"
    },
    "2425": {
      "fn": "MiniChefV2.harvest",
      "offset": [
        11805,
        11878
      ],
      "op": "POP",
      "path": "28"
    },
    "2426": {
      "fn": "MiniChefV2.harvest",
      "offset": [
        11753,
        11889
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "2427": {
      "fn": "MiniChefV2.harvest",
      "offset": [
        11924,
        11927
      ],
      "op": "DUP7",
      "path": "28",
      "statement": 14
    },
    "2428": {
      "fn": "MiniChefV2.harvest",
      "offset": [
        11912,
        11922
      ],
      "op": "CALLER",
      "path": "28"
    },
    "2429": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2431": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2433": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2435": {
      "op": "SHL"
    },
    "2436": {
      "op": "SUB"
    },
    "2437": {
      "fn": "MiniChefV2.harvest",
      "offset": [
        11904,
        11943
      ],
      "op": "AND",
      "path": "28"
    },
    "2438": {
      "fn": "MiniChefV2.harvest",
      "offset": [
        11904,
        11943
      ],
      "op": "PUSH32",
      "path": "28",
      "value": "0x71BAB65CED2E5750775A0613BE067DF48EF06CF92A496EBF7663AE0660924954"
    },
    "2471": {
      "fn": "MiniChefV2.harvest",
      "offset": [
        11929,
        11942
      ],
      "op": "DUP5",
      "path": "28"
    },
    "2472": {
      "fn": "MiniChefV2.harvest",
      "offset": [
        11904,
        11943
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "2474": {
      "fn": "MiniChefV2.harvest",
      "offset": [
        11904,
        11943
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "2475": {
      "fn": "MiniChefV2.harvest",
      "offset": [
        11904,
        11943
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x9B4"
    },
    "2478": {
      "fn": "MiniChefV2.harvest",
      "offset": [
        11904,
        11943
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "2479": {
      "fn": "MiniChefV2.harvest",
      "offset": [
        11904,
        11943
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "2480": {
      "fn": "MiniChefV2.harvest",
      "offset": [
        11904,
        11943
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x29D3"
    },
    "2483": {
      "fn": "MiniChefV2.harvest",
      "jump": "i",
      "offset": [
        11904,
        11943
      ],
      "op": "JUMP",
      "path": "28"
    },
    "2484": {
      "fn": "MiniChefV2.harvest",
      "offset": [
        11904,
        11943
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "2485": {
      "fn": "MiniChefV2.harvest",
      "offset": [
        11904,
        11943
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "2487": {
      "fn": "MiniChefV2.harvest",
      "offset": [
        11904,
        11943
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "2488": {
      "fn": "MiniChefV2.harvest",
      "offset": [
        11904,
        11943
      ],
      "op": "DUP1",
      "path": "28"
    },
    "2489": {
      "fn": "MiniChefV2.harvest",
      "offset": [
        11904,
        11943
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "2490": {
      "fn": "MiniChefV2.harvest",
      "offset": [
        11904,
        11943
      ],
      "op": "SUB",
      "path": "28"
    },
    "2491": {
      "fn": "MiniChefV2.harvest",
      "offset": [
        11904,
        11943
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "2492": {
      "fn": "MiniChefV2.harvest",
      "offset": [
        11904,
        11943
      ],
      "op": "LOG3",
      "path": "28"
    },
    "2493": {
      "fn": "MiniChefV2.harvest",
      "offset": [
        11170,
        11950
      ],
      "op": "POP",
      "path": "28"
    },
    "2494": {
      "fn": "MiniChefV2.harvest",
      "offset": [
        11170,
        11950
      ],
      "op": "POP",
      "path": "28"
    },
    "2495": {
      "fn": "MiniChefV2.harvest",
      "offset": [
        11170,
        11950
      ],
      "op": "POP",
      "path": "28"
    },
    "2496": {
      "fn": "MiniChefV2.harvest",
      "offset": [
        11170,
        11950
      ],
      "op": "POP",
      "path": "28"
    },
    "2497": {
      "fn": "MiniChefV2.harvest",
      "offset": [
        11170,
        11950
      ],
      "op": "POP",
      "path": "28"
    },
    "2498": {
      "fn": "MiniChefV2.harvest",
      "offset": [
        11170,
        11950
      ],
      "op": "POP",
      "path": "28"
    },
    "2499": {
      "fn": "MiniChefV2.harvest",
      "offset": [
        11170,
        11950
      ],
      "op": "POP",
      "path": "28"
    },
    "2500": {
      "fn": "MiniChefV2.harvest",
      "jump": "o",
      "offset": [
        11170,
        11950
      ],
      "op": "JUMP",
      "path": "28"
    },
    "2501": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7111,
        7902
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "2502": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7185,
        7200
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "2504": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7212,
        7232
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x9CF"
    },
    "2507": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7212,
        7232
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x2153"
    },
    "2510": {
      "fn": "MiniChefV2.pendingSushi",
      "jump": "i",
      "offset": [
        7212,
        7232
      ],
      "op": "JUMP",
      "path": "28"
    },
    "2511": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7212,
        7232
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "2512": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7235,
        7243
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x3"
    },
    "2514": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7244,
        7248
      ],
      "op": "DUP5",
      "path": "28"
    },
    "2515": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7235,
        7249
      ],
      "op": "DUP2",
      "path": "28"
    },
    "2516": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7235,
        7249
      ],
      "op": "SLOAD",
      "path": "28"
    },
    "2517": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7235,
        7249
      ],
      "op": "DUP2",
      "path": "28"
    },
    "2518": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7235,
        7249
      ],
      "op": "LT",
      "path": "28"
    },
    "2519": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7235,
        7249
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x9DC"
    },
    "2522": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7235,
        7249
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "2523": {
      "dev": "Index out of range",
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7235,
        7249
      ],
      "op": "INVALID",
      "path": "28"
    },
    "2524": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7235,
        7249
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "2525": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7235,
        7249
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "2527": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7235,
        7249
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "2528": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7235,
        7249
      ],
      "op": "DUP3",
      "path": "28"
    },
    "2529": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7235,
        7249
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "2530": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7235,
        7249
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x20"
    },
    "2532": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7235,
        7249
      ],
      "op": "DUP1",
      "path": "28"
    },
    "2533": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7235,
        7249
      ],
      "op": "DUP4",
      "path": "28"
    },
    "2534": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7235,
        7249
      ],
      "op": "KECCAK256",
      "path": "28"
    },
    "2535": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7212,
        7249
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "2537": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7212,
        7249
      ],
      "op": "DUP1",
      "path": "28"
    },
    "2538": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7212,
        7249
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "2539": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7212,
        7249
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x60"
    },
    "2541": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7212,
        7249
      ],
      "op": "DUP2",
      "path": "28"
    },
    "2542": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7212,
        7249
      ],
      "op": "ADD",
      "path": "28"
    },
    "2543": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7212,
        7249
      ],
      "op": "DUP3",
      "path": "28"
    },
    "2544": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7212,
        7249
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "2545": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7235,
        7249
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "2546": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7235,
        7249
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "2547": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7235,
        7249
      ],
      "op": "SWAP4",
      "path": "28"
    },
    "2548": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7235,
        7249
      ],
      "op": "ADD",
      "path": "28"
    },
    "2549": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7212,
        7249
      ],
      "op": "SLOAD",
      "path": "28"
    },
    "2550": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2552": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2554": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2556": {
      "op": "SHL"
    },
    "2557": {
      "op": "SUB"
    },
    "2558": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7212,
        7249
      ],
      "op": "DUP1",
      "path": "28"
    },
    "2559": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7212,
        7249
      ],
      "op": "DUP3",
      "path": "28"
    },
    "2560": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7212,
        7249
      ],
      "op": "AND",
      "path": "28"
    },
    "2561": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7212,
        7249
      ],
      "op": "DUP4",
      "path": "28"
    },
    "2562": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7212,
        7249
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "2563": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2565": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2567": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2569": {
      "op": "SHL"
    },
    "2570": {
      "op": "SUB"
    },
    "2571": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2573": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2575": {
      "op": "SHL"
    },
    "2576": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7212,
        7249
      ],
      "op": "DUP4",
      "path": "28"
    },
    "2577": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7212,
        7249
      ],
      "op": "DIV",
      "path": "28"
    },
    "2578": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7212,
        7249
      ],
      "op": "DUP2",
      "path": "28"
    },
    "2579": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7212,
        7249
      ],
      "op": "AND",
      "path": "28"
    },
    "2580": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7212,
        7249
      ],
      "op": "DUP5",
      "path": "28"
    },
    "2581": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7212,
        7249
      ],
      "op": "DUP7",
      "path": "28"
    },
    "2582": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7212,
        7249
      ],
      "op": "ADD",
      "path": "28"
    },
    "2583": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7212,
        7249
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "2584": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2586": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "2588": {
      "op": "SHL"
    },
    "2589": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7212,
        7249
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "2590": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7212,
        7249
      ],
      "op": "SWAP3",
      "path": "28"
    },
    "2591": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7212,
        7249
      ],
      "op": "DIV",
      "path": "28"
    },
    "2592": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7212,
        7249
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "2593": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7212,
        7249
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "2594": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7212,
        7249
      ],
      "op": "AND",
      "path": "28"
    },
    "2595": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7212,
        7249
      ],
      "op": "DUP3",
      "path": "28"
    },
    "2596": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7212,
        7249
      ],
      "op": "DUP6",
      "path": "28"
    },
    "2597": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7212,
        7249
      ],
      "op": "ADD",
      "path": "28"
    },
    "2598": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7212,
        7249
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "2599": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7283,
        7297
      ],
      "op": "DUP9",
      "path": "28"
    },
    "2600": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7283,
        7297
      ],
      "op": "DUP6",
      "path": "28"
    },
    "2601": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7283,
        7297
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "2602": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7283,
        7291
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x6"
    },
    "2604": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7283,
        7297
      ],
      "op": "DUP4",
      "path": "28"
    },
    "2605": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7283,
        7297
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "2606": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7283,
        7297
      ],
      "op": "DUP4",
      "path": "28"
    },
    "2607": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7283,
        7297
      ],
      "op": "DUP6",
      "path": "28"
    },
    "2608": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7283,
        7297
      ],
      "op": "KECCAK256",
      "path": "28"
    },
    "2609": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2611": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2613": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2615": {
      "op": "SHL"
    },
    "2616": {
      "op": "SUB"
    },
    "2617": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7283,
        7304
      ],
      "op": "DUP10",
      "path": "28"
    },
    "2618": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7283,
        7304
      ],
      "op": "AND",
      "path": "28"
    },
    "2619": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7283,
        7304
      ],
      "op": "DUP7",
      "path": "28"
    },
    "2620": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7283,
        7304
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "2621": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7283,
        7304
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "2622": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7283,
        7304
      ],
      "op": "SWAP3",
      "path": "28"
    },
    "2623": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7283,
        7304
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "2624": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7283,
        7304
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "2625": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7283,
        7304
      ],
      "op": "DUP4",
      "path": "28"
    },
    "2626": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7283,
        7304
      ],
      "op": "KECCAK256",
      "path": "28"
    },
    "2627": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7341,
        7362
      ],
      "op": "DUP3",
      "path": "28"
    },
    "2628": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7341,
        7362
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "2629": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7391,
        7398
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x4"
    },
    "2631": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7391,
        7404
      ],
      "op": "DUP1",
      "path": "28"
    },
    "2632": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7391,
        7404
      ],
      "op": "SLOAD",
      "path": "28"
    },
    "2633": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7212,
        7249
      ],
      "op": "SWAP5",
      "path": "28"
    },
    "2634": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7212,
        7249
      ],
      "op": "SWAP7",
      "path": "28"
    },
    "2635": {
      "op": "POP"
    },
    "2636": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7283,
        7304
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "2637": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7283,
        7304
      ],
      "op": "SWAP5",
      "path": "28"
    },
    "2638": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7314,
        7362
      ],
      "op": "SWAP3",
      "path": "28"
    },
    "2639": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7314,
        7362
      ],
      "op": "AND",
      "path": "28"
    },
    "2640": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7314,
        7362
      ],
      "op": "SWAP3",
      "path": "28"
    },
    "2641": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7292,
        7296
      ],
      "op": "DUP9",
      "path": "28"
    },
    "2642": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7292,
        7296
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "2643": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7391,
        7404
      ],
      "op": "DUP2",
      "path": "28"
    },
    "2644": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7391,
        7404
      ],
      "op": "LT",
      "path": "28"
    },
    "2645": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7391,
        7404
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0xA5A"
    },
    "2648": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7391,
        7404
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "2649": {
      "dev": "Index out of range",
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7391,
        7404
      ],
      "op": "INVALID",
      "path": "28"
    },
    "2650": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7391,
        7404
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "2651": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7391,
        7404
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "2653": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7391,
        7404
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "2654": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7391,
        7404
      ],
      "op": "DUP3",
      "path": "28"
    },
    "2655": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7391,
        7404
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "2656": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7391,
        7404
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x20"
    },
    "2658": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7391,
        7404
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "2659": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7391,
        7404
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "2660": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7391,
        7404
      ],
      "op": "KECCAK256",
      "path": "28"
    },
    "2661": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7391,
        7404
      ],
      "op": "ADD",
      "path": "28"
    },
    "2662": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7391,
        7404
      ],
      "op": "SLOAD",
      "path": "28"
    },
    "2663": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7391,
        7429
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "2665": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7391,
        7429
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "2666": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "2671": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2673": {
      "op": "SHL"
    },
    "2674": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7391,
        7429
      ],
      "op": "DUP2",
      "path": "28"
    },
    "2675": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7391,
        7429
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "2676": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2678": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2680": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2682": {
      "op": "SHL"
    },
    "2683": {
      "op": "SUB"
    },
    "2684": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7391,
        7404
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "2685": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7391,
        7404
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "2686": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7391,
        7404
      ],
      "op": "AND",
      "path": "28"
    },
    "2687": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7391,
        7404
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "2688": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7391,
        7414
      ],
      "op": "PUSH4",
      "path": "28",
      "value": "0x70A08231"
    },
    "2693": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7391,
        7414
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "2694": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7391,
        7429
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0xA93"
    },
    "2697": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7391,
        7429
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "2698": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7423,
        7427
      ],
      "op": "ADDRESS",
      "path": "28"
    },
    "2699": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7423,
        7427
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "2700": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7391,
        7429
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x4"
    },
    "2702": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7391,
        7429
      ],
      "op": "ADD",
      "path": "28"
    },
    "2703": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7391,
        7429
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x2539"
    },
    "2706": {
      "fn": "MiniChefV2.pendingSushi",
      "jump": "i",
      "offset": [
        7391,
        7429
      ],
      "op": "JUMP",
      "path": "28"
    },
    "2707": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7391,
        7429
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "2708": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7391,
        7429
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x20"
    },
    "2710": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7391,
        7429
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "2712": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7391,
        7429
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "2713": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7391,
        7429
      ],
      "op": "DUP1",
      "path": "28"
    },
    "2714": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7391,
        7429
      ],
      "op": "DUP4",
      "path": "28"
    },
    "2715": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7391,
        7429
      ],
      "op": "SUB",
      "path": "28"
    },
    "2716": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7391,
        7429
      ],
      "op": "DUP2",
      "path": "28"
    },
    "2717": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7391,
        7429
      ],
      "op": "DUP7",
      "path": "28"
    },
    "2718": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7391,
        7429
      ],
      "op": "DUP1",
      "path": "28"
    },
    "2719": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7391,
        7429
      ],
      "op": "EXTCODESIZE",
      "path": "28"
    },
    "2720": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7391,
        7429
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "2721": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7391,
        7429
      ],
      "op": "DUP1",
      "path": "28"
    },
    "2722": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7391,
        7429
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "2723": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7391,
        7429
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0xAAB"
    },
    "2726": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7391,
        7429
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "2727": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7391,
        7429
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "2729": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7391,
        7429
      ],
      "op": "DUP1",
      "path": "28"
    },
    "2730": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7391,
        7429
      ],
      "op": "REVERT",
      "path": "28"
    },
    "2731": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7391,
        7429
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "2732": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7391,
        7429
      ],
      "op": "POP",
      "path": "28"
    },
    "2733": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7391,
        7429
      ],
      "op": "GAS",
      "path": "28"
    },
    "2734": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7391,
        7429
      ],
      "op": "STATICCALL",
      "path": "28"
    },
    "2735": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7391,
        7429
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "2736": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7391,
        7429
      ],
      "op": "DUP1",
      "path": "28"
    },
    "2737": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7391,
        7429
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "2738": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7391,
        7429
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0xABF"
    },
    "2741": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7391,
        7429
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "2742": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7391,
        7429
      ],
      "op": "RETURNDATASIZE",
      "path": "28"
    },
    "2743": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7391,
        7429
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "2745": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7391,
        7429
      ],
      "op": "DUP1",
      "path": "28"
    },
    "2746": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7391,
        7429
      ],
      "op": "RETURNDATACOPY",
      "path": "28"
    },
    "2747": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7391,
        7429
      ],
      "op": "RETURNDATASIZE",
      "path": "28"
    },
    "2748": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7391,
        7429
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "2750": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7391,
        7429
      ],
      "op": "REVERT",
      "path": "28"
    },
    "2751": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7391,
        7429
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "2752": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7391,
        7429
      ],
      "op": "POP",
      "path": "28"
    },
    "2753": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7391,
        7429
      ],
      "op": "POP",
      "path": "28"
    },
    "2754": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7391,
        7429
      ],
      "op": "POP",
      "path": "28"
    },
    "2755": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7391,
        7429
      ],
      "op": "POP",
      "path": "28"
    },
    "2756": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7391,
        7429
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "2758": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7391,
        7429
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "2759": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7391,
        7429
      ],
      "op": "RETURNDATASIZE",
      "path": "28"
    },
    "2760": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7391,
        7429
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x1F"
    },
    "2762": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7391,
        7429
      ],
      "op": "NOT",
      "path": "28"
    },
    "2763": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7391,
        7429
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x1F"
    },
    "2765": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7391,
        7429
      ],
      "op": "DUP3",
      "path": "28"
    },
    "2766": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7391,
        7429
      ],
      "op": "ADD",
      "path": "28"
    },
    "2767": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7391,
        7429
      ],
      "op": "AND",
      "path": "28"
    },
    "2768": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7391,
        7429
      ],
      "op": "DUP3",
      "path": "28"
    },
    "2769": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7391,
        7429
      ],
      "op": "ADD",
      "path": "28"
    },
    "2770": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7391,
        7429
      ],
      "op": "DUP1",
      "path": "28"
    },
    "2771": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7391,
        7429
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "2773": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7391,
        7429
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "2774": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7391,
        7429
      ],
      "op": "POP",
      "path": "28"
    },
    "2775": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7391,
        7429
      ],
      "op": "DUP2",
      "path": "28"
    },
    "2776": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7391,
        7429
      ],
      "op": "ADD",
      "path": "28"
    },
    "2777": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7391,
        7429
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "2778": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7391,
        7429
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0xAE3"
    },
    "2781": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7391,
        7429
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "2782": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7391,
        7429
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "2783": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7391,
        7429
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x241A"
    },
    "2786": {
      "fn": "MiniChefV2.pendingSushi",
      "jump": "i",
      "offset": [
        7391,
        7429
      ],
      "op": "JUMP",
      "path": "28"
    },
    "2787": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7391,
        7429
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "2788": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7372,
        7429
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "2789": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7372,
        7429
      ],
      "op": "POP",
      "path": "28"
    },
    "2790": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7461,
        7465
      ],
      "op": "DUP4",
      "path": "28"
    },
    "2791": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7461,
        7480
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x20"
    },
    "2793": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7461,
        7480
      ],
      "op": "ADD",
      "path": "28"
    },
    "2794": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7461,
        7480
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "2795": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2797": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2799": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2801": {
      "op": "SHL"
    },
    "2802": {
      "op": "SUB"
    },
    "2803": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7443,
        7480
      ],
      "op": "AND",
      "path": "28"
    },
    "2804": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7443,
        7458
      ],
      "op": "TIMESTAMP",
      "path": "28"
    },
    "2805": {
      "branch": 87,
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7443,
        7480
      ],
      "op": "GT",
      "path": "28"
    },
    "2806": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7443,
        7497
      ],
      "op": "DUP1",
      "path": "28"
    },
    "2807": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7443,
        7497
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "2808": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7443,
        7497
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0xB00"
    },
    "2811": {
      "branch": 87,
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7443,
        7497
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "2812": {
      "op": "POP"
    },
    "2813": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7484,
        7497
      ],
      "op": "DUP1",
      "path": "28"
    },
    "2814": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7484,
        7497
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "2815": {
      "branch": 88,
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7484,
        7497
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "2816": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7443,
        7497
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "2817": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7439,
        7780
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "2818": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7439,
        7780
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0xB8C"
    },
    "2821": {
      "branch": 88,
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7439,
        7780
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "2822": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7513,
        7525
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "2824": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7528,
        7568
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0xB27"
    },
    "2827": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7548,
        7552
      ],
      "op": "DUP6",
      "path": "28"
    },
    "2828": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7548,
        7567
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x20"
    },
    "2830": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7548,
        7567
      ],
      "op": "ADD",
      "path": "28"
    },
    "2831": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7548,
        7567
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "2832": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2834": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2836": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2838": {
      "op": "SHL"
    },
    "2839": {
      "op": "SUB"
    },
    "2840": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7528,
        7568
      ],
      "op": "AND",
      "path": "28"
    },
    "2841": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7528,
        7543
      ],
      "op": "TIMESTAMP",
      "path": "28"
    },
    "2842": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7528,
        7547
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1DD1"
    },
    "2845": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7528,
        7547
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "2846": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7528,
        7568
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "2847": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7528,
        7568
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "2848": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7528,
        7568
      ],
      "op": "PUSH4",
      "path": "28",
      "value": "0xFFFFFFFF"
    },
    "2853": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7528,
        7568
      ],
      "op": "AND",
      "path": "28"
    },
    "2854": {
      "fn": "MiniChefV2.pendingSushi",
      "jump": "i",
      "offset": [
        7528,
        7568
      ],
      "op": "JUMP",
      "path": "28"
    },
    "2855": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7528,
        7568
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "2856": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7513,
        7568
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "2857": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7513,
        7568
      ],
      "op": "POP",
      "path": "28"
    },
    "2858": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7582,
        7601
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "2860": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7652,
        7667
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x8"
    },
    "2862": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7652,
        7667
      ],
      "op": "SLOAD",
      "path": "28"
    },
    "2863": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7604,
        7649
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0xB5A"
    },
    "2866": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7633,
        7637
      ],
      "op": "DUP8",
      "path": "28"
    },
    "2867": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7633,
        7648
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "2869": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7633,
        7648
      ],
      "op": "ADD",
      "path": "28"
    },
    "2870": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7633,
        7648
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "2871": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2873": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2875": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2877": {
      "op": "SHL"
    },
    "2878": {
      "op": "SUB"
    },
    "2879": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7604,
        7649
      ],
      "op": "AND",
      "path": "28"
    },
    "2880": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7604,
        7628
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0xB54"
    },
    "2883": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7613,
        7627
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x9"
    },
    "2885": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7613,
        7627
      ],
      "op": "SLOAD",
      "path": "28"
    },
    "2886": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7604,
        7608
      ],
      "op": "DUP7",
      "path": "28"
    },
    "2887": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7604,
        7612
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1D47"
    },
    "2890": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7604,
        7612
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "2891": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7604,
        7628
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "2892": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7604,
        7628
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "2893": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7604,
        7628
      ],
      "op": "PUSH4",
      "path": "28",
      "value": "0xFFFFFFFF"
    },
    "2898": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7604,
        7628
      ],
      "op": "AND",
      "path": "28"
    },
    "2899": {
      "fn": "MiniChefV2.pendingSushi",
      "jump": "i",
      "offset": [
        7604,
        7628
      ],
      "op": "JUMP",
      "path": "28"
    },
    "2900": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7604,
        7628
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "2901": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7604,
        7632
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "2902": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7604,
        7632
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1D47"
    },
    "2905": {
      "fn": "MiniChefV2.pendingSushi",
      "jump": "i",
      "offset": [
        7604,
        7649
      ],
      "op": "JUMP",
      "path": "28"
    },
    "2906": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7604,
        7649
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "2907": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7604,
        7667
      ],
      "op": "DUP2",
      "path": "28"
    },
    "2908": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7604,
        7667
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0xB61"
    },
    "2911": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7604,
        7667
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "2912": {
      "dev": "Division by zero",
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7604,
        7667
      ],
      "op": "INVALID",
      "path": "28"
    },
    "2913": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7604,
        7667
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "2914": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7604,
        7667
      ],
      "op": "DIV",
      "path": "28"
    },
    "2915": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7604,
        7667
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "2916": {
      "op": "POP"
    },
    "2917": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7700,
        7769
      ],
      "op": "PUSH2",
      "path": "28",
      "statement": 15,
      "value": "0xB87"
    },
    "2920": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7760,
        7768
      ],
      "op": "DUP4",
      "path": "28"
    },
    "2921": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7721,
        7757
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0xB77"
    },
    "2924": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7604,
        7667
      ],
      "op": "DUP4",
      "path": "28"
    },
    "2925": {
      "offset": [
        2699,
        2703
      ],
      "op": "PUSH5",
      "path": "28",
      "value": "0xE8D4A51000"
    },
    "2931": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7721,
        7736
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1D47"
    },
    "2934": {
      "fn": "MiniChefV2.pendingSushi",
      "jump": "i",
      "offset": [
        7721,
        7757
      ],
      "op": "JUMP",
      "path": "28"
    },
    "2935": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7721,
        7757
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "2936": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7721,
        7768
      ],
      "op": "DUP2",
      "path": "28"
    },
    "2937": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7721,
        7768
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0xB7E"
    },
    "2940": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7721,
        7768
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "2941": {
      "dev": "Division by zero",
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7721,
        7768
      ],
      "op": "INVALID",
      "path": "28"
    },
    "2942": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7721,
        7768
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "2943": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7700,
        7716
      ],
      "op": "DUP7",
      "path": "28"
    },
    "2944": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7700,
        7716
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "2945": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7721,
        7768
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "2946": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7721,
        7768
      ],
      "op": "DIV",
      "path": "28"
    },
    "2947": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7700,
        7720
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1F10"
    },
    "2950": {
      "fn": "MiniChefV2.pendingSushi",
      "jump": "i",
      "offset": [
        7700,
        7769
      ],
      "op": "JUMP",
      "path": "28"
    },
    "2951": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7700,
        7769
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "2952": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7681,
        7769
      ],
      "op": "SWAP4",
      "path": "28"
    },
    "2953": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7681,
        7769
      ],
      "op": "POP",
      "path": "28"
    },
    "2954": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7439,
        7780
      ],
      "op": "POP",
      "path": "28"
    },
    "2955": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7439,
        7780
      ],
      "op": "POP",
      "path": "28"
    },
    "2956": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7439,
        7780
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "2957": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7867,
        7882
      ],
      "op": "PUSH1",
      "path": "28",
      "statement": 16,
      "value": "0x1"
    },
    "2959": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7867,
        7882
      ],
      "op": "DUP4",
      "path": "28"
    },
    "2960": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7867,
        7882
      ],
      "op": "ADD",
      "path": "28"
    },
    "2961": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7867,
        7882
      ],
      "op": "SLOAD",
      "path": "28"
    },
    "2962": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7806,
        7817
      ],
      "op": "DUP4",
      "path": "28"
    },
    "2963": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7806,
        7817
      ],
      "op": "SLOAD",
      "path": "28"
    },
    "2964": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7799,
        7895
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0xBBA"
    },
    "2967": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7799,
        7895
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "2968": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7799,
        7883
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x89E"
    },
    "2971": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7799,
        7883
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "2972": {
      "offset": [
        2699,
        2703
      ],
      "op": "PUSH5",
      "path": "28",
      "value": "0xE8D4A51000"
    },
    "2978": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        2699,
        2703
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "2979": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7806,
        7839
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0xBAC"
    },
    "2982": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7806,
        7839
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "2983": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7822,
        7838
      ],
      "op": "DUP8",
      "path": "28"
    },
    "2984": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7806,
        7821
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1D47"
    },
    "2987": {
      "fn": "MiniChefV2.pendingSushi",
      "jump": "i",
      "offset": [
        7806,
        7839
      ],
      "op": "JUMP",
      "path": "28"
    },
    "2988": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7806,
        7839
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "2989": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7806,
        7861
      ],
      "op": "DUP2",
      "path": "28"
    },
    "2990": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7806,
        7861
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0xBB3"
    },
    "2993": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7806,
        7861
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "2994": {
      "dev": "Division by zero",
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7806,
        7861
      ],
      "op": "INVALID",
      "path": "28"
    },
    "2995": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7806,
        7861
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "2996": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7806,
        7861
      ],
      "op": "DIV",
      "path": "28"
    },
    "2997": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7806,
        7861
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "2998": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7799,
        7866
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1D84"
    },
    "3001": {
      "fn": "MiniChefV2.pendingSushi",
      "jump": "i",
      "offset": [
        7799,
        7883
      ],
      "op": "JUMP",
      "path": "28"
    },
    "3002": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7799,
        7895
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "3003": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7789,
        7895
      ],
      "op": "SWAP8",
      "path": "28"
    },
    "3004": {
      "fn": "MiniChefV2.pendingSushi",
      "offset": [
        7111,
        7902
      ],
      "op": "SWAP7",
      "path": "28"
    },
    "3005": {
      "op": "POP"
    },
    "3006": {
      "op": "POP"
    },
    "3007": {
      "op": "POP"
    },
    "3008": {
      "op": "POP"
    },
    "3009": {
      "op": "POP"
    },
    "3010": {
      "op": "POP"
    },
    "3011": {
      "op": "POP"
    },
    "3012": {
      "fn": "MiniChefV2.pendingSushi",
      "jump": "o",
      "offset": [
        7111,
        7902
      ],
      "op": "JUMP",
      "path": "28"
    },
    "3013": {
      "fn": "MiniChefV2.setMigrator",
      "offset": [
        5981,
        6081
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "3014": {
      "offset": [
        2146,
        2151
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "3016": {
      "fn": "MiniChefV2.setMigrator",
      "offset": [
        2146,
        2151
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "3017": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3019": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3021": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3023": {
      "op": "SHL"
    },
    "3024": {
      "op": "SUB"
    },
    "3025": {
      "offset": [
        2146,
        2151
      ],
      "op": "AND",
      "path": "11"
    },
    "3026": {
      "offset": [
        2132,
        2142
      ],
      "op": "CALLER",
      "path": "11"
    },
    "3027": {
      "offset": [
        2132,
        2151
      ],
      "op": "EQ",
      "path": "11"
    },
    "3028": {
      "offset": [
        2124,
        2188
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xBEF"
    },
    "3031": {
      "offset": [
        2124,
        2188
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "3032": {
      "fn": "MiniChefV2.setMigrator",
      "offset": [
        2124,
        2188
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "3034": {
      "fn": "MiniChefV2.setMigrator",
      "offset": [
        2124,
        2188
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "3035": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3039": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3041": {
      "op": "SHL"
    },
    "3042": {
      "offset": [
        2124,
        2188
      ],
      "op": "DUP2",
      "path": "11"
    },
    "3043": {
      "fn": "MiniChefV2.setMigrator",
      "offset": [
        2124,
        2188
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "3044": {
      "fn": "MiniChefV2.setMigrator",
      "offset": [
        2124,
        2188
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "3046": {
      "fn": "MiniChefV2.setMigrator",
      "offset": [
        2124,
        2188
      ],
      "op": "ADD",
      "path": "11"
    },
    "3047": {
      "fn": "MiniChefV2.setMigrator",
      "offset": [
        2124,
        2188
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x588"
    },
    "3050": {
      "fn": "MiniChefV2.setMigrator",
      "offset": [
        2124,
        2188
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "3051": {
      "fn": "MiniChefV2.setMigrator",
      "offset": [
        2124,
        2188
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x27BB"
    },
    "3054": {
      "fn": "MiniChefV2.setMigrator",
      "jump": "i",
      "offset": [
        2124,
        2188
      ],
      "op": "JUMP",
      "path": "11"
    },
    "3055": {
      "fn": "MiniChefV2.setMigrator",
      "offset": [
        2124,
        2188
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "3056": {
      "fn": "MiniChefV2.setMigrator",
      "offset": [
        6054,
        6062
      ],
      "op": "PUSH1",
      "path": "28",
      "statement": 17,
      "value": "0x2"
    },
    "3058": {
      "fn": "MiniChefV2.setMigrator",
      "offset": [
        6054,
        6074
      ],
      "op": "DUP1",
      "path": "28"
    },
    "3059": {
      "fn": "MiniChefV2.setMigrator",
      "offset": [
        6054,
        6074
      ],
      "op": "SLOAD",
      "path": "28"
    },
    "3060": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3062": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3064": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3066": {
      "op": "SHL"
    },
    "3067": {
      "op": "SUB"
    },
    "3068": {
      "op": "NOT"
    },
    "3069": {
      "fn": "MiniChefV2.setMigrator",
      "offset": [
        6054,
        6074
      ],
      "op": "AND",
      "path": "28"
    },
    "3070": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3072": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3074": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3076": {
      "op": "SHL"
    },
    "3077": {
      "op": "SUB"
    },
    "3078": {
      "fn": "MiniChefV2.setMigrator",
      "offset": [
        6054,
        6074
      ],
      "op": "SWAP3",
      "path": "28"
    },
    "3079": {
      "fn": "MiniChefV2.setMigrator",
      "offset": [
        6054,
        6074
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "3080": {
      "fn": "MiniChefV2.setMigrator",
      "offset": [
        6054,
        6074
      ],
      "op": "SWAP3",
      "path": "28"
    },
    "3081": {
      "fn": "MiniChefV2.setMigrator",
      "offset": [
        6054,
        6074
      ],
      "op": "AND",
      "path": "28"
    },
    "3082": {
      "fn": "MiniChefV2.setMigrator",
      "offset": [
        6054,
        6074
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "3083": {
      "fn": "MiniChefV2.setMigrator",
      "offset": [
        6054,
        6074
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "3084": {
      "fn": "MiniChefV2.setMigrator",
      "offset": [
        6054,
        6074
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "3085": {
      "fn": "MiniChefV2.setMigrator",
      "offset": [
        6054,
        6074
      ],
      "op": "OR",
      "path": "28"
    },
    "3086": {
      "fn": "MiniChefV2.setMigrator",
      "offset": [
        6054,
        6074
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "3087": {
      "fn": "MiniChefV2.setMigrator",
      "offset": [
        6054,
        6074
      ],
      "op": "SSTORE",
      "path": "28"
    },
    "3088": {
      "fn": "MiniChefV2.setMigrator",
      "jump": "o",
      "offset": [
        5981,
        6081
      ],
      "op": "JUMP",
      "path": "28"
    },
    "3089": {
      "fn": "MiniChefV2.emergencyWithdraw",
      "offset": [
        13380,
        13941
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "3090": {
      "fn": "MiniChefV2.emergencyWithdraw",
      "offset": [
        13449,
        13470
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "3092": {
      "fn": "MiniChefV2.emergencyWithdraw",
      "offset": [
        13473,
        13486
      ],
      "op": "DUP3",
      "path": "28"
    },
    "3093": {
      "fn": "MiniChefV2.emergencyWithdraw",
      "offset": [
        13473,
        13486
      ],
      "op": "DUP2",
      "path": "28"
    },
    "3094": {
      "fn": "MiniChefV2.emergencyWithdraw",
      "offset": [
        13473,
        13486
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "3095": {
      "fn": "MiniChefV2.emergencyWithdraw",
      "offset": [
        13473,
        13481
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x6"
    },
    "3097": {
      "fn": "MiniChefV2.emergencyWithdraw",
      "offset": [
        13473,
        13486
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x20"
    },
    "3099": {
      "fn": "MiniChefV2.emergencyWithdraw",
      "offset": [
        13473,
        13486
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "3100": {
      "fn": "MiniChefV2.emergencyWithdraw",
      "offset": [
        13473,
        13486
      ],
      "op": "DUP2",
      "path": "28"
    },
    "3101": {
      "fn": "MiniChefV2.emergencyWithdraw",
      "offset": [
        13473,
        13486
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "3102": {
      "fn": "MiniChefV2.emergencyWithdraw",
      "offset": [
        13473,
        13486
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "3104": {
      "fn": "MiniChefV2.emergencyWithdraw",
      "offset": [
        13473,
        13486
      ],
      "op": "DUP1",
      "path": "28"
    },
    "3105": {
      "fn": "MiniChefV2.emergencyWithdraw",
      "offset": [
        13473,
        13486
      ],
      "op": "DUP4",
      "path": "28"
    },
    "3106": {
      "fn": "MiniChefV2.emergencyWithdraw",
      "offset": [
        13473,
        13486
      ],
      "op": "KECCAK256",
      "path": "28"
    },
    "3107": {
      "fn": "MiniChefV2.emergencyWithdraw",
      "offset": [
        13487,
        13497
      ],
      "op": "CALLER",
      "path": "28"
    },
    "3108": {
      "fn": "MiniChefV2.emergencyWithdraw",
      "offset": [
        13473,
        13498
      ],
      "op": "DUP5",
      "path": "28"
    },
    "3109": {
      "fn": "MiniChefV2.emergencyWithdraw",
      "offset": [
        13473,
        13498
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "3110": {
      "fn": "MiniChefV2.emergencyWithdraw",
      "offset": [
        13473,
        13498
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "3111": {
      "fn": "MiniChefV2.emergencyWithdraw",
      "offset": [
        13473,
        13498
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "3112": {
      "fn": "MiniChefV2.emergencyWithdraw",
      "offset": [
        13473,
        13498
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "3113": {
      "fn": "MiniChefV2.emergencyWithdraw",
      "offset": [
        13473,
        13498
      ],
      "op": "DUP2",
      "path": "28"
    },
    "3114": {
      "fn": "MiniChefV2.emergencyWithdraw",
      "offset": [
        13473,
        13498
      ],
      "op": "KECCAK256",
      "path": "28"
    },
    "3115": {
      "fn": "MiniChefV2.emergencyWithdraw",
      "offset": [
        13525,
        13536
      ],
      "op": "DUP1",
      "path": "28"
    },
    "3116": {
      "fn": "MiniChefV2.emergencyWithdraw",
      "offset": [
        13525,
        13536
      ],
      "op": "SLOAD",
      "path": "28"
    },
    "3117": {
      "fn": "MiniChefV2.emergencyWithdraw",
      "offset": [
        13546,
        13561
      ],
      "op": "DUP3",
      "path": "28",
      "statement": 18
    },
    "3118": {
      "fn": "MiniChefV2.emergencyWithdraw",
      "offset": [
        13546,
        13561
      ],
      "op": "DUP3",
      "path": "28"
    },
    "3119": {
      "fn": "MiniChefV2.emergencyWithdraw",
      "offset": [
        13546,
        13561
      ],
      "op": "SSTORE",
      "path": "28"
    },
    "3120": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3122": {
      "fn": "MiniChefV2.emergencyWithdraw",
      "offset": [
        13571,
        13586
      ],
      "op": "DUP3",
      "path": "28",
      "statement": 19
    },
    "3123": {
      "fn": "MiniChefV2.emergencyWithdraw",
      "offset": [
        13571,
        13586
      ],
      "op": "ADD",
      "path": "28"
    },
    "3124": {
      "fn": "MiniChefV2.emergencyWithdraw",
      "offset": [
        13571,
        13590
      ],
      "op": "DUP4",
      "path": "28"
    },
    "3125": {
      "fn": "MiniChefV2.emergencyWithdraw",
      "offset": [
        13571,
        13590
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "3126": {
      "fn": "MiniChefV2.emergencyWithdraw",
      "offset": [
        13571,
        13590
      ],
      "op": "SSTORE",
      "path": "28"
    },
    "3127": {
      "fn": "MiniChefV2.emergencyWithdraw",
      "offset": [
        13623,
        13631
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x5"
    },
    "3129": {
      "fn": "MiniChefV2.emergencyWithdraw",
      "offset": [
        13623,
        13636
      ],
      "op": "DUP1",
      "path": "28"
    },
    "3130": {
      "fn": "MiniChefV2.emergencyWithdraw",
      "offset": [
        13623,
        13636
      ],
      "op": "SLOAD",
      "path": "28"
    },
    "3131": {
      "fn": "MiniChefV2.emergencyWithdraw",
      "offset": [
        13473,
        13498
      ],
      "op": "SWAP3",
      "path": "28"
    },
    "3132": {
      "fn": "MiniChefV2.emergencyWithdraw",
      "offset": [
        13473,
        13498
      ],
      "op": "SWAP4",
      "path": "28"
    },
    "3133": {
      "fn": "MiniChefV2.emergencyWithdraw",
      "offset": [
        13525,
        13536
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "3134": {
      "fn": "MiniChefV2.emergencyWithdraw",
      "offset": [
        13525,
        13536
      ],
      "op": "SWAP3",
      "path": "28"
    },
    "3135": {
      "fn": "MiniChefV2.emergencyWithdraw",
      "offset": [
        13482,
        13485
      ],
      "op": "DUP7",
      "path": "28"
    },
    "3136": {
      "fn": "MiniChefV2.emergencyWithdraw",
      "offset": [
        13482,
        13485
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "3137": {
      "fn": "MiniChefV2.emergencyWithdraw",
      "offset": [
        13623,
        13636
      ],
      "op": "DUP2",
      "path": "28"
    },
    "3138": {
      "fn": "MiniChefV2.emergencyWithdraw",
      "offset": [
        13623,
        13636
      ],
      "op": "LT",
      "path": "28"
    },
    "3139": {
      "fn": "MiniChefV2.emergencyWithdraw",
      "offset": [
        13623,
        13636
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0xC48"
    },
    "3142": {
      "fn": "MiniChefV2.emergencyWithdraw",
      "offset": [
        13623,
        13636
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "3143": {
      "dev": "Index out of range",
      "fn": "MiniChefV2.emergencyWithdraw",
      "offset": [
        13623,
        13636
      ],
      "op": "INVALID",
      "path": "28"
    },
    "3144": {
      "fn": "MiniChefV2.emergencyWithdraw",
      "offset": [
        13623,
        13636
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "3145": {
      "fn": "MiniChefV2.emergencyWithdraw",
      "offset": [
        13623,
        13636
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "3147": {
      "fn": "MiniChefV2.emergencyWithdraw",
      "offset": [
        13623,
        13636
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "3148": {
      "fn": "MiniChefV2.emergencyWithdraw",
      "offset": [
        13623,
        13636
      ],
      "op": "DUP3",
      "path": "28"
    },
    "3149": {
      "fn": "MiniChefV2.emergencyWithdraw",
      "offset": [
        13623,
        13636
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "3150": {
      "fn": "MiniChefV2.emergencyWithdraw",
      "offset": [
        13623,
        13636
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x20"
    },
    "3152": {
      "fn": "MiniChefV2.emergencyWithdraw",
      "offset": [
        13623,
        13636
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "3153": {
      "fn": "MiniChefV2.emergencyWithdraw",
      "offset": [
        13623,
        13636
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "3154": {
      "fn": "MiniChefV2.emergencyWithdraw",
      "offset": [
        13623,
        13636
      ],
      "op": "KECCAK256",
      "path": "28"
    },
    "3155": {
      "fn": "MiniChefV2.emergencyWithdraw",
      "offset": [
        13623,
        13636
      ],
      "op": "ADD",
      "path": "28"
    },
    "3156": {
      "fn": "MiniChefV2.emergencyWithdraw",
      "offset": [
        13623,
        13636
      ],
      "op": "SLOAD",
      "path": "28"
    },
    "3157": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3159": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3161": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3163": {
      "op": "SHL"
    },
    "3164": {
      "op": "SUB"
    },
    "3165": {
      "fn": "MiniChefV2.emergencyWithdraw",
      "offset": [
        13623,
        13636
      ],
      "op": "AND",
      "path": "28"
    },
    "3166": {
      "fn": "MiniChefV2.emergencyWithdraw",
      "offset": [
        13623,
        13636
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "3167": {
      "op": "POP"
    },
    "3168": {
      "fn": "MiniChefV2.emergencyWithdraw",
      "offset": [
        13650,
        13682
      ],
      "op": "DUP1",
      "path": "28"
    },
    "3169": {
      "branch": 89,
      "fn": "MiniChefV2.emergencyWithdraw",
      "offset": [
        13650,
        13682
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "3170": {
      "fn": "MiniChefV2.emergencyWithdraw",
      "offset": [
        13646,
        13759
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0xCCD"
    },
    "3173": {
      "branch": 89,
      "fn": "MiniChefV2.emergencyWithdraw",
      "offset": [
        13646,
        13759
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "3174": {
      "fn": "MiniChefV2.emergencyWithdraw",
      "offset": [
        13698,
        13748
      ],
      "op": "PUSH1",
      "path": "28",
      "statement": 20,
      "value": "0x40"
    },
    "3176": {
      "fn": "MiniChefV2.emergencyWithdraw",
      "offset": [
        13698,
        13748
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "3177": {
      "op": "PUSH4",
      "value": "0x45FB1BA1"
    },
    "3182": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "3184": {
      "op": "SHL"
    },
    "3185": {
      "fn": "MiniChefV2.emergencyWithdraw",
      "offset": [
        13698,
        13748
      ],
      "op": "DUP2",
      "path": "28"
    },
    "3186": {
      "fn": "MiniChefV2.emergencyWithdraw",
      "offset": [
        13698,
        13748
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "3187": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3189": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3191": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3193": {
      "op": "SHL"
    },
    "3194": {
      "op": "SUB"
    },
    "3195": {
      "fn": "MiniChefV2.emergencyWithdraw",
      "offset": [
        13698,
        13721
      ],
      "op": "DUP3",
      "path": "28"
    },
    "3196": {
      "fn": "MiniChefV2.emergencyWithdraw",
      "offset": [
        13698,
        13721
      ],
      "op": "AND",
      "path": "28"
    },
    "3197": {
      "fn": "MiniChefV2.emergencyWithdraw",
      "offset": [
        13698,
        13721
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "3198": {
      "fn": "MiniChefV2.emergencyWithdraw",
      "offset": [
        13698,
        13721
      ],
      "op": "PUSH4",
      "path": "28",
      "value": "0x8BF63742"
    },
    "3203": {
      "fn": "MiniChefV2.emergencyWithdraw",
      "offset": [
        13698,
        13721
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "3204": {
      "fn": "MiniChefV2.emergencyWithdraw",
      "offset": [
        13698,
        13748
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0xC9A"
    },
    "3207": {
      "fn": "MiniChefV2.emergencyWithdraw",
      "offset": [
        13698,
        13748
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "3208": {
      "fn": "MiniChefV2.emergencyWithdraw",
      "offset": [
        13722,
        13725
      ],
      "op": "DUP9",
      "path": "28"
    },
    "3209": {
      "fn": "MiniChefV2.emergencyWithdraw",
      "offset": [
        13722,
        13725
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "3210": {
      "fn": "MiniChefV2.emergencyWithdraw",
      "offset": [
        13727,
        13737
      ],
      "op": "CALLER",
      "path": "28"
    },
    "3211": {
      "fn": "MiniChefV2.emergencyWithdraw",
      "offset": [
        13727,
        13737
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "3212": {
      "fn": "MiniChefV2.emergencyWithdraw",
      "offset": [
        13739,
        13741
      ],
      "op": "DUP10",
      "path": "28"
    },
    "3213": {
      "fn": "MiniChefV2.emergencyWithdraw",
      "offset": [
        13739,
        13741
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "3214": {
      "fn": "MiniChefV2.emergencyWithdraw",
      "offset": [
        13743,
        13744
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "3216": {
      "fn": "MiniChefV2.emergencyWithdraw",
      "offset": [
        13743,
        13744
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "3217": {
      "fn": "MiniChefV2.emergencyWithdraw",
      "offset": [
        13743,
        13744
      ],
      "op": "DUP2",
      "path": "28"
    },
    "3218": {
      "fn": "MiniChefV2.emergencyWithdraw",
      "offset": [
        13743,
        13744
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "3219": {
      "fn": "MiniChefV2.emergencyWithdraw",
      "offset": [
        13698,
        13748
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x4"
    },
    "3221": {
      "fn": "MiniChefV2.emergencyWithdraw",
      "offset": [
        13698,
        13748
      ],
      "op": "ADD",
      "path": "28"
    },
    "3222": {
      "fn": "MiniChefV2.emergencyWithdraw",
      "offset": [
        13698,
        13748
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x29DC"
    },
    "3225": {
      "fn": "MiniChefV2.emergencyWithdraw",
      "jump": "i",
      "offset": [
        13698,
        13748
      ],
      "op": "JUMP",
      "path": "28"
    },
    "3226": {
      "fn": "MiniChefV2.emergencyWithdraw",
      "offset": [
        13698,
        13748
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "3227": {
      "fn": "MiniChefV2.emergencyWithdraw",
      "offset": [
        13698,
        13748
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "3229": {
      "fn": "MiniChefV2.emergencyWithdraw",
      "offset": [
        13698,
        13748
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "3231": {
      "fn": "MiniChefV2.emergencyWithdraw",
      "offset": [
        13698,
        13748
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "3232": {
      "fn": "MiniChefV2.emergencyWithdraw",
      "offset": [
        13698,
        13748
      ],
      "op": "DUP1",
      "path": "28"
    },
    "3233": {
      "fn": "MiniChefV2.emergencyWithdraw",
      "offset": [
        13698,
        13748
      ],
      "op": "DUP4",
      "path": "28"
    },
    "3234": {
      "fn": "MiniChefV2.emergencyWithdraw",
      "offset": [
        13698,
        13748
      ],
      "op": "SUB",
      "path": "28"
    },
    "3235": {
      "fn": "MiniChefV2.emergencyWithdraw",
      "offset": [
        13698,
        13748
      ],
      "op": "DUP2",
      "path": "28"
    },
    "3236": {
      "fn": "MiniChefV2.emergencyWithdraw",
      "offset": [
        13698,
        13748
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "3238": {
      "fn": "MiniChefV2.emergencyWithdraw",
      "offset": [
        13698,
        13748
      ],
      "op": "DUP8",
      "path": "28"
    },
    "3239": {
      "fn": "MiniChefV2.emergencyWithdraw",
      "offset": [
        13698,
        13748
      ],
      "op": "DUP1",
      "path": "28"
    },
    "3240": {
      "fn": "MiniChefV2.emergencyWithdraw",
      "offset": [
        13698,
        13748
      ],
      "op": "EXTCODESIZE",
      "path": "28"
    },
    "3241": {
      "fn": "MiniChefV2.emergencyWithdraw",
      "offset": [
        13698,
        13748
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "3242": {
      "fn": "MiniChefV2.emergencyWithdraw",
      "offset": [
        13698,
        13748
      ],
      "op": "DUP1",
      "path": "28"
    },
    "3243": {
      "fn": "MiniChefV2.emergencyWithdraw",
      "offset": [
        13698,
        13748
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "3244": {
      "fn": "MiniChefV2.emergencyWithdraw",
      "offset": [
        13698,
        13748
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0xCB4"
    },
    "3247": {
      "fn": "MiniChefV2.emergencyWithdraw",
      "offset": [
        13698,
        13748
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "3248": {
      "fn": "MiniChefV2.emergencyWithdraw",
      "offset": [
        13698,
        13748
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "3250": {
      "fn": "MiniChefV2.emergencyWithdraw",
      "offset": [
        13698,
        13748
      ],
      "op": "DUP1",
      "path": "28"
    },
    "3251": {
      "fn": "MiniChefV2.emergencyWithdraw",
      "offset": [
        13698,
        13748
      ],
      "op": "REVERT",
      "path": "28"
    },
    "3252": {
      "fn": "MiniChefV2.emergencyWithdraw",
      "offset": [
        13698,
        13748
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "3253": {
      "fn": "MiniChefV2.emergencyWithdraw",
      "offset": [
        13698,
        13748
      ],
      "op": "POP",
      "path": "28"
    },
    "3254": {
      "fn": "MiniChefV2.emergencyWithdraw",
      "offset": [
        13698,
        13748
      ],
      "op": "GAS",
      "path": "28"
    },
    "3255": {
      "fn": "MiniChefV2.emergencyWithdraw",
      "offset": [
        13698,
        13748
      ],
      "op": "CALL",
      "path": "28"
    },
    "3256": {
      "fn": "MiniChefV2.emergencyWithdraw",
      "offset": [
        13698,
        13748
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "3257": {
      "fn": "MiniChefV2.emergencyWithdraw",
      "offset": [
        13698,
        13748
      ],
      "op": "DUP1",
      "path": "28"
    },
    "3258": {
      "fn": "MiniChefV2.emergencyWithdraw",
      "offset": [
        13698,
        13748
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "3259": {
      "fn": "MiniChefV2.emergencyWithdraw",
      "offset": [
        13698,
        13748
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0xCC8"
    },
    "3262": {
      "fn": "MiniChefV2.emergencyWithdraw",
      "offset": [
        13698,
        13748
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "3263": {
      "fn": "MiniChefV2.emergencyWithdraw",
      "offset": [
        13698,
        13748
      ],
      "op": "RETURNDATASIZE",
      "path": "28"
    },
    "3264": {
      "fn": "MiniChefV2.emergencyWithdraw",
      "offset": [
        13698,
        13748
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "3266": {
      "fn": "MiniChefV2.emergencyWithdraw",
      "offset": [
        13698,
        13748
      ],
      "op": "DUP1",
      "path": "28"
    },
    "3267": {
      "fn": "MiniChefV2.emergencyWithdraw",
      "offset": [
        13698,
        13748
      ],
      "op": "RETURNDATACOPY",
      "path": "28"
    },
    "3268": {
      "fn": "MiniChefV2.emergencyWithdraw",
      "offset": [
        13698,
        13748
      ],
      "op": "RETURNDATASIZE",
      "path": "28"
    },
    "3269": {
      "fn": "MiniChefV2.emergencyWithdraw",
      "offset": [
        13698,
        13748
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "3271": {
      "fn": "MiniChefV2.emergencyWithdraw",
      "offset": [
        13698,
        13748
      ],
      "op": "REVERT",
      "path": "28"
    },
    "3272": {
      "fn": "MiniChefV2.emergencyWithdraw",
      "offset": [
        13698,
        13748
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "3273": {
      "fn": "MiniChefV2.emergencyWithdraw",
      "offset": [
        13698,
        13748
      ],
      "op": "POP",
      "path": "28"
    },
    "3274": {
      "fn": "MiniChefV2.emergencyWithdraw",
      "offset": [
        13698,
        13748
      ],
      "op": "POP",
      "path": "28"
    },
    "3275": {
      "fn": "MiniChefV2.emergencyWithdraw",
      "offset": [
        13698,
        13748
      ],
      "op": "POP",
      "path": "28"
    },
    "3276": {
      "fn": "MiniChefV2.emergencyWithdraw",
      "offset": [
        13698,
        13748
      ],
      "op": "POP",
      "path": "28"
    },
    "3277": {
      "fn": "MiniChefV2.emergencyWithdraw",
      "offset": [
        13646,
        13759
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "3278": {
      "fn": "MiniChefV2.emergencyWithdraw",
      "offset": [
        13836,
        13873
      ],
      "op": "PUSH2",
      "path": "28",
      "statement": 21,
      "value": "0xCDF"
    },
    "3281": {
      "fn": "MiniChefV2.emergencyWithdraw",
      "offset": [
        13862,
        13864
      ],
      "op": "DUP5",
      "path": "28"
    },
    "3282": {
      "fn": "MiniChefV2.emergencyWithdraw",
      "offset": [
        13866,
        13872
      ],
      "op": "DUP4",
      "path": "28"
    },
    "3283": {
      "fn": "MiniChefV2.emergencyWithdraw",
      "offset": [
        13836,
        13843
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x4"
    },
    "3285": {
      "fn": "MiniChefV2.emergencyWithdraw",
      "offset": [
        13844,
        13847
      ],
      "op": "DUP9",
      "path": "28"
    },
    "3286": {
      "fn": "MiniChefV2.emergencyWithdraw",
      "offset": [
        13836,
        13848
      ],
      "op": "DUP2",
      "path": "28"
    },
    "3287": {
      "fn": "MiniChefV2.emergencyWithdraw",
      "offset": [
        13836,
        13848
      ],
      "op": "SLOAD",
      "path": "28"
    },
    "3288": {
      "fn": "MiniChefV2.emergencyWithdraw",
      "offset": [
        13836,
        13848
      ],
      "op": "DUP2",
      "path": "28"
    },
    "3289": {
      "fn": "MiniChefV2.emergencyWithdraw",
      "offset": [
        13836,
        13848
      ],
      "op": "LT",
      "path": "28"
    },
    "3290": {
      "fn": "MiniChefV2.emergencyWithdraw",
      "offset": [
        13836,
        13848
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x773"
    },
    "3293": {
      "fn": "MiniChefV2.emergencyWithdraw",
      "offset": [
        13836,
        13848
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "3294": {
      "dev": "Index out of range",
      "fn": "MiniChefV2.emergencyWithdraw",
      "offset": [
        13836,
        13848
      ],
      "op": "INVALID",
      "path": "28"
    },
    "3295": {
      "fn": "MiniChefV2.emergencyWithdraw",
      "offset": [
        13836,
        13873
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "3296": {
      "fn": "MiniChefV2.emergencyWithdraw",
      "offset": [
        13931,
        13933
      ],
      "op": "DUP4",
      "path": "28",
      "statement": 22
    },
    "3297": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3299": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3301": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3303": {
      "op": "SHL"
    },
    "3304": {
      "op": "SUB"
    },
    "3305": {
      "fn": "MiniChefV2.emergencyWithdraw",
      "offset": [
        13888,
        13934
      ],
      "op": "AND",
      "path": "28"
    },
    "3306": {
      "fn": "MiniChefV2.emergencyWithdraw",
      "offset": [
        13918,
        13921
      ],
      "op": "DUP6",
      "path": "28"
    },
    "3307": {
      "fn": "MiniChefV2.emergencyWithdraw",
      "offset": [
        13906,
        13916
      ],
      "op": "CALLER",
      "path": "28"
    },
    "3308": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3310": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3312": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3314": {
      "op": "SHL"
    },
    "3315": {
      "op": "SUB"
    },
    "3316": {
      "fn": "MiniChefV2.emergencyWithdraw",
      "offset": [
        13888,
        13934
      ],
      "op": "AND",
      "path": "28"
    },
    "3317": {
      "fn": "MiniChefV2.emergencyWithdraw",
      "offset": [
        13888,
        13934
      ],
      "op": "PUSH32",
      "path": "28",
      "value": "0x2CAC5E20E1541D836381527A43F651851E302817B71DC8E810284E69210C1C6B"
    },
    "3350": {
      "fn": "MiniChefV2.emergencyWithdraw",
      "offset": [
        13923,
        13929
      ],
      "op": "DUP6",
      "path": "28"
    },
    "3351": {
      "fn": "MiniChefV2.emergencyWithdraw",
      "offset": [
        13888,
        13934
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "3353": {
      "fn": "MiniChefV2.emergencyWithdraw",
      "offset": [
        13888,
        13934
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "3354": {
      "fn": "MiniChefV2.emergencyWithdraw",
      "offset": [
        13888,
        13934
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0xD23"
    },
    "3357": {
      "fn": "MiniChefV2.emergencyWithdraw",
      "offset": [
        13888,
        13934
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "3358": {
      "fn": "MiniChefV2.emergencyWithdraw",
      "offset": [
        13888,
        13934
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "3359": {
      "fn": "MiniChefV2.emergencyWithdraw",
      "offset": [
        13888,
        13934
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x29D3"
    },
    "3362": {
      "fn": "MiniChefV2.emergencyWithdraw",
      "jump": "i",
      "offset": [
        13888,
        13934
      ],
      "op": "JUMP",
      "path": "28"
    },
    "3363": {
      "fn": "MiniChefV2.emergencyWithdraw",
      "offset": [
        13888,
        13934
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "3364": {
      "fn": "MiniChefV2.emergencyWithdraw",
      "offset": [
        13888,
        13934
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "3366": {
      "fn": "MiniChefV2.emergencyWithdraw",
      "offset": [
        13888,
        13934
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "3367": {
      "fn": "MiniChefV2.emergencyWithdraw",
      "offset": [
        13888,
        13934
      ],
      "op": "DUP1",
      "path": "28"
    },
    "3368": {
      "fn": "MiniChefV2.emergencyWithdraw",
      "offset": [
        13888,
        13934
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "3369": {
      "fn": "MiniChefV2.emergencyWithdraw",
      "offset": [
        13888,
        13934
      ],
      "op": "SUB",
      "path": "28"
    },
    "3370": {
      "fn": "MiniChefV2.emergencyWithdraw",
      "offset": [
        13888,
        13934
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "3371": {
      "fn": "MiniChefV2.emergencyWithdraw",
      "offset": [
        13888,
        13934
      ],
      "op": "LOG4",
      "path": "28"
    },
    "3372": {
      "fn": "MiniChefV2.emergencyWithdraw",
      "offset": [
        13380,
        13941
      ],
      "op": "POP",
      "path": "28"
    },
    "3373": {
      "fn": "MiniChefV2.emergencyWithdraw",
      "offset": [
        13380,
        13941
      ],
      "op": "POP",
      "path": "28"
    },
    "3374": {
      "fn": "MiniChefV2.emergencyWithdraw",
      "offset": [
        13380,
        13941
      ],
      "op": "POP",
      "path": "28"
    },
    "3375": {
      "fn": "MiniChefV2.emergencyWithdraw",
      "offset": [
        13380,
        13941
      ],
      "op": "POP",
      "path": "28"
    },
    "3376": {
      "fn": "MiniChefV2.emergencyWithdraw",
      "offset": [
        13380,
        13941
      ],
      "op": "POP",
      "path": "28"
    },
    "3377": {
      "fn": "MiniChefV2.emergencyWithdraw",
      "jump": "o",
      "offset": [
        13380,
        13941
      ],
      "op": "JUMP",
      "path": "28"
    },
    "3378": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6235,
        6889
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "3379": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6299,
        6307
      ],
      "op": "PUSH1",
      "path": "28",
      "statement": 23,
      "value": "0x2"
    },
    "3381": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6299,
        6307
      ],
      "op": "SLOAD",
      "path": "28"
    },
    "3382": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3384": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3386": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3388": {
      "op": "SHL"
    },
    "3389": {
      "op": "SUB"
    },
    "3390": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6299,
        6307
      ],
      "op": "AND",
      "path": "28"
    },
    "3391": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6283,
        6356
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0xD5A"
    },
    "3394": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6283,
        6356
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "3395": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6283,
        6356
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "3397": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6283,
        6356
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "3398": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3402": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3404": {
      "op": "SHL"
    },
    "3405": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6283,
        6356
      ],
      "op": "DUP2",
      "path": "28"
    },
    "3406": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6283,
        6356
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "3407": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6283,
        6356
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x4"
    },
    "3409": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6283,
        6356
      ],
      "op": "ADD",
      "path": "28"
    },
    "3410": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6283,
        6356
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x588"
    },
    "3413": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6283,
        6356
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "3414": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6283,
        6356
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x2889"
    },
    "3417": {
      "fn": "MiniChefV2.migrate",
      "jump": "i",
      "offset": [
        6283,
        6356
      ],
      "op": "JUMP",
      "path": "28"
    },
    "3418": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6283,
        6356
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "3419": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6366,
        6381
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "3421": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6384,
        6391
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x4"
    },
    "3423": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6392,
        6396
      ],
      "op": "DUP3",
      "path": "28"
    },
    "3424": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6384,
        6397
      ],
      "op": "DUP2",
      "path": "28"
    },
    "3425": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6384,
        6397
      ],
      "op": "SLOAD",
      "path": "28"
    },
    "3426": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6384,
        6397
      ],
      "op": "DUP2",
      "path": "28"
    },
    "3427": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6384,
        6397
      ],
      "op": "LT",
      "path": "28"
    },
    "3428": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6384,
        6397
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0xD69"
    },
    "3431": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6384,
        6397
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "3432": {
      "dev": "Index out of range",
      "fn": "MiniChefV2.migrate",
      "offset": [
        6384,
        6397
      ],
      "op": "INVALID",
      "path": "28"
    },
    "3433": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6384,
        6397
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "3434": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6384,
        6397
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "3436": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6384,
        6397
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "3437": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6384,
        6397
      ],
      "op": "DUP3",
      "path": "28"
    },
    "3438": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6384,
        6397
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "3439": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6384,
        6397
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x20"
    },
    "3441": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6384,
        6397
      ],
      "op": "DUP3",
      "path": "28"
    },
    "3442": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6384,
        6397
      ],
      "op": "KECCAK256",
      "path": "28"
    },
    "3443": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6384,
        6397
      ],
      "op": "ADD",
      "path": "28"
    },
    "3444": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6384,
        6397
      ],
      "op": "SLOAD",
      "path": "28"
    },
    "3445": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6421,
        6454
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "3447": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6421,
        6454
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "3448": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "3453": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3455": {
      "op": "SHL"
    },
    "3456": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6421,
        6454
      ],
      "op": "DUP2",
      "path": "28"
    },
    "3457": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6421,
        6454
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "3458": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3460": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3462": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3464": {
      "op": "SHL"
    },
    "3465": {
      "op": "SUB"
    },
    "3466": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6384,
        6397
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "3467": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6384,
        6397
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "3468": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6384,
        6397
      ],
      "op": "AND",
      "path": "28"
    },
    "3469": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6384,
        6397
      ],
      "op": "SWAP3",
      "path": "28"
    },
    "3470": {
      "op": "POP"
    },
    "3471": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6384,
        6397
      ],
      "op": "DUP3",
      "path": "28"
    },
    "3472": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6384,
        6397
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "3473": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6421,
        6439
      ],
      "op": "PUSH4",
      "path": "28",
      "value": "0x70A08231"
    },
    "3478": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6421,
        6439
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "3479": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6421,
        6454
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0xDA4"
    },
    "3482": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6421,
        6454
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "3483": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6448,
        6452
      ],
      "op": "ADDRESS",
      "path": "28"
    },
    "3484": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6448,
        6452
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "3485": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6421,
        6454
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x4"
    },
    "3487": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6421,
        6454
      ],
      "op": "ADD",
      "path": "28"
    },
    "3488": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6421,
        6454
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x2539"
    },
    "3491": {
      "fn": "MiniChefV2.migrate",
      "jump": "i",
      "offset": [
        6421,
        6454
      ],
      "op": "JUMP",
      "path": "28"
    },
    "3492": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6421,
        6454
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "3493": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6421,
        6454
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x20"
    },
    "3495": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6421,
        6454
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "3497": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6421,
        6454
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "3498": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6421,
        6454
      ],
      "op": "DUP1",
      "path": "28"
    },
    "3499": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6421,
        6454
      ],
      "op": "DUP4",
      "path": "28"
    },
    "3500": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6421,
        6454
      ],
      "op": "SUB",
      "path": "28"
    },
    "3501": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6421,
        6454
      ],
      "op": "DUP2",
      "path": "28"
    },
    "3502": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6421,
        6454
      ],
      "op": "DUP7",
      "path": "28"
    },
    "3503": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6421,
        6454
      ],
      "op": "DUP1",
      "path": "28"
    },
    "3504": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6421,
        6454
      ],
      "op": "EXTCODESIZE",
      "path": "28"
    },
    "3505": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6421,
        6454
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "3506": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6421,
        6454
      ],
      "op": "DUP1",
      "path": "28"
    },
    "3507": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6421,
        6454
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "3508": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6421,
        6454
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0xDBC"
    },
    "3511": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6421,
        6454
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "3512": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6421,
        6454
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "3514": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6421,
        6454
      ],
      "op": "DUP1",
      "path": "28"
    },
    "3515": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6421,
        6454
      ],
      "op": "REVERT",
      "path": "28"
    },
    "3516": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6421,
        6454
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "3517": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6421,
        6454
      ],
      "op": "POP",
      "path": "28"
    },
    "3518": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6421,
        6454
      ],
      "op": "GAS",
      "path": "28"
    },
    "3519": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6421,
        6454
      ],
      "op": "STATICCALL",
      "path": "28"
    },
    "3520": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6421,
        6454
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "3521": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6421,
        6454
      ],
      "op": "DUP1",
      "path": "28"
    },
    "3522": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6421,
        6454
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "3523": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6421,
        6454
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0xDD0"
    },
    "3526": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6421,
        6454
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "3527": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6421,
        6454
      ],
      "op": "RETURNDATASIZE",
      "path": "28"
    },
    "3528": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6421,
        6454
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "3530": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6421,
        6454
      ],
      "op": "DUP1",
      "path": "28"
    },
    "3531": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6421,
        6454
      ],
      "op": "RETURNDATACOPY",
      "path": "28"
    },
    "3532": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6421,
        6454
      ],
      "op": "RETURNDATASIZE",
      "path": "28"
    },
    "3533": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6421,
        6454
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "3535": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6421,
        6454
      ],
      "op": "REVERT",
      "path": "28"
    },
    "3536": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6421,
        6454
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "3537": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6421,
        6454
      ],
      "op": "POP",
      "path": "28"
    },
    "3538": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6421,
        6454
      ],
      "op": "POP",
      "path": "28"
    },
    "3539": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6421,
        6454
      ],
      "op": "POP",
      "path": "28"
    },
    "3540": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6421,
        6454
      ],
      "op": "POP",
      "path": "28"
    },
    "3541": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6421,
        6454
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "3543": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6421,
        6454
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "3544": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6421,
        6454
      ],
      "op": "RETURNDATASIZE",
      "path": "28"
    },
    "3545": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6421,
        6454
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x1F"
    },
    "3547": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6421,
        6454
      ],
      "op": "NOT",
      "path": "28"
    },
    "3548": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6421,
        6454
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x1F"
    },
    "3550": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6421,
        6454
      ],
      "op": "DUP3",
      "path": "28"
    },
    "3551": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6421,
        6454
      ],
      "op": "ADD",
      "path": "28"
    },
    "3552": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6421,
        6454
      ],
      "op": "AND",
      "path": "28"
    },
    "3553": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6421,
        6454
      ],
      "op": "DUP3",
      "path": "28"
    },
    "3554": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6421,
        6454
      ],
      "op": "ADD",
      "path": "28"
    },
    "3555": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6421,
        6454
      ],
      "op": "DUP1",
      "path": "28"
    },
    "3556": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6421,
        6454
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "3558": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6421,
        6454
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "3559": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6421,
        6454
      ],
      "op": "POP",
      "path": "28"
    },
    "3560": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6421,
        6454
      ],
      "op": "DUP2",
      "path": "28"
    },
    "3561": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6421,
        6454
      ],
      "op": "ADD",
      "path": "28"
    },
    "3562": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6421,
        6454
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "3563": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6421,
        6454
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0xDF4"
    },
    "3566": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6421,
        6454
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "3567": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6421,
        6454
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "3568": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6421,
        6454
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x241A"
    },
    "3571": {
      "fn": "MiniChefV2.migrate",
      "jump": "i",
      "offset": [
        6421,
        6454
      ],
      "op": "JUMP",
      "path": "28"
    },
    "3572": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6421,
        6454
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "3573": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6489,
        6497
      ],
      "op": "PUSH1",
      "path": "28",
      "statement": 24,
      "value": "0x2"
    },
    "3575": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6489,
        6497
      ],
      "op": "SLOAD",
      "path": "28"
    },
    "3576": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6464,
        6504
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "3578": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6464,
        6504
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "3579": {
      "op": "PUSH4",
      "value": "0x95EA7B3"
    },
    "3584": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3586": {
      "op": "SHL"
    },
    "3587": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6464,
        6504
      ],
      "op": "DUP2",
      "path": "28"
    },
    "3588": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6464,
        6504
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "3589": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6407,
        6454
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "3590": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6407,
        6454
      ],
      "op": "SWAP3",
      "path": "28"
    },
    "3591": {
      "op": "POP"
    },
    "3592": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3594": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3596": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3598": {
      "op": "SHL"
    },
    "3599": {
      "op": "SUB"
    },
    "3600": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6464,
        6480
      ],
      "op": "DUP1",
      "path": "28"
    },
    "3601": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6464,
        6480
      ],
      "op": "DUP6",
      "path": "28"
    },
    "3602": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6464,
        6480
      ],
      "op": "AND",
      "path": "28"
    },
    "3603": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6464,
        6480
      ],
      "op": "SWAP3",
      "path": "28"
    },
    "3604": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6464,
        6480
      ],
      "op": "PUSH4",
      "path": "28",
      "value": "0x95EA7B3"
    },
    "3609": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6464,
        6480
      ],
      "op": "SWAP3",
      "path": "28"
    },
    "3610": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6464,
        6504
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0xE29"
    },
    "3613": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6464,
        6504
      ],
      "op": "SWAP3",
      "path": "28"
    },
    "3614": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6489,
        6497
      ],
      "op": "AND",
      "path": "28"
    },
    "3615": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6489,
        6497
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "3616": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6407,
        6454
      ],
      "op": "DUP6",
      "path": "28"
    },
    "3617": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6407,
        6454
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "3618": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6464,
        6504
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x4"
    },
    "3620": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6464,
        6504
      ],
      "op": "ADD",
      "path": "28"
    },
    "3621": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6464,
        6504
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x25B2"
    },
    "3624": {
      "fn": "MiniChefV2.migrate",
      "jump": "i",
      "offset": [
        6464,
        6504
      ],
      "op": "JUMP",
      "path": "28"
    },
    "3625": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6464,
        6504
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "3626": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6464,
        6504
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x20"
    },
    "3628": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6464,
        6504
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "3630": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6464,
        6504
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "3631": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6464,
        6504
      ],
      "op": "DUP1",
      "path": "28"
    },
    "3632": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6464,
        6504
      ],
      "op": "DUP4",
      "path": "28"
    },
    "3633": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6464,
        6504
      ],
      "op": "SUB",
      "path": "28"
    },
    "3634": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6464,
        6504
      ],
      "op": "DUP2",
      "path": "28"
    },
    "3635": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6464,
        6504
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "3637": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6464,
        6504
      ],
      "op": "DUP8",
      "path": "28"
    },
    "3638": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6464,
        6504
      ],
      "op": "DUP1",
      "path": "28"
    },
    "3639": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6464,
        6504
      ],
      "op": "EXTCODESIZE",
      "path": "28"
    },
    "3640": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6464,
        6504
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "3641": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6464,
        6504
      ],
      "op": "DUP1",
      "path": "28"
    },
    "3642": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6464,
        6504
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "3643": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6464,
        6504
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0xE43"
    },
    "3646": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6464,
        6504
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "3647": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6464,
        6504
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "3649": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6464,
        6504
      ],
      "op": "DUP1",
      "path": "28"
    },
    "3650": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6464,
        6504
      ],
      "op": "REVERT",
      "path": "28"
    },
    "3651": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6464,
        6504
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "3652": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6464,
        6504
      ],
      "op": "POP",
      "path": "28"
    },
    "3653": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6464,
        6504
      ],
      "op": "GAS",
      "path": "28"
    },
    "3654": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6464,
        6504
      ],
      "op": "CALL",
      "path": "28"
    },
    "3655": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6464,
        6504
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "3656": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6464,
        6504
      ],
      "op": "DUP1",
      "path": "28"
    },
    "3657": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6464,
        6504
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "3658": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6464,
        6504
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0xE57"
    },
    "3661": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6464,
        6504
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "3662": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6464,
        6504
      ],
      "op": "RETURNDATASIZE",
      "path": "28"
    },
    "3663": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6464,
        6504
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "3665": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6464,
        6504
      ],
      "op": "DUP1",
      "path": "28"
    },
    "3666": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6464,
        6504
      ],
      "op": "RETURNDATACOPY",
      "path": "28"
    },
    "3667": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6464,
        6504
      ],
      "op": "RETURNDATASIZE",
      "path": "28"
    },
    "3668": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6464,
        6504
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "3670": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6464,
        6504
      ],
      "op": "REVERT",
      "path": "28"
    },
    "3671": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6464,
        6504
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "3672": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6464,
        6504
      ],
      "op": "POP",
      "path": "28"
    },
    "3673": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6464,
        6504
      ],
      "op": "POP",
      "path": "28"
    },
    "3674": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6464,
        6504
      ],
      "op": "POP",
      "path": "28"
    },
    "3675": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6464,
        6504
      ],
      "op": "POP",
      "path": "28"
    },
    "3676": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6464,
        6504
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "3678": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6464,
        6504
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "3679": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6464,
        6504
      ],
      "op": "RETURNDATASIZE",
      "path": "28"
    },
    "3680": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6464,
        6504
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x1F"
    },
    "3682": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6464,
        6504
      ],
      "op": "NOT",
      "path": "28"
    },
    "3683": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6464,
        6504
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x1F"
    },
    "3685": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6464,
        6504
      ],
      "op": "DUP3",
      "path": "28"
    },
    "3686": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6464,
        6504
      ],
      "op": "ADD",
      "path": "28"
    },
    "3687": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6464,
        6504
      ],
      "op": "AND",
      "path": "28"
    },
    "3688": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6464,
        6504
      ],
      "op": "DUP3",
      "path": "28"
    },
    "3689": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6464,
        6504
      ],
      "op": "ADD",
      "path": "28"
    },
    "3690": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6464,
        6504
      ],
      "op": "DUP1",
      "path": "28"
    },
    "3691": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6464,
        6504
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "3693": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6464,
        6504
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "3694": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6464,
        6504
      ],
      "op": "POP",
      "path": "28"
    },
    "3695": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6464,
        6504
      ],
      "op": "DUP2",
      "path": "28"
    },
    "3696": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6464,
        6504
      ],
      "op": "ADD",
      "path": "28"
    },
    "3697": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6464,
        6504
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "3698": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6464,
        6504
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0xE7B"
    },
    "3701": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6464,
        6504
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "3702": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6464,
        6504
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "3703": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6464,
        6504
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x22A9"
    },
    "3706": {
      "fn": "MiniChefV2.migrate",
      "jump": "i",
      "offset": [
        6464,
        6504
      ],
      "op": "JUMP",
      "path": "28"
    },
    "3707": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6464,
        6504
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "3708": {
      "op": "POP"
    },
    "3709": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6534,
        6542
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x2"
    },
    "3711": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6534,
        6542
      ],
      "op": "SLOAD",
      "path": "28"
    },
    "3712": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6534,
        6560
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "3714": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6534,
        6560
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "3715": {
      "op": "PUSH4",
      "value": "0xCE5494BB"
    },
    "3720": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3722": {
      "op": "SHL"
    },
    "3723": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6534,
        6560
      ],
      "op": "DUP2",
      "path": "28"
    },
    "3724": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6534,
        6560
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "3725": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6514,
        6531
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "3727": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6514,
        6531
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "3728": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3730": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3732": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3734": {
      "op": "SHL"
    },
    "3735": {
      "op": "SUB"
    },
    "3736": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6534,
        6542
      ],
      "op": "AND",
      "path": "28"
    },
    "3737": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6534,
        6542
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "3738": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6534,
        6550
      ],
      "op": "PUSH4",
      "path": "28",
      "value": "0xCE5494BB"
    },
    "3743": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6534,
        6550
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "3744": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6534,
        6560
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0xEAD"
    },
    "3747": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6534,
        6560
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "3748": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6551,
        6559
      ],
      "op": "DUP7",
      "path": "28"
    },
    "3749": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6551,
        6559
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "3750": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6534,
        6560
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x4"
    },
    "3752": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6534,
        6560
      ],
      "op": "ADD",
      "path": "28"
    },
    "3753": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6534,
        6560
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x2539"
    },
    "3756": {
      "fn": "MiniChefV2.migrate",
      "jump": "i",
      "offset": [
        6534,
        6560
      ],
      "op": "JUMP",
      "path": "28"
    },
    "3757": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6534,
        6560
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "3758": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6534,
        6560
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x20"
    },
    "3760": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6534,
        6560
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "3762": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6534,
        6560
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "3763": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6534,
        6560
      ],
      "op": "DUP1",
      "path": "28"
    },
    "3764": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6534,
        6560
      ],
      "op": "DUP4",
      "path": "28"
    },
    "3765": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6534,
        6560
      ],
      "op": "SUB",
      "path": "28"
    },
    "3766": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6534,
        6560
      ],
      "op": "DUP2",
      "path": "28"
    },
    "3767": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6534,
        6560
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "3769": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6534,
        6560
      ],
      "op": "DUP8",
      "path": "28"
    },
    "3770": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6534,
        6560
      ],
      "op": "DUP1",
      "path": "28"
    },
    "3771": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6534,
        6560
      ],
      "op": "EXTCODESIZE",
      "path": "28"
    },
    "3772": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6534,
        6560
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "3773": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6534,
        6560
      ],
      "op": "DUP1",
      "path": "28"
    },
    "3774": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6534,
        6560
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "3775": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6534,
        6560
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0xEC7"
    },
    "3778": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6534,
        6560
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "3779": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6534,
        6560
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "3781": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6534,
        6560
      ],
      "op": "DUP1",
      "path": "28"
    },
    "3782": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6534,
        6560
      ],
      "op": "REVERT",
      "path": "28"
    },
    "3783": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6534,
        6560
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "3784": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6534,
        6560
      ],
      "op": "POP",
      "path": "28"
    },
    "3785": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6534,
        6560
      ],
      "op": "GAS",
      "path": "28"
    },
    "3786": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6534,
        6560
      ],
      "op": "CALL",
      "path": "28"
    },
    "3787": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6534,
        6560
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "3788": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6534,
        6560
      ],
      "op": "DUP1",
      "path": "28"
    },
    "3789": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6534,
        6560
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "3790": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6534,
        6560
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0xEDB"
    },
    "3793": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6534,
        6560
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "3794": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6534,
        6560
      ],
      "op": "RETURNDATASIZE",
      "path": "28"
    },
    "3795": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6534,
        6560
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "3797": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6534,
        6560
      ],
      "op": "DUP1",
      "path": "28"
    },
    "3798": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6534,
        6560
      ],
      "op": "RETURNDATACOPY",
      "path": "28"
    },
    "3799": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6534,
        6560
      ],
      "op": "RETURNDATASIZE",
      "path": "28"
    },
    "3800": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6534,
        6560
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "3802": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6534,
        6560
      ],
      "op": "REVERT",
      "path": "28"
    },
    "3803": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6534,
        6560
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "3804": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6534,
        6560
      ],
      "op": "POP",
      "path": "28"
    },
    "3805": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6534,
        6560
      ],
      "op": "POP",
      "path": "28"
    },
    "3806": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6534,
        6560
      ],
      "op": "POP",
      "path": "28"
    },
    "3807": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6534,
        6560
      ],
      "op": "POP",
      "path": "28"
    },
    "3808": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6534,
        6560
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "3810": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6534,
        6560
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "3811": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6534,
        6560
      ],
      "op": "RETURNDATASIZE",
      "path": "28"
    },
    "3812": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6534,
        6560
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x1F"
    },
    "3814": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6534,
        6560
      ],
      "op": "NOT",
      "path": "28"
    },
    "3815": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6534,
        6560
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x1F"
    },
    "3817": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6534,
        6560
      ],
      "op": "DUP3",
      "path": "28"
    },
    "3818": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6534,
        6560
      ],
      "op": "ADD",
      "path": "28"
    },
    "3819": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6534,
        6560
      ],
      "op": "AND",
      "path": "28"
    },
    "3820": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6534,
        6560
      ],
      "op": "DUP3",
      "path": "28"
    },
    "3821": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6534,
        6560
      ],
      "op": "ADD",
      "path": "28"
    },
    "3822": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6534,
        6560
      ],
      "op": "DUP1",
      "path": "28"
    },
    "3823": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6534,
        6560
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "3825": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6534,
        6560
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "3826": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6534,
        6560
      ],
      "op": "POP",
      "path": "28"
    },
    "3827": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6534,
        6560
      ],
      "op": "DUP2",
      "path": "28"
    },
    "3828": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6534,
        6560
      ],
      "op": "ADD",
      "path": "28"
    },
    "3829": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6534,
        6560
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "3830": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6534,
        6560
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0xEFF"
    },
    "3833": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6534,
        6560
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "3834": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6534,
        6560
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "3835": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6534,
        6560
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x22C5"
    },
    "3838": {
      "fn": "MiniChefV2.migrate",
      "jump": "i",
      "offset": [
        6534,
        6560
      ],
      "op": "JUMP",
      "path": "28"
    },
    "3839": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6534,
        6560
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "3840": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6585,
        6620
      ],
      "op": "PUSH1",
      "path": "28",
      "statement": 25,
      "value": "0x40"
    },
    "3842": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6585,
        6620
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "3843": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "3848": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3850": {
      "op": "SHL"
    },
    "3851": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6585,
        6620
      ],
      "op": "DUP2",
      "path": "28"
    },
    "3852": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6585,
        6620
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "3853": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6514,
        6560
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "3854": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6514,
        6560
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "3855": {
      "op": "POP"
    },
    "3856": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3858": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3860": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3862": {
      "op": "SHL"
    },
    "3863": {
      "op": "SUB"
    },
    "3864": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6585,
        6605
      ],
      "op": "DUP3",
      "path": "28"
    },
    "3865": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6585,
        6605
      ],
      "op": "AND",
      "path": "28"
    },
    "3866": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6585,
        6605
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "3867": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6585,
        6605
      ],
      "op": "PUSH4",
      "path": "28",
      "value": "0x70A08231"
    },
    "3872": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6585,
        6605
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "3873": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6585,
        6620
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0xF2E"
    },
    "3876": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6585,
        6620
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "3877": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6614,
        6618
      ],
      "op": "ADDRESS",
      "path": "28"
    },
    "3878": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6614,
        6618
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "3879": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6585,
        6620
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x4"
    },
    "3881": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6585,
        6620
      ],
      "op": "ADD",
      "path": "28"
    },
    "3882": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6585,
        6620
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x2539"
    },
    "3885": {
      "fn": "MiniChefV2.migrate",
      "jump": "i",
      "offset": [
        6585,
        6620
      ],
      "op": "JUMP",
      "path": "28"
    },
    "3886": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6585,
        6620
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "3887": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6585,
        6620
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x20"
    },
    "3889": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6585,
        6620
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "3891": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6585,
        6620
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "3892": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6585,
        6620
      ],
      "op": "DUP1",
      "path": "28"
    },
    "3893": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6585,
        6620
      ],
      "op": "DUP4",
      "path": "28"
    },
    "3894": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6585,
        6620
      ],
      "op": "SUB",
      "path": "28"
    },
    "3895": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6585,
        6620
      ],
      "op": "DUP2",
      "path": "28"
    },
    "3896": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6585,
        6620
      ],
      "op": "DUP7",
      "path": "28"
    },
    "3897": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6585,
        6620
      ],
      "op": "DUP1",
      "path": "28"
    },
    "3898": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6585,
        6620
      ],
      "op": "EXTCODESIZE",
      "path": "28"
    },
    "3899": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6585,
        6620
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "3900": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6585,
        6620
      ],
      "op": "DUP1",
      "path": "28"
    },
    "3901": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6585,
        6620
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "3902": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6585,
        6620
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0xF46"
    },
    "3905": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6585,
        6620
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "3906": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6585,
        6620
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "3908": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6585,
        6620
      ],
      "op": "DUP1",
      "path": "28"
    },
    "3909": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6585,
        6620
      ],
      "op": "REVERT",
      "path": "28"
    },
    "3910": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6585,
        6620
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "3911": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6585,
        6620
      ],
      "op": "POP",
      "path": "28"
    },
    "3912": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6585,
        6620
      ],
      "op": "GAS",
      "path": "28"
    },
    "3913": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6585,
        6620
      ],
      "op": "STATICCALL",
      "path": "28"
    },
    "3914": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6585,
        6620
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "3915": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6585,
        6620
      ],
      "op": "DUP1",
      "path": "28"
    },
    "3916": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6585,
        6620
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "3917": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6585,
        6620
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0xF5A"
    },
    "3920": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6585,
        6620
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "3921": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6585,
        6620
      ],
      "op": "RETURNDATASIZE",
      "path": "28"
    },
    "3922": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6585,
        6620
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "3924": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6585,
        6620
      ],
      "op": "DUP1",
      "path": "28"
    },
    "3925": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6585,
        6620
      ],
      "op": "RETURNDATACOPY",
      "path": "28"
    },
    "3926": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6585,
        6620
      ],
      "op": "RETURNDATASIZE",
      "path": "28"
    },
    "3927": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6585,
        6620
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "3929": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6585,
        6620
      ],
      "op": "REVERT",
      "path": "28"
    },
    "3930": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6585,
        6620
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "3931": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6585,
        6620
      ],
      "op": "POP",
      "path": "28"
    },
    "3932": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6585,
        6620
      ],
      "op": "POP",
      "path": "28"
    },
    "3933": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6585,
        6620
      ],
      "op": "POP",
      "path": "28"
    },
    "3934": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6585,
        6620
      ],
      "op": "POP",
      "path": "28"
    },
    "3935": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6585,
        6620
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "3937": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6585,
        6620
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "3938": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6585,
        6620
      ],
      "op": "RETURNDATASIZE",
      "path": "28"
    },
    "3939": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6585,
        6620
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x1F"
    },
    "3941": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6585,
        6620
      ],
      "op": "NOT",
      "path": "28"
    },
    "3942": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6585,
        6620
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x1F"
    },
    "3944": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6585,
        6620
      ],
      "op": "DUP3",
      "path": "28"
    },
    "3945": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6585,
        6620
      ],
      "op": "ADD",
      "path": "28"
    },
    "3946": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6585,
        6620
      ],
      "op": "AND",
      "path": "28"
    },
    "3947": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6585,
        6620
      ],
      "op": "DUP3",
      "path": "28"
    },
    "3948": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6585,
        6620
      ],
      "op": "ADD",
      "path": "28"
    },
    "3949": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6585,
        6620
      ],
      "op": "DUP1",
      "path": "28"
    },
    "3950": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6585,
        6620
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "3952": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6585,
        6620
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "3953": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6585,
        6620
      ],
      "op": "POP",
      "path": "28"
    },
    "3954": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6585,
        6620
      ],
      "op": "DUP2",
      "path": "28"
    },
    "3955": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6585,
        6620
      ],
      "op": "ADD",
      "path": "28"
    },
    "3956": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6585,
        6620
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "3957": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6585,
        6620
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0xF7E"
    },
    "3960": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6585,
        6620
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "3961": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6585,
        6620
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "3962": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6585,
        6620
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x241A"
    },
    "3965": {
      "fn": "MiniChefV2.migrate",
      "jump": "i",
      "offset": [
        6585,
        6620
      ],
      "op": "JUMP",
      "path": "28"
    },
    "3966": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6585,
        6620
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "3967": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6578,
        6581
      ],
      "op": "DUP3",
      "path": "28"
    },
    "3968": {
      "branch": 90,
      "fn": "MiniChefV2.migrate",
      "offset": [
        6578,
        6620
      ],
      "op": "EQ",
      "path": "28"
    },
    "3969": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6570,
        6666
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0xF9C"
    },
    "3972": {
      "branch": 90,
      "fn": "MiniChefV2.migrate",
      "offset": [
        6570,
        6666
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "3973": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6570,
        6666
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "3975": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6570,
        6666
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "3976": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3980": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3982": {
      "op": "SHL"
    },
    "3983": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6570,
        6666
      ],
      "op": "DUP2",
      "path": "28"
    },
    "3984": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6570,
        6666
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "3985": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6570,
        6666
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x4"
    },
    "3987": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6570,
        6666
      ],
      "op": "ADD",
      "path": "28"
    },
    "3988": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6570,
        6666
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x588"
    },
    "3991": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6570,
        6666
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "3992": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6570,
        6666
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x2704"
    },
    "3995": {
      "fn": "MiniChefV2.migrate",
      "jump": "i",
      "offset": [
        6570,
        6666
      ],
      "op": "JUMP",
      "path": "28"
    },
    "3996": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6570,
        6666
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "3997": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3999": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4001": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4003": {
      "op": "SHL"
    },
    "4004": {
      "op": "SUB"
    },
    "4005": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6684,
        6716
      ],
      "op": "DUP2",
      "path": "28",
      "statement": 26
    },
    "4006": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6684,
        6716
      ],
      "op": "AND",
      "path": "28"
    },
    "4007": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6684,
        6716
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "4009": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6684,
        6716
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "4010": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6684,
        6716
      ],
      "op": "DUP2",
      "path": "28"
    },
    "4011": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6684,
        6716
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "4012": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6684,
        6695
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x7"
    },
    "4014": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6684,
        6716
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x20"
    },
    "4016": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6684,
        6716
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "4017": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6684,
        6716
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "4019": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6684,
        6716
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "4020": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6684,
        6716
      ],
      "op": "KECCAK256",
      "path": "28"
    },
    "4021": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6684,
        6716
      ],
      "op": "SLOAD",
      "path": "28"
    },
    "4022": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6684,
        6716
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0xFF"
    },
    "4024": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6684,
        6716
      ],
      "op": "AND",
      "path": "28"
    },
    "4025": {
      "branch": 91,
      "fn": "MiniChefV2.migrate",
      "offset": [
        6684,
        6725
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "4026": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6676,
        6749
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0xFD5"
    },
    "4029": {
      "branch": 91,
      "fn": "MiniChefV2.migrate",
      "offset": [
        6676,
        6749
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "4030": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6676,
        6749
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "4032": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6676,
        6749
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "4033": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4037": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4039": {
      "op": "SHL"
    },
    "4040": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6676,
        6749
      ],
      "op": "DUP2",
      "path": "28"
    },
    "4041": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6676,
        6749
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "4042": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6676,
        6749
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x4"
    },
    "4044": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6676,
        6749
      ],
      "op": "ADD",
      "path": "28"
    },
    "4045": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6676,
        6749
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x588"
    },
    "4048": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6676,
        6749
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "4049": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6676,
        6749
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x2825"
    },
    "4052": {
      "fn": "MiniChefV2.migrate",
      "jump": "i",
      "offset": [
        6676,
        6749
      ],
      "op": "JUMP",
      "path": "28"
    },
    "4053": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6676,
        6749
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "4054": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4056": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4058": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4060": {
      "op": "SHL"
    },
    "4061": {
      "op": "SUB"
    },
    "4062": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6759,
        6791
      ],
      "op": "DUP1",
      "path": "28",
      "statement": 27
    },
    "4063": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6759,
        6791
      ],
      "op": "DUP3",
      "path": "28"
    },
    "4064": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6759,
        6791
      ],
      "op": "AND",
      "path": "28"
    },
    "4065": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6759,
        6791
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "4067": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6759,
        6791
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "4068": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6759,
        6791
      ],
      "op": "DUP2",
      "path": "28"
    },
    "4069": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6759,
        6791
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "4070": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6759,
        6770
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x7"
    },
    "4072": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6759,
        6791
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x20"
    },
    "4074": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6759,
        6791
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "4075": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6759,
        6791
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "4077": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6759,
        6791
      ],
      "op": "DUP1",
      "path": "28"
    },
    "4078": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6759,
        6791
      ],
      "op": "DUP3",
      "path": "28"
    },
    "4079": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6759,
        6791
      ],
      "op": "KECCAK256",
      "path": "28"
    },
    "4080": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6759,
        6798
      ],
      "op": "DUP1",
      "path": "28"
    },
    "4081": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6759,
        6798
      ],
      "op": "SLOAD",
      "path": "28"
    },
    "4082": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "4084": {
      "op": "NOT"
    },
    "4085": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6759,
        6798
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "4086": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6759,
        6798
      ],
      "op": "DUP2",
      "path": "28"
    },
    "4087": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6759,
        6798
      ],
      "op": "AND",
      "path": "28"
    },
    "4088": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6794,
        6798
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x1"
    },
    "4090": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6759,
        6798
      ],
      "op": "OR",
      "path": "28"
    },
    "4091": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6759,
        6798
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "4092": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6759,
        6798
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "4093": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6759,
        6798
      ],
      "op": "SSTORE",
      "path": "28"
    },
    "4094": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6808,
        6838
      ],
      "op": "SWAP3",
      "path": "28",
      "statement": 28
    },
    "4095": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6808,
        6838
      ],
      "op": "DUP7",
      "path": "28"
    },
    "4096": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6808,
        6838
      ],
      "op": "AND",
      "path": "28"
    },
    "4097": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6808,
        6838
      ],
      "op": "DUP3",
      "path": "28"
    },
    "4098": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6808,
        6838
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "4099": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6808,
        6838
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "4100": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6808,
        6838
      ],
      "op": "KECCAK256",
      "path": "28"
    },
    "4101": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6808,
        6846
      ],
      "op": "DUP1",
      "path": "28"
    },
    "4102": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6808,
        6846
      ],
      "op": "SLOAD",
      "path": "28"
    },
    "4103": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6808,
        6846
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "4104": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6808,
        6846
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "4105": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6808,
        6846
      ],
      "op": "AND",
      "path": "28"
    },
    "4106": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6808,
        6846
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "4107": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6808,
        6846
      ],
      "op": "SSTORE",
      "path": "28"
    },
    "4108": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6856,
        6863
      ],
      "op": "PUSH1",
      "path": "28",
      "statement": 29,
      "value": "0x4"
    },
    "4110": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6856,
        6869
      ],
      "op": "DUP1",
      "path": "28"
    },
    "4111": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6856,
        6869
      ],
      "op": "SLOAD",
      "path": "28"
    },
    "4112": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6779,
        6789
      ],
      "op": "DUP3",
      "path": "28"
    },
    "4113": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6779,
        6789
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "4114": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6856,
        6863
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "4115": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6864,
        6868
      ],
      "op": "DUP7",
      "path": "28"
    },
    "4116": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6864,
        6868
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "4117": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6856,
        6869
      ],
      "op": "DUP2",
      "path": "28"
    },
    "4118": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6856,
        6869
      ],
      "op": "LT",
      "path": "28"
    },
    "4119": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6856,
        6869
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x101C"
    },
    "4122": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6856,
        6869
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "4123": {
      "dev": "Index out of range",
      "fn": "MiniChefV2.migrate",
      "offset": [
        6856,
        6869
      ],
      "op": "INVALID",
      "path": "28"
    },
    "4124": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6856,
        6869
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "4125": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6856,
        6869
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "4126": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6856,
        6869
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "4128": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6856,
        6869
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "4129": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6856,
        6869
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x20"
    },
    "4131": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6856,
        6869
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "4133": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6856,
        6869
      ],
      "op": "KECCAK256",
      "path": "28"
    },
    "4134": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6856,
        6869
      ],
      "op": "ADD",
      "path": "28"
    },
    "4135": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6856,
        6869
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "4137": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6856,
        6882
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x100"
    },
    "4140": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6856,
        6882
      ],
      "op": "EXP",
      "path": "28"
    },
    "4141": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6856,
        6882
      ],
      "op": "DUP2",
      "path": "28"
    },
    "4142": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6856,
        6882
      ],
      "op": "SLOAD",
      "path": "28"
    },
    "4143": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6856,
        6882
      ],
      "op": "DUP2",
      "path": "28"
    },
    "4144": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4146": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4148": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4150": {
      "op": "SHL"
    },
    "4151": {
      "op": "SUB"
    },
    "4152": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6856,
        6882
      ],
      "op": "MUL",
      "path": "28"
    },
    "4153": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6856,
        6882
      ],
      "op": "NOT",
      "path": "28"
    },
    "4154": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6856,
        6882
      ],
      "op": "AND",
      "path": "28"
    },
    "4155": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6856,
        6882
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "4156": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6856,
        6882
      ],
      "op": "DUP4",
      "path": "28"
    },
    "4157": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4159": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4161": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4163": {
      "op": "SHL"
    },
    "4164": {
      "op": "SUB"
    },
    "4165": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6856,
        6882
      ],
      "op": "AND",
      "path": "28"
    },
    "4166": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6856,
        6882
      ],
      "op": "MUL",
      "path": "28"
    },
    "4167": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6856,
        6882
      ],
      "op": "OR",
      "path": "28"
    },
    "4168": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6856,
        6882
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "4169": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6856,
        6882
      ],
      "op": "SSTORE",
      "path": "28"
    },
    "4170": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6856,
        6882
      ],
      "op": "POP",
      "path": "28"
    },
    "4171": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6235,
        6889
      ],
      "op": "POP",
      "path": "28"
    },
    "4172": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6235,
        6889
      ],
      "op": "POP",
      "path": "28"
    },
    "4173": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6235,
        6889
      ],
      "op": "POP",
      "path": "28"
    },
    "4174": {
      "fn": "MiniChefV2.migrate",
      "offset": [
        6235,
        6889
      ],
      "op": "POP",
      "path": "28"
    },
    "4175": {
      "fn": "MiniChefV2.migrate",
      "jump": "o",
      "offset": [
        6235,
        6889
      ],
      "op": "JUMP",
      "path": "28"
    },
    "4176": {
      "fn": "BoringOwnable.claimOwnership",
      "offset": [
        1692,
        2022
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "4177": {
      "fn": "BoringOwnable.claimOwnership",
      "offset": [
        1759,
        1771
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1"
    },
    "4179": {
      "fn": "BoringOwnable.claimOwnership",
      "offset": [
        1759,
        1771
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "4180": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4182": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4184": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4186": {
      "op": "SHL"
    },
    "4187": {
      "op": "SUB"
    },
    "4188": {
      "fn": "BoringOwnable.claimOwnership",
      "offset": [
        1759,
        1771
      ],
      "op": "AND",
      "path": "11"
    },
    "4189": {
      "fn": "BoringOwnable.claimOwnership",
      "offset": [
        1808,
        1818
      ],
      "op": "CALLER",
      "path": "11",
      "statement": 30
    },
    "4190": {
      "fn": "BoringOwnable.claimOwnership",
      "offset": [
        1808,
        1835
      ],
      "op": "DUP2",
      "path": "11"
    },
    "4191": {
      "branch": 118,
      "fn": "BoringOwnable.claimOwnership",
      "offset": [
        1808,
        1835
      ],
      "op": "EQ",
      "path": "11"
    },
    "4192": {
      "fn": "BoringOwnable.claimOwnership",
      "offset": [
        1800,
        1872
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x107B"
    },
    "4195": {
      "branch": 118,
      "fn": "BoringOwnable.claimOwnership",
      "offset": [
        1800,
        1872
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "4196": {
      "fn": "BoringOwnable.claimOwnership",
      "offset": [
        1800,
        1872
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "4198": {
      "fn": "BoringOwnable.claimOwnership",
      "offset": [
        1800,
        1872
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "4199": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4203": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4205": {
      "op": "SHL"
    },
    "4206": {
      "fn": "BoringOwnable.claimOwnership",
      "offset": [
        1800,
        1872
      ],
      "op": "DUP2",
      "path": "11"
    },
    "4207": {
      "fn": "BoringOwnable.claimOwnership",
      "offset": [
        1800,
        1872
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "4208": {
      "fn": "BoringOwnable.claimOwnership",
      "offset": [
        1800,
        1872
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "4210": {
      "fn": "BoringOwnable.claimOwnership",
      "offset": [
        1800,
        1872
      ],
      "op": "ADD",
      "path": "11"
    },
    "4211": {
      "fn": "BoringOwnable.claimOwnership",
      "offset": [
        1800,
        1872
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x588"
    },
    "4214": {
      "fn": "BoringOwnable.claimOwnership",
      "offset": [
        1800,
        1872
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "4215": {
      "fn": "BoringOwnable.claimOwnership",
      "offset": [
        1800,
        1872
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x27F0"
    },
    "4218": {
      "fn": "BoringOwnable.claimOwnership",
      "jump": "i",
      "offset": [
        1800,
        1872
      ],
      "op": "JUMP",
      "path": "11"
    },
    "4219": {
      "fn": "BoringOwnable.claimOwnership",
      "offset": [
        1800,
        1872
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "4220": {
      "fn": "BoringOwnable.claimOwnership",
      "offset": [
        1928,
        1933
      ],
      "op": "PUSH1",
      "path": "11",
      "statement": 31,
      "value": "0x0"
    },
    "4222": {
      "fn": "BoringOwnable.claimOwnership",
      "offset": [
        1928,
        1933
      ],
      "op": "DUP1",
      "path": "11"
    },
    "4223": {
      "fn": "BoringOwnable.claimOwnership",
      "offset": [
        1928,
        1933
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "4224": {
      "fn": "BoringOwnable.claimOwnership",
      "offset": [
        1907,
        1949
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "4226": {
      "fn": "BoringOwnable.claimOwnership",
      "offset": [
        1907,
        1949
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "4227": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4229": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4231": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4233": {
      "op": "SHL"
    },
    "4234": {
      "op": "SUB"
    },
    "4235": {
      "fn": "BoringOwnable.claimOwnership",
      "offset": [
        1907,
        1949
      ],
      "op": "DUP1",
      "path": "11"
    },
    "4236": {
      "fn": "BoringOwnable.claimOwnership",
      "offset": [
        1907,
        1949
      ],
      "op": "DUP6",
      "path": "11"
    },
    "4237": {
      "fn": "BoringOwnable.claimOwnership",
      "offset": [
        1907,
        1949
      ],
      "op": "AND",
      "path": "11"
    },
    "4238": {
      "fn": "BoringOwnable.claimOwnership",
      "offset": [
        1907,
        1949
      ],
      "op": "SWAP4",
      "path": "11"
    },
    "4239": {
      "fn": "BoringOwnable.claimOwnership",
      "offset": [
        1928,
        1933
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "4240": {
      "fn": "BoringOwnable.claimOwnership",
      "offset": [
        1928,
        1933
      ],
      "op": "AND",
      "path": "11"
    },
    "4241": {
      "fn": "BoringOwnable.claimOwnership",
      "offset": [
        1928,
        1933
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "4242": {
      "fn": "BoringOwnable.claimOwnership",
      "offset": [
        1907,
        1949
      ],
      "op": "PUSH32",
      "path": "11",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "4275": {
      "fn": "BoringOwnable.claimOwnership",
      "offset": [
        1907,
        1949
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "4276": {
      "fn": "BoringOwnable.claimOwnership",
      "offset": [
        1907,
        1949
      ],
      "op": "LOG3",
      "path": "11"
    },
    "4277": {
      "fn": "BoringOwnable.claimOwnership",
      "offset": [
        1959,
        1964
      ],
      "op": "PUSH1",
      "path": "11",
      "statement": 32,
      "value": "0x0"
    },
    "4279": {
      "fn": "BoringOwnable.claimOwnership",
      "offset": [
        1959,
        1980
      ],
      "op": "DUP1",
      "path": "11"
    },
    "4280": {
      "fn": "BoringOwnable.claimOwnership",
      "offset": [
        1959,
        1980
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "4281": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4283": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4285": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4287": {
      "op": "SHL"
    },
    "4288": {
      "op": "SUB"
    },
    "4289": {
      "fn": "BoringOwnable.claimOwnership",
      "offset": [
        1959,
        1980
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "4290": {
      "fn": "BoringOwnable.claimOwnership",
      "offset": [
        1959,
        1980
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "4291": {
      "fn": "BoringOwnable.claimOwnership",
      "offset": [
        1959,
        1980
      ],
      "op": "AND",
      "path": "11"
    },
    "4292": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4294": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4296": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4298": {
      "op": "SHL"
    },
    "4299": {
      "op": "SUB"
    },
    "4300": {
      "op": "NOT"
    },
    "4301": {
      "fn": "BoringOwnable.claimOwnership",
      "offset": [
        1959,
        1980
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "4302": {
      "fn": "BoringOwnable.claimOwnership",
      "offset": [
        1959,
        1980
      ],
      "op": "DUP4",
      "path": "11"
    },
    "4303": {
      "fn": "BoringOwnable.claimOwnership",
      "offset": [
        1959,
        1980
      ],
      "op": "AND",
      "path": "11"
    },
    "4304": {
      "fn": "BoringOwnable.claimOwnership",
      "offset": [
        1959,
        1980
      ],
      "op": "OR",
      "path": "11"
    },
    "4305": {
      "fn": "BoringOwnable.claimOwnership",
      "offset": [
        1959,
        1980
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "4306": {
      "fn": "BoringOwnable.claimOwnership",
      "offset": [
        1959,
        1980
      ],
      "op": "SSTORE",
      "path": "11"
    },
    "4307": {
      "fn": "BoringOwnable.claimOwnership",
      "offset": [
        1959,
        1980
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1"
    },
    "4309": {
      "fn": "BoringOwnable.claimOwnership",
      "offset": [
        1990,
        2015
      ],
      "op": "DUP1",
      "path": "11",
      "statement": 33
    },
    "4310": {
      "fn": "BoringOwnable.claimOwnership",
      "offset": [
        1990,
        2015
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "4311": {
      "fn": "BoringOwnable.claimOwnership",
      "offset": [
        1990,
        2015
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "4312": {
      "fn": "BoringOwnable.claimOwnership",
      "offset": [
        1990,
        2015
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "4313": {
      "fn": "BoringOwnable.claimOwnership",
      "offset": [
        1990,
        2015
      ],
      "op": "AND",
      "path": "11"
    },
    "4314": {
      "fn": "BoringOwnable.claimOwnership",
      "offset": [
        1990,
        2015
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "4315": {
      "fn": "BoringOwnable.claimOwnership",
      "offset": [
        1990,
        2015
      ],
      "op": "SSTORE",
      "path": "11"
    },
    "4316": {
      "fn": "BoringOwnable.claimOwnership",
      "jump": "o",
      "offset": [
        1692,
        2022
      ],
      "op": "JUMP",
      "path": "11"
    },
    "4317": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8447,
        9219
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "4318": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8496,
        8516
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x10E5"
    },
    "4321": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8496,
        8516
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x2153"
    },
    "4324": {
      "fn": "MiniChefV2.updatePool",
      "jump": "i",
      "offset": [
        8496,
        8516
      ],
      "op": "JUMP",
      "path": "28"
    },
    "4325": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8496,
        8516
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "4326": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8535,
        8543
      ],
      "op": "PUSH1",
      "path": "28",
      "statement": 34,
      "value": "0x3"
    },
    "4328": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8544,
        8547
      ],
      "op": "DUP3",
      "path": "28"
    },
    "4329": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8535,
        8548
      ],
      "op": "DUP2",
      "path": "28"
    },
    "4330": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8535,
        8548
      ],
      "op": "SLOAD",
      "path": "28"
    },
    "4331": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8535,
        8548
      ],
      "op": "DUP2",
      "path": "28"
    },
    "4332": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8535,
        8548
      ],
      "op": "LT",
      "path": "28"
    },
    "4333": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8535,
        8548
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x10F2"
    },
    "4336": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8535,
        8548
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "4337": {
      "dev": "Index out of range",
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8535,
        8548
      ],
      "op": "INVALID",
      "path": "28"
    },
    "4338": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8535,
        8548
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "4339": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8535,
        8548
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "4341": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8535,
        8548
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "4342": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8535,
        8548
      ],
      "op": "DUP3",
      "path": "28"
    },
    "4343": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8535,
        8548
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "4344": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8535,
        8548
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x20"
    },
    "4346": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8535,
        8548
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "4347": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8535,
        8548
      ],
      "op": "DUP3",
      "path": "28"
    },
    "4348": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8535,
        8548
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "4349": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8535,
        8548
      ],
      "op": "KECCAK256",
      "path": "28"
    },
    "4350": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8528,
        8548
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "4352": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8528,
        8548
      ],
      "op": "DUP1",
      "path": "28"
    },
    "4353": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8528,
        8548
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "4354": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8528,
        8548
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x60"
    },
    "4356": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8528,
        8548
      ],
      "op": "DUP2",
      "path": "28"
    },
    "4357": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8528,
        8548
      ],
      "op": "ADD",
      "path": "28"
    },
    "4358": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8528,
        8548
      ],
      "op": "DUP3",
      "path": "28"
    },
    "4359": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8528,
        8548
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "4360": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8535,
        8548
      ],
      "op": "SWAP3",
      "path": "28"
    },
    "4361": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8535,
        8548
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "4362": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8535,
        8548
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "4363": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8535,
        8548
      ],
      "op": "ADD",
      "path": "28"
    },
    "4364": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8528,
        8548
      ],
      "op": "SLOAD",
      "path": "28"
    },
    "4365": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4367": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4369": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4371": {
      "op": "SHL"
    },
    "4372": {
      "op": "SUB"
    },
    "4373": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8528,
        8548
      ],
      "op": "DUP2",
      "path": "28"
    },
    "4374": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8528,
        8548
      ],
      "op": "AND",
      "path": "28"
    },
    "4375": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8528,
        8548
      ],
      "op": "DUP4",
      "path": "28"
    },
    "4376": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8528,
        8548
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "4377": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4379": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4381": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4383": {
      "op": "SHL"
    },
    "4384": {
      "op": "SUB"
    },
    "4385": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4387": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4389": {
      "op": "SHL"
    },
    "4390": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8528,
        8548
      ],
      "op": "DUP3",
      "path": "28"
    },
    "4391": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8528,
        8548
      ],
      "op": "DIV",
      "path": "28"
    },
    "4392": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8528,
        8548
      ],
      "op": "DUP2",
      "path": "28"
    },
    "4393": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8528,
        8548
      ],
      "op": "AND",
      "path": "28"
    },
    "4394": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8528,
        8548
      ],
      "op": "SWAP5",
      "path": "28"
    },
    "4395": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8528,
        8548
      ],
      "op": "DUP5",
      "path": "28"
    },
    "4396": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8528,
        8548
      ],
      "op": "ADD",
      "path": "28"
    },
    "4397": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8528,
        8548
      ],
      "op": "DUP6",
      "path": "28"
    },
    "4398": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8528,
        8548
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "4399": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8528,
        8548
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "4400": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4402": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "4404": {
      "op": "SHL"
    },
    "4405": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8528,
        8548
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "4406": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8528,
        8548
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "4407": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8528,
        8548
      ],
      "op": "DIV",
      "path": "28"
    },
    "4408": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8528,
        8548
      ],
      "op": "AND",
      "path": "28"
    },
    "4409": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8528,
        8548
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "4410": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8528,
        8548
      ],
      "op": "DUP3",
      "path": "28"
    },
    "4411": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8528,
        8548
      ],
      "op": "ADD",
      "path": "28"
    },
    "4412": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8528,
        8548
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "4413": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8528,
        8548
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "4414": {
      "op": "POP"
    },
    "4415": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8562,
        8577
      ],
      "op": "TIMESTAMP",
      "path": "28"
    },
    "4416": {
      "branch": 92,
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8562,
        8599
      ],
      "op": "GT",
      "path": "28"
    },
    "4417": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8558,
        9213
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "4418": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8558,
        9213
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x135C"
    },
    "4421": {
      "branch": 92,
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8558,
        9213
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "4422": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8615,
        8631
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "4424": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8634,
        8641
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x4"
    },
    "4426": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8642,
        8645
      ],
      "op": "DUP4",
      "path": "28"
    },
    "4427": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8634,
        8646
      ],
      "op": "DUP2",
      "path": "28"
    },
    "4428": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8634,
        8646
      ],
      "op": "SLOAD",
      "path": "28"
    },
    "4429": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8634,
        8646
      ],
      "op": "DUP2",
      "path": "28"
    },
    "4430": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8634,
        8646
      ],
      "op": "LT",
      "path": "28"
    },
    "4431": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8634,
        8646
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1154"
    },
    "4434": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8634,
        8646
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "4435": {
      "dev": "Index out of range",
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8634,
        8646
      ],
      "op": "INVALID",
      "path": "28"
    },
    "4436": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8634,
        8646
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "4437": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8634,
        8646
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "4439": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8634,
        8646
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "4440": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8634,
        8646
      ],
      "op": "DUP3",
      "path": "28"
    },
    "4441": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8634,
        8646
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "4442": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8634,
        8646
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x20"
    },
    "4444": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8634,
        8646
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "4445": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8634,
        8646
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "4446": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8634,
        8646
      ],
      "op": "KECCAK256",
      "path": "28"
    },
    "4447": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8634,
        8646
      ],
      "op": "ADD",
      "path": "28"
    },
    "4448": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8634,
        8646
      ],
      "op": "SLOAD",
      "path": "28"
    },
    "4449": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8634,
        8671
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "4451": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8634,
        8671
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "4452": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "4457": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4459": {
      "op": "SHL"
    },
    "4460": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8634,
        8671
      ],
      "op": "DUP2",
      "path": "28"
    },
    "4461": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8634,
        8671
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "4462": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4464": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4466": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4468": {
      "op": "SHL"
    },
    "4469": {
      "op": "SUB"
    },
    "4470": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8634,
        8646
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "4471": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8634,
        8646
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "4472": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8634,
        8646
      ],
      "op": "AND",
      "path": "28"
    },
    "4473": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8634,
        8646
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "4474": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8634,
        8656
      ],
      "op": "PUSH4",
      "path": "28",
      "value": "0x70A08231"
    },
    "4479": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8634,
        8656
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "4480": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8634,
        8671
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x118D"
    },
    "4483": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8634,
        8671
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "4484": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8665,
        8669
      ],
      "op": "ADDRESS",
      "path": "28"
    },
    "4485": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8665,
        8669
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "4486": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8634,
        8671
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x4"
    },
    "4488": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8634,
        8671
      ],
      "op": "ADD",
      "path": "28"
    },
    "4489": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8634,
        8671
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x2539"
    },
    "4492": {
      "fn": "MiniChefV2.updatePool",
      "jump": "i",
      "offset": [
        8634,
        8671
      ],
      "op": "JUMP",
      "path": "28"
    },
    "4493": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8634,
        8671
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "4494": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8634,
        8671
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x20"
    },
    "4496": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8634,
        8671
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "4498": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8634,
        8671
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "4499": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8634,
        8671
      ],
      "op": "DUP1",
      "path": "28"
    },
    "4500": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8634,
        8671
      ],
      "op": "DUP4",
      "path": "28"
    },
    "4501": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8634,
        8671
      ],
      "op": "SUB",
      "path": "28"
    },
    "4502": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8634,
        8671
      ],
      "op": "DUP2",
      "path": "28"
    },
    "4503": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8634,
        8671
      ],
      "op": "DUP7",
      "path": "28"
    },
    "4504": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8634,
        8671
      ],
      "op": "DUP1",
      "path": "28"
    },
    "4505": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8634,
        8671
      ],
      "op": "EXTCODESIZE",
      "path": "28"
    },
    "4506": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8634,
        8671
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "4507": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8634,
        8671
      ],
      "op": "DUP1",
      "path": "28"
    },
    "4508": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8634,
        8671
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "4509": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8634,
        8671
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x11A5"
    },
    "4512": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8634,
        8671
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "4513": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8634,
        8671
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "4515": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8634,
        8671
      ],
      "op": "DUP1",
      "path": "28"
    },
    "4516": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8634,
        8671
      ],
      "op": "REVERT",
      "path": "28"
    },
    "4517": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8634,
        8671
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "4518": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8634,
        8671
      ],
      "op": "POP",
      "path": "28"
    },
    "4519": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8634,
        8671
      ],
      "op": "GAS",
      "path": "28"
    },
    "4520": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8634,
        8671
      ],
      "op": "STATICCALL",
      "path": "28"
    },
    "4521": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8634,
        8671
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "4522": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8634,
        8671
      ],
      "op": "DUP1",
      "path": "28"
    },
    "4523": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8634,
        8671
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "4524": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8634,
        8671
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x11B9"
    },
    "4527": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8634,
        8671
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "4528": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8634,
        8671
      ],
      "op": "RETURNDATASIZE",
      "path": "28"
    },
    "4529": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8634,
        8671
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "4531": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8634,
        8671
      ],
      "op": "DUP1",
      "path": "28"
    },
    "4532": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8634,
        8671
      ],
      "op": "RETURNDATACOPY",
      "path": "28"
    },
    "4533": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8634,
        8671
      ],
      "op": "RETURNDATASIZE",
      "path": "28"
    },
    "4534": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8634,
        8671
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "4536": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8634,
        8671
      ],
      "op": "REVERT",
      "path": "28"
    },
    "4537": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8634,
        8671
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "4538": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8634,
        8671
      ],
      "op": "POP",
      "path": "28"
    },
    "4539": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8634,
        8671
      ],
      "op": "POP",
      "path": "28"
    },
    "4540": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8634,
        8671
      ],
      "op": "POP",
      "path": "28"
    },
    "4541": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8634,
        8671
      ],
      "op": "POP",
      "path": "28"
    },
    "4542": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8634,
        8671
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "4544": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8634,
        8671
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "4545": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8634,
        8671
      ],
      "op": "RETURNDATASIZE",
      "path": "28"
    },
    "4546": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8634,
        8671
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x1F"
    },
    "4548": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8634,
        8671
      ],
      "op": "NOT",
      "path": "28"
    },
    "4549": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8634,
        8671
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x1F"
    },
    "4551": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8634,
        8671
      ],
      "op": "DUP3",
      "path": "28"
    },
    "4552": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8634,
        8671
      ],
      "op": "ADD",
      "path": "28"
    },
    "4553": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8634,
        8671
      ],
      "op": "AND",
      "path": "28"
    },
    "4554": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8634,
        8671
      ],
      "op": "DUP3",
      "path": "28"
    },
    "4555": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8634,
        8671
      ],
      "op": "ADD",
      "path": "28"
    },
    "4556": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8634,
        8671
      ],
      "op": "DUP1",
      "path": "28"
    },
    "4557": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8634,
        8671
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "4559": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8634,
        8671
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "4560": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8634,
        8671
      ],
      "op": "POP",
      "path": "28"
    },
    "4561": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8634,
        8671
      ],
      "op": "DUP2",
      "path": "28"
    },
    "4562": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8634,
        8671
      ],
      "op": "ADD",
      "path": "28"
    },
    "4563": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8634,
        8671
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "4564": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8634,
        8671
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x11DD"
    },
    "4567": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8634,
        8671
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "4568": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8634,
        8671
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "4569": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8634,
        8671
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x241A"
    },
    "4572": {
      "fn": "MiniChefV2.updatePool",
      "jump": "i",
      "offset": [
        8634,
        8671
      ],
      "op": "JUMP",
      "path": "28"
    },
    "4573": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8634,
        8671
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "4574": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8615,
        8671
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "4575": {
      "op": "POP"
    },
    "4576": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8689,
        8701
      ],
      "op": "DUP1",
      "path": "28"
    },
    "4577": {
      "branch": 93,
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8689,
        8701
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "4578": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8685,
        9020
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1280"
    },
    "4581": {
      "branch": 93,
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8685,
        9020
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "4582": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8721,
        8733
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "4584": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8736,
        8776
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1207"
    },
    "4587": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8756,
        8760
      ],
      "op": "DUP4",
      "path": "28"
    },
    "4588": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8756,
        8775
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x20"
    },
    "4590": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8756,
        8775
      ],
      "op": "ADD",
      "path": "28"
    },
    "4591": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8756,
        8775
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "4592": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4594": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4596": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4598": {
      "op": "SHL"
    },
    "4599": {
      "op": "SUB"
    },
    "4600": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8736,
        8776
      ],
      "op": "AND",
      "path": "28"
    },
    "4601": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8736,
        8751
      ],
      "op": "TIMESTAMP",
      "path": "28"
    },
    "4602": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8736,
        8755
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1DD1"
    },
    "4605": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8736,
        8755
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "4606": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8736,
        8776
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "4607": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8736,
        8776
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "4608": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8736,
        8776
      ],
      "op": "PUSH4",
      "path": "28",
      "value": "0xFFFFFFFF"
    },
    "4613": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8736,
        8776
      ],
      "op": "AND",
      "path": "28"
    },
    "4614": {
      "fn": "MiniChefV2.updatePool",
      "jump": "i",
      "offset": [
        8736,
        8776
      ],
      "op": "JUMP",
      "path": "28"
    },
    "4615": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8736,
        8776
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "4616": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8721,
        8776
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "4617": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8721,
        8776
      ],
      "op": "POP",
      "path": "28"
    },
    "4618": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8794,
        8813
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "4620": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8864,
        8879
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x8"
    },
    "4622": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8864,
        8879
      ],
      "op": "SLOAD",
      "path": "28"
    },
    "4623": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8816,
        8861
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1234"
    },
    "4626": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8845,
        8849
      ],
      "op": "DUP6",
      "path": "28"
    },
    "4627": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8845,
        8860
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "4629": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8845,
        8860
      ],
      "op": "ADD",
      "path": "28"
    },
    "4630": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8845,
        8860
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "4631": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4633": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4635": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4637": {
      "op": "SHL"
    },
    "4638": {
      "op": "SUB"
    },
    "4639": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8816,
        8861
      ],
      "op": "AND",
      "path": "28"
    },
    "4640": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8816,
        8840
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0xB54"
    },
    "4643": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8825,
        8839
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x9"
    },
    "4645": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8825,
        8839
      ],
      "op": "SLOAD",
      "path": "28"
    },
    "4646": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8816,
        8820
      ],
      "op": "DUP7",
      "path": "28"
    },
    "4647": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8816,
        8824
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1D47"
    },
    "4650": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8816,
        8824
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "4651": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8816,
        8840
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "4652": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8816,
        8840
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "4653": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8816,
        8840
      ],
      "op": "PUSH4",
      "path": "28",
      "value": "0xFFFFFFFF"
    },
    "4658": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8816,
        8840
      ],
      "op": "AND",
      "path": "28"
    },
    "4659": {
      "fn": "MiniChefV2.updatePool",
      "jump": "i",
      "offset": [
        8816,
        8840
      ],
      "op": "JUMP",
      "path": "28"
    },
    "4660": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8816,
        8861
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "4661": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8816,
        8879
      ],
      "op": "DUP2",
      "path": "28"
    },
    "4662": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8816,
        8879
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x123B"
    },
    "4665": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8816,
        8879
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "4666": {
      "dev": "Division by zero",
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8816,
        8879
      ],
      "op": "INVALID",
      "path": "28"
    },
    "4667": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8816,
        8879
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "4668": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8816,
        8879
      ],
      "op": "DIV",
      "path": "28"
    },
    "4669": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8816,
        8879
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "4670": {
      "op": "POP"
    },
    "4671": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8921,
        9005
      ],
      "op": "PUSH2",
      "path": "28",
      "statement": 35,
      "value": "0x1272"
    },
    "4674": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8947,
        9004
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1261"
    },
    "4677": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8987,
        8995
      ],
      "op": "DUP5",
      "path": "28"
    },
    "4678": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8948,
        8984
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1254"
    },
    "4681": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8816,
        8879
      ],
      "op": "DUP5",
      "path": "28"
    },
    "4682": {
      "offset": [
        2699,
        2703
      ],
      "op": "PUSH5",
      "path": "28",
      "value": "0xE8D4A51000"
    },
    "4688": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8948,
        8963
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1D47"
    },
    "4691": {
      "fn": "MiniChefV2.updatePool",
      "jump": "i",
      "offset": [
        8948,
        8984
      ],
      "op": "JUMP",
      "path": "28"
    },
    "4692": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8948,
        8984
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "4693": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8948,
        8995
      ],
      "op": "DUP2",
      "path": "28"
    },
    "4694": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8948,
        8995
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x125B"
    },
    "4697": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8948,
        8995
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "4698": {
      "dev": "Division by zero",
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8948,
        8995
      ],
      "op": "INVALID",
      "path": "28"
    },
    "4699": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8948,
        8995
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "4700": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8948,
        8995
      ],
      "op": "DIV",
      "path": "28"
    },
    "4701": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8947,
        9002
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1F33"
    },
    "4704": {
      "fn": "MiniChefV2.updatePool",
      "jump": "i",
      "offset": [
        8947,
        9004
      ],
      "op": "JUMP",
      "path": "28"
    },
    "4705": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8947,
        9004
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "4706": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8921,
        8942
      ],
      "op": "DUP6",
      "path": "28"
    },
    "4707": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8921,
        8942
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "4708": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4710": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4712": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4714": {
      "op": "SHL"
    },
    "4715": {
      "op": "SUB"
    },
    "4716": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8921,
        8946
      ],
      "op": "AND",
      "path": "28"
    },
    "4717": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8921,
        8946
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "4718": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8921,
        8946
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1F5C"
    },
    "4721": {
      "fn": "MiniChefV2.updatePool",
      "jump": "i",
      "offset": [
        8921,
        9005
      ],
      "op": "JUMP",
      "path": "28"
    },
    "4722": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8921,
        9005
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "4723": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4725": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4727": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4729": {
      "op": "SHL"
    },
    "4730": {
      "op": "SUB"
    },
    "4731": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8897,
        9005
      ],
      "op": "AND",
      "path": "28"
    },
    "4732": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8897,
        9005
      ],
      "op": "DUP5",
      "path": "28"
    },
    "4733": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8897,
        9005
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "4734": {
      "op": "POP"
    },
    "4735": {
      "op": "POP"
    },
    "4736": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8685,
        9020
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "4737": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        9055,
        9077
      ],
      "op": "PUSH2",
      "path": "28",
      "statement": 36,
      "value": "0x1289"
    },
    "4740": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        9055,
        9070
      ],
      "op": "TIMESTAMP",
      "path": "28"
    },
    "4741": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        9055,
        9075
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1F8B"
    },
    "4744": {
      "fn": "MiniChefV2.updatePool",
      "jump": "i",
      "offset": [
        9055,
        9077
      ],
      "op": "JUMP",
      "path": "28"
    },
    "4745": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        9055,
        9077
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "4746": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4748": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4750": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4752": {
      "op": "SHL"
    },
    "4753": {
      "op": "SUB"
    },
    "4754": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        9033,
        9077
      ],
      "op": "AND",
      "path": "28"
    },
    "4755": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        9033,
        9052
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x20"
    },
    "4757": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        9033,
        9052
      ],
      "op": "DUP4",
      "path": "28"
    },
    "4758": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        9033,
        9052
      ],
      "op": "ADD",
      "path": "28"
    },
    "4759": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        9033,
        9077
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "4760": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        9091,
        9099
      ],
      "op": "PUSH1",
      "path": "28",
      "statement": 37,
      "value": "0x3"
    },
    "4762": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        9091,
        9104
      ],
      "op": "DUP1",
      "path": "28"
    },
    "4763": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        9091,
        9104
      ],
      "op": "SLOAD",
      "path": "28"
    },
    "4764": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        9033,
        9037
      ],
      "op": "DUP4",
      "path": "28"
    },
    "4765": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        9033,
        9037
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "4766": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        9091,
        9099
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "4767": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        9100,
        9103
      ],
      "op": "DUP6",
      "path": "28"
    },
    "4768": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        9100,
        9103
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "4769": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        9091,
        9104
      ],
      "op": "DUP2",
      "path": "28"
    },
    "4770": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        9091,
        9104
      ],
      "op": "LT",
      "path": "28"
    },
    "4771": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        9091,
        9104
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x12A8"
    },
    "4774": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        9091,
        9104
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "4775": {
      "dev": "Index out of range",
      "fn": "MiniChefV2.updatePool",
      "offset": [
        9091,
        9104
      ],
      "op": "INVALID",
      "path": "28"
    },
    "4776": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        9091,
        9104
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "4777": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        9091,
        9104
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "4779": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        9091,
        9104
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "4780": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        9091,
        9104
      ],
      "op": "DUP3",
      "path": "28"
    },
    "4781": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        9091,
        9104
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "4782": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        9091,
        9104
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x20"
    },
    "4784": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        9091,
        9104
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "4785": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        9091,
        9104
      ],
      "op": "DUP3",
      "path": "28"
    },
    "4786": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        9091,
        9104
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "4787": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        9091,
        9104
      ],
      "op": "KECCAK256",
      "path": "28"
    },
    "4788": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        9091,
        9111
      ],
      "op": "DUP4",
      "path": "28"
    },
    "4789": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        9091,
        9111
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "4790": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        9091,
        9104
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "4791": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        9091,
        9104
      ],
      "op": "ADD",
      "path": "28"
    },
    "4792": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        9091,
        9111
      ],
      "op": "DUP1",
      "path": "28"
    },
    "4793": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        9091,
        9111
      ],
      "op": "SLOAD",
      "path": "28"
    },
    "4794": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        9091,
        9111
      ],
      "op": "DUP5",
      "path": "28"
    },
    "4795": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        9091,
        9111
      ],
      "op": "DUP5",
      "path": "28"
    },
    "4796": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        9091,
        9111
      ],
      "op": "ADD",
      "path": "28"
    },
    "4797": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        9091,
        9111
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "4798": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        9091,
        9111
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "4800": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        9091,
        9111
      ],
      "op": "SWAP6",
      "path": "28"
    },
    "4801": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        9091,
        9111
      ],
      "op": "DUP7",
      "path": "28"
    },
    "4802": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        9091,
        9111
      ],
      "op": "ADD",
      "path": "28"
    },
    "4803": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        9091,
        9111
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "4804": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4806": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4808": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4810": {
      "op": "SHL"
    },
    "4811": {
      "op": "SUB"
    },
    "4812": {
      "op": "NOT"
    },
    "4813": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        9091,
        9111
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "4814": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        9091,
        9111
      ],
      "op": "SWAP3",
      "path": "28"
    },
    "4815": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        9091,
        9111
      ],
      "op": "AND",
      "path": "28"
    },
    "4816": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4818": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4820": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4822": {
      "op": "SHL"
    },
    "4823": {
      "op": "SUB"
    },
    "4824": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        9091,
        9111
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "4825": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        9091,
        9111
      ],
      "op": "SWAP5",
      "path": "28"
    },
    "4826": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        9091,
        9111
      ],
      "op": "AND",
      "path": "28"
    },
    "4827": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        9091,
        9111
      ],
      "op": "SWAP4",
      "path": "28"
    },
    "4828": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        9091,
        9111
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "4829": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        9091,
        9111
      ],
      "op": "SWAP4",
      "path": "28"
    },
    "4830": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        9091,
        9111
      ],
      "op": "OR",
      "path": "28"
    },
    "4831": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "4840": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4842": {
      "op": "SHL"
    },
    "4843": {
      "op": "NOT"
    },
    "4844": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        9091,
        9111
      ],
      "op": "AND",
      "path": "28"
    },
    "4845": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4847": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4849": {
      "op": "SHL"
    },
    "4850": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4852": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4854": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4856": {
      "op": "SHL"
    },
    "4857": {
      "op": "SUB"
    },
    "4858": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        9091,
        9111
      ],
      "op": "SWAP5",
      "path": "28"
    },
    "4859": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        9091,
        9111
      ],
      "op": "DUP6",
      "path": "28"
    },
    "4860": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        9091,
        9111
      ],
      "op": "AND",
      "path": "28"
    },
    "4861": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        9091,
        9111
      ],
      "op": "MUL",
      "path": "28"
    },
    "4862": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        9091,
        9111
      ],
      "op": "OR",
      "path": "28"
    },
    "4863": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4865": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4867": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "4869": {
      "op": "SHL"
    },
    "4870": {
      "op": "SUB"
    },
    "4871": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        9091,
        9111
      ],
      "op": "AND",
      "path": "28"
    },
    "4872": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4874": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "4876": {
      "op": "SHL"
    },
    "4877": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        9091,
        9111
      ],
      "op": "SWAP4",
      "path": "28"
    },
    "4878": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        9091,
        9111
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "4879": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        9091,
        9111
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "4880": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        9091,
        9111
      ],
      "op": "AND",
      "path": "28"
    },
    "4881": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        9091,
        9111
      ],
      "op": "SWAP3",
      "path": "28"
    },
    "4882": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        9091,
        9111
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "4883": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        9091,
        9111
      ],
      "op": "SWAP3",
      "path": "28"
    },
    "4884": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        9091,
        9111
      ],
      "op": "MUL",
      "path": "28"
    },
    "4885": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        9091,
        9111
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "4886": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        9091,
        9111
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "4887": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        9091,
        9111
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "4888": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        9091,
        9111
      ],
      "op": "OR",
      "path": "28"
    },
    "4889": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        9091,
        9111
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "4890": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        9091,
        9111
      ],
      "op": "SSTORE",
      "path": "28"
    },
    "4891": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        9149,
        9168
      ],
      "op": "DUP4",
      "path": "28",
      "statement": 38
    },
    "4892": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        9149,
        9168
      ],
      "op": "ADD",
      "path": "28"
    },
    "4893": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        9149,
        9168
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "4894": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        9180,
        9201
      ],
      "op": "DUP4",
      "path": "28"
    },
    "4895": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        9180,
        9201
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "4896": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        9130,
        9202
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "4897": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        9130,
        9202
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "4898": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        9144,
        9147
      ],
      "op": "DUP6",
      "path": "28"
    },
    "4899": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        9144,
        9147
      ],
      "op": "SWAP3",
      "path": "28"
    },
    "4900": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        9130,
        9202
      ],
      "op": "PUSH32",
      "path": "28",
      "value": "0xFC9545022A542541AD085D091FB09A2AB36FEE366A4576AB63714EA907AD353"
    },
    "4933": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        9130,
        9202
      ],
      "op": "SWAP3",
      "path": "28"
    },
    "4934": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        9130,
        9202
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1352"
    },
    "4937": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        9130,
        9202
      ],
      "op": "SWAP3",
      "path": "28"
    },
    "4938": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        9149,
        9168
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "4939": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        9149,
        9168
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "4940": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        9170,
        9178
      ],
      "op": "DUP7",
      "path": "28"
    },
    "4941": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        9170,
        9178
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "4942": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        9130,
        9202
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x2A29"
    },
    "4945": {
      "fn": "MiniChefV2.updatePool",
      "jump": "i",
      "offset": [
        9130,
        9202
      ],
      "op": "JUMP",
      "path": "28"
    },
    "4946": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        9130,
        9202
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "4947": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        9130,
        9202
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "4949": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        9130,
        9202
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "4950": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        9130,
        9202
      ],
      "op": "DUP1",
      "path": "28"
    },
    "4951": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        9130,
        9202
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "4952": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        9130,
        9202
      ],
      "op": "SUB",
      "path": "28"
    },
    "4953": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        9130,
        9202
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "4954": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        9130,
        9202
      ],
      "op": "LOG2",
      "path": "28"
    },
    "4955": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8558,
        9213
      ],
      "op": "POP",
      "path": "28"
    },
    "4956": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8558,
        9213
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "4957": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8447,
        9219
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "4958": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8447,
        9219
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "4959": {
      "fn": "MiniChefV2.updatePool",
      "offset": [
        8447,
        9219
      ],
      "op": "POP",
      "path": "28"
    },
    "4960": {
      "fn": "MiniChefV2.updatePool",
      "jump": "o",
      "offset": [
        8447,
        9219
      ],
      "op": "JUMP",
      "path": "28"
    },
    "4961": {
      "fn": "MiniChefV2.massUpdatePools",
      "offset": [
        8080,
        8268
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "4962": {
      "fn": "MiniChefV2.massUpdatePools",
      "offset": [
        8163,
        8167
      ],
      "op": "DUP1",
      "path": "28"
    },
    "4963": {
      "fn": "MiniChefV2.massUpdatePools",
      "offset": [
        8149,
        8160
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "4965": {
      "fn": "MiniChefV2.massUpdatePools",
      "offset": [
        8184,
        8262
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "4966": {
      "fn": "MiniChefV2.massUpdatePools",
      "offset": [
        8208,
        8211
      ],
      "op": "DUP2",
      "path": "28"
    },
    "4967": {
      "fn": "MiniChefV2.massUpdatePools",
      "offset": [
        8204,
        8205
      ],
      "op": "DUP2",
      "path": "28"
    },
    "4968": {
      "fn": "MiniChefV2.massUpdatePools",
      "offset": [
        8204,
        8211
      ],
      "op": "LT",
      "path": "28"
    },
    "4969": {
      "fn": "MiniChefV2.massUpdatePools",
      "offset": [
        8184,
        8262
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "4970": {
      "fn": "MiniChefV2.massUpdatePools",
      "offset": [
        8184,
        8262
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1391"
    },
    "4973": {
      "fn": "MiniChefV2.massUpdatePools",
      "offset": [
        8184,
        8262
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "4974": {
      "fn": "MiniChefV2.massUpdatePools",
      "offset": [
        8232,
        8251
      ],
      "op": "PUSH2",
      "path": "28",
      "statement": 39,
      "value": "0x1388"
    },
    "4977": {
      "fn": "MiniChefV2.massUpdatePools",
      "offset": [
        8243,
        8247
      ],
      "op": "DUP5",
      "path": "28"
    },
    "4978": {
      "fn": "MiniChefV2.massUpdatePools",
      "offset": [
        8243,
        8247
      ],
      "op": "DUP5",
      "path": "28"
    },
    "4979": {
      "fn": "MiniChefV2.massUpdatePools",
      "offset": [
        8248,
        8249
      ],
      "op": "DUP4",
      "path": "28"
    },
    "4980": {
      "fn": "MiniChefV2.massUpdatePools",
      "offset": [
        8243,
        8250
      ],
      "op": "DUP2",
      "path": "28"
    },
    "4981": {
      "fn": "MiniChefV2.massUpdatePools",
      "offset": [
        8243,
        8250
      ],
      "op": "DUP2",
      "path": "28"
    },
    "4982": {
      "fn": "MiniChefV2.massUpdatePools",
      "offset": [
        8243,
        8250
      ],
      "op": "LT",
      "path": "28"
    },
    "4983": {
      "fn": "MiniChefV2.massUpdatePools",
      "offset": [
        8243,
        8250
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x137C"
    },
    "4986": {
      "fn": "MiniChefV2.massUpdatePools",
      "offset": [
        8243,
        8250
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "4987": {
      "dev": "Index out of range",
      "fn": "MiniChefV2.massUpdatePools",
      "offset": [
        8243,
        8250
      ],
      "op": "INVALID",
      "path": "28"
    },
    "4988": {
      "fn": "MiniChefV2.massUpdatePools",
      "offset": [
        8243,
        8250
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "4989": {
      "fn": "MiniChefV2.massUpdatePools",
      "offset": [
        8243,
        8250
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "4990": {
      "fn": "MiniChefV2.massUpdatePools",
      "offset": [
        8243,
        8250
      ],
      "op": "POP",
      "path": "28"
    },
    "4991": {
      "fn": "MiniChefV2.massUpdatePools",
      "offset": [
        8243,
        8250
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x20"
    },
    "4993": {
      "fn": "MiniChefV2.massUpdatePools",
      "offset": [
        8243,
        8250
      ],
      "op": "MUL",
      "path": "28"
    },
    "4994": {
      "fn": "MiniChefV2.massUpdatePools",
      "offset": [
        8243,
        8250
      ],
      "op": "ADD",
      "path": "28"
    },
    "4995": {
      "fn": "MiniChefV2.massUpdatePools",
      "offset": [
        8243,
        8250
      ],
      "op": "CALLDATALOAD",
      "path": "28"
    },
    "4996": {
      "fn": "MiniChefV2.massUpdatePools",
      "offset": [
        8232,
        8242
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x10DD"
    },
    "4999": {
      "fn": "MiniChefV2.massUpdatePools",
      "jump": "i",
      "offset": [
        8232,
        8251
      ],
      "op": "JUMP",
      "path": "28"
    },
    "5000": {
      "fn": "MiniChefV2.massUpdatePools",
      "offset": [
        8232,
        8251
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "5001": {
      "op": "POP"
    },
    "5002": {
      "fn": "MiniChefV2.massUpdatePools",
      "offset": [
        8213,
        8216
      ],
      "op": "PUSH1",
      "path": "28",
      "statement": 40,
      "value": "0x1"
    },
    "5004": {
      "fn": "MiniChefV2.massUpdatePools",
      "offset": [
        8213,
        8216
      ],
      "op": "ADD",
      "path": "28"
    },
    "5005": {
      "fn": "MiniChefV2.massUpdatePools",
      "offset": [
        8184,
        8262
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1365"
    },
    "5008": {
      "fn": "MiniChefV2.massUpdatePools",
      "offset": [
        8184,
        8262
      ],
      "op": "JUMP",
      "path": "28"
    },
    "5009": {
      "fn": "MiniChefV2.massUpdatePools",
      "offset": [
        8184,
        8262
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "5010": {
      "fn": "MiniChefV2.massUpdatePools",
      "offset": [
        8184,
        8262
      ],
      "op": "POP",
      "path": "28"
    },
    "5011": {
      "fn": "MiniChefV2.massUpdatePools",
      "offset": [
        8080,
        8268
      ],
      "op": "POP",
      "path": "28"
    },
    "5012": {
      "fn": "MiniChefV2.massUpdatePools",
      "offset": [
        8080,
        8268
      ],
      "op": "POP",
      "path": "28"
    },
    "5013": {
      "fn": "MiniChefV2.massUpdatePools",
      "offset": [
        8080,
        8268
      ],
      "op": "POP",
      "path": "28"
    },
    "5014": {
      "fn": "MiniChefV2.massUpdatePools",
      "jump": "o",
      "offset": [
        8080,
        8268
      ],
      "op": "JUMP",
      "path": "28"
    },
    "5015": {
      "offset": [
        2155,
        2178
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "5016": {
      "fn": "MiniChefV2.massUpdatePools",
      "offset": [
        2155,
        2178
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x4"
    },
    "5018": {
      "fn": "MiniChefV2.massUpdatePools",
      "offset": [
        2155,
        2178
      ],
      "op": "DUP2",
      "path": "28"
    },
    "5019": {
      "fn": "MiniChefV2.massUpdatePools",
      "offset": [
        2155,
        2178
      ],
      "op": "DUP2",
      "path": "28"
    },
    "5020": {
      "fn": "MiniChefV2.massUpdatePools",
      "offset": [
        2155,
        2178
      ],
      "op": "SLOAD",
      "path": "28"
    },
    "5021": {
      "fn": "MiniChefV2.massUpdatePools",
      "offset": [
        2155,
        2178
      ],
      "op": "DUP2",
      "path": "28"
    },
    "5022": {
      "fn": "MiniChefV2.massUpdatePools",
      "offset": [
        2155,
        2178
      ],
      "op": "LT",
      "path": "28"
    },
    "5023": {
      "fn": "MiniChefV2.massUpdatePools",
      "offset": [
        2155,
        2178
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x13A4"
    },
    "5026": {
      "fn": "MiniChefV2.massUpdatePools",
      "offset": [
        2155,
        2178
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "5027": {
      "fn": "MiniChefV2.massUpdatePools",
      "offset": [
        2155,
        2178
      ],
      "op": "INVALID",
      "path": "28"
    },
    "5028": {
      "fn": "MiniChefV2.massUpdatePools",
      "offset": [
        2155,
        2178
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "5029": {
      "fn": "MiniChefV2.massUpdatePools",
      "offset": [
        2155,
        2178
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "5031": {
      "fn": "MiniChefV2.massUpdatePools",
      "offset": [
        2155,
        2178
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "5032": {
      "fn": "MiniChefV2.massUpdatePools",
      "offset": [
        2155,
        2178
      ],
      "op": "DUP3",
      "path": "28"
    },
    "5033": {
      "fn": "MiniChefV2.massUpdatePools",
      "offset": [
        2155,
        2178
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "5034": {
      "fn": "MiniChefV2.massUpdatePools",
      "offset": [
        2155,
        2178
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x20"
    },
    "5036": {
      "fn": "MiniChefV2.massUpdatePools",
      "offset": [
        2155,
        2178
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "5037": {
      "fn": "MiniChefV2.massUpdatePools",
      "offset": [
        2155,
        2178
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "5038": {
      "fn": "MiniChefV2.massUpdatePools",
      "offset": [
        2155,
        2178
      ],
      "op": "KECCAK256",
      "path": "28"
    },
    "5039": {
      "fn": "MiniChefV2.massUpdatePools",
      "offset": [
        2155,
        2178
      ],
      "op": "ADD",
      "path": "28"
    },
    "5040": {
      "fn": "MiniChefV2.massUpdatePools",
      "offset": [
        2155,
        2178
      ],
      "op": "SLOAD",
      "path": "28"
    },
    "5041": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5043": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5045": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5047": {
      "op": "SHL"
    },
    "5048": {
      "op": "SUB"
    },
    "5049": {
      "offset": [
        2155,
        2178
      ],
      "op": "AND",
      "path": "28"
    },
    "5050": {
      "fn": "MiniChefV2.massUpdatePools",
      "offset": [
        2155,
        2178
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "5051": {
      "op": "POP"
    },
    "5052": {
      "offset": [
        2155,
        2178
      ],
      "op": "DUP2",
      "path": "28"
    },
    "5053": {
      "fn": "MiniChefV2.massUpdatePools",
      "jump": "o",
      "offset": [
        2155,
        2178
      ],
      "op": "JUMP",
      "path": "28"
    },
    "5054": {
      "offset": [
        2436,
        2480
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "5055": {
      "fn": "MiniChefV2.massUpdatePools",
      "offset": [
        2436,
        2480
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x7"
    },
    "5057": {
      "fn": "MiniChefV2.massUpdatePools",
      "offset": [
        2436,
        2480
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x20"
    },
    "5059": {
      "fn": "MiniChefV2.massUpdatePools",
      "offset": [
        2436,
        2480
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "5060": {
      "fn": "MiniChefV2.massUpdatePools",
      "offset": [
        2436,
        2480
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "5062": {
      "fn": "MiniChefV2.massUpdatePools",
      "offset": [
        2436,
        2480
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "5063": {
      "fn": "MiniChefV2.massUpdatePools",
      "offset": [
        2436,
        2480
      ],
      "op": "DUP2",
      "path": "28"
    },
    "5064": {
      "fn": "MiniChefV2.massUpdatePools",
      "offset": [
        2436,
        2480
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "5065": {
      "fn": "MiniChefV2.massUpdatePools",
      "offset": [
        2436,
        2480
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "5067": {
      "fn": "MiniChefV2.massUpdatePools",
      "offset": [
        2436,
        2480
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "5068": {
      "fn": "MiniChefV2.massUpdatePools",
      "offset": [
        2436,
        2480
      ],
      "op": "KECCAK256",
      "path": "28"
    },
    "5069": {
      "fn": "MiniChefV2.massUpdatePools",
      "offset": [
        2436,
        2480
      ],
      "op": "SLOAD",
      "path": "28"
    },
    "5070": {
      "fn": "MiniChefV2.massUpdatePools",
      "offset": [
        2436,
        2480
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0xFF"
    },
    "5072": {
      "fn": "MiniChefV2.massUpdatePools",
      "offset": [
        2436,
        2480
      ],
      "op": "AND",
      "path": "28"
    },
    "5073": {
      "fn": "MiniChefV2.massUpdatePools",
      "offset": [
        2436,
        2480
      ],
      "op": "DUP2",
      "path": "28"
    },
    "5074": {
      "fn": "MiniChefV2.massUpdatePools",
      "jump": "o",
      "offset": [
        2436,
        2480
      ],
      "op": "JUMP",
      "path": "28"
    },
    "5075": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2467,
        2736
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "5076": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2680,
        2729
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 41,
      "value": "0x40"
    },
    "5078": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2680,
        2729
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "5079": {
      "op": "PUSH4",
      "value": "0xD505ACCF"
    },
    "5084": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5086": {
      "op": "SHL"
    },
    "5087": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2680,
        2729
      ],
      "op": "DUP2",
      "path": "8"
    },
    "5088": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2680,
        2729
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "5089": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5091": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5093": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5095": {
      "op": "SHL"
    },
    "5096": {
      "op": "SUB"
    },
    "5097": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2680,
        2692
      ],
      "op": "DUP10",
      "path": "8"
    },
    "5098": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2680,
        2692
      ],
      "op": "AND",
      "path": "8"
    },
    "5099": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2680,
        2692
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "5100": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2680,
        2692
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0xD505ACCF"
    },
    "5105": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2680,
        2692
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "5106": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2680,
        2729
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x140B"
    },
    "5109": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2680,
        2729
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "5110": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2693,
        2697
      ],
      "op": "DUP11",
      "path": "8"
    },
    "5111": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2693,
        2697
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "5112": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2699,
        2701
      ],
      "op": "DUP11",
      "path": "8"
    },
    "5113": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2699,
        2701
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "5114": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2703,
        2709
      ],
      "op": "DUP11",
      "path": "8"
    },
    "5115": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2703,
        2709
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "5116": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2711,
        2719
      ],
      "op": "DUP11",
      "path": "8"
    },
    "5117": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2711,
        2719
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "5118": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2721,
        2722
      ],
      "op": "DUP11",
      "path": "8"
    },
    "5119": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2721,
        2722
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "5120": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2724,
        2725
      ],
      "op": "DUP11",
      "path": "8"
    },
    "5121": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2724,
        2725
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "5122": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2727,
        2728
      ],
      "op": "DUP11",
      "path": "8"
    },
    "5123": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2727,
        2728
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "5124": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2680,
        2729
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "5126": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2680,
        2729
      ],
      "op": "ADD",
      "path": "8"
    },
    "5127": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2680,
        2729
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x2571"
    },
    "5130": {
      "fn": "BoringBatchable.permitToken",
      "jump": "i",
      "offset": [
        2680,
        2729
      ],
      "op": "JUMP",
      "path": "8"
    },
    "5131": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2680,
        2729
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "5132": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2680,
        2729
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "5134": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2680,
        2729
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "5136": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2680,
        2729
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "5137": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2680,
        2729
      ],
      "op": "DUP1",
      "path": "8"
    },
    "5138": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2680,
        2729
      ],
      "op": "DUP4",
      "path": "8"
    },
    "5139": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2680,
        2729
      ],
      "op": "SUB",
      "path": "8"
    },
    "5140": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2680,
        2729
      ],
      "op": "DUP2",
      "path": "8"
    },
    "5141": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2680,
        2729
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "5143": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2680,
        2729
      ],
      "op": "DUP8",
      "path": "8"
    },
    "5144": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2680,
        2729
      ],
      "op": "DUP1",
      "path": "8"
    },
    "5145": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2680,
        2729
      ],
      "op": "EXTCODESIZE",
      "path": "8"
    },
    "5146": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2680,
        2729
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "5147": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2680,
        2729
      ],
      "op": "DUP1",
      "path": "8"
    },
    "5148": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2680,
        2729
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "5149": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2680,
        2729
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1425"
    },
    "5152": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2680,
        2729
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "5153": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2680,
        2729
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "5155": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2680,
        2729
      ],
      "op": "DUP1",
      "path": "8"
    },
    "5156": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2680,
        2729
      ],
      "op": "REVERT",
      "path": "8"
    },
    "5157": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2680,
        2729
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "5158": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2680,
        2729
      ],
      "op": "POP",
      "path": "8"
    },
    "5159": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2680,
        2729
      ],
      "op": "GAS",
      "path": "8"
    },
    "5160": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2680,
        2729
      ],
      "op": "CALL",
      "path": "8"
    },
    "5161": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2680,
        2729
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "5162": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2680,
        2729
      ],
      "op": "DUP1",
      "path": "8"
    },
    "5163": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2680,
        2729
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "5164": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2680,
        2729
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1439"
    },
    "5167": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2680,
        2729
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "5168": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2680,
        2729
      ],
      "op": "RETURNDATASIZE",
      "path": "8"
    },
    "5169": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2680,
        2729
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "5171": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2680,
        2729
      ],
      "op": "DUP1",
      "path": "8"
    },
    "5172": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2680,
        2729
      ],
      "op": "RETURNDATACOPY",
      "path": "8"
    },
    "5173": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2680,
        2729
      ],
      "op": "RETURNDATASIZE",
      "path": "8"
    },
    "5174": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2680,
        2729
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "5176": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2680,
        2729
      ],
      "op": "REVERT",
      "path": "8"
    },
    "5177": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2680,
        2729
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "5178": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2680,
        2729
      ],
      "op": "POP",
      "path": "8"
    },
    "5179": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2680,
        2729
      ],
      "op": "POP",
      "path": "8"
    },
    "5180": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2680,
        2729
      ],
      "op": "POP",
      "path": "8"
    },
    "5181": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2680,
        2729
      ],
      "op": "POP",
      "path": "8"
    },
    "5182": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2467,
        2736
      ],
      "op": "POP",
      "path": "8"
    },
    "5183": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2467,
        2736
      ],
      "op": "POP",
      "path": "8"
    },
    "5184": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2467,
        2736
      ],
      "op": "POP",
      "path": "8"
    },
    "5185": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2467,
        2736
      ],
      "op": "POP",
      "path": "8"
    },
    "5186": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2467,
        2736
      ],
      "op": "POP",
      "path": "8"
    },
    "5187": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2467,
        2736
      ],
      "op": "POP",
      "path": "8"
    },
    "5188": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2467,
        2736
      ],
      "op": "POP",
      "path": "8"
    },
    "5189": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2467,
        2736
      ],
      "op": "POP",
      "path": "8"
    },
    "5190": {
      "fn": "BoringBatchable.permitToken",
      "jump": "o",
      "offset": [
        2467,
        2736
      ],
      "op": "JUMP",
      "path": "8"
    },
    "5191": {
      "offset": [
        1987,
        2016
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "5192": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        1987,
        2016
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x2"
    },
    "5194": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        1987,
        2016
      ],
      "op": "SLOAD",
      "path": "28"
    },
    "5195": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5197": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5199": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5201": {
      "op": "SHL"
    },
    "5202": {
      "op": "SUB"
    },
    "5203": {
      "offset": [
        1987,
        2016
      ],
      "op": "AND",
      "path": "28"
    },
    "5204": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        1987,
        2016
      ],
      "op": "DUP2",
      "path": "28"
    },
    "5205": {
      "fn": "BoringBatchable.permitToken",
      "jump": "o",
      "offset": [
        1987,
        2016
      ],
      "op": "JUMP",
      "path": "28"
    },
    "5206": {
      "fn": "MiniChefV2.set",
      "offset": [
        5089,
        5495
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "5207": {
      "offset": [
        2146,
        2151
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "5209": {
      "fn": "MiniChefV2.set",
      "offset": [
        2146,
        2151
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "5210": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5212": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5214": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5216": {
      "op": "SHL"
    },
    "5217": {
      "op": "SUB"
    },
    "5218": {
      "offset": [
        2146,
        2151
      ],
      "op": "AND",
      "path": "11"
    },
    "5219": {
      "offset": [
        2132,
        2142
      ],
      "op": "CALLER",
      "path": "11"
    },
    "5220": {
      "offset": [
        2132,
        2151
      ],
      "op": "EQ",
      "path": "11"
    },
    "5221": {
      "offset": [
        2124,
        2188
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1480"
    },
    "5224": {
      "offset": [
        2124,
        2188
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "5225": {
      "fn": "MiniChefV2.set",
      "offset": [
        2124,
        2188
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "5227": {
      "fn": "MiniChefV2.set",
      "offset": [
        2124,
        2188
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "5228": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5232": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5234": {
      "op": "SHL"
    },
    "5235": {
      "offset": [
        2124,
        2188
      ],
      "op": "DUP2",
      "path": "11"
    },
    "5236": {
      "fn": "MiniChefV2.set",
      "offset": [
        2124,
        2188
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "5237": {
      "fn": "MiniChefV2.set",
      "offset": [
        2124,
        2188
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "5239": {
      "fn": "MiniChefV2.set",
      "offset": [
        2124,
        2188
      ],
      "op": "ADD",
      "path": "11"
    },
    "5240": {
      "fn": "MiniChefV2.set",
      "offset": [
        2124,
        2188
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x588"
    },
    "5243": {
      "fn": "MiniChefV2.set",
      "offset": [
        2124,
        2188
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "5244": {
      "fn": "MiniChefV2.set",
      "offset": [
        2124,
        2188
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x27BB"
    },
    "5247": {
      "fn": "MiniChefV2.set",
      "jump": "i",
      "offset": [
        2124,
        2188
      ],
      "op": "JUMP",
      "path": "11"
    },
    "5248": {
      "fn": "MiniChefV2.set",
      "offset": [
        2124,
        2188
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "5249": {
      "fn": "MiniChefV2.set",
      "offset": [
        5219,
        5282
      ],
      "op": "PUSH2",
      "path": "28",
      "statement": 42,
      "value": "0x14BF"
    },
    "5252": {
      "fn": "MiniChefV2.set",
      "offset": [
        5270,
        5281
      ],
      "op": "DUP4",
      "path": "28"
    },
    "5253": {
      "fn": "MiniChefV2.set",
      "offset": [
        5219,
        5265
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x14B9"
    },
    "5256": {
      "fn": "MiniChefV2.set",
      "offset": [
        5239,
        5247
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x3"
    },
    "5258": {
      "fn": "MiniChefV2.set",
      "offset": [
        5248,
        5252
      ],
      "op": "DUP8",
      "path": "28"
    },
    "5259": {
      "fn": "MiniChefV2.set",
      "offset": [
        5239,
        5253
      ],
      "op": "DUP2",
      "path": "28"
    },
    "5260": {
      "fn": "MiniChefV2.set",
      "offset": [
        5239,
        5253
      ],
      "op": "SLOAD",
      "path": "28"
    },
    "5261": {
      "fn": "MiniChefV2.set",
      "offset": [
        5239,
        5253
      ],
      "op": "DUP2",
      "path": "28"
    },
    "5262": {
      "fn": "MiniChefV2.set",
      "offset": [
        5239,
        5253
      ],
      "op": "LT",
      "path": "28"
    },
    "5263": {
      "fn": "MiniChefV2.set",
      "offset": [
        5239,
        5253
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1494"
    },
    "5266": {
      "fn": "MiniChefV2.set",
      "offset": [
        5239,
        5253
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "5267": {
      "dev": "Index out of range",
      "fn": "MiniChefV2.set",
      "offset": [
        5239,
        5253
      ],
      "op": "INVALID",
      "path": "28"
    },
    "5268": {
      "fn": "MiniChefV2.set",
      "offset": [
        5239,
        5253
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "5269": {
      "fn": "MiniChefV2.set",
      "offset": [
        5239,
        5253
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "5271": {
      "fn": "MiniChefV2.set",
      "offset": [
        5239,
        5253
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "5272": {
      "fn": "MiniChefV2.set",
      "offset": [
        5239,
        5253
      ],
      "op": "DUP3",
      "path": "28"
    },
    "5273": {
      "fn": "MiniChefV2.set",
      "offset": [
        5239,
        5253
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "5274": {
      "fn": "MiniChefV2.set",
      "offset": [
        5239,
        5253
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x20"
    },
    "5276": {
      "fn": "MiniChefV2.set",
      "offset": [
        5239,
        5253
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "5277": {
      "fn": "MiniChefV2.set",
      "offset": [
        5239,
        5253
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "5278": {
      "fn": "MiniChefV2.set",
      "offset": [
        5239,
        5253
      ],
      "op": "KECCAK256",
      "path": "28"
    },
    "5279": {
      "fn": "MiniChefV2.set",
      "offset": [
        5239,
        5253
      ],
      "op": "ADD",
      "path": "28"
    },
    "5280": {
      "fn": "MiniChefV2.set",
      "offset": [
        5239,
        5264
      ],
      "op": "SLOAD",
      "path": "28"
    },
    "5281": {
      "fn": "MiniChefV2.set",
      "offset": [
        5219,
        5234
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x8"
    },
    "5283": {
      "fn": "MiniChefV2.set",
      "offset": [
        5219,
        5234
      ],
      "op": "SLOAD",
      "path": "28"
    },
    "5284": {
      "fn": "MiniChefV2.set",
      "offset": [
        5219,
        5234
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "5285": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5287": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "5289": {
      "op": "SHL"
    },
    "5290": {
      "fn": "MiniChefV2.set",
      "offset": [
        5239,
        5264
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "5291": {
      "fn": "MiniChefV2.set",
      "offset": [
        5239,
        5264
      ],
      "op": "DIV",
      "path": "28"
    },
    "5292": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5294": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5296": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5298": {
      "op": "SHL"
    },
    "5299": {
      "op": "SUB"
    },
    "5300": {
      "fn": "MiniChefV2.set",
      "offset": [
        5239,
        5264
      ],
      "op": "AND",
      "path": "28"
    },
    "5301": {
      "fn": "MiniChefV2.set",
      "offset": [
        5219,
        5238
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1DD1"
    },
    "5304": {
      "fn": "MiniChefV2.set",
      "jump": "i",
      "offset": [
        5219,
        5265
      ],
      "op": "JUMP",
      "path": "28"
    },
    "5305": {
      "fn": "MiniChefV2.set",
      "offset": [
        5219,
        5265
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "5306": {
      "fn": "MiniChefV2.set",
      "offset": [
        5219,
        5269
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "5307": {
      "fn": "MiniChefV2.set",
      "offset": [
        5219,
        5269
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1F10"
    },
    "5310": {
      "fn": "MiniChefV2.set",
      "jump": "i",
      "offset": [
        5219,
        5282
      ],
      "op": "JUMP",
      "path": "28"
    },
    "5311": {
      "fn": "MiniChefV2.set",
      "offset": [
        5219,
        5282
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "5312": {
      "fn": "MiniChefV2.set",
      "offset": [
        5201,
        5216
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x8"
    },
    "5314": {
      "fn": "MiniChefV2.set",
      "offset": [
        5201,
        5282
      ],
      "op": "SSTORE",
      "path": "28"
    },
    "5315": {
      "fn": "MiniChefV2.set",
      "offset": [
        5320,
        5338
      ],
      "op": "PUSH2",
      "path": "28",
      "statement": 43,
      "value": "0x14CB"
    },
    "5318": {
      "fn": "MiniChefV2.set",
      "offset": [
        5320,
        5331
      ],
      "op": "DUP4",
      "path": "28"
    },
    "5319": {
      "fn": "MiniChefV2.set",
      "offset": [
        5320,
        5336
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1F8B"
    },
    "5322": {
      "fn": "MiniChefV2.set",
      "jump": "i",
      "offset": [
        5320,
        5338
      ],
      "op": "JUMP",
      "path": "28"
    },
    "5323": {
      "fn": "MiniChefV2.set",
      "offset": [
        5320,
        5338
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "5324": {
      "fn": "MiniChefV2.set",
      "offset": [
        5292,
        5300
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x3"
    },
    "5326": {
      "fn": "MiniChefV2.set",
      "offset": [
        5301,
        5305
      ],
      "op": "DUP6",
      "path": "28"
    },
    "5327": {
      "fn": "MiniChefV2.set",
      "offset": [
        5292,
        5306
      ],
      "op": "DUP2",
      "path": "28"
    },
    "5328": {
      "fn": "MiniChefV2.set",
      "offset": [
        5292,
        5306
      ],
      "op": "SLOAD",
      "path": "28"
    },
    "5329": {
      "fn": "MiniChefV2.set",
      "offset": [
        5292,
        5306
      ],
      "op": "DUP2",
      "path": "28"
    },
    "5330": {
      "fn": "MiniChefV2.set",
      "offset": [
        5292,
        5306
      ],
      "op": "LT",
      "path": "28"
    },
    "5331": {
      "fn": "MiniChefV2.set",
      "offset": [
        5292,
        5306
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x14D8"
    },
    "5334": {
      "fn": "MiniChefV2.set",
      "offset": [
        5292,
        5306
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "5335": {
      "dev": "Index out of range",
      "fn": "MiniChefV2.set",
      "offset": [
        5292,
        5306
      ],
      "op": "INVALID",
      "path": "28"
    },
    "5336": {
      "fn": "MiniChefV2.set",
      "offset": [
        5292,
        5306
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "5337": {
      "fn": "MiniChefV2.set",
      "offset": [
        5292,
        5306
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "5338": {
      "fn": "MiniChefV2.set",
      "offset": [
        5292,
        5306
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "5340": {
      "fn": "MiniChefV2.set",
      "offset": [
        5292,
        5306
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "5341": {
      "fn": "MiniChefV2.set",
      "offset": [
        5292,
        5306
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x20"
    },
    "5343": {
      "fn": "MiniChefV2.set",
      "offset": [
        5292,
        5306
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "5345": {
      "fn": "MiniChefV2.set",
      "offset": [
        5292,
        5306
      ],
      "op": "KECCAK256",
      "path": "28"
    },
    "5346": {
      "fn": "MiniChefV2.set",
      "offset": [
        5292,
        5306
      ],
      "op": "ADD",
      "path": "28"
    },
    "5347": {
      "fn": "MiniChefV2.set",
      "offset": [
        5292,
        5317
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "5349": {
      "fn": "MiniChefV2.set",
      "offset": [
        5292,
        5317
      ],
      "op": "ADD",
      "path": "28"
    },
    "5350": {
      "fn": "MiniChefV2.set",
      "offset": [
        5292,
        5317
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x18"
    },
    "5352": {
      "fn": "MiniChefV2.set",
      "offset": [
        5292,
        5338
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x100"
    },
    "5355": {
      "fn": "MiniChefV2.set",
      "offset": [
        5292,
        5338
      ],
      "op": "EXP",
      "path": "28"
    },
    "5356": {
      "fn": "MiniChefV2.set",
      "offset": [
        5292,
        5338
      ],
      "op": "DUP2",
      "path": "28"
    },
    "5357": {
      "fn": "MiniChefV2.set",
      "offset": [
        5292,
        5338
      ],
      "op": "SLOAD",
      "path": "28"
    },
    "5358": {
      "fn": "MiniChefV2.set",
      "offset": [
        5292,
        5338
      ],
      "op": "DUP2",
      "path": "28"
    },
    "5359": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5361": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5363": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5365": {
      "op": "SHL"
    },
    "5366": {
      "op": "SUB"
    },
    "5367": {
      "fn": "MiniChefV2.set",
      "offset": [
        5292,
        5338
      ],
      "op": "MUL",
      "path": "28"
    },
    "5368": {
      "fn": "MiniChefV2.set",
      "offset": [
        5292,
        5338
      ],
      "op": "NOT",
      "path": "28"
    },
    "5369": {
      "fn": "MiniChefV2.set",
      "offset": [
        5292,
        5338
      ],
      "op": "AND",
      "path": "28"
    },
    "5370": {
      "fn": "MiniChefV2.set",
      "offset": [
        5292,
        5338
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "5371": {
      "fn": "MiniChefV2.set",
      "offset": [
        5292,
        5338
      ],
      "op": "DUP4",
      "path": "28"
    },
    "5372": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5374": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5376": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5378": {
      "op": "SHL"
    },
    "5379": {
      "op": "SUB"
    },
    "5380": {
      "fn": "MiniChefV2.set",
      "offset": [
        5292,
        5338
      ],
      "op": "AND",
      "path": "28"
    },
    "5381": {
      "fn": "MiniChefV2.set",
      "offset": [
        5292,
        5338
      ],
      "op": "MUL",
      "path": "28"
    },
    "5382": {
      "fn": "MiniChefV2.set",
      "offset": [
        5292,
        5338
      ],
      "op": "OR",
      "path": "28"
    },
    "5383": {
      "fn": "MiniChefV2.set",
      "offset": [
        5292,
        5338
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "5384": {
      "fn": "MiniChefV2.set",
      "offset": [
        5292,
        5338
      ],
      "op": "SSTORE",
      "path": "28"
    },
    "5385": {
      "fn": "MiniChefV2.set",
      "offset": [
        5292,
        5338
      ],
      "op": "POP",
      "path": "28"
    },
    "5386": {
      "branch": 94,
      "fn": "MiniChefV2.set",
      "offset": [
        5352,
        5361
      ],
      "op": "DUP1",
      "path": "28"
    },
    "5387": {
      "fn": "MiniChefV2.set",
      "offset": [
        5348,
        5394
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "5388": {
      "fn": "MiniChefV2.set",
      "offset": [
        5348,
        5394
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x154C"
    },
    "5391": {
      "branch": 94,
      "fn": "MiniChefV2.set",
      "offset": [
        5348,
        5394
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "5392": {
      "fn": "MiniChefV2.set",
      "offset": [
        5382,
        5391
      ],
      "op": "DUP2",
      "path": "28",
      "statement": 44
    },
    "5393": {
      "fn": "MiniChefV2.set",
      "offset": [
        5365,
        5373
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x5"
    },
    "5395": {
      "fn": "MiniChefV2.set",
      "offset": [
        5374,
        5378
      ],
      "op": "DUP6",
      "path": "28"
    },
    "5396": {
      "fn": "MiniChefV2.set",
      "offset": [
        5365,
        5379
      ],
      "op": "DUP2",
      "path": "28"
    },
    "5397": {
      "fn": "MiniChefV2.set",
      "offset": [
        5365,
        5379
      ],
      "op": "SLOAD",
      "path": "28"
    },
    "5398": {
      "fn": "MiniChefV2.set",
      "offset": [
        5365,
        5379
      ],
      "op": "DUP2",
      "path": "28"
    },
    "5399": {
      "fn": "MiniChefV2.set",
      "offset": [
        5365,
        5379
      ],
      "op": "LT",
      "path": "28"
    },
    "5400": {
      "fn": "MiniChefV2.set",
      "offset": [
        5365,
        5379
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x151D"
    },
    "5403": {
      "fn": "MiniChefV2.set",
      "offset": [
        5365,
        5379
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "5404": {
      "dev": "Index out of range",
      "fn": "MiniChefV2.set",
      "offset": [
        5365,
        5379
      ],
      "op": "INVALID",
      "path": "28"
    },
    "5405": {
      "fn": "MiniChefV2.set",
      "offset": [
        5365,
        5379
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "5406": {
      "fn": "MiniChefV2.set",
      "offset": [
        5365,
        5379
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "5407": {
      "fn": "MiniChefV2.set",
      "offset": [
        5365,
        5379
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "5409": {
      "fn": "MiniChefV2.set",
      "offset": [
        5365,
        5379
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "5410": {
      "fn": "MiniChefV2.set",
      "offset": [
        5365,
        5379
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x20"
    },
    "5412": {
      "fn": "MiniChefV2.set",
      "offset": [
        5365,
        5379
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "5414": {
      "fn": "MiniChefV2.set",
      "offset": [
        5365,
        5379
      ],
      "op": "KECCAK256",
      "path": "28"
    },
    "5415": {
      "fn": "MiniChefV2.set",
      "offset": [
        5365,
        5379
      ],
      "op": "ADD",
      "path": "28"
    },
    "5416": {
      "fn": "MiniChefV2.set",
      "offset": [
        5365,
        5379
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "5418": {
      "fn": "MiniChefV2.set",
      "offset": [
        5365,
        5391
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x100"
    },
    "5421": {
      "fn": "MiniChefV2.set",
      "offset": [
        5365,
        5391
      ],
      "op": "EXP",
      "path": "28"
    },
    "5422": {
      "fn": "MiniChefV2.set",
      "offset": [
        5365,
        5391
      ],
      "op": "DUP2",
      "path": "28"
    },
    "5423": {
      "fn": "MiniChefV2.set",
      "offset": [
        5365,
        5391
      ],
      "op": "SLOAD",
      "path": "28"
    },
    "5424": {
      "fn": "MiniChefV2.set",
      "offset": [
        5365,
        5391
      ],
      "op": "DUP2",
      "path": "28"
    },
    "5425": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5427": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5429": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5431": {
      "op": "SHL"
    },
    "5432": {
      "op": "SUB"
    },
    "5433": {
      "fn": "MiniChefV2.set",
      "offset": [
        5365,
        5391
      ],
      "op": "MUL",
      "path": "28"
    },
    "5434": {
      "fn": "MiniChefV2.set",
      "offset": [
        5365,
        5391
      ],
      "op": "NOT",
      "path": "28"
    },
    "5435": {
      "fn": "MiniChefV2.set",
      "offset": [
        5365,
        5391
      ],
      "op": "AND",
      "path": "28"
    },
    "5436": {
      "fn": "MiniChefV2.set",
      "offset": [
        5365,
        5391
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "5437": {
      "fn": "MiniChefV2.set",
      "offset": [
        5365,
        5391
      ],
      "op": "DUP4",
      "path": "28"
    },
    "5438": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5440": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5442": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5444": {
      "op": "SHL"
    },
    "5445": {
      "op": "SUB"
    },
    "5446": {
      "fn": "MiniChefV2.set",
      "offset": [
        5365,
        5391
      ],
      "op": "AND",
      "path": "28"
    },
    "5447": {
      "fn": "MiniChefV2.set",
      "offset": [
        5365,
        5391
      ],
      "op": "MUL",
      "path": "28"
    },
    "5448": {
      "fn": "MiniChefV2.set",
      "offset": [
        5365,
        5391
      ],
      "op": "OR",
      "path": "28"
    },
    "5449": {
      "fn": "MiniChefV2.set",
      "offset": [
        5365,
        5391
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "5450": {
      "fn": "MiniChefV2.set",
      "offset": [
        5365,
        5391
      ],
      "op": "SSTORE",
      "path": "28"
    },
    "5451": {
      "fn": "MiniChefV2.set",
      "offset": [
        5365,
        5391
      ],
      "op": "POP",
      "path": "28"
    },
    "5452": {
      "fn": "MiniChefV2.set",
      "offset": [
        5348,
        5394
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "5453": {
      "branch": 95,
      "fn": "MiniChefV2.set",
      "offset": [
        5438,
        5447
      ],
      "op": "DUP1",
      "path": "28",
      "statement": 45
    },
    "5454": {
      "fn": "MiniChefV2.set",
      "offset": [
        5438,
        5476
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1578"
    },
    "5457": {
      "branch": 95,
      "fn": "MiniChefV2.set",
      "offset": [
        5438,
        5476
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "5458": {
      "fn": "MiniChefV2.set",
      "offset": [
        5462,
        5470
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x5"
    },
    "5460": {
      "fn": "MiniChefV2.set",
      "offset": [
        5471,
        5475
      ],
      "op": "DUP5",
      "path": "28"
    },
    "5461": {
      "fn": "MiniChefV2.set",
      "offset": [
        5462,
        5476
      ],
      "op": "DUP2",
      "path": "28"
    },
    "5462": {
      "fn": "MiniChefV2.set",
      "offset": [
        5462,
        5476
      ],
      "op": "SLOAD",
      "path": "28"
    },
    "5463": {
      "fn": "MiniChefV2.set",
      "offset": [
        5462,
        5476
      ],
      "op": "DUP2",
      "path": "28"
    },
    "5464": {
      "fn": "MiniChefV2.set",
      "offset": [
        5462,
        5476
      ],
      "op": "LT",
      "path": "28"
    },
    "5465": {
      "fn": "MiniChefV2.set",
      "offset": [
        5462,
        5476
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x155E"
    },
    "5468": {
      "fn": "MiniChefV2.set",
      "offset": [
        5462,
        5476
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "5469": {
      "dev": "Index out of range",
      "fn": "MiniChefV2.set",
      "offset": [
        5462,
        5476
      ],
      "op": "INVALID",
      "path": "28"
    },
    "5470": {
      "fn": "MiniChefV2.set",
      "offset": [
        5462,
        5476
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "5471": {
      "fn": "MiniChefV2.set",
      "offset": [
        5462,
        5476
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "5473": {
      "fn": "MiniChefV2.set",
      "offset": [
        5462,
        5476
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "5474": {
      "fn": "MiniChefV2.set",
      "offset": [
        5462,
        5476
      ],
      "op": "DUP3",
      "path": "28"
    },
    "5475": {
      "fn": "MiniChefV2.set",
      "offset": [
        5462,
        5476
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "5476": {
      "fn": "MiniChefV2.set",
      "offset": [
        5462,
        5476
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x20"
    },
    "5478": {
      "fn": "MiniChefV2.set",
      "offset": [
        5462,
        5476
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "5479": {
      "fn": "MiniChefV2.set",
      "offset": [
        5462,
        5476
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "5480": {
      "fn": "MiniChefV2.set",
      "offset": [
        5462,
        5476
      ],
      "op": "KECCAK256",
      "path": "28"
    },
    "5481": {
      "fn": "MiniChefV2.set",
      "offset": [
        5462,
        5476
      ],
      "op": "ADD",
      "path": "28"
    },
    "5482": {
      "fn": "MiniChefV2.set",
      "offset": [
        5462,
        5476
      ],
      "op": "SLOAD",
      "path": "28"
    },
    "5483": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5485": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5487": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5489": {
      "op": "SHL"
    },
    "5490": {
      "op": "SUB"
    },
    "5491": {
      "fn": "MiniChefV2.set",
      "offset": [
        5462,
        5476
      ],
      "op": "AND",
      "path": "28"
    },
    "5492": {
      "fn": "MiniChefV2.set",
      "offset": [
        5438,
        5476
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x157A"
    },
    "5495": {
      "fn": "MiniChefV2.set",
      "offset": [
        5438,
        5476
      ],
      "op": "JUMP",
      "path": "28"
    },
    "5496": {
      "fn": "MiniChefV2.set",
      "offset": [
        5438,
        5476
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "5497": {
      "fn": "MiniChefV2.set",
      "offset": [
        5450,
        5459
      ],
      "op": "DUP2",
      "path": "28"
    },
    "5498": {
      "fn": "MiniChefV2.set",
      "offset": [
        5438,
        5476
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "5499": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5501": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5503": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5505": {
      "op": "SHL"
    },
    "5506": {
      "op": "SUB"
    },
    "5507": {
      "fn": "MiniChefV2.set",
      "offset": [
        5408,
        5488
      ],
      "op": "AND",
      "path": "28"
    },
    "5508": {
      "fn": "MiniChefV2.set",
      "offset": [
        5419,
        5423
      ],
      "op": "DUP5",
      "path": "28"
    },
    "5509": {
      "fn": "MiniChefV2.set",
      "offset": [
        5408,
        5488
      ],
      "op": "PUSH32",
      "path": "28",
      "value": "0x95895A6AB1DF54420D241B55243258A33E61B2194DB66C1179EC521AAE8E1865"
    },
    "5542": {
      "fn": "MiniChefV2.set",
      "offset": [
        5425,
        5436
      ],
      "op": "DUP6",
      "path": "28"
    },
    "5543": {
      "fn": "MiniChefV2.set",
      "offset": [
        5478,
        5487
      ],
      "op": "DUP5",
      "path": "28"
    },
    "5544": {
      "fn": "MiniChefV2.set",
      "offset": [
        5408,
        5488
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "5546": {
      "fn": "MiniChefV2.set",
      "offset": [
        5408,
        5488
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "5547": {
      "fn": "MiniChefV2.set",
      "offset": [
        5408,
        5488
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x15B5"
    },
    "5550": {
      "fn": "MiniChefV2.set",
      "offset": [
        5408,
        5488
      ],
      "op": "SWAP3",
      "path": "28"
    },
    "5551": {
      "fn": "MiniChefV2.set",
      "offset": [
        5408,
        5488
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "5552": {
      "fn": "MiniChefV2.set",
      "offset": [
        5408,
        5488
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "5553": {
      "fn": "MiniChefV2.set",
      "offset": [
        5408,
        5488
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x2A0B"
    },
    "5556": {
      "fn": "MiniChefV2.set",
      "jump": "i",
      "offset": [
        5408,
        5488
      ],
      "op": "JUMP",
      "path": "28"
    },
    "5557": {
      "fn": "MiniChefV2.set",
      "offset": [
        5408,
        5488
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "5558": {
      "fn": "MiniChefV2.set",
      "offset": [
        5408,
        5488
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "5560": {
      "fn": "MiniChefV2.set",
      "offset": [
        5408,
        5488
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "5561": {
      "fn": "MiniChefV2.set",
      "offset": [
        5408,
        5488
      ],
      "op": "DUP1",
      "path": "28"
    },
    "5562": {
      "fn": "MiniChefV2.set",
      "offset": [
        5408,
        5488
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "5563": {
      "fn": "MiniChefV2.set",
      "offset": [
        5408,
        5488
      ],
      "op": "SUB",
      "path": "28"
    },
    "5564": {
      "fn": "MiniChefV2.set",
      "offset": [
        5408,
        5488
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "5565": {
      "fn": "MiniChefV2.set",
      "offset": [
        5408,
        5488
      ],
      "op": "LOG3",
      "path": "28"
    },
    "5566": {
      "fn": "MiniChefV2.set",
      "offset": [
        5089,
        5495
      ],
      "op": "POP",
      "path": "28"
    },
    "5567": {
      "fn": "MiniChefV2.set",
      "offset": [
        5089,
        5495
      ],
      "op": "POP",
      "path": "28"
    },
    "5568": {
      "fn": "MiniChefV2.set",
      "offset": [
        5089,
        5495
      ],
      "op": "POP",
      "path": "28"
    },
    "5569": {
      "fn": "MiniChefV2.set",
      "offset": [
        5089,
        5495
      ],
      "op": "POP",
      "path": "28"
    },
    "5570": {
      "fn": "MiniChefV2.set",
      "jump": "o",
      "offset": [
        5089,
        5495
      ],
      "op": "JUMP",
      "path": "28"
    },
    "5571": {
      "offset": [
        288,
        308
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "5572": {
      "fn": "MiniChefV2.set",
      "offset": [
        288,
        308
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "5574": {
      "fn": "MiniChefV2.set",
      "offset": [
        288,
        308
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "5575": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5577": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5579": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5581": {
      "op": "SHL"
    },
    "5582": {
      "op": "SUB"
    },
    "5583": {
      "offset": [
        288,
        308
      ],
      "op": "AND",
      "path": "11"
    },
    "5584": {
      "fn": "MiniChefV2.set",
      "offset": [
        288,
        308
      ],
      "op": "DUP2",
      "path": "11"
    },
    "5585": {
      "fn": "MiniChefV2.set",
      "jump": "o",
      "offset": [
        288,
        308
      ],
      "op": "JUMP",
      "path": "11"
    },
    "5586": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        9457,
        10128
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "5587": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        9532,
        9552
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x15DA"
    },
    "5590": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        9532,
        9552
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x2153"
    },
    "5593": {
      "fn": "MiniChefV2.deposit",
      "jump": "i",
      "offset": [
        9532,
        9552
      ],
      "op": "JUMP",
      "path": "28"
    },
    "5594": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        9532,
        9552
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "5595": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        9555,
        9570
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x15E3"
    },
    "5598": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        9566,
        9569
      ],
      "op": "DUP5",
      "path": "28"
    },
    "5599": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        9555,
        9565
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x10DD"
    },
    "5602": {
      "fn": "MiniChefV2.deposit",
      "jump": "i",
      "offset": [
        9555,
        9570
      ],
      "op": "JUMP",
      "path": "28"
    },
    "5603": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        9555,
        9570
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "5604": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        9580,
        9601
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "5606": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        9604,
        9617
      ],
      "op": "DUP6",
      "path": "28"
    },
    "5607": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        9604,
        9617
      ],
      "op": "DUP2",
      "path": "28"
    },
    "5608": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        9604,
        9617
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "5609": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        9604,
        9612
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x6"
    },
    "5611": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        9604,
        9617
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x20"
    },
    "5613": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        9604,
        9617
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "5614": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        9604,
        9617
      ],
      "op": "DUP2",
      "path": "28"
    },
    "5615": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        9604,
        9617
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "5616": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        9604,
        9617
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "5618": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        9604,
        9617
      ],
      "op": "DUP1",
      "path": "28"
    },
    "5619": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        9604,
        9617
      ],
      "op": "DUP4",
      "path": "28"
    },
    "5620": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        9604,
        9617
      ],
      "op": "KECCAK256",
      "path": "28"
    },
    "5621": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5623": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5625": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5627": {
      "op": "SHL"
    },
    "5628": {
      "op": "SUB"
    },
    "5629": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        9604,
        9621
      ],
      "op": "DUP8",
      "path": "28"
    },
    "5630": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        9604,
        9621
      ],
      "op": "AND",
      "path": "28"
    },
    "5631": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        9604,
        9621
      ],
      "op": "DUP5",
      "path": "28"
    },
    "5632": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        9604,
        9621
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "5633": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        9604,
        9621
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "5634": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        9604,
        9621
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "5635": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        9604,
        9621
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "5636": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        9604,
        9621
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "5637": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        9604,
        9621
      ],
      "op": "KECCAK256",
      "path": "28"
    },
    "5638": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        9665,
        9676
      ],
      "op": "DUP1",
      "path": "28",
      "statement": 46
    },
    "5639": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        9665,
        9676
      ],
      "op": "SLOAD",
      "path": "28"
    },
    "5640": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        9532,
        9570
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "5641": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        9532,
        9570
      ],
      "op": "SWAP3",
      "path": "28"
    },
    "5642": {
      "op": "POP"
    },
    "5643": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        9604,
        9621
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "5644": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        9665,
        9688
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1615"
    },
    "5647": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        9665,
        9688
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "5648": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        9681,
        9687
      ],
      "op": "DUP6",
      "path": "28"
    },
    "5649": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        9665,
        9680
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1F10"
    },
    "5652": {
      "fn": "MiniChefV2.deposit",
      "jump": "i",
      "offset": [
        9665,
        9688
      ],
      "op": "JUMP",
      "path": "28"
    },
    "5653": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        9665,
        9688
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "5654": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        9651,
        9688
      ],
      "op": "DUP2",
      "path": "28"
    },
    "5655": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        9651,
        9688
      ],
      "op": "SSTORE",
      "path": "28"
    },
    "5656": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        9754,
        9775
      ],
      "op": "DUP2",
      "path": "28",
      "statement": 47
    },
    "5657": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        9754,
        9775
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "5658": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        9716,
        9800
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x164C"
    },
    "5661": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        9716,
        9800
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "5662": {
      "offset": [
        2699,
        2703
      ],
      "op": "PUSH5",
      "path": "28",
      "value": "0xE8D4A51000"
    },
    "5668": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        2699,
        2703
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "5669": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        9743,
        9776
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1638"
    },
    "5672": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        9743,
        9776
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "5673": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        9743,
        9749
      ],
      "op": "DUP8",
      "path": "28"
    },
    "5674": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        9743,
        9749
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "5675": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5677": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5679": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5681": {
      "op": "SHL"
    },
    "5682": {
      "op": "SUB"
    },
    "5683": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        9743,
        9776
      ],
      "op": "AND",
      "path": "28"
    },
    "5684": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        9743,
        9753
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1D47"
    },
    "5687": {
      "fn": "MiniChefV2.deposit",
      "jump": "i",
      "offset": [
        9743,
        9776
      ],
      "op": "JUMP",
      "path": "28"
    },
    "5688": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        9743,
        9776
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "5689": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        9743,
        9798
      ],
      "op": "DUP2",
      "path": "28"
    },
    "5690": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        9743,
        9798
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x163F"
    },
    "5693": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        9743,
        9798
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "5694": {
      "dev": "Division by zero",
      "fn": "MiniChefV2.deposit",
      "offset": [
        9743,
        9798
      ],
      "op": "INVALID",
      "path": "28"
    },
    "5695": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        9743,
        9798
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "5696": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        9716,
        9731
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x1"
    },
    "5698": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        9716,
        9731
      ],
      "op": "DUP5",
      "path": "28"
    },
    "5699": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        9716,
        9731
      ],
      "op": "ADD",
      "path": "28"
    },
    "5700": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        9716,
        9731
      ],
      "op": "SLOAD",
      "path": "28"
    },
    "5701": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        9716,
        9731
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "5702": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        9743,
        9798
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "5703": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        9743,
        9798
      ],
      "op": "DIV",
      "path": "28"
    },
    "5704": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        9716,
        9735
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1FB4"
    },
    "5707": {
      "fn": "MiniChefV2.deposit",
      "jump": "i",
      "offset": [
        9716,
        9800
      ],
      "op": "JUMP",
      "path": "28"
    },
    "5708": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        9716,
        9800
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "5709": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        9698,
        9702
      ],
      "op": "DUP2",
      "path": "28"
    },
    "5710": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        9698,
        9713
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x1"
    },
    "5712": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        9698,
        9713
      ],
      "op": "ADD",
      "path": "28"
    },
    "5713": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        9698,
        9800
      ],
      "op": "DUP2",
      "path": "28"
    },
    "5714": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        9698,
        9800
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "5715": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        9698,
        9800
      ],
      "op": "SSTORE",
      "path": "28"
    },
    "5716": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        9698,
        9800
      ],
      "op": "POP",
      "path": "28"
    },
    "5717": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        9835,
        9854
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "5719": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        9857,
        9865
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x5"
    },
    "5721": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        9866,
        9869
      ],
      "op": "DUP7",
      "path": "28"
    },
    "5722": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        9857,
        9870
      ],
      "op": "DUP2",
      "path": "28"
    },
    "5723": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        9857,
        9870
      ],
      "op": "SLOAD",
      "path": "28"
    },
    "5724": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        9857,
        9870
      ],
      "op": "DUP2",
      "path": "28"
    },
    "5725": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        9857,
        9870
      ],
      "op": "LT",
      "path": "28"
    },
    "5726": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        9857,
        9870
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1663"
    },
    "5729": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        9857,
        9870
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "5730": {
      "dev": "Index out of range",
      "fn": "MiniChefV2.deposit",
      "offset": [
        9857,
        9870
      ],
      "op": "INVALID",
      "path": "28"
    },
    "5731": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        9857,
        9870
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "5732": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        9857,
        9870
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "5734": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        9857,
        9870
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "5735": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        9857,
        9870
      ],
      "op": "DUP3",
      "path": "28"
    },
    "5736": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        9857,
        9870
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "5737": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        9857,
        9870
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x20"
    },
    "5739": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        9857,
        9870
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "5740": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        9857,
        9870
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "5741": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        9857,
        9870
      ],
      "op": "KECCAK256",
      "path": "28"
    },
    "5742": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        9857,
        9870
      ],
      "op": "ADD",
      "path": "28"
    },
    "5743": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        9857,
        9870
      ],
      "op": "SLOAD",
      "path": "28"
    },
    "5744": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5746": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5748": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5750": {
      "op": "SHL"
    },
    "5751": {
      "op": "SUB"
    },
    "5752": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        9857,
        9870
      ],
      "op": "AND",
      "path": "28"
    },
    "5753": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        9857,
        9870
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "5754": {
      "op": "POP"
    },
    "5755": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        9884,
        9916
      ],
      "op": "DUP1",
      "path": "28"
    },
    "5756": {
      "branch": 96,
      "fn": "MiniChefV2.deposit",
      "offset": [
        9884,
        9916
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "5757": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        9880,
        9995
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x16E9"
    },
    "5760": {
      "branch": 96,
      "fn": "MiniChefV2.deposit",
      "offset": [
        9880,
        9995
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "5761": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        9972,
        9983
      ],
      "op": "DUP2",
      "path": "28",
      "statement": 48
    },
    "5762": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        9972,
        9983
      ],
      "op": "SLOAD",
      "path": "28"
    },
    "5763": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        9932,
        9984
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "5765": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        9932,
        9984
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "5766": {
      "op": "PUSH4",
      "value": "0x45FB1BA1"
    },
    "5771": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "5773": {
      "op": "SHL"
    },
    "5774": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        9932,
        9984
      ],
      "op": "DUP2",
      "path": "28"
    },
    "5775": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        9932,
        9984
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "5776": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5778": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5780": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5782": {
      "op": "SHL"
    },
    "5783": {
      "op": "SUB"
    },
    "5784": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        9932,
        9955
      ],
      "op": "DUP4",
      "path": "28"
    },
    "5785": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        9932,
        9955
      ],
      "op": "AND",
      "path": "28"
    },
    "5786": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        9932,
        9955
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "5787": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        9932,
        9955
      ],
      "op": "PUSH4",
      "path": "28",
      "value": "0x8BF63742"
    },
    "5792": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        9932,
        9955
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "5793": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        9932,
        9984
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x16B6"
    },
    "5796": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        9932,
        9984
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "5797": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        9956,
        9959
      ],
      "op": "DUP11",
      "path": "28"
    },
    "5798": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        9956,
        9959
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "5799": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        9961,
        9963
      ],
      "op": "DUP10",
      "path": "28"
    },
    "5800": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        9961,
        9963
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "5801": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        9961,
        9963
      ],
      "op": "DUP3",
      "path": "28"
    },
    "5802": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        9961,
        9963
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "5803": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        9969,
        9970
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "5805": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        9969,
        9970
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "5806": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        9972,
        9983
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "5807": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        9932,
        9984
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x4"
    },
    "5809": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        9932,
        9984
      ],
      "op": "ADD",
      "path": "28"
    },
    "5810": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        9932,
        9984
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x29DC"
    },
    "5813": {
      "fn": "MiniChefV2.deposit",
      "jump": "i",
      "offset": [
        9932,
        9984
      ],
      "op": "JUMP",
      "path": "28"
    },
    "5814": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        9932,
        9984
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "5815": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        9932,
        9984
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "5817": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        9932,
        9984
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "5819": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        9932,
        9984
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "5820": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        9932,
        9984
      ],
      "op": "DUP1",
      "path": "28"
    },
    "5821": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        9932,
        9984
      ],
      "op": "DUP4",
      "path": "28"
    },
    "5822": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        9932,
        9984
      ],
      "op": "SUB",
      "path": "28"
    },
    "5823": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        9932,
        9984
      ],
      "op": "DUP2",
      "path": "28"
    },
    "5824": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        9932,
        9984
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "5826": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        9932,
        9984
      ],
      "op": "DUP8",
      "path": "28"
    },
    "5827": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        9932,
        9984
      ],
      "op": "DUP1",
      "path": "28"
    },
    "5828": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        9932,
        9984
      ],
      "op": "EXTCODESIZE",
      "path": "28"
    },
    "5829": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        9932,
        9984
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "5830": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        9932,
        9984
      ],
      "op": "DUP1",
      "path": "28"
    },
    "5831": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        9932,
        9984
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "5832": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        9932,
        9984
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x16D0"
    },
    "5835": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        9932,
        9984
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "5836": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        9932,
        9984
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "5838": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        9932,
        9984
      ],
      "op": "DUP1",
      "path": "28"
    },
    "5839": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        9932,
        9984
      ],
      "op": "REVERT",
      "path": "28"
    },
    "5840": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        9932,
        9984
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "5841": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        9932,
        9984
      ],
      "op": "POP",
      "path": "28"
    },
    "5842": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        9932,
        9984
      ],
      "op": "GAS",
      "path": "28"
    },
    "5843": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        9932,
        9984
      ],
      "op": "CALL",
      "path": "28"
    },
    "5844": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        9932,
        9984
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "5845": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        9932,
        9984
      ],
      "op": "DUP1",
      "path": "28"
    },
    "5846": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        9932,
        9984
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "5847": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        9932,
        9984
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x16E4"
    },
    "5850": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        9932,
        9984
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "5851": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        9932,
        9984
      ],
      "op": "RETURNDATASIZE",
      "path": "28"
    },
    "5852": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        9932,
        9984
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "5854": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        9932,
        9984
      ],
      "op": "DUP1",
      "path": "28"
    },
    "5855": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        9932,
        9984
      ],
      "op": "RETURNDATACOPY",
      "path": "28"
    },
    "5856": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        9932,
        9984
      ],
      "op": "RETURNDATASIZE",
      "path": "28"
    },
    "5857": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        9932,
        9984
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "5859": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        9932,
        9984
      ],
      "op": "REVERT",
      "path": "28"
    },
    "5860": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        9932,
        9984
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "5861": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        9932,
        9984
      ],
      "op": "POP",
      "path": "28"
    },
    "5862": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        9932,
        9984
      ],
      "op": "POP",
      "path": "28"
    },
    "5863": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        9932,
        9984
      ],
      "op": "POP",
      "path": "28"
    },
    "5864": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        9932,
        9984
      ],
      "op": "POP",
      "path": "28"
    },
    "5865": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        9880,
        9995
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "5866": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        10005,
        10069
      ],
      "op": "PUSH2",
      "path": "28",
      "statement": 49,
      "value": "0x1719"
    },
    "5869": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        10035,
        10045
      ],
      "op": "CALLER",
      "path": "28"
    },
    "5870": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        10055,
        10059
      ],
      "op": "ADDRESS",
      "path": "28"
    },
    "5871": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        10062,
        10068
      ],
      "op": "DUP8",
      "path": "28"
    },
    "5872": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        10005,
        10012
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x4"
    },
    "5874": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        10013,
        10016
      ],
      "op": "DUP11",
      "path": "28"
    },
    "5875": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        10005,
        10017
      ],
      "op": "DUP2",
      "path": "28"
    },
    "5876": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        10005,
        10017
      ],
      "op": "SLOAD",
      "path": "28"
    },
    "5877": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        10005,
        10017
      ],
      "op": "DUP2",
      "path": "28"
    },
    "5878": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        10005,
        10017
      ],
      "op": "LT",
      "path": "28"
    },
    "5879": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        10005,
        10017
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x16FC"
    },
    "5882": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        10005,
        10017
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "5883": {
      "dev": "Index out of range",
      "fn": "MiniChefV2.deposit",
      "offset": [
        10005,
        10017
      ],
      "op": "INVALID",
      "path": "28"
    },
    "5884": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        10005,
        10017
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "5885": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        10005,
        10017
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "5887": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        10005,
        10017
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "5888": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        10005,
        10017
      ],
      "op": "DUP3",
      "path": "28"
    },
    "5889": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        10005,
        10017
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "5890": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        10005,
        10017
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x20"
    },
    "5892": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        10005,
        10017
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "5893": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        10005,
        10017
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "5894": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        10005,
        10017
      ],
      "op": "KECCAK256",
      "path": "28"
    },
    "5895": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        10005,
        10017
      ],
      "op": "ADD",
      "path": "28"
    },
    "5896": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        10005,
        10017
      ],
      "op": "SLOAD",
      "path": "28"
    },
    "5897": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5899": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5901": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5903": {
      "op": "SHL"
    },
    "5904": {
      "op": "SUB"
    },
    "5905": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        10005,
        10017
      ],
      "op": "AND",
      "path": "28"
    },
    "5906": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        10005,
        10017
      ],
      "op": "SWAP3",
      "path": "28"
    },
    "5907": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        10005,
        10069
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "5908": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        10005,
        10069
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "5909": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        10005,
        10034
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1FFA"
    },
    "5912": {
      "fn": "MiniChefV2.deposit",
      "jump": "i",
      "offset": [
        10005,
        10069
      ],
      "op": "JUMP",
      "path": "28"
    },
    "5913": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        10005,
        10069
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "5914": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        10118,
        10120
      ],
      "op": "DUP4",
      "path": "28",
      "statement": 50
    },
    "5915": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5917": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5919": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5921": {
      "op": "SHL"
    },
    "5922": {
      "op": "SUB"
    },
    "5923": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        10085,
        10121
      ],
      "op": "AND",
      "path": "28"
    },
    "5924": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        10105,
        10108
      ],
      "op": "DUP7",
      "path": "28"
    },
    "5925": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        10093,
        10103
      ],
      "op": "CALLER",
      "path": "28"
    },
    "5926": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5928": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5930": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5932": {
      "op": "SHL"
    },
    "5933": {
      "op": "SUB"
    },
    "5934": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        10085,
        10121
      ],
      "op": "AND",
      "path": "28"
    },
    "5935": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        10085,
        10121
      ],
      "op": "PUSH32",
      "path": "28",
      "value": "0x2D7E648DD130FC184D383E55BB126AC4C9C60E8F94BF05ACDF557BA2D540B47"
    },
    "5968": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        10110,
        10116
      ],
      "op": "DUP9",
      "path": "28"
    },
    "5969": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        10085,
        10121
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "5971": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        10085,
        10121
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "5972": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        10085,
        10121
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x7D3"
    },
    "5975": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        10085,
        10121
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "5976": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        10085,
        10121
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "5977": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        10085,
        10121
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x29D3"
    },
    "5980": {
      "fn": "MiniChefV2.deposit",
      "jump": "i",
      "offset": [
        10085,
        10121
      ],
      "op": "JUMP",
      "path": "28"
    },
    "5981": {
      "offset": [
        2337,
        2403
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "5982": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        2337,
        2403
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x6"
    },
    "5984": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        2337,
        2403
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x20"
    },
    "5986": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        2337,
        2403
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "5987": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        2337,
        2403
      ],
      "op": "DUP2",
      "path": "28"
    },
    "5988": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        2337,
        2403
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "5989": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        2337,
        2403
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "5991": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        2337,
        2403
      ],
      "op": "SWAP3",
      "path": "28"
    },
    "5992": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        2337,
        2403
      ],
      "op": "DUP4",
      "path": "28"
    },
    "5993": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        2337,
        2403
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "5994": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        2337,
        2403
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "5996": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        2337,
        2403
      ],
      "op": "DUP1",
      "path": "28"
    },
    "5997": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        2337,
        2403
      ],
      "op": "DUP5",
      "path": "28"
    },
    "5998": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        2337,
        2403
      ],
      "op": "KECCAK256",
      "path": "28"
    },
    "5999": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        2337,
        2403
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "6000": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        2337,
        2403
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "6001": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        2337,
        2403
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "6002": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        2337,
        2403
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "6003": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        2337,
        2403
      ],
      "op": "DUP3",
      "path": "28"
    },
    "6004": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        2337,
        2403
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "6005": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        2337,
        2403
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "6006": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        2337,
        2403
      ],
      "op": "KECCAK256",
      "path": "28"
    },
    "6007": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        2337,
        2403
      ],
      "op": "DUP1",
      "path": "28"
    },
    "6008": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        2337,
        2403
      ],
      "op": "SLOAD",
      "path": "28"
    },
    "6009": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        2337,
        2403
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x1"
    },
    "6011": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        2337,
        2403
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "6012": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        2337,
        2403
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "6013": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        2337,
        2403
      ],
      "op": "ADD",
      "path": "28"
    },
    "6014": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        2337,
        2403
      ],
      "op": "SLOAD",
      "path": "28"
    },
    "6015": {
      "fn": "MiniChefV2.deposit",
      "offset": [
        2337,
        2403
      ],
      "op": "DUP3",
      "path": "28"
    },
    "6016": {
      "fn": "MiniChefV2.deposit",
      "jump": "o",
      "offset": [
        2337,
        2403
      ],
      "op": "JUMP",
      "path": "28"
    },
    "6017": {
      "fn": "MiniChefV2.setSushiPerSecond",
      "offset": [
        5676,
        5843
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "6018": {
      "offset": [
        2146,
        2151
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "6020": {
      "fn": "MiniChefV2.setSushiPerSecond",
      "offset": [
        2146,
        2151
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "6021": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6023": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6025": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6027": {
      "op": "SHL"
    },
    "6028": {
      "op": "SUB"
    },
    "6029": {
      "offset": [
        2146,
        2151
      ],
      "op": "AND",
      "path": "11"
    },
    "6030": {
      "offset": [
        2132,
        2142
      ],
      "op": "CALLER",
      "path": "11"
    },
    "6031": {
      "offset": [
        2132,
        2151
      ],
      "op": "EQ",
      "path": "11"
    },
    "6032": {
      "offset": [
        2124,
        2188
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x17AB"
    },
    "6035": {
      "offset": [
        2124,
        2188
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "6036": {
      "fn": "MiniChefV2.setSushiPerSecond",
      "offset": [
        2124,
        2188
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "6038": {
      "fn": "MiniChefV2.setSushiPerSecond",
      "offset": [
        2124,
        2188
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "6039": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6043": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6045": {
      "op": "SHL"
    },
    "6046": {
      "offset": [
        2124,
        2188
      ],
      "op": "DUP2",
      "path": "11"
    },
    "6047": {
      "fn": "MiniChefV2.setSushiPerSecond",
      "offset": [
        2124,
        2188
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "6048": {
      "fn": "MiniChefV2.setSushiPerSecond",
      "offset": [
        2124,
        2188
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "6050": {
      "fn": "MiniChefV2.setSushiPerSecond",
      "offset": [
        2124,
        2188
      ],
      "op": "ADD",
      "path": "11"
    },
    "6051": {
      "fn": "MiniChefV2.setSushiPerSecond",
      "offset": [
        2124,
        2188
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x588"
    },
    "6054": {
      "fn": "MiniChefV2.setSushiPerSecond",
      "offset": [
        2124,
        2188
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "6055": {
      "fn": "MiniChefV2.setSushiPerSecond",
      "offset": [
        2124,
        2188
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x27BB"
    },
    "6058": {
      "fn": "MiniChefV2.setSushiPerSecond",
      "jump": "i",
      "offset": [
        2124,
        2188
      ],
      "op": "JUMP",
      "path": "11"
    },
    "6059": {
      "fn": "MiniChefV2.setSushiPerSecond",
      "offset": [
        2124,
        2188
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "6060": {
      "fn": "MiniChefV2.setSushiPerSecond",
      "offset": [
        5755,
        5769
      ],
      "op": "PUSH1",
      "path": "28",
      "statement": 51,
      "value": "0x9"
    },
    "6062": {
      "fn": "MiniChefV2.setSushiPerSecond",
      "offset": [
        5755,
        5787
      ],
      "op": "DUP2",
      "path": "28"
    },
    "6063": {
      "fn": "MiniChefV2.setSushiPerSecond",
      "offset": [
        5755,
        5787
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "6064": {
      "fn": "MiniChefV2.setSushiPerSecond",
      "offset": [
        5755,
        5787
      ],
      "op": "SSTORE",
      "path": "28"
    },
    "6065": {
      "fn": "MiniChefV2.setSushiPerSecond",
      "offset": [
        5802,
        5836
      ],
      "op": "PUSH1",
      "path": "28",
      "statement": 52,
      "value": "0x40"
    },
    "6067": {
      "fn": "MiniChefV2.setSushiPerSecond",
      "offset": [
        5802,
        5836
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "6068": {
      "fn": "MiniChefV2.setSushiPerSecond",
      "offset": [
        5802,
        5836
      ],
      "op": "PUSH32",
      "path": "28",
      "value": "0xC6CE5EFF3291FB2C1517B943DAA5067EA76C83816BBF674307FBC7FEA3B311D0"
    },
    "6101": {
      "fn": "MiniChefV2.setSushiPerSecond",
      "offset": [
        5802,
        5836
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "6102": {
      "fn": "MiniChefV2.setSushiPerSecond",
      "offset": [
        5802,
        5836
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x17E0"
    },
    "6105": {
      "fn": "MiniChefV2.setSushiPerSecond",
      "offset": [
        5802,
        5836
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "6106": {
      "fn": "MiniChefV2.setSushiPerSecond",
      "offset": [
        5772,
        5787
      ],
      "op": "DUP4",
      "path": "28"
    },
    "6107": {
      "fn": "MiniChefV2.setSushiPerSecond",
      "offset": [
        5772,
        5787
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "6108": {
      "fn": "MiniChefV2.setSushiPerSecond",
      "offset": [
        5802,
        5836
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x29D3"
    },
    "6111": {
      "fn": "MiniChefV2.setSushiPerSecond",
      "jump": "i",
      "offset": [
        5802,
        5836
      ],
      "op": "JUMP",
      "path": "28"
    },
    "6112": {
      "fn": "MiniChefV2.setSushiPerSecond",
      "offset": [
        5802,
        5836
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "6113": {
      "fn": "MiniChefV2.setSushiPerSecond",
      "offset": [
        5802,
        5836
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "6115": {
      "fn": "MiniChefV2.setSushiPerSecond",
      "offset": [
        5802,
        5836
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "6116": {
      "fn": "MiniChefV2.setSushiPerSecond",
      "offset": [
        5802,
        5836
      ],
      "op": "DUP1",
      "path": "28"
    },
    "6117": {
      "fn": "MiniChefV2.setSushiPerSecond",
      "offset": [
        5802,
        5836
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "6118": {
      "fn": "MiniChefV2.setSushiPerSecond",
      "offset": [
        5802,
        5836
      ],
      "op": "SUB",
      "path": "28"
    },
    "6119": {
      "fn": "MiniChefV2.setSushiPerSecond",
      "offset": [
        5802,
        5836
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "6120": {
      "fn": "MiniChefV2.setSushiPerSecond",
      "offset": [
        5802,
        5836
      ],
      "op": "LOG1",
      "path": "28"
    },
    "6121": {
      "fn": "MiniChefV2.setSushiPerSecond",
      "offset": [
        5676,
        5843
      ],
      "op": "POP",
      "path": "28"
    },
    "6122": {
      "fn": "MiniChefV2.setSushiPerSecond",
      "jump": "o",
      "offset": [
        5676,
        5843
      ],
      "op": "JUMP",
      "path": "28"
    },
    "6123": {
      "offset": [
        2617,
        2646
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "6124": {
      "fn": "MiniChefV2.setSushiPerSecond",
      "offset": [
        2617,
        2646
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x9"
    },
    "6126": {
      "fn": "MiniChefV2.setSushiPerSecond",
      "offset": [
        2617,
        2646
      ],
      "op": "SLOAD",
      "path": "28"
    },
    "6127": {
      "fn": "MiniChefV2.setSushiPerSecond",
      "offset": [
        2617,
        2646
      ],
      "op": "DUP2",
      "path": "28"
    },
    "6128": {
      "fn": "MiniChefV2.setSushiPerSecond",
      "jump": "o",
      "offset": [
        2617,
        2646
      ],
      "op": "JUMP",
      "path": "28"
    },
    "6129": {
      "offset": [
        1847,
        1876
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "6130": {
      "fn": "MiniChefV2.setSushiPerSecond",
      "offset": [
        1847,
        1876
      ],
      "op": "PUSH32",
      "path": "28",
      "value": "0x0"
    },
    "6163": {
      "fn": "MiniChefV2.setSushiPerSecond",
      "offset": [
        1847,
        1876
      ],
      "op": "DUP2",
      "path": "28"
    },
    "6164": {
      "fn": "MiniChefV2.setSushiPerSecond",
      "jump": "o",
      "offset": [
        1847,
        1876
      ],
      "op": "JUMP",
      "path": "28"
    },
    "6165": {
      "fn": "MiniChefV2.add",
      "offset": [
        4094,
        4702
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "6166": {
      "offset": [
        2146,
        2151
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "6168": {
      "fn": "MiniChefV2.add",
      "offset": [
        2146,
        2151
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "6169": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6171": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6173": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6175": {
      "op": "SHL"
    },
    "6176": {
      "op": "SUB"
    },
    "6177": {
      "offset": [
        2146,
        2151
      ],
      "op": "AND",
      "path": "11"
    },
    "6178": {
      "offset": [
        2132,
        2142
      ],
      "op": "CALLER",
      "path": "11"
    },
    "6179": {
      "offset": [
        2132,
        2151
      ],
      "op": "EQ",
      "path": "11"
    },
    "6180": {
      "offset": [
        2124,
        2188
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x183F"
    },
    "6183": {
      "offset": [
        2124,
        2188
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "6184": {
      "fn": "MiniChefV2.add",
      "offset": [
        2124,
        2188
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "6186": {
      "fn": "MiniChefV2.add",
      "offset": [
        2124,
        2188
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "6187": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6191": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6193": {
      "op": "SHL"
    },
    "6194": {
      "offset": [
        2124,
        2188
      ],
      "op": "DUP2",
      "path": "11"
    },
    "6195": {
      "fn": "MiniChefV2.add",
      "offset": [
        2124,
        2188
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "6196": {
      "fn": "MiniChefV2.add",
      "offset": [
        2124,
        2188
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "6198": {
      "fn": "MiniChefV2.add",
      "offset": [
        2124,
        2188
      ],
      "op": "ADD",
      "path": "11"
    },
    "6199": {
      "fn": "MiniChefV2.add",
      "offset": [
        2124,
        2188
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x588"
    },
    "6202": {
      "fn": "MiniChefV2.add",
      "offset": [
        2124,
        2188
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "6203": {
      "fn": "MiniChefV2.add",
      "offset": [
        2124,
        2188
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x27BB"
    },
    "6206": {
      "fn": "MiniChefV2.add",
      "jump": "i",
      "offset": [
        2124,
        2188
      ],
      "op": "JUMP",
      "path": "11"
    },
    "6207": {
      "fn": "MiniChefV2.add",
      "offset": [
        2124,
        2188
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "6208": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6210": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6212": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6214": {
      "op": "SHL"
    },
    "6215": {
      "op": "SUB"
    },
    "6216": {
      "fn": "MiniChefV2.add",
      "offset": [
        4200,
        4230
      ],
      "op": "DUP3",
      "path": "28",
      "statement": 53
    },
    "6217": {
      "fn": "MiniChefV2.add",
      "offset": [
        4200,
        4230
      ],
      "op": "AND",
      "path": "28"
    },
    "6218": {
      "fn": "MiniChefV2.add",
      "offset": [
        4200,
        4230
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "6220": {
      "fn": "MiniChefV2.add",
      "offset": [
        4200,
        4230
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "6221": {
      "fn": "MiniChefV2.add",
      "offset": [
        4200,
        4230
      ],
      "op": "DUP2",
      "path": "28"
    },
    "6222": {
      "fn": "MiniChefV2.add",
      "offset": [
        4200,
        4230
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "6223": {
      "fn": "MiniChefV2.add",
      "offset": [
        4200,
        4211
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x7"
    },
    "6225": {
      "fn": "MiniChefV2.add",
      "offset": [
        4200,
        4230
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x20"
    },
    "6227": {
      "fn": "MiniChefV2.add",
      "offset": [
        4200,
        4230
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "6228": {
      "fn": "MiniChefV2.add",
      "offset": [
        4200,
        4230
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "6230": {
      "fn": "MiniChefV2.add",
      "offset": [
        4200,
        4230
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "6231": {
      "fn": "MiniChefV2.add",
      "offset": [
        4200,
        4230
      ],
      "op": "KECCAK256",
      "path": "28"
    },
    "6232": {
      "fn": "MiniChefV2.add",
      "offset": [
        4200,
        4230
      ],
      "op": "SLOAD",
      "path": "28"
    },
    "6233": {
      "fn": "MiniChefV2.add",
      "offset": [
        4200,
        4230
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0xFF"
    },
    "6235": {
      "fn": "MiniChefV2.add",
      "offset": [
        4200,
        4230
      ],
      "op": "AND",
      "path": "28"
    },
    "6236": {
      "branch": 97,
      "fn": "MiniChefV2.add",
      "offset": [
        4200,
        4239
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "6237": {
      "fn": "MiniChefV2.add",
      "offset": [
        4192,
        4263
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1878"
    },
    "6240": {
      "branch": 97,
      "fn": "MiniChefV2.add",
      "offset": [
        4192,
        4263
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "6241": {
      "fn": "MiniChefV2.add",
      "offset": [
        4192,
        4263
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "6243": {
      "fn": "MiniChefV2.add",
      "offset": [
        4192,
        4263
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "6244": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6248": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6250": {
      "op": "SHL"
    },
    "6251": {
      "fn": "MiniChefV2.add",
      "offset": [
        4192,
        4263
      ],
      "op": "DUP2",
      "path": "28"
    },
    "6252": {
      "fn": "MiniChefV2.add",
      "offset": [
        4192,
        4263
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "6253": {
      "fn": "MiniChefV2.add",
      "offset": [
        4192,
        4263
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x4"
    },
    "6255": {
      "fn": "MiniChefV2.add",
      "offset": [
        4192,
        4263
      ],
      "op": "ADD",
      "path": "28"
    },
    "6256": {
      "fn": "MiniChefV2.add",
      "offset": [
        4192,
        4263
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x588"
    },
    "6259": {
      "fn": "MiniChefV2.add",
      "offset": [
        4192,
        4263
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "6260": {
      "fn": "MiniChefV2.add",
      "offset": [
        4192,
        4263
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x2825"
    },
    "6263": {
      "fn": "MiniChefV2.add",
      "jump": "i",
      "offset": [
        4192,
        4263
      ],
      "op": "JUMP",
      "path": "28"
    },
    "6264": {
      "fn": "MiniChefV2.add",
      "offset": [
        4192,
        4263
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "6265": {
      "fn": "MiniChefV2.add",
      "offset": [
        4291,
        4306
      ],
      "op": "PUSH1",
      "path": "28",
      "statement": 54,
      "value": "0x8"
    },
    "6267": {
      "fn": "MiniChefV2.add",
      "offset": [
        4291,
        4306
      ],
      "op": "SLOAD",
      "path": "28"
    },
    "6268": {
      "fn": "MiniChefV2.add",
      "offset": [
        4291,
        4322
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1885"
    },
    "6271": {
      "fn": "MiniChefV2.add",
      "offset": [
        4291,
        4322
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "6272": {
      "fn": "MiniChefV2.add",
      "offset": [
        4311,
        4321
      ],
      "op": "DUP5",
      "path": "28"
    },
    "6273": {
      "fn": "MiniChefV2.add",
      "offset": [
        4291,
        4310
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1F10"
    },
    "6276": {
      "fn": "MiniChefV2.add",
      "jump": "i",
      "offset": [
        4291,
        4322
      ],
      "op": "JUMP",
      "path": "28"
    },
    "6277": {
      "fn": "MiniChefV2.add",
      "offset": [
        4291,
        4322
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "6278": {
      "fn": "MiniChefV2.add",
      "offset": [
        4273,
        4288
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x8"
    },
    "6280": {
      "fn": "MiniChefV2.add",
      "offset": [
        4273,
        4322
      ],
      "op": "SSTORE",
      "path": "28"
    },
    "6281": {
      "fn": "MiniChefV2.add",
      "offset": [
        4332,
        4339
      ],
      "op": "PUSH1",
      "path": "28",
      "statement": 55,
      "value": "0x4"
    },
    "6283": {
      "fn": "MiniChefV2.add",
      "offset": [
        4332,
        4354
      ],
      "op": "DUP1",
      "path": "28"
    },
    "6284": {
      "fn": "MiniChefV2.add",
      "offset": [
        4332,
        4354
      ],
      "op": "SLOAD",
      "path": "28"
    },
    "6285": {
      "fn": "MiniChefV2.add",
      "offset": [
        4332,
        4354
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x1"
    },
    "6287": {
      "fn": "MiniChefV2.add",
      "offset": [
        4332,
        4354
      ],
      "op": "DUP2",
      "path": "28"
    },
    "6288": {
      "fn": "MiniChefV2.add",
      "offset": [
        4332,
        4354
      ],
      "op": "DUP2",
      "path": "28"
    },
    "6289": {
      "fn": "MiniChefV2.add",
      "offset": [
        4332,
        4354
      ],
      "op": "ADD",
      "path": "28"
    },
    "6290": {
      "fn": "MiniChefV2.add",
      "offset": [
        4332,
        4354
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "6291": {
      "fn": "MiniChefV2.add",
      "offset": [
        4332,
        4354
      ],
      "op": "SWAP3",
      "path": "28"
    },
    "6292": {
      "fn": "MiniChefV2.add",
      "offset": [
        4332,
        4354
      ],
      "op": "SSTORE",
      "path": "28"
    },
    "6293": {
      "fn": "MiniChefV2.add",
      "offset": [
        4332,
        4354
      ],
      "op": "PUSH32",
      "path": "28",
      "value": "0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B"
    },
    "6326": {
      "fn": "MiniChefV2.add",
      "offset": [
        4332,
        4354
      ],
      "op": "ADD",
      "path": "28"
    },
    "6327": {
      "fn": "MiniChefV2.add",
      "offset": [
        4332,
        4354
      ],
      "op": "DUP1",
      "path": "28"
    },
    "6328": {
      "fn": "MiniChefV2.add",
      "offset": [
        4332,
        4354
      ],
      "op": "SLOAD",
      "path": "28"
    },
    "6329": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6331": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6333": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6335": {
      "op": "SHL"
    },
    "6336": {
      "op": "SUB"
    },
    "6337": {
      "fn": "MiniChefV2.add",
      "offset": [
        4332,
        4354
      ],
      "op": "DUP1",
      "path": "28"
    },
    "6338": {
      "fn": "MiniChefV2.add",
      "offset": [
        4332,
        4354
      ],
      "op": "DUP7",
      "path": "28"
    },
    "6339": {
      "fn": "MiniChefV2.add",
      "offset": [
        4332,
        4354
      ],
      "op": "AND",
      "path": "28"
    },
    "6340": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6342": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6344": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6346": {
      "op": "SHL"
    },
    "6347": {
      "op": "SUB"
    },
    "6348": {
      "op": "NOT"
    },
    "6349": {
      "fn": "MiniChefV2.add",
      "offset": [
        4332,
        4354
      ],
      "op": "SWAP3",
      "path": "28"
    },
    "6350": {
      "fn": "MiniChefV2.add",
      "offset": [
        4332,
        4354
      ],
      "op": "DUP4",
      "path": "28"
    },
    "6351": {
      "fn": "MiniChefV2.add",
      "offset": [
        4332,
        4354
      ],
      "op": "AND",
      "path": "28"
    },
    "6352": {
      "fn": "MiniChefV2.add",
      "offset": [
        4332,
        4354
      ],
      "op": "OR",
      "path": "28"
    },
    "6353": {
      "fn": "MiniChefV2.add",
      "offset": [
        4332,
        4354
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "6354": {
      "fn": "MiniChefV2.add",
      "offset": [
        4332,
        4354
      ],
      "op": "SWAP3",
      "path": "28"
    },
    "6355": {
      "fn": "MiniChefV2.add",
      "offset": [
        4332,
        4354
      ],
      "op": "SSTORE",
      "path": "28"
    },
    "6356": {
      "fn": "MiniChefV2.add",
      "offset": [
        4364,
        4372
      ],
      "op": "PUSH1",
      "path": "28",
      "statement": 56,
      "value": "0x5"
    },
    "6358": {
      "fn": "MiniChefV2.add",
      "offset": [
        4364,
        4388
      ],
      "op": "DUP1",
      "path": "28"
    },
    "6359": {
      "fn": "MiniChefV2.add",
      "offset": [
        4364,
        4388
      ],
      "op": "SLOAD",
      "path": "28"
    },
    "6360": {
      "fn": "MiniChefV2.add",
      "offset": [
        4364,
        4388
      ],
      "op": "SWAP4",
      "path": "28"
    },
    "6361": {
      "fn": "MiniChefV2.add",
      "offset": [
        4364,
        4388
      ],
      "op": "DUP5",
      "path": "28"
    },
    "6362": {
      "fn": "MiniChefV2.add",
      "offset": [
        4364,
        4388
      ],
      "op": "ADD",
      "path": "28"
    },
    "6363": {
      "fn": "MiniChefV2.add",
      "offset": [
        4364,
        4388
      ],
      "op": "DUP2",
      "path": "28"
    },
    "6364": {
      "fn": "MiniChefV2.add",
      "offset": [
        4364,
        4388
      ],
      "op": "SSTORE",
      "path": "28"
    },
    "6365": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6367": {
      "fn": "MiniChefV2.add",
      "offset": [
        4364,
        4388
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "6368": {
      "fn": "MiniChefV2.add",
      "offset": [
        4364,
        4388
      ],
      "op": "DUP2",
      "path": "28"
    },
    "6369": {
      "fn": "MiniChefV2.add",
      "offset": [
        4364,
        4388
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "6370": {
      "fn": "MiniChefV2.add",
      "offset": [
        4364,
        4388
      ],
      "op": "PUSH32",
      "path": "28",
      "value": "0x36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB0"
    },
    "6403": {
      "fn": "MiniChefV2.add",
      "offset": [
        4364,
        4388
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "6404": {
      "fn": "MiniChefV2.add",
      "offset": [
        4364,
        4388
      ],
      "op": "SWAP4",
      "path": "28"
    },
    "6405": {
      "fn": "MiniChefV2.add",
      "offset": [
        4364,
        4388
      ],
      "op": "ADD",
      "path": "28"
    },
    "6406": {
      "fn": "MiniChefV2.add",
      "offset": [
        4364,
        4388
      ],
      "op": "DUP1",
      "path": "28"
    },
    "6407": {
      "fn": "MiniChefV2.add",
      "offset": [
        4364,
        4388
      ],
      "op": "SLOAD",
      "path": "28"
    },
    "6408": {
      "fn": "MiniChefV2.add",
      "offset": [
        4364,
        4388
      ],
      "op": "SWAP3",
      "path": "28"
    },
    "6409": {
      "fn": "MiniChefV2.add",
      "offset": [
        4364,
        4388
      ],
      "op": "DUP6",
      "path": "28"
    },
    "6410": {
      "fn": "MiniChefV2.add",
      "offset": [
        4364,
        4388
      ],
      "op": "AND",
      "path": "28"
    },
    "6411": {
      "fn": "MiniChefV2.add",
      "offset": [
        4364,
        4388
      ],
      "op": "SWAP3",
      "path": "28"
    },
    "6412": {
      "fn": "MiniChefV2.add",
      "offset": [
        4364,
        4388
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "6413": {
      "fn": "MiniChefV2.add",
      "offset": [
        4364,
        4388
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "6414": {
      "fn": "MiniChefV2.add",
      "offset": [
        4364,
        4388
      ],
      "op": "AND",
      "path": "28"
    },
    "6415": {
      "fn": "MiniChefV2.add",
      "offset": [
        4364,
        4388
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "6416": {
      "fn": "MiniChefV2.add",
      "offset": [
        4364,
        4388
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "6417": {
      "fn": "MiniChefV2.add",
      "offset": [
        4364,
        4388
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "6418": {
      "fn": "MiniChefV2.add",
      "offset": [
        4364,
        4388
      ],
      "op": "OR",
      "path": "28"
    },
    "6419": {
      "fn": "MiniChefV2.add",
      "offset": [
        4364,
        4388
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "6420": {
      "fn": "MiniChefV2.add",
      "offset": [
        4364,
        4388
      ],
      "op": "SSTORE",
      "path": "28"
    },
    "6421": {
      "fn": "MiniChefV2.add",
      "offset": [
        4413,
        4561
      ],
      "op": "PUSH1",
      "path": "28",
      "statement": 57,
      "value": "0x40"
    },
    "6423": {
      "fn": "MiniChefV2.add",
      "offset": [
        4413,
        4561
      ],
      "op": "DUP1",
      "path": "28"
    },
    "6424": {
      "fn": "MiniChefV2.add",
      "offset": [
        4413,
        4561
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "6425": {
      "fn": "MiniChefV2.add",
      "offset": [
        4413,
        4561
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x60"
    },
    "6427": {
      "fn": "MiniChefV2.add",
      "offset": [
        4413,
        4561
      ],
      "op": "DUP2",
      "path": "28"
    },
    "6428": {
      "fn": "MiniChefV2.add",
      "offset": [
        4413,
        4561
      ],
      "op": "ADD",
      "path": "28"
    },
    "6429": {
      "fn": "MiniChefV2.add",
      "offset": [
        4413,
        4561
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "6430": {
      "fn": "MiniChefV2.add",
      "offset": [
        4413,
        4561
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "6431": {
      "fn": "MiniChefV2.add",
      "offset": [
        4413,
        4561
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "6432": {
      "fn": "MiniChefV2.add",
      "offset": [
        4413,
        4561
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "6433": {
      "fn": "MiniChefV2.add",
      "offset": [
        4413,
        4561
      ],
      "op": "DUP2",
      "path": "28"
    },
    "6434": {
      "fn": "MiniChefV2.add",
      "offset": [
        4413,
        4561
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "6435": {
      "fn": "MiniChefV2.add",
      "offset": [
        4399,
        4407
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x3"
    },
    "6437": {
      "fn": "MiniChefV2.add",
      "offset": [
        4399,
        4407
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "6438": {
      "fn": "MiniChefV2.add",
      "offset": [
        4332,
        4354
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x20"
    },
    "6440": {
      "fn": "MiniChefV2.add",
      "offset": [
        4413,
        4561
      ],
      "op": "DUP2",
      "path": "28"
    },
    "6441": {
      "fn": "MiniChefV2.add",
      "offset": [
        4413,
        4561
      ],
      "op": "ADD",
      "path": "28"
    },
    "6442": {
      "fn": "MiniChefV2.add",
      "offset": [
        4495,
        4517
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1932"
    },
    "6445": {
      "fn": "MiniChefV2.add",
      "offset": [
        4495,
        4510
      ],
      "op": "TIMESTAMP",
      "path": "28"
    },
    "6446": {
      "fn": "MiniChefV2.add",
      "offset": [
        4495,
        4515
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1F8B"
    },
    "6449": {
      "fn": "MiniChefV2.add",
      "jump": "i",
      "offset": [
        4495,
        4517
      ],
      "op": "JUMP",
      "path": "28"
    },
    "6450": {
      "fn": "MiniChefV2.add",
      "offset": [
        4495,
        4517
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "6451": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6453": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6455": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6457": {
      "op": "SHL"
    },
    "6458": {
      "op": "SUB"
    },
    "6459": {
      "fn": "MiniChefV2.add",
      "offset": [
        4413,
        4561
      ],
      "op": "AND",
      "path": "28"
    },
    "6460": {
      "fn": "MiniChefV2.add",
      "offset": [
        4413,
        4561
      ],
      "op": "DUP2",
      "path": "28"
    },
    "6461": {
      "fn": "MiniChefV2.add",
      "offset": [
        4413,
        4561
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "6462": {
      "fn": "MiniChefV2.add",
      "offset": [
        4413,
        4561
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x20"
    },
    "6464": {
      "fn": "MiniChefV2.add",
      "offset": [
        4413,
        4561
      ],
      "op": "ADD",
      "path": "28"
    },
    "6465": {
      "fn": "MiniChefV2.add",
      "offset": [
        4448,
        4465
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1949"
    },
    "6468": {
      "fn": "MiniChefV2.add",
      "offset": [
        4448,
        4458
      ],
      "op": "DUP7",
      "path": "28"
    },
    "6469": {
      "fn": "MiniChefV2.add",
      "offset": [
        4448,
        4463
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1F8B"
    },
    "6472": {
      "fn": "MiniChefV2.add",
      "jump": "i",
      "offset": [
        4448,
        4465
      ],
      "op": "JUMP",
      "path": "28"
    },
    "6473": {
      "fn": "MiniChefV2.add",
      "offset": [
        4448,
        4465
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "6474": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6476": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6478": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6480": {
      "op": "SHL"
    },
    "6481": {
      "op": "SUB"
    },
    "6482": {
      "fn": "MiniChefV2.add",
      "offset": [
        4413,
        4561
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "6483": {
      "fn": "MiniChefV2.add",
      "offset": [
        4413,
        4561
      ],
      "op": "DUP2",
      "path": "28"
    },
    "6484": {
      "fn": "MiniChefV2.add",
      "offset": [
        4413,
        4561
      ],
      "op": "AND",
      "path": "28"
    },
    "6485": {
      "fn": "MiniChefV2.add",
      "offset": [
        4413,
        4561
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "6486": {
      "fn": "MiniChefV2.add",
      "offset": [
        4413,
        4561
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "6487": {
      "fn": "MiniChefV2.add",
      "offset": [
        4413,
        4561
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "6488": {
      "fn": "MiniChefV2.add",
      "offset": [
        4399,
        4562
      ],
      "op": "DUP3",
      "path": "28"
    },
    "6489": {
      "fn": "MiniChefV2.add",
      "offset": [
        4399,
        4562
      ],
      "op": "SLOAD",
      "path": "28"
    },
    "6490": {
      "fn": "MiniChefV2.add",
      "offset": [
        4399,
        4562
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x1"
    },
    "6492": {
      "fn": "MiniChefV2.add",
      "offset": [
        4399,
        4562
      ],
      "op": "DUP2",
      "path": "28"
    },
    "6493": {
      "fn": "MiniChefV2.add",
      "offset": [
        4399,
        4562
      ],
      "op": "DUP2",
      "path": "28"
    },
    "6494": {
      "fn": "MiniChefV2.add",
      "offset": [
        4399,
        4562
      ],
      "op": "ADD",
      "path": "28"
    },
    "6495": {
      "fn": "MiniChefV2.add",
      "offset": [
        4399,
        4562
      ],
      "op": "DUP6",
      "path": "28"
    },
    "6496": {
      "fn": "MiniChefV2.add",
      "offset": [
        4399,
        4562
      ],
      "op": "SSTORE",
      "path": "28"
    },
    "6497": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6499": {
      "fn": "MiniChefV2.add",
      "offset": [
        4399,
        4562
      ],
      "op": "SWAP5",
      "path": "28"
    },
    "6500": {
      "fn": "MiniChefV2.add",
      "offset": [
        4399,
        4562
      ],
      "op": "DUP6",
      "path": "28"
    },
    "6501": {
      "fn": "MiniChefV2.add",
      "offset": [
        4399,
        4562
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "6502": {
      "fn": "MiniChefV2.add",
      "offset": [
        4399,
        4562
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x20"
    },
    "6504": {
      "fn": "MiniChefV2.add",
      "offset": [
        4399,
        4562
      ],
      "op": "DUP1",
      "path": "28"
    },
    "6505": {
      "fn": "MiniChefV2.add",
      "offset": [
        4399,
        4562
      ],
      "op": "DUP7",
      "path": "28"
    },
    "6506": {
      "fn": "MiniChefV2.add",
      "offset": [
        4399,
        4562
      ],
      "op": "KECCAK256",
      "path": "28"
    },
    "6507": {
      "fn": "MiniChefV2.add",
      "offset": [
        4399,
        4562
      ],
      "op": "DUP6",
      "path": "28"
    },
    "6508": {
      "fn": "MiniChefV2.add",
      "offset": [
        4399,
        4562
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "6509": {
      "fn": "MiniChefV2.add",
      "offset": [
        4399,
        4562
      ],
      "op": "SWAP4",
      "path": "28"
    },
    "6510": {
      "fn": "MiniChefV2.add",
      "offset": [
        4399,
        4562
      ],
      "op": "ADD",
      "path": "28"
    },
    "6511": {
      "fn": "MiniChefV2.add",
      "offset": [
        4399,
        4562
      ],
      "op": "DUP1",
      "path": "28"
    },
    "6512": {
      "fn": "MiniChefV2.add",
      "offset": [
        4399,
        4562
      ],
      "op": "SLOAD",
      "path": "28"
    },
    "6513": {
      "fn": "MiniChefV2.add",
      "offset": [
        4399,
        4562
      ],
      "op": "DUP3",
      "path": "28"
    },
    "6514": {
      "fn": "MiniChefV2.add",
      "offset": [
        4399,
        4562
      ],
      "op": "DUP8",
      "path": "28"
    },
    "6515": {
      "fn": "MiniChefV2.add",
      "offset": [
        4399,
        4562
      ],
      "op": "ADD",
      "path": "28"
    },
    "6516": {
      "fn": "MiniChefV2.add",
      "offset": [
        4399,
        4562
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "6517": {
      "fn": "MiniChefV2.add",
      "offset": [
        4399,
        4562
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "6519": {
      "fn": "MiniChefV2.add",
      "offset": [
        4399,
        4562
      ],
      "op": "SWAP8",
      "path": "28"
    },
    "6520": {
      "fn": "MiniChefV2.add",
      "offset": [
        4399,
        4562
      ],
      "op": "DUP9",
      "path": "28"
    },
    "6521": {
      "fn": "MiniChefV2.add",
      "offset": [
        4399,
        4562
      ],
      "op": "ADD",
      "path": "28"
    },
    "6522": {
      "fn": "MiniChefV2.add",
      "offset": [
        4399,
        4562
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "6523": {
      "fn": "MiniChefV2.add",
      "offset": [
        4399,
        4562
      ],
      "op": "DUP8",
      "path": "28"
    },
    "6524": {
      "fn": "MiniChefV2.add",
      "offset": [
        4399,
        4562
      ],
      "op": "AND",
      "path": "28"
    },
    "6525": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6527": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "6529": {
      "op": "SHL"
    },
    "6530": {
      "fn": "MiniChefV2.add",
      "offset": [
        4399,
        4562
      ],
      "op": "MUL",
      "path": "28"
    },
    "6531": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6533": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6535": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "6537": {
      "op": "SHL"
    },
    "6538": {
      "op": "SUB"
    },
    "6539": {
      "fn": "MiniChefV2.add",
      "offset": [
        4399,
        4562
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "6540": {
      "fn": "MiniChefV2.add",
      "offset": [
        4399,
        4562
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "6541": {
      "fn": "MiniChefV2.add",
      "offset": [
        4399,
        4562
      ],
      "op": "SWAP8",
      "path": "28"
    },
    "6542": {
      "fn": "MiniChefV2.add",
      "offset": [
        4399,
        4562
      ],
      "op": "AND",
      "path": "28"
    },
    "6543": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6545": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "6547": {
      "op": "SHL"
    },
    "6548": {
      "fn": "MiniChefV2.add",
      "offset": [
        4399,
        4562
      ],
      "op": "MUL",
      "path": "28"
    },
    "6549": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "6558": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "6560": {
      "op": "SHL"
    },
    "6561": {
      "op": "NOT"
    },
    "6562": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6564": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6566": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "6568": {
      "op": "SHL"
    },
    "6569": {
      "op": "SUB"
    },
    "6570": {
      "fn": "MiniChefV2.add",
      "offset": [
        4399,
        4562
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "6571": {
      "fn": "MiniChefV2.add",
      "offset": [
        4399,
        4562
      ],
      "op": "SWAP8",
      "path": "28"
    },
    "6572": {
      "fn": "MiniChefV2.add",
      "offset": [
        4399,
        4562
      ],
      "op": "AND",
      "path": "28"
    },
    "6573": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6575": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6577": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "6579": {
      "op": "SHL"
    },
    "6580": {
      "op": "SUB"
    },
    "6581": {
      "op": "NOT"
    },
    "6582": {
      "fn": "MiniChefV2.add",
      "offset": [
        4399,
        4562
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "6583": {
      "fn": "MiniChefV2.add",
      "offset": [
        4399,
        4562
      ],
      "op": "SWAP4",
      "path": "28"
    },
    "6584": {
      "fn": "MiniChefV2.add",
      "offset": [
        4399,
        4562
      ],
      "op": "AND",
      "path": "28"
    },
    "6585": {
      "fn": "MiniChefV2.add",
      "offset": [
        4399,
        4562
      ],
      "op": "SWAP3",
      "path": "28"
    },
    "6586": {
      "fn": "MiniChefV2.add",
      "offset": [
        4399,
        4562
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "6587": {
      "fn": "MiniChefV2.add",
      "offset": [
        4399,
        4562
      ],
      "op": "SWAP3",
      "path": "28"
    },
    "6588": {
      "fn": "MiniChefV2.add",
      "offset": [
        4399,
        4562
      ],
      "op": "OR",
      "path": "28"
    },
    "6589": {
      "fn": "MiniChefV2.add",
      "offset": [
        4399,
        4562
      ],
      "op": "SWAP6",
      "path": "28"
    },
    "6590": {
      "fn": "MiniChefV2.add",
      "offset": [
        4399,
        4562
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "6591": {
      "fn": "MiniChefV2.add",
      "offset": [
        4399,
        4562
      ],
      "op": "SWAP6",
      "path": "28"
    },
    "6592": {
      "fn": "MiniChefV2.add",
      "offset": [
        4399,
        4562
      ],
      "op": "AND",
      "path": "28"
    },
    "6593": {
      "fn": "MiniChefV2.add",
      "offset": [
        4399,
        4562
      ],
      "op": "OR",
      "path": "28"
    },
    "6594": {
      "fn": "MiniChefV2.add",
      "offset": [
        4399,
        4562
      ],
      "op": "SWAP4",
      "path": "28"
    },
    "6595": {
      "fn": "MiniChefV2.add",
      "offset": [
        4399,
        4562
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "6596": {
      "fn": "MiniChefV2.add",
      "offset": [
        4399,
        4562
      ],
      "op": "SWAP4",
      "path": "28"
    },
    "6597": {
      "fn": "MiniChefV2.add",
      "offset": [
        4399,
        4562
      ],
      "op": "AND",
      "path": "28"
    },
    "6598": {
      "fn": "MiniChefV2.add",
      "offset": [
        4399,
        4562
      ],
      "op": "SWAP4",
      "path": "28"
    },
    "6599": {
      "fn": "MiniChefV2.add",
      "offset": [
        4399,
        4562
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "6600": {
      "fn": "MiniChefV2.add",
      "offset": [
        4399,
        4562
      ],
      "op": "SWAP4",
      "path": "28"
    },
    "6601": {
      "fn": "MiniChefV2.add",
      "offset": [
        4399,
        4562
      ],
      "op": "OR",
      "path": "28"
    },
    "6602": {
      "fn": "MiniChefV2.add",
      "offset": [
        4399,
        4562
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "6603": {
      "fn": "MiniChefV2.add",
      "offset": [
        4399,
        4562
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "6604": {
      "fn": "MiniChefV2.add",
      "offset": [
        4399,
        4562
      ],
      "op": "SSTORE",
      "path": "28"
    },
    "6605": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6607": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6609": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6611": {
      "op": "SHL"
    },
    "6612": {
      "op": "SUB"
    },
    "6613": {
      "fn": "MiniChefV2.add",
      "offset": [
        4572,
        4602
      ],
      "op": "DUP1",
      "path": "28",
      "statement": 58
    },
    "6614": {
      "fn": "MiniChefV2.add",
      "offset": [
        4572,
        4602
      ],
      "op": "DUP8",
      "path": "28"
    },
    "6615": {
      "fn": "MiniChefV2.add",
      "offset": [
        4572,
        4602
      ],
      "op": "AND",
      "path": "28"
    },
    "6616": {
      "fn": "MiniChefV2.add",
      "offset": [
        4572,
        4602
      ],
      "op": "DUP1",
      "path": "28"
    },
    "6617": {
      "fn": "MiniChefV2.add",
      "offset": [
        4572,
        4602
      ],
      "op": "DUP7",
      "path": "28"
    },
    "6618": {
      "fn": "MiniChefV2.add",
      "offset": [
        4572,
        4602
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "6619": {
      "fn": "MiniChefV2.add",
      "offset": [
        4572,
        4583
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x7"
    },
    "6621": {
      "fn": "MiniChefV2.add",
      "offset": [
        4572,
        4602
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "6622": {
      "fn": "MiniChefV2.add",
      "offset": [
        4572,
        4602
      ],
      "op": "SWAP4",
      "path": "28"
    },
    "6623": {
      "fn": "MiniChefV2.add",
      "offset": [
        4572,
        4602
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "6624": {
      "fn": "MiniChefV2.add",
      "offset": [
        4572,
        4602
      ],
      "op": "SWAP3",
      "path": "28"
    },
    "6625": {
      "fn": "MiniChefV2.add",
      "offset": [
        4572,
        4602
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "6626": {
      "fn": "MiniChefV2.add",
      "offset": [
        4572,
        4602
      ],
      "op": "SWAP4",
      "path": "28"
    },
    "6627": {
      "fn": "MiniChefV2.add",
      "offset": [
        4572,
        4602
      ],
      "op": "KECCAK256",
      "path": "28"
    },
    "6628": {
      "fn": "MiniChefV2.add",
      "offset": [
        4572,
        4609
      ],
      "op": "DUP1",
      "path": "28"
    },
    "6629": {
      "fn": "MiniChefV2.add",
      "offset": [
        4572,
        4609
      ],
      "op": "SLOAD",
      "path": "28"
    },
    "6630": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "6632": {
      "op": "NOT"
    },
    "6633": {
      "fn": "MiniChefV2.add",
      "offset": [
        4572,
        4609
      ],
      "op": "AND",
      "path": "28"
    },
    "6634": {
      "fn": "MiniChefV2.add",
      "offset": [
        4572,
        4609
      ],
      "op": "DUP5",
      "path": "28"
    },
    "6635": {
      "fn": "MiniChefV2.add",
      "offset": [
        4572,
        4609
      ],
      "op": "OR",
      "path": "28"
    },
    "6636": {
      "fn": "MiniChefV2.add",
      "offset": [
        4572,
        4609
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "6637": {
      "fn": "MiniChefV2.add",
      "offset": [
        4572,
        4609
      ],
      "op": "SSTORE",
      "path": "28"
    },
    "6638": {
      "fn": "MiniChefV2.add",
      "offset": [
        4640,
        4647
      ],
      "op": "PUSH1",
      "path": "28",
      "statement": 59,
      "value": "0x4"
    },
    "6640": {
      "fn": "MiniChefV2.add",
      "offset": [
        4640,
        4654
      ],
      "op": "SLOAD",
      "path": "28"
    },
    "6641": {
      "fn": "MiniChefV2.add",
      "offset": [
        4624,
        4695
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "6642": {
      "fn": "MiniChefV2.add",
      "offset": [
        4624,
        4695
      ],
      "op": "DUP5",
      "path": "28"
    },
    "6643": {
      "fn": "MiniChefV2.add",
      "offset": [
        4624,
        4695
      ],
      "op": "AND",
      "path": "28"
    },
    "6644": {
      "fn": "MiniChefV2.add",
      "offset": [
        4624,
        4695
      ],
      "op": "SWAP3",
      "path": "28"
    },
    "6645": {
      "fn": "MiniChefV2.add",
      "offset": [
        4572,
        4602
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "6646": {
      "fn": "MiniChefV2.add",
      "offset": [
        4572,
        4602
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "6647": {
      "fn": "MiniChefV2.add",
      "offset": [
        4640,
        4661
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x19FF"
    },
    "6650": {
      "fn": "MiniChefV2.add",
      "offset": [
        4640,
        4661
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "6651": {
      "fn": "MiniChefV2.add",
      "offset": [
        4640,
        4658
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1DD1"
    },
    "6654": {
      "fn": "MiniChefV2.add",
      "jump": "i",
      "offset": [
        4640,
        4661
      ],
      "op": "JUMP",
      "path": "28"
    },
    "6655": {
      "fn": "MiniChefV2.add",
      "offset": [
        4640,
        4661
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "6656": {
      "fn": "MiniChefV2.add",
      "offset": [
        4624,
        4695
      ],
      "op": "PUSH32",
      "path": "28",
      "value": "0x81EE0F8C5C46E2CB41984886F77A84181724ABB86C32A5F6DE539B07509D45E5"
    },
    "6689": {
      "fn": "MiniChefV2.add",
      "offset": [
        4663,
        4673
      ],
      "op": "DUP7",
      "path": "28"
    },
    "6690": {
      "fn": "MiniChefV2.add",
      "offset": [
        4624,
        4695
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "6692": {
      "fn": "MiniChefV2.add",
      "offset": [
        4624,
        4695
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "6693": {
      "fn": "MiniChefV2.add",
      "offset": [
        4624,
        4695
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1A2E"
    },
    "6696": {
      "fn": "MiniChefV2.add",
      "offset": [
        4624,
        4695
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "6697": {
      "fn": "MiniChefV2.add",
      "offset": [
        4624,
        4695
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "6698": {
      "fn": "MiniChefV2.add",
      "offset": [
        4624,
        4695
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x29D3"
    },
    "6701": {
      "fn": "MiniChefV2.add",
      "jump": "i",
      "offset": [
        4624,
        4695
      ],
      "op": "JUMP",
      "path": "28"
    },
    "6702": {
      "fn": "MiniChefV2.add",
      "offset": [
        4624,
        4695
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "6703": {
      "fn": "MiniChefV2.add",
      "offset": [
        4624,
        4695
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "6705": {
      "fn": "MiniChefV2.add",
      "offset": [
        4624,
        4695
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "6706": {
      "fn": "MiniChefV2.add",
      "offset": [
        4624,
        4695
      ],
      "op": "DUP1",
      "path": "28"
    },
    "6707": {
      "fn": "MiniChefV2.add",
      "offset": [
        4624,
        4695
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "6708": {
      "fn": "MiniChefV2.add",
      "offset": [
        4624,
        4695
      ],
      "op": "SUB",
      "path": "28"
    },
    "6709": {
      "fn": "MiniChefV2.add",
      "offset": [
        4624,
        4695
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "6710": {
      "fn": "MiniChefV2.add",
      "offset": [
        4624,
        4695
      ],
      "op": "LOG4",
      "path": "28"
    },
    "6711": {
      "fn": "MiniChefV2.add",
      "offset": [
        4094,
        4702
      ],
      "op": "POP",
      "path": "28"
    },
    "6712": {
      "fn": "MiniChefV2.add",
      "offset": [
        4094,
        4702
      ],
      "op": "POP",
      "path": "28"
    },
    "6713": {
      "fn": "MiniChefV2.add",
      "offset": [
        4094,
        4702
      ],
      "op": "POP",
      "path": "28"
    },
    "6714": {
      "fn": "MiniChefV2.add",
      "jump": "o",
      "offset": [
        4094,
        4702
      ],
      "op": "JUMP",
      "path": "28"
    },
    "6715": {
      "offset": [
        2246,
        2273
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "6716": {
      "fn": "MiniChefV2.add",
      "offset": [
        2246,
        2273
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x5"
    },
    "6718": {
      "fn": "MiniChefV2.add",
      "offset": [
        2246,
        2273
      ],
      "op": "DUP2",
      "path": "28"
    },
    "6719": {
      "fn": "MiniChefV2.add",
      "offset": [
        2246,
        2273
      ],
      "op": "DUP2",
      "path": "28"
    },
    "6720": {
      "fn": "MiniChefV2.add",
      "offset": [
        2246,
        2273
      ],
      "op": "SLOAD",
      "path": "28"
    },
    "6721": {
      "fn": "MiniChefV2.add",
      "offset": [
        2246,
        2273
      ],
      "op": "DUP2",
      "path": "28"
    },
    "6722": {
      "fn": "MiniChefV2.add",
      "offset": [
        2246,
        2273
      ],
      "op": "LT",
      "path": "28"
    },
    "6723": {
      "fn": "MiniChefV2.add",
      "offset": [
        2246,
        2273
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x13A4"
    },
    "6726": {
      "fn": "MiniChefV2.add",
      "offset": [
        2246,
        2273
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "6727": {
      "fn": "MiniChefV2.add",
      "offset": [
        2246,
        2273
      ],
      "op": "INVALID",
      "path": "28"
    },
    "6728": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        12226,
        13200
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "6729": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        12312,
        12332
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1A50"
    },
    "6732": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        12312,
        12332
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x2153"
    },
    "6735": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "jump": "i",
      "offset": [
        12312,
        12332
      ],
      "op": "JUMP",
      "path": "28"
    },
    "6736": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        12312,
        12332
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "6737": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        12335,
        12350
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1A59"
    },
    "6740": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        12346,
        12349
      ],
      "op": "DUP5",
      "path": "28"
    },
    "6741": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        12335,
        12345
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x10DD"
    },
    "6744": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "jump": "i",
      "offset": [
        12335,
        12350
      ],
      "op": "JUMP",
      "path": "28"
    },
    "6745": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        12335,
        12350
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "6746": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        12360,
        12381
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "6748": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        12384,
        12397
      ],
      "op": "DUP6",
      "path": "28"
    },
    "6749": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        12384,
        12397
      ],
      "op": "DUP2",
      "path": "28"
    },
    "6750": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        12384,
        12397
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "6751": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        12384,
        12392
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x6"
    },
    "6753": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        12384,
        12397
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x20"
    },
    "6755": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        12384,
        12397
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "6756": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        12384,
        12397
      ],
      "op": "DUP2",
      "path": "28"
    },
    "6757": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        12384,
        12397
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "6758": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        12384,
        12397
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "6760": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        12384,
        12397
      ],
      "op": "DUP1",
      "path": "28"
    },
    "6761": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        12384,
        12397
      ],
      "op": "DUP4",
      "path": "28"
    },
    "6762": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        12384,
        12397
      ],
      "op": "KECCAK256",
      "path": "28"
    },
    "6763": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        12398,
        12408
      ],
      "op": "CALLER",
      "path": "28"
    },
    "6764": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        12384,
        12409
      ],
      "op": "DUP5",
      "path": "28"
    },
    "6765": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        12384,
        12409
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "6766": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        12384,
        12409
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "6767": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        12384,
        12409
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "6768": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        12384,
        12409
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "6769": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        12384,
        12409
      ],
      "op": "DUP2",
      "path": "28"
    },
    "6770": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        12384,
        12409
      ],
      "op": "KECCAK256",
      "path": "28"
    },
    "6771": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        12468,
        12489
      ],
      "op": "DUP3",
      "path": "28"
    },
    "6772": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        12468,
        12489
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "6773": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        12452,
        12463
      ],
      "op": "DUP2",
      "path": "28"
    },
    "6774": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        12452,
        12463
      ],
      "op": "SLOAD",
      "path": "28"
    },
    "6775": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        12312,
        12350
      ],
      "op": "SWAP4",
      "path": "28"
    },
    "6776": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        12312,
        12350
      ],
      "op": "SWAP5",
      "path": "28"
    },
    "6777": {
      "op": "POP"
    },
    "6778": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        12384,
        12409
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "6779": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        12384,
        12409
      ],
      "op": "SWAP3",
      "path": "28"
    },
    "6780": {
      "offset": [
        2699,
        2703
      ],
      "op": "PUSH5",
      "path": "28",
      "value": "0xE8D4A51000"
    },
    "6786": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        2699,
        2703
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "6787": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        12452,
        12490
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1A95"
    },
    "6790": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        12452,
        12490
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "6791": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        12452,
        12463
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "6792": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6794": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6796": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "6798": {
      "op": "SHL"
    },
    "6799": {
      "op": "SUB"
    },
    "6800": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        12452,
        12490
      ],
      "op": "AND",
      "path": "28"
    },
    "6801": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        12452,
        12467
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1D47"
    },
    "6804": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "jump": "i",
      "offset": [
        12452,
        12490
      ],
      "op": "JUMP",
      "path": "28"
    },
    "6805": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        12452,
        12490
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "6806": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        12452,
        12512
      ],
      "op": "DUP2",
      "path": "28"
    },
    "6807": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        12452,
        12512
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1A9C"
    },
    "6810": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        12452,
        12512
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "6811": {
      "dev": "Division by zero",
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        12452,
        12512
      ],
      "op": "INVALID",
      "path": "28"
    },
    "6812": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        12452,
        12512
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "6813": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        12452,
        12512
      ],
      "op": "DIV",
      "path": "28"
    },
    "6814": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        12419,
        12513
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "6815": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        12419,
        12513
      ],
      "op": "POP",
      "path": "28"
    },
    "6816": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        12523,
        12544
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "6818": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        12547,
        12596
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1ABB"
    },
    "6821": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        12547,
        12584
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x89E"
    },
    "6824": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        12568,
        12572
      ],
      "op": "DUP5",
      "path": "28"
    },
    "6825": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        12568,
        12583
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x1"
    },
    "6827": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        12568,
        12583
      ],
      "op": "ADD",
      "path": "28"
    },
    "6828": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        12568,
        12583
      ],
      "op": "SLOAD",
      "path": "28"
    },
    "6829": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        12547,
        12563
      ],
      "op": "DUP5",
      "path": "28"
    },
    "6830": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        12547,
        12567
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1D84"
    },
    "6833": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        12547,
        12567
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "6834": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        12547,
        12584
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "6835": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        12547,
        12584
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "6836": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        12547,
        12584
      ],
      "op": "PUSH4",
      "path": "28",
      "value": "0xFFFFFFFF"
    },
    "6841": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        12547,
        12584
      ],
      "op": "AND",
      "path": "28"
    },
    "6842": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "jump": "i",
      "offset": [
        12547,
        12584
      ],
      "op": "JUMP",
      "path": "28"
    },
    "6843": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        12547,
        12596
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "6844": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        12523,
        12596
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "6845": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        12523,
        12596
      ],
      "op": "POP",
      "path": "28"
    },
    "6846": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        12644,
        12729
      ],
      "op": "PUSH2",
      "path": "28",
      "statement": 60,
      "value": "0x1AF6"
    },
    "6849": {
      "offset": [
        2699,
        2703
      ],
      "op": "PUSH5",
      "path": "28",
      "value": "0xE8D4A51000"
    },
    "6855": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        12672,
        12705
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1AE6"
    },
    "6858": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        12683,
        12687
      ],
      "op": "DUP7",
      "path": "28"
    },
    "6859": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        12683,
        12704
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "6861": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        12683,
        12704
      ],
      "op": "ADD",
      "path": "28"
    },
    "6862": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        12683,
        12704
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "6863": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6865": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6867": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "6869": {
      "op": "SHL"
    },
    "6870": {
      "op": "SUB"
    },
    "6871": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        12672,
        12705
      ],
      "op": "AND",
      "path": "28"
    },
    "6872": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        12672,
        12678
      ],
      "op": "DUP10",
      "path": "28"
    },
    "6873": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        12672,
        12682
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1D47"
    },
    "6876": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        12672,
        12682
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "6877": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        12672,
        12705
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "6878": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        12672,
        12705
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "6879": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        12672,
        12705
      ],
      "op": "PUSH4",
      "path": "28",
      "value": "0xFFFFFFFF"
    },
    "6884": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        12672,
        12705
      ],
      "op": "AND",
      "path": "28"
    },
    "6885": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "jump": "i",
      "offset": [
        12672,
        12705
      ],
      "op": "JUMP",
      "path": "28"
    },
    "6886": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        12672,
        12705
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "6887": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        12672,
        12727
      ],
      "op": "DUP2",
      "path": "28"
    },
    "6888": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        12672,
        12727
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1AED"
    },
    "6891": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        12672,
        12727
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "6892": {
      "dev": "Division by zero",
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        12672,
        12727
      ],
      "op": "INVALID",
      "path": "28"
    },
    "6893": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        12672,
        12727
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "6894": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        12644,
        12660
      ],
      "op": "DUP5",
      "path": "28"
    },
    "6895": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        12644,
        12660
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "6896": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        12672,
        12727
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "6897": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        12672,
        12727
      ],
      "op": "DIV",
      "path": "28"
    },
    "6898": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        12644,
        12664
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1D84"
    },
    "6901": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "jump": "i",
      "offset": [
        12644,
        12729
      ],
      "op": "JUMP",
      "path": "28"
    },
    "6902": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        12644,
        12729
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "6903": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        12626,
        12641
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x1"
    },
    "6905": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        12626,
        12641
      ],
      "op": "DUP5",
      "path": "28"
    },
    "6906": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        12626,
        12641
      ],
      "op": "ADD",
      "path": "28"
    },
    "6907": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        12626,
        12729
      ],
      "op": "SSTORE",
      "path": "28"
    },
    "6908": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        12753,
        12764
      ],
      "op": "DUP3",
      "path": "28",
      "statement": 61
    },
    "6909": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        12753,
        12764
      ],
      "op": "SLOAD",
      "path": "28"
    },
    "6910": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        12753,
        12776
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1B07"
    },
    "6913": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        12753,
        12776
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "6914": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        12769,
        12775
      ],
      "op": "DUP8",
      "path": "28"
    },
    "6915": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        12753,
        12768
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1DD1"
    },
    "6918": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "jump": "i",
      "offset": [
        12753,
        12776
      ],
      "op": "JUMP",
      "path": "28"
    },
    "6919": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        12753,
        12776
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "6920": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        12739,
        12776
      ],
      "op": "DUP4",
      "path": "28"
    },
    "6921": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        12739,
        12776
      ],
      "op": "SSTORE",
      "path": "28"
    },
    "6922": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        12811,
        12848
      ],
      "op": "PUSH2",
      "path": "28",
      "statement": 62,
      "value": "0x1B3D"
    },
    "6925": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6927": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6929": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6931": {
      "op": "SHL"
    },
    "6932": {
      "op": "SUB"
    },
    "6933": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        12811,
        12816
      ],
      "op": "PUSH32",
      "path": "28",
      "value": "0x0"
    },
    "6966": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        12811,
        12829
      ],
      "op": "AND",
      "path": "28"
    },
    "6967": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        12830,
        12832
      ],
      "op": "DUP7",
      "path": "28"
    },
    "6968": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        12834,
        12847
      ],
      "op": "DUP4",
      "path": "28"
    },
    "6969": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        12811,
        12829
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1DF4"
    },
    "6972": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "jump": "i",
      "offset": [
        12811,
        12848
      ],
      "op": "JUMP",
      "path": "28"
    },
    "6973": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        12811,
        12848
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "6974": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        12859,
        12878
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "6976": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        12881,
        12889
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x5"
    },
    "6978": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        12890,
        12893
      ],
      "op": "DUP9",
      "path": "28"
    },
    "6979": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        12881,
        12894
      ],
      "op": "DUP2",
      "path": "28"
    },
    "6980": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        12881,
        12894
      ],
      "op": "SLOAD",
      "path": "28"
    },
    "6981": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        12881,
        12894
      ],
      "op": "DUP2",
      "path": "28"
    },
    "6982": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        12881,
        12894
      ],
      "op": "LT",
      "path": "28"
    },
    "6983": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        12881,
        12894
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1B4C"
    },
    "6986": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        12881,
        12894
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "6987": {
      "dev": "Index out of range",
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        12881,
        12894
      ],
      "op": "INVALID",
      "path": "28"
    },
    "6988": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        12881,
        12894
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "6989": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        12881,
        12894
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "6991": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        12881,
        12894
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "6992": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        12881,
        12894
      ],
      "op": "DUP3",
      "path": "28"
    },
    "6993": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        12881,
        12894
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "6994": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        12881,
        12894
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x20"
    },
    "6996": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        12881,
        12894
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "6997": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        12881,
        12894
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "6998": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        12881,
        12894
      ],
      "op": "KECCAK256",
      "path": "28"
    },
    "6999": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        12881,
        12894
      ],
      "op": "ADD",
      "path": "28"
    },
    "7000": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        12881,
        12894
      ],
      "op": "SLOAD",
      "path": "28"
    },
    "7001": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7003": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7005": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7007": {
      "op": "SHL"
    },
    "7008": {
      "op": "SUB"
    },
    "7009": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        12881,
        12894
      ],
      "op": "AND",
      "path": "28"
    },
    "7010": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        12881,
        12894
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "7011": {
      "op": "POP"
    },
    "7012": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        12908,
        12940
      ],
      "op": "DUP1",
      "path": "28"
    },
    "7013": {
      "branch": 98,
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        12908,
        12940
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "7014": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        12904,
        13039
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1BD1"
    },
    "7017": {
      "branch": 98,
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        12904,
        13039
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "7018": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        13016,
        13027
      ],
      "op": "DUP4",
      "path": "28",
      "statement": 63
    },
    "7019": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        13016,
        13027
      ],
      "op": "SLOAD",
      "path": "28"
    },
    "7020": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        12956,
        13028
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "7022": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        12956,
        13028
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "7023": {
      "op": "PUSH4",
      "value": "0x45FB1BA1"
    },
    "7028": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "7030": {
      "op": "SHL"
    },
    "7031": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        12956,
        13028
      ],
      "op": "DUP2",
      "path": "28"
    },
    "7032": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        12956,
        13028
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "7033": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7035": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7037": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7039": {
      "op": "SHL"
    },
    "7040": {
      "op": "SUB"
    },
    "7041": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        12956,
        12979
      ],
      "op": "DUP4",
      "path": "28"
    },
    "7042": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        12956,
        12979
      ],
      "op": "AND",
      "path": "28"
    },
    "7043": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        12956,
        12979
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "7044": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        12956,
        12979
      ],
      "op": "PUSH4",
      "path": "28",
      "value": "0x8BF63742"
    },
    "7049": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        12956,
        12979
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "7050": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        12956,
        13028
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1B9E"
    },
    "7053": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        12956,
        13028
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "7054": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        12980,
        12983
      ],
      "op": "DUP13",
      "path": "28"
    },
    "7055": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        12980,
        12983
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "7056": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        12985,
        12995
      ],
      "op": "CALLER",
      "path": "28"
    },
    "7057": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        12985,
        12995
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "7058": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        12997,
        12999
      ],
      "op": "DUP13",
      "path": "28"
    },
    "7059": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        12997,
        12999
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "7060": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        13001,
        13014
      ],
      "op": "DUP10",
      "path": "28"
    },
    "7061": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        13001,
        13014
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "7062": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        13016,
        13027
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "7063": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        12956,
        13028
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x4"
    },
    "7065": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        12956,
        13028
      ],
      "op": "ADD",
      "path": "28"
    },
    "7066": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        12956,
        13028
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x29DC"
    },
    "7069": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "jump": "i",
      "offset": [
        12956,
        13028
      ],
      "op": "JUMP",
      "path": "28"
    },
    "7070": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        12956,
        13028
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "7071": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        12956,
        13028
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "7073": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        12956,
        13028
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "7075": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        12956,
        13028
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "7076": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        12956,
        13028
      ],
      "op": "DUP1",
      "path": "28"
    },
    "7077": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        12956,
        13028
      ],
      "op": "DUP4",
      "path": "28"
    },
    "7078": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        12956,
        13028
      ],
      "op": "SUB",
      "path": "28"
    },
    "7079": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        12956,
        13028
      ],
      "op": "DUP2",
      "path": "28"
    },
    "7080": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        12956,
        13028
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "7082": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        12956,
        13028
      ],
      "op": "DUP8",
      "path": "28"
    },
    "7083": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        12956,
        13028
      ],
      "op": "DUP1",
      "path": "28"
    },
    "7084": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        12956,
        13028
      ],
      "op": "EXTCODESIZE",
      "path": "28"
    },
    "7085": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        12956,
        13028
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "7086": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        12956,
        13028
      ],
      "op": "DUP1",
      "path": "28"
    },
    "7087": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        12956,
        13028
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "7088": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        12956,
        13028
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1BB8"
    },
    "7091": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        12956,
        13028
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "7092": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        12956,
        13028
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "7094": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        12956,
        13028
      ],
      "op": "DUP1",
      "path": "28"
    },
    "7095": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        12956,
        13028
      ],
      "op": "REVERT",
      "path": "28"
    },
    "7096": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        12956,
        13028
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "7097": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        12956,
        13028
      ],
      "op": "POP",
      "path": "28"
    },
    "7098": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        12956,
        13028
      ],
      "op": "GAS",
      "path": "28"
    },
    "7099": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        12956,
        13028
      ],
      "op": "CALL",
      "path": "28"
    },
    "7100": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        12956,
        13028
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "7101": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        12956,
        13028
      ],
      "op": "DUP1",
      "path": "28"
    },
    "7102": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        12956,
        13028
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "7103": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        12956,
        13028
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1BCC"
    },
    "7106": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        12956,
        13028
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "7107": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        12956,
        13028
      ],
      "op": "RETURNDATASIZE",
      "path": "28"
    },
    "7108": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        12956,
        13028
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "7110": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        12956,
        13028
      ],
      "op": "DUP1",
      "path": "28"
    },
    "7111": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        12956,
        13028
      ],
      "op": "RETURNDATACOPY",
      "path": "28"
    },
    "7112": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        12956,
        13028
      ],
      "op": "RETURNDATASIZE",
      "path": "28"
    },
    "7113": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        12956,
        13028
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "7115": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        12956,
        13028
      ],
      "op": "REVERT",
      "path": "28"
    },
    "7116": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        12956,
        13028
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "7117": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        12956,
        13028
      ],
      "op": "POP",
      "path": "28"
    },
    "7118": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        12956,
        13028
      ],
      "op": "POP",
      "path": "28"
    },
    "7119": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        12956,
        13028
      ],
      "op": "POP",
      "path": "28"
    },
    "7120": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        12956,
        13028
      ],
      "op": "POP",
      "path": "28"
    },
    "7121": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        12904,
        13039
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "7122": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        13049,
        13086
      ],
      "op": "PUSH2",
      "path": "28",
      "statement": 64,
      "value": "0x1BE3"
    },
    "7125": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        13075,
        13077
      ],
      "op": "DUP7",
      "path": "28"
    },
    "7126": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        13079,
        13085
      ],
      "op": "DUP9",
      "path": "28"
    },
    "7127": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        13049,
        13056
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x4"
    },
    "7129": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        13057,
        13060
      ],
      "op": "DUP12",
      "path": "28"
    },
    "7130": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        13049,
        13061
      ],
      "op": "DUP2",
      "path": "28"
    },
    "7131": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        13049,
        13061
      ],
      "op": "SLOAD",
      "path": "28"
    },
    "7132": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        13049,
        13061
      ],
      "op": "DUP2",
      "path": "28"
    },
    "7133": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        13049,
        13061
      ],
      "op": "LT",
      "path": "28"
    },
    "7134": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        13049,
        13061
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x773"
    },
    "7137": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        13049,
        13061
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "7138": {
      "dev": "Index out of range",
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        13049,
        13061
      ],
      "op": "INVALID",
      "path": "28"
    },
    "7139": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        13049,
        13086
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "7140": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        13136,
        13138
      ],
      "op": "DUP6",
      "path": "28",
      "statement": 65
    },
    "7141": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7143": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7145": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7147": {
      "op": "SHL"
    },
    "7148": {
      "op": "SUB"
    },
    "7149": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        13102,
        13139
      ],
      "op": "AND",
      "path": "28"
    },
    "7150": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        13123,
        13126
      ],
      "op": "DUP9",
      "path": "28"
    },
    "7151": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        13111,
        13121
      ],
      "op": "CALLER",
      "path": "28"
    },
    "7152": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7154": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7156": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7158": {
      "op": "SHL"
    },
    "7159": {
      "op": "SUB"
    },
    "7160": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        13102,
        13139
      ],
      "op": "AND",
      "path": "28"
    },
    "7161": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        13102,
        13139
      ],
      "op": "PUSH32",
      "path": "28",
      "value": "0x8166BF25F8A2B7ED3C85049207DA4358D16EDBED977D23FA2EE6F0DDE3EC2132"
    },
    "7194": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        13128,
        13134
      ],
      "op": "DUP11",
      "path": "28"
    },
    "7195": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        13102,
        13139
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "7197": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        13102,
        13139
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "7198": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        13102,
        13139
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1C27"
    },
    "7201": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        13102,
        13139
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "7202": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        13102,
        13139
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "7203": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        13102,
        13139
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x29D3"
    },
    "7206": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "jump": "i",
      "offset": [
        13102,
        13139
      ],
      "op": "JUMP",
      "path": "28"
    },
    "7207": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        13102,
        13139
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "7208": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        13102,
        13139
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "7210": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        13102,
        13139
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "7211": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        13102,
        13139
      ],
      "op": "DUP1",
      "path": "28"
    },
    "7212": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        13102,
        13139
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "7213": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        13102,
        13139
      ],
      "op": "SUB",
      "path": "28"
    },
    "7214": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        13102,
        13139
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "7215": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        13102,
        13139
      ],
      "op": "LOG4",
      "path": "28"
    },
    "7216": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        13174,
        13177
      ],
      "op": "DUP8",
      "path": "28",
      "statement": 66
    },
    "7217": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        13162,
        13172
      ],
      "op": "CALLER",
      "path": "28"
    },
    "7218": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7220": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7222": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7224": {
      "op": "SHL"
    },
    "7225": {
      "op": "SUB"
    },
    "7226": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        13154,
        13193
      ],
      "op": "AND",
      "path": "28"
    },
    "7227": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        13154,
        13193
      ],
      "op": "PUSH32",
      "path": "28",
      "value": "0x71BAB65CED2E5750775A0613BE067DF48EF06CF92A496EBF7663AE0660924954"
    },
    "7260": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        13179,
        13192
      ],
      "op": "DUP5",
      "path": "28"
    },
    "7261": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        13154,
        13193
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "7263": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        13154,
        13193
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "7264": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        13154,
        13193
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1C69"
    },
    "7267": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        13154,
        13193
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "7268": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        13154,
        13193
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "7269": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        13154,
        13193
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x29D3"
    },
    "7272": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "jump": "i",
      "offset": [
        13154,
        13193
      ],
      "op": "JUMP",
      "path": "28"
    },
    "7273": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        13154,
        13193
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "7274": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        13154,
        13193
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "7276": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        13154,
        13193
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "7277": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        13154,
        13193
      ],
      "op": "DUP1",
      "path": "28"
    },
    "7278": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        13154,
        13193
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "7279": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        13154,
        13193
      ],
      "op": "SUB",
      "path": "28"
    },
    "7280": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        13154,
        13193
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "7281": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        13154,
        13193
      ],
      "op": "LOG3",
      "path": "28"
    },
    "7282": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        12226,
        13200
      ],
      "op": "POP",
      "path": "28"
    },
    "7283": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        12226,
        13200
      ],
      "op": "POP",
      "path": "28"
    },
    "7284": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        12226,
        13200
      ],
      "op": "POP",
      "path": "28"
    },
    "7285": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        12226,
        13200
      ],
      "op": "POP",
      "path": "28"
    },
    "7286": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        12226,
        13200
      ],
      "op": "POP",
      "path": "28"
    },
    "7287": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        12226,
        13200
      ],
      "op": "POP",
      "path": "28"
    },
    "7288": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        12226,
        13200
      ],
      "op": "POP",
      "path": "28"
    },
    "7289": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "offset": [
        12226,
        13200
      ],
      "op": "POP",
      "path": "28"
    },
    "7290": {
      "fn": "MiniChefV2.withdrawAndHarvest",
      "jump": "o",
      "offset": [
        12226,
        13200
      ],
      "op": "JUMP",
      "path": "28"
    },
    "7291": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1743,
        2081
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "7292": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1833,
        1842
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "7294": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1828,
        2075
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "7295": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1848,
        1864
      ],
      "op": "DUP3",
      "path": "8"
    },
    "7296": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1848,
        1864
      ],
      "op": "DUP2",
      "path": "8"
    },
    "7297": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1848,
        1864
      ],
      "op": "LT",
      "path": "8"
    },
    "7298": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1828,
        2075
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "7299": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1828,
        2075
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1391"
    },
    "7302": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1828,
        2075
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "7303": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1886,
        1898
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "7305": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1900,
        1919
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x60"
    },
    "7307": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1931,
        1935
      ],
      "op": "ADDRESS",
      "path": "8"
    },
    "7308": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1950,
        1955
      ],
      "op": "DUP7",
      "path": "8"
    },
    "7309": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1950,
        1955
      ],
      "op": "DUP7",
      "path": "8"
    },
    "7310": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1956,
        1957
      ],
      "op": "DUP6",
      "path": "8"
    },
    "7311": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1950,
        1958
      ],
      "op": "DUP2",
      "path": "8"
    },
    "7312": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1950,
        1958
      ],
      "op": "DUP2",
      "path": "8"
    },
    "7313": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1950,
        1958
      ],
      "op": "LT",
      "path": "8"
    },
    "7314": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1950,
        1958
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1C97"
    },
    "7317": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1950,
        1958
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "7318": {
      "dev": "Index out of range",
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1950,
        1958
      ],
      "op": "INVALID",
      "path": "8"
    },
    "7319": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1950,
        1958
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "7320": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1950,
        1958
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "7321": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1950,
        1958
      ],
      "op": "POP",
      "path": "8"
    },
    "7322": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1950,
        1958
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "7324": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1950,
        1958
      ],
      "op": "MUL",
      "path": "8"
    },
    "7325": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1950,
        1958
      ],
      "op": "DUP2",
      "path": "8"
    },
    "7326": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1950,
        1958
      ],
      "op": "ADD",
      "path": "8"
    },
    "7327": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1950,
        1958
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "7328": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1950,
        1958
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1CA9"
    },
    "7331": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1950,
        1958
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "7332": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1950,
        1958
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "7333": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1950,
        1958
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x2A53"
    },
    "7336": {
      "fn": "BaseBoringBatchable.batch",
      "jump": "i",
      "offset": [
        1950,
        1958
      ],
      "op": "JUMP",
      "path": "8"
    },
    "7337": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1950,
        1958
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "7338": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1923,
        1959
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "7340": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1923,
        1959
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "7341": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1923,
        1959
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1CB7"
    },
    "7344": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1923,
        1959
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "7345": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1923,
        1959
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "7346": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1923,
        1959
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "7347": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1923,
        1959
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x250D"
    },
    "7350": {
      "fn": "BaseBoringBatchable.batch",
      "jump": "i",
      "offset": [
        1923,
        1959
      ],
      "op": "JUMP",
      "path": "8"
    },
    "7351": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1923,
        1959
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "7352": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1923,
        1959
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "7354": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1923,
        1959
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "7356": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1923,
        1959
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "7357": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1923,
        1959
      ],
      "op": "DUP1",
      "path": "8"
    },
    "7358": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1923,
        1959
      ],
      "op": "DUP4",
      "path": "8"
    },
    "7359": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1923,
        1959
      ],
      "op": "SUB",
      "path": "8"
    },
    "7360": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1923,
        1959
      ],
      "op": "DUP2",
      "path": "8"
    },
    "7361": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1923,
        1959
      ],
      "op": "DUP6",
      "path": "8"
    },
    "7362": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1923,
        1959
      ],
      "op": "GAS",
      "path": "8"
    },
    "7363": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1923,
        1959
      ],
      "op": "DELEGATECALL",
      "path": "8"
    },
    "7364": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1923,
        1959
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "7365": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1923,
        1959
      ],
      "op": "POP",
      "path": "8"
    },
    "7366": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1923,
        1959
      ],
      "op": "POP",
      "path": "8"
    },
    "7367": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1923,
        1959
      ],
      "op": "RETURNDATASIZE",
      "path": "8"
    },
    "7368": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1923,
        1959
      ],
      "op": "DUP1",
      "path": "8"
    },
    "7369": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1923,
        1959
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "7371": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1923,
        1959
      ],
      "op": "DUP2",
      "path": "8"
    },
    "7372": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1923,
        1959
      ],
      "op": "EQ",
      "path": "8"
    },
    "7373": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1923,
        1959
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1CF2"
    },
    "7376": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1923,
        1959
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "7377": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1923,
        1959
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "7379": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1923,
        1959
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "7380": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1923,
        1959
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "7381": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1923,
        1959
      ],
      "op": "POP",
      "path": "8"
    },
    "7382": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1923,
        1959
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1F"
    },
    "7384": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1923,
        1959
      ],
      "op": "NOT",
      "path": "8"
    },
    "7385": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1923,
        1959
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x3F"
    },
    "7387": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1923,
        1959
      ],
      "op": "RETURNDATASIZE",
      "path": "8"
    },
    "7388": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1923,
        1959
      ],
      "op": "ADD",
      "path": "8"
    },
    "7389": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1923,
        1959
      ],
      "op": "AND",
      "path": "8"
    },
    "7390": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1923,
        1959
      ],
      "op": "DUP3",
      "path": "8"
    },
    "7391": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1923,
        1959
      ],
      "op": "ADD",
      "path": "8"
    },
    "7392": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1923,
        1959
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "7394": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1923,
        1959
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "7395": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1923,
        1959
      ],
      "op": "RETURNDATASIZE",
      "path": "8"
    },
    "7396": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1923,
        1959
      ],
      "op": "DUP3",
      "path": "8"
    },
    "7397": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1923,
        1959
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "7398": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1923,
        1959
      ],
      "op": "RETURNDATASIZE",
      "path": "8"
    },
    "7399": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1923,
        1959
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "7401": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1923,
        1959
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "7403": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1923,
        1959
      ],
      "op": "DUP5",
      "path": "8"
    },
    "7404": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1923,
        1959
      ],
      "op": "ADD",
      "path": "8"
    },
    "7405": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1923,
        1959
      ],
      "op": "RETURNDATACOPY",
      "path": "8"
    },
    "7406": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1923,
        1959
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1CF7"
    },
    "7409": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1923,
        1959
      ],
      "op": "JUMP",
      "path": "8"
    },
    "7410": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1923,
        1959
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "7411": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1923,
        1959
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x60"
    },
    "7413": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1923,
        1959
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "7414": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1923,
        1959
      ],
      "op": "POP",
      "path": "8"
    },
    "7415": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1923,
        1959
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "7416": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1923,
        1959
      ],
      "op": "POP",
      "path": "8"
    },
    "7417": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1885,
        1959
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "7418": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1885,
        1959
      ],
      "op": "POP",
      "path": "8"
    },
    "7419": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1885,
        1959
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "7420": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1885,
        1959
      ],
      "op": "POP",
      "path": "8"
    },
    "7421": {
      "branch": 99,
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1978,
        1985
      ],
      "op": "DUP2",
      "path": "8"
    },
    "7422": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1977,
        1985
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "7423": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1977,
        2001
      ],
      "op": "DUP1",
      "path": "8"
    },
    "7424": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1977,
        2001
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "7425": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1977,
        2001
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1D07"
    },
    "7428": {
      "branch": 99,
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1977,
        2001
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "7429": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1977,
        2001
      ],
      "op": "POP",
      "path": "8"
    },
    "7430": {
      "branch": 100,
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1989,
        2001
      ],
      "op": "DUP4",
      "path": "8"
    },
    "7431": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1977,
        2001
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "7432": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1973,
        2065
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "7433": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1973,
        2065
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1D2E"
    },
    "7436": {
      "branch": 100,
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1973,
        2065
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "7437": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2028,
        2049
      ],
      "op": "PUSH2",
      "path": "8",
      "statement": 67,
      "value": "0x1D15"
    },
    "7440": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2042,
        2048
      ],
      "op": "DUP2",
      "path": "8"
    },
    "7441": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2028,
        2041
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x20F3"
    },
    "7444": {
      "fn": "BaseBoringBatchable.batch",
      "jump": "i",
      "offset": [
        2028,
        2049
      ],
      "op": "JUMP",
      "path": "8"
    },
    "7445": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2028,
        2049
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "7446": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2021,
        2050
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "7448": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2021,
        2050
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "7449": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7453": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7455": {
      "op": "SHL"
    },
    "7456": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2021,
        2050
      ],
      "op": "DUP2",
      "path": "8"
    },
    "7457": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2021,
        2050
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "7458": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2021,
        2050
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "7460": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2021,
        2050
      ],
      "op": "ADD",
      "path": "8"
    },
    "7461": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2021,
        2050
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x588"
    },
    "7464": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2021,
        2050
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "7465": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2021,
        2050
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "7466": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2021,
        2050
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x25D6"
    },
    "7469": {
      "fn": "BaseBoringBatchable.batch",
      "jump": "i",
      "offset": [
        2021,
        2050
      ],
      "op": "JUMP",
      "path": "8"
    },
    "7470": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1973,
        2065
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "7471": {
      "op": "POP"
    },
    "7472": {
      "op": "POP"
    },
    "7473": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1866,
        1869
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 68,
      "value": "0x1"
    },
    "7475": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1866,
        1869
      ],
      "op": "ADD",
      "path": "8"
    },
    "7476": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1828,
        2075
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1C7E"
    },
    "7479": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1828,
        2075
      ],
      "op": "JUMP",
      "path": "8"
    },
    "7480": {
      "offset": [
        314,
        341
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "7481": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        314,
        341
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1"
    },
    "7483": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        314,
        341
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "7484": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7486": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7488": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7490": {
      "op": "SHL"
    },
    "7491": {
      "op": "SUB"
    },
    "7492": {
      "offset": [
        314,
        341
      ],
      "op": "AND",
      "path": "11"
    },
    "7493": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        314,
        341
      ],
      "op": "DUP2",
      "path": "11"
    },
    "7494": {
      "fn": "BaseBoringBatchable.batch",
      "jump": "o",
      "offset": [
        314,
        341
      ],
      "op": "JUMP",
      "path": "11"
    },
    "7495": {
      "fn": "BoringMath.mul",
      "offset": [
        520,
        673
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "7496": {
      "fn": "BoringMath.mul",
      "offset": [
        578,
        587
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "7498": {
      "fn": "BoringMath.mul",
      "offset": [
        607,
        613
      ],
      "op": "DUP2",
      "path": "17",
      "statement": 69
    },
    "7499": {
      "fn": "BoringMath.mul",
      "offset": [
        607,
        613
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "7500": {
      "branch": 108,
      "fn": "BoringMath.mul",
      "offset": [
        607,
        613
      ],
      "op": "DUP1",
      "path": "17"
    },
    "7501": {
      "fn": "BoringMath.mul",
      "offset": [
        607,
        637
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1D62"
    },
    "7504": {
      "branch": 108,
      "fn": "BoringMath.mul",
      "offset": [
        607,
        637
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "7505": {
      "op": "POP"
    },
    "7506": {
      "op": "POP"
    },
    "7507": {
      "fn": "BoringMath.mul",
      "offset": [
        622,
        627
      ],
      "op": "DUP1",
      "path": "17"
    },
    "7508": {
      "fn": "BoringMath.mul",
      "offset": [
        622,
        627
      ],
      "op": "DUP3",
      "path": "17"
    },
    "7509": {
      "fn": "BoringMath.mul",
      "offset": [
        622,
        627
      ],
      "op": "MUL",
      "path": "17"
    },
    "7510": {
      "fn": "BoringMath.mul",
      "offset": [
        636,
        637
      ],
      "op": "DUP3",
      "path": "17"
    },
    "7511": {
      "fn": "BoringMath.mul",
      "offset": [
        631,
        632
      ],
      "op": "DUP3",
      "path": "17"
    },
    "7512": {
      "fn": "BoringMath.mul",
      "offset": [
        622,
        627
      ],
      "op": "DUP3",
      "path": "17"
    },
    "7513": {
      "fn": "BoringMath.mul",
      "offset": [
        631,
        632
      ],
      "op": "DUP2",
      "path": "17"
    },
    "7514": {
      "fn": "BoringMath.mul",
      "offset": [
        617,
        632
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1D5F"
    },
    "7517": {
      "fn": "BoringMath.mul",
      "offset": [
        617,
        632
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "7518": {
      "dev": "Division by zero",
      "fn": "BoringMath.mul",
      "offset": [
        617,
        632
      ],
      "op": "INVALID",
      "path": "17"
    },
    "7519": {
      "fn": "BoringMath.mul",
      "offset": [
        617,
        632
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "7520": {
      "fn": "BoringMath.mul",
      "offset": [
        617,
        632
      ],
      "op": "DIV",
      "path": "17"
    },
    "7521": {
      "branch": 109,
      "fn": "BoringMath.mul",
      "offset": [
        617,
        637
      ],
      "op": "EQ",
      "path": "17"
    },
    "7522": {
      "fn": "BoringMath.mul",
      "offset": [
        607,
        637
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "7523": {
      "fn": "BoringMath.mul",
      "offset": [
        599,
        666
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1D7E"
    },
    "7526": {
      "branch": 109,
      "fn": "BoringMath.mul",
      "offset": [
        599,
        666
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "7527": {
      "fn": "BoringMath.mul",
      "offset": [
        599,
        666
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "7529": {
      "fn": "BoringMath.mul",
      "offset": [
        599,
        666
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "7530": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7534": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7536": {
      "op": "SHL"
    },
    "7537": {
      "fn": "BoringMath.mul",
      "offset": [
        599,
        666
      ],
      "op": "DUP2",
      "path": "17"
    },
    "7538": {
      "fn": "BoringMath.mul",
      "offset": [
        599,
        666
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "7539": {
      "fn": "BoringMath.mul",
      "offset": [
        599,
        666
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "7541": {
      "fn": "BoringMath.mul",
      "offset": [
        599,
        666
      ],
      "op": "ADD",
      "path": "17"
    },
    "7542": {
      "fn": "BoringMath.mul",
      "offset": [
        599,
        666
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x588"
    },
    "7545": {
      "fn": "BoringMath.mul",
      "offset": [
        599,
        666
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "7546": {
      "fn": "BoringMath.mul",
      "offset": [
        599,
        666
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x2939"
    },
    "7549": {
      "fn": "BoringMath.mul",
      "jump": "i",
      "offset": [
        599,
        666
      ],
      "op": "JUMP",
      "path": "17"
    },
    "7550": {
      "fn": "BoringMath.mul",
      "offset": [
        599,
        666
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "7551": {
      "fn": "BoringMath.mul",
      "offset": [
        520,
        673
      ],
      "op": "SWAP3",
      "path": "17"
    },
    "7552": {
      "fn": "BoringMath.mul",
      "offset": [
        520,
        673
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "7553": {
      "fn": "BoringMath.mul",
      "offset": [
        520,
        673
      ],
      "op": "POP",
      "path": "17"
    },
    "7554": {
      "fn": "BoringMath.mul",
      "offset": [
        520,
        673
      ],
      "op": "POP",
      "path": "17"
    },
    "7555": {
      "fn": "BoringMath.mul",
      "jump": "o",
      "offset": [
        520,
        673
      ],
      "op": "JUMP",
      "path": "17"
    },
    "7556": {
      "fn": "SignedSafeMath.sub",
      "offset": [
        1895,
        2108
      ],
      "op": "JUMPDEST",
      "path": "43"
    },
    "7557": {
      "fn": "SignedSafeMath.sub",
      "offset": [
        1951,
        1957
      ],
      "op": "PUSH1",
      "path": "43",
      "value": "0x0"
    },
    "7559": {
      "fn": "SignedSafeMath.sub",
      "offset": [
        1980,
        1985
      ],
      "op": "DUP2",
      "path": "43"
    },
    "7560": {
      "fn": "SignedSafeMath.sub",
      "offset": [
        1980,
        1985
      ],
      "op": "DUP4",
      "path": "43"
    },
    "7561": {
      "fn": "SignedSafeMath.sub",
      "offset": [
        1980,
        1985
      ],
      "op": "SUB",
      "path": "43"
    },
    "7562": {
      "fn": "SignedSafeMath.sub",
      "offset": [
        2004,
        2010
      ],
      "op": "DUP2",
      "path": "43",
      "statement": 70
    },
    "7563": {
      "fn": "SignedSafeMath.sub",
      "offset": [
        2004,
        2010
      ],
      "op": "DUP4",
      "path": "43"
    },
    "7564": {
      "fn": "SignedSafeMath.sub",
      "offset": [
        2004,
        2010
      ],
      "op": "SLT",
      "path": "43"
    },
    "7565": {
      "fn": "SignedSafeMath.sub",
      "offset": [
        2004,
        2010
      ],
      "op": "DUP1",
      "path": "43"
    },
    "7566": {
      "fn": "SignedSafeMath.sub",
      "offset": [
        2004,
        2010
      ],
      "op": "ISZERO",
      "path": "43"
    },
    "7567": {
      "branch": 119,
      "fn": "SignedSafeMath.sub",
      "offset": [
        2004,
        2010
      ],
      "op": "SWAP1",
      "path": "43"
    },
    "7568": {
      "fn": "SignedSafeMath.sub",
      "offset": [
        2004,
        2020
      ],
      "op": "PUSH2",
      "path": "43",
      "value": "0x1D99"
    },
    "7571": {
      "branch": 119,
      "fn": "SignedSafeMath.sub",
      "offset": [
        2004,
        2020
      ],
      "op": "JUMPI",
      "path": "43"
    },
    "7572": {
      "fn": "SignedSafeMath.sub",
      "offset": [
        2004,
        2020
      ],
      "op": "POP",
      "path": "43"
    },
    "7573": {
      "fn": "SignedSafeMath.sub",
      "offset": [
        2019,
        2020
      ],
      "op": "DUP4",
      "path": "43"
    },
    "7574": {
      "fn": "SignedSafeMath.sub",
      "offset": [
        2014,
        2015
      ],
      "op": "DUP2",
      "path": "43"
    },
    "7575": {
      "fn": "SignedSafeMath.sub",
      "offset": [
        2014,
        2020
      ],
      "op": "SGT",
      "path": "43"
    },
    "7576": {
      "branch": 120,
      "fn": "SignedSafeMath.sub",
      "offset": [
        2014,
        2020
      ],
      "op": "ISZERO",
      "path": "43"
    },
    "7577": {
      "fn": "SignedSafeMath.sub",
      "offset": [
        2004,
        2020
      ],
      "op": "JUMPDEST",
      "path": "43"
    },
    "7578": {
      "fn": "SignedSafeMath.sub",
      "offset": [
        2003,
        2041
      ],
      "op": "DUP1",
      "path": "43"
    },
    "7579": {
      "fn": "SignedSafeMath.sub",
      "offset": [
        2003,
        2041
      ],
      "op": "PUSH2",
      "path": "43",
      "value": "0x1DAE"
    },
    "7582": {
      "branch": 120,
      "fn": "SignedSafeMath.sub",
      "offset": [
        2003,
        2041
      ],
      "op": "JUMPI",
      "path": "43"
    },
    "7583": {
      "fn": "SignedSafeMath.sub",
      "offset": [
        2003,
        2041
      ],
      "op": "POP",
      "path": "43"
    },
    "7584": {
      "fn": "SignedSafeMath.sub",
      "offset": [
        2030,
        2031
      ],
      "op": "PUSH1",
      "path": "43",
      "value": "0x0"
    },
    "7586": {
      "fn": "SignedSafeMath.sub",
      "offset": [
        2026,
        2027
      ],
      "op": "DUP4",
      "path": "43"
    },
    "7587": {
      "branch": 121,
      "fn": "SignedSafeMath.sub",
      "offset": [
        2026,
        2031
      ],
      "op": "SLT",
      "path": "43"
    },
    "7588": {
      "fn": "SignedSafeMath.sub",
      "offset": [
        2026,
        2040
      ],
      "op": "DUP1",
      "path": "43"
    },
    "7589": {
      "fn": "SignedSafeMath.sub",
      "offset": [
        2026,
        2040
      ],
      "op": "ISZERO",
      "path": "43"
    },
    "7590": {
      "fn": "SignedSafeMath.sub",
      "offset": [
        2026,
        2040
      ],
      "op": "PUSH2",
      "path": "43",
      "value": "0x1DAE"
    },
    "7593": {
      "branch": 121,
      "fn": "SignedSafeMath.sub",
      "offset": [
        2026,
        2040
      ],
      "op": "JUMPI",
      "path": "43"
    },
    "7594": {
      "fn": "SignedSafeMath.sub",
      "offset": [
        2026,
        2040
      ],
      "op": "POP",
      "path": "43"
    },
    "7595": {
      "fn": "SignedSafeMath.sub",
      "offset": [
        2039,
        2040
      ],
      "op": "DUP4",
      "path": "43"
    },
    "7596": {
      "fn": "SignedSafeMath.sub",
      "offset": [
        2035,
        2036
      ],
      "op": "DUP2",
      "path": "43"
    },
    "7597": {
      "branch": 122,
      "fn": "SignedSafeMath.sub",
      "offset": [
        2035,
        2040
      ],
      "op": "SGT",
      "path": "43"
    },
    "7598": {
      "fn": "SignedSafeMath.sub",
      "offset": [
        2026,
        2040
      ],
      "op": "JUMPDEST",
      "path": "43"
    },
    "7599": {
      "fn": "SignedSafeMath.sub",
      "offset": [
        1995,
        2082
      ],
      "op": "PUSH2",
      "path": "43",
      "value": "0x1DCA"
    },
    "7602": {
      "branch": 122,
      "fn": "SignedSafeMath.sub",
      "offset": [
        1995,
        2082
      ],
      "op": "JUMPI",
      "path": "43"
    },
    "7603": {
      "fn": "SignedSafeMath.sub",
      "offset": [
        1995,
        2082
      ],
      "op": "PUSH1",
      "path": "43",
      "value": "0x40"
    },
    "7605": {
      "fn": "SignedSafeMath.sub",
      "offset": [
        1995,
        2082
      ],
      "op": "MLOAD",
      "path": "43"
    },
    "7606": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7610": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7612": {
      "op": "SHL"
    },
    "7613": {
      "fn": "SignedSafeMath.sub",
      "offset": [
        1995,
        2082
      ],
      "op": "DUP2",
      "path": "43"
    },
    "7614": {
      "fn": "SignedSafeMath.sub",
      "offset": [
        1995,
        2082
      ],
      "op": "MSTORE",
      "path": "43"
    },
    "7615": {
      "fn": "SignedSafeMath.sub",
      "offset": [
        1995,
        2082
      ],
      "op": "PUSH1",
      "path": "43",
      "value": "0x4"
    },
    "7617": {
      "fn": "SignedSafeMath.sub",
      "offset": [
        1995,
        2082
      ],
      "op": "ADD",
      "path": "43"
    },
    "7618": {
      "fn": "SignedSafeMath.sub",
      "offset": [
        1995,
        2082
      ],
      "op": "PUSH2",
      "path": "43",
      "value": "0x588"
    },
    "7621": {
      "fn": "SignedSafeMath.sub",
      "offset": [
        1995,
        2082
      ],
      "op": "SWAP1",
      "path": "43"
    },
    "7622": {
      "fn": "SignedSafeMath.sub",
      "offset": [
        1995,
        2082
      ],
      "op": "PUSH2",
      "path": "43",
      "value": "0x28C0"
    },
    "7625": {
      "fn": "SignedSafeMath.sub",
      "jump": "i",
      "offset": [
        1995,
        2082
      ],
      "op": "JUMP",
      "path": "43"
    },
    "7626": {
      "fn": "SignedSafeMath.sub",
      "offset": [
        1995,
        2082
      ],
      "op": "JUMPDEST",
      "path": "43"
    },
    "7627": {
      "fn": "SignedSafeMath.sub",
      "offset": [
        2100,
        2101
      ],
      "op": "SWAP4",
      "path": "43",
      "statement": 71
    },
    "7628": {
      "fn": "SignedSafeMath.sub",
      "offset": [
        1895,
        2108
      ],
      "op": "SWAP3",
      "path": "43"
    },
    "7629": {
      "op": "POP"
    },
    "7630": {
      "op": "POP"
    },
    "7631": {
      "op": "POP"
    },
    "7632": {
      "fn": "SignedSafeMath.sub",
      "jump": "o",
      "offset": [
        1895,
        2108
      ],
      "op": "JUMP",
      "path": "43"
    },
    "7633": {
      "fn": "BoringMath.sub",
      "offset": [
        378,
        514
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "7634": {
      "fn": "BoringMath.sub",
      "offset": [
        470,
        475
      ],
      "op": "DUP1",
      "path": "17",
      "statement": 72
    },
    "7635": {
      "fn": "BoringMath.sub",
      "offset": [
        470,
        475
      ],
      "op": "DUP3",
      "path": "17"
    },
    "7636": {
      "fn": "BoringMath.sub",
      "offset": [
        470,
        475
      ],
      "op": "SUB",
      "path": "17"
    },
    "7637": {
      "fn": "BoringMath.sub",
      "offset": [
        465,
        481
      ],
      "op": "DUP3",
      "path": "17"
    },
    "7638": {
      "fn": "BoringMath.sub",
      "offset": [
        465,
        481
      ],
      "op": "DUP2",
      "path": "17"
    },
    "7639": {
      "fn": "BoringMath.sub",
      "offset": [
        465,
        481
      ],
      "op": "GT",
      "path": "17"
    },
    "7640": {
      "branch": 110,
      "fn": "BoringMath.sub",
      "offset": [
        465,
        481
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "7641": {
      "fn": "BoringMath.sub",
      "offset": [
        457,
        507
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1D7E"
    },
    "7644": {
      "branch": 110,
      "fn": "BoringMath.sub",
      "offset": [
        457,
        507
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "7645": {
      "fn": "BoringMath.sub",
      "offset": [
        457,
        507
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "7647": {
      "fn": "BoringMath.sub",
      "offset": [
        457,
        507
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "7648": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7652": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7654": {
      "op": "SHL"
    },
    "7655": {
      "fn": "BoringMath.sub",
      "offset": [
        457,
        507
      ],
      "op": "DUP2",
      "path": "17"
    },
    "7656": {
      "fn": "BoringMath.sub",
      "offset": [
        457,
        507
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "7657": {
      "fn": "BoringMath.sub",
      "offset": [
        457,
        507
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "7659": {
      "fn": "BoringMath.sub",
      "offset": [
        457,
        507
      ],
      "op": "ADD",
      "path": "17"
    },
    "7660": {
      "fn": "BoringMath.sub",
      "offset": [
        457,
        507
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x588"
    },
    "7663": {
      "fn": "BoringMath.sub",
      "offset": [
        457,
        507
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "7664": {
      "fn": "BoringMath.sub",
      "offset": [
        457,
        507
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x2609"
    },
    "7667": {
      "fn": "BoringMath.sub",
      "jump": "i",
      "offset": [
        457,
        507
      ],
      "op": "JUMP",
      "path": "17"
    },
    "7668": {
      "fn": "BoringERC20.safeTransfer",
      "offset": [
        3434,
        3767
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "7669": {
      "fn": "BoringERC20.safeTransfer",
      "offset": [
        3548,
        3560
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "7671": {
      "fn": "BoringERC20.safeTransfer",
      "offset": [
        3562,
        3579
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x60"
    },
    "7673": {
      "fn": "BoringERC20.safeTransfer",
      "offset": [
        3591,
        3596
      ],
      "op": "DUP5",
      "path": "16"
    },
    "7674": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7676": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7678": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7680": {
      "op": "SHL"
    },
    "7681": {
      "op": "SUB"
    },
    "7682": {
      "fn": "BoringERC20.safeTransfer",
      "offset": [
        3583,
        3602
      ],
      "op": "AND",
      "path": "16"
    },
    "7683": {
      "offset": [
        473,
        483
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xA9059CBB"
    },
    "7688": {
      "fn": "BoringERC20.safeTransfer",
      "offset": [
        3626,
        3638
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xE0"
    },
    "7690": {
      "fn": "BoringERC20.safeTransfer",
      "offset": [
        3626,
        3638
      ],
      "op": "SHL",
      "path": "16"
    },
    "7691": {
      "fn": "BoringERC20.safeTransfer",
      "offset": [
        3640,
        3642
      ],
      "op": "DUP6",
      "path": "16"
    },
    "7692": {
      "fn": "BoringERC20.safeTransfer",
      "offset": [
        3644,
        3650
      ],
      "op": "DUP6",
      "path": "16"
    },
    "7693": {
      "fn": "BoringERC20.safeTransfer",
      "offset": [
        3603,
        3651
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "7695": {
      "fn": "BoringERC20.safeTransfer",
      "offset": [
        3603,
        3651
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "7696": {
      "fn": "BoringERC20.safeTransfer",
      "offset": [
        3603,
        3651
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x24"
    },
    "7698": {
      "fn": "BoringERC20.safeTransfer",
      "offset": [
        3603,
        3651
      ],
      "op": "ADD",
      "path": "16"
    },
    "7699": {
      "fn": "BoringERC20.safeTransfer",
      "offset": [
        3603,
        3651
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1E1D"
    },
    "7702": {
      "fn": "BoringERC20.safeTransfer",
      "offset": [
        3603,
        3651
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "7703": {
      "fn": "BoringERC20.safeTransfer",
      "offset": [
        3603,
        3651
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "7704": {
      "fn": "BoringERC20.safeTransfer",
      "offset": [
        3603,
        3651
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "7705": {
      "fn": "BoringERC20.safeTransfer",
      "offset": [
        3603,
        3651
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x25B2"
    },
    "7708": {
      "fn": "BoringERC20.safeTransfer",
      "jump": "i",
      "offset": [
        3603,
        3651
      ],
      "op": "JUMP",
      "path": "16"
    },
    "7709": {
      "fn": "BoringERC20.safeTransfer",
      "offset": [
        3603,
        3651
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "7710": {
      "fn": "BoringERC20.safeTransfer",
      "offset": [
        3603,
        3651
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "7712": {
      "fn": "BoringERC20.safeTransfer",
      "offset": [
        3603,
        3651
      ],
      "op": "DUP1",
      "path": "16"
    },
    "7713": {
      "fn": "BoringERC20.safeTransfer",
      "offset": [
        3603,
        3651
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "7714": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "7716": {
      "op": "NOT"
    },
    "7717": {
      "fn": "BoringERC20.safeTransfer",
      "offset": [
        3603,
        3651
      ],
      "op": "DUP2",
      "path": "16"
    },
    "7718": {
      "fn": "BoringERC20.safeTransfer",
      "offset": [
        3603,
        3651
      ],
      "op": "DUP5",
      "path": "16"
    },
    "7719": {
      "fn": "BoringERC20.safeTransfer",
      "offset": [
        3603,
        3651
      ],
      "op": "SUB",
      "path": "16"
    },
    "7720": {
      "fn": "BoringERC20.safeTransfer",
      "offset": [
        3603,
        3651
      ],
      "op": "ADD",
      "path": "16"
    },
    "7721": {
      "fn": "BoringERC20.safeTransfer",
      "offset": [
        3603,
        3651
      ],
      "op": "DUP2",
      "path": "16"
    },
    "7722": {
      "fn": "BoringERC20.safeTransfer",
      "offset": [
        3603,
        3651
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "7723": {
      "fn": "BoringERC20.safeTransfer",
      "offset": [
        3603,
        3651
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "7724": {
      "fn": "BoringERC20.safeTransfer",
      "offset": [
        3603,
        3651
      ],
      "op": "DUP2",
      "path": "16"
    },
    "7725": {
      "fn": "BoringERC20.safeTransfer",
      "offset": [
        3603,
        3651
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "7726": {
      "fn": "BoringERC20.safeTransfer",
      "offset": [
        3603,
        3651
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "7728": {
      "fn": "BoringERC20.safeTransfer",
      "offset": [
        3603,
        3651
      ],
      "op": "DUP3",
      "path": "16"
    },
    "7729": {
      "fn": "BoringERC20.safeTransfer",
      "offset": [
        3603,
        3651
      ],
      "op": "ADD",
      "path": "16"
    },
    "7730": {
      "fn": "BoringERC20.safeTransfer",
      "offset": [
        3603,
        3651
      ],
      "op": "DUP1",
      "path": "16"
    },
    "7731": {
      "fn": "BoringERC20.safeTransfer",
      "offset": [
        3603,
        3651
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "7732": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7734": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7736": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7738": {
      "op": "SHL"
    },
    "7739": {
      "op": "SUB"
    },
    "7740": {
      "fn": "BoringERC20.safeTransfer",
      "offset": [
        3603,
        3651
      ],
      "op": "AND",
      "path": "16"
    },
    "7741": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7743": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7745": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7747": {
      "op": "SHL"
    },
    "7748": {
      "op": "SUB"
    },
    "7749": {
      "op": "NOT"
    },
    "7750": {
      "fn": "BoringERC20.safeTransfer",
      "offset": [
        3603,
        3651
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "7751": {
      "fn": "BoringERC20.safeTransfer",
      "offset": [
        3603,
        3651
      ],
      "op": "SWAP5",
      "path": "16"
    },
    "7752": {
      "fn": "BoringERC20.safeTransfer",
      "offset": [
        3603,
        3651
      ],
      "op": "AND",
      "path": "16"
    },
    "7753": {
      "fn": "BoringERC20.safeTransfer",
      "offset": [
        3603,
        3651
      ],
      "op": "SWAP4",
      "path": "16"
    },
    "7754": {
      "fn": "BoringERC20.safeTransfer",
      "offset": [
        3603,
        3651
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "7755": {
      "fn": "BoringERC20.safeTransfer",
      "offset": [
        3603,
        3651
      ],
      "op": "SWAP4",
      "path": "16"
    },
    "7756": {
      "fn": "BoringERC20.safeTransfer",
      "offset": [
        3603,
        3651
      ],
      "op": "OR",
      "path": "16"
    },
    "7757": {
      "fn": "BoringERC20.safeTransfer",
      "offset": [
        3603,
        3651
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "7758": {
      "fn": "BoringERC20.safeTransfer",
      "offset": [
        3603,
        3651
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "7759": {
      "fn": "BoringERC20.safeTransfer",
      "offset": [
        3603,
        3651
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "7760": {
      "fn": "BoringERC20.safeTransfer",
      "offset": [
        3583,
        3652
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "7761": {
      "fn": "BoringERC20.safeTransfer",
      "offset": [
        3583,
        3652
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "7762": {
      "fn": "BoringERC20.safeTransfer",
      "offset": [
        3583,
        3652
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1E5B"
    },
    "7765": {
      "fn": "BoringERC20.safeTransfer",
      "offset": [
        3583,
        3652
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "7766": {
      "fn": "BoringERC20.safeTransfer",
      "offset": [
        3603,
        3651
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "7767": {
      "fn": "BoringERC20.safeTransfer",
      "offset": [
        3583,
        3652
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x251D"
    },
    "7770": {
      "fn": "BoringERC20.safeTransfer",
      "jump": "i",
      "offset": [
        3583,
        3652
      ],
      "op": "JUMP",
      "path": "16"
    },
    "7771": {
      "fn": "BoringERC20.safeTransfer",
      "offset": [
        3583,
        3652
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "7772": {
      "fn": "BoringERC20.safeTransfer",
      "offset": [
        3583,
        3652
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "7774": {
      "fn": "BoringERC20.safeTransfer",
      "offset": [
        3583,
        3652
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "7776": {
      "fn": "BoringERC20.safeTransfer",
      "offset": [
        3583,
        3652
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "7777": {
      "fn": "BoringERC20.safeTransfer",
      "offset": [
        3583,
        3652
      ],
      "op": "DUP1",
      "path": "16"
    },
    "7778": {
      "fn": "BoringERC20.safeTransfer",
      "offset": [
        3583,
        3652
      ],
      "op": "DUP4",
      "path": "16"
    },
    "7779": {
      "fn": "BoringERC20.safeTransfer",
      "offset": [
        3583,
        3652
      ],
      "op": "SUB",
      "path": "16"
    },
    "7780": {
      "fn": "BoringERC20.safeTransfer",
      "offset": [
        3583,
        3652
      ],
      "op": "DUP2",
      "path": "16"
    },
    "7781": {
      "fn": "BoringERC20.safeTransfer",
      "offset": [
        3583,
        3652
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "7783": {
      "fn": "BoringERC20.safeTransfer",
      "offset": [
        3583,
        3652
      ],
      "op": "DUP7",
      "path": "16"
    },
    "7784": {
      "fn": "BoringERC20.safeTransfer",
      "offset": [
        3583,
        3652
      ],
      "op": "GAS",
      "path": "16"
    },
    "7785": {
      "fn": "BoringERC20.safeTransfer",
      "offset": [
        3583,
        3652
      ],
      "op": "CALL",
      "path": "16"
    },
    "7786": {
      "fn": "BoringERC20.safeTransfer",
      "offset": [
        3583,
        3652
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "7787": {
      "fn": "BoringERC20.safeTransfer",
      "offset": [
        3583,
        3652
      ],
      "op": "POP",
      "path": "16"
    },
    "7788": {
      "fn": "BoringERC20.safeTransfer",
      "offset": [
        3583,
        3652
      ],
      "op": "POP",
      "path": "16"
    },
    "7789": {
      "fn": "BoringERC20.safeTransfer",
      "offset": [
        3583,
        3652
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "7790": {
      "fn": "BoringERC20.safeTransfer",
      "offset": [
        3583,
        3652
      ],
      "op": "DUP1",
      "path": "16"
    },
    "7791": {
      "fn": "BoringERC20.safeTransfer",
      "offset": [
        3583,
        3652
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "7793": {
      "fn": "BoringERC20.safeTransfer",
      "offset": [
        3583,
        3652
      ],
      "op": "DUP2",
      "path": "16"
    },
    "7794": {
      "fn": "BoringERC20.safeTransfer",
      "offset": [
        3583,
        3652
      ],
      "op": "EQ",
      "path": "16"
    },
    "7795": {
      "fn": "BoringERC20.safeTransfer",
      "offset": [
        3583,
        3652
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1E98"
    },
    "7798": {
      "fn": "BoringERC20.safeTransfer",
      "offset": [
        3583,
        3652
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "7799": {
      "fn": "BoringERC20.safeTransfer",
      "offset": [
        3583,
        3652
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "7801": {
      "fn": "BoringERC20.safeTransfer",
      "offset": [
        3583,
        3652
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "7802": {
      "fn": "BoringERC20.safeTransfer",
      "offset": [
        3583,
        3652
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "7803": {
      "fn": "BoringERC20.safeTransfer",
      "offset": [
        3583,
        3652
      ],
      "op": "POP",
      "path": "16"
    },
    "7804": {
      "fn": "BoringERC20.safeTransfer",
      "offset": [
        3583,
        3652
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1F"
    },
    "7806": {
      "fn": "BoringERC20.safeTransfer",
      "offset": [
        3583,
        3652
      ],
      "op": "NOT",
      "path": "16"
    },
    "7807": {
      "fn": "BoringERC20.safeTransfer",
      "offset": [
        3583,
        3652
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x3F"
    },
    "7809": {
      "fn": "BoringERC20.safeTransfer",
      "offset": [
        3583,
        3652
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "7810": {
      "fn": "BoringERC20.safeTransfer",
      "offset": [
        3583,
        3652
      ],
      "op": "ADD",
      "path": "16"
    },
    "7811": {
      "fn": "BoringERC20.safeTransfer",
      "offset": [
        3583,
        3652
      ],
      "op": "AND",
      "path": "16"
    },
    "7812": {
      "fn": "BoringERC20.safeTransfer",
      "offset": [
        3583,
        3652
      ],
      "op": "DUP3",
      "path": "16"
    },
    "7813": {
      "fn": "BoringERC20.safeTransfer",
      "offset": [
        3583,
        3652
      ],
      "op": "ADD",
      "path": "16"
    },
    "7814": {
      "fn": "BoringERC20.safeTransfer",
      "offset": [
        3583,
        3652
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "7816": {
      "fn": "BoringERC20.safeTransfer",
      "offset": [
        3583,
        3652
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "7817": {
      "fn": "BoringERC20.safeTransfer",
      "offset": [
        3583,
        3652
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "7818": {
      "fn": "BoringERC20.safeTransfer",
      "offset": [
        3583,
        3652
      ],
      "op": "DUP3",
      "path": "16"
    },
    "7819": {
      "fn": "BoringERC20.safeTransfer",
      "offset": [
        3583,
        3652
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "7820": {
      "fn": "BoringERC20.safeTransfer",
      "offset": [
        3583,
        3652
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "7821": {
      "fn": "BoringERC20.safeTransfer",
      "offset": [
        3583,
        3652
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "7823": {
      "fn": "BoringERC20.safeTransfer",
      "offset": [
        3583,
        3652
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "7825": {
      "fn": "BoringERC20.safeTransfer",
      "offset": [
        3583,
        3652
      ],
      "op": "DUP5",
      "path": "16"
    },
    "7826": {
      "fn": "BoringERC20.safeTransfer",
      "offset": [
        3583,
        3652
      ],
      "op": "ADD",
      "path": "16"
    },
    "7827": {
      "fn": "BoringERC20.safeTransfer",
      "offset": [
        3583,
        3652
      ],
      "op": "RETURNDATACOPY",
      "path": "16"
    },
    "7828": {
      "fn": "BoringERC20.safeTransfer",
      "offset": [
        3583,
        3652
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1E9D"
    },
    "7831": {
      "fn": "BoringERC20.safeTransfer",
      "offset": [
        3583,
        3652
      ],
      "op": "JUMP",
      "path": "16"
    },
    "7832": {
      "fn": "BoringERC20.safeTransfer",
      "offset": [
        3583,
        3652
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "7833": {
      "fn": "BoringERC20.safeTransfer",
      "offset": [
        3583,
        3652
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x60"
    },
    "7835": {
      "fn": "BoringERC20.safeTransfer",
      "offset": [
        3583,
        3652
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "7836": {
      "fn": "BoringERC20.safeTransfer",
      "offset": [
        3583,
        3652
      ],
      "op": "POP",
      "path": "16"
    },
    "7837": {
      "fn": "BoringERC20.safeTransfer",
      "offset": [
        3583,
        3652
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "7838": {
      "fn": "BoringERC20.safeTransfer",
      "offset": [
        3583,
        3652
      ],
      "op": "POP",
      "path": "16"
    },
    "7839": {
      "fn": "BoringERC20.safeTransfer",
      "offset": [
        3547,
        3652
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "7840": {
      "fn": "BoringERC20.safeTransfer",
      "offset": [
        3547,
        3652
      ],
      "op": "POP",
      "path": "16"
    },
    "7841": {
      "fn": "BoringERC20.safeTransfer",
      "offset": [
        3547,
        3652
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "7842": {
      "fn": "BoringERC20.safeTransfer",
      "offset": [
        3547,
        3652
      ],
      "op": "POP",
      "path": "16"
    },
    "7843": {
      "branch": 102,
      "fn": "BoringERC20.safeTransfer",
      "offset": [
        3670,
        3677
      ],
      "op": "DUP2",
      "path": "16",
      "statement": 73
    },
    "7844": {
      "fn": "BoringERC20.safeTransfer",
      "offset": [
        3670,
        3727
      ],
      "op": "DUP1",
      "path": "16"
    },
    "7845": {
      "fn": "BoringERC20.safeTransfer",
      "offset": [
        3670,
        3727
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "7846": {
      "fn": "BoringERC20.safeTransfer",
      "offset": [
        3670,
        3727
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1EC7"
    },
    "7849": {
      "branch": 102,
      "fn": "BoringERC20.safeTransfer",
      "offset": [
        3670,
        3727
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "7850": {
      "op": "POP"
    },
    "7851": {
      "fn": "BoringERC20.safeTransfer",
      "offset": [
        3682,
        3693
      ],
      "op": "DUP1",
      "path": "16"
    },
    "7852": {
      "fn": "BoringERC20.safeTransfer",
      "offset": [
        3682,
        3693
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "7853": {
      "fn": "BoringERC20.safeTransfer",
      "offset": [
        3682,
        3698
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "7854": {
      "branch": 103,
      "fn": "BoringERC20.safeTransfer",
      "offset": [
        3682,
        3698
      ],
      "op": "DUP1",
      "path": "16"
    },
    "7855": {
      "fn": "BoringERC20.safeTransfer",
      "offset": [
        3682,
        3726
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1EC7"
    },
    "7858": {
      "branch": 103,
      "fn": "BoringERC20.safeTransfer",
      "offset": [
        3682,
        3726
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "7859": {
      "fn": "BoringERC20.safeTransfer",
      "offset": [
        3682,
        3726
      ],
      "op": "POP",
      "path": "16"
    },
    "7860": {
      "fn": "BoringERC20.safeTransfer",
      "offset": [
        3713,
        3717
      ],
      "op": "DUP1",
      "path": "16"
    },
    "7861": {
      "fn": "BoringERC20.safeTransfer",
      "offset": [
        3702,
        3726
      ],
      "op": "DUP1",
      "path": "16"
    },
    "7862": {
      "fn": "BoringERC20.safeTransfer",
      "offset": [
        3702,
        3726
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "7864": {
      "fn": "BoringERC20.safeTransfer",
      "offset": [
        3702,
        3726
      ],
      "op": "ADD",
      "path": "16"
    },
    "7865": {
      "fn": "BoringERC20.safeTransfer",
      "offset": [
        3702,
        3726
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "7866": {
      "fn": "BoringERC20.safeTransfer",
      "offset": [
        3702,
        3726
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "7867": {
      "fn": "BoringERC20.safeTransfer",
      "offset": [
        3702,
        3726
      ],
      "op": "DUP2",
      "path": "16"
    },
    "7868": {
      "fn": "BoringERC20.safeTransfer",
      "offset": [
        3702,
        3726
      ],
      "op": "ADD",
      "path": "16"
    },
    "7869": {
      "fn": "BoringERC20.safeTransfer",
      "offset": [
        3702,
        3726
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "7870": {
      "fn": "BoringERC20.safeTransfer",
      "offset": [
        3702,
        3726
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1EC7"
    },
    "7873": {
      "fn": "BoringERC20.safeTransfer",
      "offset": [
        3702,
        3726
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "7874": {
      "fn": "BoringERC20.safeTransfer",
      "offset": [
        3702,
        3726
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "7875": {
      "fn": "BoringERC20.safeTransfer",
      "offset": [
        3702,
        3726
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x22A9"
    },
    "7878": {
      "fn": "BoringERC20.safeTransfer",
      "jump": "i",
      "offset": [
        3702,
        3726
      ],
      "op": "JUMP",
      "path": "16"
    },
    "7879": {
      "branch": 104,
      "fn": "BoringERC20.safeTransfer",
      "offset": [
        3702,
        3726
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "7880": {
      "fn": "BoringERC20.safeTransfer",
      "offset": [
        3662,
        3760
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1EE3"
    },
    "7883": {
      "branch": 104,
      "fn": "BoringERC20.safeTransfer",
      "offset": [
        3662,
        3760
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "7884": {
      "fn": "BoringERC20.safeTransfer",
      "offset": [
        3662,
        3760
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "7886": {
      "fn": "BoringERC20.safeTransfer",
      "offset": [
        3662,
        3760
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "7887": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7891": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7893": {
      "op": "SHL"
    },
    "7894": {
      "fn": "BoringERC20.safeTransfer",
      "offset": [
        3662,
        3760
      ],
      "op": "DUP2",
      "path": "16"
    },
    "7895": {
      "fn": "BoringERC20.safeTransfer",
      "offset": [
        3662,
        3760
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "7896": {
      "fn": "BoringERC20.safeTransfer",
      "offset": [
        3662,
        3760
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "7898": {
      "fn": "BoringERC20.safeTransfer",
      "offset": [
        3662,
        3760
      ],
      "op": "ADD",
      "path": "16"
    },
    "7899": {
      "fn": "BoringERC20.safeTransfer",
      "offset": [
        3662,
        3760
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x588"
    },
    "7902": {
      "fn": "BoringERC20.safeTransfer",
      "offset": [
        3662,
        3760
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "7903": {
      "fn": "BoringERC20.safeTransfer",
      "offset": [
        3662,
        3760
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x265D"
    },
    "7906": {
      "fn": "BoringERC20.safeTransfer",
      "jump": "i",
      "offset": [
        3662,
        3760
      ],
      "op": "JUMP",
      "path": "16"
    },
    "7907": {
      "fn": "BoringERC20.safeTransfer",
      "offset": [
        3662,
        3760
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "7908": {
      "fn": "BoringERC20.safeTransfer",
      "offset": [
        3434,
        3767
      ],
      "op": "POP",
      "path": "16"
    },
    "7909": {
      "fn": "BoringERC20.safeTransfer",
      "offset": [
        3434,
        3767
      ],
      "op": "POP",
      "path": "16"
    },
    "7910": {
      "fn": "BoringERC20.safeTransfer",
      "offset": [
        3434,
        3767
      ],
      "op": "POP",
      "path": "16"
    },
    "7911": {
      "fn": "BoringERC20.safeTransfer",
      "offset": [
        3434,
        3767
      ],
      "op": "POP",
      "path": "16"
    },
    "7912": {
      "fn": "BoringERC20.safeTransfer",
      "offset": [
        3434,
        3767
      ],
      "op": "POP",
      "path": "16"
    },
    "7913": {
      "fn": "BoringERC20.safeTransfer",
      "jump": "o",
      "offset": [
        3434,
        3767
      ],
      "op": "JUMP",
      "path": "16"
    },
    "7914": {
      "fn": "SignedSafeMath.toUInt256",
      "offset": [
        2557,
        2692
      ],
      "op": "JUMPDEST",
      "path": "43"
    },
    "7915": {
      "fn": "SignedSafeMath.toUInt256",
      "offset": [
        2609,
        2616
      ],
      "op": "PUSH1",
      "path": "43",
      "value": "0x0"
    },
    "7917": {
      "fn": "SignedSafeMath.toUInt256",
      "offset": [
        2641,
        2642
      ],
      "op": "DUP1",
      "path": "43",
      "statement": 74
    },
    "7918": {
      "fn": "SignedSafeMath.toUInt256",
      "offset": [
        2636,
        2637
      ],
      "op": "DUP3",
      "path": "43"
    },
    "7919": {
      "fn": "SignedSafeMath.toUInt256",
      "offset": [
        2636,
        2642
      ],
      "op": "SLT",
      "path": "43"
    },
    "7920": {
      "branch": 123,
      "fn": "SignedSafeMath.toUInt256",
      "offset": [
        2636,
        2642
      ],
      "op": "ISZERO",
      "path": "43"
    },
    "7921": {
      "fn": "SignedSafeMath.toUInt256",
      "offset": [
        2628,
        2658
      ],
      "op": "PUSH2",
      "path": "43",
      "value": "0x1F0C"
    },
    "7924": {
      "branch": 123,
      "fn": "SignedSafeMath.toUInt256",
      "offset": [
        2628,
        2658
      ],
      "op": "JUMPI",
      "path": "43"
    },
    "7925": {
      "fn": "SignedSafeMath.toUInt256",
      "offset": [
        2628,
        2658
      ],
      "op": "PUSH1",
      "path": "43",
      "value": "0x40"
    },
    "7927": {
      "fn": "SignedSafeMath.toUInt256",
      "offset": [
        2628,
        2658
      ],
      "op": "MLOAD",
      "path": "43"
    },
    "7928": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7932": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7934": {
      "op": "SHL"
    },
    "7935": {
      "fn": "SignedSafeMath.toUInt256",
      "offset": [
        2628,
        2658
      ],
      "op": "DUP2",
      "path": "43"
    },
    "7936": {
      "fn": "SignedSafeMath.toUInt256",
      "offset": [
        2628,
        2658
      ],
      "op": "MSTORE",
      "path": "43"
    },
    "7937": {
      "fn": "SignedSafeMath.toUInt256",
      "offset": [
        2628,
        2658
      ],
      "op": "PUSH1",
      "path": "43",
      "value": "0x4"
    },
    "7939": {
      "fn": "SignedSafeMath.toUInt256",
      "offset": [
        2628,
        2658
      ],
      "op": "ADD",
      "path": "43"
    },
    "7940": {
      "fn": "SignedSafeMath.toUInt256",
      "offset": [
        2628,
        2658
      ],
      "op": "PUSH2",
      "path": "43",
      "value": "0x588"
    },
    "7943": {
      "fn": "SignedSafeMath.toUInt256",
      "offset": [
        2628,
        2658
      ],
      "op": "SWAP1",
      "path": "43"
    },
    "7944": {
      "fn": "SignedSafeMath.toUInt256",
      "offset": [
        2628,
        2658
      ],
      "op": "PUSH2",
      "path": "43",
      "value": "0x2638"
    },
    "7947": {
      "fn": "SignedSafeMath.toUInt256",
      "jump": "i",
      "offset": [
        2628,
        2658
      ],
      "op": "JUMP",
      "path": "43"
    },
    "7948": {
      "fn": "SignedSafeMath.toUInt256",
      "offset": [
        2628,
        2658
      ],
      "op": "JUMPDEST",
      "path": "43"
    },
    "7949": {
      "op": "POP"
    },
    "7950": {
      "fn": "SignedSafeMath.toUInt256",
      "offset": [
        2683,
        2684
      ],
      "op": "SWAP1",
      "path": "43",
      "statement": 75
    },
    "7951": {
      "fn": "SignedSafeMath.toUInt256",
      "jump": "o",
      "offset": [
        2557,
        2692
      ],
      "op": "JUMP",
      "path": "43"
    },
    "7952": {
      "fn": "BoringMath.add",
      "offset": [
        233,
        372
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "7953": {
      "fn": "BoringMath.add",
      "offset": [
        325,
        330
      ],
      "op": "DUP2",
      "path": "17",
      "statement": 76
    },
    "7954": {
      "fn": "BoringMath.add",
      "offset": [
        325,
        330
      ],
      "op": "DUP2",
      "path": "17"
    },
    "7955": {
      "fn": "BoringMath.add",
      "offset": [
        325,
        330
      ],
      "op": "ADD",
      "path": "17"
    },
    "7956": {
      "fn": "BoringMath.add",
      "offset": [
        320,
        336
      ],
      "op": "DUP2",
      "path": "17"
    },
    "7957": {
      "fn": "BoringMath.add",
      "offset": [
        320,
        336
      ],
      "op": "DUP2",
      "path": "17"
    },
    "7958": {
      "fn": "BoringMath.add",
      "offset": [
        320,
        336
      ],
      "op": "LT",
      "path": "17"
    },
    "7959": {
      "branch": 111,
      "fn": "BoringMath.add",
      "offset": [
        320,
        336
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "7960": {
      "fn": "BoringMath.add",
      "offset": [
        312,
        365
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1D7E"
    },
    "7963": {
      "branch": 111,
      "fn": "BoringMath.add",
      "offset": [
        312,
        365
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "7964": {
      "fn": "BoringMath.add",
      "offset": [
        312,
        365
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "7966": {
      "fn": "BoringMath.add",
      "offset": [
        312,
        365
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "7967": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7971": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7973": {
      "op": "SHL"
    },
    "7974": {
      "fn": "BoringMath.add",
      "offset": [
        312,
        365
      ],
      "op": "DUP2",
      "path": "17"
    },
    "7975": {
      "fn": "BoringMath.add",
      "offset": [
        312,
        365
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "7976": {
      "fn": "BoringMath.add",
      "offset": [
        312,
        365
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "7978": {
      "fn": "BoringMath.add",
      "offset": [
        312,
        365
      ],
      "op": "ADD",
      "path": "17"
    },
    "7979": {
      "fn": "BoringMath.add",
      "offset": [
        312,
        365
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x588"
    },
    "7982": {
      "fn": "BoringMath.add",
      "offset": [
        312,
        365
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "7983": {
      "fn": "BoringMath.add",
      "offset": [
        312,
        365
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x2784"
    },
    "7986": {
      "fn": "BoringMath.add",
      "jump": "i",
      "offset": [
        312,
        365
      ],
      "op": "JUMP",
      "path": "17"
    },
    "7987": {
      "fn": "BoringMath.to128",
      "offset": [
        679,
        837
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "7988": {
      "fn": "BoringMath.to128",
      "offset": [
        728,
        737
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "7990": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7992": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7994": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "7996": {
      "op": "SHL"
    },
    "7997": {
      "op": "SUB"
    },
    "7998": {
      "fn": "BoringMath.to128",
      "offset": [
        757,
        773
      ],
      "op": "DUP3",
      "path": "17",
      "statement": 77
    },
    "7999": {
      "fn": "BoringMath.to128",
      "offset": [
        757,
        773
      ],
      "op": "GT",
      "path": "17"
    },
    "8000": {
      "branch": 112,
      "fn": "BoringMath.to128",
      "offset": [
        757,
        773
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "8001": {
      "fn": "BoringMath.to128",
      "offset": [
        749,
        806
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1F0C"
    },
    "8004": {
      "branch": 112,
      "fn": "BoringMath.to128",
      "offset": [
        749,
        806
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "8005": {
      "fn": "BoringMath.to128",
      "offset": [
        749,
        806
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "8007": {
      "fn": "BoringMath.to128",
      "offset": [
        749,
        806
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "8008": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8012": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8014": {
      "op": "SHL"
    },
    "8015": {
      "fn": "BoringMath.to128",
      "offset": [
        749,
        806
      ],
      "op": "DUP2",
      "path": "17"
    },
    "8016": {
      "fn": "BoringMath.to128",
      "offset": [
        749,
        806
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "8017": {
      "fn": "BoringMath.to128",
      "offset": [
        749,
        806
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "8019": {
      "fn": "BoringMath.to128",
      "offset": [
        749,
        806
      ],
      "op": "ADD",
      "path": "17"
    },
    "8020": {
      "fn": "BoringMath.to128",
      "offset": [
        749,
        806
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x588"
    },
    "8023": {
      "fn": "BoringMath.to128",
      "offset": [
        749,
        806
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "8024": {
      "fn": "BoringMath.to128",
      "offset": [
        749,
        806
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x274D"
    },
    "8027": {
      "fn": "BoringMath.to128",
      "jump": "i",
      "offset": [
        749,
        806
      ],
      "op": "JUMP",
      "path": "17"
    },
    "8028": {
      "fn": "BoringMath128.add",
      "offset": [
        1286,
        1425
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "8029": {
      "fn": "BoringMath128.add",
      "offset": [
        1378,
        1383
      ],
      "op": "DUP2",
      "path": "17",
      "statement": 78
    },
    "8030": {
      "fn": "BoringMath128.add",
      "offset": [
        1378,
        1383
      ],
      "op": "DUP2",
      "path": "17"
    },
    "8031": {
      "fn": "BoringMath128.add",
      "offset": [
        1378,
        1383
      ],
      "op": "ADD",
      "path": "17"
    },
    "8032": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8034": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8036": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "8038": {
      "op": "SHL"
    },
    "8039": {
      "op": "SUB"
    },
    "8040": {
      "fn": "BoringMath128.add",
      "offset": [
        1373,
        1389
      ],
      "op": "DUP1",
      "path": "17"
    },
    "8041": {
      "fn": "BoringMath128.add",
      "offset": [
        1373,
        1389
      ],
      "op": "DUP4",
      "path": "17"
    },
    "8042": {
      "fn": "BoringMath128.add",
      "offset": [
        1373,
        1389
      ],
      "op": "AND",
      "path": "17"
    },
    "8043": {
      "fn": "BoringMath128.add",
      "offset": [
        1373,
        1389
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "8044": {
      "fn": "BoringMath128.add",
      "offset": [
        1373,
        1389
      ],
      "op": "DUP3",
      "path": "17"
    },
    "8045": {
      "fn": "BoringMath128.add",
      "offset": [
        1373,
        1389
      ],
      "op": "AND",
      "path": "17"
    },
    "8046": {
      "fn": "BoringMath128.add",
      "offset": [
        1373,
        1389
      ],
      "op": "LT",
      "path": "17"
    },
    "8047": {
      "branch": 113,
      "fn": "BoringMath128.add",
      "offset": [
        1373,
        1389
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "8048": {
      "fn": "BoringMath128.add",
      "offset": [
        1365,
        1418
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1D7E"
    },
    "8051": {
      "branch": 113,
      "fn": "BoringMath128.add",
      "offset": [
        1365,
        1418
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "8052": {
      "fn": "BoringMath128.add",
      "offset": [
        1365,
        1418
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "8054": {
      "fn": "BoringMath128.add",
      "offset": [
        1365,
        1418
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "8055": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8059": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8061": {
      "op": "SHL"
    },
    "8062": {
      "fn": "BoringMath128.add",
      "offset": [
        1365,
        1418
      ],
      "op": "DUP2",
      "path": "17"
    },
    "8063": {
      "fn": "BoringMath128.add",
      "offset": [
        1365,
        1418
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "8064": {
      "fn": "BoringMath128.add",
      "offset": [
        1365,
        1418
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "8066": {
      "fn": "BoringMath128.add",
      "offset": [
        1365,
        1418
      ],
      "op": "ADD",
      "path": "17"
    },
    "8067": {
      "fn": "BoringMath128.add",
      "offset": [
        1365,
        1418
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x588"
    },
    "8070": {
      "fn": "BoringMath128.add",
      "offset": [
        1365,
        1418
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "8071": {
      "fn": "BoringMath128.add",
      "offset": [
        1365,
        1418
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x2784"
    },
    "8074": {
      "fn": "BoringMath128.add",
      "jump": "i",
      "offset": [
        1365,
        1418
      ],
      "op": "JUMP",
      "path": "17"
    },
    "8075": {
      "fn": "BoringMath.to64",
      "offset": [
        843,
        996
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "8076": {
      "fn": "BoringMath.to64",
      "offset": [
        891,
        899
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "8078": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8080": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8082": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8084": {
      "op": "SHL"
    },
    "8085": {
      "op": "SUB"
    },
    "8086": {
      "fn": "BoringMath.to64",
      "offset": [
        919,
        934
      ],
      "op": "DUP3",
      "path": "17",
      "statement": 79
    },
    "8087": {
      "fn": "BoringMath.to64",
      "offset": [
        919,
        934
      ],
      "op": "GT",
      "path": "17"
    },
    "8088": {
      "branch": 114,
      "fn": "BoringMath.to64",
      "offset": [
        919,
        934
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "8089": {
      "fn": "BoringMath.to64",
      "offset": [
        911,
        966
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1F0C"
    },
    "8092": {
      "branch": 114,
      "fn": "BoringMath.to64",
      "offset": [
        911,
        966
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "8093": {
      "fn": "BoringMath.to64",
      "offset": [
        911,
        966
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "8095": {
      "fn": "BoringMath.to64",
      "offset": [
        911,
        966
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "8096": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8100": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8102": {
      "op": "SHL"
    },
    "8103": {
      "fn": "BoringMath.to64",
      "offset": [
        911,
        966
      ],
      "op": "DUP2",
      "path": "17"
    },
    "8104": {
      "fn": "BoringMath.to64",
      "offset": [
        911,
        966
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "8105": {
      "fn": "BoringMath.to64",
      "offset": [
        911,
        966
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "8107": {
      "fn": "BoringMath.to64",
      "offset": [
        911,
        966
      ],
      "op": "ADD",
      "path": "17"
    },
    "8108": {
      "fn": "BoringMath.to64",
      "offset": [
        911,
        966
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x588"
    },
    "8111": {
      "fn": "BoringMath.to64",
      "offset": [
        911,
        966
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "8112": {
      "fn": "BoringMath.to64",
      "offset": [
        911,
        966
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x2852"
    },
    "8115": {
      "fn": "BoringMath.to64",
      "jump": "i",
      "offset": [
        911,
        966
      ],
      "op": "JUMP",
      "path": "17"
    },
    "8116": {
      "fn": "SignedSafeMath.add",
      "offset": [
        2341,
        2551
      ],
      "op": "JUMPDEST",
      "path": "43"
    },
    "8117": {
      "fn": "SignedSafeMath.add",
      "offset": [
        2397,
        2403
      ],
      "op": "PUSH1",
      "path": "43",
      "value": "0x0"
    },
    "8119": {
      "fn": "SignedSafeMath.add",
      "offset": [
        2426,
        2431
      ],
      "op": "DUP3",
      "path": "43"
    },
    "8120": {
      "fn": "SignedSafeMath.add",
      "offset": [
        2426,
        2431
      ],
      "op": "DUP3",
      "path": "43"
    },
    "8121": {
      "fn": "SignedSafeMath.add",
      "offset": [
        2426,
        2431
      ],
      "op": "ADD",
      "path": "43"
    },
    "8122": {
      "fn": "SignedSafeMath.add",
      "offset": [
        2450,
        2456
      ],
      "op": "DUP2",
      "path": "43",
      "statement": 80
    },
    "8123": {
      "fn": "SignedSafeMath.add",
      "offset": [
        2450,
        2456
      ],
      "op": "DUP4",
      "path": "43"
    },
    "8124": {
      "fn": "SignedSafeMath.add",
      "offset": [
        2450,
        2456
      ],
      "op": "SLT",
      "path": "43"
    },
    "8125": {
      "fn": "SignedSafeMath.add",
      "offset": [
        2450,
        2456
      ],
      "op": "DUP1",
      "path": "43"
    },
    "8126": {
      "fn": "SignedSafeMath.add",
      "offset": [
        2450,
        2456
      ],
      "op": "ISZERO",
      "path": "43"
    },
    "8127": {
      "branch": 124,
      "fn": "SignedSafeMath.add",
      "offset": [
        2450,
        2456
      ],
      "op": "SWAP1",
      "path": "43"
    },
    "8128": {
      "fn": "SignedSafeMath.add",
      "offset": [
        2450,
        2466
      ],
      "op": "PUSH2",
      "path": "43",
      "value": "0x1FC9"
    },
    "8131": {
      "branch": 124,
      "fn": "SignedSafeMath.add",
      "offset": [
        2450,
        2466
      ],
      "op": "JUMPI",
      "path": "43"
    },
    "8132": {
      "fn": "SignedSafeMath.add",
      "offset": [
        2450,
        2466
      ],
      "op": "POP",
      "path": "43"
    },
    "8133": {
      "fn": "SignedSafeMath.add",
      "offset": [
        2465,
        2466
      ],
      "op": "DUP4",
      "path": "43"
    },
    "8134": {
      "fn": "SignedSafeMath.add",
      "offset": [
        2460,
        2461
      ],
      "op": "DUP2",
      "path": "43"
    },
    "8135": {
      "fn": "SignedSafeMath.add",
      "offset": [
        2460,
        2466
      ],
      "op": "SLT",
      "path": "43"
    },
    "8136": {
      "branch": 125,
      "fn": "SignedSafeMath.add",
      "offset": [
        2460,
        2466
      ],
      "op": "ISZERO",
      "path": "43"
    },
    "8137": {
      "fn": "SignedSafeMath.add",
      "offset": [
        2450,
        2466
      ],
      "op": "JUMPDEST",
      "path": "43"
    },
    "8138": {
      "fn": "SignedSafeMath.add",
      "offset": [
        2449,
        2487
      ],
      "op": "DUP1",
      "path": "43"
    },
    "8139": {
      "fn": "SignedSafeMath.add",
      "offset": [
        2449,
        2487
      ],
      "op": "PUSH2",
      "path": "43",
      "value": "0x1FDE"
    },
    "8142": {
      "branch": 125,
      "fn": "SignedSafeMath.add",
      "offset": [
        2449,
        2487
      ],
      "op": "JUMPI",
      "path": "43"
    },
    "8143": {
      "fn": "SignedSafeMath.add",
      "offset": [
        2449,
        2487
      ],
      "op": "POP",
      "path": "43"
    },
    "8144": {
      "fn": "SignedSafeMath.add",
      "offset": [
        2476,
        2477
      ],
      "op": "PUSH1",
      "path": "43",
      "value": "0x0"
    },
    "8146": {
      "fn": "SignedSafeMath.add",
      "offset": [
        2472,
        2473
      ],
      "op": "DUP4",
      "path": "43"
    },
    "8147": {
      "branch": 126,
      "fn": "SignedSafeMath.add",
      "offset": [
        2472,
        2477
      ],
      "op": "SLT",
      "path": "43"
    },
    "8148": {
      "fn": "SignedSafeMath.add",
      "offset": [
        2472,
        2486
      ],
      "op": "DUP1",
      "path": "43"
    },
    "8149": {
      "fn": "SignedSafeMath.add",
      "offset": [
        2472,
        2486
      ],
      "op": "ISZERO",
      "path": "43"
    },
    "8150": {
      "fn": "SignedSafeMath.add",
      "offset": [
        2472,
        2486
      ],
      "op": "PUSH2",
      "path": "43",
      "value": "0x1FDE"
    },
    "8153": {
      "branch": 126,
      "fn": "SignedSafeMath.add",
      "offset": [
        2472,
        2486
      ],
      "op": "JUMPI",
      "path": "43"
    },
    "8154": {
      "fn": "SignedSafeMath.add",
      "offset": [
        2472,
        2486
      ],
      "op": "POP",
      "path": "43"
    },
    "8155": {
      "fn": "SignedSafeMath.add",
      "offset": [
        2485,
        2486
      ],
      "op": "DUP4",
      "path": "43"
    },
    "8156": {
      "fn": "SignedSafeMath.add",
      "offset": [
        2481,
        2482
      ],
      "op": "DUP2",
      "path": "43"
    },
    "8157": {
      "branch": 127,
      "fn": "SignedSafeMath.add",
      "offset": [
        2481,
        2486
      ],
      "op": "SLT",
      "path": "43"
    },
    "8158": {
      "fn": "SignedSafeMath.add",
      "offset": [
        2472,
        2486
      ],
      "op": "JUMPDEST",
      "path": "43"
    },
    "8159": {
      "fn": "SignedSafeMath.add",
      "offset": [
        2441,
        2525
      ],
      "op": "PUSH2",
      "path": "43",
      "value": "0x1DCA"
    },
    "8162": {
      "branch": 127,
      "fn": "SignedSafeMath.add",
      "offset": [
        2441,
        2525
      ],
      "op": "JUMPI",
      "path": "43"
    },
    "8163": {
      "fn": "SignedSafeMath.add",
      "offset": [
        2441,
        2525
      ],
      "op": "PUSH1",
      "path": "43",
      "value": "0x40"
    },
    "8165": {
      "fn": "SignedSafeMath.add",
      "offset": [
        2441,
        2525
      ],
      "op": "MLOAD",
      "path": "43"
    },
    "8166": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8170": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8172": {
      "op": "SHL"
    },
    "8173": {
      "fn": "SignedSafeMath.add",
      "offset": [
        2441,
        2525
      ],
      "op": "DUP2",
      "path": "43"
    },
    "8174": {
      "fn": "SignedSafeMath.add",
      "offset": [
        2441,
        2525
      ],
      "op": "MSTORE",
      "path": "43"
    },
    "8175": {
      "fn": "SignedSafeMath.add",
      "offset": [
        2441,
        2525
      ],
      "op": "PUSH1",
      "path": "43",
      "value": "0x4"
    },
    "8177": {
      "fn": "SignedSafeMath.add",
      "offset": [
        2441,
        2525
      ],
      "op": "ADD",
      "path": "43"
    },
    "8178": {
      "fn": "SignedSafeMath.add",
      "offset": [
        2441,
        2525
      ],
      "op": "PUSH2",
      "path": "43",
      "value": "0x588"
    },
    "8181": {
      "fn": "SignedSafeMath.add",
      "offset": [
        2441,
        2525
      ],
      "op": "SWAP1",
      "path": "43"
    },
    "8182": {
      "fn": "SignedSafeMath.add",
      "offset": [
        2441,
        2525
      ],
      "op": "PUSH2",
      "path": "43",
      "value": "0x2694"
    },
    "8185": {
      "fn": "SignedSafeMath.add",
      "jump": "i",
      "offset": [
        2441,
        2525
      ],
      "op": "JUMP",
      "path": "43"
    },
    "8186": {
      "fn": "BoringERC20.safeTransferFrom",
      "offset": [
        4082,
        4456
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "8187": {
      "fn": "BoringERC20.safeTransferFrom",
      "offset": [
        4222,
        4234
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "8189": {
      "fn": "BoringERC20.safeTransferFrom",
      "offset": [
        4236,
        4253
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x60"
    },
    "8191": {
      "fn": "BoringERC20.safeTransferFrom",
      "offset": [
        4265,
        4270
      ],
      "op": "DUP6",
      "path": "16"
    },
    "8192": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8194": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8196": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8198": {
      "op": "SHL"
    },
    "8199": {
      "op": "SUB"
    },
    "8200": {
      "fn": "BoringERC20.safeTransferFrom",
      "offset": [
        4257,
        4276
      ],
      "op": "AND",
      "path": "16"
    },
    "8201": {
      "offset": [
        562,
        572
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x23B872DD"
    },
    "8206": {
      "fn": "BoringERC20.safeTransferFrom",
      "offset": [
        4300,
        4317
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xE0"
    },
    "8208": {
      "fn": "BoringERC20.safeTransferFrom",
      "offset": [
        4300,
        4317
      ],
      "op": "SHL",
      "path": "16"
    },
    "8209": {
      "fn": "BoringERC20.safeTransferFrom",
      "offset": [
        4319,
        4323
      ],
      "op": "DUP7",
      "path": "16"
    },
    "8210": {
      "fn": "BoringERC20.safeTransferFrom",
      "offset": [
        4325,
        4327
      ],
      "op": "DUP7",
      "path": "16"
    },
    "8211": {
      "fn": "BoringERC20.safeTransferFrom",
      "offset": [
        4329,
        4335
      ],
      "op": "DUP7",
      "path": "16"
    },
    "8212": {
      "fn": "BoringERC20.safeTransferFrom",
      "offset": [
        4277,
        4336
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "8214": {
      "fn": "BoringERC20.safeTransferFrom",
      "offset": [
        4277,
        4336
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "8215": {
      "fn": "BoringERC20.safeTransferFrom",
      "offset": [
        4277,
        4336
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x24"
    },
    "8217": {
      "fn": "BoringERC20.safeTransferFrom",
      "offset": [
        4277,
        4336
      ],
      "op": "ADD",
      "path": "16"
    },
    "8218": {
      "fn": "BoringERC20.safeTransferFrom",
      "offset": [
        4277,
        4336
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2025"
    },
    "8221": {
      "fn": "BoringERC20.safeTransferFrom",
      "offset": [
        4277,
        4336
      ],
      "op": "SWAP4",
      "path": "16"
    },
    "8222": {
      "fn": "BoringERC20.safeTransferFrom",
      "offset": [
        4277,
        4336
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "8223": {
      "fn": "BoringERC20.safeTransferFrom",
      "offset": [
        4277,
        4336
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "8224": {
      "fn": "BoringERC20.safeTransferFrom",
      "offset": [
        4277,
        4336
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "8225": {
      "fn": "BoringERC20.safeTransferFrom",
      "offset": [
        4277,
        4336
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x254D"
    },
    "8228": {
      "fn": "BoringERC20.safeTransferFrom",
      "jump": "i",
      "offset": [
        4277,
        4336
      ],
      "op": "JUMP",
      "path": "16"
    },
    "8229": {
      "fn": "BoringERC20.safeTransferFrom",
      "offset": [
        4277,
        4336
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "8230": {
      "fn": "BoringERC20.safeTransferFrom",
      "offset": [
        4277,
        4336
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "8232": {
      "fn": "BoringERC20.safeTransferFrom",
      "offset": [
        4277,
        4336
      ],
      "op": "DUP1",
      "path": "16"
    },
    "8233": {
      "fn": "BoringERC20.safeTransferFrom",
      "offset": [
        4277,
        4336
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "8234": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "8236": {
      "op": "NOT"
    },
    "8237": {
      "fn": "BoringERC20.safeTransferFrom",
      "offset": [
        4277,
        4336
      ],
      "op": "DUP2",
      "path": "16"
    },
    "8238": {
      "fn": "BoringERC20.safeTransferFrom",
      "offset": [
        4277,
        4336
      ],
      "op": "DUP5",
      "path": "16"
    },
    "8239": {
      "fn": "BoringERC20.safeTransferFrom",
      "offset": [
        4277,
        4336
      ],
      "op": "SUB",
      "path": "16"
    },
    "8240": {
      "fn": "BoringERC20.safeTransferFrom",
      "offset": [
        4277,
        4336
      ],
      "op": "ADD",
      "path": "16"
    },
    "8241": {
      "fn": "BoringERC20.safeTransferFrom",
      "offset": [
        4277,
        4336
      ],
      "op": "DUP2",
      "path": "16"
    },
    "8242": {
      "fn": "BoringERC20.safeTransferFrom",
      "offset": [
        4277,
        4336
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "8243": {
      "fn": "BoringERC20.safeTransferFrom",
      "offset": [
        4277,
        4336
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "8244": {
      "fn": "BoringERC20.safeTransferFrom",
      "offset": [
        4277,
        4336
      ],
      "op": "DUP2",
      "path": "16"
    },
    "8245": {
      "fn": "BoringERC20.safeTransferFrom",
      "offset": [
        4277,
        4336
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "8246": {
      "fn": "BoringERC20.safeTransferFrom",
      "offset": [
        4277,
        4336
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "8248": {
      "fn": "BoringERC20.safeTransferFrom",
      "offset": [
        4277,
        4336
      ],
      "op": "DUP3",
      "path": "16"
    },
    "8249": {
      "fn": "BoringERC20.safeTransferFrom",
      "offset": [
        4277,
        4336
      ],
      "op": "ADD",
      "path": "16"
    },
    "8250": {
      "fn": "BoringERC20.safeTransferFrom",
      "offset": [
        4277,
        4336
      ],
      "op": "DUP1",
      "path": "16"
    },
    "8251": {
      "fn": "BoringERC20.safeTransferFrom",
      "offset": [
        4277,
        4336
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "8252": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8254": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8256": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "8258": {
      "op": "SHL"
    },
    "8259": {
      "op": "SUB"
    },
    "8260": {
      "fn": "BoringERC20.safeTransferFrom",
      "offset": [
        4277,
        4336
      ],
      "op": "AND",
      "path": "16"
    },
    "8261": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8263": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8265": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "8267": {
      "op": "SHL"
    },
    "8268": {
      "op": "SUB"
    },
    "8269": {
      "op": "NOT"
    },
    "8270": {
      "fn": "BoringERC20.safeTransferFrom",
      "offset": [
        4277,
        4336
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "8271": {
      "fn": "BoringERC20.safeTransferFrom",
      "offset": [
        4277,
        4336
      ],
      "op": "SWAP5",
      "path": "16"
    },
    "8272": {
      "fn": "BoringERC20.safeTransferFrom",
      "offset": [
        4277,
        4336
      ],
      "op": "AND",
      "path": "16"
    },
    "8273": {
      "fn": "BoringERC20.safeTransferFrom",
      "offset": [
        4277,
        4336
      ],
      "op": "SWAP4",
      "path": "16"
    },
    "8274": {
      "fn": "BoringERC20.safeTransferFrom",
      "offset": [
        4277,
        4336
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "8275": {
      "fn": "BoringERC20.safeTransferFrom",
      "offset": [
        4277,
        4336
      ],
      "op": "SWAP4",
      "path": "16"
    },
    "8276": {
      "fn": "BoringERC20.safeTransferFrom",
      "offset": [
        4277,
        4336
      ],
      "op": "OR",
      "path": "16"
    },
    "8277": {
      "fn": "BoringERC20.safeTransferFrom",
      "offset": [
        4277,
        4336
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "8278": {
      "fn": "BoringERC20.safeTransferFrom",
      "offset": [
        4277,
        4336
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "8279": {
      "fn": "BoringERC20.safeTransferFrom",
      "offset": [
        4277,
        4336
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "8280": {
      "fn": "BoringERC20.safeTransferFrom",
      "offset": [
        4257,
        4337
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "8281": {
      "fn": "BoringERC20.safeTransferFrom",
      "offset": [
        4257,
        4337
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "8282": {
      "fn": "BoringERC20.safeTransferFrom",
      "offset": [
        4257,
        4337
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2063"
    },
    "8285": {
      "fn": "BoringERC20.safeTransferFrom",
      "offset": [
        4257,
        4337
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "8286": {
      "fn": "BoringERC20.safeTransferFrom",
      "offset": [
        4277,
        4336
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "8287": {
      "fn": "BoringERC20.safeTransferFrom",
      "offset": [
        4257,
        4337
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x251D"
    },
    "8290": {
      "fn": "BoringERC20.safeTransferFrom",
      "jump": "i",
      "offset": [
        4257,
        4337
      ],
      "op": "JUMP",
      "path": "16"
    },
    "8291": {
      "fn": "BoringERC20.safeTransferFrom",
      "offset": [
        4257,
        4337
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "8292": {
      "fn": "BoringERC20.safeTransferFrom",
      "offset": [
        4257,
        4337
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "8294": {
      "fn": "BoringERC20.safeTransferFrom",
      "offset": [
        4257,
        4337
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "8296": {
      "fn": "BoringERC20.safeTransferFrom",
      "offset": [
        4257,
        4337
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "8297": {
      "fn": "BoringERC20.safeTransferFrom",
      "offset": [
        4257,
        4337
      ],
      "op": "DUP1",
      "path": "16"
    },
    "8298": {
      "fn": "BoringERC20.safeTransferFrom",
      "offset": [
        4257,
        4337
      ],
      "op": "DUP4",
      "path": "16"
    },
    "8299": {
      "fn": "BoringERC20.safeTransferFrom",
      "offset": [
        4257,
        4337
      ],
      "op": "SUB",
      "path": "16"
    },
    "8300": {
      "fn": "BoringERC20.safeTransferFrom",
      "offset": [
        4257,
        4337
      ],
      "op": "DUP2",
      "path": "16"
    },
    "8301": {
      "fn": "BoringERC20.safeTransferFrom",
      "offset": [
        4257,
        4337
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "8303": {
      "fn": "BoringERC20.safeTransferFrom",
      "offset": [
        4257,
        4337
      ],
      "op": "DUP7",
      "path": "16"
    },
    "8304": {
      "fn": "BoringERC20.safeTransferFrom",
      "offset": [
        4257,
        4337
      ],
      "op": "GAS",
      "path": "16"
    },
    "8305": {
      "fn": "BoringERC20.safeTransferFrom",
      "offset": [
        4257,
        4337
      ],
      "op": "CALL",
      "path": "16"
    },
    "8306": {
      "fn": "BoringERC20.safeTransferFrom",
      "offset": [
        4257,
        4337
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "8307": {
      "fn": "BoringERC20.safeTransferFrom",
      "offset": [
        4257,
        4337
      ],
      "op": "POP",
      "path": "16"
    },
    "8308": {
      "fn": "BoringERC20.safeTransferFrom",
      "offset": [
        4257,
        4337
      ],
      "op": "POP",
      "path": "16"
    },
    "8309": {
      "fn": "BoringERC20.safeTransferFrom",
      "offset": [
        4257,
        4337
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "8310": {
      "fn": "BoringERC20.safeTransferFrom",
      "offset": [
        4257,
        4337
      ],
      "op": "DUP1",
      "path": "16"
    },
    "8311": {
      "fn": "BoringERC20.safeTransferFrom",
      "offset": [
        4257,
        4337
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "8313": {
      "fn": "BoringERC20.safeTransferFrom",
      "offset": [
        4257,
        4337
      ],
      "op": "DUP2",
      "path": "16"
    },
    "8314": {
      "fn": "BoringERC20.safeTransferFrom",
      "offset": [
        4257,
        4337
      ],
      "op": "EQ",
      "path": "16"
    },
    "8315": {
      "fn": "BoringERC20.safeTransferFrom",
      "offset": [
        4257,
        4337
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x20A0"
    },
    "8318": {
      "fn": "BoringERC20.safeTransferFrom",
      "offset": [
        4257,
        4337
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "8319": {
      "fn": "BoringERC20.safeTransferFrom",
      "offset": [
        4257,
        4337
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "8321": {
      "fn": "BoringERC20.safeTransferFrom",
      "offset": [
        4257,
        4337
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "8322": {
      "fn": "BoringERC20.safeTransferFrom",
      "offset": [
        4257,
        4337
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "8323": {
      "fn": "BoringERC20.safeTransferFrom",
      "offset": [
        4257,
        4337
      ],
      "op": "POP",
      "path": "16"
    },
    "8324": {
      "fn": "BoringERC20.safeTransferFrom",
      "offset": [
        4257,
        4337
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1F"
    },
    "8326": {
      "fn": "BoringERC20.safeTransferFrom",
      "offset": [
        4257,
        4337
      ],
      "op": "NOT",
      "path": "16"
    },
    "8327": {
      "fn": "BoringERC20.safeTransferFrom",
      "offset": [
        4257,
        4337
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x3F"
    },
    "8329": {
      "fn": "BoringERC20.safeTransferFrom",
      "offset": [
        4257,
        4337
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "8330": {
      "fn": "BoringERC20.safeTransferFrom",
      "offset": [
        4257,
        4337
      ],
      "op": "ADD",
      "path": "16"
    },
    "8331": {
      "fn": "BoringERC20.safeTransferFrom",
      "offset": [
        4257,
        4337
      ],
      "op": "AND",
      "path": "16"
    },
    "8332": {
      "fn": "BoringERC20.safeTransferFrom",
      "offset": [
        4257,
        4337
      ],
      "op": "DUP3",
      "path": "16"
    },
    "8333": {
      "fn": "BoringERC20.safeTransferFrom",
      "offset": [
        4257,
        4337
      ],
      "op": "ADD",
      "path": "16"
    },
    "8334": {
      "fn": "BoringERC20.safeTransferFrom",
      "offset": [
        4257,
        4337
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "8336": {
      "fn": "BoringERC20.safeTransferFrom",
      "offset": [
        4257,
        4337
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "8337": {
      "fn": "BoringERC20.safeTransferFrom",
      "offset": [
        4257,
        4337
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "8338": {
      "fn": "BoringERC20.safeTransferFrom",
      "offset": [
        4257,
        4337
      ],
      "op": "DUP3",
      "path": "16"
    },
    "8339": {
      "fn": "BoringERC20.safeTransferFrom",
      "offset": [
        4257,
        4337
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "8340": {
      "fn": "BoringERC20.safeTransferFrom",
      "offset": [
        4257,
        4337
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "8341": {
      "fn": "BoringERC20.safeTransferFrom",
      "offset": [
        4257,
        4337
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "8343": {
      "fn": "BoringERC20.safeTransferFrom",
      "offset": [
        4257,
        4337
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "8345": {
      "fn": "BoringERC20.safeTransferFrom",
      "offset": [
        4257,
        4337
      ],
      "op": "DUP5",
      "path": "16"
    },
    "8346": {
      "fn": "BoringERC20.safeTransferFrom",
      "offset": [
        4257,
        4337
      ],
      "op": "ADD",
      "path": "16"
    },
    "8347": {
      "fn": "BoringERC20.safeTransferFrom",
      "offset": [
        4257,
        4337
      ],
      "op": "RETURNDATACOPY",
      "path": "16"
    },
    "8348": {
      "fn": "BoringERC20.safeTransferFrom",
      "offset": [
        4257,
        4337
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x20A5"
    },
    "8351": {
      "fn": "BoringERC20.safeTransferFrom",
      "offset": [
        4257,
        4337
      ],
      "op": "JUMP",
      "path": "16"
    },
    "8352": {
      "fn": "BoringERC20.safeTransferFrom",
      "offset": [
        4257,
        4337
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "8353": {
      "fn": "BoringERC20.safeTransferFrom",
      "offset": [
        4257,
        4337
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x60"
    },
    "8355": {
      "fn": "BoringERC20.safeTransferFrom",
      "offset": [
        4257,
        4337
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "8356": {
      "fn": "BoringERC20.safeTransferFrom",
      "offset": [
        4257,
        4337
      ],
      "op": "POP",
      "path": "16"
    },
    "8357": {
      "fn": "BoringERC20.safeTransferFrom",
      "offset": [
        4257,
        4337
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "8358": {
      "fn": "BoringERC20.safeTransferFrom",
      "offset": [
        4257,
        4337
      ],
      "op": "POP",
      "path": "16"
    },
    "8359": {
      "fn": "BoringERC20.safeTransferFrom",
      "offset": [
        4221,
        4337
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "8360": {
      "fn": "BoringERC20.safeTransferFrom",
      "offset": [
        4221,
        4337
      ],
      "op": "POP",
      "path": "16"
    },
    "8361": {
      "fn": "BoringERC20.safeTransferFrom",
      "offset": [
        4221,
        4337
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "8362": {
      "fn": "BoringERC20.safeTransferFrom",
      "offset": [
        4221,
        4337
      ],
      "op": "POP",
      "path": "16"
    },
    "8363": {
      "branch": 105,
      "fn": "BoringERC20.safeTransferFrom",
      "offset": [
        4355,
        4362
      ],
      "op": "DUP2",
      "path": "16",
      "statement": 81
    },
    "8364": {
      "fn": "BoringERC20.safeTransferFrom",
      "offset": [
        4355,
        4412
      ],
      "op": "DUP1",
      "path": "16"
    },
    "8365": {
      "fn": "BoringERC20.safeTransferFrom",
      "offset": [
        4355,
        4412
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "8366": {
      "fn": "BoringERC20.safeTransferFrom",
      "offset": [
        4355,
        4412
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x20CF"
    },
    "8369": {
      "branch": 105,
      "fn": "BoringERC20.safeTransferFrom",
      "offset": [
        4355,
        4412
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "8370": {
      "op": "POP"
    },
    "8371": {
      "fn": "BoringERC20.safeTransferFrom",
      "offset": [
        4367,
        4378
      ],
      "op": "DUP1",
      "path": "16"
    },
    "8372": {
      "fn": "BoringERC20.safeTransferFrom",
      "offset": [
        4367,
        4378
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "8373": {
      "fn": "BoringERC20.safeTransferFrom",
      "offset": [
        4367,
        4383
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "8374": {
      "branch": 106,
      "fn": "BoringERC20.safeTransferFrom",
      "offset": [
        4367,
        4383
      ],
      "op": "DUP1",
      "path": "16"
    },
    "8375": {
      "fn": "BoringERC20.safeTransferFrom",
      "offset": [
        4367,
        4411
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x20CF"
    },
    "8378": {
      "branch": 106,
      "fn": "BoringERC20.safeTransferFrom",
      "offset": [
        4367,
        4411
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "8379": {
      "fn": "BoringERC20.safeTransferFrom",
      "offset": [
        4367,
        4411
      ],
      "op": "POP",
      "path": "16"
    },
    "8380": {
      "fn": "BoringERC20.safeTransferFrom",
      "offset": [
        4398,
        4402
      ],
      "op": "DUP1",
      "path": "16"
    },
    "8381": {
      "fn": "BoringERC20.safeTransferFrom",
      "offset": [
        4387,
        4411
      ],
      "op": "DUP1",
      "path": "16"
    },
    "8382": {
      "fn": "BoringERC20.safeTransferFrom",
      "offset": [
        4387,
        4411
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "8384": {
      "fn": "BoringERC20.safeTransferFrom",
      "offset": [
        4387,
        4411
      ],
      "op": "ADD",
      "path": "16"
    },
    "8385": {
      "fn": "BoringERC20.safeTransferFrom",
      "offset": [
        4387,
        4411
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "8386": {
      "fn": "BoringERC20.safeTransferFrom",
      "offset": [
        4387,
        4411
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "8387": {
      "fn": "BoringERC20.safeTransferFrom",
      "offset": [
        4387,
        4411
      ],
      "op": "DUP2",
      "path": "16"
    },
    "8388": {
      "fn": "BoringERC20.safeTransferFrom",
      "offset": [
        4387,
        4411
      ],
      "op": "ADD",
      "path": "16"
    },
    "8389": {
      "fn": "BoringERC20.safeTransferFrom",
      "offset": [
        4387,
        4411
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "8390": {
      "fn": "BoringERC20.safeTransferFrom",
      "offset": [
        4387,
        4411
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x20CF"
    },
    "8393": {
      "fn": "BoringERC20.safeTransferFrom",
      "offset": [
        4387,
        4411
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "8394": {
      "fn": "BoringERC20.safeTransferFrom",
      "offset": [
        4387,
        4411
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "8395": {
      "fn": "BoringERC20.safeTransferFrom",
      "offset": [
        4387,
        4411
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x22A9"
    },
    "8398": {
      "fn": "BoringERC20.safeTransferFrom",
      "jump": "i",
      "offset": [
        4387,
        4411
      ],
      "op": "JUMP",
      "path": "16"
    },
    "8399": {
      "branch": 107,
      "fn": "BoringERC20.safeTransferFrom",
      "offset": [
        4387,
        4411
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "8400": {
      "fn": "BoringERC20.safeTransferFrom",
      "offset": [
        4347,
        4449
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x20EB"
    },
    "8403": {
      "branch": 107,
      "fn": "BoringERC20.safeTransferFrom",
      "offset": [
        4347,
        4449
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "8404": {
      "fn": "BoringERC20.safeTransferFrom",
      "offset": [
        4347,
        4449
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "8406": {
      "fn": "BoringERC20.safeTransferFrom",
      "offset": [
        4347,
        4449
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "8407": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8411": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8413": {
      "op": "SHL"
    },
    "8414": {
      "fn": "BoringERC20.safeTransferFrom",
      "offset": [
        4347,
        4449
      ],
      "op": "DUP2",
      "path": "16"
    },
    "8415": {
      "fn": "BoringERC20.safeTransferFrom",
      "offset": [
        4347,
        4449
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "8416": {
      "fn": "BoringERC20.safeTransferFrom",
      "offset": [
        4347,
        4449
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "8418": {
      "fn": "BoringERC20.safeTransferFrom",
      "offset": [
        4347,
        4449
      ],
      "op": "ADD",
      "path": "16"
    },
    "8419": {
      "fn": "BoringERC20.safeTransferFrom",
      "offset": [
        4347,
        4449
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x588"
    },
    "8422": {
      "fn": "BoringERC20.safeTransferFrom",
      "offset": [
        4347,
        4449
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "8423": {
      "fn": "BoringERC20.safeTransferFrom",
      "offset": [
        4347,
        4449
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2904"
    },
    "8426": {
      "fn": "BoringERC20.safeTransferFrom",
      "jump": "i",
      "offset": [
        4347,
        4449
      ],
      "op": "JUMP",
      "path": "16"
    },
    "8427": {
      "fn": "BoringERC20.safeTransferFrom",
      "offset": [
        4347,
        4449
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "8428": {
      "fn": "BoringERC20.safeTransferFrom",
      "offset": [
        4082,
        4456
      ],
      "op": "POP",
      "path": "16"
    },
    "8429": {
      "fn": "BoringERC20.safeTransferFrom",
      "offset": [
        4082,
        4456
      ],
      "op": "POP",
      "path": "16"
    },
    "8430": {
      "fn": "BoringERC20.safeTransferFrom",
      "offset": [
        4082,
        4456
      ],
      "op": "POP",
      "path": "16"
    },
    "8431": {
      "fn": "BoringERC20.safeTransferFrom",
      "offset": [
        4082,
        4456
      ],
      "op": "POP",
      "path": "16"
    },
    "8432": {
      "fn": "BoringERC20.safeTransferFrom",
      "offset": [
        4082,
        4456
      ],
      "op": "POP",
      "path": "16"
    },
    "8433": {
      "fn": "BoringERC20.safeTransferFrom",
      "offset": [
        4082,
        4456
      ],
      "op": "POP",
      "path": "16"
    },
    "8434": {
      "fn": "BoringERC20.safeTransferFrom",
      "jump": "o",
      "offset": [
        4082,
        4456
      ],
      "op": "JUMP",
      "path": "16"
    },
    "8435": {
      "fn": "BaseBoringBatchable._getRevertMsg",
      "offset": [
        635,
        1122
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "8436": {
      "fn": "BaseBoringBatchable._getRevertMsg",
      "offset": [
        707,
        720
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x60"
    },
    "8438": {
      "fn": "BaseBoringBatchable._getRevertMsg",
      "offset": [
        868,
        870
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x44"
    },
    "8440": {
      "fn": "BaseBoringBatchable._getRevertMsg",
      "offset": [
        847,
        858
      ],
      "op": "DUP3",
      "path": "8"
    },
    "8441": {
      "fn": "BaseBoringBatchable._getRevertMsg",
      "offset": [
        847,
        865
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "8442": {
      "branch": 101,
      "fn": "BaseBoringBatchable._getRevertMsg",
      "offset": [
        847,
        870
      ],
      "op": "LT",
      "path": "8"
    },
    "8443": {
      "fn": "BaseBoringBatchable._getRevertMsg",
      "offset": [
        843,
        910
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "8444": {
      "fn": "BaseBoringBatchable._getRevertMsg",
      "offset": [
        843,
        910
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x2139"
    },
    "8447": {
      "branch": 101,
      "fn": "BaseBoringBatchable._getRevertMsg",
      "offset": [
        843,
        910
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "8448": {
      "op": "POP"
    },
    "8449": {
      "fn": "BaseBoringBatchable._getRevertMsg",
      "offset": [
        872,
        910
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 82,
      "value": "0x40"
    },
    "8451": {
      "fn": "BaseBoringBatchable._getRevertMsg",
      "offset": [
        872,
        910
      ],
      "op": "DUP1",
      "path": "8"
    },
    "8452": {
      "fn": "BaseBoringBatchable._getRevertMsg",
      "offset": [
        872,
        910
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "8453": {
      "fn": "BaseBoringBatchable._getRevertMsg",
      "offset": [
        872,
        910
      ],
      "op": "DUP1",
      "path": "8"
    },
    "8454": {
      "fn": "BaseBoringBatchable._getRevertMsg",
      "offset": [
        872,
        910
      ],
      "op": "DUP3",
      "path": "8"
    },
    "8455": {
      "fn": "BaseBoringBatchable._getRevertMsg",
      "offset": [
        872,
        910
      ],
      "op": "ADD",
      "path": "8"
    },
    "8456": {
      "fn": "BaseBoringBatchable._getRevertMsg",
      "offset": [
        872,
        910
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "8457": {
      "fn": "BaseBoringBatchable._getRevertMsg",
      "offset": [
        872,
        910
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "8458": {
      "fn": "BaseBoringBatchable._getRevertMsg",
      "offset": [
        872,
        910
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "8459": {
      "fn": "BaseBoringBatchable._getRevertMsg",
      "offset": [
        872,
        910
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1D"
    },
    "8461": {
      "fn": "BaseBoringBatchable._getRevertMsg",
      "offset": [
        872,
        910
      ],
      "op": "DUP2",
      "path": "8"
    },
    "8462": {
      "fn": "BaseBoringBatchable._getRevertMsg",
      "offset": [
        872,
        910
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "8463": {
      "fn": "BaseBoringBatchable._getRevertMsg",
      "offset": [
        872,
        910
      ],
      "op": "PUSH32",
      "path": "8",
      "value": "0x5472616E73616374696F6E2072657665727465642073696C656E746C79000000"
    },
    "8496": {
      "fn": "BaseBoringBatchable._getRevertMsg",
      "offset": [
        872,
        910
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "8498": {
      "fn": "BaseBoringBatchable._getRevertMsg",
      "offset": [
        872,
        910
      ],
      "op": "DUP3",
      "path": "8"
    },
    "8499": {
      "fn": "BaseBoringBatchable._getRevertMsg",
      "offset": [
        872,
        910
      ],
      "op": "ADD",
      "path": "8"
    },
    "8500": {
      "fn": "BaseBoringBatchable._getRevertMsg",
      "offset": [
        872,
        910
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "8501": {
      "fn": "BaseBoringBatchable._getRevertMsg",
      "offset": [
        872,
        910
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x135C"
    },
    "8504": {
      "fn": "BaseBoringBatchable._getRevertMsg",
      "offset": [
        872,
        910
      ],
      "op": "JUMP",
      "path": "8"
    },
    "8505": {
      "fn": "BaseBoringBatchable._getRevertMsg",
      "offset": [
        843,
        910
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "8506": {
      "fn": "BaseBoringBatchable._getRevertMsg",
      "offset": [
        1010,
        1014
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "8508": {
      "fn": "BaseBoringBatchable._getRevertMsg",
      "offset": [
        997,
        1008
      ],
      "op": "DUP3",
      "path": "8"
    },
    "8509": {
      "fn": "BaseBoringBatchable._getRevertMsg",
      "offset": [
        993,
        1015
      ],
      "op": "ADD",
      "path": "8"
    },
    "8510": {
      "fn": "BaseBoringBatchable._getRevertMsg",
      "offset": [
        978,
        1015
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "8511": {
      "fn": "BaseBoringBatchable._getRevertMsg",
      "offset": [
        978,
        1015
      ],
      "op": "POP",
      "path": "8"
    },
    "8512": {
      "fn": "BaseBoringBatchable._getRevertMsg",
      "offset": [
        1052,
        1063
      ],
      "op": "DUP2",
      "path": "8",
      "statement": 83
    },
    "8513": {
      "fn": "BaseBoringBatchable._getRevertMsg",
      "offset": [
        1041,
        1074
      ],
      "op": "DUP1",
      "path": "8"
    },
    "8514": {
      "fn": "BaseBoringBatchable._getRevertMsg",
      "offset": [
        1041,
        1074
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "8516": {
      "fn": "BaseBoringBatchable._getRevertMsg",
      "offset": [
        1041,
        1074
      ],
      "op": "ADD",
      "path": "8"
    },
    "8517": {
      "fn": "BaseBoringBatchable._getRevertMsg",
      "offset": [
        1041,
        1074
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "8518": {
      "fn": "BaseBoringBatchable._getRevertMsg",
      "offset": [
        1041,
        1074
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "8519": {
      "fn": "BaseBoringBatchable._getRevertMsg",
      "offset": [
        1041,
        1074
      ],
      "op": "DUP2",
      "path": "8"
    },
    "8520": {
      "fn": "BaseBoringBatchable._getRevertMsg",
      "offset": [
        1041,
        1074
      ],
      "op": "ADD",
      "path": "8"
    },
    "8521": {
      "fn": "BaseBoringBatchable._getRevertMsg",
      "offset": [
        1041,
        1074
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "8522": {
      "fn": "BaseBoringBatchable._getRevertMsg",
      "offset": [
        1041,
        1074
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1D7E"
    },
    "8525": {
      "fn": "BaseBoringBatchable._getRevertMsg",
      "offset": [
        1041,
        1074
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "8526": {
      "fn": "BaseBoringBatchable._getRevertMsg",
      "offset": [
        1041,
        1074
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "8527": {
      "fn": "BaseBoringBatchable._getRevertMsg",
      "offset": [
        1041,
        1074
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x2368"
    },
    "8530": {
      "fn": "BaseBoringBatchable._getRevertMsg",
      "jump": "i",
      "offset": [
        1041,
        1074
      ],
      "op": "JUMP",
      "path": "8"
    },
    "8531": {
      "op": "JUMPDEST"
    },
    "8532": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8534": {
      "op": "DUP1"
    },
    "8535": {
      "op": "MLOAD"
    },
    "8536": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "8538": {
      "op": "DUP2"
    },
    "8539": {
      "op": "ADD"
    },
    "8540": {
      "op": "DUP3"
    },
    "8541": {
      "op": "MSTORE"
    },
    "8542": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8544": {
      "op": "DUP1"
    },
    "8545": {
      "op": "DUP3"
    },
    "8546": {
      "op": "MSTORE"
    },
    "8547": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8549": {
      "op": "DUP3"
    },
    "8550": {
      "op": "ADD"
    },
    "8551": {
      "op": "DUP2"
    },
    "8552": {
      "op": "SWAP1"
    },
    "8553": {
      "op": "MSTORE"
    },
    "8554": {
      "op": "SWAP2"
    },
    "8555": {
      "op": "DUP2"
    },
    "8556": {
      "op": "ADD"
    },
    "8557": {
      "op": "SWAP2"
    },
    "8558": {
      "op": "SWAP1"
    },
    "8559": {
      "op": "SWAP2"
    },
    "8560": {
      "op": "MSTORE"
    },
    "8561": {
      "op": "SWAP1"
    },
    "8562": {
      "op": "JUMP"
    },
    "8563": {
      "op": "JUMPDEST"
    },
    "8564": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8566": {
      "op": "DUP1"
    },
    "8567": {
      "op": "DUP4"
    },
    "8568": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "8570": {
      "op": "DUP5"
    },
    "8571": {
      "op": "ADD"
    },
    "8572": {
      "op": "SLT"
    },
    "8573": {
      "op": "PUSH2",
      "value": "0x2184"
    },
    "8576": {
      "op": "JUMPI"
    },
    "8577": {
      "op": "DUP2"
    },
    "8578": {
      "op": "DUP3"
    },
    "8579": {
      "op": "REVERT"
    },
    "8580": {
      "op": "JUMPDEST"
    },
    "8581": {
      "op": "POP"
    },
    "8582": {
      "op": "DUP2"
    },
    "8583": {
      "op": "CALLDATALOAD"
    },
    "8584": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8586": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8588": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8590": {
      "op": "SHL"
    },
    "8591": {
      "op": "SUB"
    },
    "8592": {
      "op": "DUP2"
    },
    "8593": {
      "op": "GT"
    },
    "8594": {
      "op": "ISZERO"
    },
    "8595": {
      "op": "PUSH2",
      "value": "0x219A"
    },
    "8598": {
      "op": "JUMPI"
    },
    "8599": {
      "op": "DUP2"
    },
    "8600": {
      "op": "DUP3"
    },
    "8601": {
      "op": "REVERT"
    },
    "8602": {
      "op": "JUMPDEST"
    },
    "8603": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8605": {
      "op": "DUP4"
    },
    "8606": {
      "op": "ADD"
    },
    "8607": {
      "op": "SWAP2"
    },
    "8608": {
      "op": "POP"
    },
    "8609": {
      "op": "DUP4"
    },
    "8610": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8612": {
      "op": "DUP1"
    },
    "8613": {
      "op": "DUP4"
    },
    "8614": {
      "op": "MUL"
    },
    "8615": {
      "op": "DUP6"
    },
    "8616": {
      "op": "ADD"
    },
    "8617": {
      "op": "ADD"
    },
    "8618": {
      "op": "GT"
    },
    "8619": {
      "op": "ISZERO"
    },
    "8620": {
      "op": "PUSH2",
      "value": "0x21B4"
    },
    "8623": {
      "op": "JUMPI"
    },
    "8624": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8626": {
      "op": "DUP1"
    },
    "8627": {
      "op": "REVERT"
    },
    "8628": {
      "op": "JUMPDEST"
    },
    "8629": {
      "op": "SWAP3"
    },
    "8630": {
      "op": "POP"
    },
    "8631": {
      "op": "SWAP3"
    },
    "8632": {
      "op": "SWAP1"
    },
    "8633": {
      "op": "POP"
    },
    "8634": {
      "op": "JUMP"
    },
    "8635": {
      "op": "JUMPDEST"
    },
    "8636": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8638": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8640": {
      "op": "DUP3"
    },
    "8641": {
      "op": "DUP5"
    },
    "8642": {
      "op": "SUB"
    },
    "8643": {
      "op": "SLT"
    },
    "8644": {
      "op": "ISZERO"
    },
    "8645": {
      "op": "PUSH2",
      "value": "0x21CC"
    },
    "8648": {
      "op": "JUMPI"
    },
    "8649": {
      "op": "DUP1"
    },
    "8650": {
      "op": "DUP2"
    },
    "8651": {
      "op": "REVERT"
    },
    "8652": {
      "op": "JUMPDEST"
    },
    "8653": {
      "op": "DUP2"
    },
    "8654": {
      "op": "CALLDATALOAD"
    },
    "8655": {
      "op": "PUSH2",
      "value": "0x1DCA"
    },
    "8658": {
      "op": "DUP2"
    },
    "8659": {
      "op": "PUSH2",
      "value": "0x2AC3"
    },
    "8662": {
      "op": "JUMP"
    },
    "8663": {
      "op": "JUMPDEST"
    },
    "8664": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8666": {
      "op": "DUP1"
    },
    "8667": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8669": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "8671": {
      "op": "DUP5"
    },
    "8672": {
      "op": "DUP7"
    },
    "8673": {
      "op": "SUB"
    },
    "8674": {
      "op": "SLT"
    },
    "8675": {
      "op": "ISZERO"
    },
    "8676": {
      "op": "PUSH2",
      "value": "0x21EB"
    },
    "8679": {
      "op": "JUMPI"
    },
    "8680": {
      "op": "DUP2"
    },
    "8681": {
      "op": "DUP3"
    },
    "8682": {
      "op": "REVERT"
    },
    "8683": {
      "op": "JUMPDEST"
    },
    "8684": {
      "op": "DUP4"
    },
    "8685": {
      "op": "CALLDATALOAD"
    },
    "8686": {
      "op": "PUSH2",
      "value": "0x21F6"
    },
    "8689": {
      "op": "DUP2"
    },
    "8690": {
      "op": "PUSH2",
      "value": "0x2AC3"
    },
    "8693": {
      "op": "JUMP"
    },
    "8694": {
      "op": "JUMPDEST"
    },
    "8695": {
      "op": "SWAP3"
    },
    "8696": {
      "op": "POP"
    },
    "8697": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8699": {
      "op": "DUP5"
    },
    "8700": {
      "op": "ADD"
    },
    "8701": {
      "op": "CALLDATALOAD"
    },
    "8702": {
      "op": "PUSH2",
      "value": "0x2206"
    },
    "8705": {
      "op": "DUP2"
    },
    "8706": {
      "op": "PUSH2",
      "value": "0x2ADB"
    },
    "8709": {
      "op": "JUMP"
    },
    "8710": {
      "op": "JUMPDEST"
    },
    "8711": {
      "op": "SWAP2"
    },
    "8712": {
      "op": "POP"
    },
    "8713": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8715": {
      "op": "DUP5"
    },
    "8716": {
      "op": "ADD"
    },
    "8717": {
      "op": "CALLDATALOAD"
    },
    "8718": {
      "op": "PUSH2",
      "value": "0x2216"
    },
    "8721": {
      "op": "DUP2"
    },
    "8722": {
      "op": "PUSH2",
      "value": "0x2ADB"
    },
    "8725": {
      "op": "JUMP"
    },
    "8726": {
      "op": "JUMPDEST"
    },
    "8727": {
      "op": "DUP1"
    },
    "8728": {
      "op": "SWAP2"
    },
    "8729": {
      "op": "POP"
    },
    "8730": {
      "op": "POP"
    },
    "8731": {
      "op": "SWAP3"
    },
    "8732": {
      "op": "POP"
    },
    "8733": {
      "op": "SWAP3"
    },
    "8734": {
      "op": "POP"
    },
    "8735": {
      "op": "SWAP3"
    },
    "8736": {
      "op": "JUMP"
    },
    "8737": {
      "op": "JUMPDEST"
    },
    "8738": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8740": {
      "op": "DUP1"
    },
    "8741": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8743": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8745": {
      "op": "DUP5"
    },
    "8746": {
      "op": "DUP7"
    },
    "8747": {
      "op": "SUB"
    },
    "8748": {
      "op": "SLT"
    },
    "8749": {
      "op": "ISZERO"
    },
    "8750": {
      "op": "PUSH2",
      "value": "0x2235"
    },
    "8753": {
      "op": "JUMPI"
    },
    "8754": {
      "op": "DUP3"
    },
    "8755": {
      "op": "DUP4"
    },
    "8756": {
      "op": "REVERT"
    },
    "8757": {
      "op": "JUMPDEST"
    },
    "8758": {
      "op": "DUP4"
    },
    "8759": {
      "op": "CALLDATALOAD"
    },
    "8760": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8762": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8764": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8766": {
      "op": "SHL"
    },
    "8767": {
      "op": "SUB"
    },
    "8768": {
      "op": "DUP2"
    },
    "8769": {
      "op": "GT"
    },
    "8770": {
      "op": "ISZERO"
    },
    "8771": {
      "op": "PUSH2",
      "value": "0x224A"
    },
    "8774": {
      "op": "JUMPI"
    },
    "8775": {
      "op": "DUP4"
    },
    "8776": {
      "op": "DUP5"
    },
    "8777": {
      "op": "REVERT"
    },
    "8778": {
      "op": "JUMPDEST"
    },
    "8779": {
      "op": "PUSH2",
      "value": "0x2256"
    },
    "8782": {
      "op": "DUP7"
    },
    "8783": {
      "op": "DUP3"
    },
    "8784": {
      "op": "DUP8"
    },
    "8785": {
      "op": "ADD"
    },
    "8786": {
      "op": "PUSH2",
      "value": "0x2173"
    },
    "8789": {
      "op": "JUMP"
    },
    "8790": {
      "op": "JUMPDEST"
    },
    "8791": {
      "op": "SWAP1"
    },
    "8792": {
      "op": "SWAP5"
    },
    "8793": {
      "op": "POP"
    },
    "8794": {
      "op": "SWAP3"
    },
    "8795": {
      "op": "POP"
    },
    "8796": {
      "op": "POP"
    },
    "8797": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8799": {
      "op": "DUP5"
    },
    "8800": {
      "op": "ADD"
    },
    "8801": {
      "op": "CALLDATALOAD"
    },
    "8802": {
      "op": "PUSH2",
      "value": "0x2216"
    },
    "8805": {
      "op": "DUP2"
    },
    "8806": {
      "op": "PUSH2",
      "value": "0x2ADB"
    },
    "8809": {
      "op": "JUMP"
    },
    "8810": {
      "op": "JUMPDEST"
    },
    "8811": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8813": {
      "op": "DUP1"
    },
    "8814": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8816": {
      "op": "DUP4"
    },
    "8817": {
      "op": "DUP6"
    },
    "8818": {
      "op": "SUB"
    },
    "8819": {
      "op": "SLT"
    },
    "8820": {
      "op": "ISZERO"
    },
    "8821": {
      "op": "PUSH2",
      "value": "0x227C"
    },
    "8824": {
      "op": "JUMPI"
    },
    "8825": {
      "op": "DUP2"
    },
    "8826": {
      "op": "DUP3"
    },
    "8827": {
      "op": "REVERT"
    },
    "8828": {
      "op": "JUMPDEST"
    },
    "8829": {
      "op": "DUP3"
    },
    "8830": {
      "op": "CALLDATALOAD"
    },
    "8831": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8833": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8835": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8837": {
      "op": "SHL"
    },
    "8838": {
      "op": "SUB"
    },
    "8839": {
      "op": "DUP2"
    },
    "8840": {
      "op": "GT"
    },
    "8841": {
      "op": "ISZERO"
    },
    "8842": {
      "op": "PUSH2",
      "value": "0x2291"
    },
    "8845": {
      "op": "JUMPI"
    },
    "8846": {
      "op": "DUP3"
    },
    "8847": {
      "op": "DUP4"
    },
    "8848": {
      "op": "REVERT"
    },
    "8849": {
      "op": "JUMPDEST"
    },
    "8850": {
      "op": "PUSH2",
      "value": "0x229D"
    },
    "8853": {
      "op": "DUP6"
    },
    "8854": {
      "op": "DUP3"
    },
    "8855": {
      "op": "DUP7"
    },
    "8856": {
      "op": "ADD"
    },
    "8857": {
      "op": "PUSH2",
      "value": "0x2173"
    },
    "8860": {
      "op": "JUMP"
    },
    "8861": {
      "op": "JUMPDEST"
    },
    "8862": {
      "op": "SWAP1"
    },
    "8863": {
      "op": "SWAP7"
    },
    "8864": {
      "op": "SWAP1"
    },
    "8865": {
      "op": "SWAP6"
    },
    "8866": {
      "op": "POP"
    },
    "8867": {
      "op": "SWAP4"
    },
    "8868": {
      "op": "POP"
    },
    "8869": {
      "op": "POP"
    },
    "8870": {
      "op": "POP"
    },
    "8871": {
      "op": "POP"
    },
    "8872": {
      "op": "JUMP"
    },
    "8873": {
      "op": "JUMPDEST"
    },
    "8874": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8876": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8878": {
      "op": "DUP3"
    },
    "8879": {
      "op": "DUP5"
    },
    "8880": {
      "op": "SUB"
    },
    "8881": {
      "op": "SLT"
    },
    "8882": {
      "op": "ISZERO"
    },
    "8883": {
      "op": "PUSH2",
      "value": "0x22BA"
    },
    "8886": {
      "op": "JUMPI"
    },
    "8887": {
      "op": "DUP1"
    },
    "8888": {
      "op": "DUP2"
    },
    "8889": {
      "op": "REVERT"
    },
    "8890": {
      "op": "JUMPDEST"
    },
    "8891": {
      "op": "DUP2"
    },
    "8892": {
      "op": "MLOAD"
    },
    "8893": {
      "op": "PUSH2",
      "value": "0x1DCA"
    },
    "8896": {
      "op": "DUP2"
    },
    "8897": {
      "op": "PUSH2",
      "value": "0x2ADB"
    },
    "8900": {
      "op": "JUMP"
    },
    "8901": {
      "op": "JUMPDEST"
    },
    "8902": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8904": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8906": {
      "op": "DUP3"
    },
    "8907": {
      "op": "DUP5"
    },
    "8908": {
      "op": "SUB"
    },
    "8909": {
      "op": "SLT"
    },
    "8910": {
      "op": "ISZERO"
    },
    "8911": {
      "op": "PUSH2",
      "value": "0x22D6"
    },
    "8914": {
      "op": "JUMPI"
    },
    "8915": {
      "op": "DUP1"
    },
    "8916": {
      "op": "DUP2"
    },
    "8917": {
      "op": "REVERT"
    },
    "8918": {
      "op": "JUMPDEST"
    },
    "8919": {
      "op": "DUP2"
    },
    "8920": {
      "op": "MLOAD"
    },
    "8921": {
      "op": "PUSH2",
      "value": "0x1DCA"
    },
    "8924": {
      "op": "DUP2"
    },
    "8925": {
      "op": "PUSH2",
      "value": "0x2AC3"
    },
    "8928": {
      "op": "JUMP"
    },
    "8929": {
      "op": "JUMPDEST"
    },
    "8930": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8932": {
      "op": "DUP1"
    },
    "8933": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8935": {
      "op": "DUP1"
    },
    "8936": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8938": {
      "op": "DUP1"
    },
    "8939": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8941": {
      "op": "DUP1"
    },
    "8942": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "8945": {
      "op": "DUP10"
    },
    "8946": {
      "op": "DUP12"
    },
    "8947": {
      "op": "SUB"
    },
    "8948": {
      "op": "SLT"
    },
    "8949": {
      "op": "ISZERO"
    },
    "8950": {
      "op": "PUSH2",
      "value": "0x22FD"
    },
    "8953": {
      "op": "JUMPI"
    },
    "8954": {
      "op": "DUP4"
    },
    "8955": {
      "op": "DUP5"
    },
    "8956": {
      "op": "REVERT"
    },
    "8957": {
      "op": "JUMPDEST"
    },
    "8958": {
      "op": "DUP9"
    },
    "8959": {
      "op": "CALLDATALOAD"
    },
    "8960": {
      "op": "PUSH2",
      "value": "0x2308"
    },
    "8963": {
      "op": "DUP2"
    },
    "8964": {
      "op": "PUSH2",
      "value": "0x2AC3"
    },
    "8967": {
      "op": "JUMP"
    },
    "8968": {
      "op": "JUMPDEST"
    },
    "8969": {
      "op": "SWAP8"
    },
    "8970": {
      "op": "POP"
    },
    "8971": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8973": {
      "op": "DUP10"
    },
    "8974": {
      "op": "ADD"
    },
    "8975": {
      "op": "CALLDATALOAD"
    },
    "8976": {
      "op": "PUSH2",
      "value": "0x2318"
    },
    "8979": {
      "op": "DUP2"
    },
    "8980": {
      "op": "PUSH2",
      "value": "0x2AC3"
    },
    "8983": {
      "op": "JUMP"
    },
    "8984": {
      "op": "JUMPDEST"
    },
    "8985": {
      "op": "SWAP7"
    },
    "8986": {
      "op": "POP"
    },
    "8987": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8989": {
      "op": "DUP10"
    },
    "8990": {
      "op": "ADD"
    },
    "8991": {
      "op": "CALLDATALOAD"
    },
    "8992": {
      "op": "PUSH2",
      "value": "0x2328"
    },
    "8995": {
      "op": "DUP2"
    },
    "8996": {
      "op": "PUSH2",
      "value": "0x2AC3"
    },
    "8999": {
      "op": "JUMP"
    },
    "9000": {
      "op": "JUMPDEST"
    },
    "9001": {
      "op": "SWAP6"
    },
    "9002": {
      "op": "POP"
    },
    "9003": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "9005": {
      "op": "DUP10"
    },
    "9006": {
      "op": "ADD"
    },
    "9007": {
      "op": "CALLDATALOAD"
    },
    "9008": {
      "op": "SWAP5"
    },
    "9009": {
      "op": "POP"
    },
    "9010": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "9012": {
      "op": "DUP10"
    },
    "9013": {
      "op": "ADD"
    },
    "9014": {
      "op": "CALLDATALOAD"
    },
    "9015": {
      "op": "SWAP4"
    },
    "9016": {
      "op": "POP"
    },
    "9017": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9019": {
      "op": "DUP10"
    },
    "9020": {
      "op": "ADD"
    },
    "9021": {
      "op": "CALLDATALOAD"
    },
    "9022": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "9024": {
      "op": "DUP2"
    },
    "9025": {
      "op": "AND"
    },
    "9026": {
      "op": "DUP2"
    },
    "9027": {
      "op": "EQ"
    },
    "9028": {
      "op": "PUSH2",
      "value": "0x234B"
    },
    "9031": {
      "op": "JUMPI"
    },
    "9032": {
      "op": "DUP4"
    },
    "9033": {
      "op": "DUP5"
    },
    "9034": {
      "op": "REVERT"
    },
    "9035": {
      "op": "JUMPDEST"
    },
    "9036": {
      "op": "SWAP8"
    },
    "9037": {
      "op": "SWAP11"
    },
    "9038": {
      "op": "SWAP7"
    },
    "9039": {
      "op": "SWAP10"
    },
    "9040": {
      "op": "POP"
    },
    "9041": {
      "op": "SWAP5"
    },
    "9042": {
      "op": "SWAP8"
    },
    "9043": {
      "op": "SWAP4"
    },
    "9044": {
      "op": "SWAP7"
    },
    "9045": {
      "op": "SWAP3"
    },
    "9046": {
      "op": "SWAP6"
    },
    "9047": {
      "op": "SWAP3"
    },
    "9048": {
      "op": "SWAP5"
    },
    "9049": {
      "op": "POP"
    },
    "9050": {
      "op": "POP"
    },
    "9051": {
      "op": "POP"
    },
    "9052": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "9054": {
      "op": "DUP3"
    },
    "9055": {
      "op": "ADD"
    },
    "9056": {
      "op": "CALLDATALOAD"
    },
    "9057": {
      "op": "SWAP2"
    },
    "9058": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "9060": {
      "op": "ADD"
    },
    "9061": {
      "op": "CALLDATALOAD"
    },
    "9062": {
      "op": "SWAP1"
    },
    "9063": {
      "op": "JUMP"
    },
    "9064": {
      "op": "JUMPDEST"
    },
    "9065": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9067": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9069": {
      "op": "DUP3"
    },
    "9070": {
      "op": "DUP5"
    },
    "9071": {
      "op": "SUB"
    },
    "9072": {
      "op": "SLT"
    },
    "9073": {
      "op": "ISZERO"
    },
    "9074": {
      "op": "PUSH2",
      "value": "0x2379"
    },
    "9077": {
      "op": "JUMPI"
    },
    "9078": {
      "op": "DUP1"
    },
    "9079": {
      "op": "DUP2"
    },
    "9080": {
      "op": "REVERT"
    },
    "9081": {
      "op": "JUMPDEST"
    },
    "9082": {
      "op": "DUP2"
    },
    "9083": {
      "op": "MLOAD"
    },
    "9084": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9086": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9088": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9090": {
      "op": "SHL"
    },
    "9091": {
      "op": "SUB"
    },
    "9092": {
      "op": "DUP1"
    },
    "9093": {
      "op": "DUP3"
    },
    "9094": {
      "op": "GT"
    },
    "9095": {
      "op": "ISZERO"
    },
    "9096": {
      "op": "PUSH2",
      "value": "0x238F"
    },
    "9099": {
      "op": "JUMPI"
    },
    "9100": {
      "op": "DUP3"
    },
    "9101": {
      "op": "DUP4"
    },
    "9102": {
      "op": "REVERT"
    },
    "9103": {
      "op": "JUMPDEST"
    },
    "9104": {
      "op": "DUP2"
    },
    "9105": {
      "op": "DUP5"
    },
    "9106": {
      "op": "ADD"
    },
    "9107": {
      "op": "SWAP2"
    },
    "9108": {
      "op": "POP"
    },
    "9109": {
      "op": "DUP5"
    },
    "9110": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "9112": {
      "op": "DUP4"
    },
    "9113": {
      "op": "ADD"
    },
    "9114": {
      "op": "SLT"
    },
    "9115": {
      "op": "PUSH2",
      "value": "0x23A2"
    },
    "9118": {
      "op": "JUMPI"
    },
    "9119": {
      "op": "DUP3"
    },
    "9120": {
      "op": "DUP4"
    },
    "9121": {
      "op": "REVERT"
    },
    "9122": {
      "op": "JUMPDEST"
    },
    "9123": {
      "op": "DUP2"
    },
    "9124": {
      "op": "MLOAD"
    },
    "9125": {
      "op": "DUP2"
    },
    "9126": {
      "op": "DUP2"
    },
    "9127": {
      "op": "GT"
    },
    "9128": {
      "op": "ISZERO"
    },
    "9129": {
      "op": "PUSH2",
      "value": "0x23B0"
    },
    "9132": {
      "op": "JUMPI"
    },
    "9133": {
      "op": "DUP4"
    },
    "9134": {
      "op": "DUP5"
    },
    "9135": {
      "op": "REVERT"
    },
    "9136": {
      "op": "JUMPDEST"
    },
    "9137": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9139": {
      "op": "MLOAD"
    },
    "9140": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "9142": {
      "op": "DUP3"
    },
    "9143": {
      "op": "ADD"
    },
    "9144": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "9146": {
      "op": "NOT"
    },
    "9147": {
      "op": "AND"
    },
    "9148": {
      "op": "DUP2"
    },
    "9149": {
      "op": "ADD"
    },
    "9150": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9152": {
      "op": "ADD"
    },
    "9153": {
      "op": "DUP4"
    },
    "9154": {
      "op": "DUP2"
    },
    "9155": {
      "op": "GT"
    },
    "9156": {
      "op": "DUP3"
    },
    "9157": {
      "op": "DUP3"
    },
    "9158": {
      "op": "LT"
    },
    "9159": {
      "op": "OR"
    },
    "9160": {
      "op": "ISZERO"
    },
    "9161": {
      "op": "PUSH2",
      "value": "0x23D0"
    },
    "9164": {
      "op": "JUMPI"
    },
    "9165": {
      "op": "DUP6"
    },
    "9166": {
      "op": "DUP7"
    },
    "9167": {
      "op": "REVERT"
    },
    "9168": {
      "op": "JUMPDEST"
    },
    "9169": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9171": {
      "op": "MSTORE"
    },
    "9172": {
      "op": "DUP2"
    },
    "9173": {
      "op": "DUP2"
    },
    "9174": {
      "op": "MSTORE"
    },
    "9175": {
      "op": "DUP4"
    },
    "9176": {
      "op": "DUP3"
    },
    "9177": {
      "op": "ADD"
    },
    "9178": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9180": {
      "op": "ADD"
    },
    "9181": {
      "op": "DUP8"
    },
    "9182": {
      "op": "LT"
    },
    "9183": {
      "op": "ISZERO"
    },
    "9184": {
      "op": "PUSH2",
      "value": "0x23E7"
    },
    "9187": {
      "op": "JUMPI"
    },
    "9188": {
      "op": "DUP5"
    },
    "9189": {
      "op": "DUP6"
    },
    "9190": {
      "op": "REVERT"
    },
    "9191": {
      "op": "JUMPDEST"
    },
    "9192": {
      "op": "PUSH2",
      "value": "0x23F8"
    },
    "9195": {
      "op": "DUP3"
    },
    "9196": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9198": {
      "op": "DUP4"
    },
    "9199": {
      "op": "ADD"
    },
    "9200": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9202": {
      "op": "DUP8"
    },
    "9203": {
      "op": "ADD"
    },
    "9204": {
      "op": "PUSH2",
      "value": "0x2A97"
    },
    "9207": {
      "op": "JUMP"
    },
    "9208": {
      "op": "JUMPDEST"
    },
    "9209": {
      "op": "SWAP7"
    },
    "9210": {
      "op": "SWAP6"
    },
    "9211": {
      "op": "POP"
    },
    "9212": {
      "op": "POP"
    },
    "9213": {
      "op": "POP"
    },
    "9214": {
      "op": "POP"
    },
    "9215": {
      "op": "POP"
    },
    "9216": {
      "op": "POP"
    },
    "9217": {
      "op": "JUMP"
    },
    "9218": {
      "op": "JUMPDEST"
    },
    "9219": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9221": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9223": {
      "op": "DUP3"
    },
    "9224": {
      "op": "DUP5"
    },
    "9225": {
      "op": "SUB"
    },
    "9226": {
      "op": "SLT"
    },
    "9227": {
      "op": "ISZERO"
    },
    "9228": {
      "op": "PUSH2",
      "value": "0x2413"
    },
    "9231": {
      "op": "JUMPI"
    },
    "9232": {
      "op": "DUP1"
    },
    "9233": {
      "op": "DUP2"
    },
    "9234": {
      "op": "REVERT"
    },
    "9235": {
      "op": "JUMPDEST"
    },
    "9236": {
      "op": "POP"
    },
    "9237": {
      "op": "CALLDATALOAD"
    },
    "9238": {
      "op": "SWAP2"
    },
    "9239": {
      "op": "SWAP1"
    },
    "9240": {
      "op": "POP"
    },
    "9241": {
      "op": "JUMP"
    },
    "9242": {
      "op": "JUMPDEST"
    },
    "9243": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9245": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9247": {
      "op": "DUP3"
    },
    "9248": {
      "op": "DUP5"
    },
    "9249": {
      "op": "SUB"
    },
    "9250": {
      "op": "SLT"
    },
    "9251": {
      "op": "ISZERO"
    },
    "9252": {
      "op": "PUSH2",
      "value": "0x242B"
    },
    "9255": {
      "op": "JUMPI"
    },
    "9256": {
      "op": "DUP1"
    },
    "9257": {
      "op": "DUP2"
    },
    "9258": {
      "op": "REVERT"
    },
    "9259": {
      "op": "JUMPDEST"
    },
    "9260": {
      "op": "POP"
    },
    "9261": {
      "op": "MLOAD"
    },
    "9262": {
      "op": "SWAP2"
    },
    "9263": {
      "op": "SWAP1"
    },
    "9264": {
      "op": "POP"
    },
    "9265": {
      "op": "JUMP"
    },
    "9266": {
      "op": "JUMPDEST"
    },
    "9267": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9269": {
      "op": "DUP1"
    },
    "9270": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9272": {
      "op": "DUP4"
    },
    "9273": {
      "op": "DUP6"
    },
    "9274": {
      "op": "SUB"
    },
    "9275": {
      "op": "SLT"
    },
    "9276": {
      "op": "ISZERO"
    },
    "9277": {
      "op": "PUSH2",
      "value": "0x2444"
    },
    "9280": {
      "op": "JUMPI"
    },
    "9281": {
      "op": "DUP2"
    },
    "9282": {
      "op": "DUP3"
    },
    "9283": {
      "op": "REVERT"
    },
    "9284": {
      "op": "JUMPDEST"
    },
    "9285": {
      "op": "DUP3"
    },
    "9286": {
      "op": "CALLDATALOAD"
    },
    "9287": {
      "op": "SWAP2"
    },
    "9288": {
      "op": "POP"
    },
    "9289": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9291": {
      "op": "DUP4"
    },
    "9292": {
      "op": "ADD"
    },
    "9293": {
      "op": "CALLDATALOAD"
    },
    "9294": {
      "op": "PUSH2",
      "value": "0x2456"
    },
    "9297": {
      "op": "DUP2"
    },
    "9298": {
      "op": "PUSH2",
      "value": "0x2AC3"
    },
    "9301": {
      "op": "JUMP"
    },
    "9302": {
      "op": "JUMPDEST"
    },
    "9303": {
      "op": "DUP1"
    },
    "9304": {
      "op": "SWAP2"
    },
    "9305": {
      "op": "POP"
    },
    "9306": {
      "op": "POP"
    },
    "9307": {
      "op": "SWAP3"
    },
    "9308": {
      "op": "POP"
    },
    "9309": {
      "op": "SWAP3"
    },
    "9310": {
      "op": "SWAP1"
    },
    "9311": {
      "op": "POP"
    },
    "9312": {
      "op": "JUMP"
    },
    "9313": {
      "op": "JUMPDEST"
    },
    "9314": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9316": {
      "op": "DUP1"
    },
    "9317": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9319": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "9321": {
      "op": "DUP5"
    },
    "9322": {
      "op": "DUP7"
    },
    "9323": {
      "op": "SUB"
    },
    "9324": {
      "op": "SLT"
    },
    "9325": {
      "op": "ISZERO"
    },
    "9326": {
      "op": "PUSH2",
      "value": "0x2475"
    },
    "9329": {
      "op": "JUMPI"
    },
    "9330": {
      "op": "DUP1"
    },
    "9331": {
      "op": "DUP2"
    },
    "9332": {
      "op": "REVERT"
    },
    "9333": {
      "op": "JUMPDEST"
    },
    "9334": {
      "op": "DUP4"
    },
    "9335": {
      "op": "CALLDATALOAD"
    },
    "9336": {
      "op": "SWAP3"
    },
    "9337": {
      "op": "POP"
    },
    "9338": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9340": {
      "op": "DUP5"
    },
    "9341": {
      "op": "ADD"
    },
    "9342": {
      "op": "CALLDATALOAD"
    },
    "9343": {
      "op": "PUSH2",
      "value": "0x2487"
    },
    "9346": {
      "op": "DUP2"
    },
    "9347": {
      "op": "PUSH2",
      "value": "0x2AC3"
    },
    "9350": {
      "op": "JUMP"
    },
    "9351": {
      "op": "JUMPDEST"
    },
    "9352": {
      "op": "SWAP2"
    },
    "9353": {
      "op": "POP"
    },
    "9354": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9356": {
      "op": "DUP5"
    },
    "9357": {
      "op": "ADD"
    },
    "9358": {
      "op": "CALLDATALOAD"
    },
    "9359": {
      "op": "PUSH2",
      "value": "0x2216"
    },
    "9362": {
      "op": "DUP2"
    },
    "9363": {
      "op": "PUSH2",
      "value": "0x2AC3"
    },
    "9366": {
      "op": "JUMP"
    },
    "9367": {
      "op": "JUMPDEST"
    },
    "9368": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9370": {
      "op": "DUP1"
    },
    "9371": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9373": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "9375": {
      "op": "DUP5"
    },
    "9376": {
      "op": "DUP7"
    },
    "9377": {
      "op": "SUB"
    },
    "9378": {
      "op": "SLT"
    },
    "9379": {
      "op": "ISZERO"
    },
    "9380": {
      "op": "PUSH2",
      "value": "0x24AB"
    },
    "9383": {
      "op": "JUMPI"
    },
    "9384": {
      "op": "DUP1"
    },
    "9385": {
      "op": "DUP2"
    },
    "9386": {
      "op": "REVERT"
    },
    "9387": {
      "op": "JUMPDEST"
    },
    "9388": {
      "op": "DUP4"
    },
    "9389": {
      "op": "CALLDATALOAD"
    },
    "9390": {
      "op": "SWAP3"
    },
    "9391": {
      "op": "POP"
    },
    "9392": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9394": {
      "op": "DUP5"
    },
    "9395": {
      "op": "ADD"
    },
    "9396": {
      "op": "CALLDATALOAD"
    },
    "9397": {
      "op": "SWAP2"
    },
    "9398": {
      "op": "POP"
    },
    "9399": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9401": {
      "op": "DUP5"
    },
    "9402": {
      "op": "ADD"
    },
    "9403": {
      "op": "CALLDATALOAD"
    },
    "9404": {
      "op": "PUSH2",
      "value": "0x2216"
    },
    "9407": {
      "op": "DUP2"
    },
    "9408": {
      "op": "PUSH2",
      "value": "0x2AC3"
    },
    "9411": {
      "op": "JUMP"
    },
    "9412": {
      "op": "JUMPDEST"
    },
    "9413": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9415": {
      "op": "DUP1"
    },
    "9416": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9418": {
      "op": "DUP1"
    },
    "9419": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "9421": {
      "op": "DUP6"
    },
    "9422": {
      "op": "DUP8"
    },
    "9423": {
      "op": "SUB"
    },
    "9424": {
      "op": "SLT"
    },
    "9425": {
      "op": "ISZERO"
    },
    "9426": {
      "op": "PUSH2",
      "value": "0x24D9"
    },
    "9429": {
      "op": "JUMPI"
    },
    "9430": {
      "op": "DUP2"
    },
    "9431": {
      "op": "DUP3"
    },
    "9432": {
      "op": "REVERT"
    },
    "9433": {
      "op": "JUMPDEST"
    },
    "9434": {
      "op": "DUP5"
    },
    "9435": {
      "op": "CALLDATALOAD"
    },
    "9436": {
      "op": "SWAP4"
    },
    "9437": {
      "op": "POP"
    },
    "9438": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9440": {
      "op": "DUP6"
    },
    "9441": {
      "op": "ADD"
    },
    "9442": {
      "op": "CALLDATALOAD"
    },
    "9443": {
      "op": "SWAP3"
    },
    "9444": {
      "op": "POP"
    },
    "9445": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9447": {
      "op": "DUP6"
    },
    "9448": {
      "op": "ADD"
    },
    "9449": {
      "op": "CALLDATALOAD"
    },
    "9450": {
      "op": "PUSH2",
      "value": "0x24F2"
    },
    "9453": {
      "op": "DUP2"
    },
    "9454": {
      "op": "PUSH2",
      "value": "0x2AC3"
    },
    "9457": {
      "op": "JUMP"
    },
    "9458": {
      "op": "JUMPDEST"
    },
    "9459": {
      "op": "SWAP2"
    },
    "9460": {
      "op": "POP"
    },
    "9461": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "9463": {
      "op": "DUP6"
    },
    "9464": {
      "op": "ADD"
    },
    "9465": {
      "op": "CALLDATALOAD"
    },
    "9466": {
      "op": "PUSH2",
      "value": "0x2502"
    },
    "9469": {
      "op": "DUP2"
    },
    "9470": {
      "op": "PUSH2",
      "value": "0x2ADB"
    },
    "9473": {
      "op": "JUMP"
    },
    "9474": {
      "op": "JUMPDEST"
    },
    "9475": {
      "op": "SWAP4"
    },
    "9476": {
      "op": "SWAP7"
    },
    "9477": {
      "op": "SWAP3"
    },
    "9478": {
      "op": "SWAP6"
    },
    "9479": {
      "op": "POP"
    },
    "9480": {
      "op": "SWAP1"
    },
    "9481": {
      "op": "SWAP4"
    },
    "9482": {
      "op": "POP"
    },
    "9483": {
      "op": "POP"
    },
    "9484": {
      "op": "JUMP"
    },
    "9485": {
      "op": "JUMPDEST"
    },
    "9486": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9488": {
      "op": "DUP3"
    },
    "9489": {
      "op": "DUP5"
    },
    "9490": {
      "op": "DUP4"
    },
    "9491": {
      "op": "CALLDATACOPY"
    },
    "9492": {
      "op": "SWAP2"
    },
    "9493": {
      "op": "ADD"
    },
    "9494": {
      "op": "SWAP1"
    },
    "9495": {
      "op": "DUP2"
    },
    "9496": {
      "op": "MSTORE"
    },
    "9497": {
      "op": "SWAP2"
    },
    "9498": {
      "op": "SWAP1"
    },
    "9499": {
      "op": "POP"
    },
    "9500": {
      "op": "JUMP"
    },
    "9501": {
      "op": "JUMPDEST"
    },
    "9502": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9504": {
      "op": "DUP3"
    },
    "9505": {
      "op": "MLOAD"
    },
    "9506": {
      "op": "PUSH2",
      "value": "0x252F"
    },
    "9509": {
      "op": "DUP2"
    },
    "9510": {
      "op": "DUP5"
    },
    "9511": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9513": {
      "op": "DUP8"
    },
    "9514": {
      "op": "ADD"
    },
    "9515": {
      "op": "PUSH2",
      "value": "0x2A97"
    },
    "9518": {
      "op": "JUMP"
    },
    "9519": {
      "op": "JUMPDEST"
    },
    "9520": {
      "op": "SWAP2"
    },
    "9521": {
      "op": "SWAP1"
    },
    "9522": {
      "op": "SWAP2"
    },
    "9523": {
      "op": "ADD"
    },
    "9524": {
      "op": "SWAP3"
    },
    "9525": {
      "op": "SWAP2"
    },
    "9526": {
      "op": "POP"
    },
    "9527": {
      "op": "POP"
    },
    "9528": {
      "op": "JUMP"
    },
    "9529": {
      "op": "JUMPDEST"
    },
    "9530": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9532": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9534": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9536": {
      "op": "SHL"
    },
    "9537": {
      "op": "SUB"
    },
    "9538": {
      "op": "SWAP2"
    },
    "9539": {
      "op": "SWAP1"
    },
    "9540": {
      "op": "SWAP2"
    },
    "9541": {
      "op": "AND"
    },
    "9542": {
      "op": "DUP2"
    },
    "9543": {
      "op": "MSTORE"
    },
    "9544": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9546": {
      "op": "ADD"
    },
    "9547": {
      "op": "SWAP1"
    },
    "9548": {
      "op": "JUMP"
    },
    "9549": {
      "op": "JUMPDEST"
    },
    "9550": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9552": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9554": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9556": {
      "op": "SHL"
    },
    "9557": {
      "op": "SUB"
    },
    "9558": {
      "op": "SWAP4"
    },
    "9559": {
      "op": "DUP5"
    },
    "9560": {
      "op": "AND"
    },
    "9561": {
      "op": "DUP2"
    },
    "9562": {
      "op": "MSTORE"
    },
    "9563": {
      "op": "SWAP2"
    },
    "9564": {
      "op": "SWAP1"
    },
    "9565": {
      "op": "SWAP3"
    },
    "9566": {
      "op": "AND"
    },
    "9567": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9569": {
      "op": "DUP3"
    },
    "9570": {
      "op": "ADD"
    },
    "9571": {
      "op": "MSTORE"
    },
    "9572": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9574": {
      "op": "DUP2"
    },
    "9575": {
      "op": "ADD"
    },
    "9576": {
      "op": "SWAP2"
    },
    "9577": {
      "op": "SWAP1"
    },
    "9578": {
      "op": "SWAP2"
    },
    "9579": {
      "op": "MSTORE"
    },
    "9580": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "9582": {
      "op": "ADD"
    },
    "9583": {
      "op": "SWAP1"
    },
    "9584": {
      "op": "JUMP"
    },
    "9585": {
      "op": "JUMPDEST"
    },
    "9586": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9588": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9590": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9592": {
      "op": "SHL"
    },
    "9593": {
      "op": "SUB"
    },
    "9594": {
      "op": "SWAP8"
    },
    "9595": {
      "op": "DUP9"
    },
    "9596": {
      "op": "AND"
    },
    "9597": {
      "op": "DUP2"
    },
    "9598": {
      "op": "MSTORE"
    },
    "9599": {
      "op": "SWAP6"
    },
    "9600": {
      "op": "SWAP1"
    },
    "9601": {
      "op": "SWAP7"
    },
    "9602": {
      "op": "AND"
    },
    "9603": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9605": {
      "op": "DUP7"
    },
    "9606": {
      "op": "ADD"
    },
    "9607": {
      "op": "MSTORE"
    },
    "9608": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9610": {
      "op": "DUP6"
    },
    "9611": {
      "op": "ADD"
    },
    "9612": {
      "op": "SWAP4"
    },
    "9613": {
      "op": "SWAP1"
    },
    "9614": {
      "op": "SWAP4"
    },
    "9615": {
      "op": "MSTORE"
    },
    "9616": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "9618": {
      "op": "DUP5"
    },
    "9619": {
      "op": "ADD"
    },
    "9620": {
      "op": "SWAP2"
    },
    "9621": {
      "op": "SWAP1"
    },
    "9622": {
      "op": "SWAP2"
    },
    "9623": {
      "op": "MSTORE"
    },
    "9624": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "9626": {
      "op": "AND"
    },
    "9627": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "9629": {
      "op": "DUP4"
    },
    "9630": {
      "op": "ADD"
    },
    "9631": {
      "op": "MSTORE"
    },
    "9632": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9634": {
      "op": "DUP3"
    },
    "9635": {
      "op": "ADD"
    },
    "9636": {
      "op": "MSTORE"
    },
    "9637": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "9639": {
      "op": "DUP2"
    },
    "9640": {
      "op": "ADD"
    },
    "9641": {
      "op": "SWAP2"
    },
    "9642": {
      "op": "SWAP1"
    },
    "9643": {
      "op": "SWAP2"
    },
    "9644": {
      "op": "MSTORE"
    },
    "9645": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "9647": {
      "op": "ADD"
    },
    "9648": {
      "op": "SWAP1"
    },
    "9649": {
      "op": "JUMP"
    },
    "9650": {
      "op": "JUMPDEST"
    },
    "9651": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9653": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9655": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9657": {
      "op": "SHL"
    },
    "9658": {
      "op": "SUB"
    },
    "9659": {
      "op": "SWAP3"
    },
    "9660": {
      "op": "SWAP1"
    },
    "9661": {
      "op": "SWAP3"
    },
    "9662": {
      "op": "AND"
    },
    "9663": {
      "op": "DUP3"
    },
    "9664": {
      "op": "MSTORE"
    },
    "9665": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9667": {
      "op": "DUP3"
    },
    "9668": {
      "op": "ADD"
    },
    "9669": {
      "op": "MSTORE"
    },
    "9670": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9672": {
      "op": "ADD"
    },
    "9673": {
      "op": "SWAP1"
    },
    "9674": {
      "op": "JUMP"
    },
    "9675": {
      "op": "JUMPDEST"
    },
    "9676": {
      "op": "SWAP1"
    },
    "9677": {
      "op": "ISZERO"
    },
    "9678": {
      "op": "ISZERO"
    },
    "9679": {
      "op": "DUP2"
    },
    "9680": {
      "op": "MSTORE"
    },
    "9681": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9683": {
      "op": "ADD"
    },
    "9684": {
      "op": "SWAP1"
    },
    "9685": {
      "op": "JUMP"
    },
    "9686": {
      "op": "JUMPDEST"
    },
    "9687": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9689": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9691": {
      "op": "DUP3"
    },
    "9692": {
      "op": "MSTORE"
    },
    "9693": {
      "op": "DUP3"
    },
    "9694": {
      "op": "MLOAD"
    },
    "9695": {
      "op": "DUP1"
    },
    "9696": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9698": {
      "op": "DUP5"
    },
    "9699": {
      "op": "ADD"
    },
    "9700": {
      "op": "MSTORE"
    },
    "9701": {
      "op": "PUSH2",
      "value": "0x25F5"
    },
    "9704": {
      "op": "DUP2"
    },
    "9705": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9707": {
      "op": "DUP6"
    },
    "9708": {
      "op": "ADD"
    },
    "9709": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9711": {
      "op": "DUP8"
    },
    "9712": {
      "op": "ADD"
    },
    "9713": {
      "op": "PUSH2",
      "value": "0x2A97"
    },
    "9716": {
      "op": "JUMP"
    },
    "9717": {
      "op": "JUMPDEST"
    },
    "9718": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "9720": {
      "op": "ADD"
    },
    "9721": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "9723": {
      "op": "NOT"
    },
    "9724": {
      "op": "AND"
    },
    "9725": {
      "op": "SWAP2"
    },
    "9726": {
      "op": "SWAP1"
    },
    "9727": {
      "op": "SWAP2"
    },
    "9728": {
      "op": "ADD"
    },
    "9729": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9731": {
      "op": "ADD"
    },
    "9732": {
      "op": "SWAP3"
    },
    "9733": {
      "op": "SWAP2"
    },
    "9734": {
      "op": "POP"
    },
    "9735": {
      "op": "POP"
    },
    "9736": {
      "op": "JUMP"
    },
    "9737": {
      "op": "JUMPDEST"
    },
    "9738": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9740": {
      "op": "DUP1"
    },
    "9741": {
      "op": "DUP3"
    },
    "9742": {
      "op": "MSTORE"
    },
    "9743": {
      "op": "PUSH1",
      "value": "0x15"
    },
    "9745": {
      "op": "SWAP1"
    },
    "9746": {
      "op": "DUP3"
    },
    "9747": {
      "op": "ADD"
    },
    "9748": {
      "op": "MSTORE"
    },
    "9749": {
      "op": "PUSH21",
      "value": "0x426F72696E674D6174683A20556E646572666C6F77"
    },
    "9771": {
      "op": "PUSH1",
      "value": "0x58"
    },
    "9773": {
      "op": "SHL"
    },
    "9774": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9776": {
      "op": "DUP3"
    },
    "9777": {
      "op": "ADD"
    },
    "9778": {
      "op": "MSTORE"
    },
    "9779": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "9781": {
      "op": "ADD"
    },
    "9782": {
      "op": "SWAP1"
    },
    "9783": {
      "op": "JUMP"
    },
    "9784": {
      "op": "JUMPDEST"
    },
    "9785": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9787": {
      "op": "DUP1"
    },
    "9788": {
      "op": "DUP3"
    },
    "9789": {
      "op": "MSTORE"
    },
    "9790": {
      "op": "PUSH1",
      "value": "0xB"
    },
    "9792": {
      "op": "SWAP1"
    },
    "9793": {
      "op": "DUP3"
    },
    "9794": {
      "op": "ADD"
    },
    "9795": {
      "op": "MSTORE"
    },
    "9796": {
      "op": "PUSH11",
      "value": "0x496E7465676572203C203"
    },
    "9808": {
      "op": "PUSH1",
      "value": "0xAC"
    },
    "9810": {
      "op": "SHL"
    },
    "9811": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9813": {
      "op": "DUP3"
    },
    "9814": {
      "op": "ADD"
    },
    "9815": {
      "op": "MSTORE"
    },
    "9816": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "9818": {
      "op": "ADD"
    },
    "9819": {
      "op": "SWAP1"
    },
    "9820": {
      "op": "JUMP"
    },
    "9821": {
      "op": "JUMPDEST"
    },
    "9822": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9824": {
      "op": "DUP1"
    },
    "9825": {
      "op": "DUP3"
    },
    "9826": {
      "op": "MSTORE"
    },
    "9827": {
      "op": "PUSH1",
      "value": "0x1C"
    },
    "9829": {
      "op": "SWAP1"
    },
    "9830": {
      "op": "DUP3"
    },
    "9831": {
      "op": "ADD"
    },
    "9832": {
      "op": "MSTORE"
    },
    "9833": {
      "op": "PUSH32",
      "value": "0x426F72696E6745524332303A205472616E73666572206661696C656400000000"
    },
    "9866": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9868": {
      "op": "DUP3"
    },
    "9869": {
      "op": "ADD"
    },
    "9870": {
      "op": "MSTORE"
    },
    "9871": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "9873": {
      "op": "ADD"
    },
    "9874": {
      "op": "SWAP1"
    },
    "9875": {
      "op": "JUMP"
    },
    "9876": {
      "op": "JUMPDEST"
    },
    "9877": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9879": {
      "op": "DUP1"
    },
    "9880": {
      "op": "DUP3"
    },
    "9881": {
      "op": "MSTORE"
    },
    "9882": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "9884": {
      "op": "SWAP1"
    },
    "9885": {
      "op": "DUP3"
    },
    "9886": {
      "op": "ADD"
    },
    "9887": {
      "op": "MSTORE"
    },
    "9888": {
      "op": "PUSH32",
      "value": "0x5369676E6564536166654D6174683A206164646974696F6E206F766572666C6F"
    },
    "9921": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9923": {
      "op": "DUP3"
    },
    "9924": {
      "op": "ADD"
    },
    "9925": {
      "op": "MSTORE"
    },
    "9926": {
      "op": "PUSH1",
      "value": "0x77"
    },
    "9928": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "9930": {
      "op": "SHL"
    },
    "9931": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "9933": {
      "op": "DUP3"
    },
    "9934": {
      "op": "ADD"
    },
    "9935": {
      "op": "MSTORE"
    },
    "9936": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "9938": {
      "op": "ADD"
    },
    "9939": {
      "op": "SWAP1"
    },
    "9940": {
      "op": "JUMP"
    },
    "9941": {
      "op": "JUMPDEST"
    },
    "9942": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9944": {
      "op": "DUP1"
    },
    "9945": {
      "op": "DUP3"
    },
    "9946": {
      "op": "MSTORE"
    },
    "9947": {
      "op": "PUSH1",
      "value": "0x15"
    },
    "9949": {
      "op": "SWAP1"
    },
    "9950": {
      "op": "DUP3"
    },
    "9951": {
      "op": "ADD"
    },
    "9952": {
      "op": "MSTORE"
    },
    "9953": {
      "op": "PUSH21",
      "value": "0x4F776E61626C653A207A65726F2061646472657373"
    },
    "9975": {
      "op": "PUSH1",
      "value": "0x58"
    },
    "9977": {
      "op": "SHL"
    },
    "9978": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9980": {
      "op": "DUP3"
    },
    "9981": {
      "op": "ADD"
    },
    "9982": {
      "op": "MSTORE"
    },
    "9983": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "9985": {
      "op": "ADD"
    },
    "9986": {
      "op": "SWAP1"
    },
    "9987": {
      "op": "JUMP"
    },
    "9988": {
      "op": "JUMPDEST"
    },
    "9989": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9991": {
      "op": "DUP1"
    },
    "9992": {
      "op": "DUP3"
    },
    "9993": {
      "op": "MSTORE"
    },
    "9994": {
      "op": "PUSH1",
      "value": "0x29"
    },
    "9996": {
      "op": "SWAP1"
    },
    "9997": {
      "op": "DUP3"
    },
    "9998": {
      "op": "ADD"
    },
    "9999": {
      "op": "MSTORE"
    },
    "10000": {
      "op": "PUSH32",
      "value": "0x4D61737465724368656656323A206D696772617465642062616C616E6365206D"
    },
    "10033": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10035": {
      "op": "DUP3"
    },
    "10036": {
      "op": "ADD"
    },
    "10037": {
      "op": "MSTORE"
    },
    "10038": {
      "op": "PUSH9",
      "value": "0xEAE6E840DAC2E8C6D"
    },
    "10048": {
      "op": "PUSH1",
      "value": "0xBB"
    },
    "10050": {
      "op": "SHL"
    },
    "10051": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "10053": {
      "op": "DUP3"
    },
    "10054": {
      "op": "ADD"
    },
    "10055": {
      "op": "MSTORE"
    },
    "10056": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "10058": {
      "op": "ADD"
    },
    "10059": {
      "op": "SWAP1"
    },
    "10060": {
      "op": "JUMP"
    },
    "10061": {
      "op": "JUMPDEST"
    },
    "10062": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10064": {
      "op": "DUP1"
    },
    "10065": {
      "op": "DUP3"
    },
    "10066": {
      "op": "MSTORE"
    },
    "10067": {
      "op": "PUSH1",
      "value": "0x1C"
    },
    "10069": {
      "op": "SWAP1"
    },
    "10070": {
      "op": "DUP3"
    },
    "10071": {
      "op": "ADD"
    },
    "10072": {
      "op": "MSTORE"
    },
    "10073": {
      "op": "PUSH32",
      "value": "0x426F72696E674D6174683A2075696E74313238204F766572666C6F7700000000"
    },
    "10106": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10108": {
      "op": "DUP3"
    },
    "10109": {
      "op": "ADD"
    },
    "10110": {
      "op": "MSTORE"
    },
    "10111": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "10113": {
      "op": "ADD"
    },
    "10114": {
      "op": "SWAP1"
    },
    "10115": {
      "op": "JUMP"
    },
    "10116": {
      "op": "JUMPDEST"
    },
    "10117": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10119": {
      "op": "DUP1"
    },
    "10120": {
      "op": "DUP3"
    },
    "10121": {
      "op": "MSTORE"
    },
    "10122": {
      "op": "PUSH1",
      "value": "0x18"
    },
    "10124": {
      "op": "SWAP1"
    },
    "10125": {
      "op": "DUP3"
    },
    "10126": {
      "op": "ADD"
    },
    "10127": {
      "op": "MSTORE"
    },
    "10128": {
      "op": "PUSH32",
      "value": "0x426F72696E674D6174683A20416464204F766572666C6F770000000000000000"
    },
    "10161": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10163": {
      "op": "DUP3"
    },
    "10164": {
      "op": "ADD"
    },
    "10165": {
      "op": "MSTORE"
    },
    "10166": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "10168": {
      "op": "ADD"
    },
    "10169": {
      "op": "SWAP1"
    },
    "10170": {
      "op": "JUMP"
    },
    "10171": {
      "op": "JUMPDEST"
    },
    "10172": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10174": {
      "op": "DUP1"
    },
    "10175": {
      "op": "DUP3"
    },
    "10176": {
      "op": "MSTORE"
    },
    "10177": {
      "op": "DUP2"
    },
    "10178": {
      "op": "DUP2"
    },
    "10179": {
      "op": "ADD"
    },
    "10180": {
      "op": "MSTORE"
    },
    "10181": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
    },
    "10214": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10216": {
      "op": "DUP3"
    },
    "10217": {
      "op": "ADD"
    },
    "10218": {
      "op": "MSTORE"
    },
    "10219": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "10221": {
      "op": "ADD"
    },
    "10222": {
      "op": "SWAP1"
    },
    "10223": {
      "op": "JUMP"
    },
    "10224": {
      "op": "JUMPDEST"
    },
    "10225": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10227": {
      "op": "DUP1"
    },
    "10228": {
      "op": "DUP3"
    },
    "10229": {
      "op": "MSTORE"
    },
    "10230": {
      "op": "DUP2"
    },
    "10231": {
      "op": "DUP2"
    },
    "10232": {
      "op": "ADD"
    },
    "10233": {
      "op": "MSTORE"
    },
    "10234": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A2063616C6C657220213D2070656E64696E67206F776E6572"
    },
    "10267": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10269": {
      "op": "DUP3"
    },
    "10270": {
      "op": "ADD"
    },
    "10271": {
      "op": "MSTORE"
    },
    "10272": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "10274": {
      "op": "ADD"
    },
    "10275": {
      "op": "SWAP1"
    },
    "10276": {
      "op": "JUMP"
    },
    "10277": {
      "op": "JUMPDEST"
    },
    "10278": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10280": {
      "op": "DUP1"
    },
    "10281": {
      "op": "DUP3"
    },
    "10282": {
      "op": "MSTORE"
    },
    "10283": {
      "op": "PUSH1",
      "value": "0x13"
    },
    "10285": {
      "op": "SWAP1"
    },
    "10286": {
      "op": "DUP3"
    },
    "10287": {
      "op": "ADD"
    },
    "10288": {
      "op": "MSTORE"
    },
    "10289": {
      "op": "PUSH19",
      "value": "0x151BDAD95B88185B1C9958591E481859191959"
    },
    "10309": {
      "op": "PUSH1",
      "value": "0x6A"
    },
    "10311": {
      "op": "SHL"
    },
    "10312": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10314": {
      "op": "DUP3"
    },
    "10315": {
      "op": "ADD"
    },
    "10316": {
      "op": "MSTORE"
    },
    "10317": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "10319": {
      "op": "ADD"
    },
    "10320": {
      "op": "SWAP1"
    },
    "10321": {
      "op": "JUMP"
    },
    "10322": {
      "op": "JUMPDEST"
    },
    "10323": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10325": {
      "op": "DUP1"
    },
    "10326": {
      "op": "DUP3"
    },
    "10327": {
      "op": "MSTORE"
    },
    "10328": {
      "op": "PUSH1",
      "value": "0x1B"
    },
    "10330": {
      "op": "SWAP1"
    },
    "10331": {
      "op": "DUP3"
    },
    "10332": {
      "op": "ADD"
    },
    "10333": {
      "op": "MSTORE"
    },
    "10334": {
      "op": "PUSH32",
      "value": "0x426F72696E674D6174683A2075696E743634204F766572666C6F770000000000"
    },
    "10367": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10369": {
      "op": "DUP3"
    },
    "10370": {
      "op": "ADD"
    },
    "10371": {
      "op": "MSTORE"
    },
    "10372": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "10374": {
      "op": "ADD"
    },
    "10375": {
      "op": "SWAP1"
    },
    "10376": {
      "op": "JUMP"
    },
    "10377": {
      "op": "JUMPDEST"
    },
    "10378": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10380": {
      "op": "DUP1"
    },
    "10381": {
      "op": "DUP3"
    },
    "10382": {
      "op": "MSTORE"
    },
    "10383": {
      "op": "PUSH1",
      "value": "0x1D"
    },
    "10385": {
      "op": "SWAP1"
    },
    "10386": {
      "op": "DUP3"
    },
    "10387": {
      "op": "ADD"
    },
    "10388": {
      "op": "MSTORE"
    },
    "10389": {
      "op": "PUSH32",
      "value": "0x4D61737465724368656656323A206E6F206D69677261746F7220736574000000"
    },
    "10422": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10424": {
      "op": "DUP3"
    },
    "10425": {
      "op": "ADD"
    },
    "10426": {
      "op": "MSTORE"
    },
    "10427": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "10429": {
      "op": "ADD"
    },
    "10430": {
      "op": "SWAP1"
    },
    "10431": {
      "op": "JUMP"
    },
    "10432": {
      "op": "JUMPDEST"
    },
    "10433": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10435": {
      "op": "DUP1"
    },
    "10436": {
      "op": "DUP3"
    },
    "10437": {
      "op": "MSTORE"
    },
    "10438": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "10440": {
      "op": "SWAP1"
    },
    "10441": {
      "op": "DUP3"
    },
    "10442": {
      "op": "ADD"
    },
    "10443": {
      "op": "MSTORE"
    },
    "10444": {
      "op": "PUSH32",
      "value": "0x5369676E6564536166654D6174683A207375627472616374696F6E206F766572"
    },
    "10477": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10479": {
      "op": "DUP3"
    },
    "10480": {
      "op": "ADD"
    },
    "10481": {
      "op": "MSTORE"
    },
    "10482": {
      "op": "PUSH4",
      "value": "0x666C6F77"
    },
    "10487": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "10489": {
      "op": "SHL"
    },
    "10490": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "10492": {
      "op": "DUP3"
    },
    "10493": {
      "op": "ADD"
    },
    "10494": {
      "op": "MSTORE"
    },
    "10495": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "10497": {
      "op": "ADD"
    },
    "10498": {
      "op": "SWAP1"
    },
    "10499": {
      "op": "JUMP"
    },
    "10500": {
      "op": "JUMPDEST"
    },
    "10501": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10503": {
      "op": "DUP1"
    },
    "10504": {
      "op": "DUP3"
    },
    "10505": {
      "op": "MSTORE"
    },
    "10506": {
      "op": "DUP2"
    },
    "10507": {
      "op": "DUP2"
    },
    "10508": {
      "op": "ADD"
    },
    "10509": {
      "op": "MSTORE"
    },
    "10510": {
      "op": "PUSH32",
      "value": "0x426F72696E6745524332303A205472616E7366657246726F6D206661696C6564"
    },
    "10543": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10545": {
      "op": "DUP3"
    },
    "10546": {
      "op": "ADD"
    },
    "10547": {
      "op": "MSTORE"
    },
    "10548": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "10550": {
      "op": "ADD"
    },
    "10551": {
      "op": "SWAP1"
    },
    "10552": {
      "op": "JUMP"
    },
    "10553": {
      "op": "JUMPDEST"
    },
    "10554": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10556": {
      "op": "DUP1"
    },
    "10557": {
      "op": "DUP3"
    },
    "10558": {
      "op": "MSTORE"
    },
    "10559": {
      "op": "PUSH1",
      "value": "0x18"
    },
    "10561": {
      "op": "SWAP1"
    },
    "10562": {
      "op": "DUP3"
    },
    "10563": {
      "op": "ADD"
    },
    "10564": {
      "op": "MSTORE"
    },
    "10565": {
      "op": "PUSH32",
      "value": "0x426F72696E674D6174683A204D756C204F766572666C6F770000000000000000"
    },
    "10598": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10600": {
      "op": "DUP3"
    },
    "10601": {
      "op": "ADD"
    },
    "10602": {
      "op": "MSTORE"
    },
    "10603": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "10605": {
      "op": "ADD"
    },
    "10606": {
      "op": "SWAP1"
    },
    "10607": {
      "op": "JUMP"
    },
    "10608": {
      "op": "JUMPDEST"
    },
    "10609": {
      "op": "DUP2"
    },
    "10610": {
      "op": "MLOAD"
    },
    "10611": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10613": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10615": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "10617": {
      "op": "SHL"
    },
    "10618": {
      "op": "SUB"
    },
    "10619": {
      "op": "AND"
    },
    "10620": {
      "op": "DUP2"
    },
    "10621": {
      "op": "MSTORE"
    },
    "10622": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10624": {
      "op": "DUP1"
    },
    "10625": {
      "op": "DUP4"
    },
    "10626": {
      "op": "ADD"
    },
    "10627": {
      "op": "MLOAD"
    },
    "10628": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10630": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10632": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10634": {
      "op": "SHL"
    },
    "10635": {
      "op": "SUB"
    },
    "10636": {
      "op": "SWAP1"
    },
    "10637": {
      "op": "DUP2"
    },
    "10638": {
      "op": "AND"
    },
    "10639": {
      "op": "SWAP2"
    },
    "10640": {
      "op": "DUP4"
    },
    "10641": {
      "op": "ADD"
    },
    "10642": {
      "op": "SWAP2"
    },
    "10643": {
      "op": "SWAP1"
    },
    "10644": {
      "op": "SWAP2"
    },
    "10645": {
      "op": "MSTORE"
    },
    "10646": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10648": {
      "op": "SWAP3"
    },
    "10649": {
      "op": "DUP4"
    },
    "10650": {
      "op": "ADD"
    },
    "10651": {
      "op": "MLOAD"
    },
    "10652": {
      "op": "AND"
    },
    "10653": {
      "op": "SWAP2"
    },
    "10654": {
      "op": "DUP2"
    },
    "10655": {
      "op": "ADD"
    },
    "10656": {
      "op": "SWAP2"
    },
    "10657": {
      "op": "SWAP1"
    },
    "10658": {
      "op": "SWAP2"
    },
    "10659": {
      "op": "MSTORE"
    },
    "10660": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "10662": {
      "op": "ADD"
    },
    "10663": {
      "op": "SWAP1"
    },
    "10664": {
      "op": "JUMP"
    },
    "10665": {
      "op": "JUMPDEST"
    },
    "10666": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10668": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10670": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "10672": {
      "op": "SHL"
    },
    "10673": {
      "op": "SUB"
    },
    "10674": {
      "op": "SWAP4"
    },
    "10675": {
      "op": "SWAP1"
    },
    "10676": {
      "op": "SWAP4"
    },
    "10677": {
      "op": "AND"
    },
    "10678": {
      "op": "DUP4"
    },
    "10679": {
      "op": "MSTORE"
    },
    "10680": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10682": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10684": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10686": {
      "op": "SHL"
    },
    "10687": {
      "op": "SUB"
    },
    "10688": {
      "op": "SWAP2"
    },
    "10689": {
      "op": "DUP3"
    },
    "10690": {
      "op": "AND"
    },
    "10691": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10693": {
      "op": "DUP5"
    },
    "10694": {
      "op": "ADD"
    },
    "10695": {
      "op": "MSTORE"
    },
    "10696": {
      "op": "AND"
    },
    "10697": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10699": {
      "op": "DUP3"
    },
    "10700": {
      "op": "ADD"
    },
    "10701": {
      "op": "MSTORE"
    },
    "10702": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "10704": {
      "op": "ADD"
    },
    "10705": {
      "op": "SWAP1"
    },
    "10706": {
      "op": "JUMP"
    },
    "10707": {
      "op": "JUMPDEST"
    },
    "10708": {
      "op": "SWAP1"
    },
    "10709": {
      "op": "DUP2"
    },
    "10710": {
      "op": "MSTORE"
    },
    "10711": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10713": {
      "op": "ADD"
    },
    "10714": {
      "op": "SWAP1"
    },
    "10715": {
      "op": "JUMP"
    },
    "10716": {
      "op": "JUMPDEST"
    },
    "10717": {
      "op": "SWAP5"
    },
    "10718": {
      "op": "DUP6"
    },
    "10719": {
      "op": "MSTORE"
    },
    "10720": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10722": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10724": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10726": {
      "op": "SHL"
    },
    "10727": {
      "op": "SUB"
    },
    "10728": {
      "op": "SWAP4"
    },
    "10729": {
      "op": "DUP5"
    },
    "10730": {
      "op": "AND"
    },
    "10731": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10733": {
      "op": "DUP7"
    },
    "10734": {
      "op": "ADD"
    },
    "10735": {
      "op": "MSTORE"
    },
    "10736": {
      "op": "SWAP2"
    },
    "10737": {
      "op": "SWAP1"
    },
    "10738": {
      "op": "SWAP3"
    },
    "10739": {
      "op": "AND"
    },
    "10740": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10742": {
      "op": "DUP5"
    },
    "10743": {
      "op": "ADD"
    },
    "10744": {
      "op": "MSTORE"
    },
    "10745": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "10747": {
      "op": "DUP4"
    },
    "10748": {
      "op": "ADD"
    },
    "10749": {
      "op": "SWAP2"
    },
    "10750": {
      "op": "SWAP1"
    },
    "10751": {
      "op": "SWAP2"
    },
    "10752": {
      "op": "MSTORE"
    },
    "10753": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "10755": {
      "op": "DUP3"
    },
    "10756": {
      "op": "ADD"
    },
    "10757": {
      "op": "MSTORE"
    },
    "10758": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10760": {
      "op": "ADD"
    },
    "10761": {
      "op": "SWAP1"
    },
    "10762": {
      "op": "JUMP"
    },
    "10763": {
      "op": "JUMPDEST"
    },
    "10764": {
      "op": "SWAP2"
    },
    "10765": {
      "op": "DUP3"
    },
    "10766": {
      "op": "MSTORE"
    },
    "10767": {
      "op": "ISZERO"
    },
    "10768": {
      "op": "ISZERO"
    },
    "10769": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10771": {
      "op": "DUP3"
    },
    "10772": {
      "op": "ADD"
    },
    "10773": {
      "op": "MSTORE"
    },
    "10774": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10776": {
      "op": "ADD"
    },
    "10777": {
      "op": "SWAP1"
    },
    "10778": {
      "op": "JUMP"
    },
    "10779": {
      "op": "JUMPDEST"
    },
    "10780": {
      "op": "SWAP2"
    },
    "10781": {
      "op": "DUP3"
    },
    "10782": {
      "op": "MSTORE"
    },
    "10783": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10785": {
      "op": "DUP3"
    },
    "10786": {
      "op": "ADD"
    },
    "10787": {
      "op": "MSTORE"
    },
    "10788": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10790": {
      "op": "ADD"
    },
    "10791": {
      "op": "SWAP1"
    },
    "10792": {
      "op": "JUMP"
    },
    "10793": {
      "op": "JUMPDEST"
    },
    "10794": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10796": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10798": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10800": {
      "op": "SHL"
    },
    "10801": {
      "op": "SUB"
    },
    "10802": {
      "op": "SWAP4"
    },
    "10803": {
      "op": "SWAP1"
    },
    "10804": {
      "op": "SWAP4"
    },
    "10805": {
      "op": "AND"
    },
    "10806": {
      "op": "DUP4"
    },
    "10807": {
      "op": "MSTORE"
    },
    "10808": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10810": {
      "op": "DUP4"
    },
    "10811": {
      "op": "ADD"
    },
    "10812": {
      "op": "SWAP2"
    },
    "10813": {
      "op": "SWAP1"
    },
    "10814": {
      "op": "SWAP2"
    },
    "10815": {
      "op": "MSTORE"
    },
    "10816": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10818": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10820": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "10822": {
      "op": "SHL"
    },
    "10823": {
      "op": "SUB"
    },
    "10824": {
      "op": "AND"
    },
    "10825": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10827": {
      "op": "DUP3"
    },
    "10828": {
      "op": "ADD"
    },
    "10829": {
      "op": "MSTORE"
    },
    "10830": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "10832": {
      "op": "ADD"
    },
    "10833": {
      "op": "SWAP1"
    },
    "10834": {
      "op": "JUMP"
    },
    "10835": {
      "op": "JUMPDEST"
    },
    "10836": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10838": {
      "op": "DUP1"
    },
    "10839": {
      "op": "DUP4"
    },
    "10840": {
      "op": "CALLDATALOAD"
    },
    "10841": {
      "op": "PUSH1",
      "value": "0x1E"
    },
    "10843": {
      "op": "NOT"
    },
    "10844": {
      "op": "DUP5"
    },
    "10845": {
      "op": "CALLDATASIZE"
    },
    "10846": {
      "op": "SUB"
    },
    "10847": {
      "op": "ADD"
    },
    "10848": {
      "op": "DUP2"
    },
    "10849": {
      "op": "SLT"
    },
    "10850": {
      "op": "PUSH2",
      "value": "0x2A69"
    },
    "10853": {
      "op": "JUMPI"
    },
    "10854": {
      "op": "DUP3"
    },
    "10855": {
      "op": "DUP4"
    },
    "10856": {
      "op": "REVERT"
    },
    "10857": {
      "op": "JUMPDEST"
    },
    "10858": {
      "op": "DUP4"
    },
    "10859": {
      "op": "ADD"
    },
    "10860": {
      "op": "DUP1"
    },
    "10861": {
      "op": "CALLDATALOAD"
    },
    "10862": {
      "op": "SWAP2"
    },
    "10863": {
      "op": "POP"
    },
    "10864": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10866": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10868": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10870": {
      "op": "SHL"
    },
    "10871": {
      "op": "SUB"
    },
    "10872": {
      "op": "DUP3"
    },
    "10873": {
      "op": "GT"
    },
    "10874": {
      "op": "ISZERO"
    },
    "10875": {
      "op": "PUSH2",
      "value": "0x2A82"
    },
    "10878": {
      "op": "JUMPI"
    },
    "10879": {
      "op": "DUP3"
    },
    "10880": {
      "op": "DUP4"
    },
    "10881": {
      "op": "REVERT"
    },
    "10882": {
      "op": "JUMPDEST"
    },
    "10883": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10885": {
      "op": "ADD"
    },
    "10886": {
      "op": "SWAP2"
    },
    "10887": {
      "op": "POP"
    },
    "10888": {
      "op": "CALLDATASIZE"
    },
    "10889": {
      "op": "DUP2"
    },
    "10890": {
      "op": "SWAP1"
    },
    "10891": {
      "op": "SUB"
    },
    "10892": {
      "op": "DUP3"
    },
    "10893": {
      "op": "SGT"
    },
    "10894": {
      "op": "ISZERO"
    },
    "10895": {
      "op": "PUSH2",
      "value": "0x21B4"
    },
    "10898": {
      "op": "JUMPI"
    },
    "10899": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10901": {
      "op": "DUP1"
    },
    "10902": {
      "op": "REVERT"
    },
    "10903": {
      "op": "JUMPDEST"
    },
    "10904": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10906": {
      "op": "JUMPDEST"
    },
    "10907": {
      "op": "DUP4"
    },
    "10908": {
      "op": "DUP2"
    },
    "10909": {
      "op": "LT"
    },
    "10910": {
      "op": "ISZERO"
    },
    "10911": {
      "op": "PUSH2",
      "value": "0x2AB2"
    },
    "10914": {
      "op": "JUMPI"
    },
    "10915": {
      "op": "DUP2"
    },
    "10916": {
      "op": "DUP2"
    },
    "10917": {
      "op": "ADD"
    },
    "10918": {
      "op": "MLOAD"
    },
    "10919": {
      "op": "DUP4"
    },
    "10920": {
      "op": "DUP3"
    },
    "10921": {
      "op": "ADD"
    },
    "10922": {
      "op": "MSTORE"
    },
    "10923": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10925": {
      "op": "ADD"
    },
    "10926": {
      "op": "PUSH2",
      "value": "0x2A9A"
    },
    "10929": {
      "op": "JUMP"
    },
    "10930": {
      "op": "JUMPDEST"
    },
    "10931": {
      "op": "DUP4"
    },
    "10932": {
      "op": "DUP2"
    },
    "10933": {
      "op": "GT"
    },
    "10934": {
      "op": "ISZERO"
    },
    "10935": {
      "op": "PUSH2",
      "value": "0x1391"
    },
    "10938": {
      "op": "JUMPI"
    },
    "10939": {
      "op": "POP"
    },
    "10940": {
      "op": "POP"
    },
    "10941": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10943": {
      "op": "SWAP2"
    },
    "10944": {
      "op": "ADD"
    },
    "10945": {
      "op": "MSTORE"
    },
    "10946": {
      "op": "JUMP"
    },
    "10947": {
      "op": "JUMPDEST"
    },
    "10948": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10950": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10952": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10954": {
      "op": "SHL"
    },
    "10955": {
      "op": "SUB"
    },
    "10956": {
      "op": "DUP2"
    },
    "10957": {
      "op": "AND"
    },
    "10958": {
      "op": "DUP2"
    },
    "10959": {
      "op": "EQ"
    },
    "10960": {
      "op": "PUSH2",
      "value": "0x2AD8"
    },
    "10963": {
      "op": "JUMPI"
    },
    "10964": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10966": {
      "op": "DUP1"
    },
    "10967": {
      "op": "REVERT"
    },
    "10968": {
      "op": "JUMPDEST"
    },
    "10969": {
      "op": "POP"
    },
    "10970": {
      "op": "JUMP"
    },
    "10971": {
      "op": "JUMPDEST"
    },
    "10972": {
      "op": "DUP1"
    },
    "10973": {
      "op": "ISZERO"
    },
    "10974": {
      "op": "ISZERO"
    },
    "10975": {
      "op": "DUP2"
    },
    "10976": {
      "op": "EQ"
    },
    "10977": {
      "op": "PUSH2",
      "value": "0x2AD8"
    },
    "10980": {
      "op": "JUMPI"
    },
    "10981": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10983": {
      "op": "DUP1"
    },
    "10984": {
      "op": "REVERT"
    }
  },
  "sha1": "00ffa00dc20998fb7e615437a465eb6f7c9fc5d2",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity 0.6.12;\npragma experimental ABIEncoderV2;\n\nimport \"./BoringSolidity/contracts/BoringBatchable.sol\";\nimport \"./BoringSolidity/contracts/BoringOwnable.sol\";\nimport \"./BoringSolidity/contracts/libraries/BoringMath.sol\";\nimport \"./libraries/SignedSafeMath.sol\";\nimport \"./interfaces/IRewarder.sol\";\nimport \"./interfaces/IMasterChef.sol\";\n\ninterface IMigratorChef {\n    // Take the current LP token address and return the new LP token address.\n    // Migrator should have full access to the caller's LP token.\n    function migrate(IERC20 token) external returns (IERC20);\n}\n\n/// @notice The (older) MasterChef contract gives out a constant number of SUSHI tokens per block.\n/// It is the only address with minting rights for SUSHI.\n/// The idea for this MasterChef V2 (MCV2) contract is therefore to be the owner of a dummy token\n/// that is deposited into the MasterChef V1 (MCV1) contract.\n/// The allocation point for this pool on MCV1 is the total allocation point for all pools that receive double incentives.\ncontract MiniChefV2 is BoringOwnable, BoringBatchable {\n    using BoringMath for uint256;\n    using BoringMath128 for uint128;\n    using BoringERC20 for IERC20;\n    using SignedSafeMath for int256;\n\n    /// @notice Info of each MCV2 user.\n    /// `amount` LP token amount the user has provided.\n    /// `rewardDebt` The amount of SUSHI entitled to the user.\n    struct UserInfo {\n        uint256 amount;\n        int256 rewardDebt;\n    }\n\n    /// @notice Info of each MCV2 pool.\n    /// `allocPoint` The amount of allocation points assigned to the pool.\n    /// Also known as the amount of SUSHI to distribute per block.\n    struct PoolInfo {\n        uint128 accSushiPerShare;\n        uint64 lastRewardTime;\n        uint64 allocPoint;\n    }\n\n    /// @notice Address of SUSHI contract.\n    IERC20 public immutable SUSHI;\n    // @notice The migrator contract. It has a lot of power. Can only be set through governance (owner).\n    IMigratorChef public migrator;\n\n    /// @notice Info of each MCV2 pool.\n    PoolInfo[] public poolInfo;\n    /// @notice Address of the LP token for each MCV2 pool.\n    IERC20[] public lpToken;\n    /// @notice Address of each `IRewarder` contract in MCV2.\n    IRewarder[] public rewarder;\n\n    /// @notice Info of each user that stakes LP tokens.\n    mapping (uint256 => mapping (address => UserInfo)) public userInfo;\n\n    /// @dev Tokens added\n    mapping (address => bool) public addedTokens;\n\n    /// @dev Total allocation points. Must be the sum of all allocation points in all pools.\n    uint256 public totalAllocPoint;\n\n    uint256 public sushiPerSecond;\n    uint256 private constant ACC_SUSHI_PRECISION = 1e12;\n\n    event Deposit(address indexed user, uint256 indexed pid, uint256 amount, address indexed to);\n    event Withdraw(address indexed user, uint256 indexed pid, uint256 amount, address indexed to);\n    event EmergencyWithdraw(address indexed user, uint256 indexed pid, uint256 amount, address indexed to);\n    event Harvest(address indexed user, uint256 indexed pid, uint256 amount);\n    event LogPoolAddition(uint256 indexed pid, uint256 allocPoint, IERC20 indexed lpToken, IRewarder indexed rewarder);\n    event LogSetPool(uint256 indexed pid, uint256 allocPoint, IRewarder indexed rewarder, bool overwrite);\n    event LogUpdatePool(uint256 indexed pid, uint64 lastRewardTime, uint256 lpSupply, uint256 accSushiPerShare);\n    event LogSushiPerSecond(uint256 sushiPerSecond);\n\n    /// @param _sushi The SUSHI token contract address.\n    constructor(IERC20 _sushi) public {\n        SUSHI = _sushi;\n    }\n\n    /// @notice Returns the number of MCV2 pools.\n    function poolLength() public view returns (uint256 pools) {\n        pools = poolInfo.length;\n    }\n\n    /// @notice Add a new LP to the pool. Can only be called by the owner.\n    /// DO NOT add the same LP token more than once. Rewards will be messed up if you do.\n    /// @param allocPoint AP of the new pool.\n    /// @param _lpToken Address of the LP ERC-20 token.\n    /// @param _rewarder Address of the rewarder delegate.\n    function add(uint256 allocPoint, IERC20 _lpToken, IRewarder _rewarder) public onlyOwner {\n        require(addedTokens[address(_lpToken)] == false, \"Token already added\");\n        totalAllocPoint = totalAllocPoint.add(allocPoint);\n        lpToken.push(_lpToken);\n        rewarder.push(_rewarder);\n\n        poolInfo.push(PoolInfo({\n            allocPoint: allocPoint.to64(),\n            lastRewardTime: block.timestamp.to64(),\n            accSushiPerShare: 0\n        }));\n        addedTokens[address(_lpToken)] = true;\n        emit LogPoolAddition(lpToken.length.sub(1), allocPoint, _lpToken, _rewarder);\n    }\n\n    /// @notice Update the given pool's SUSHI allocation point and `IRewarder` contract. Can only be called by the owner.\n    /// @param _pid The index of the pool. See `poolInfo`.\n    /// @param _allocPoint New AP of the pool.\n    /// @param _rewarder Address of the rewarder delegate.\n    /// @param overwrite True if _rewarder should be `set`. Otherwise `_rewarder` is ignored.\n    function set(uint256 _pid, uint256 _allocPoint, IRewarder _rewarder, bool overwrite) public onlyOwner {\n        totalAllocPoint = totalAllocPoint.sub(poolInfo[_pid].allocPoint).add(_allocPoint);\n        poolInfo[_pid].allocPoint = _allocPoint.to64();\n        if (overwrite) { rewarder[_pid] = _rewarder; }\n        emit LogSetPool(_pid, _allocPoint, overwrite ? _rewarder : rewarder[_pid], overwrite);\n    }\n\n    /// @notice Sets the sushi per second to be distributed. Can only be called by the owner.\n    /// @param _sushiPerSecond The amount of Sushi to be distributed per second.\n    function setSushiPerSecond(uint256 _sushiPerSecond) public onlyOwner {\n        sushiPerSecond = _sushiPerSecond;\n        emit LogSushiPerSecond(_sushiPerSecond);\n    }\n\n    /// @notice Set the `migrator` contract. Can only be called by the owner.\n    /// @param _migrator The contract address to set.\n    function setMigrator(IMigratorChef _migrator) public onlyOwner {\n        migrator = _migrator;\n    }\n\n    /// @notice Migrate LP token to another LP contract through the `migrator` contract.\n    /// @param _pid The index of the pool. See `poolInfo`.\n    function migrate(uint256 _pid) public {\n        require(address(migrator) != address(0), \"MasterChefV2: no migrator set\");\n        IERC20 _lpToken = lpToken[_pid];\n        uint256 bal = _lpToken.balanceOf(address(this));\n        _lpToken.approve(address(migrator), bal);\n        IERC20 newLpToken = migrator.migrate(_lpToken);\n        require(bal == newLpToken.balanceOf(address(this)), \"MasterChefV2: migrated balance must match\");\n        require(addedTokens[address(newLpToken)] == false, \"Token already added\");\n        addedTokens[address(newLpToken)] = true;\n        addedTokens[address(_lpToken)] = false;\n        lpToken[_pid] = newLpToken;\n    }\n\n    /// @notice View function to see pending SUSHI on frontend.\n    /// @param _pid The index of the pool. See `poolInfo`.\n    /// @param _user Address of user.\n    /// @return pending SUSHI reward for a given user.\n    function pendingSushi(uint256 _pid, address _user) external view returns (uint256 pending) {\n        PoolInfo memory pool = poolInfo[_pid];\n        UserInfo storage user = userInfo[_pid][_user];\n        uint256 accSushiPerShare = pool.accSushiPerShare;\n        uint256 lpSupply = lpToken[_pid].balanceOf(address(this));\n        if (block.timestamp > pool.lastRewardTime && lpSupply != 0) {\n            uint256 time = block.timestamp.sub(pool.lastRewardTime);\n            uint256 sushiReward = time.mul(sushiPerSecond).mul(pool.allocPoint) / totalAllocPoint;\n            accSushiPerShare = accSushiPerShare.add(sushiReward.mul(ACC_SUSHI_PRECISION) / lpSupply);\n        }\n        pending = int256(user.amount.mul(accSushiPerShare) / ACC_SUSHI_PRECISION).sub(user.rewardDebt).toUInt256();\n    }\n\n    /// @notice Update reward variables for all pools. Be careful of gas spending!\n    /// @param pids Pool IDs of all to be updated. Make sure to update all active pools.\n    function massUpdatePools(uint256[] calldata pids) external {\n        uint256 len = pids.length;\n        for (uint256 i = 0; i < len; ++i) {\n            updatePool(pids[i]);\n        }\n    }\n\n    /// @notice Update reward variables of the given pool.\n    /// @param pid The index of the pool. See `poolInfo`.\n    /// @return pool Returns the pool that was updated.\n    function updatePool(uint256 pid) public returns (PoolInfo memory pool) {\n        pool = poolInfo[pid];\n        if (block.timestamp > pool.lastRewardTime) {\n            uint256 lpSupply = lpToken[pid].balanceOf(address(this));\n            if (lpSupply > 0) {\n                uint256 time = block.timestamp.sub(pool.lastRewardTime);\n                uint256 sushiReward = time.mul(sushiPerSecond).mul(pool.allocPoint) / totalAllocPoint;\n                pool.accSushiPerShare = pool.accSushiPerShare.add((sushiReward.mul(ACC_SUSHI_PRECISION) / lpSupply).to128());\n            }\n            pool.lastRewardTime = block.timestamp.to64();\n            poolInfo[pid] = pool;\n            emit LogUpdatePool(pid, pool.lastRewardTime, lpSupply, pool.accSushiPerShare);\n        }\n    }\n\n    /// @notice Deposit LP tokens to MCV2 for SUSHI allocation.\n    /// @param pid The index of the pool. See `poolInfo`.\n    /// @param amount LP token amount to deposit.\n    /// @param to The receiver of `amount` deposit benefit.\n    function deposit(uint256 pid, uint256 amount, address to) public {\n        PoolInfo memory pool = updatePool(pid);\n        UserInfo storage user = userInfo[pid][to];\n\n        // Effects\n        user.amount = user.amount.add(amount);\n        user.rewardDebt = user.rewardDebt.add(int256(amount.mul(pool.accSushiPerShare) / ACC_SUSHI_PRECISION));\n\n        // Interactions\n        IRewarder _rewarder = rewarder[pid];\n        if (address(_rewarder) != address(0)) {\n            _rewarder.onSushiReward(pid, to, to, 0, user.amount);\n        }\n\n        lpToken[pid].safeTransferFrom(msg.sender, address(this), amount);\n\n        emit Deposit(msg.sender, pid, amount, to);\n    }\n\n    /// @notice Withdraw LP tokens from MCV2.\n    /// @param pid The index of the pool. See `poolInfo`.\n    /// @param amount LP token amount to withdraw.\n    /// @param to Receiver of the LP tokens.\n    function withdraw(uint256 pid, uint256 amount, address to) public {\n        PoolInfo memory pool = updatePool(pid);\n        UserInfo storage user = userInfo[pid][msg.sender];\n\n        // Effects\n        user.rewardDebt = user.rewardDebt.sub(int256(amount.mul(pool.accSushiPerShare) / ACC_SUSHI_PRECISION));\n        user.amount = user.amount.sub(amount);\n\n        // Interactions\n        IRewarder _rewarder = rewarder[pid];\n        if (address(_rewarder) != address(0)) {\n            _rewarder.onSushiReward(pid, msg.sender, to, 0, user.amount);\n        }\n\n        lpToken[pid].safeTransfer(to, amount);\n\n        emit Withdraw(msg.sender, pid, amount, to);\n    }\n\n    /// @notice Harvest proceeds for transaction sender to `to`.\n    /// @param pid The index of the pool. See `poolInfo`.\n    /// @param to Receiver of SUSHI rewards.\n    function harvest(uint256 pid, address to) public {\n        PoolInfo memory pool = updatePool(pid);\n        UserInfo storage user = userInfo[pid][msg.sender];\n        int256 accumulatedSushi = int256(user.amount.mul(pool.accSushiPerShare) / ACC_SUSHI_PRECISION);\n        uint256 _pendingSushi = accumulatedSushi.sub(user.rewardDebt).toUInt256();\n\n        // Effects\n        user.rewardDebt = accumulatedSushi;\n\n        // Interactions\n        if (_pendingSushi != 0) {\n            SUSHI.safeTransfer(to, _pendingSushi);\n        }\n\n        IRewarder _rewarder = rewarder[pid];\n        if (address(_rewarder) != address(0)) {\n            _rewarder.onSushiReward( pid, msg.sender, to, _pendingSushi, user.amount);\n        }\n\n        emit Harvest(msg.sender, pid, _pendingSushi);\n    }\n\n    /// @notice Withdraw LP tokens from MCV2 and harvest proceeds for transaction sender to `to`.\n    /// @param pid The index of the pool. See `poolInfo`.\n    /// @param amount LP token amount to withdraw.\n    /// @param to Receiver of the LP tokens and SUSHI rewards.\n    function withdrawAndHarvest(uint256 pid, uint256 amount, address to) public {\n        PoolInfo memory pool = updatePool(pid);\n        UserInfo storage user = userInfo[pid][msg.sender];\n        int256 accumulatedSushi = int256(user.amount.mul(pool.accSushiPerShare) / ACC_SUSHI_PRECISION);\n        uint256 _pendingSushi = accumulatedSushi.sub(user.rewardDebt).toUInt256();\n\n        // Effects\n        user.rewardDebt = accumulatedSushi.sub(int256(amount.mul(pool.accSushiPerShare) / ACC_SUSHI_PRECISION));\n        user.amount = user.amount.sub(amount);\n\n        // Interactions\n        SUSHI.safeTransfer(to, _pendingSushi);\n\n        IRewarder _rewarder = rewarder[pid];\n        if (address(_rewarder) != address(0)) {\n            _rewarder.onSushiReward(pid, msg.sender, to, _pendingSushi, user.amount);\n        }\n\n        lpToken[pid].safeTransfer(to, amount);\n\n        emit Withdraw(msg.sender, pid, amount, to);\n        emit Harvest(msg.sender, pid, _pendingSushi);\n    }\n\n    /// @notice Withdraw without caring about rewards. EMERGENCY ONLY.\n    /// @param pid The index of the pool. See `poolInfo`.\n    /// @param to Receiver of the LP tokens.\n    function emergencyWithdraw(uint256 pid, address to) public {\n        UserInfo storage user = userInfo[pid][msg.sender];\n        uint256 amount = user.amount;\n        user.amount = 0;\n        user.rewardDebt = 0;\n\n        IRewarder _rewarder = rewarder[pid];\n        if (address(_rewarder) != address(0)) {\n            _rewarder.onSushiReward(pid, msg.sender, to, 0, 0);\n        }\n\n        // Note: transfer can fail or succeed if `amount` is zero.\n        lpToken[pid].safeTransfer(to, amount);\n        emit EmergencyWithdraw(msg.sender, pid, amount, to);\n    }\n}\n",
  "sourceMap": "1059:12884:28:-:0;;;3543:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;581:5:11;:18;;-1:-1:-1;;;;;;581:18:11;589:10;581:18;;;;;614:44;;589:10;;581:5;614:44;;581:5;;614:44;3587:14:28;;-1:-1:-1;;;;;;3587:14:28;;;1059:12884;;176:293:-1;;306:2;294:9;285:7;281:23;277:32;274:2;;;-1:-1;;312:12;274:2;98:13;;-1:-1;;;;;749:54;;889:50;;879:2;;-1:-1;;943:12;879:2;364:89;268:201;-1:-1;;;268:201::o;:::-;1059:12884:28;;;;;;;;;;;",
  "sourcePath": "contracts/MiniChefV2.sol",
  "type": "contract"
}